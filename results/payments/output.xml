<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.8.1 on win32)" generated="20210325 20:30:04.343" rpa="false">
<suite id="s1" name="Payments" source="C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\tests\payments">
<suite id="s1-s1" name="Envio" source="C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\tests\payments\envio">
<suite id="s1-s1-s1" name="Criar Envio de TED" source="C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\tests\payments\envio\Criar Envio de TED.robot">
<test id="s1-s1-s1-t1" name="Cenário: Realizar Envio de ted">
<kw name="criar holder individual ativo" library="accreditation_create_holder_active">
<kw name="conectar accreditation" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accreditation</arg>
<arg>url=${accreditation_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210325 20:30:04.984" level="INFO">Creating Session using : alias=accreditation, url=https://banking-accreditation-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210325 20:30:04.984" endtime="20210325 20:30:04.984"></status>
</kw>
<status status="PASS" starttime="20210325 20:30:04.984" endtime="20210325 20:30:04.984"></status>
</kw>
<kw name="Cpf" library="FakerLibrary">
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210325 20:30:04.985" level="INFO">${national_registration} = 149.025.368-89</msg>
<status status="PASS" starttime="20210325 20:30:04.985" endtime="20210325 20:30:04.985"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${national_registration}</arg>
<arg>.</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210325 20:30:04.985" level="INFO">${national_registration} = 149025368-89</msg>
<status status="PASS" starttime="20210325 20:30:04.985" endtime="20210325 20:30:04.985"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${national_registration}</arg>
<arg>-</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210325 20:30:04.986" level="INFO">${national_registration} = 14902536889</msg>
<status status="PASS" starttime="20210325 20:30:04.985" endtime="20210325 20:30:04.986"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${national_registration}</arg>
</arguments>
<msg timestamp="20210325 20:30:04.986" level="INFO">${national_registration} = 14902536889</msg>
<status status="PASS" starttime="20210325 20:30:04.986" endtime="20210325 20:30:04.986"></status>
</kw>
<kw name="Rg" library="FakerLibrary">
<doc>Brazilian RG, return plain numbers.
Check:  https://www.ngmatematica.com/2014/02/como-determinar-o-digito-verificador-do.html</doc>
<assign>
<var>${identity_card}</var>
</assign>
<msg timestamp="20210325 20:30:04.986" level="INFO">${identity_card} = 402857616</msg>
<status status="PASS" starttime="20210325 20:30:04.986" endtime="20210325 20:30:04.986"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${identity_card}</arg>
</arguments>
<msg timestamp="20210325 20:30:04.987" level="INFO">${identity_card} = 402857616</msg>
<status status="PASS" starttime="20210325 20:30:04.986" endtime="20210325 20:30:04.987"></status>
</kw>
<kw name="criar holder individual" library="accreditation_post_holder_individual">
<arguments>
<arg>holder_type=individual</arg>
<arg>holder_name=${holder_name}</arg>
<arg>email=${email}</arg>
<arg>national_registration=${national_registration}</arg>
<arg>revenue=${revenue}</arg>
<arg>birthday=${birthday}</arg>
<arg>mothers_name=${mothers_name}</arg>
<arg>identity_card=${identity_card}</arg>
<arg>pep=false</arg>
<arg>cbo=${cbo}</arg>
</arguments>
<kw name="conectar accreditation" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accreditation</arg>
<arg>url=${accreditation_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210325 20:30:04.988" level="INFO">Creating Session using : alias=accreditation, url=https://banking-accreditation-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210325 20:30:04.988" endtime="20210325 20:30:04.988"></status>
</kw>
<status status="PASS" starttime="20210325 20:30:04.987" endtime="20210325 20:30:04.988"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_type}</arg>
</arguments>
<msg timestamp="20210325 20:30:04.989" level="INFO">${holder_type} = individual</msg>
<status status="PASS" starttime="20210325 20:30:04.988" endtime="20210325 20:30:04.989"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_name}</arg>
</arguments>
<msg timestamp="20210325 20:30:04.989" level="INFO">${holder_name} = Holder de teste</msg>
<status status="PASS" starttime="20210325 20:30:04.989" endtime="20210325 20:30:04.989"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210325 20:30:04.990" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210325 20:30:04.989" endtime="20210325 20:30:04.990"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "${holder_type}",</arg>
<arg>"name": "${holder_name}",</arg>
<arg>"email": "${email}",</arg>
<arg>"national_registration": "${national_registration}",</arg>
<arg>"revenue": ${revenue},</arg>
<arg>"birthday": "${birthday}",</arg>
<arg>"mothers_name": "${mothers_name}",</arg>
<arg>"identity_card": "${identity_card}",</arg>
<arg>"pep": false,</arg>
<arg>"cbo": ${cbo}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210325 20:30:04.990" level="INFO">${body} = { "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "14902536889", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder",...</msg>
<status status="PASS" starttime="20210325 20:30:04.990" endtime="20210325 20:30:04.990"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210325 20:30:04.991" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "14902536889", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder", "identity_card": "402857616", "pep": false, "cbo": 821450 } 
json=None</msg>
<msg timestamp="20210325 20:30:05.709" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210325 20:30:04.990" endtime="20210325 20:30:05.709"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210325 20:30:05.712" level="INFO">{'id': 'a64163a05b4c45999d0f74adf977d4d6', 'name': 'Holder de teste', 'revenue': 5500.0, 'email': 'teste@teste.com.br', 'status': 'waiting_info_and_documents', 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'marketplace_name': 'Marketplace de Teste', 'created_at': '2021-03-25T20:30:05.78594', 'updated_at': '2021-03-25T20:30:05.785941', 'type': 'individual', 'national_registration': '14902536889', 'birthday': '1988-04-23', 'mothers_name': 'Mãe do Holder', 'identity_card': '402857616', 'pep': False, 'cbo': '821450', '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/a64163a05b4c45999d0f74adf977d4d6', 'type': 'GET'}, 'phones': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/a64163a05b4c45999d0f74adf977d4d6/phones', 'type': 'GET'}, 'addresses': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/a64163a05b4c45999d0f74adf977d4d6/addresses', 'type': 'GET'}, 'documents': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/a64163a05b4c45999d0f74adf977d4d6/documents', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210325 20:30:05.710" endtime="20210325 20:30:05.712"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210325 20:30:05.714" level="INFO">6127b1476a39eda8</msg>
<status status="PASS" starttime="20210325 20:30:05.713" endtime="20210325 20:30:05.714"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${body}</arg>
</arguments>
<msg timestamp="20210325 20:30:05.715" level="INFO">{ "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "14902536889", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder", "identity_card": "402857616", "pep": false, "cbo": 821450 }</msg>
<status status="PASS" starttime="20210325 20:30:05.715" endtime="20210325 20:30:05.715"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210325 20:30:05.717" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210325 20:30:05.716" endtime="20210325 20:30:05.717"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${holder_external_key}</var>
</assign>
<msg timestamp="20210325 20:30:05.719" level="INFO">${holder_external_key} = a64163a05b4c45999d0f74adf977d4d6</msg>
<status status="PASS" starttime="20210325 20:30:05.717" endtime="20210325 20:30:05.719"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_external_key}</arg>
</arguments>
<msg timestamp="20210325 20:30:05.720" level="INFO">${holder_external_key} = a64163a05b4c45999d0f74adf977d4d6</msg>
<status status="PASS" starttime="20210325 20:30:05.719" endtime="20210325 20:30:05.720"></status>
</kw>
<status status="PASS" starttime="20210325 20:30:04.987" endtime="20210325 20:30:05.721"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_name}</arg>
</arguments>
<msg timestamp="20210325 20:30:05.722" level="INFO">${holder_name} = Holder de teste</msg>
<status status="PASS" starttime="20210325 20:30:05.721" endtime="20210325 20:30:05.722"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210325 20:30:05.723" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210325 20:30:05.723" endtime="20210325 20:30:05.723"></status>
</kw>
<kw name="criar holder phone" library="accreditation_post_holder_phone">
<arguments>
<arg>21</arg>
<arg>51</arg>
<arg>996221236</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210325 20:30:05.725" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210325 20:30:05.724" endtime="20210325 20:30:05.725"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"area_code": "${phone_area_code}",</arg>
<arg>"country_code": "${phone_country_code}",</arg>
<arg>"number": "${phone_number}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210325 20:30:05.726" level="INFO">${body} = { "area_code": "21", "country_code": "51", "number": "996221236" }</msg>
<status status="PASS" starttime="20210325 20:30:05.725" endtime="20210325 20:30:05.726"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/phones</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210325 20:30:05.726" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/a64163a05b4c45999d0f74adf977d4d6/phones, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "area_code": "21", "country_code": "51", "number": "996221236" } 
json=None</msg>
<msg timestamp="20210325 20:30:06.148" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210325 20:30:05.726" endtime="20210325 20:30:06.148"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210325 20:30:06.151" level="INFO">{'id': '3d7526caa0944936a2ae45f482eec9ba', 'area_code': '21', 'country_code': '51', 'number': '996221236', 'main': True, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/a64163a05b4c45999d0f74adf977d4d6/phones/3d7526caa0944936a2ae45f482eec9ba', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/a64163a05b4c45999d0f74adf977d4d6', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210325 20:30:06.149" endtime="20210325 20:30:06.151"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210325 20:30:06.152" level="INFO">a6296b0b63b43102</msg>
<status status="PASS" starttime="20210325 20:30:06.152" endtime="20210325 20:30:06.152"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210325 20:30:06.154" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210325 20:30:06.153" endtime="20210325 20:30:06.154"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${phone_external_key}</var>
</assign>
<msg timestamp="20210325 20:30:06.156" level="INFO">${phone_external_key} = 3d7526caa0944936a2ae45f482eec9ba</msg>
<status status="PASS" starttime="20210325 20:30:06.154" endtime="20210325 20:30:06.156"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${phone_external_key}</arg>
</arguments>
<msg timestamp="20210325 20:30:06.157" level="INFO">${phone_external_key} = 3d7526caa0944936a2ae45f482eec9ba</msg>
<status status="PASS" starttime="20210325 20:30:06.156" endtime="20210325 20:30:06.157"></status>
</kw>
<status status="PASS" starttime="20210325 20:30:05.724" endtime="20210325 20:30:06.157"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210325 20:30:06.159" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210325 20:30:06.158" endtime="20210325 20:30:06.159"></status>
</kw>
<kw name="criar holder address" library="accreditation_post_holder_address">
<arguments>
<arg>Rio de Janeiro</arg>
<arg>Rio de Janeiro</arg>
<arg>Brasil</arg>
<arg>Bairro de Testes</arg>
<arg>Rua de Testes</arg>
<arg>90</arg>
<arg>apto 200</arg>
<arg>21550987</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210325 20:30:06.161" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210325 20:30:06.160" endtime="20210325 20:30:06.161"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"city": "${city}",</arg>
<arg>"state": "${state}",</arg>
<arg>"country": "${country}",</arg>
<arg>"neighborhood": "${neighborhood}",</arg>
<arg>"street": "${street}",</arg>
<arg>"number": "${number}",</arg>
<arg>"complement": "${complement}",</arg>
<arg>"postal_code": "${postal_code}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210325 20:30:06.162" level="INFO">${body} = { "city": "Rio de Janeiro", "state": "Rio de Janeiro", "country": "Brasil", "neighborhood": "Bairro de Testes", "street": "Rua de Testes", "number": "90", "complement": "apto 200", "postal_code": "215...</msg>
<status status="PASS" starttime="20210325 20:30:06.161" endtime="20210325 20:30:06.163"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/addresses</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210325 20:30:06.163" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/a64163a05b4c45999d0f74adf977d4d6/addresses, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "city": "Rio de Janeiro", "state": "Rio de Janeiro", "country": "Brasil", "neighborhood": "Bairro de Testes", "street": "Rua de Testes", "number": "90", "complement": "apto 200", "postal_code": "21550987" } 
json=None</msg>
<msg timestamp="20210325 20:30:06.414" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210325 20:30:06.163" endtime="20210325 20:30:06.414"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210325 20:30:06.414" level="INFO">{'id': '50fa97477e1f4a3e86112157f7d0bc67', 'street': 'Rua de Testes', 'number': '90', 'city': 'Rio de Janeiro', 'complement': 'apto 200', 'state': 'Rio de Janeiro', 'neighborhood': 'Bairro de Testes', 'postal_code': '21550987', 'country': 'Brasil', 'main': True, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/a64163a05b4c45999d0f74adf977d4d6/addresses/50fa97477e1f4a3e86112157f7d0bc67', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/a64163a05b4c45999d0f74adf977d4d6', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210325 20:30:06.414" endtime="20210325 20:30:06.414"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210325 20:30:06.415" level="INFO">2111f56ac73dc0e8</msg>
<status status="PASS" starttime="20210325 20:30:06.415" endtime="20210325 20:30:06.415"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210325 20:30:06.416" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210325 20:30:06.416" endtime="20210325 20:30:06.416"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${address_external_key}</var>
</assign>
<msg timestamp="20210325 20:30:06.416" level="INFO">${address_external_key} = 50fa97477e1f4a3e86112157f7d0bc67</msg>
<status status="PASS" starttime="20210325 20:30:06.416" endtime="20210325 20:30:06.416"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${address_external_key}</arg>
</arguments>
<msg timestamp="20210325 20:30:06.417" level="INFO">${address_external_key} = 50fa97477e1f4a3e86112157f7d0bc67</msg>
<status status="PASS" starttime="20210325 20:30:06.416" endtime="20210325 20:30:06.417"></status>
</kw>
<status status="PASS" starttime="20210325 20:30:06.160" endtime="20210325 20:30:06.417"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210325 20:30:06.417" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210325 20:30:06.417" endtime="20210325 20:30:06.418"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>SELFIE</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210325 20:30:06.418" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210325 20:30:06.418" endtime="20210325 20:30:06.418"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>C:\\Users\\vinicius.trindade\\banking_continuous_testing\\banking_continuous_testing\\apis\\accreditation\\documents\\holder_documents\\post.${/}..${/}..${/}..${/}..${/}..${/}images${/}accreditation${/}image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210325 20:30:06.419" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210325 20:30:06.420" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210325 20:30:06.419" endtime="20210325 20:30:06.420"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210325 20:30:06.422" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/a64163a05b4c45999d0f74adf977d4d6/documents?type=SELFIE, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210325 20:30:06.762" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210325 20:30:06.421" endtime="20210325 20:30:06.762"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210325 20:30:06.763" level="INFO">{'id': 'ae2ccebef68e488a8a776dc380ddb372', 'document_type': 'selfie', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/a64163a05b4c45999d0f74adf977d4d6/documents/ae2ccebef68e488a8a776dc380ddb372', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/a64163a05b4c45999d0f74adf977d4d6', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/a64163a05b4c45999d0f74adf977d4d6/documents/ae2ccebef68e488a8a776dc380ddb372/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210325 20:30:06.763" endtime="20210325 20:30:06.763"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210325 20:30:06.763" level="INFO">681c26816b5e06fc</msg>
<status status="PASS" starttime="20210325 20:30:06.763" endtime="20210325 20:30:06.763"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210325 20:30:06.764" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210325 20:30:06.764" endtime="20210325 20:30:06.764"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210325 20:30:06.765" level="INFO">${document_external_key} = ae2ccebef68e488a8a776dc380ddb372</msg>
<status status="PASS" starttime="20210325 20:30:06.764" endtime="20210325 20:30:06.765"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210325 20:30:06.765" level="INFO">${document_external_key} = ae2ccebef68e488a8a776dc380ddb372</msg>
<status status="PASS" starttime="20210325 20:30:06.765" endtime="20210325 20:30:06.765"></status>
</kw>
<status status="PASS" starttime="20210325 20:30:06.418" endtime="20210325 20:30:06.766"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210325 20:30:06.766" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210325 20:30:06.766" endtime="20210325 20:30:06.766"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>RG_FRENTE</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210325 20:30:06.767" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210325 20:30:06.767" endtime="20210325 20:30:06.767"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>C:\\Users\\vinicius.trindade\\banking_continuous_testing\\banking_continuous_testing\\apis\\accreditation\\documents\\holder_documents\\post.${/}..${/}..${/}..${/}..${/}..${/}images${/}accreditation${/}image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210325 20:30:06.768" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210325 20:30:06.769" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210325 20:30:06.768" endtime="20210325 20:30:06.769"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210325 20:30:06.770" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/a64163a05b4c45999d0f74adf977d4d6/documents?type=RG_FRENTE, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210325 20:30:07.086" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210325 20:30:06.769" endtime="20210325 20:30:07.086"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210325 20:30:07.088" level="INFO">{'id': '0d2d48bb09a646759232a227049f67e0', 'document_type': 'rg_frente', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/a64163a05b4c45999d0f74adf977d4d6/documents/0d2d48bb09a646759232a227049f67e0', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/a64163a05b4c45999d0f74adf977d4d6', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/a64163a05b4c45999d0f74adf977d4d6/documents/0d2d48bb09a646759232a227049f67e0/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210325 20:30:07.087" endtime="20210325 20:30:07.089"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210325 20:30:07.090" level="INFO">15f9723a4edb0ec3</msg>
<status status="PASS" starttime="20210325 20:30:07.090" endtime="20210325 20:30:07.091"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210325 20:30:07.092" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210325 20:30:07.091" endtime="20210325 20:30:07.092"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210325 20:30:07.094" level="INFO">${document_external_key} = 0d2d48bb09a646759232a227049f67e0</msg>
<status status="PASS" starttime="20210325 20:30:07.093" endtime="20210325 20:30:07.094"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210325 20:30:07.095" level="INFO">${document_external_key} = 0d2d48bb09a646759232a227049f67e0</msg>
<status status="PASS" starttime="20210325 20:30:07.094" endtime="20210325 20:30:07.095"></status>
</kw>
<status status="PASS" starttime="20210325 20:30:06.766" endtime="20210325 20:30:07.095"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210325 20:30:07.097" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210325 20:30:07.096" endtime="20210325 20:30:07.097"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>RG_VERSO</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210325 20:30:07.099" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210325 20:30:07.098" endtime="20210325 20:30:07.099"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>C:\\Users\\vinicius.trindade\\banking_continuous_testing\\banking_continuous_testing\\apis\\accreditation\\documents\\holder_documents\\post.${/}..${/}..${/}..${/}..${/}..${/}images${/}accreditation${/}image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210325 20:30:07.100" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210325 20:30:07.102" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210325 20:30:07.099" endtime="20210325 20:30:07.102"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210325 20:30:07.104" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/a64163a05b4c45999d0f74adf977d4d6/documents?type=RG_VERSO, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210325 20:30:07.445" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210325 20:30:07.103" endtime="20210325 20:30:07.445"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210325 20:30:07.445" level="INFO">{'id': '57783c8c75f342d58e8d62f813312cbb', 'document_type': 'rg_verso', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/a64163a05b4c45999d0f74adf977d4d6/documents/57783c8c75f342d58e8d62f813312cbb', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/a64163a05b4c45999d0f74adf977d4d6', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/a64163a05b4c45999d0f74adf977d4d6/documents/57783c8c75f342d58e8d62f813312cbb/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210325 20:30:07.445" endtime="20210325 20:30:07.446"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210325 20:30:07.446" level="INFO">c3f40ed90f844fb1</msg>
<status status="PASS" starttime="20210325 20:30:07.446" endtime="20210325 20:30:07.446"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210325 20:30:07.446" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210325 20:30:07.446" endtime="20210325 20:30:07.446"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210325 20:30:07.447" level="INFO">${document_external_key} = 57783c8c75f342d58e8d62f813312cbb</msg>
<status status="PASS" starttime="20210325 20:30:07.447" endtime="20210325 20:30:07.447"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210325 20:30:07.447" level="INFO">${document_external_key} = 57783c8c75f342d58e8d62f813312cbb</msg>
<status status="PASS" starttime="20210325 20:30:07.447" endtime="20210325 20:30:07.447"></status>
</kw>
<status status="PASS" starttime="20210325 20:30:07.097" endtime="20210325 20:30:07.447"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210325 20:30:07.448" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210325 20:30:07.448" endtime="20210325 20:30:07.448"></status>
</kw>
<kw name="solicitar aprovação do holder" library="accreditation_request_approval">
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210325 20:30:07.448" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210325 20:30:07.448" endtime="20210325 20:30:07.448"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/approval</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210325 20:30:07.449" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/a64163a05b4c45999d0f74adf977d4d6/approval, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data=None 
json=None</msg>
<msg timestamp="20210325 20:30:08.112" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210325 20:30:07.449" endtime="20210325 20:30:08.112"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210325 20:30:08.112" level="INFO">{'message': 'Approval request accepted successfully. Processing analysis'}</msg>
<status status="PASS" starttime="20210325 20:30:08.112" endtime="20210325 20:30:08.112"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210325 20:30:08.113" level="INFO">71fe348fed71d0b3</msg>
<status status="PASS" starttime="20210325 20:30:08.113" endtime="20210325 20:30:08.113"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210325 20:30:08.114" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210325 20:30:08.113" endtime="20210325 20:30:08.114"></status>
</kw>
<status status="PASS" starttime="20210325 20:30:07.448" endtime="20210325 20:30:08.114"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210325 20:30:08.114" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210325 20:30:08.114" endtime="20210325 20:30:08.114"></status>
</kw>
<kw name="recebendo notificação de aprovação" library="accreditation_risk_notification">
<kw name="Uuid 4" library="FakerLibrary">
<doc>Generates a random UUID4 string.
:param cast_to: Specify what type the UUID should be cast to. Default is `str`
:type cast_to: callable</doc>
<assign>
<var>${assessment_id}</var>
</assign>
<msg timestamp="20210325 20:30:08.115" level="INFO">${assessment_id} = b9bed7f5-2f05-48c4-8a04-a33c00e19852</msg>
<status status="PASS" starttime="20210325 20:30:08.115" endtime="20210325 20:30:08.115"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>year</arg>
</arguments>
<assign>
<var>${year}</var>
</assign>
<msg timestamp="20210325 20:30:08.117" level="INFO">${year} = 2021</msg>
<status status="PASS" starttime="20210325 20:30:08.116" endtime="20210325 20:30:08.117"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>month</arg>
</arguments>
<assign>
<var>${month}</var>
</assign>
<msg timestamp="20210325 20:30:08.117" level="INFO">${month} = 03</msg>
<status status="PASS" starttime="20210325 20:30:08.117" endtime="20210325 20:30:08.117"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>day</arg>
</arguments>
<assign>
<var>${day}</var>
</assign>
<msg timestamp="20210325 20:30:08.118" level="INFO">${day} = 25</msg>
<status status="PASS" starttime="20210325 20:30:08.118" endtime="20210325 20:30:08.118"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210325 20:30:08.118" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210325 20:30:08.118" endtime="20210325 20:30:08.118"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "risk.assessment.result",</arg>
<arg>"resource": "business.holder",</arg>
<arg>"created_at": "${year}-${month}-${day} 15:28:56.747Z",</arg>
<arg>"marketplace_id": "${marketplace_external_key}",</arg>
<arg>"object": {</arg>
<arg>"result": "APPROVED",</arg>
<arg>"holder_id": "${holder_external_key}",</arg>
<arg>"applicant_id": "${application_external_key}",</arg>
<arg>"assessment_id": "${assessment_id}"</arg>
<arg>}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210325 20:30:08.119" level="INFO">${body} = { "type": "risk.assessment.result", "resource": "business.holder", "created_at": "2021-03-25 15:28:56.747Z", "marketplace_id": "f71a8951368a4cc085cf7875ff44e61c", "object": { "result": "APPROVED", "ho...</msg>
<status status="PASS" starttime="20210325 20:30:08.118" endtime="20210325 20:30:08.119"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/admin/internal_operation/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/registration/approval</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210325 20:30:08.119" level="INFO">POST Request using : uri=/admin/internal_operation/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/a64163a05b4c45999d0f74adf977d4d6/registration/approval, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "risk.assessment.result", "resource": "business.holder", "created_at": "2021-03-25 15:28:56.747Z", "marketplace_id": "f71a8951368a4cc085cf7875ff44e61c", "object": { "result": "APPROVED", "holder_id": "a64163a05b4c45999d0f74adf977d4d6", "applicant_id": "bcc25a6751c14b52af1340d40dba78c5", "assessment_id": "b9bed7f5-2f05-48c4-8a04-a33c00e19852" } } 
json=None</msg>
<msg timestamp="20210325 20:30:08.344" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210325 20:30:08.119" endtime="20210325 20:30:08.344"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210325 20:30:08.346" level="INFO">{'message': 'Holder approved successfully'}</msg>
<status status="PASS" starttime="20210325 20:30:08.345" endtime="20210325 20:30:08.347"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210325 20:30:08.349" level="INFO">ac7ea5af78fd3d16</msg>
<status status="PASS" starttime="20210325 20:30:08.347" endtime="20210325 20:30:08.349"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210325 20:30:08.351" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210325 20:30:08.350" endtime="20210325 20:30:08.351"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210325 20:30:08.353" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210325 20:30:08.352" endtime="20210325 20:30:08.353"></status>
</kw>
<status status="PASS" starttime="20210325 20:30:08.115" endtime="20210325 20:30:08.353"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210325 20:30:08.354" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210325 20:30:08.354" endtime="20210325 20:30:08.355"></status>
</kw>
<kw name="buscar account por holder" library="accounts_get_accounts_by_holder">
<kw name="conectar accounts" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accounts</arg>
<arg>url=${account_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210325 20:30:08.358" level="INFO">Creating Session using : alias=accounts, url=https://banking-accounts-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210325 20:30:08.357" endtime="20210325 20:30:08.358"></status>
</kw>
<status status="PASS" starttime="20210325 20:30:08.356" endtime="20210325 20:30:08.359"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accounts</arg>
<arg>/marketplaces/${marketplace_external_key}/holders/${holder_external_key}/accounts</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210325 20:30:08.360" level="INFO">GET Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/holders/a64163a05b4c45999d0f74adf977d4d6/accounts, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210325 20:30:09.011" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210325 20:30:08.359" endtime="20210325 20:30:09.012"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210325 20:30:09.012" level="INFO">{'items': [{'id': '5c1bb7c43da247739e1b2507c5c5bb65', 'holder': 'a64163a05b4c45999d0f74adf977d4d6', 'balance': '0.00', 'currency': 'BRL', 'routing_number': '001', 'number': '5959440294', 'status': 'active', 'metadata': {}, 'created_at': '2021-03-25T23:30:08.431054', 'updated_at': '2021-03-25T23:30:08.431054', 'primary': True, 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'uri': '/v2/marketplaces/f71a8951368a4cc085cf7875ff44e61c/accounts/5c1bb7c43da247739e1b2507c5c5bb65', 'resource': 'payment_account'}], 'has_more': False, 'limit': 100, 'total_pages': 1, 'page': 1, 'offset': 0, 'total': '1', 'query_count': '1'}</msg>
<status status="PASS" starttime="20210325 20:30:09.012" endtime="20210325 20:30:09.012"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210325 20:30:09.013" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210325 20:30:09.012" endtime="20210325 20:30:09.013"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["id"]}</arg>
</arguments>
<assign>
<var>${account_external_key}</var>
</assign>
<msg timestamp="20210325 20:30:09.013" level="INFO">${account_external_key} = 5c1bb7c43da247739e1b2507c5c5bb65</msg>
<status status="PASS" starttime="20210325 20:30:09.013" endtime="20210325 20:30:09.013"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_external_key}</arg>
</arguments>
<msg timestamp="20210325 20:30:09.014" level="INFO">${account_external_key} = 5c1bb7c43da247739e1b2507c5c5bb65</msg>
<status status="PASS" starttime="20210325 20:30:09.014" endtime="20210325 20:30:09.014"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["number"]}</arg>
</arguments>
<assign>
<var>${account_number}</var>
</assign>
<msg timestamp="20210325 20:30:09.014" level="INFO">${account_number} = 5959440294</msg>
<status status="PASS" starttime="20210325 20:30:09.014" endtime="20210325 20:30:09.014"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_number}</arg>
</arguments>
<msg timestamp="20210325 20:30:09.015" level="INFO">${account_number} = 5959440294</msg>
<status status="PASS" starttime="20210325 20:30:09.015" endtime="20210325 20:30:09.015"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["routing_number"]}</arg>
</arguments>
<assign>
<var>${account_routing_number}</var>
</assign>
<msg timestamp="20210325 20:30:09.016" level="INFO">${account_routing_number} = 001</msg>
<status status="PASS" starttime="20210325 20:30:09.015" endtime="20210325 20:30:09.016"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_routing_number}</arg>
</arguments>
<msg timestamp="20210325 20:30:09.016" level="INFO">${account_routing_number} = 001</msg>
<status status="PASS" starttime="20210325 20:30:09.016" endtime="20210325 20:30:09.016"></status>
</kw>
<status status="PASS" starttime="20210325 20:30:08.355" endtime="20210325 20:30:09.016"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210325 20:30:09.017" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210325 20:30:09.016" endtime="20210325 20:30:09.017"></status>
</kw>
<status status="PASS" starttime="20210325 20:30:04.983" endtime="20210325 20:30:09.017"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${holder_external_key}</arg>
</arguments>
<assign>
<var>${holder_send_ted}</var>
</assign>
<msg timestamp="20210325 20:30:09.018" level="INFO">${holder_send_ted} = a64163a05b4c45999d0f74adf977d4d6</msg>
<status status="PASS" starttime="20210325 20:30:09.018" endtime="20210325 20:30:09.018"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${account_external_key}</arg>
</arguments>
<assign>
<var>${account_send_ted}</var>
</assign>
<msg timestamp="20210325 20:30:09.019" level="INFO">${account_send_ted} = 5c1bb7c43da247739e1b2507c5c5bb65</msg>
<status status="PASS" starttime="20210325 20:30:09.019" endtime="20210325 20:30:09.019"></status>
</kw>
<kw name="gerar saldo para account" library="account_generate_balance">
<arguments>
<arg>${account_send_ted}</arg>
</arguments>
<kw name="Uuid 4" library="FakerLibrary">
<doc>Generates a random UUID4 string.
:param cast_to: Specify what type the UUID should be cast to. Default is `str`
:type cast_to: callable</doc>
<assign>
<var>${uuid}</var>
</assign>
<msg timestamp="20210325 20:30:09.020" level="INFO">${uuid} = ace2f463-e3c2-4e35-8592-d85a168aa06d</msg>
<status status="PASS" starttime="20210325 20:30:09.020" endtime="20210325 20:30:09.020"></status>
</kw>
<kw name="conectar accounts" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accounts</arg>
<arg>url=${account_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210325 20:30:09.021" level="INFO">Creating Session using : alias=accounts, url=https://banking-accounts-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210325 20:30:09.021" endtime="20210325 20:30:09.021"></status>
</kw>
<status status="PASS" starttime="20210325 20:30:09.020" endtime="20210325 20:30:09.021"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210325 20:30:09.022" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210325 20:30:09.021" endtime="20210325 20:30:09.022"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"operations": [</arg>
<arg>{</arg>
<arg>"amount": 9000000000000,</arg>
<arg>"authorization_code": "${uuid}",</arg>
<arg>"transaction_id": "${uuid}",</arg>
<arg>"id": "${uuid}",</arg>
<arg>"id_checking_account": "${account_external_key}",</arg>
<arg>"transfer_date": "2020-02-20T20:58:06.510Z",</arg>
<arg>"fee": 0,</arg>
<arg>"description": "Teste",</arg>
<arg>"object_type": "transfer",</arg>
<arg>"object_id": "${uuid}",</arg>
<arg>"dflag": "ACTIVE",</arg>
<arg>"created_at": "2019-10-14T20:58:06.510Z",</arg>
<arg>"type": "Transfer"</arg>
<arg>}</arg>
<arg>],</arg>
<arg>"reference_id": "Criando saldo na account"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210325 20:30:09.022" level="INFO">${body} = { "operations": [ { "amount": 9000000000000, "authorization_code": "ace2f463-e3c2-4e35-8592-d85a168aa06d", "transaction_id": "ace2f463-e3c2-4e35-8592-d85a168aa06d", "id": "ace2f463-e3c2-4e35-8592-d85a...</msg>
<status status="PASS" starttime="20210325 20:30:09.022" endtime="20210325 20:30:09.022"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accounts</arg>
<arg>/admin/internal_operation/authorization/${uuid}</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210325 20:30:09.023" level="INFO">POST Request using : uri=/admin/internal_operation/authorization/ace2f463-e3c2-4e35-8592-d85a168aa06d, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "operations": [ { "amount": 9000000000000, "authorization_code": "ace2f463-e3c2-4e35-8592-d85a168aa06d", "transaction_id": "ace2f463-e3c2-4e35-8592-d85a168aa06d", "id": "ace2f463-e3c2-4e35-8592-d85a168aa06d", "id_checking_account": "5c1bb7c43da247739e1b2507c5c5bb65", "transfer_date": "2020-02-20T20:58:06.510Z", "fee": 0, "description": "Teste", "object_type": "transfer", "object_id": "ace2f463-e3c2-4e35-8592-d85a168aa06d", "dflag": "ACTIVE", "created_at": "2019-10-14T20:58:06.510Z", "type": "Transfer" } ], "reference_id": "Criando saldo na account" } 
json=None</msg>
<msg timestamp="20210325 20:30:09.684" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210325 20:30:09.023" endtime="20210325 20:30:09.684"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.status_code}' == 200</arg>
<arg>Log</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210325 20:30:09.685" endtime="20210325 20:30:09.686"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.status_code}' == 200</arg>
<arg>Log</arg>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<status status="PASS" starttime="20210325 20:30:09.687" endtime="20210325 20:30:09.687"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.status_code}' == 200</arg>
<arg>Log</arg>
<arg>${response.status_code}</arg>
</arguments>
<status status="PASS" starttime="20210325 20:30:09.688" endtime="20210325 20:30:09.689"></status>
</kw>
<status status="PASS" starttime="20210325 20:30:09.020" endtime="20210325 20:30:09.689"></status>
</kw>
<kw name="buscar account balance" library="account_get_balance">
<arguments>
<arg>marketplace_external_key=${marketplace_external_key}</arg>
<arg>account_external_key=${account_send_ted}</arg>
</arguments>
<kw name="conectar accounts" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accounts</arg>
<arg>url=${account_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210325 20:30:09.694" level="INFO">Creating Session using : alias=accounts, url=https://banking-accounts-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210325 20:30:09.693" endtime="20210325 20:30:09.694"></status>
</kw>
<status status="PASS" starttime="20210325 20:30:09.692" endtime="20210325 20:30:09.695"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accounts</arg>
<arg>/marketplaces/${marketplace_external_key}/accounts/${account_external_key}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210325 20:30:09.696" level="INFO">GET Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/accounts/5c1bb7c43da247739e1b2507c5c5bb65, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210325 20:30:10.386" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210325 20:30:09.695" endtime="20210325 20:30:10.386"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210325 20:30:10.387" level="INFO">{'id': '5c1bb7c43da247739e1b2507c5c5bb65', 'holder': 'a64163a05b4c45999d0f74adf977d4d6', 'balance': '9000000.00', 'currency': 'BRL', 'routing_number': '001', 'number': '5959440294', 'status': 'active', 'metadata': {}, 'created_at': '2021-03-25T23:30:08.431054', 'updated_at': '2021-03-25T23:30:09.809292', 'primary': True, 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'uri': '/v2/marketplaces/f71a8951368a4cc085cf7875ff44e61c/accounts/5c1bb7c43da247739e1b2507c5c5bb65', 'resource': 'payment_account'}</msg>
<status status="PASS" starttime="20210325 20:30:10.387" endtime="20210325 20:30:10.387"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210325 20:30:10.388" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210325 20:30:10.387" endtime="20210325 20:30:10.388"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["balance"]}</arg>
</arguments>
<assign>
<var>${account_balance}</var>
</assign>
<msg timestamp="20210325 20:30:10.389" level="INFO">${account_balance} = 9000000.00</msg>
<status status="PASS" starttime="20210325 20:30:10.388" endtime="20210325 20:30:10.389"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_balance}</arg>
</arguments>
<msg timestamp="20210325 20:30:10.389" level="INFO">${account_balance} = 9000000.00</msg>
<status status="PASS" starttime="20210325 20:30:10.389" endtime="20210325 20:30:10.389"></status>
</kw>
<status status="PASS" starttime="20210325 20:30:09.691" endtime="20210325 20:30:10.389"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${account_balance}</arg>
</arguments>
<assign>
<var>${account_sender_balance_inicial}</var>
</assign>
<msg timestamp="20210325 20:30:10.390" level="INFO">${account_sender_balance_inicial} = 9000000.00</msg>
<status status="PASS" starttime="20210325 20:30:10.390" endtime="20210325 20:30:10.390"></status>
</kw>
<kw name="criar holder individual ativo" library="accreditation_create_holder_active">
<kw name="conectar accreditation" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accreditation</arg>
<arg>url=${accreditation_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210325 20:30:10.392" level="INFO">Creating Session using : alias=accreditation, url=https://banking-accreditation-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210325 20:30:10.391" endtime="20210325 20:30:10.392"></status>
</kw>
<status status="PASS" starttime="20210325 20:30:10.391" endtime="20210325 20:30:10.392"></status>
</kw>
<kw name="Cpf" library="FakerLibrary">
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210325 20:30:10.393" level="INFO">${national_registration} = 167.502.849-49</msg>
<status status="PASS" starttime="20210325 20:30:10.392" endtime="20210325 20:30:10.393"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${national_registration}</arg>
<arg>.</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210325 20:30:10.393" level="INFO">${national_registration} = 167502849-49</msg>
<status status="PASS" starttime="20210325 20:30:10.393" endtime="20210325 20:30:10.393"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${national_registration}</arg>
<arg>-</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210325 20:30:10.394" level="INFO">${national_registration} = 16750284949</msg>
<status status="PASS" starttime="20210325 20:30:10.393" endtime="20210325 20:30:10.394"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${national_registration}</arg>
</arguments>
<msg timestamp="20210325 20:30:10.394" level="INFO">${national_registration} = 16750284949</msg>
<status status="PASS" starttime="20210325 20:30:10.394" endtime="20210325 20:30:10.394"></status>
</kw>
<kw name="Rg" library="FakerLibrary">
<doc>Brazilian RG, return plain numbers.
Check:  https://www.ngmatematica.com/2014/02/como-determinar-o-digito-verificador-do.html</doc>
<assign>
<var>${identity_card}</var>
</assign>
<msg timestamp="20210325 20:30:10.395" level="INFO">${identity_card} = 172046531</msg>
<status status="PASS" starttime="20210325 20:30:10.395" endtime="20210325 20:30:10.395"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${identity_card}</arg>
</arguments>
<msg timestamp="20210325 20:30:10.395" level="INFO">${identity_card} = 172046531</msg>
<status status="PASS" starttime="20210325 20:30:10.395" endtime="20210325 20:30:10.395"></status>
</kw>
<kw name="criar holder individual" library="accreditation_post_holder_individual">
<arguments>
<arg>holder_type=individual</arg>
<arg>holder_name=${holder_name}</arg>
<arg>email=${email}</arg>
<arg>national_registration=${national_registration}</arg>
<arg>revenue=${revenue}</arg>
<arg>birthday=${birthday}</arg>
<arg>mothers_name=${mothers_name}</arg>
<arg>identity_card=${identity_card}</arg>
<arg>pep=false</arg>
<arg>cbo=${cbo}</arg>
</arguments>
<kw name="conectar accreditation" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accreditation</arg>
<arg>url=${accreditation_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210325 20:30:10.397" level="INFO">Creating Session using : alias=accreditation, url=https://banking-accreditation-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210325 20:30:10.397" endtime="20210325 20:30:10.397"></status>
</kw>
<status status="PASS" starttime="20210325 20:30:10.397" endtime="20210325 20:30:10.398"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_type}</arg>
</arguments>
<msg timestamp="20210325 20:30:10.399" level="INFO">${holder_type} = individual</msg>
<status status="PASS" starttime="20210325 20:30:10.399" endtime="20210325 20:30:10.399"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_name}</arg>
</arguments>
<msg timestamp="20210325 20:30:10.399" level="INFO">${holder_name} = Holder de teste</msg>
<status status="PASS" starttime="20210325 20:30:10.399" endtime="20210325 20:30:10.399"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210325 20:30:10.399" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210325 20:30:10.399" endtime="20210325 20:30:10.399"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "${holder_type}",</arg>
<arg>"name": "${holder_name}",</arg>
<arg>"email": "${email}",</arg>
<arg>"national_registration": "${national_registration}",</arg>
<arg>"revenue": ${revenue},</arg>
<arg>"birthday": "${birthday}",</arg>
<arg>"mothers_name": "${mothers_name}",</arg>
<arg>"identity_card": "${identity_card}",</arg>
<arg>"pep": false,</arg>
<arg>"cbo": ${cbo}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210325 20:30:10.400" level="INFO">${body} = { "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "16750284949", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder",...</msg>
<status status="PASS" starttime="20210325 20:30:10.400" endtime="20210325 20:30:10.400"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210325 20:30:10.401" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "16750284949", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder", "identity_card": "172046531", "pep": false, "cbo": 821450 } 
json=None</msg>
<msg timestamp="20210325 20:30:11.106" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210325 20:30:10.400" endtime="20210325 20:30:11.106"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210325 20:30:11.107" level="INFO">{'id': '8b544c916c6e426b882f81faaea9e932', 'name': 'Holder de teste', 'revenue': 5500.0, 'email': 'teste@teste.com.br', 'status': 'waiting_info_and_documents', 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'marketplace_name': 'Marketplace de Teste', 'created_at': '2021-03-25T20:30:11.206222', 'updated_at': '2021-03-25T20:30:11.206224', 'type': 'individual', 'national_registration': '16750284949', 'birthday': '1988-04-23', 'mothers_name': 'Mãe do Holder', 'identity_card': '172046531', 'pep': False, 'cbo': '821450', '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/8b544c916c6e426b882f81faaea9e932', 'type': 'GET'}, 'phones': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/8b544c916c6e426b882f81faaea9e932/phones', 'type': 'GET'}, 'addresses': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/8b544c916c6e426b882f81faaea9e932/addresses', 'type': 'GET'}, 'documents': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/8b544c916c6e426b882f81faaea9e932/documents', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210325 20:30:11.107" endtime="20210325 20:30:11.108"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210325 20:30:11.109" level="INFO">f8c54410646e8195</msg>
<status status="PASS" starttime="20210325 20:30:11.108" endtime="20210325 20:30:11.109"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${body}</arg>
</arguments>
<msg timestamp="20210325 20:30:11.110" level="INFO">{ "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "16750284949", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder", "identity_card": "172046531", "pep": false, "cbo": 821450 }</msg>
<status status="PASS" starttime="20210325 20:30:11.110" endtime="20210325 20:30:11.110"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210325 20:30:11.111" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210325 20:30:11.111" endtime="20210325 20:30:11.112"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${holder_external_key}</var>
</assign>
<msg timestamp="20210325 20:30:11.113" level="INFO">${holder_external_key} = 8b544c916c6e426b882f81faaea9e932</msg>
<status status="PASS" starttime="20210325 20:30:11.112" endtime="20210325 20:30:11.113"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_external_key}</arg>
</arguments>
<msg timestamp="20210325 20:30:11.114" level="INFO">${holder_external_key} = 8b544c916c6e426b882f81faaea9e932</msg>
<status status="PASS" starttime="20210325 20:30:11.113" endtime="20210325 20:30:11.114"></status>
</kw>
<status status="PASS" starttime="20210325 20:30:10.396" endtime="20210325 20:30:11.114"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_name}</arg>
</arguments>
<msg timestamp="20210325 20:30:11.115" level="INFO">${holder_name} = Holder de teste</msg>
<status status="PASS" starttime="20210325 20:30:11.115" endtime="20210325 20:30:11.115"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210325 20:30:11.116" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210325 20:30:11.116" endtime="20210325 20:30:11.117"></status>
</kw>
<kw name="criar holder phone" library="accreditation_post_holder_phone">
<arguments>
<arg>21</arg>
<arg>51</arg>
<arg>996221236</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210325 20:30:11.118" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210325 20:30:11.118" endtime="20210325 20:30:11.118"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"area_code": "${phone_area_code}",</arg>
<arg>"country_code": "${phone_country_code}",</arg>
<arg>"number": "${phone_number}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210325 20:30:11.119" level="INFO">${body} = { "area_code": "21", "country_code": "51", "number": "996221236" }</msg>
<status status="PASS" starttime="20210325 20:30:11.119" endtime="20210325 20:30:11.119"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/phones</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210325 20:30:11.121" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/8b544c916c6e426b882f81faaea9e932/phones, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "area_code": "21", "country_code": "51", "number": "996221236" } 
json=None</msg>
<msg timestamp="20210325 20:30:11.352" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210325 20:30:11.120" endtime="20210325 20:30:11.352"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210325 20:30:11.352" level="INFO">{'id': 'fb37da6db4a847088827393582656b0b', 'area_code': '21', 'country_code': '51', 'number': '996221236', 'main': True, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/8b544c916c6e426b882f81faaea9e932/phones/fb37da6db4a847088827393582656b0b', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/8b544c916c6e426b882f81faaea9e932', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210325 20:30:11.352" endtime="20210325 20:30:11.353"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210325 20:30:11.353" level="INFO">10c6ee4a5c918048</msg>
<status status="PASS" starttime="20210325 20:30:11.353" endtime="20210325 20:30:11.353"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210325 20:30:11.354" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210325 20:30:11.353" endtime="20210325 20:30:11.354"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${phone_external_key}</var>
</assign>
<msg timestamp="20210325 20:30:11.354" level="INFO">${phone_external_key} = fb37da6db4a847088827393582656b0b</msg>
<status status="PASS" starttime="20210325 20:30:11.354" endtime="20210325 20:30:11.354"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${phone_external_key}</arg>
</arguments>
<msg timestamp="20210325 20:30:11.355" level="INFO">${phone_external_key} = fb37da6db4a847088827393582656b0b</msg>
<status status="PASS" starttime="20210325 20:30:11.355" endtime="20210325 20:30:11.355"></status>
</kw>
<status status="PASS" starttime="20210325 20:30:11.117" endtime="20210325 20:30:11.355"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210325 20:30:11.356" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210325 20:30:11.355" endtime="20210325 20:30:11.356"></status>
</kw>
<kw name="criar holder address" library="accreditation_post_holder_address">
<arguments>
<arg>Rio de Janeiro</arg>
<arg>Rio de Janeiro</arg>
<arg>Brasil</arg>
<arg>Bairro de Testes</arg>
<arg>Rua de Testes</arg>
<arg>90</arg>
<arg>apto 200</arg>
<arg>21550987</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210325 20:30:11.356" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210325 20:30:11.356" endtime="20210325 20:30:11.356"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"city": "${city}",</arg>
<arg>"state": "${state}",</arg>
<arg>"country": "${country}",</arg>
<arg>"neighborhood": "${neighborhood}",</arg>
<arg>"street": "${street}",</arg>
<arg>"number": "${number}",</arg>
<arg>"complement": "${complement}",</arg>
<arg>"postal_code": "${postal_code}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210325 20:30:11.357" level="INFO">${body} = { "city": "Rio de Janeiro", "state": "Rio de Janeiro", "country": "Brasil", "neighborhood": "Bairro de Testes", "street": "Rua de Testes", "number": "90", "complement": "apto 200", "postal_code": "215...</msg>
<status status="PASS" starttime="20210325 20:30:11.357" endtime="20210325 20:30:11.357"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/addresses</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210325 20:30:11.358" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/8b544c916c6e426b882f81faaea9e932/addresses, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "city": "Rio de Janeiro", "state": "Rio de Janeiro", "country": "Brasil", "neighborhood": "Bairro de Testes", "street": "Rua de Testes", "number": "90", "complement": "apto 200", "postal_code": "21550987" } 
json=None</msg>
<msg timestamp="20210325 20:30:11.591" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210325 20:30:11.357" endtime="20210325 20:30:11.591"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210325 20:30:11.592" level="INFO">{'id': '4a5b275035b647b2a03ae9f066ec6577', 'street': 'Rua de Testes', 'number': '90', 'city': 'Rio de Janeiro', 'complement': 'apto 200', 'state': 'Rio de Janeiro', 'neighborhood': 'Bairro de Testes', 'postal_code': '21550987', 'country': 'Brasil', 'main': True, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/8b544c916c6e426b882f81faaea9e932/addresses/4a5b275035b647b2a03ae9f066ec6577', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/8b544c916c6e426b882f81faaea9e932', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210325 20:30:11.591" endtime="20210325 20:30:11.592"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210325 20:30:11.592" level="INFO">31ac83bde8c76721</msg>
<status status="PASS" starttime="20210325 20:30:11.592" endtime="20210325 20:30:11.592"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210325 20:30:11.592" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210325 20:30:11.592" endtime="20210325 20:30:11.593"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${address_external_key}</var>
</assign>
<msg timestamp="20210325 20:30:11.593" level="INFO">${address_external_key} = 4a5b275035b647b2a03ae9f066ec6577</msg>
<status status="PASS" starttime="20210325 20:30:11.593" endtime="20210325 20:30:11.593"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${address_external_key}</arg>
</arguments>
<msg timestamp="20210325 20:30:11.594" level="INFO">${address_external_key} = 4a5b275035b647b2a03ae9f066ec6577</msg>
<status status="PASS" starttime="20210325 20:30:11.593" endtime="20210325 20:30:11.594"></status>
</kw>
<status status="PASS" starttime="20210325 20:30:11.356" endtime="20210325 20:30:11.594"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210325 20:30:11.594" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210325 20:30:11.594" endtime="20210325 20:30:11.594"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>SELFIE</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210325 20:30:11.595" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210325 20:30:11.595" endtime="20210325 20:30:11.595"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>C:\\Users\\vinicius.trindade\\banking_continuous_testing\\banking_continuous_testing\\apis\\accreditation\\documents\\holder_documents\\post.${/}..${/}..${/}..${/}..${/}..${/}images${/}accreditation${/}image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210325 20:30:11.596" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210325 20:30:11.597" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210325 20:30:11.595" endtime="20210325 20:30:11.597"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210325 20:30:11.598" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/8b544c916c6e426b882f81faaea9e932/documents?type=SELFIE, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210325 20:30:11.965" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210325 20:30:11.597" endtime="20210325 20:30:11.965"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210325 20:30:11.966" level="INFO">{'id': '4e038a8dcc62403dbae02b7000e28942', 'document_type': 'selfie', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/8b544c916c6e426b882f81faaea9e932/documents/4e038a8dcc62403dbae02b7000e28942', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/8b544c916c6e426b882f81faaea9e932', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/8b544c916c6e426b882f81faaea9e932/documents/4e038a8dcc62403dbae02b7000e28942/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210325 20:30:11.966" endtime="20210325 20:30:11.966"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210325 20:30:11.967" level="INFO">ff08574e7be07831</msg>
<status status="PASS" starttime="20210325 20:30:11.967" endtime="20210325 20:30:11.967"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210325 20:30:11.967" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210325 20:30:11.967" endtime="20210325 20:30:11.968"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210325 20:30:11.968" level="INFO">${document_external_key} = 4e038a8dcc62403dbae02b7000e28942</msg>
<status status="PASS" starttime="20210325 20:30:11.968" endtime="20210325 20:30:11.968"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210325 20:30:11.969" level="INFO">${document_external_key} = 4e038a8dcc62403dbae02b7000e28942</msg>
<status status="PASS" starttime="20210325 20:30:11.969" endtime="20210325 20:30:11.969"></status>
</kw>
<status status="PASS" starttime="20210325 20:30:11.595" endtime="20210325 20:30:11.969"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210325 20:30:11.970" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210325 20:30:11.969" endtime="20210325 20:30:11.970"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>RG_FRENTE</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210325 20:30:11.971" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210325 20:30:11.970" endtime="20210325 20:30:11.971"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>C:\\Users\\vinicius.trindade\\banking_continuous_testing\\banking_continuous_testing\\apis\\accreditation\\documents\\holder_documents\\post.${/}..${/}..${/}..${/}..${/}..${/}images${/}accreditation${/}image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210325 20:30:11.971" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210325 20:30:11.973" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210325 20:30:11.971" endtime="20210325 20:30:11.973"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210325 20:30:11.974" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/8b544c916c6e426b882f81faaea9e932/documents?type=RG_FRENTE, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210325 20:30:12.241" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210325 20:30:11.973" endtime="20210325 20:30:12.241"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210325 20:30:12.241" level="INFO">{'id': '8cfa8f88eddf4ac4a8414115ad666a28', 'document_type': 'rg_frente', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/8b544c916c6e426b882f81faaea9e932/documents/8cfa8f88eddf4ac4a8414115ad666a28', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/8b544c916c6e426b882f81faaea9e932', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/8b544c916c6e426b882f81faaea9e932/documents/8cfa8f88eddf4ac4a8414115ad666a28/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210325 20:30:12.241" endtime="20210325 20:30:12.242"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210325 20:30:12.242" level="INFO">56e1f63c1cee0dae</msg>
<status status="PASS" starttime="20210325 20:30:12.242" endtime="20210325 20:30:12.242"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210325 20:30:12.242" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210325 20:30:12.242" endtime="20210325 20:30:12.242"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210325 20:30:12.243" level="INFO">${document_external_key} = 8cfa8f88eddf4ac4a8414115ad666a28</msg>
<status status="PASS" starttime="20210325 20:30:12.243" endtime="20210325 20:30:12.243"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210325 20:30:12.243" level="INFO">${document_external_key} = 8cfa8f88eddf4ac4a8414115ad666a28</msg>
<status status="PASS" starttime="20210325 20:30:12.243" endtime="20210325 20:30:12.243"></status>
</kw>
<status status="PASS" starttime="20210325 20:30:11.970" endtime="20210325 20:30:12.244"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210325 20:30:12.244" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210325 20:30:12.244" endtime="20210325 20:30:12.244"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>RG_VERSO</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210325 20:30:12.245" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210325 20:30:12.245" endtime="20210325 20:30:12.245"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>C:\\Users\\vinicius.trindade\\banking_continuous_testing\\banking_continuous_testing\\apis\\accreditation\\documents\\holder_documents\\post.${/}..${/}..${/}..${/}..${/}..${/}images${/}accreditation${/}image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210325 20:30:12.245" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210325 20:30:12.246" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210325 20:30:12.245" endtime="20210325 20:30:12.246"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210325 20:30:12.247" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/8b544c916c6e426b882f81faaea9e932/documents?type=RG_VERSO, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210325 20:30:12.523" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210325 20:30:12.246" endtime="20210325 20:30:12.523"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210325 20:30:12.524" level="INFO">{'id': '350c7898b9364ce182a17833e5de1304', 'document_type': 'rg_verso', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/8b544c916c6e426b882f81faaea9e932/documents/350c7898b9364ce182a17833e5de1304', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/8b544c916c6e426b882f81faaea9e932', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/8b544c916c6e426b882f81faaea9e932/documents/350c7898b9364ce182a17833e5de1304/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210325 20:30:12.523" endtime="20210325 20:30:12.524"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210325 20:30:12.525" level="INFO">f65dd99cc9573544</msg>
<status status="PASS" starttime="20210325 20:30:12.524" endtime="20210325 20:30:12.525"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210325 20:30:12.525" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210325 20:30:12.525" endtime="20210325 20:30:12.525"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210325 20:30:12.525" level="INFO">${document_external_key} = 350c7898b9364ce182a17833e5de1304</msg>
<status status="PASS" starttime="20210325 20:30:12.525" endtime="20210325 20:30:12.525"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210325 20:30:12.526" level="INFO">${document_external_key} = 350c7898b9364ce182a17833e5de1304</msg>
<status status="PASS" starttime="20210325 20:30:12.526" endtime="20210325 20:30:12.526"></status>
</kw>
<status status="PASS" starttime="20210325 20:30:12.244" endtime="20210325 20:30:12.526"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210325 20:30:12.526" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210325 20:30:12.526" endtime="20210325 20:30:12.526"></status>
</kw>
<kw name="solicitar aprovação do holder" library="accreditation_request_approval">
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210325 20:30:12.527" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210325 20:30:12.527" endtime="20210325 20:30:12.527"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/approval</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210325 20:30:12.527" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/8b544c916c6e426b882f81faaea9e932/approval, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data=None 
json=None</msg>
<msg timestamp="20210325 20:30:12.834" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210325 20:30:12.527" endtime="20210325 20:30:12.834"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210325 20:30:12.835" level="INFO">{'message': 'Approval request accepted successfully. Processing analysis'}</msg>
<status status="PASS" starttime="20210325 20:30:12.834" endtime="20210325 20:30:12.835"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210325 20:30:12.835" level="INFO">449c20d58adf63a2</msg>
<status status="PASS" starttime="20210325 20:30:12.835" endtime="20210325 20:30:12.835"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210325 20:30:12.836" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210325 20:30:12.836" endtime="20210325 20:30:12.836"></status>
</kw>
<status status="PASS" starttime="20210325 20:30:12.527" endtime="20210325 20:30:12.836"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210325 20:30:12.837" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210325 20:30:12.836" endtime="20210325 20:30:12.837"></status>
</kw>
<kw name="recebendo notificação de aprovação" library="accreditation_risk_notification">
<kw name="Uuid 4" library="FakerLibrary">
<doc>Generates a random UUID4 string.
:param cast_to: Specify what type the UUID should be cast to. Default is `str`
:type cast_to: callable</doc>
<assign>
<var>${assessment_id}</var>
</assign>
<msg timestamp="20210325 20:30:12.837" level="INFO">${assessment_id} = 02631a64-bc1e-4ffa-a211-237c67a09fdc</msg>
<status status="PASS" starttime="20210325 20:30:12.837" endtime="20210325 20:30:12.837"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>year</arg>
</arguments>
<assign>
<var>${year}</var>
</assign>
<msg timestamp="20210325 20:30:12.838" level="INFO">${year} = 2021</msg>
<status status="PASS" starttime="20210325 20:30:12.838" endtime="20210325 20:30:12.838"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>month</arg>
</arguments>
<assign>
<var>${month}</var>
</assign>
<msg timestamp="20210325 20:30:12.838" level="INFO">${month} = 03</msg>
<status status="PASS" starttime="20210325 20:30:12.838" endtime="20210325 20:30:12.839"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>day</arg>
</arguments>
<assign>
<var>${day}</var>
</assign>
<msg timestamp="20210325 20:30:12.839" level="INFO">${day} = 25</msg>
<status status="PASS" starttime="20210325 20:30:12.839" endtime="20210325 20:30:12.839"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210325 20:30:12.839" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210325 20:30:12.839" endtime="20210325 20:30:12.839"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "risk.assessment.result",</arg>
<arg>"resource": "business.holder",</arg>
<arg>"created_at": "${year}-${month}-${day} 15:28:56.747Z",</arg>
<arg>"marketplace_id": "${marketplace_external_key}",</arg>
<arg>"object": {</arg>
<arg>"result": "APPROVED",</arg>
<arg>"holder_id": "${holder_external_key}",</arg>
<arg>"applicant_id": "${application_external_key}",</arg>
<arg>"assessment_id": "${assessment_id}"</arg>
<arg>}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210325 20:30:12.840" level="INFO">${body} = { "type": "risk.assessment.result", "resource": "business.holder", "created_at": "2021-03-25 15:28:56.747Z", "marketplace_id": "f71a8951368a4cc085cf7875ff44e61c", "object": { "result": "APPROVED", "ho...</msg>
<status status="PASS" starttime="20210325 20:30:12.840" endtime="20210325 20:30:12.840"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/admin/internal_operation/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/registration/approval</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210325 20:30:12.841" level="INFO">POST Request using : uri=/admin/internal_operation/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/8b544c916c6e426b882f81faaea9e932/registration/approval, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "risk.assessment.result", "resource": "business.holder", "created_at": "2021-03-25 15:28:56.747Z", "marketplace_id": "f71a8951368a4cc085cf7875ff44e61c", "object": { "result": "APPROVED", "holder_id": "8b544c916c6e426b882f81faaea9e932", "applicant_id": "bcc25a6751c14b52af1340d40dba78c5", "assessment_id": "02631a64-bc1e-4ffa-a211-237c67a09fdc" } } 
json=None</msg>
<msg timestamp="20210325 20:30:13.072" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210325 20:30:12.840" endtime="20210325 20:30:13.073"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210325 20:30:13.075" level="INFO">{'message': 'Holder approved successfully'}</msg>
<status status="PASS" starttime="20210325 20:30:13.074" endtime="20210325 20:30:13.075"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210325 20:30:13.077" level="INFO">51a62664d1202110</msg>
<status status="PASS" starttime="20210325 20:30:13.076" endtime="20210325 20:30:13.077"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210325 20:30:13.078" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210325 20:30:13.078" endtime="20210325 20:30:13.079"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210325 20:30:13.080" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210325 20:30:13.079" endtime="20210325 20:30:13.080"></status>
</kw>
<status status="PASS" starttime="20210325 20:30:12.837" endtime="20210325 20:30:13.080"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210325 20:30:13.081" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210325 20:30:13.080" endtime="20210325 20:30:13.081"></status>
</kw>
<kw name="buscar account por holder" library="accounts_get_accounts_by_holder">
<kw name="conectar accounts" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accounts</arg>
<arg>url=${account_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210325 20:30:13.084" level="INFO">Creating Session using : alias=accounts, url=https://banking-accounts-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210325 20:30:13.083" endtime="20210325 20:30:13.085"></status>
</kw>
<status status="PASS" starttime="20210325 20:30:13.082" endtime="20210325 20:30:13.085"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accounts</arg>
<arg>/marketplaces/${marketplace_external_key}/holders/${holder_external_key}/accounts</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210325 20:30:13.088" level="INFO">GET Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/holders/8b544c916c6e426b882f81faaea9e932/accounts, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210325 20:30:13.744" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210325 20:30:13.086" endtime="20210325 20:30:13.744"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210325 20:30:13.744" level="INFO">{'items': [{'id': 'cbc184a7427b49ad9fcc0fd46cc6088c', 'holder': '8b544c916c6e426b882f81faaea9e932', 'balance': '0.00', 'currency': 'BRL', 'routing_number': '001', 'number': '8882050150', 'status': 'active', 'metadata': {}, 'created_at': '2021-03-25T23:30:13.147841', 'updated_at': '2021-03-25T23:30:13.147841', 'primary': True, 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'uri': '/v2/marketplaces/f71a8951368a4cc085cf7875ff44e61c/accounts/cbc184a7427b49ad9fcc0fd46cc6088c', 'resource': 'payment_account'}], 'has_more': False, 'limit': 100, 'total_pages': 1, 'page': 1, 'offset': 0, 'total': '1', 'query_count': '1'}</msg>
<status status="PASS" starttime="20210325 20:30:13.744" endtime="20210325 20:30:13.745"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210325 20:30:13.745" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210325 20:30:13.745" endtime="20210325 20:30:13.745"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["id"]}</arg>
</arguments>
<assign>
<var>${account_external_key}</var>
</assign>
<msg timestamp="20210325 20:30:13.747" level="INFO">${account_external_key} = cbc184a7427b49ad9fcc0fd46cc6088c</msg>
<status status="PASS" starttime="20210325 20:30:13.745" endtime="20210325 20:30:13.747"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_external_key}</arg>
</arguments>
<msg timestamp="20210325 20:30:13.747" level="INFO">${account_external_key} = cbc184a7427b49ad9fcc0fd46cc6088c</msg>
<status status="PASS" starttime="20210325 20:30:13.747" endtime="20210325 20:30:13.747"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["number"]}</arg>
</arguments>
<assign>
<var>${account_number}</var>
</assign>
<msg timestamp="20210325 20:30:13.747" level="INFO">${account_number} = 8882050150</msg>
<status status="PASS" starttime="20210325 20:30:13.747" endtime="20210325 20:30:13.747"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_number}</arg>
</arguments>
<msg timestamp="20210325 20:30:13.748" level="INFO">${account_number} = 8882050150</msg>
<status status="PASS" starttime="20210325 20:30:13.747" endtime="20210325 20:30:13.748"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["routing_number"]}</arg>
</arguments>
<assign>
<var>${account_routing_number}</var>
</assign>
<msg timestamp="20210325 20:30:13.748" level="INFO">${account_routing_number} = 001</msg>
<status status="PASS" starttime="20210325 20:30:13.748" endtime="20210325 20:30:13.748"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_routing_number}</arg>
</arguments>
<msg timestamp="20210325 20:30:13.750" level="INFO">${account_routing_number} = 001</msg>
<status status="PASS" starttime="20210325 20:30:13.750" endtime="20210325 20:30:13.750"></status>
</kw>
<status status="PASS" starttime="20210325 20:30:13.081" endtime="20210325 20:30:13.750"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210325 20:30:13.750" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210325 20:30:13.750" endtime="20210325 20:30:13.750"></status>
</kw>
<status status="PASS" starttime="20210325 20:30:10.391" endtime="20210325 20:30:13.751"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${holder_external_key}</arg>
</arguments>
<assign>
<var>${holder_receive_ted}</var>
</assign>
<msg timestamp="20210325 20:30:13.751" level="INFO">${holder_receive_ted} = 8b544c916c6e426b882f81faaea9e932</msg>
<status status="PASS" starttime="20210325 20:30:13.751" endtime="20210325 20:30:13.751"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${holder_name}</arg>
</arguments>
<assign>
<var>${holder_name_receive_ted}</var>
</assign>
<msg timestamp="20210325 20:30:13.752" level="INFO">${holder_name_receive_ted} = Holder de teste</msg>
<status status="PASS" starttime="20210325 20:30:13.752" endtime="20210325 20:30:13.752"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${national_registration}</arg>
</arguments>
<assign>
<var>${holder_national_registration_receive_ted}</var>
</assign>
<msg timestamp="20210325 20:30:13.753" level="INFO">${holder_national_registration_receive_ted} = 16750284949</msg>
<status status="PASS" starttime="20210325 20:30:13.753" endtime="20210325 20:30:13.753"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${account_external_key}</arg>
</arguments>
<assign>
<var>${account_receive_ted}</var>
</assign>
<msg timestamp="20210325 20:30:13.754" level="INFO">${account_receive_ted} = cbc184a7427b49ad9fcc0fd46cc6088c</msg>
<status status="PASS" starttime="20210325 20:30:13.754" endtime="20210325 20:30:13.754"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${account_number}</arg>
</arguments>
<assign>
<var>${account_number_receive_ted}</var>
</assign>
<msg timestamp="20210325 20:30:13.755" level="INFO">${account_number_receive_ted} = 8882050150</msg>
<status status="PASS" starttime="20210325 20:30:13.755" endtime="20210325 20:30:13.755"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${account_routing_number}</arg>
</arguments>
<assign>
<var>${account_routing_number_receive_ted}</var>
</assign>
<msg timestamp="20210325 20:30:13.755" level="INFO">${account_routing_number_receive_ted} = 001</msg>
<status status="PASS" starttime="20210325 20:30:13.755" endtime="20210325 20:30:13.755"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${national_registration}</arg>
</arguments>
<assign>
<var>${national_registration_receive_ted}</var>
</assign>
<msg timestamp="20210325 20:30:13.756" level="INFO">${national_registration_receive_ted} = 16750284949</msg>
<status status="PASS" starttime="20210325 20:30:13.756" endtime="20210325 20:30:13.756"></status>
</kw>
<kw name="Uuid 4" library="FakerLibrary">
<doc>Generates a random UUID4 string.
:param cast_to: Specify what type the UUID should be cast to. Default is `str`
:type cast_to: callable</doc>
<assign>
<var>${reference_id}</var>
</assign>
<msg timestamp="20210325 20:30:13.756" level="INFO">${reference_id} = 73312abd-85d6-4f74-a5e0-f68a1ebb5776</msg>
<status status="PASS" starttime="20210325 20:30:13.756" endtime="20210325 20:30:13.756"></status>
</kw>
<kw name="criar envio de ted" library="payments_external_transfer_send">
<arguments>
<arg>marketplace_external_key=${marketplace_external_key}</arg>
<arg>holder_external_key=${holder_send_ted}</arg>
<arg>account_external_key=${account_send_ted}</arg>
<arg>amount=${amount}</arg>
<arg>account_check_digit=${account_receive_check_digit}</arg>
<arg>account_number=${account_number_receive_ted}</arg>
<arg>bank_code=${bank_code_receive}</arg>
<arg>document=${holder_national_registration_receive_ted}</arg>
<arg>name=${holder_name_receive_ted}</arg>
<arg>routing_check_digit=${routing_check_digit_receive}</arg>
<arg>routing_number=${account_routing_number_receive_ted}</arg>
<arg>description=${description}</arg>
<arg>reference_id=${reference_id}</arg>
</arguments>
<kw name="conectar payments" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=payments</arg>
<arg>url=${payments_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210325 20:30:13.758" level="INFO">Creating Session using : alias=payments, url=https://banking-payments-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210325 20:30:13.758" endtime="20210325 20:30:13.758"></status>
</kw>
<status status="PASS" starttime="20210325 20:30:13.758" endtime="20210325 20:30:13.758"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210325 20:30:13.759" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210325 20:30:13.759" endtime="20210325 20:30:13.759"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"amount": ${amount},</arg>
<arg>"recipient": {</arg>
<arg>"account_check_digit": "${account_check_digit}",</arg>
<arg>"account_number": "${account_number}",</arg>
<arg>"bank_code": "${bank_code}",</arg>
<arg>"document": "${document}",</arg>
<arg>"name": "${name}",</arg>
<arg>"routing_check_digit": "${routing_check_digit}",</arg>
<arg>"routing_number": "${routing_number}"</arg>
<arg>},</arg>
<arg>"description": "${description}",</arg>
<arg>"reference_id": "${reference_id}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210325 20:30:13.759" level="INFO">${body} = { "amount": 399, "recipient": { "account_check_digit": "1", "account_number": "8882050150", "bank_code": "208", "document": "16750284949", "name": "Holder de teste", "routing_check_digit": "1", "routi...</msg>
<status status="PASS" starttime="20210325 20:30:13.759" endtime="20210325 20:30:13.759"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>payments</arg>
<arg>/marketplaces/${marketplace_external_key}/holders/${holder_external_key}/accounts/${account_external_key}/external-transfer-send</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210325 20:30:13.760" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/holders/a64163a05b4c45999d0f74adf977d4d6/accounts/5c1bb7c43da247739e1b2507c5c5bb65/external-transfer-send, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "amount": 399, "recipient": { "account_check_digit": "1", "account_number": "8882050150", "bank_code": "208", "document": "16750284949", "name": "Holder de teste", "routing_check_digit": "1", "routing_number": "001" }, "description": "Teste Ted", "reference_id": "73312abd-85d6-4f74-a5e0-f68a1ebb5776" } 
json=None</msg>
<msg timestamp="20210325 20:30:14.692" level="INFO">${response} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20210325 20:30:13.760" endtime="20210325 20:30:14.692"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210325 20:30:14.693" level="INFO">202</msg>
<status status="PASS" starttime="20210325 20:30:14.692" endtime="20210325 20:30:14.693"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210325 20:30:14.693" level="INFO">{'external_transfer_id': '658c1f73ab6c4a2bbb949f7d6ae52e2a', 'amount': 399, 'formated_amount': '3.99', 'description': 'Teste Ted', 'reference_id': '73312abd-85d6-4f74-a5e0-f68a1ebb5776', 'status': 'AUTHORIZED', 'recipient': {'name': 'Holder de teste', 'document': '16750284949', 'bank_code': '208', 'routing_number': '001', 'routing_check_digit': '1', 'account_number': '8882050150', 'account_check_digit': '1'}}</msg>
<status status="PASS" starttime="20210325 20:30:14.693" endtime="20210325 20:30:14.693"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210325 20:30:14.694" level="INFO">6b58ecad21d283fc</msg>
<status status="PASS" starttime="20210325 20:30:14.694" endtime="20210325 20:30:14.694"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210325 20:30:14.694" level="INFO">${response} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20210325 20:30:14.694" endtime="20210325 20:30:14.695"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["external_transfer_id"]}</arg>
</arguments>
<assign>
<var>${payment_external_key}</var>
</assign>
<msg timestamp="20210325 20:30:14.695" level="INFO">${payment_external_key} = 658c1f73ab6c4a2bbb949f7d6ae52e2a</msg>
<status status="PASS" starttime="20210325 20:30:14.695" endtime="20210325 20:30:14.695"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${payment_external_key}</arg>
</arguments>
<msg timestamp="20210325 20:30:14.696" level="INFO">${payment_external_key} = 658c1f73ab6c4a2bbb949f7d6ae52e2a</msg>
<status status="PASS" starttime="20210325 20:30:14.696" endtime="20210325 20:30:14.696"></status>
</kw>
<status status="PASS" starttime="20210325 20:30:13.757" endtime="20210325 20:30:14.696"></status>
</kw>
<kw name="validar ted" library="asserts">
<arguments>
<arg>status_code=202</arg>
<arg>amount=${amount}</arg>
<arg>description=${description}</arg>
<arg>reference_id=${reference_id}</arg>
<arg>status=AUTHORIZED</arg>
<arg>recipient_name=${holder_name_receive_ted}</arg>
<arg>recipient_document=${holder_national_registration_receive_ted}</arg>
<arg>recipient_bank_code=${bank_code_receive}</arg>
<arg>recipient_routing_number=${account_routing_number_receive_ted}</arg>
<arg>recipient_routing_check_digit=${routing_check_digit_receive}</arg>
<arg>recipient_account_number=${account_number_receive_ted}</arg>
<arg>recipient_account_check_digit=${account_receive_check_digit}</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${amount}/100</arg>
</arguments>
<assign>
<var>${formated_amount}</var>
</assign>
<msg timestamp="20210325 20:30:14.698" level="INFO">${formated_amount} = 3.99</msg>
<status status="PASS" starttime="20210325 20:30:14.698" endtime="20210325 20:30:14.698"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
</arguments>
<msg timestamp="20210325 20:30:14.699" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210325 20:30:14.699" endtime="20210325 20:30:14.699"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["amount"]}</arg>
<arg>${amount}</arg>
</arguments>
<msg timestamp="20210325 20:30:14.700" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210325 20:30:14.699" endtime="20210325 20:30:14.700"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["formated_amount"]}</arg>
<arg>${formated_amount}</arg>
</arguments>
<msg timestamp="20210325 20:30:14.700" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;class 'float'&gt;</msg>
<status status="PASS" starttime="20210325 20:30:14.700" endtime="20210325 20:30:14.700"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["description"]}</arg>
<arg>${description}</arg>
</arguments>
<status status="PASS" starttime="20210325 20:30:14.700" endtime="20210325 20:30:14.701"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["reference_id"]}</arg>
<arg>${reference_id}</arg>
</arguments>
<status status="PASS" starttime="20210325 20:30:14.701" endtime="20210325 20:30:14.701"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["status"]}</arg>
<arg>${status}</arg>
</arguments>
<status status="PASS" starttime="20210325 20:30:14.702" endtime="20210325 20:30:14.702"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["recipient"]["name"]}</arg>
<arg>${recipient_name}</arg>
</arguments>
<status status="PASS" starttime="20210325 20:30:14.702" endtime="20210325 20:30:14.703"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["recipient"]["document"]}</arg>
<arg>${recipient_document}</arg>
</arguments>
<status status="PASS" starttime="20210325 20:30:14.703" endtime="20210325 20:30:14.703"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["recipient"]["bank_code"]}</arg>
<arg>${recipient_bank_code}</arg>
</arguments>
<status status="PASS" starttime="20210325 20:30:14.703" endtime="20210325 20:30:14.704"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["recipient"]["routing_number"]}</arg>
<arg>${recipient_routing_number}</arg>
</arguments>
<status status="PASS" starttime="20210325 20:30:14.704" endtime="20210325 20:30:14.705"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["recipient"]["routing_check_digit"]}</arg>
<arg>${recipient_routing_check_digit}</arg>
</arguments>
<status status="PASS" starttime="20210325 20:30:14.705" endtime="20210325 20:30:14.705"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["recipient"]["account_number"]}</arg>
<arg>${recipient_account_number}</arg>
</arguments>
<status status="PASS" starttime="20210325 20:30:14.706" endtime="20210325 20:30:14.706"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["recipient"]["account_check_digit"]}</arg>
<arg>${recipient_account_check_digit}</arg>
</arguments>
<status status="PASS" starttime="20210325 20:30:14.706" endtime="20210325 20:30:14.706"></status>
</kw>
<status status="PASS" starttime="20210325 20:30:14.697" endtime="20210325 20:30:14.706"></status>
</kw>
<kw name="buscar account balance" library="account_get_balance">
<arguments>
<arg>marketplace_external_key=${marketplace_external_key}</arg>
<arg>account_external_key=${account_send_ted}</arg>
</arguments>
<kw name="conectar accounts" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accounts</arg>
<arg>url=${account_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210325 20:30:14.708" level="INFO">Creating Session using : alias=accounts, url=https://banking-accounts-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210325 20:30:14.708" endtime="20210325 20:30:14.708"></status>
</kw>
<status status="PASS" starttime="20210325 20:30:14.707" endtime="20210325 20:30:14.708"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accounts</arg>
<arg>/marketplaces/${marketplace_external_key}/accounts/${account_external_key}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210325 20:30:14.709" level="INFO">GET Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/accounts/5c1bb7c43da247739e1b2507c5c5bb65, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210325 20:30:15.346" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210325 20:30:14.708" endtime="20210325 20:30:15.346"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210325 20:30:15.347" level="INFO">{'id': '5c1bb7c43da247739e1b2507c5c5bb65', 'holder': 'a64163a05b4c45999d0f74adf977d4d6', 'balance': '8999996.01', 'currency': 'BRL', 'routing_number': '001', 'number': '5959440294', 'status': 'active', 'metadata': {}, 'created_at': '2021-03-25T23:30:08.431054', 'updated_at': '2021-03-25T23:30:14.720279', 'primary': True, 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'uri': '/v2/marketplaces/f71a8951368a4cc085cf7875ff44e61c/accounts/5c1bb7c43da247739e1b2507c5c5bb65', 'resource': 'payment_account'}</msg>
<status status="PASS" starttime="20210325 20:30:15.347" endtime="20210325 20:30:15.347"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210325 20:30:15.348" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210325 20:30:15.347" endtime="20210325 20:30:15.348"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["balance"]}</arg>
</arguments>
<assign>
<var>${account_balance}</var>
</assign>
<msg timestamp="20210325 20:30:15.349" level="INFO">${account_balance} = 8999996.01</msg>
<status status="PASS" starttime="20210325 20:30:15.348" endtime="20210325 20:30:15.349"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_balance}</arg>
</arguments>
<msg timestamp="20210325 20:30:15.349" level="INFO">${account_balance} = 8999996.01</msg>
<status status="PASS" starttime="20210325 20:30:15.349" endtime="20210325 20:30:15.349"></status>
</kw>
<status status="PASS" starttime="20210325 20:30:14.707" endtime="20210325 20:30:15.349"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${account_balance}</arg>
</arguments>
<assign>
<var>${account_sender_balance_final}</var>
</assign>
<msg timestamp="20210325 20:30:15.350" level="INFO">${account_sender_balance_final} = 8999996.01</msg>
<status status="PASS" starttime="20210325 20:30:15.350" endtime="20210325 20:30:15.351"></status>
</kw>
<kw name="validar debito na account" library="asserts">
<arguments>
<arg>account_balance_initial=${account_sender_balance_inicial}</arg>
<arg>account_balance_final=${account_sender_balance_final}</arg>
<arg>amount=${amount}</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${account_balance_initial} - (${amount}/100)</arg>
</arguments>
<assign>
<var>${account_balance_actual}</var>
</assign>
<msg timestamp="20210325 20:30:15.352" level="INFO">${account_balance_actual} = 8999996.01</msg>
<status status="PASS" starttime="20210325 20:30:15.352" endtime="20210325 20:30:15.352"></status>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${account_balance_final}</arg>
</arguments>
<assign>
<var>${account_balance_final}</var>
</assign>
<msg timestamp="20210325 20:30:15.353" level="INFO">${account_balance_final} = 8999996.01</msg>
<status status="PASS" starttime="20210325 20:30:15.353" endtime="20210325 20:30:15.353"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${account_balance_final}</arg>
<arg>${account_balance_actual}</arg>
</arguments>
<status status="PASS" starttime="20210325 20:30:15.353" endtime="20210325 20:30:15.354"></status>
</kw>
<status status="PASS" starttime="20210325 20:30:15.351" endtime="20210325 20:30:15.354"></status>
</kw>
<kw name="${index} IN RANGE [ 20 ]" type="for">
<kw name="${index} = 0" type="foritem">
<kw name="buscar envio de ted" library="payments_get_external_transfer_send">
<arguments>
<arg>marketplace_external_key=${marketplace_external_key}</arg>
<arg>holder_external_key=${holder_send_ted}</arg>
<arg>account_external_key=${account_send_ted}</arg>
<arg>payment_external_key=${payment_external_key}</arg>
</arguments>
<kw name="conectar accounts" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accounts</arg>
<arg>url=${account_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210325 20:30:15.356" level="INFO">Creating Session using : alias=accounts, url=https://banking-accounts-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210325 20:30:15.356" endtime="20210325 20:30:15.356"></status>
</kw>
<status status="PASS" starttime="20210325 20:30:15.355" endtime="20210325 20:30:15.356"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>payments</arg>
<arg>/marketplaces/${marketplace_external_key}/holders/${holder_external_key}/accounts/${account_external_key}/external-transfer-send/${payment_external_key}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210325 20:30:15.357" level="INFO">GET Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/holders/a64163a05b4c45999d0f74adf977d4d6/accounts/5c1bb7c43da247739e1b2507c5c5bb65/external-transfer-send/658c1f73ab6c4a2bbb949f7d6ae52e2a, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210325 20:30:15.540" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210325 20:30:15.357" endtime="20210325 20:30:15.540"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210325 20:30:15.541" level="INFO">{'external_transfer_id': '658c1f73ab6c4a2bbb949f7d6ae52e2a', 'amount': 399, 'formated_amount': '3.99', 'description': 'Teste Ted', 'reference_id': '73312abd-85d6-4f74-a5e0-f68a1ebb5776', 'status': 'PROCESSING', 'recipient': {'name': 'Holder de teste', 'document': '16750284949', 'bank_code': '208', 'routing_number': '001', 'routing_check_digit': '1', 'account_number': '8882050150', 'account_check_digit': '1'}}</msg>
<status status="PASS" starttime="20210325 20:30:15.540" endtime="20210325 20:30:15.541"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210325 20:30:15.542" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210325 20:30:15.541" endtime="20210325 20:30:15.542"></status>
</kw>
<status status="PASS" starttime="20210325 20:30:15.355" endtime="20210325 20:30:15.542"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${response.json()["status"]}' == 'PROCESSING'</arg>
</arguments>
<msg timestamp="20210325 20:30:15.543" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20210325 20:30:15.542" endtime="20210325 20:30:15.543"></status>
</kw>
<status status="PASS" starttime="20210325 20:30:15.354" endtime="20210325 20:30:15.543"></status>
</kw>
<status status="PASS" starttime="20210325 20:30:15.354" endtime="20210325 20:30:15.543"></status>
</kw>
<kw name="validar ted" library="asserts">
<arguments>
<arg>status_code=200</arg>
<arg>amount=${amount}</arg>
<arg>description=${description}</arg>
<arg>reference_id=${reference_id}</arg>
<arg>status=PROCESSING</arg>
<arg>recipient_name=${holder_name_receive_ted}</arg>
<arg>recipient_document=${holder_national_registration_receive_ted}</arg>
<arg>recipient_bank_code=${bank_code_receive}</arg>
<arg>recipient_routing_number=${account_routing_number_receive_ted}</arg>
<arg>recipient_routing_check_digit=${routing_check_digit_receive}</arg>
<arg>recipient_account_number=${account_number_receive_ted}</arg>
<arg>recipient_account_check_digit=${account_receive_check_digit}</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${amount}/100</arg>
</arguments>
<assign>
<var>${formated_amount}</var>
</assign>
<msg timestamp="20210325 20:30:15.545" level="INFO">${formated_amount} = 3.99</msg>
<status status="PASS" starttime="20210325 20:30:15.545" endtime="20210325 20:30:15.545"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
</arguments>
<msg timestamp="20210325 20:30:15.546" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210325 20:30:15.545" endtime="20210325 20:30:15.546"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["amount"]}</arg>
<arg>${amount}</arg>
</arguments>
<msg timestamp="20210325 20:30:15.546" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210325 20:30:15.546" endtime="20210325 20:30:15.546"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["formated_amount"]}</arg>
<arg>${formated_amount}</arg>
</arguments>
<msg timestamp="20210325 20:30:15.547" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;class 'float'&gt;</msg>
<status status="PASS" starttime="20210325 20:30:15.546" endtime="20210325 20:30:15.547"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["description"]}</arg>
<arg>${description}</arg>
</arguments>
<status status="PASS" starttime="20210325 20:30:15.547" endtime="20210325 20:30:15.547"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["reference_id"]}</arg>
<arg>${reference_id}</arg>
</arguments>
<status status="PASS" starttime="20210325 20:30:15.547" endtime="20210325 20:30:15.548"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["status"]}</arg>
<arg>${status}</arg>
</arguments>
<status status="PASS" starttime="20210325 20:30:15.548" endtime="20210325 20:30:15.548"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["recipient"]["name"]}</arg>
<arg>${recipient_name}</arg>
</arguments>
<status status="PASS" starttime="20210325 20:30:15.548" endtime="20210325 20:30:15.549"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["recipient"]["document"]}</arg>
<arg>${recipient_document}</arg>
</arguments>
<status status="PASS" starttime="20210325 20:30:15.549" endtime="20210325 20:30:15.549"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["recipient"]["bank_code"]}</arg>
<arg>${recipient_bank_code}</arg>
</arguments>
<status status="PASS" starttime="20210325 20:30:15.549" endtime="20210325 20:30:15.550"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["recipient"]["routing_number"]}</arg>
<arg>${recipient_routing_number}</arg>
</arguments>
<status status="PASS" starttime="20210325 20:30:15.550" endtime="20210325 20:30:15.550"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["recipient"]["routing_check_digit"]}</arg>
<arg>${recipient_routing_check_digit}</arg>
</arguments>
<status status="PASS" starttime="20210325 20:30:15.550" endtime="20210325 20:30:15.551"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["recipient"]["account_number"]}</arg>
<arg>${recipient_account_number}</arg>
</arguments>
<status status="PASS" starttime="20210325 20:30:15.551" endtime="20210325 20:30:15.551"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["recipient"]["account_check_digit"]}</arg>
<arg>${recipient_account_check_digit}</arg>
</arguments>
<status status="PASS" starttime="20210325 20:30:15.551" endtime="20210325 20:30:15.552"></status>
</kw>
<status status="PASS" starttime="20210325 20:30:15.544" endtime="20210325 20:30:15.552"></status>
</kw>
<tags>
<tag>smoke_test</tag>
</tags>
<status status="PASS" starttime="20210325 20:30:04.983" endtime="20210325 20:30:15.552" critical="yes"></status>
</test>
<doc>Funcionalidade: Enviar TED
Eu, como um Holder, portador de uma conta ativa em Banking
Desejo realizar envio de TED</doc>
<status status="PASS" starttime="20210325 20:30:04.370" endtime="20210325 20:30:15.554"></status>
</suite>
<status status="PASS" starttime="20210325 20:30:04.368" endtime="20210325 20:30:15.556"></status>
</suite>
<status status="PASS" starttime="20210325 20:30:04.344" endtime="20210325 20:30:15.557"></status>
</suite>
<statistics>
<total>
<stat pass="1" fail="0">Critical Tests</stat>
<stat pass="1" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="1" fail="0">smoke_test</stat>
</tag>
<suite>
<stat pass="1" fail="0" id="s1" name="Payments">Payments</stat>
<stat pass="1" fail="0" id="s1-s1" name="Envio">Payments.Envio</stat>
<stat pass="1" fail="0" id="s1-s1-s1" name="Criar Envio de TED">Payments.Envio.Criar Envio de TED</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>

<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.8.1 on win32)" generated="20210322 07:17:19.029" rpa="false">
<suite id="s1" name="Cancelar Reivindicação de Posse" source="C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\tests\pix-dict\reivindicacao\Cancelar Reivindicação de Posse.robot">
<test id="s1-t1" name="Cenário: Cancelamento de Reivindiação pelo Reivindicador">
<kw name="Random Number" library="FakerLibrary">
<doc>Returns a random number with 1 digit (default, when digits==None),
a random number with 0 to given number of digits, or a random number
with given number to given number of digits (when ``fix_len==True``).</doc>
<arguments>
<arg>digits=8</arg>
<arg>fix_len=True</arg>
</arguments>
<assign>
<var>${phone}</var>
</assign>
<msg timestamp="20210322 07:17:19.596" level="INFO">${phone} = 50587714</msg>
<status status="PASS" starttime="20210322 07:17:19.595" endtime="20210322 07:17:19.596"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>+55219${phone}</arg>
</arguments>
<assign>
<var>${phone_pix}</var>
</assign>
<msg timestamp="20210322 07:17:19.596" level="INFO">${phone_pix} = +5521950587714</msg>
<status status="PASS" starttime="20210322 07:17:19.596" endtime="20210322 07:17:19.596"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${phone_pix}</arg>
</arguments>
<msg timestamp="20210322 07:17:19.597" level="INFO">${phone_pix} = +5521950587714</msg>
<status status="PASS" starttime="20210322 07:17:19.597" endtime="20210322 07:17:19.597"></status>
</kw>
<kw name="criar holder individual ativo" library="accreditation_create_holder_active">
<kw name="conectar accreditation" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accreditation</arg>
<arg>url=${accreditation_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 07:17:19.599" level="INFO">Creating Session using : alias=accreditation, url=https://banking-accreditation-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 07:17:19.598" endtime="20210322 07:17:19.599"></status>
</kw>
<status status="PASS" starttime="20210322 07:17:19.598" endtime="20210322 07:17:19.599"></status>
</kw>
<kw name="Cpf" library="FakerLibrary">
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 07:17:19.599" level="INFO">${national_registration} = 506.829.174-94</msg>
<status status="PASS" starttime="20210322 07:17:19.599" endtime="20210322 07:17:19.599"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${national_registration}</arg>
<arg>.</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 07:17:19.600" level="INFO">${national_registration} = 506829174-94</msg>
<status status="PASS" starttime="20210322 07:17:19.600" endtime="20210322 07:17:19.600"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${national_registration}</arg>
<arg>-</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 07:17:19.600" level="INFO">${national_registration} = 50682917494</msg>
<status status="PASS" starttime="20210322 07:17:19.600" endtime="20210322 07:17:19.600"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${national_registration}</arg>
</arguments>
<msg timestamp="20210322 07:17:19.601" level="INFO">${national_registration} = 50682917494</msg>
<status status="PASS" starttime="20210322 07:17:19.600" endtime="20210322 07:17:19.601"></status>
</kw>
<kw name="Rg" library="FakerLibrary">
<doc>Brazilian RG, return plain numbers.
Check:  https://www.ngmatematica.com/2014/02/como-determinar-o-digito-verificador-do.html</doc>
<assign>
<var>${identity_card}</var>
</assign>
<msg timestamp="20210322 07:17:19.601" level="INFO">${identity_card} = 064712588</msg>
<status status="PASS" starttime="20210322 07:17:19.601" endtime="20210322 07:17:19.601"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${identity_card}</arg>
</arguments>
<msg timestamp="20210322 07:17:19.601" level="INFO">${identity_card} = 064712588</msg>
<status status="PASS" starttime="20210322 07:17:19.601" endtime="20210322 07:17:19.602"></status>
</kw>
<kw name="criar holder individual" library="accreditation_post_holder_individual">
<arguments>
<arg>holder_type=individual</arg>
<arg>holder_name=${holder_name}</arg>
<arg>email=${email}</arg>
<arg>national_registration=${national_registration}</arg>
<arg>revenue=${revenue}</arg>
<arg>birthday=${birthday}</arg>
<arg>mothers_name=${mothers_name}</arg>
<arg>identity_card=${identity_card}</arg>
<arg>pep=false</arg>
<arg>cbo=${cbo}</arg>
</arguments>
<kw name="conectar accreditation" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accreditation</arg>
<arg>url=${accreditation_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 07:17:19.603" level="INFO">Creating Session using : alias=accreditation, url=https://banking-accreditation-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 07:17:19.602" endtime="20210322 07:17:19.603"></status>
</kw>
<status status="PASS" starttime="20210322 07:17:19.602" endtime="20210322 07:17:19.603"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_type}</arg>
</arguments>
<msg timestamp="20210322 07:17:19.603" level="INFO">${holder_type} = individual</msg>
<status status="PASS" starttime="20210322 07:17:19.603" endtime="20210322 07:17:19.603"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_name}</arg>
</arguments>
<msg timestamp="20210322 07:17:19.604" level="INFO">${holder_name} = Holder de teste</msg>
<status status="PASS" starttime="20210322 07:17:19.604" endtime="20210322 07:17:19.604"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 07:17:19.604" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 07:17:19.604" endtime="20210322 07:17:19.604"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "${holder_type}",</arg>
<arg>"name": "${holder_name}",</arg>
<arg>"email": "${email}",</arg>
<arg>"national_registration": "${national_registration}",</arg>
<arg>"revenue": ${revenue},</arg>
<arg>"birthday": "${birthday}",</arg>
<arg>"mothers_name": "${mothers_name}",</arg>
<arg>"identity_card": "${identity_card}",</arg>
<arg>"pep": false,</arg>
<arg>"cbo": ${cbo}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 07:17:19.605" level="INFO">${body} = { "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "50682917494", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder",...</msg>
<status status="PASS" starttime="20210322 07:17:19.604" endtime="20210322 07:17:19.605"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 07:17:19.614" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "50682917494", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder", "identity_card": "064712588", "pep": false, "cbo": 821450 } 
json=None</msg>
<msg timestamp="20210322 07:17:20.285" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 07:17:19.605" endtime="20210322 07:17:20.285"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 07:17:20.286" level="INFO">{'id': '70d0231824a04e90baa1739cee824a33', 'name': 'Holder de teste', 'revenue': 5500.0, 'email': 'teste@teste.com.br', 'status': 'waiting_info_and_documents', 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'marketplace_name': 'Marketplace de Teste', 'created_at': '2021-03-22T07:17:21.208037', 'updated_at': '2021-03-22T07:17:21.208039', 'type': 'individual', 'national_registration': '50682917494', 'birthday': '1988-04-23', 'mothers_name': 'Mãe do Holder', 'identity_card': '064712588', 'pep': False, 'cbo': '821450', '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/70d0231824a04e90baa1739cee824a33', 'type': 'GET'}, 'phones': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/70d0231824a04e90baa1739cee824a33/phones', 'type': 'GET'}, 'addresses': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/70d0231824a04e90baa1739cee824a33/addresses', 'type': 'GET'}, 'documents': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/70d0231824a04e90baa1739cee824a33/documents', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 07:17:20.285" endtime="20210322 07:17:20.286"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 07:17:20.286" level="INFO">4cfd63ed48ec1c6d</msg>
<status status="PASS" starttime="20210322 07:17:20.286" endtime="20210322 07:17:20.286"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${body}</arg>
</arguments>
<msg timestamp="20210322 07:17:20.287" level="INFO">{ "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "50682917494", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder", "identity_card": "064712588", "pep": false, "cbo": 821450 }</msg>
<status status="PASS" starttime="20210322 07:17:20.287" endtime="20210322 07:17:20.287"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 07:17:20.287" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 07:17:20.287" endtime="20210322 07:17:20.287"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${holder_external_key}</var>
</assign>
<msg timestamp="20210322 07:17:20.288" level="INFO">${holder_external_key} = 70d0231824a04e90baa1739cee824a33</msg>
<status status="PASS" starttime="20210322 07:17:20.288" endtime="20210322 07:17:20.288"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_external_key}</arg>
</arguments>
<msg timestamp="20210322 07:17:20.289" level="INFO">${holder_external_key} = 70d0231824a04e90baa1739cee824a33</msg>
<status status="PASS" starttime="20210322 07:17:20.288" endtime="20210322 07:17:20.289"></status>
</kw>
<status status="PASS" starttime="20210322 07:17:19.602" endtime="20210322 07:17:20.289"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_name}</arg>
</arguments>
<msg timestamp="20210322 07:17:20.289" level="INFO">${holder_name} = Holder de teste</msg>
<status status="PASS" starttime="20210322 07:17:20.289" endtime="20210322 07:17:20.289"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 07:17:20.289" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 07:17:20.289" endtime="20210322 07:17:20.290"></status>
</kw>
<kw name="criar holder phone" library="accreditation_post_holder_phone">
<arguments>
<arg>21</arg>
<arg>51</arg>
<arg>996221236</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 07:17:20.290" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 07:17:20.290" endtime="20210322 07:17:20.290"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"area_code": "${phone_area_code}",</arg>
<arg>"country_code": "${phone_country_code}",</arg>
<arg>"number": "${phone_number}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 07:17:20.291" level="INFO">${body} = { "area_code": "21", "country_code": "51", "number": "996221236" }</msg>
<status status="PASS" starttime="20210322 07:17:20.290" endtime="20210322 07:17:20.291"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/phones</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 07:17:20.291" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/70d0231824a04e90baa1739cee824a33/phones, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "area_code": "21", "country_code": "51", "number": "996221236" } 
json=None</msg>
<msg timestamp="20210322 07:17:20.543" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 07:17:20.291" endtime="20210322 07:17:20.543"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 07:17:20.543" level="INFO">{'id': '7b265cf6f7d04070898f539128c62c02', 'area_code': '21', 'country_code': '51', 'number': '996221236', 'main': True, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/70d0231824a04e90baa1739cee824a33/phones/7b265cf6f7d04070898f539128c62c02', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/70d0231824a04e90baa1739cee824a33', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 07:17:20.543" endtime="20210322 07:17:20.543"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 07:17:20.544" level="INFO">45895a3343d75dd2</msg>
<status status="PASS" starttime="20210322 07:17:20.544" endtime="20210322 07:17:20.544"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 07:17:20.545" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 07:17:20.544" endtime="20210322 07:17:20.545"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${phone_external_key}</var>
</assign>
<msg timestamp="20210322 07:17:20.546" level="INFO">${phone_external_key} = 7b265cf6f7d04070898f539128c62c02</msg>
<status status="PASS" starttime="20210322 07:17:20.545" endtime="20210322 07:17:20.546"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${phone_external_key}</arg>
</arguments>
<msg timestamp="20210322 07:17:20.546" level="INFO">${phone_external_key} = 7b265cf6f7d04070898f539128c62c02</msg>
<status status="PASS" starttime="20210322 07:17:20.546" endtime="20210322 07:17:20.546"></status>
</kw>
<status status="PASS" starttime="20210322 07:17:20.290" endtime="20210322 07:17:20.546"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 07:17:20.547" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 07:17:20.547" endtime="20210322 07:17:20.547"></status>
</kw>
<kw name="criar holder address" library="accreditation_post_holder_address">
<arguments>
<arg>Rio de Janeiro</arg>
<arg>Rio de Janeiro</arg>
<arg>Brasil</arg>
<arg>Bairro de Testes</arg>
<arg>Rua de Testes</arg>
<arg>90</arg>
<arg>apto 200</arg>
<arg>21550987</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 07:17:20.548" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 07:17:20.548" endtime="20210322 07:17:20.548"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"city": "${city}",</arg>
<arg>"state": "${state}",</arg>
<arg>"country": "${country}",</arg>
<arg>"neighborhood": "${neighborhood}",</arg>
<arg>"street": "${street}",</arg>
<arg>"number": "${number}",</arg>
<arg>"complement": "${complement}",</arg>
<arg>"postal_code": "${postal_code}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 07:17:20.549" level="INFO">${body} = { "city": "Rio de Janeiro", "state": "Rio de Janeiro", "country": "Brasil", "neighborhood": "Bairro de Testes", "street": "Rua de Testes", "number": "90", "complement": "apto 200", "postal_code": "215...</msg>
<status status="PASS" starttime="20210322 07:17:20.548" endtime="20210322 07:17:20.549"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/addresses</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 07:17:20.549" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/70d0231824a04e90baa1739cee824a33/addresses, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "city": "Rio de Janeiro", "state": "Rio de Janeiro", "country": "Brasil", "neighborhood": "Bairro de Testes", "street": "Rua de Testes", "number": "90", "complement": "apto 200", "postal_code": "21550987" } 
json=None</msg>
<msg timestamp="20210322 07:17:20.831" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 07:17:20.549" endtime="20210322 07:17:20.831"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 07:17:20.832" level="INFO">{'id': '1ed369d4d95e4d2997df31b4b6999807', 'street': 'Rua de Testes', 'number': '90', 'city': 'Rio de Janeiro', 'complement': 'apto 200', 'state': 'Rio de Janeiro', 'neighborhood': 'Bairro de Testes', 'postal_code': '21550987', 'country': 'Brasil', 'main': True, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/70d0231824a04e90baa1739cee824a33/addresses/1ed369d4d95e4d2997df31b4b6999807', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/70d0231824a04e90baa1739cee824a33', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 07:17:20.831" endtime="20210322 07:17:20.832"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 07:17:20.832" level="INFO">5d438a4b95c06704</msg>
<status status="PASS" starttime="20210322 07:17:20.832" endtime="20210322 07:17:20.832"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 07:17:20.833" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 07:17:20.833" endtime="20210322 07:17:20.833"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${address_external_key}</var>
</assign>
<msg timestamp="20210322 07:17:20.834" level="INFO">${address_external_key} = 1ed369d4d95e4d2997df31b4b6999807</msg>
<status status="PASS" starttime="20210322 07:17:20.833" endtime="20210322 07:17:20.834"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${address_external_key}</arg>
</arguments>
<msg timestamp="20210322 07:17:20.835" level="INFO">${address_external_key} = 1ed369d4d95e4d2997df31b4b6999807</msg>
<status status="PASS" starttime="20210322 07:17:20.834" endtime="20210322 07:17:20.835"></status>
</kw>
<status status="PASS" starttime="20210322 07:17:20.547" endtime="20210322 07:17:20.835"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 07:17:20.835" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 07:17:20.835" endtime="20210322 07:17:20.835"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>SELFIE</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 07:17:20.836" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 07:17:20.836" endtime="20210322 07:17:20.836"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 07:17:20.837" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 07:17:20.838" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 07:17:20.836" endtime="20210322 07:17:20.838"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 07:17:20.839" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/70d0231824a04e90baa1739cee824a33/documents?type=SELFIE, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 07:17:21.169" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 07:17:20.838" endtime="20210322 07:17:21.169"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 07:17:21.171" level="INFO">{'id': 'ad1a45e849f14ceb8d213a8706fb26ac', 'document_type': 'selfie', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/70d0231824a04e90baa1739cee824a33/documents/ad1a45e849f14ceb8d213a8706fb26ac', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/70d0231824a04e90baa1739cee824a33', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/70d0231824a04e90baa1739cee824a33/documents/ad1a45e849f14ceb8d213a8706fb26ac/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 07:17:21.170" endtime="20210322 07:17:21.172"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 07:17:21.173" level="INFO">2d4ce146a5a432b4</msg>
<status status="PASS" starttime="20210322 07:17:21.172" endtime="20210322 07:17:21.173"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 07:17:21.175" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 07:17:21.174" endtime="20210322 07:17:21.175"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 07:17:21.178" level="INFO">${document_external_key} = ad1a45e849f14ceb8d213a8706fb26ac</msg>
<status status="PASS" starttime="20210322 07:17:21.176" endtime="20210322 07:17:21.178"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 07:17:21.180" level="INFO">${document_external_key} = ad1a45e849f14ceb8d213a8706fb26ac</msg>
<status status="PASS" starttime="20210322 07:17:21.179" endtime="20210322 07:17:21.180"></status>
</kw>
<status status="PASS" starttime="20210322 07:17:20.836" endtime="20210322 07:17:21.180"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 07:17:21.182" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 07:17:21.181" endtime="20210322 07:17:21.182"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>RG_FRENTE</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 07:17:21.184" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 07:17:21.184" endtime="20210322 07:17:21.184"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 07:17:21.186" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 07:17:21.188" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 07:17:21.185" endtime="20210322 07:17:21.188"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 07:17:21.189" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/70d0231824a04e90baa1739cee824a33/documents?type=RG_FRENTE, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 07:17:21.565" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 07:17:21.188" endtime="20210322 07:17:21.565"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 07:17:21.566" level="INFO">{'id': '2a07c9aa2c7a4a369d4444742674e342', 'document_type': 'rg_frente', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/70d0231824a04e90baa1739cee824a33/documents/2a07c9aa2c7a4a369d4444742674e342', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/70d0231824a04e90baa1739cee824a33', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/70d0231824a04e90baa1739cee824a33/documents/2a07c9aa2c7a4a369d4444742674e342/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 07:17:21.565" endtime="20210322 07:17:21.566"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 07:17:21.566" level="INFO">37673b4ff85decb4</msg>
<status status="PASS" starttime="20210322 07:17:21.566" endtime="20210322 07:17:21.566"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 07:17:21.567" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 07:17:21.567" endtime="20210322 07:17:21.567"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 07:17:21.568" level="INFO">${document_external_key} = 2a07c9aa2c7a4a369d4444742674e342</msg>
<status status="PASS" starttime="20210322 07:17:21.567" endtime="20210322 07:17:21.568"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 07:17:21.568" level="INFO">${document_external_key} = 2a07c9aa2c7a4a369d4444742674e342</msg>
<status status="PASS" starttime="20210322 07:17:21.568" endtime="20210322 07:17:21.568"></status>
</kw>
<status status="PASS" starttime="20210322 07:17:21.183" endtime="20210322 07:17:21.568"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 07:17:21.569" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 07:17:21.569" endtime="20210322 07:17:21.569"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>RG_VERSO</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 07:17:21.570" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 07:17:21.570" endtime="20210322 07:17:21.570"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 07:17:21.570" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 07:17:21.572" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 07:17:21.570" endtime="20210322 07:17:21.572"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 07:17:21.573" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/70d0231824a04e90baa1739cee824a33/documents?type=RG_VERSO, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 07:17:21.834" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 07:17:21.572" endtime="20210322 07:17:21.834"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 07:17:21.834" level="INFO">{'id': '7dbb798df80b44a19a969ec7b98833fe', 'document_type': 'rg_verso', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/70d0231824a04e90baa1739cee824a33/documents/7dbb798df80b44a19a969ec7b98833fe', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/70d0231824a04e90baa1739cee824a33', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/70d0231824a04e90baa1739cee824a33/documents/7dbb798df80b44a19a969ec7b98833fe/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 07:17:21.834" endtime="20210322 07:17:21.834"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 07:17:21.835" level="INFO">9f4bf9d2f9a16482</msg>
<status status="PASS" starttime="20210322 07:17:21.835" endtime="20210322 07:17:21.835"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 07:17:21.836" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 07:17:21.835" endtime="20210322 07:17:21.836"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 07:17:21.836" level="INFO">${document_external_key} = 7dbb798df80b44a19a969ec7b98833fe</msg>
<status status="PASS" starttime="20210322 07:17:21.836" endtime="20210322 07:17:21.836"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 07:17:21.837" level="INFO">${document_external_key} = 7dbb798df80b44a19a969ec7b98833fe</msg>
<status status="PASS" starttime="20210322 07:17:21.837" endtime="20210322 07:17:21.837"></status>
</kw>
<status status="PASS" starttime="20210322 07:17:21.569" endtime="20210322 07:17:21.837"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 07:17:21.838" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 07:17:21.837" endtime="20210322 07:17:21.838"></status>
</kw>
<kw name="solicitar aprovação do holder" library="accreditation_request_approval">
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 07:17:21.838" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 07:17:21.838" endtime="20210322 07:17:21.838"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/approval</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 07:17:21.839" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/70d0231824a04e90baa1739cee824a33/approval, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data=None 
json=None</msg>
<msg timestamp="20210322 07:17:22.124" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 07:17:21.839" endtime="20210322 07:17:22.124"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 07:17:22.125" level="INFO">{'message': 'Approval request accepted successfully. Processing analysis'}</msg>
<status status="PASS" starttime="20210322 07:17:22.124" endtime="20210322 07:17:22.125"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 07:17:22.127" level="INFO">24e4391ac257ba6a</msg>
<status status="PASS" starttime="20210322 07:17:22.126" endtime="20210322 07:17:22.127"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 07:17:22.128" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 07:17:22.127" endtime="20210322 07:17:22.128"></status>
</kw>
<status status="PASS" starttime="20210322 07:17:21.838" endtime="20210322 07:17:22.128"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 07:17:22.130" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 07:17:22.129" endtime="20210322 07:17:22.130"></status>
</kw>
<kw name="recebendo notificação de aprovação" library="accreditation_risk_notification">
<kw name="Uuid 4" library="FakerLibrary">
<doc>Generates a random UUID4 string.
:param cast_to: Specify what type the UUID should be cast to. Default is `str`
:type cast_to: callable</doc>
<assign>
<var>${assessment_id}</var>
</assign>
<msg timestamp="20210322 07:17:22.132" level="INFO">${assessment_id} = cfc22a03-1ade-4e98-9e3e-5a5ccd14f5e8</msg>
<status status="PASS" starttime="20210322 07:17:22.131" endtime="20210322 07:17:22.132"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>year</arg>
</arguments>
<assign>
<var>${year}</var>
</assign>
<msg timestamp="20210322 07:17:22.133" level="INFO">${year} = 2021</msg>
<status status="PASS" starttime="20210322 07:17:22.133" endtime="20210322 07:17:22.133"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>month</arg>
</arguments>
<assign>
<var>${month}</var>
</assign>
<msg timestamp="20210322 07:17:22.135" level="INFO">${month} = 03</msg>
<status status="PASS" starttime="20210322 07:17:22.134" endtime="20210322 07:17:22.135"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>day</arg>
</arguments>
<assign>
<var>${day}</var>
</assign>
<msg timestamp="20210322 07:17:22.136" level="INFO">${day} = 22</msg>
<status status="PASS" starttime="20210322 07:17:22.135" endtime="20210322 07:17:22.136"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 07:17:22.136" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 07:17:22.136" endtime="20210322 07:17:22.136"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "risk.assessment.result",</arg>
<arg>"resource": "business.holder",</arg>
<arg>"created_at": "${year}-${month}-${day} 15:28:56.747Z",</arg>
<arg>"marketplace_id": "${marketplace_external_key}",</arg>
<arg>"object": {</arg>
<arg>"result": "APPROVED",</arg>
<arg>"holder_id": "${holder_external_key}",</arg>
<arg>"applicant_id": "${application_external_key}",</arg>
<arg>"assessment_id": "${assessment_id}"</arg>
<arg>}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 07:17:22.136" level="INFO">${body} = { "type": "risk.assessment.result", "resource": "business.holder", "created_at": "2021-03-22 15:28:56.747Z", "marketplace_id": "f71a8951368a4cc085cf7875ff44e61c", "object": { "result": "APPROVED", "ho...</msg>
<status status="PASS" starttime="20210322 07:17:22.136" endtime="20210322 07:17:22.136"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/admin/internal_operation/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/registration/approval</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 07:17:22.137" level="INFO">POST Request using : uri=/admin/internal_operation/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/70d0231824a04e90baa1739cee824a33/registration/approval, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "risk.assessment.result", "resource": "business.holder", "created_at": "2021-03-22 15:28:56.747Z", "marketplace_id": "f71a8951368a4cc085cf7875ff44e61c", "object": { "result": "APPROVED", "holder_id": "70d0231824a04e90baa1739cee824a33", "applicant_id": "bcc25a6751c14b52af1340d40dba78c5", "assessment_id": "cfc22a03-1ade-4e98-9e3e-5a5ccd14f5e8" } } 
json=None</msg>
<msg timestamp="20210322 07:17:22.340" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 07:17:22.137" endtime="20210322 07:17:22.340"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 07:17:22.341" level="INFO">{'message': 'Holder approved successfully'}</msg>
<status status="PASS" starttime="20210322 07:17:22.341" endtime="20210322 07:17:22.341"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 07:17:22.342" level="INFO">7586489116f6d7ba</msg>
<status status="PASS" starttime="20210322 07:17:22.341" endtime="20210322 07:17:22.342"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 07:17:22.342" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 07:17:22.342" endtime="20210322 07:17:22.342"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 07:17:22.343" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 07:17:22.342" endtime="20210322 07:17:22.343"></status>
</kw>
<status status="PASS" starttime="20210322 07:17:22.130" endtime="20210322 07:17:22.343"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 07:17:22.343" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 07:17:22.343" endtime="20210322 07:17:22.343"></status>
</kw>
<kw name="buscar account por holder" library="accounts_get_accounts_by_holder">
<kw name="conectar accounts" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accounts</arg>
<arg>url=${account_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 07:17:22.344" level="INFO">Creating Session using : alias=accounts, url=https://banking-accounts-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 07:17:22.344" endtime="20210322 07:17:22.346"></status>
</kw>
<status status="PASS" starttime="20210322 07:17:22.344" endtime="20210322 07:17:22.346"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accounts</arg>
<arg>/marketplaces/${marketplace_external_key}/holders/${holder_external_key}/accounts</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 07:17:22.346" level="INFO">GET Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/holders/70d0231824a04e90baa1739cee824a33/accounts, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 07:17:22.966" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 07:17:22.346" endtime="20210322 07:17:22.966"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 07:17:22.968" level="INFO">{'items': [{'id': '367876eb71dd418a99a7145d5849a6c3', 'holder': '70d0231824a04e90baa1739cee824a33', 'balance': '0.00', 'currency': 'BRL', 'routing_number': '001', 'number': '5915390752', 'status': 'active', 'metadata': {}, 'created_at': '2021-03-22T10:17:23.281854', 'updated_at': '2021-03-22T10:17:23.281854', 'primary': True, 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'uri': '/v2/marketplaces/f71a8951368a4cc085cf7875ff44e61c/accounts/367876eb71dd418a99a7145d5849a6c3', 'resource': 'payment_account'}], 'has_more': False, 'limit': 100, 'total_pages': 1, 'page': 1, 'offset': 0, 'total': '1', 'query_count': '1'}</msg>
<status status="PASS" starttime="20210322 07:17:22.967" endtime="20210322 07:17:22.968"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 07:17:22.970" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 07:17:22.969" endtime="20210322 07:17:22.970"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["id"]}</arg>
</arguments>
<assign>
<var>${account_external_key}</var>
</assign>
<msg timestamp="20210322 07:17:22.972" level="INFO">${account_external_key} = 367876eb71dd418a99a7145d5849a6c3</msg>
<status status="PASS" starttime="20210322 07:17:22.970" endtime="20210322 07:17:22.972"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_external_key}</arg>
</arguments>
<msg timestamp="20210322 07:17:22.973" level="INFO">${account_external_key} = 367876eb71dd418a99a7145d5849a6c3</msg>
<status status="PASS" starttime="20210322 07:17:22.972" endtime="20210322 07:17:22.973"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["number"]}</arg>
</arguments>
<assign>
<var>${account_number}</var>
</assign>
<msg timestamp="20210322 07:17:22.975" level="INFO">${account_number} = 5915390752</msg>
<status status="PASS" starttime="20210322 07:17:22.974" endtime="20210322 07:17:22.975"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_number}</arg>
</arguments>
<msg timestamp="20210322 07:17:22.976" level="INFO">${account_number} = 5915390752</msg>
<status status="PASS" starttime="20210322 07:17:22.975" endtime="20210322 07:17:22.976"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["routing_number"]}</arg>
</arguments>
<assign>
<var>${account_routing_number}</var>
</assign>
<msg timestamp="20210322 07:17:22.977" level="INFO">${account_routing_number} = 001</msg>
<status status="PASS" starttime="20210322 07:17:22.976" endtime="20210322 07:17:22.977"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_routing_number}</arg>
</arguments>
<msg timestamp="20210322 07:17:22.978" level="INFO">${account_routing_number} = 001</msg>
<status status="PASS" starttime="20210322 07:17:22.978" endtime="20210322 07:17:22.978"></status>
</kw>
<status status="PASS" starttime="20210322 07:17:22.344" endtime="20210322 07:17:22.978"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 07:17:22.979" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 07:17:22.979" endtime="20210322 07:17:22.979"></status>
</kw>
<status status="PASS" starttime="20210322 07:17:19.597" endtime="20210322 07:17:22.980"></status>
</kw>
<kw name="criar chave pix" library="pix_dict_create_entry">
<arguments>
<arg>type=phone</arg>
<arg>value=${phone_pix}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 07:17:22.983" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 07:17:22.983" endtime="20210322 07:17:22.983"></status>
</kw>
<status status="PASS" starttime="20210322 07:17:22.982" endtime="20210322 07:17:22.984"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${type}</arg>
</arguments>
<msg timestamp="20210322 07:17:22.984" level="INFO">${type} = phone</msg>
<status status="PASS" starttime="20210322 07:17:22.984" endtime="20210322 07:17:22.984"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210322 07:17:22.985" level="INFO">${value} = +5521950587714</msg>
<status status="PASS" starttime="20210322 07:17:22.985" endtime="20210322 07:17:22.985"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 07:17:22.986" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 07:17:22.985" endtime="20210322 07:17:22.986"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "${type}",</arg>
<arg>"value": "${value}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 07:17:22.987" level="INFO">${body} = { "type": "phone", "value": "+5521950587714" }</msg>
<status status="PASS" starttime="20210322 07:17:22.986" endtime="20210322 07:17:22.987"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 07:17:22.987" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/70d0231824a04e90baa1739cee824a33/accounts/367876eb71dd418a99a7145d5849a6c3/entries, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "phone", "value": "+5521950587714" } 
json=None</msg>
<msg timestamp="20210322 07:17:23.617" level="INFO">${response} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20210322 07:17:22.987" endtime="20210322 07:17:23.617"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 07:17:23.618" level="INFO">{'id': '559a3b2636994d6e8da4f0425b907267', 'status': 'waiting_ownership_verification', 'created_at': '2021-03-22T07:17:24.571', 'updated_at': '2021-03-22T07:17:24.571', 'key': {'value': '+5521950587714', 'type': 'phone'}, 'account': {'id': '367876eb71dd418a99a7145d5849a6c3', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': '70d0231824a04e90baa1739cee824a33', 'owner': {'name': 'Holder de teste', 'national_registration': '50682917494', 'type': 'individual'}, 'routing_number': '001', 'number': '5915390752', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}, 'resource': 'pix.entry'}</msg>
<status status="PASS" starttime="20210322 07:17:23.617" endtime="20210322 07:17:23.618"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 07:17:23.618" level="INFO">bdda7e9bdc8d81f8</msg>
<status status="PASS" starttime="20210322 07:17:23.618" endtime="20210322 07:17:23.618"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 07:17:23.619" level="INFO">202</msg>
<status status="PASS" starttime="20210322 07:17:23.618" endtime="20210322 07:17:23.619"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 07:17:23.619" level="INFO">${response} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20210322 07:17:23.619" endtime="20210322 07:17:23.619"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${entry_external_key}</var>
</assign>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<status status="PASS" starttime="20210322 07:17:23.620" endtime="20210322 07:17:23.621"></status>
</kw>
<msg timestamp="20210322 07:17:23.621" level="INFO">${entry_external_key} = 559a3b2636994d6e8da4f0425b907267</msg>
<status status="PASS" starttime="20210322 07:17:23.620" endtime="20210322 07:17:23.621"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${entry_external_key}</arg>
</arguments>
<msg timestamp="20210322 07:17:23.621" level="INFO">${entry_external_key} = 559a3b2636994d6e8da4f0425b907267</msg>
<status status="PASS" starttime="20210322 07:17:23.621" endtime="20210322 07:17:23.621"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["key"]["value"]}</arg>
</arguments>
<assign>
<var>${entry_key_value}</var>
</assign>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["key"]["value"]}</arg>
</arguments>
<status status="PASS" starttime="20210322 07:17:23.622" endtime="20210322 07:17:23.622"></status>
</kw>
<msg timestamp="20210322 07:17:23.622" level="INFO">${entry_key_value} = +5521950587714</msg>
<status status="PASS" starttime="20210322 07:17:23.621" endtime="20210322 07:17:23.622"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${entry_key_value}</arg>
</arguments>
<msg timestamp="20210322 07:17:23.623" level="INFO">${entry_key_value} = +5521950587714</msg>
<status status="PASS" starttime="20210322 07:17:23.623" endtime="20210322 07:17:23.623"></status>
</kw>
<status status="PASS" starttime="20210322 07:17:22.981" endtime="20210322 07:17:23.623"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${holder_external_key}</arg>
</arguments>
<assign>
<var>${holder_owner}</var>
</assign>
<msg timestamp="20210322 07:17:23.624" level="INFO">${holder_owner} = 70d0231824a04e90baa1739cee824a33</msg>
<status status="PASS" starttime="20210322 07:17:23.624" endtime="20210322 07:17:23.624"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${holder_name}</arg>
</arguments>
<assign>
<var>${holder_name_owner}</var>
</assign>
<msg timestamp="20210322 07:17:23.625" level="INFO">${holder_name_owner} = Holder de teste</msg>
<status status="PASS" starttime="20210322 07:17:23.625" endtime="20210322 07:17:23.625"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${national_registration}</arg>
</arguments>
<assign>
<var>${national_registration_owner}</var>
</assign>
<msg timestamp="20210322 07:17:23.626" level="INFO">${national_registration_owner} = 50682917494</msg>
<status status="PASS" starttime="20210322 07:17:23.626" endtime="20210322 07:17:23.626"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${account_external_key}</arg>
</arguments>
<assign>
<var>${account_owner}</var>
</assign>
<msg timestamp="20210322 07:17:23.627" level="INFO">${account_owner} = 367876eb71dd418a99a7145d5849a6c3</msg>
<status status="PASS" starttime="20210322 07:17:23.627" endtime="20210322 07:17:23.627"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${account_number}</arg>
</arguments>
<assign>
<var>${account_number_owner}</var>
</assign>
<msg timestamp="20210322 07:17:23.629" level="INFO">${account_number_owner} = 5915390752</msg>
<status status="PASS" starttime="20210322 07:17:23.629" endtime="20210322 07:17:23.629"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${account_routing_number}</arg>
</arguments>
<assign>
<var>${account_routing_number_owner}</var>
</assign>
<msg timestamp="20210322 07:17:23.630" level="INFO">${account_routing_number_owner} = 001</msg>
<status status="PASS" starttime="20210322 07:17:23.630" endtime="20210322 07:17:23.630"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${entry_external_key}</arg>
</arguments>
<assign>
<var>${entry_owner}</var>
</assign>
<msg timestamp="20210322 07:17:23.630" level="INFO">${entry_owner} = 559a3b2636994d6e8da4f0425b907267</msg>
<status status="PASS" starttime="20210322 07:17:23.630" endtime="20210322 07:17:23.630"></status>
</kw>
<kw name="buscar verification code" library="pix_dict_verification_code">
<arguments>
<arg>holder_external_key=${holder_owner}</arg>
<arg>account_external_key=${account_owner}</arg>
<arg>entry_external_key=${entry_owner}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 07:17:23.632" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 07:17:23.632" endtime="20210322 07:17:23.632"></status>
</kw>
<status status="PASS" starttime="20210322 07:17:23.631" endtime="20210322 07:17:23.632"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/admin/internal_operation/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries/${entry_external_key}/code</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 07:17:23.633" level="INFO">GET Request using : uri=/admin/internal_operation/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/70d0231824a04e90baa1739cee824a33/accounts/367876eb71dd418a99a7145d5849a6c3/entries/559a3b2636994d6e8da4f0425b907267/code, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 07:17:24.230" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 07:17:23.632" endtime="20210322 07:17:24.230"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 07:17:24.232" level="INFO">{'code': '7817'}</msg>
<status status="PASS" starttime="20210322 07:17:24.231" endtime="20210322 07:17:24.232"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 07:17:24.233" level="INFO">587669ce40a4fc10</msg>
<status status="PASS" starttime="20210322 07:17:24.233" endtime="20210322 07:17:24.234"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 07:17:24.235" level="INFO">200</msg>
<status status="PASS" starttime="20210322 07:17:24.234" endtime="20210322 07:17:24.235"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 07:17:24.236" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 07:17:24.236" endtime="20210322 07:17:24.236"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["code"]}</arg>
</arguments>
<assign>
<var>${verification_code}</var>
</assign>
<msg timestamp="20210322 07:17:24.237" level="INFO">${verification_code} = 7817</msg>
<status status="PASS" starttime="20210322 07:17:24.237" endtime="20210322 07:17:24.237"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${verification_code}</arg>
</arguments>
<msg timestamp="20210322 07:17:24.238" level="INFO">${verification_code} = 7817</msg>
<status status="PASS" starttime="20210322 07:17:24.238" endtime="20210322 07:17:24.238"></status>
</kw>
<status status="PASS" starttime="20210322 07:17:23.631" endtime="20210322 07:17:24.239"></status>
</kw>
<kw name="confirmar propriedade da chave pix" library="pix_dict_confirm_propriety">
<arguments>
<arg>verification_code=${verification_code}</arg>
<arg>holder_external_key=${holder_owner}</arg>
<arg>account_external_key=${account_owner}</arg>
<arg>entry_external_key=${entry_owner}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 07:17:24.242" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 07:17:24.242" endtime="20210322 07:17:24.242"></status>
</kw>
<status status="PASS" starttime="20210322 07:17:24.241" endtime="20210322 07:17:24.243"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 07:17:24.243" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 07:17:24.243" endtime="20210322 07:17:24.243"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"code": "${verification_code}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 07:17:24.244" level="INFO">${body} = { "code": "7817" }</msg>
<status status="PASS" starttime="20210322 07:17:24.244" endtime="20210322 07:17:24.244"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries/${entry_external_key}/ownership</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 07:17:24.245" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/70d0231824a04e90baa1739cee824a33/accounts/367876eb71dd418a99a7145d5849a6c3/entries/559a3b2636994d6e8da4f0425b907267/ownership, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "code": "7817" } 
json=None</msg>
<msg timestamp="20210322 07:17:26.061" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 07:17:24.244" endtime="20210322 07:17:26.062"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 07:17:26.064" level="INFO">{'id': '559a3b2636994d6e8da4f0425b907267', 'status': 'active', 'created_at': '2021-03-22T07:17:24.571', 'updated_at': '2021-03-22T07:17:27.028', 'key': {'value': '+5521950587714', 'type': 'phone'}, 'account': {'id': '367876eb71dd418a99a7145d5849a6c3', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': '70d0231824a04e90baa1739cee824a33', 'owner': {'name': 'Holder de teste', 'national_registration': '50682917494', 'type': 'individual'}, 'routing_number': '001', 'number': '5915390752', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}, 'resource': 'pix.entry'}</msg>
<status status="PASS" starttime="20210322 07:17:26.063" endtime="20210322 07:17:26.064"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 07:17:26.066" level="INFO">ab457d977459321e</msg>
<status status="PASS" starttime="20210322 07:17:26.065" endtime="20210322 07:17:26.067"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 07:17:26.068" level="INFO">201</msg>
<status status="PASS" starttime="20210322 07:17:26.067" endtime="20210322 07:17:26.069"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 07:17:26.070" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 07:17:26.070" endtime="20210322 07:17:26.071"></status>
</kw>
<status status="PASS" starttime="20210322 07:17:24.240" endtime="20210322 07:17:26.071"></status>
</kw>
<kw name="validar chave pix" library="asserts">
<arguments>
<arg>key_status=active</arg>
<arg>key_type=${type}</arg>
<arg>key_value=${value}</arg>
<arg>account_external_key=${account_owner}</arg>
<arg>marketplace_external_key=${marketplace_external_key}</arg>
<arg>holder_external_key=${holder_owner}</arg>
<arg>account_number=${account_number_owner}</arg>
<arg>account_routing_number=${account_routing_number_owner}</arg>
<arg>account_type=CACC</arg>
<arg>owner_key_name=${holder_name_owner}</arg>
<arg>national_registration=${national_registration_owner}</arg>
<arg>holder_type=${holder_type}</arg>
<arg>psp_code=19468242</arg>
<arg>psp_name=Zoop Tecnologia e Meios de Pagamento S.A.</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar status da chave</arg>
</arguments>
<msg timestamp="20210322 07:17:26.079" level="INFO">Validar status da chave</msg>
<status status="PASS" starttime="20210322 07:17:26.078" endtime="20210322 07:17:26.079"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["status"]}</arg>
<arg>${key_status}</arg>
</arguments>
<status status="PASS" starttime="20210322 07:17:26.080" endtime="20210322 07:17:26.082"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando Tipo da chave PIX</arg>
</arguments>
<msg timestamp="20210322 07:17:26.083" level="INFO">Validando Tipo da chave PIX</msg>
<status status="PASS" starttime="20210322 07:17:26.082" endtime="20210322 07:17:26.083"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["key"]["type"]}</arg>
<arg>${key_type}</arg>
</arguments>
<status status="PASS" starttime="20210322 07:17:26.084" endtime="20210322 07:17:26.086"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando Valor da chave PIX</arg>
</arguments>
<msg timestamp="20210322 07:17:26.087" level="INFO">Validando Valor da chave PIX</msg>
<status status="PASS" starttime="20210322 07:17:26.086" endtime="20210322 07:17:26.087"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${type}' == 'evp'</arg>
<arg>Should Not Be Empty</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' != 'evp'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${key_value}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${key_value}</arg>
</arguments>
<status status="PASS" starttime="20210322 07:17:26.089" endtime="20210322 07:17:26.090"></status>
</kw>
<status status="PASS" starttime="20210322 07:17:26.087" endtime="20210322 07:17:26.090"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando dados da conta</arg>
</arguments>
<msg timestamp="20210322 07:17:26.091" level="INFO">Validando dados da conta</msg>
<status status="PASS" starttime="20210322 07:17:26.091" endtime="20210322 07:17:26.091"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["id"]}</arg>
<arg>${account_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210322 07:17:26.091" endtime="20210322 07:17:26.092"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["marketplace"]}</arg>
<arg>${marketplace_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210322 07:17:26.093" endtime="20210322 07:17:26.093"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["holder"]}</arg>
<arg>${holder_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210322 07:17:26.094" endtime="20210322 07:17:26.095"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["number"]}</arg>
<arg>${account_number}</arg>
</arguments>
<status status="PASS" starttime="20210322 07:17:26.095" endtime="20210322 07:17:26.096"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["routing_number"]}</arg>
<arg>${account_routing_number}</arg>
</arguments>
<status status="PASS" starttime="20210322 07:17:26.096" endtime="20210322 07:17:26.097"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["type"]}</arg>
<arg>${account_type}</arg>
</arguments>
<status status="PASS" starttime="20210322 07:17:26.097" endtime="20210322 07:17:26.098"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar Proprietário da Account Owner</arg>
</arguments>
<msg timestamp="20210322 07:17:26.098" level="INFO">Validar Proprietário da Account Owner</msg>
<status status="PASS" starttime="20210322 07:17:26.098" endtime="20210322 07:17:26.099"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["account"]["owner"]["name"]}</arg>
<arg>${owner_key_name}</arg>
</arguments>
<status status="PASS" starttime="20210322 07:17:26.099" endtime="20210322 07:17:26.100"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar national_registration da Account Owner</arg>
</arguments>
<msg timestamp="20210322 07:17:26.100" level="INFO">Validar national_registration da Account Owner</msg>
<status status="PASS" starttime="20210322 07:17:26.100" endtime="20210322 07:17:26.100"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["account"]["owner"]["national_registration"]}</arg>
<arg>${national_registration}</arg>
</arguments>
<status status="PASS" starttime="20210322 07:17:26.101" endtime="20210322 07:17:26.101"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar Holder Type do Account Owner</arg>
</arguments>
<msg timestamp="20210322 07:17:26.101" level="INFO">Validar Holder Type do Account Owner</msg>
<status status="PASS" starttime="20210322 07:17:26.101" endtime="20210322 07:17:26.101"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["account"]["owner"]["type"]}</arg>
<arg>${holder_type}</arg>
</arguments>
<status status="PASS" starttime="20210322 07:17:26.102" endtime="20210322 07:17:26.102"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar PSP</arg>
</arguments>
<msg timestamp="20210322 07:17:26.102" level="INFO">Validar PSP</msg>
<status status="PASS" starttime="20210322 07:17:26.102" endtime="20210322 07:17:26.102"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["psp"]["code"]}</arg>
<arg>${psp_code}</arg>
</arguments>
<status status="PASS" starttime="20210322 07:17:26.102" endtime="20210322 07:17:26.103"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["psp"]["name"]}</arg>
<arg>${psp_name}</arg>
</arguments>
<status status="PASS" starttime="20210322 07:17:26.103" endtime="20210322 07:17:26.103"></status>
</kw>
<status status="PASS" starttime="20210322 07:17:26.074" endtime="20210322 07:17:26.103"></status>
</kw>
<kw name="criar holder individual ativo" library="accreditation_create_holder_active">
<kw name="conectar accreditation" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accreditation</arg>
<arg>url=${accreditation_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 07:17:26.104" level="INFO">Creating Session using : alias=accreditation, url=https://banking-accreditation-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 07:17:26.104" endtime="20210322 07:17:26.105"></status>
</kw>
<status status="PASS" starttime="20210322 07:17:26.104" endtime="20210322 07:17:26.105"></status>
</kw>
<kw name="Cpf" library="FakerLibrary">
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 07:17:26.105" level="INFO">${national_registration} = 693.241.085-06</msg>
<status status="PASS" starttime="20210322 07:17:26.105" endtime="20210322 07:17:26.105"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${national_registration}</arg>
<arg>.</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 07:17:26.106" level="INFO">${national_registration} = 693241085-06</msg>
<status status="PASS" starttime="20210322 07:17:26.105" endtime="20210322 07:17:26.106"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${national_registration}</arg>
<arg>-</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 07:17:26.106" level="INFO">${national_registration} = 69324108506</msg>
<status status="PASS" starttime="20210322 07:17:26.106" endtime="20210322 07:17:26.106"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${national_registration}</arg>
</arguments>
<msg timestamp="20210322 07:17:26.106" level="INFO">${national_registration} = 69324108506</msg>
<status status="PASS" starttime="20210322 07:17:26.106" endtime="20210322 07:17:26.106"></status>
</kw>
<kw name="Rg" library="FakerLibrary">
<doc>Brazilian RG, return plain numbers.
Check:  https://www.ngmatematica.com/2014/02/como-determinar-o-digito-verificador-do.html</doc>
<assign>
<var>${identity_card}</var>
</assign>
<msg timestamp="20210322 07:17:26.107" level="INFO">${identity_card} = 01538276X</msg>
<status status="PASS" starttime="20210322 07:17:26.107" endtime="20210322 07:17:26.107"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${identity_card}</arg>
</arguments>
<msg timestamp="20210322 07:17:26.107" level="INFO">${identity_card} = 01538276X</msg>
<status status="PASS" starttime="20210322 07:17:26.107" endtime="20210322 07:17:26.107"></status>
</kw>
<kw name="criar holder individual" library="accreditation_post_holder_individual">
<arguments>
<arg>holder_type=individual</arg>
<arg>holder_name=${holder_name}</arg>
<arg>email=${email}</arg>
<arg>national_registration=${national_registration}</arg>
<arg>revenue=${revenue}</arg>
<arg>birthday=${birthday}</arg>
<arg>mothers_name=${mothers_name}</arg>
<arg>identity_card=${identity_card}</arg>
<arg>pep=false</arg>
<arg>cbo=${cbo}</arg>
</arguments>
<kw name="conectar accreditation" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accreditation</arg>
<arg>url=${accreditation_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 07:17:26.108" level="INFO">Creating Session using : alias=accreditation, url=https://banking-accreditation-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 07:17:26.108" endtime="20210322 07:17:26.109"></status>
</kw>
<status status="PASS" starttime="20210322 07:17:26.108" endtime="20210322 07:17:26.109"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_type}</arg>
</arguments>
<msg timestamp="20210322 07:17:26.109" level="INFO">${holder_type} = individual</msg>
<status status="PASS" starttime="20210322 07:17:26.109" endtime="20210322 07:17:26.109"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_name}</arg>
</arguments>
<msg timestamp="20210322 07:17:26.110" level="INFO">${holder_name} = Holder de teste</msg>
<status status="PASS" starttime="20210322 07:17:26.109" endtime="20210322 07:17:26.110"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 07:17:26.110" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 07:17:26.110" endtime="20210322 07:17:26.110"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "${holder_type}",</arg>
<arg>"name": "${holder_name}",</arg>
<arg>"email": "${email}",</arg>
<arg>"national_registration": "${national_registration}",</arg>
<arg>"revenue": ${revenue},</arg>
<arg>"birthday": "${birthday}",</arg>
<arg>"mothers_name": "${mothers_name}",</arg>
<arg>"identity_card": "${identity_card}",</arg>
<arg>"pep": false,</arg>
<arg>"cbo": ${cbo}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 07:17:26.111" level="INFO">${body} = { "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "69324108506", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder",...</msg>
<status status="PASS" starttime="20210322 07:17:26.110" endtime="20210322 07:17:26.111"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 07:17:26.111" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "69324108506", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder", "identity_card": "01538276X", "pep": false, "cbo": 821450 } 
json=None</msg>
<msg timestamp="20210322 07:17:26.756" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 07:17:26.111" endtime="20210322 07:17:26.756"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 07:17:26.757" level="INFO">{'id': '435b0a2961d74d8f9b05708b74625280', 'name': 'Holder de teste', 'revenue': 5500.0, 'email': 'teste@teste.com.br', 'status': 'waiting_info_and_documents', 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'marketplace_name': 'Marketplace de Teste', 'created_at': '2021-03-22T07:17:27.70189', 'updated_at': '2021-03-22T07:17:27.701892', 'type': 'individual', 'national_registration': '69324108506', 'birthday': '1988-04-23', 'mothers_name': 'Mãe do Holder', 'identity_card': '01538276X', 'pep': False, 'cbo': '821450', '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/435b0a2961d74d8f9b05708b74625280', 'type': 'GET'}, 'phones': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/435b0a2961d74d8f9b05708b74625280/phones', 'type': 'GET'}, 'addresses': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/435b0a2961d74d8f9b05708b74625280/addresses', 'type': 'GET'}, 'documents': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/435b0a2961d74d8f9b05708b74625280/documents', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 07:17:26.757" endtime="20210322 07:17:26.757"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 07:17:26.758" level="INFO">e368c95a3ff818e4</msg>
<status status="PASS" starttime="20210322 07:17:26.757" endtime="20210322 07:17:26.758"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${body}</arg>
</arguments>
<msg timestamp="20210322 07:17:26.758" level="INFO">{ "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "69324108506", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder", "identity_card": "01538276X", "pep": false, "cbo": 821450 }</msg>
<status status="PASS" starttime="20210322 07:17:26.758" endtime="20210322 07:17:26.758"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 07:17:26.759" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 07:17:26.759" endtime="20210322 07:17:26.759"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${holder_external_key}</var>
</assign>
<msg timestamp="20210322 07:17:26.760" level="INFO">${holder_external_key} = 435b0a2961d74d8f9b05708b74625280</msg>
<status status="PASS" starttime="20210322 07:17:26.759" endtime="20210322 07:17:26.760"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_external_key}</arg>
</arguments>
<msg timestamp="20210322 07:17:26.760" level="INFO">${holder_external_key} = 435b0a2961d74d8f9b05708b74625280</msg>
<status status="PASS" starttime="20210322 07:17:26.760" endtime="20210322 07:17:26.760"></status>
</kw>
<status status="PASS" starttime="20210322 07:17:26.107" endtime="20210322 07:17:26.760"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_name}</arg>
</arguments>
<msg timestamp="20210322 07:17:26.761" level="INFO">${holder_name} = Holder de teste</msg>
<status status="PASS" starttime="20210322 07:17:26.761" endtime="20210322 07:17:26.761"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 07:17:26.761" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 07:17:26.761" endtime="20210322 07:17:26.761"></status>
</kw>
<kw name="criar holder phone" library="accreditation_post_holder_phone">
<arguments>
<arg>21</arg>
<arg>51</arg>
<arg>996221236</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 07:17:26.762" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 07:17:26.762" endtime="20210322 07:17:26.762"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"area_code": "${phone_area_code}",</arg>
<arg>"country_code": "${phone_country_code}",</arg>
<arg>"number": "${phone_number}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 07:17:26.763" level="INFO">${body} = { "area_code": "21", "country_code": "51", "number": "996221236" }</msg>
<status status="PASS" starttime="20210322 07:17:26.763" endtime="20210322 07:17:26.763"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/phones</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 07:17:26.764" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/435b0a2961d74d8f9b05708b74625280/phones, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "area_code": "21", "country_code": "51", "number": "996221236" } 
json=None</msg>
<msg timestamp="20210322 07:17:26.981" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 07:17:26.763" endtime="20210322 07:17:26.981"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 07:17:26.981" level="INFO">{'id': '2641fabf8dc34cbf8ea6d0deb9d0bf9a', 'area_code': '21', 'country_code': '51', 'number': '996221236', 'main': True, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/435b0a2961d74d8f9b05708b74625280/phones/2641fabf8dc34cbf8ea6d0deb9d0bf9a', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/435b0a2961d74d8f9b05708b74625280', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 07:17:26.981" endtime="20210322 07:17:26.981"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 07:17:26.982" level="INFO">c8c6eed330f686a4</msg>
<status status="PASS" starttime="20210322 07:17:26.982" endtime="20210322 07:17:26.982"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 07:17:26.982" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 07:17:26.982" endtime="20210322 07:17:26.982"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${phone_external_key}</var>
</assign>
<msg timestamp="20210322 07:17:26.983" level="INFO">${phone_external_key} = 2641fabf8dc34cbf8ea6d0deb9d0bf9a</msg>
<status status="PASS" starttime="20210322 07:17:26.983" endtime="20210322 07:17:26.983"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${phone_external_key}</arg>
</arguments>
<msg timestamp="20210322 07:17:26.983" level="INFO">${phone_external_key} = 2641fabf8dc34cbf8ea6d0deb9d0bf9a</msg>
<status status="PASS" starttime="20210322 07:17:26.983" endtime="20210322 07:17:26.983"></status>
</kw>
<status status="PASS" starttime="20210322 07:17:26.762" endtime="20210322 07:17:26.983"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 07:17:26.984" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 07:17:26.984" endtime="20210322 07:17:26.984"></status>
</kw>
<kw name="criar holder address" library="accreditation_post_holder_address">
<arguments>
<arg>Rio de Janeiro</arg>
<arg>Rio de Janeiro</arg>
<arg>Brasil</arg>
<arg>Bairro de Testes</arg>
<arg>Rua de Testes</arg>
<arg>90</arg>
<arg>apto 200</arg>
<arg>21550987</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 07:17:26.985" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 07:17:26.985" endtime="20210322 07:17:26.985"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"city": "${city}",</arg>
<arg>"state": "${state}",</arg>
<arg>"country": "${country}",</arg>
<arg>"neighborhood": "${neighborhood}",</arg>
<arg>"street": "${street}",</arg>
<arg>"number": "${number}",</arg>
<arg>"complement": "${complement}",</arg>
<arg>"postal_code": "${postal_code}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 07:17:26.985" level="INFO">${body} = { "city": "Rio de Janeiro", "state": "Rio de Janeiro", "country": "Brasil", "neighborhood": "Bairro de Testes", "street": "Rua de Testes", "number": "90", "complement": "apto 200", "postal_code": "215...</msg>
<status status="PASS" starttime="20210322 07:17:26.985" endtime="20210322 07:17:26.985"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/addresses</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 07:17:26.986" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/435b0a2961d74d8f9b05708b74625280/addresses, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "city": "Rio de Janeiro", "state": "Rio de Janeiro", "country": "Brasil", "neighborhood": "Bairro de Testes", "street": "Rua de Testes", "number": "90", "complement": "apto 200", "postal_code": "21550987" } 
json=None</msg>
<msg timestamp="20210322 07:17:27.204" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 07:17:26.985" endtime="20210322 07:17:27.204"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 07:17:27.204" level="INFO">{'id': '3a78832f513e4aa294cb96c77216b093', 'street': 'Rua de Testes', 'number': '90', 'city': 'Rio de Janeiro', 'complement': 'apto 200', 'state': 'Rio de Janeiro', 'neighborhood': 'Bairro de Testes', 'postal_code': '21550987', 'country': 'Brasil', 'main': True, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/435b0a2961d74d8f9b05708b74625280/addresses/3a78832f513e4aa294cb96c77216b093', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/435b0a2961d74d8f9b05708b74625280', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 07:17:27.204" endtime="20210322 07:17:27.205"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 07:17:27.205" level="INFO">22b42577bc11d941</msg>
<status status="PASS" starttime="20210322 07:17:27.205" endtime="20210322 07:17:27.205"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 07:17:27.206" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 07:17:27.205" endtime="20210322 07:17:27.206"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${address_external_key}</var>
</assign>
<msg timestamp="20210322 07:17:27.207" level="INFO">${address_external_key} = 3a78832f513e4aa294cb96c77216b093</msg>
<status status="PASS" starttime="20210322 07:17:27.206" endtime="20210322 07:17:27.207"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${address_external_key}</arg>
</arguments>
<msg timestamp="20210322 07:17:27.207" level="INFO">${address_external_key} = 3a78832f513e4aa294cb96c77216b093</msg>
<status status="PASS" starttime="20210322 07:17:27.207" endtime="20210322 07:17:27.207"></status>
</kw>
<status status="PASS" starttime="20210322 07:17:26.984" endtime="20210322 07:17:27.207"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 07:17:27.207" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 07:17:27.207" endtime="20210322 07:17:27.207"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>SELFIE</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 07:17:27.208" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 07:17:27.208" endtime="20210322 07:17:27.208"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 07:17:27.208" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 07:17:27.210" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 07:17:27.208" endtime="20210322 07:17:27.210"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 07:17:27.210" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/435b0a2961d74d8f9b05708b74625280/documents?type=SELFIE, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 07:17:27.471" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 07:17:27.210" endtime="20210322 07:17:27.471"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 07:17:27.471" level="INFO">{'id': '319f0a028e054c2ab53d4cbd6e8755f7', 'document_type': 'selfie', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/435b0a2961d74d8f9b05708b74625280/documents/319f0a028e054c2ab53d4cbd6e8755f7', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/435b0a2961d74d8f9b05708b74625280', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/435b0a2961d74d8f9b05708b74625280/documents/319f0a028e054c2ab53d4cbd6e8755f7/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 07:17:27.471" endtime="20210322 07:17:27.471"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 07:17:27.472" level="INFO">78ba82daebb72842</msg>
<status status="PASS" starttime="20210322 07:17:27.472" endtime="20210322 07:17:27.472"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 07:17:27.473" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 07:17:27.472" endtime="20210322 07:17:27.473"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 07:17:27.473" level="INFO">${document_external_key} = 319f0a028e054c2ab53d4cbd6e8755f7</msg>
<status status="PASS" starttime="20210322 07:17:27.473" endtime="20210322 07:17:27.473"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 07:17:27.474" level="INFO">${document_external_key} = 319f0a028e054c2ab53d4cbd6e8755f7</msg>
<status status="PASS" starttime="20210322 07:17:27.474" endtime="20210322 07:17:27.474"></status>
</kw>
<status status="PASS" starttime="20210322 07:17:27.208" endtime="20210322 07:17:27.474"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 07:17:27.475" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 07:17:27.474" endtime="20210322 07:17:27.475"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>RG_FRENTE</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 07:17:27.476" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 07:17:27.475" endtime="20210322 07:17:27.476"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 07:17:27.476" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 07:17:27.477" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 07:17:27.476" endtime="20210322 07:17:27.477"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 07:17:27.478" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/435b0a2961d74d8f9b05708b74625280/documents?type=RG_FRENTE, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 07:17:27.774" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 07:17:27.478" endtime="20210322 07:17:27.774"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 07:17:27.775" level="INFO">{'id': '3a54e8c5a9fb4444bcf13fb93db553b2', 'document_type': 'rg_frente', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/435b0a2961d74d8f9b05708b74625280/documents/3a54e8c5a9fb4444bcf13fb93db553b2', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/435b0a2961d74d8f9b05708b74625280', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/435b0a2961d74d8f9b05708b74625280/documents/3a54e8c5a9fb4444bcf13fb93db553b2/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 07:17:27.775" endtime="20210322 07:17:27.775"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 07:17:27.776" level="INFO">760893864b35fa52</msg>
<status status="PASS" starttime="20210322 07:17:27.776" endtime="20210322 07:17:27.776"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 07:17:27.778" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 07:17:27.777" endtime="20210322 07:17:27.778"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 07:17:27.779" level="INFO">${document_external_key} = 3a54e8c5a9fb4444bcf13fb93db553b2</msg>
<status status="PASS" starttime="20210322 07:17:27.778" endtime="20210322 07:17:27.779"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 07:17:27.780" level="INFO">${document_external_key} = 3a54e8c5a9fb4444bcf13fb93db553b2</msg>
<status status="PASS" starttime="20210322 07:17:27.780" endtime="20210322 07:17:27.780"></status>
</kw>
<status status="PASS" starttime="20210322 07:17:27.475" endtime="20210322 07:17:27.781"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 07:17:27.782" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 07:17:27.781" endtime="20210322 07:17:27.782"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>RG_VERSO</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 07:17:27.783" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 07:17:27.782" endtime="20210322 07:17:27.783"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 07:17:27.783" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 07:17:27.784" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 07:17:27.783" endtime="20210322 07:17:27.784"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 07:17:27.785" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/435b0a2961d74d8f9b05708b74625280/documents?type=RG_VERSO, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 07:17:28.052" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 07:17:27.785" endtime="20210322 07:17:28.052"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 07:17:28.054" level="INFO">{'id': 'ebcd227207da413c9ae5a0b7457d77c8', 'document_type': 'rg_verso', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/435b0a2961d74d8f9b05708b74625280/documents/ebcd227207da413c9ae5a0b7457d77c8', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/435b0a2961d74d8f9b05708b74625280', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/435b0a2961d74d8f9b05708b74625280/documents/ebcd227207da413c9ae5a0b7457d77c8/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 07:17:28.053" endtime="20210322 07:17:28.054"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 07:17:28.056" level="INFO">17365458cc156c9b</msg>
<status status="PASS" starttime="20210322 07:17:28.055" endtime="20210322 07:17:28.057"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 07:17:28.059" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 07:17:28.058" endtime="20210322 07:17:28.059"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 07:17:28.062" level="INFO">${document_external_key} = ebcd227207da413c9ae5a0b7457d77c8</msg>
<status status="PASS" starttime="20210322 07:17:28.060" endtime="20210322 07:17:28.062"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 07:17:28.064" level="INFO">${document_external_key} = ebcd227207da413c9ae5a0b7457d77c8</msg>
<status status="PASS" starttime="20210322 07:17:28.063" endtime="20210322 07:17:28.064"></status>
</kw>
<status status="PASS" starttime="20210322 07:17:27.782" endtime="20210322 07:17:28.064"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 07:17:28.066" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 07:17:28.065" endtime="20210322 07:17:28.066"></status>
</kw>
<kw name="solicitar aprovação do holder" library="accreditation_request_approval">
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 07:17:28.068" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 07:17:28.067" endtime="20210322 07:17:28.068"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/approval</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 07:17:28.070" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/435b0a2961d74d8f9b05708b74625280/approval, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data=None 
json=None</msg>
<msg timestamp="20210322 07:17:28.344" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 07:17:28.069" endtime="20210322 07:17:28.344"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 07:17:28.347" level="INFO">{'message': 'Approval request accepted successfully. Processing analysis'}</msg>
<status status="PASS" starttime="20210322 07:17:28.345" endtime="20210322 07:17:28.347"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 07:17:28.349" level="INFO">fbe5f12ae2a6ed86</msg>
<status status="PASS" starttime="20210322 07:17:28.348" endtime="20210322 07:17:28.349"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 07:17:28.351" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 07:17:28.350" endtime="20210322 07:17:28.352"></status>
</kw>
<status status="PASS" starttime="20210322 07:17:28.066" endtime="20210322 07:17:28.352"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 07:17:28.354" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 07:17:28.353" endtime="20210322 07:17:28.354"></status>
</kw>
<kw name="recebendo notificação de aprovação" library="accreditation_risk_notification">
<kw name="Uuid 4" library="FakerLibrary">
<doc>Generates a random UUID4 string.
:param cast_to: Specify what type the UUID should be cast to. Default is `str`
:type cast_to: callable</doc>
<assign>
<var>${assessment_id}</var>
</assign>
<msg timestamp="20210322 07:17:28.356" level="INFO">${assessment_id} = efff182c-13f3-4f79-91cd-99fd247ef8d6</msg>
<status status="PASS" starttime="20210322 07:17:28.355" endtime="20210322 07:17:28.356"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>year</arg>
</arguments>
<assign>
<var>${year}</var>
</assign>
<msg timestamp="20210322 07:17:28.357" level="INFO">${year} = 2021</msg>
<status status="PASS" starttime="20210322 07:17:28.356" endtime="20210322 07:17:28.357"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>month</arg>
</arguments>
<assign>
<var>${month}</var>
</assign>
<msg timestamp="20210322 07:17:28.358" level="INFO">${month} = 03</msg>
<status status="PASS" starttime="20210322 07:17:28.358" endtime="20210322 07:17:28.358"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>day</arg>
</arguments>
<assign>
<var>${day}</var>
</assign>
<msg timestamp="20210322 07:17:28.359" level="INFO">${day} = 22</msg>
<status status="PASS" starttime="20210322 07:17:28.359" endtime="20210322 07:17:28.359"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 07:17:28.360" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 07:17:28.359" endtime="20210322 07:17:28.360"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "risk.assessment.result",</arg>
<arg>"resource": "business.holder",</arg>
<arg>"created_at": "${year}-${month}-${day} 15:28:56.747Z",</arg>
<arg>"marketplace_id": "${marketplace_external_key}",</arg>
<arg>"object": {</arg>
<arg>"result": "APPROVED",</arg>
<arg>"holder_id": "${holder_external_key}",</arg>
<arg>"applicant_id": "${application_external_key}",</arg>
<arg>"assessment_id": "${assessment_id}"</arg>
<arg>}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 07:17:28.361" level="INFO">${body} = { "type": "risk.assessment.result", "resource": "business.holder", "created_at": "2021-03-22 15:28:56.747Z", "marketplace_id": "f71a8951368a4cc085cf7875ff44e61c", "object": { "result": "APPROVED", "ho...</msg>
<status status="PASS" starttime="20210322 07:17:28.360" endtime="20210322 07:17:28.362"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/admin/internal_operation/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/registration/approval</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 07:17:28.363" level="INFO">POST Request using : uri=/admin/internal_operation/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/435b0a2961d74d8f9b05708b74625280/registration/approval, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "risk.assessment.result", "resource": "business.holder", "created_at": "2021-03-22 15:28:56.747Z", "marketplace_id": "f71a8951368a4cc085cf7875ff44e61c", "object": { "result": "APPROVED", "holder_id": "435b0a2961d74d8f9b05708b74625280", "applicant_id": "bcc25a6751c14b52af1340d40dba78c5", "assessment_id": "efff182c-13f3-4f79-91cd-99fd247ef8d6" } } 
json=None</msg>
<msg timestamp="20210322 07:17:28.561" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 07:17:28.362" endtime="20210322 07:17:28.561"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 07:17:28.563" level="INFO">{'message': 'Holder approved successfully'}</msg>
<status status="PASS" starttime="20210322 07:17:28.562" endtime="20210322 07:17:28.563"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 07:17:28.565" level="INFO">f0c0b0930f10d26b</msg>
<status status="PASS" starttime="20210322 07:17:28.564" endtime="20210322 07:17:28.565"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 07:17:28.567" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 07:17:28.566" endtime="20210322 07:17:28.567"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 07:17:28.569" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 07:17:28.568" endtime="20210322 07:17:28.570"></status>
</kw>
<status status="PASS" starttime="20210322 07:17:28.354" endtime="20210322 07:17:28.570"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 07:17:28.572" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 07:17:28.571" endtime="20210322 07:17:28.572"></status>
</kw>
<kw name="buscar account por holder" library="accounts_get_accounts_by_holder">
<kw name="conectar accounts" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accounts</arg>
<arg>url=${account_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 07:17:28.576" level="INFO">Creating Session using : alias=accounts, url=https://banking-accounts-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 07:17:28.575" endtime="20210322 07:17:28.577"></status>
</kw>
<status status="PASS" starttime="20210322 07:17:28.574" endtime="20210322 07:17:28.577"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accounts</arg>
<arg>/marketplaces/${marketplace_external_key}/holders/${holder_external_key}/accounts</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 07:17:28.578" level="INFO">GET Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/holders/435b0a2961d74d8f9b05708b74625280/accounts, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 07:17:29.188" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 07:17:28.578" endtime="20210322 07:17:29.188"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 07:17:29.190" level="INFO">{'items': [{'id': 'f02f9149e5c9467da9125ede121ae68b', 'holder': '435b0a2961d74d8f9b05708b74625280', 'balance': '0.00', 'currency': 'BRL', 'routing_number': '001', 'number': '3544003006', 'status': 'active', 'metadata': {}, 'created_at': '2021-03-22T10:17:29.500647', 'updated_at': '2021-03-22T10:17:29.500647', 'primary': True, 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'uri': '/v2/marketplaces/f71a8951368a4cc085cf7875ff44e61c/accounts/f02f9149e5c9467da9125ede121ae68b', 'resource': 'payment_account'}], 'has_more': False, 'limit': 100, 'total_pages': 1, 'page': 1, 'offset': 0, 'total': '1', 'query_count': '1'}</msg>
<status status="PASS" starttime="20210322 07:17:29.189" endtime="20210322 07:17:29.191"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 07:17:29.193" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 07:17:29.192" endtime="20210322 07:17:29.193"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["id"]}</arg>
</arguments>
<assign>
<var>${account_external_key}</var>
</assign>
<msg timestamp="20210322 07:17:29.196" level="INFO">${account_external_key} = f02f9149e5c9467da9125ede121ae68b</msg>
<status status="PASS" starttime="20210322 07:17:29.194" endtime="20210322 07:17:29.196"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_external_key}</arg>
</arguments>
<msg timestamp="20210322 07:17:29.198" level="INFO">${account_external_key} = f02f9149e5c9467da9125ede121ae68b</msg>
<status status="PASS" starttime="20210322 07:17:29.197" endtime="20210322 07:17:29.198"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["number"]}</arg>
</arguments>
<assign>
<var>${account_number}</var>
</assign>
<msg timestamp="20210322 07:17:29.201" level="INFO">${account_number} = 3544003006</msg>
<status status="PASS" starttime="20210322 07:17:29.199" endtime="20210322 07:17:29.201"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_number}</arg>
</arguments>
<msg timestamp="20210322 07:17:29.202" level="INFO">${account_number} = 3544003006</msg>
<status status="PASS" starttime="20210322 07:17:29.202" endtime="20210322 07:17:29.202"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["routing_number"]}</arg>
</arguments>
<assign>
<var>${account_routing_number}</var>
</assign>
<msg timestamp="20210322 07:17:29.204" level="INFO">${account_routing_number} = 001</msg>
<status status="PASS" starttime="20210322 07:17:29.203" endtime="20210322 07:17:29.204"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_routing_number}</arg>
</arguments>
<msg timestamp="20210322 07:17:29.206" level="INFO">${account_routing_number} = 001</msg>
<status status="PASS" starttime="20210322 07:17:29.205" endtime="20210322 07:17:29.206"></status>
</kw>
<status status="PASS" starttime="20210322 07:17:28.573" endtime="20210322 07:17:29.206"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 07:17:29.207" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 07:17:29.206" endtime="20210322 07:17:29.207"></status>
</kw>
<status status="PASS" starttime="20210322 07:17:26.104" endtime="20210322 07:17:29.207"></status>
</kw>
<kw name="criar chave pix" library="pix_dict_create_entry">
<arguments>
<arg>type=phone</arg>
<arg>value=${phone_pix}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 07:17:29.211" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 07:17:29.211" endtime="20210322 07:17:29.212"></status>
</kw>
<status status="PASS" starttime="20210322 07:17:29.210" endtime="20210322 07:17:29.212"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${type}</arg>
</arguments>
<msg timestamp="20210322 07:17:29.213" level="INFO">${type} = phone</msg>
<status status="PASS" starttime="20210322 07:17:29.212" endtime="20210322 07:17:29.213"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210322 07:17:29.214" level="INFO">${value} = +5521950587714</msg>
<status status="PASS" starttime="20210322 07:17:29.213" endtime="20210322 07:17:29.214"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 07:17:29.215" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 07:17:29.214" endtime="20210322 07:17:29.215"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "${type}",</arg>
<arg>"value": "${value}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 07:17:29.216" level="INFO">${body} = { "type": "phone", "value": "+5521950587714" }</msg>
<status status="PASS" starttime="20210322 07:17:29.215" endtime="20210322 07:17:29.216"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 07:17:29.217" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/435b0a2961d74d8f9b05708b74625280/accounts/f02f9149e5c9467da9125ede121ae68b/entries, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "phone", "value": "+5521950587714" } 
json=None</msg>
<msg timestamp="20210322 07:17:29.863" level="INFO">${response} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20210322 07:17:29.216" endtime="20210322 07:17:29.863"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 07:17:29.863" level="INFO">{'id': '5918f6b1cf8b4a039ceef92ae25506ef', 'status': 'waiting_ownership_verification', 'created_at': '2021-03-22T07:17:30.823', 'updated_at': '2021-03-22T07:17:30.823', 'key': {'value': '+5521950587714', 'type': 'phone'}, 'account': {'id': 'f02f9149e5c9467da9125ede121ae68b', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': '435b0a2961d74d8f9b05708b74625280', 'owner': {'name': 'Holder de teste', 'national_registration': '69324108506', 'type': 'individual'}, 'routing_number': '001', 'number': '3544003006', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}, 'resource': 'pix.entry'}</msg>
<status status="PASS" starttime="20210322 07:17:29.863" endtime="20210322 07:17:29.863"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 07:17:29.864" level="INFO">dedb9f4dcef80a53</msg>
<status status="PASS" starttime="20210322 07:17:29.863" endtime="20210322 07:17:29.864"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 07:17:29.864" level="INFO">202</msg>
<status status="PASS" starttime="20210322 07:17:29.864" endtime="20210322 07:17:29.864"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 07:17:29.864" level="INFO">${response} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20210322 07:17:29.864" endtime="20210322 07:17:29.864"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${entry_external_key}</var>
</assign>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<status status="PASS" starttime="20210322 07:17:29.865" endtime="20210322 07:17:29.865"></status>
</kw>
<msg timestamp="20210322 07:17:29.865" level="INFO">${entry_external_key} = 5918f6b1cf8b4a039ceef92ae25506ef</msg>
<status status="PASS" starttime="20210322 07:17:29.865" endtime="20210322 07:17:29.865"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${entry_external_key}</arg>
</arguments>
<msg timestamp="20210322 07:17:29.866" level="INFO">${entry_external_key} = 5918f6b1cf8b4a039ceef92ae25506ef</msg>
<status status="PASS" starttime="20210322 07:17:29.865" endtime="20210322 07:17:29.866"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["key"]["value"]}</arg>
</arguments>
<assign>
<var>${entry_key_value}</var>
</assign>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["key"]["value"]}</arg>
</arguments>
<status status="PASS" starttime="20210322 07:17:29.866" endtime="20210322 07:17:29.866"></status>
</kw>
<msg timestamp="20210322 07:17:29.866" level="INFO">${entry_key_value} = +5521950587714</msg>
<status status="PASS" starttime="20210322 07:17:29.866" endtime="20210322 07:17:29.867"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${entry_key_value}</arg>
</arguments>
<msg timestamp="20210322 07:17:29.867" level="INFO">${entry_key_value} = +5521950587714</msg>
<status status="PASS" starttime="20210322 07:17:29.867" endtime="20210322 07:17:29.867"></status>
</kw>
<status status="PASS" starttime="20210322 07:17:29.209" endtime="20210322 07:17:29.867"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${holder_external_key}</arg>
</arguments>
<assign>
<var>${holder_claimer}</var>
</assign>
<msg timestamp="20210322 07:17:29.870" level="INFO">${holder_claimer} = 435b0a2961d74d8f9b05708b74625280</msg>
<status status="PASS" starttime="20210322 07:17:29.868" endtime="20210322 07:17:29.870"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${holder_name}</arg>
</arguments>
<assign>
<var>${holder_name_claimer}</var>
</assign>
<msg timestamp="20210322 07:17:29.871" level="INFO">${holder_name_claimer} = Holder de teste</msg>
<status status="PASS" starttime="20210322 07:17:29.871" endtime="20210322 07:17:29.871"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${national_registration}</arg>
</arguments>
<assign>
<var>${national_registration_claimer}</var>
</assign>
<msg timestamp="20210322 07:17:29.873" level="INFO">${national_registration_claimer} = 69324108506</msg>
<status status="PASS" starttime="20210322 07:17:29.872" endtime="20210322 07:17:29.873"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${account_external_key}</arg>
</arguments>
<assign>
<var>${account_claimer}</var>
</assign>
<msg timestamp="20210322 07:17:29.874" level="INFO">${account_claimer} = f02f9149e5c9467da9125ede121ae68b</msg>
<status status="PASS" starttime="20210322 07:17:29.874" endtime="20210322 07:17:29.874"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${account_number}</arg>
</arguments>
<assign>
<var>${account_number_claimer}</var>
</assign>
<msg timestamp="20210322 07:17:29.874" level="INFO">${account_number_claimer} = 3544003006</msg>
<status status="PASS" starttime="20210322 07:17:29.874" endtime="20210322 07:17:29.875"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${account_routing_number}</arg>
</arguments>
<assign>
<var>${account_routing_number_claimer}</var>
</assign>
<msg timestamp="20210322 07:17:29.875" level="INFO">${account_routing_number_claimer} = 001</msg>
<status status="PASS" starttime="20210322 07:17:29.875" endtime="20210322 07:17:29.875"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${entry_external_key}</arg>
</arguments>
<assign>
<var>${entry_claimer}</var>
</assign>
<msg timestamp="20210322 07:17:29.876" level="INFO">${entry_claimer} = 5918f6b1cf8b4a039ceef92ae25506ef</msg>
<status status="PASS" starttime="20210322 07:17:29.876" endtime="20210322 07:17:29.876"></status>
</kw>
<kw name="buscar verification code" library="pix_dict_verification_code">
<arguments>
<arg>holder_external_key=${holder_claimer}</arg>
<arg>account_external_key=${account_claimer}</arg>
<arg>entry_external_key=${entry_claimer}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 07:17:29.878" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 07:17:29.878" endtime="20210322 07:17:29.880"></status>
</kw>
<status status="PASS" starttime="20210322 07:17:29.877" endtime="20210322 07:17:29.880"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/admin/internal_operation/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries/${entry_external_key}/code</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 07:17:29.881" level="INFO">GET Request using : uri=/admin/internal_operation/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/435b0a2961d74d8f9b05708b74625280/accounts/f02f9149e5c9467da9125ede121ae68b/entries/5918f6b1cf8b4a039ceef92ae25506ef/code, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 07:17:30.490" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 07:17:29.880" endtime="20210322 07:17:30.490"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 07:17:30.490" level="INFO">{'code': '4182'}</msg>
<status status="PASS" starttime="20210322 07:17:30.490" endtime="20210322 07:17:30.490"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 07:17:30.491" level="INFO">908b7c993a48c26f</msg>
<status status="PASS" starttime="20210322 07:17:30.491" endtime="20210322 07:17:30.491"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 07:17:30.491" level="INFO">200</msg>
<status status="PASS" starttime="20210322 07:17:30.491" endtime="20210322 07:17:30.491"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 07:17:30.492" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 07:17:30.491" endtime="20210322 07:17:30.492"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["code"]}</arg>
</arguments>
<assign>
<var>${verification_code}</var>
</assign>
<msg timestamp="20210322 07:17:30.492" level="INFO">${verification_code} = 4182</msg>
<status status="PASS" starttime="20210322 07:17:30.492" endtime="20210322 07:17:30.492"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${verification_code}</arg>
</arguments>
<msg timestamp="20210322 07:17:30.493" level="INFO">${verification_code} = 4182</msg>
<status status="PASS" starttime="20210322 07:17:30.492" endtime="20210322 07:17:30.493"></status>
</kw>
<status status="PASS" starttime="20210322 07:17:29.877" endtime="20210322 07:17:30.493"></status>
</kw>
<kw name="confirmar propriedade da chave pix" library="pix_dict_confirm_propriety">
<arguments>
<arg>verification_code=${verification_code}</arg>
<arg>holder_external_key=${holder_claimer}</arg>
<arg>account_external_key=${account_claimer}</arg>
<arg>entry_external_key=${entry_claimer}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 07:17:30.495" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 07:17:30.495" endtime="20210322 07:17:30.495"></status>
</kw>
<status status="PASS" starttime="20210322 07:17:30.494" endtime="20210322 07:17:30.496"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 07:17:30.496" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 07:17:30.496" endtime="20210322 07:17:30.496"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"code": "${verification_code}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 07:17:30.496" level="INFO">${body} = { "code": "4182" }</msg>
<status status="PASS" starttime="20210322 07:17:30.496" endtime="20210322 07:17:30.496"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries/${entry_external_key}/ownership</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 07:17:30.497" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/435b0a2961d74d8f9b05708b74625280/accounts/f02f9149e5c9467da9125ede121ae68b/entries/5918f6b1cf8b4a039ceef92ae25506ef/ownership, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "code": "4182" } 
json=None</msg>
<msg timestamp="20210322 07:17:31.842" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 07:17:30.496" endtime="20210322 07:17:31.842"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 07:17:31.843" level="INFO">{'id': '5918f6b1cf8b4a039ceef92ae25506ef', 'status': 'waiting_ownership_claiming', 'created_at': '2021-03-22T07:17:30.823', 'updated_at': '2021-03-22T07:17:32.809', 'key': {'value': '+5521950587714', 'type': 'phone'}, 'account': {'id': 'f02f9149e5c9467da9125ede121ae68b', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': '435b0a2961d74d8f9b05708b74625280', 'owner': {'name': 'Holder de teste', 'national_registration': '69324108506', 'type': 'individual'}, 'routing_number': '001', 'number': '3544003006', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}, 'resource': 'pix.entry'}</msg>
<status status="PASS" starttime="20210322 07:17:31.842" endtime="20210322 07:17:31.843"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 07:17:31.843" level="INFO">47d42708bed54564</msg>
<status status="PASS" starttime="20210322 07:17:31.843" endtime="20210322 07:17:31.843"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 07:17:31.844" level="INFO">201</msg>
<status status="PASS" starttime="20210322 07:17:31.843" endtime="20210322 07:17:31.844"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 07:17:31.844" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 07:17:31.844" endtime="20210322 07:17:31.844"></status>
</kw>
<status status="PASS" starttime="20210322 07:17:30.494" endtime="20210322 07:17:31.844"></status>
</kw>
<kw name="validar chave pix" library="asserts">
<arguments>
<arg>key_status=waiting_ownership_claiming</arg>
<arg>key_type=${type}</arg>
<arg>key_value=${value}</arg>
<arg>account_external_key=${account_claimer}</arg>
<arg>marketplace_external_key=${marketplace_external_key}</arg>
<arg>holder_external_key=${holder_claimer}</arg>
<arg>account_number=${account_number_claimer}</arg>
<arg>account_routing_number=${account_routing_number_claimer}</arg>
<arg>account_type=CACC</arg>
<arg>owner_key_name=${holder_name_claimer}</arg>
<arg>national_registration=${national_registration_claimer}</arg>
<arg>holder_type=${holder_type}</arg>
<arg>psp_code=19468242</arg>
<arg>psp_name=Zoop Tecnologia e Meios de Pagamento S.A.</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar status da chave</arg>
</arguments>
<msg timestamp="20210322 07:17:31.846" level="INFO">Validar status da chave</msg>
<status status="PASS" starttime="20210322 07:17:31.846" endtime="20210322 07:17:31.846"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["status"]}</arg>
<arg>${key_status}</arg>
</arguments>
<status status="PASS" starttime="20210322 07:17:31.846" endtime="20210322 07:17:31.847"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando Tipo da chave PIX</arg>
</arguments>
<msg timestamp="20210322 07:17:31.847" level="INFO">Validando Tipo da chave PIX</msg>
<status status="PASS" starttime="20210322 07:17:31.847" endtime="20210322 07:17:31.847"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["key"]["type"]}</arg>
<arg>${key_type}</arg>
</arguments>
<status status="PASS" starttime="20210322 07:17:31.847" endtime="20210322 07:17:31.847"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando Valor da chave PIX</arg>
</arguments>
<msg timestamp="20210322 07:17:31.848" level="INFO">Validando Valor da chave PIX</msg>
<status status="PASS" starttime="20210322 07:17:31.848" endtime="20210322 07:17:31.848"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${type}' == 'evp'</arg>
<arg>Should Not Be Empty</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' != 'evp'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${key_value}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${key_value}</arg>
</arguments>
<status status="PASS" starttime="20210322 07:17:31.849" endtime="20210322 07:17:31.849"></status>
</kw>
<status status="PASS" starttime="20210322 07:17:31.848" endtime="20210322 07:17:31.849"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando dados da conta</arg>
</arguments>
<msg timestamp="20210322 07:17:31.849" level="INFO">Validando dados da conta</msg>
<status status="PASS" starttime="20210322 07:17:31.849" endtime="20210322 07:17:31.849"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["id"]}</arg>
<arg>${account_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210322 07:17:31.849" endtime="20210322 07:17:31.850"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["marketplace"]}</arg>
<arg>${marketplace_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210322 07:17:31.850" endtime="20210322 07:17:31.850"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["holder"]}</arg>
<arg>${holder_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210322 07:17:31.851" endtime="20210322 07:17:31.851"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["number"]}</arg>
<arg>${account_number}</arg>
</arguments>
<status status="PASS" starttime="20210322 07:17:31.851" endtime="20210322 07:17:31.851"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["routing_number"]}</arg>
<arg>${account_routing_number}</arg>
</arguments>
<status status="PASS" starttime="20210322 07:17:31.851" endtime="20210322 07:17:31.852"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["type"]}</arg>
<arg>${account_type}</arg>
</arguments>
<status status="PASS" starttime="20210322 07:17:31.852" endtime="20210322 07:17:31.852"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar Proprietário da Account Owner</arg>
</arguments>
<msg timestamp="20210322 07:17:31.852" level="INFO">Validar Proprietário da Account Owner</msg>
<status status="PASS" starttime="20210322 07:17:31.852" endtime="20210322 07:17:31.852"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["account"]["owner"]["name"]}</arg>
<arg>${owner_key_name}</arg>
</arguments>
<status status="PASS" starttime="20210322 07:17:31.853" endtime="20210322 07:17:31.853"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar national_registration da Account Owner</arg>
</arguments>
<msg timestamp="20210322 07:17:31.853" level="INFO">Validar national_registration da Account Owner</msg>
<status status="PASS" starttime="20210322 07:17:31.853" endtime="20210322 07:17:31.853"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["account"]["owner"]["national_registration"]}</arg>
<arg>${national_registration}</arg>
</arguments>
<status status="PASS" starttime="20210322 07:17:31.854" endtime="20210322 07:17:31.854"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar Holder Type do Account Owner</arg>
</arguments>
<msg timestamp="20210322 07:17:31.854" level="INFO">Validar Holder Type do Account Owner</msg>
<status status="PASS" starttime="20210322 07:17:31.854" endtime="20210322 07:17:31.854"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["account"]["owner"]["type"]}</arg>
<arg>${holder_type}</arg>
</arguments>
<status status="PASS" starttime="20210322 07:17:31.854" endtime="20210322 07:17:31.855"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar PSP</arg>
</arguments>
<msg timestamp="20210322 07:17:31.855" level="INFO">Validar PSP</msg>
<status status="PASS" starttime="20210322 07:17:31.855" endtime="20210322 07:17:31.855"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["psp"]["code"]}</arg>
<arg>${psp_code}</arg>
</arguments>
<status status="PASS" starttime="20210322 07:17:31.855" endtime="20210322 07:17:31.855"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["psp"]["name"]}</arg>
<arg>${psp_name}</arg>
</arguments>
<status status="PASS" starttime="20210322 07:17:31.856" endtime="20210322 07:17:31.856"></status>
</kw>
<status status="PASS" starttime="20210322 07:17:31.845" endtime="20210322 07:17:31.856"></status>
</kw>
<kw name="criar reivindicação de posse" library="pix_dict_create_claims">
<arguments>
<arg>holder_external_key=${holder_claimer}</arg>
<arg>account_external_key=${account_claimer}</arg>
<arg>entry_external_key=${entry_claimer}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 07:17:31.857" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 07:17:31.857" endtime="20210322 07:17:31.858"></status>
</kw>
<status status="PASS" starttime="20210322 07:17:31.857" endtime="20210322 07:17:31.858"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries/${entry_external_key}/claims</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 07:17:31.858" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/435b0a2961d74d8f9b05708b74625280/accounts/f02f9149e5c9467da9125ede121ae68b/entries/5918f6b1cf8b4a039ceef92ae25506ef/claims, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 07:17:33.577" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 07:17:31.858" endtime="20210322 07:17:33.577"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 07:17:33.578" level="INFO">{'id': '912f466961dd4c4e960f7b1042b10b01', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'created_at': '2021-03-22T07:17:34.542', 'updated_at': '2021-03-22T07:17:34.542', 'type': 'OWNERSHIP', 'status': 'open', 'key': {'value': '+5521950587714', 'type': 'phone'}, 'claimer': {'name': 'Holder de teste', 'national_registration': '69324108506', 'type': 'individual', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': '435b0a2961d74d8f9b05708b74625280', 'account': {'digital_account_id': 'f02f9149e5c9467da9125ede121ae68b', 'routing_number': '001', 'number': '3544003006', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}}, 'donor': {'name': 'Holder de teste', 'national_registration': '50682917494', 'type': 'individual', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': '70d0231824a04e90baa1739cee824a33', 'account': {'digital_account_id': '367876eb71dd418a99a7145d5849a6c3', 'routing_number': '001', 'number': '5915390752', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}}, 'completion_period_end': '2021-04-05T10:17:34.000', 'resolution_period_end': '2021-03-29T10:17:34.000', 'resource': 'pix.claim'}</msg>
<status status="PASS" starttime="20210322 07:17:33.577" endtime="20210322 07:17:33.578"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 07:17:33.578" level="INFO">547d924de7111cc1</msg>
<status status="PASS" starttime="20210322 07:17:33.578" endtime="20210322 07:17:33.578"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 07:17:33.579" level="INFO">201</msg>
<status status="PASS" starttime="20210322 07:17:33.579" endtime="20210322 07:17:33.579"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 07:17:33.579" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 07:17:33.579" endtime="20210322 07:17:33.580"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${claim_external_key}</var>
</assign>
<msg timestamp="20210322 07:17:33.580" level="INFO">${claim_external_key} = 912f466961dd4c4e960f7b1042b10b01</msg>
<status status="PASS" starttime="20210322 07:17:33.580" endtime="20210322 07:17:33.580"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${claim_external_key}</arg>
</arguments>
<msg timestamp="20210322 07:17:33.581" level="INFO">${claim_external_key} = 912f466961dd4c4e960f7b1042b10b01</msg>
<status status="PASS" starttime="20210322 07:17:33.581" endtime="20210322 07:17:33.581"></status>
</kw>
<status status="PASS" starttime="20210322 07:17:31.857" endtime="20210322 07:17:33.581"></status>
</kw>
<kw name="buscar reivindicação de posse" library="pix_dict_get_claims">
<arguments>
<arg>holder_external_key=${holder_claimer}</arg>
<arg>account_external_key=${account_claimer}</arg>
<arg>claim_external_key=${claim_external_key}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 07:17:33.583" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 07:17:33.583" endtime="20210322 07:17:33.583"></status>
</kw>
<status status="PASS" starttime="20210322 07:17:33.583" endtime="20210322 07:17:33.584"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/claims/${claim_external_key}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 07:17:33.584" level="INFO">GET Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/435b0a2961d74d8f9b05708b74625280/accounts/f02f9149e5c9467da9125ede121ae68b/claims/912f466961dd4c4e960f7b1042b10b01, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 07:17:34.183" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 07:17:33.584" endtime="20210322 07:17:34.184"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 07:17:34.186" level="INFO">{'id': '912f466961dd4c4e960f7b1042b10b01', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'created_at': '2021-03-22T07:17:34.542', 'updated_at': '2021-03-22T07:17:34.542', 'type': 'OWNERSHIP', 'status': 'open', 'key': {'value': '+5521950587714', 'type': 'phone'}, 'claimer': {'name': 'Holder de teste', 'national_registration': '69324108506', 'type': 'individual', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': '435b0a2961d74d8f9b05708b74625280', 'account': {'digital_account_id': 'f02f9149e5c9467da9125ede121ae68b', 'routing_number': '001', 'number': '3544003006', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}}, 'donor': {'name': 'Holder de teste', 'national_registration': '50682917494', 'type': 'individual', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': '70d0231824a04e90baa1739cee824a33', 'account': {'digital_account_id': '367876eb71dd418a99a7145d5849a6c3', 'routing_number': '001', 'number': '5915390752', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}}, 'completion_period_end': '2021-04-05T10:17:34.000', 'resolution_period_end': '2021-03-29T10:17:34.000', 'resource': 'pix.claim'}</msg>
<status status="PASS" starttime="20210322 07:17:34.185" endtime="20210322 07:17:34.187"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 07:17:34.188" level="INFO">ea2d824cba6d2178</msg>
<status status="PASS" starttime="20210322 07:17:34.188" endtime="20210322 07:17:34.189"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 07:17:34.190" level="INFO">200</msg>
<status status="PASS" starttime="20210322 07:17:34.189" endtime="20210322 07:17:34.190"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 07:17:34.191" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 07:17:34.191" endtime="20210322 07:17:34.191"></status>
</kw>
<status status="PASS" starttime="20210322 07:17:33.582" endtime="20210322 07:17:34.191"></status>
</kw>
<kw name="validar status da reivindicação" library="asserts">
<arguments>
<arg>claim_status=open</arg>
</arguments>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["status"]}</arg>
<arg>${claim_status}</arg>
</arguments>
<status status="PASS" starttime="20210322 07:17:34.192" endtime="20210322 07:17:34.192"></status>
</kw>
<status status="PASS" starttime="20210322 07:17:34.191" endtime="20210322 07:17:34.192"></status>
</kw>
<kw name="receber notificação de reivindicação" library="pix_dict_receive_claim_notification">
<arguments>
<arg>key_pix=${value}</arg>
<arg>account_number=${account_number_owner}</arg>
<arg>claimer_tax_id=${national_registration_owner}</arg>
<arg>claimer_name=${holder_name_owner}</arg>
<arg>claim_external_key=${claim_external_key}</arg>
<arg>claim_notification_status=WAITING_RESOLUTION</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 07:17:34.194" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 07:17:34.194" endtime="20210322 07:17:34.195"></status>
</kw>
<status status="PASS" starttime="20210322 07:17:34.194" endtime="20210322 07:17:34.195"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 07:17:34.195" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 07:17:34.195" endtime="20210322 07:17:34.195"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"data": {</arg>
<arg>"claim": {</arg>
<arg>"type": "OWNERSHIP",</arg>
<arg>"key": "${key_pix}",</arg>
<arg>"key_type": "PHONE",</arg>
<arg>"claimer_account": {</arg>
<arg>"participant": "19468242",</arg>
<arg>"branch": "0001",</arg>
<arg>"account_number": "${account_number}",</arg>
<arg>"account_type": "CACC"</arg>
<arg>},</arg>
<arg>"claimer": {</arg>
<arg>"type": "NATURAL_PERSON",</arg>
<arg>"tax_id_number": "${claimer_tax_id}",</arg>
<arg>"name": "${claimer_name}"</arg>
<arg>},</arg>
<arg>"donor_participant": "19468242",</arg>
<arg>"id": "${claim_external_key}",</arg>
<arg>"status": "${claim_notification_status}",</arg>
<arg>"resolution_period_end": "2020-10-18T10:00:00.000Z",</arg>
<arg>"completion_period_end": "2020-10-25T10:00:00.000Z",</arg>
<arg>"last_modified": "2020-10-17T10:00:00.000Z"</arg>
<arg>}</arg>
<arg>}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 07:17:34.196" level="INFO">${body} = { "data": { "claim": { "type": "OWNERSHIP", "key": "+5521950587714", "key_type": "PHONE", "claimer_account": { "participant": "19468242", "branch": "0001", "account_number": "5915390752", "account_typ...</msg>
<status status="PASS" starttime="20210322 07:17:34.195" endtime="20210322 07:17:34.196"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/banking/internal/dict/claims</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 07:17:34.196" level="INFO">POST Request using : uri=/banking/internal/dict/claims, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "data": { "claim": { "type": "OWNERSHIP", "key": "+5521950587714", "key_type": "PHONE", "claimer_account": { "participant": "19468242", "branch": "0001", "account_number": "5915390752", "account_type": "CACC" }, "claimer": { "type": "NATURAL_PERSON", "tax_id_number": "50682917494", "name": "Holder de teste" }, "donor_participant": "19468242", "id": "912f466961dd4c4e960f7b1042b10b01", "status": "WAITING_RESOLUTION", "resolution_period_end": "2020-10-18T10:00:00.000Z", "completion_period_end": "2020-10-25T10:00:00.000Z", "last_modified": "2020-10-17T10:00:00.000Z" } } } 
json=None</msg>
<msg timestamp="20210322 07:17:34.817" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 07:17:34.196" endtime="20210322 07:17:34.817"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 07:17:34.817" level="INFO">200</msg>
<status status="PASS" starttime="20210322 07:17:34.817" endtime="20210322 07:17:34.817"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 07:17:34.818" level="INFO">37b625764ba154e6</msg>
<status status="PASS" starttime="20210322 07:17:34.817" endtime="20210322 07:17:34.818"></status>
</kw>
<status status="PASS" starttime="20210322 07:17:34.193" endtime="20210322 07:17:34.818"></status>
</kw>
<kw name="buscar reivindicação de posse" library="pix_dict_get_claims">
<arguments>
<arg>holder_external_key=${holder_claimer}</arg>
<arg>account_external_key=${account_claimer}</arg>
<arg>claim_external_key=${claim_external_key}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 07:17:34.820" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 07:17:34.820" endtime="20210322 07:17:34.820"></status>
</kw>
<status status="PASS" starttime="20210322 07:17:34.819" endtime="20210322 07:17:34.820"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/claims/${claim_external_key}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 07:17:34.821" level="INFO">GET Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/435b0a2961d74d8f9b05708b74625280/accounts/f02f9149e5c9467da9125ede121ae68b/claims/912f466961dd4c4e960f7b1042b10b01, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 07:17:35.438" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 07:17:34.821" endtime="20210322 07:17:35.438"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 07:17:35.439" level="INFO">{'id': '912f466961dd4c4e960f7b1042b10b01', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'created_at': '2021-03-22T07:17:34.542', 'updated_at': '2021-03-22T07:17:35.784', 'type': 'OWNERSHIP', 'status': 'waiting_resolution', 'key': {'value': '+5521950587714', 'type': 'phone'}, 'claimer': {'name': 'Holder de teste', 'national_registration': '69324108506', 'type': 'individual', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': '435b0a2961d74d8f9b05708b74625280', 'account': {'digital_account_id': 'f02f9149e5c9467da9125ede121ae68b', 'routing_number': '001', 'number': '3544003006', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}}, 'donor': {'name': 'Holder de teste', 'national_registration': '50682917494', 'type': 'individual', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': '70d0231824a04e90baa1739cee824a33', 'account': {'digital_account_id': '367876eb71dd418a99a7145d5849a6c3', 'routing_number': '001', 'number': '5915390752', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}}, 'completion_period_end': '2021-04-05T10:17:34.000', 'resolution_period_end': '2021-03-29T10:17:34.000', 'resource': 'pix.claim'}</msg>
<status status="PASS" starttime="20210322 07:17:35.438" endtime="20210322 07:17:35.440"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 07:17:35.441" level="INFO">1fec9b25317af24e</msg>
<status status="PASS" starttime="20210322 07:17:35.440" endtime="20210322 07:17:35.441"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 07:17:35.441" level="INFO">200</msg>
<status status="PASS" starttime="20210322 07:17:35.441" endtime="20210322 07:17:35.441"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 07:17:35.442" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 07:17:35.441" endtime="20210322 07:17:35.442"></status>
</kw>
<status status="PASS" starttime="20210322 07:17:34.819" endtime="20210322 07:17:35.442"></status>
</kw>
<kw name="validar status da reivindicação" library="asserts">
<arguments>
<arg>claim_status=waiting_resolution</arg>
</arguments>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["status"]}</arg>
<arg>${claim_status}</arg>
</arguments>
<status status="PASS" starttime="20210322 07:17:35.442" endtime="20210322 07:17:35.443"></status>
</kw>
<status status="PASS" starttime="20210322 07:17:35.442" endtime="20210322 07:17:35.443"></status>
</kw>
<kw name="${index} IN RANGE [ 60 ]" type="for">
<kw name="${index} = 0" type="foritem">
<kw name="cancelar reivindicação de posse" library="pix_dict_cancel_claims">
<arguments>
<arg>holder_external_key=${holder_owner}</arg>
<arg>account_external_key=${account_owner}</arg>
<arg>claim_external_key=${claim_external_key}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 07:17:35.444" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 07:17:35.444" endtime="20210322 07:17:35.445"></status>
</kw>
<status status="PASS" starttime="20210322 07:17:35.444" endtime="20210322 07:17:35.445"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/claims/${claim_external_key}/cancel</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 07:17:35.445" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/70d0231824a04e90baa1739cee824a33/accounts/367876eb71dd418a99a7145d5849a6c3/claims/912f466961dd4c4e960f7b1042b10b01/cancel, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 07:17:36.091" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 07:17:35.445" endtime="20210322 07:17:36.091"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 07:17:36.092" level="INFO">{'message': 'Claim cancelled successfully'}</msg>
<status status="PASS" starttime="20210322 07:17:36.091" endtime="20210322 07:17:36.092"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 07:17:36.092" level="INFO">3c8980b1673e5f01</msg>
<status status="PASS" starttime="20210322 07:17:36.092" endtime="20210322 07:17:36.092"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 07:17:36.092" level="INFO">200</msg>
<status status="PASS" starttime="20210322 07:17:36.092" endtime="20210322 07:17:36.092"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 07:17:36.093" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 07:17:36.093" endtime="20210322 07:17:36.093"></status>
</kw>
<status status="PASS" starttime="20210322 07:17:35.443" endtime="20210322 07:17:36.093"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${response.json()["message"]}' == 'Claim cancelled successfully'</arg>
</arguments>
<msg timestamp="20210322 07:17:36.094" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20210322 07:17:36.093" endtime="20210322 07:17:36.094"></status>
</kw>
<status status="PASS" starttime="20210322 07:17:35.443" endtime="20210322 07:17:36.094"></status>
</kw>
<status status="PASS" starttime="20210322 07:17:35.443" endtime="20210322 07:17:36.094"></status>
</kw>
<kw name="buscar reivindicação de posse" library="pix_dict_get_claims">
<arguments>
<arg>holder_external_key=${holder_claimer}</arg>
<arg>account_external_key=${account_claimer}</arg>
<arg>claim_external_key=${claim_external_key}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 07:17:36.095" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 07:17:36.095" endtime="20210322 07:17:36.096"></status>
</kw>
<status status="PASS" starttime="20210322 07:17:36.095" endtime="20210322 07:17:36.096"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/claims/${claim_external_key}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 07:17:36.096" level="INFO">GET Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/435b0a2961d74d8f9b05708b74625280/accounts/f02f9149e5c9467da9125ede121ae68b/claims/912f466961dd4c4e960f7b1042b10b01, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 07:17:36.700" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 07:17:36.096" endtime="20210322 07:17:36.701"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 07:17:36.703" level="INFO">{'id': '912f466961dd4c4e960f7b1042b10b01', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'created_at': '2021-03-22T07:17:34.542', 'updated_at': '2021-03-22T07:17:37.062', 'type': 'OWNERSHIP', 'status': 'waiting_entry_ownership_confirm_to_cancel', 'cancel_reason': 'FRAUD', 'key': {'value': '+5521950587714', 'type': 'phone'}, 'claimer': {'name': 'Holder de teste', 'national_registration': '69324108506', 'type': 'individual', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': '435b0a2961d74d8f9b05708b74625280', 'account': {'digital_account_id': 'f02f9149e5c9467da9125ede121ae68b', 'routing_number': '001', 'number': '3544003006', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}}, 'donor': {'name': 'Holder de teste', 'national_registration': '50682917494', 'type': 'individual', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': '70d0231824a04e90baa1739cee824a33', 'account': {'digital_account_id': '367876eb71dd418a99a7145d5849a6c3', 'routing_number': '001', 'number': '5915390752', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}}, 'completion_period_end': '2021-04-05T10:17:34.000', 'resolution_period_end': '2021-03-29T10:17:34.000', 'resource': 'pix.claim'}</msg>
<status status="PASS" starttime="20210322 07:17:36.702" endtime="20210322 07:17:36.703"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 07:17:36.705" level="INFO">7e6344311596517f</msg>
<status status="PASS" starttime="20210322 07:17:36.704" endtime="20210322 07:17:36.706"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 07:17:36.707" level="INFO">200</msg>
<status status="PASS" starttime="20210322 07:17:36.706" endtime="20210322 07:17:36.708"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 07:17:36.710" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 07:17:36.709" endtime="20210322 07:17:36.710"></status>
</kw>
<status status="PASS" starttime="20210322 07:17:36.095" endtime="20210322 07:17:36.710"></status>
</kw>
<kw name="validar status da reivindicação" library="asserts">
<arguments>
<arg>claim_status=waiting_entry_ownership_confirm_to_cancel</arg>
</arguments>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["status"]}</arg>
<arg>${claim_status}</arg>
</arguments>
<status status="PASS" starttime="20210322 07:17:36.715" endtime="20210322 07:17:36.717"></status>
</kw>
<status status="PASS" starttime="20210322 07:17:36.713" endtime="20210322 07:17:36.717"></status>
</kw>
<kw name="buscar verification code" library="pix_dict_verification_code">
<arguments>
<arg>holder_external_key=${holder_claimer}</arg>
<arg>account_external_key=${account_claimer}</arg>
<arg>entry_external_key=${entry_claimer}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 07:17:36.722" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 07:17:36.722" endtime="20210322 07:17:36.723"></status>
</kw>
<status status="PASS" starttime="20210322 07:17:36.721" endtime="20210322 07:17:36.723"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/admin/internal_operation/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries/${entry_external_key}/code</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 07:17:36.724" level="INFO">GET Request using : uri=/admin/internal_operation/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/435b0a2961d74d8f9b05708b74625280/accounts/f02f9149e5c9467da9125ede121ae68b/entries/5918f6b1cf8b4a039ceef92ae25506ef/code, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 07:17:37.348" level="INFO">${response} = &lt;Response [404]&gt;</msg>
<status status="PASS" starttime="20210322 07:17:36.724" endtime="20210322 07:17:37.348"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 07:17:37.349" level="INFO">{'code': 3003, 'status': 'not_found', 'type': 'not_found', 'message': 'Ownership entry not found', 'category': 'business', 'status_code': 404}</msg>
<status status="PASS" starttime="20210322 07:17:37.349" endtime="20210322 07:17:37.349"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 07:17:37.350" level="INFO">1ea3288b421abaf0</msg>
<status status="PASS" starttime="20210322 07:17:37.350" endtime="20210322 07:17:37.350"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 07:17:37.350" level="INFO">404</msg>
<status status="PASS" starttime="20210322 07:17:37.350" endtime="20210322 07:17:37.350"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 07:17:37.351" level="INFO">${response} = &lt;Response [404]&gt;</msg>
<status status="PASS" starttime="20210322 07:17:37.351" endtime="20210322 07:17:37.351"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["code"]}</arg>
</arguments>
<assign>
<var>${verification_code}</var>
</assign>
<msg timestamp="20210322 07:17:37.351" level="INFO">${verification_code} = None</msg>
<status status="PASS" starttime="20210322 07:17:37.351" endtime="20210322 07:17:37.352"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${verification_code}</arg>
</arguments>
<msg timestamp="20210322 07:17:37.352" level="INFO">${verification_code} = None</msg>
<status status="PASS" starttime="20210322 07:17:37.352" endtime="20210322 07:17:37.352"></status>
</kw>
<status status="PASS" starttime="20210322 07:17:36.719" endtime="20210322 07:17:37.352"></status>
</kw>
<kw name="confirmar propriedade da chave pix" library="pix_dict_confirm_propriety">
<arguments>
<arg>verification_code=${verification_code}</arg>
<arg>holder_external_key=${holder_claimer}</arg>
<arg>account_external_key=${account_claimer}</arg>
<arg>entry_external_key=${entry_claimer}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 07:17:37.355" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 07:17:37.354" endtime="20210322 07:17:37.355"></status>
</kw>
<status status="PASS" starttime="20210322 07:17:37.354" endtime="20210322 07:17:37.355"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 07:17:37.355" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 07:17:37.355" endtime="20210322 07:17:37.355"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"code": "${verification_code}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 07:17:37.356" level="INFO">${body} = { "code": "None" }</msg>
<status status="PASS" starttime="20210322 07:17:37.356" endtime="20210322 07:17:37.356"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries/${entry_external_key}/ownership</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 07:17:37.357" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/435b0a2961d74d8f9b05708b74625280/accounts/f02f9149e5c9467da9125ede121ae68b/entries/5918f6b1cf8b4a039ceef92ae25506ef/ownership, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "code": "None" } 
json=None</msg>
<msg timestamp="20210322 07:17:37.962" level="INFO">${response} = &lt;Response [404]&gt;</msg>
<status status="PASS" starttime="20210322 07:17:37.356" endtime="20210322 07:17:37.962"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 07:17:37.964" level="INFO">{'code': 3003, 'status': 'not_found', 'type': 'not_found', 'message': 'Ownership entry not found', 'category': 'business', 'status_code': 404}</msg>
<status status="PASS" starttime="20210322 07:17:37.963" endtime="20210322 07:17:37.964"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 07:17:37.965" level="INFO">c4b33b043f987888</msg>
<status status="PASS" starttime="20210322 07:17:37.964" endtime="20210322 07:17:37.965"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 07:17:37.966" level="INFO">404</msg>
<status status="PASS" starttime="20210322 07:17:37.966" endtime="20210322 07:17:37.967"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 07:17:37.968" level="INFO">${response} = &lt;Response [404]&gt;</msg>
<status status="PASS" starttime="20210322 07:17:37.967" endtime="20210322 07:17:37.968"></status>
</kw>
<status status="PASS" starttime="20210322 07:17:37.353" endtime="20210322 07:17:37.968"></status>
</kw>
<doc>Fluxo Básico</doc>
<tags>
<tag>regression_test</tag>
<tag>smoke_test</tag>
</tags>
<status status="PASS" starttime="20210322 07:17:19.595" endtime="20210322 07:17:37.970" critical="yes"></status>
</test>
<doc>Funcionalidade: Cancelar Reivindicação de Posse
Eu, como um Holder, portador de uma conta ativa em Banking
Desejo cancelar a reivindicação de posse de uma chave de endereçamento</doc>
<status status="PASS" starttime="20210322 07:17:19.031" endtime="20210322 07:17:37.974"></status>
</suite>
<statistics>
<total>
<stat pass="1" fail="0">Critical Tests</stat>
<stat pass="1" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="1" fail="0">regression_test</stat>
<stat pass="1" fail="0">smoke_test</stat>
</tag>
<suite>
<stat pass="1" fail="0" id="s1" name="Cancelar Reivindicação de Posse">Cancelar Reivindicação de Posse</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>

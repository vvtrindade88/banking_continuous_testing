<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.8.1 on win32)" generated="20210322 03:25:16.201" rpa="false">
<suite id="s1" name="Pix-Dict" source="C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\tests\pix-dict">
<suite id="s1-s1" name="Diretorio" source="C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\tests\pix-dict\diretorio">
<suite id="s1-s1-s1" name="Buscar Chave de Endereçamento" source="C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\tests\pix-dict\diretorio\Buscar Chave de Endereçamento.robot">
<test id="s1-s1-s1-t1" name="Cenário: Buscar chave de endereçamento do tipo EVP">
<kw name="criar holder individual ativo" library="accreditation_create_holder_active">
<kw name="conectar accreditation" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accreditation</arg>
<arg>url=${accreditation_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 03:25:16.862" level="INFO">Creating Session using : alias=accreditation, url=https://banking-accreditation-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 03:25:16.862" endtime="20210322 03:25:16.862"></status>
</kw>
<status status="PASS" starttime="20210322 03:25:16.861" endtime="20210322 03:25:16.862"></status>
</kw>
<kw name="Cpf" library="FakerLibrary">
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 03:25:16.863" level="INFO">${national_registration} = 028.561.793-12</msg>
<status status="PASS" starttime="20210322 03:25:16.863" endtime="20210322 03:25:16.863"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${national_registration}</arg>
<arg>.</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 03:25:16.863" level="INFO">${national_registration} = 028561793-12</msg>
<status status="PASS" starttime="20210322 03:25:16.863" endtime="20210322 03:25:16.863"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${national_registration}</arg>
<arg>-</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 03:25:16.864" level="INFO">${national_registration} = 02856179312</msg>
<status status="PASS" starttime="20210322 03:25:16.863" endtime="20210322 03:25:16.864"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${national_registration}</arg>
</arguments>
<msg timestamp="20210322 03:25:16.864" level="INFO">${national_registration} = 02856179312</msg>
<status status="PASS" starttime="20210322 03:25:16.864" endtime="20210322 03:25:16.864"></status>
</kw>
<kw name="Rg" library="FakerLibrary">
<doc>Brazilian RG, return plain numbers.
Check:  https://www.ngmatematica.com/2014/02/como-determinar-o-digito-verificador-do.html</doc>
<assign>
<var>${identity_card}</var>
</assign>
<msg timestamp="20210322 03:25:16.865" level="INFO">${identity_card} = 27406831X</msg>
<status status="PASS" starttime="20210322 03:25:16.864" endtime="20210322 03:25:16.865"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${identity_card}</arg>
</arguments>
<msg timestamp="20210322 03:25:16.865" level="INFO">${identity_card} = 27406831X</msg>
<status status="PASS" starttime="20210322 03:25:16.865" endtime="20210322 03:25:16.865"></status>
</kw>
<kw name="criar holder individual" library="accreditation_post_holder_individual">
<arguments>
<arg>holder_type=individual</arg>
<arg>holder_name=${holder_name}</arg>
<arg>email=${email}</arg>
<arg>national_registration=${national_registration}</arg>
<arg>revenue=${revenue}</arg>
<arg>birthday=${birthday}</arg>
<arg>mothers_name=${mothers_name}</arg>
<arg>identity_card=${identity_card}</arg>
<arg>pep=false</arg>
<arg>cbo=${cbo}</arg>
</arguments>
<kw name="conectar accreditation" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accreditation</arg>
<arg>url=${accreditation_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 03:25:16.867" level="INFO">Creating Session using : alias=accreditation, url=https://banking-accreditation-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 03:25:16.867" endtime="20210322 03:25:16.867"></status>
</kw>
<status status="PASS" starttime="20210322 03:25:16.867" endtime="20210322 03:25:16.867"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_type}</arg>
</arguments>
<msg timestamp="20210322 03:25:16.868" level="INFO">${holder_type} = individual</msg>
<status status="PASS" starttime="20210322 03:25:16.868" endtime="20210322 03:25:16.868"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_name}</arg>
</arguments>
<msg timestamp="20210322 03:25:16.868" level="INFO">${holder_name} = Holder de teste</msg>
<status status="PASS" starttime="20210322 03:25:16.868" endtime="20210322 03:25:16.868"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:25:16.869" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 03:25:16.869" endtime="20210322 03:25:16.869"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "${holder_type}",</arg>
<arg>"name": "${holder_name}",</arg>
<arg>"email": "${email}",</arg>
<arg>"national_registration": "${national_registration}",</arg>
<arg>"revenue": ${revenue},</arg>
<arg>"birthday": "${birthday}",</arg>
<arg>"mothers_name": "${mothers_name}",</arg>
<arg>"identity_card": "${identity_card}",</arg>
<arg>"pep": false,</arg>
<arg>"cbo": ${cbo}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 03:25:16.870" level="INFO">${body} = { "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "02856179312", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder",...</msg>
<status status="PASS" starttime="20210322 03:25:16.869" endtime="20210322 03:25:16.870"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:25:16.870" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "02856179312", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder", "identity_card": "27406831X", "pep": false, "cbo": 821450 } 
json=None</msg>
<msg timestamp="20210322 03:25:17.574" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:25:16.870" endtime="20210322 03:25:17.574"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:25:17.575" level="INFO">{'id': 'd630f1d0d1c54357902f2ce256f89b82', 'name': 'Holder de teste', 'revenue': 5500.0, 'email': 'teste@teste.com.br', 'status': 'waiting_info_and_documents', 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'marketplace_name': 'Marketplace de Teste', 'created_at': '2021-03-22T03:25:18.397039', 'updated_at': '2021-03-22T03:25:18.397041', 'type': 'individual', 'national_registration': '02856179312', 'birthday': '1988-04-23', 'mothers_name': 'Mãe do Holder', 'identity_card': '27406831X', 'pep': False, 'cbo': '821450', '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/d630f1d0d1c54357902f2ce256f89b82', 'type': 'GET'}, 'phones': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/d630f1d0d1c54357902f2ce256f89b82/phones', 'type': 'GET'}, 'addresses': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/d630f1d0d1c54357902f2ce256f89b82/addresses', 'type': 'GET'}, 'documents': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/d630f1d0d1c54357902f2ce256f89b82/documents', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 03:25:17.574" endtime="20210322 03:25:17.575"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:25:17.575" level="INFO">306f9952cd296247</msg>
<status status="PASS" starttime="20210322 03:25:17.575" endtime="20210322 03:25:17.575"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${body}</arg>
</arguments>
<msg timestamp="20210322 03:25:17.577" level="INFO">{ "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "02856179312", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder", "identity_card": "27406831X", "pep": false, "cbo": 821450 }</msg>
<status status="PASS" starttime="20210322 03:25:17.577" endtime="20210322 03:25:17.577"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:25:17.577" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:25:17.577" endtime="20210322 03:25:17.577"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${holder_external_key}</var>
</assign>
<msg timestamp="20210322 03:25:17.577" level="INFO">${holder_external_key} = d630f1d0d1c54357902f2ce256f89b82</msg>
<status status="PASS" starttime="20210322 03:25:17.577" endtime="20210322 03:25:17.577"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_external_key}</arg>
</arguments>
<msg timestamp="20210322 03:25:17.578" level="INFO">${holder_external_key} = d630f1d0d1c54357902f2ce256f89b82</msg>
<status status="PASS" starttime="20210322 03:25:17.577" endtime="20210322 03:25:17.578"></status>
</kw>
<status status="PASS" starttime="20210322 03:25:16.865" endtime="20210322 03:25:17.578"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_name}</arg>
</arguments>
<msg timestamp="20210322 03:25:17.578" level="INFO">${holder_name} = Holder de teste</msg>
<status status="PASS" starttime="20210322 03:25:17.578" endtime="20210322 03:25:17.578"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 03:25:17.578" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:25:17.578" endtime="20210322 03:25:17.578"></status>
</kw>
<kw name="criar holder phone" library="accreditation_post_holder_phone">
<arguments>
<arg>21</arg>
<arg>51</arg>
<arg>996221236</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:25:17.580" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 03:25:17.580" endtime="20210322 03:25:17.580"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"area_code": "${phone_area_code}",</arg>
<arg>"country_code": "${phone_country_code}",</arg>
<arg>"number": "${phone_number}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 03:25:17.581" level="INFO">${body} = { "area_code": "21", "country_code": "51", "number": "996221236" }</msg>
<status status="PASS" starttime="20210322 03:25:17.581" endtime="20210322 03:25:17.581"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/phones</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:25:17.582" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/d630f1d0d1c54357902f2ce256f89b82/phones, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "area_code": "21", "country_code": "51", "number": "996221236" } 
json=None</msg>
<msg timestamp="20210322 03:25:17.831" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:25:17.581" endtime="20210322 03:25:17.831"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:25:17.832" level="INFO">{'id': 'f8ad54147df849c388f68305bb81207c', 'area_code': '21', 'country_code': '51', 'number': '996221236', 'main': True, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/d630f1d0d1c54357902f2ce256f89b82/phones/f8ad54147df849c388f68305bb81207c', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/d630f1d0d1c54357902f2ce256f89b82', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 03:25:17.831" endtime="20210322 03:25:17.832"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:25:17.833" level="INFO">7b54aa491423c632</msg>
<status status="PASS" starttime="20210322 03:25:17.832" endtime="20210322 03:25:17.833"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:25:17.834" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:25:17.833" endtime="20210322 03:25:17.834"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${phone_external_key}</var>
</assign>
<msg timestamp="20210322 03:25:17.835" level="INFO">${phone_external_key} = f8ad54147df849c388f68305bb81207c</msg>
<status status="PASS" starttime="20210322 03:25:17.834" endtime="20210322 03:25:17.835"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${phone_external_key}</arg>
</arguments>
<msg timestamp="20210322 03:25:17.836" level="INFO">${phone_external_key} = f8ad54147df849c388f68305bb81207c</msg>
<status status="PASS" starttime="20210322 03:25:17.835" endtime="20210322 03:25:17.836"></status>
</kw>
<status status="PASS" starttime="20210322 03:25:17.580" endtime="20210322 03:25:17.836"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 03:25:17.837" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:25:17.836" endtime="20210322 03:25:17.837"></status>
</kw>
<kw name="criar holder address" library="accreditation_post_holder_address">
<arguments>
<arg>Rio de Janeiro</arg>
<arg>Rio de Janeiro</arg>
<arg>Brasil</arg>
<arg>Bairro de Testes</arg>
<arg>Rua de Testes</arg>
<arg>90</arg>
<arg>apto 200</arg>
<arg>21550987</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:25:17.838" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 03:25:17.838" endtime="20210322 03:25:17.838"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"city": "${city}",</arg>
<arg>"state": "${state}",</arg>
<arg>"country": "${country}",</arg>
<arg>"neighborhood": "${neighborhood}",</arg>
<arg>"street": "${street}",</arg>
<arg>"number": "${number}",</arg>
<arg>"complement": "${complement}",</arg>
<arg>"postal_code": "${postal_code}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 03:25:17.839" level="INFO">${body} = { "city": "Rio de Janeiro", "state": "Rio de Janeiro", "country": "Brasil", "neighborhood": "Bairro de Testes", "street": "Rua de Testes", "number": "90", "complement": "apto 200", "postal_code": "215...</msg>
<status status="PASS" starttime="20210322 03:25:17.838" endtime="20210322 03:25:17.839"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/addresses</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:25:17.840" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/d630f1d0d1c54357902f2ce256f89b82/addresses, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "city": "Rio de Janeiro", "state": "Rio de Janeiro", "country": "Brasil", "neighborhood": "Bairro de Testes", "street": "Rua de Testes", "number": "90", "complement": "apto 200", "postal_code": "21550987" } 
json=None</msg>
<msg timestamp="20210322 03:25:18.078" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:25:17.839" endtime="20210322 03:25:18.079"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:25:18.081" level="INFO">{'id': 'f6e96cf6287749ec9cb0458c7907f94e', 'street': 'Rua de Testes', 'number': '90', 'city': 'Rio de Janeiro', 'complement': 'apto 200', 'state': 'Rio de Janeiro', 'neighborhood': 'Bairro de Testes', 'postal_code': '21550987', 'country': 'Brasil', 'main': True, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/d630f1d0d1c54357902f2ce256f89b82/addresses/f6e96cf6287749ec9cb0458c7907f94e', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/d630f1d0d1c54357902f2ce256f89b82', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 03:25:18.080" endtime="20210322 03:25:18.081"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:25:18.083" level="INFO">051a958b678faffe</msg>
<status status="PASS" starttime="20210322 03:25:18.082" endtime="20210322 03:25:18.083"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:25:18.086" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:25:18.084" endtime="20210322 03:25:18.086"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${address_external_key}</var>
</assign>
<msg timestamp="20210322 03:25:18.088" level="INFO">${address_external_key} = f6e96cf6287749ec9cb0458c7907f94e</msg>
<status status="PASS" starttime="20210322 03:25:18.087" endtime="20210322 03:25:18.088"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${address_external_key}</arg>
</arguments>
<msg timestamp="20210322 03:25:18.091" level="INFO">${address_external_key} = f6e96cf6287749ec9cb0458c7907f94e</msg>
<status status="PASS" starttime="20210322 03:25:18.089" endtime="20210322 03:25:18.091"></status>
</kw>
<status status="PASS" starttime="20210322 03:25:17.837" endtime="20210322 03:25:18.092"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 03:25:18.093" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:25:18.092" endtime="20210322 03:25:18.094"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>SELFIE</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:25:18.096" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 03:25:18.095" endtime="20210322 03:25:18.096"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 03:25:18.097" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 03:25:18.100" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 03:25:18.096" endtime="20210322 03:25:18.100"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:25:18.102" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/d630f1d0d1c54357902f2ce256f89b82/documents?type=SELFIE, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 03:25:18.498" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:25:18.100" endtime="20210322 03:25:18.498"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:25:18.500" level="INFO">{'id': 'ff0caf5dc02c429bbc2b94cf60d76a45', 'document_type': 'selfie', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/d630f1d0d1c54357902f2ce256f89b82/documents/ff0caf5dc02c429bbc2b94cf60d76a45', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/d630f1d0d1c54357902f2ce256f89b82', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/d630f1d0d1c54357902f2ce256f89b82/documents/ff0caf5dc02c429bbc2b94cf60d76a45/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 03:25:18.499" endtime="20210322 03:25:18.500"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:25:18.501" level="INFO">e06344f6dcf2f75d</msg>
<status status="PASS" starttime="20210322 03:25:18.500" endtime="20210322 03:25:18.501"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:25:18.502" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:25:18.501" endtime="20210322 03:25:18.502"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 03:25:18.503" level="INFO">${document_external_key} = ff0caf5dc02c429bbc2b94cf60d76a45</msg>
<status status="PASS" starttime="20210322 03:25:18.502" endtime="20210322 03:25:18.503"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 03:25:18.504" level="INFO">${document_external_key} = ff0caf5dc02c429bbc2b94cf60d76a45</msg>
<status status="PASS" starttime="20210322 03:25:18.504" endtime="20210322 03:25:18.504"></status>
</kw>
<status status="PASS" starttime="20210322 03:25:18.094" endtime="20210322 03:25:18.505"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 03:25:18.505" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:25:18.505" endtime="20210322 03:25:18.506"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>RG_FRENTE</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:25:18.507" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 03:25:18.506" endtime="20210322 03:25:18.507"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 03:25:18.507" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 03:25:18.509" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 03:25:18.507" endtime="20210322 03:25:18.509"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:25:18.510" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/d630f1d0d1c54357902f2ce256f89b82/documents?type=RG_FRENTE, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 03:25:18.795" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:25:18.510" endtime="20210322 03:25:18.795"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:25:18.797" level="INFO">{'id': '1af66ff133f341caae67edd964f5febe', 'document_type': 'rg_frente', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/d630f1d0d1c54357902f2ce256f89b82/documents/1af66ff133f341caae67edd964f5febe', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/d630f1d0d1c54357902f2ce256f89b82', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/d630f1d0d1c54357902f2ce256f89b82/documents/1af66ff133f341caae67edd964f5febe/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 03:25:18.796" endtime="20210322 03:25:18.797"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:25:18.798" level="INFO">6b11ebca6c03f987</msg>
<status status="PASS" starttime="20210322 03:25:18.798" endtime="20210322 03:25:18.799"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:25:18.800" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:25:18.799" endtime="20210322 03:25:18.800"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 03:25:18.801" level="INFO">${document_external_key} = 1af66ff133f341caae67edd964f5febe</msg>
<status status="PASS" starttime="20210322 03:25:18.801" endtime="20210322 03:25:18.802"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 03:25:18.802" level="INFO">${document_external_key} = 1af66ff133f341caae67edd964f5febe</msg>
<status status="PASS" starttime="20210322 03:25:18.802" endtime="20210322 03:25:18.803"></status>
</kw>
<status status="PASS" starttime="20210322 03:25:18.506" endtime="20210322 03:25:18.803"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 03:25:18.804" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:25:18.803" endtime="20210322 03:25:18.804"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>RG_VERSO</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:25:18.805" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 03:25:18.805" endtime="20210322 03:25:18.805"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 03:25:18.806" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 03:25:18.808" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 03:25:18.806" endtime="20210322 03:25:18.808"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:25:18.808" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/d630f1d0d1c54357902f2ce256f89b82/documents?type=RG_VERSO, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 03:25:19.077" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:25:18.808" endtime="20210322 03:25:19.077"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:25:19.078" level="INFO">{'id': '9c542e56c49247c99cdbee6bce663076', 'document_type': 'rg_verso', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/d630f1d0d1c54357902f2ce256f89b82/documents/9c542e56c49247c99cdbee6bce663076', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/d630f1d0d1c54357902f2ce256f89b82', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/d630f1d0d1c54357902f2ce256f89b82/documents/9c542e56c49247c99cdbee6bce663076/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 03:25:19.077" endtime="20210322 03:25:19.078"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:25:19.079" level="INFO">68a7721c2ab79582</msg>
<status status="PASS" starttime="20210322 03:25:19.078" endtime="20210322 03:25:19.079"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:25:19.080" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:25:19.079" endtime="20210322 03:25:19.080"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 03:25:19.084" level="INFO">${document_external_key} = 9c542e56c49247c99cdbee6bce663076</msg>
<status status="PASS" starttime="20210322 03:25:19.080" endtime="20210322 03:25:19.084"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 03:25:19.085" level="INFO">${document_external_key} = 9c542e56c49247c99cdbee6bce663076</msg>
<status status="PASS" starttime="20210322 03:25:19.084" endtime="20210322 03:25:19.085"></status>
</kw>
<status status="PASS" starttime="20210322 03:25:18.804" endtime="20210322 03:25:19.085"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 03:25:19.086" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:25:19.086" endtime="20210322 03:25:19.088"></status>
</kw>
<kw name="solicitar aprovação do holder" library="accreditation_request_approval">
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:25:19.090" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 03:25:19.090" endtime="20210322 03:25:19.091"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/approval</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:25:19.091" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/d630f1d0d1c54357902f2ce256f89b82/approval, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data=None 
json=None</msg>
<msg timestamp="20210322 03:25:19.371" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:25:19.091" endtime="20210322 03:25:19.371"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:25:19.373" level="INFO">{'message': 'Approval request accepted successfully. Processing analysis'}</msg>
<status status="PASS" starttime="20210322 03:25:19.372" endtime="20210322 03:25:19.373"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:25:19.374" level="INFO">27cb538c2c791426</msg>
<status status="PASS" starttime="20210322 03:25:19.373" endtime="20210322 03:25:19.374"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:25:19.375" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:25:19.375" endtime="20210322 03:25:19.375"></status>
</kw>
<status status="PASS" starttime="20210322 03:25:19.089" endtime="20210322 03:25:19.376"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 03:25:19.377" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:25:19.376" endtime="20210322 03:25:19.377"></status>
</kw>
<kw name="recebendo notificação de aprovação" library="accreditation_risk_notification">
<kw name="Uuid 4" library="FakerLibrary">
<doc>Generates a random UUID4 string.
:param cast_to: Specify what type the UUID should be cast to. Default is `str`
:type cast_to: callable</doc>
<assign>
<var>${assessment_id}</var>
</assign>
<msg timestamp="20210322 03:25:19.379" level="INFO">${assessment_id} = 8939ea50-a896-4e4a-8c9d-3dc64d971e95</msg>
<status status="PASS" starttime="20210322 03:25:19.378" endtime="20210322 03:25:19.379"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>year</arg>
</arguments>
<assign>
<var>${year}</var>
</assign>
<msg timestamp="20210322 03:25:19.379" level="INFO">${year} = 2021</msg>
<status status="PASS" starttime="20210322 03:25:19.379" endtime="20210322 03:25:19.379"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>month</arg>
</arguments>
<assign>
<var>${month}</var>
</assign>
<msg timestamp="20210322 03:25:19.381" level="INFO">${month} = 03</msg>
<status status="PASS" starttime="20210322 03:25:19.381" endtime="20210322 03:25:19.381"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>day</arg>
</arguments>
<assign>
<var>${day}</var>
</assign>
<msg timestamp="20210322 03:25:19.381" level="INFO">${day} = 22</msg>
<status status="PASS" starttime="20210322 03:25:19.381" endtime="20210322 03:25:19.382"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:25:19.383" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 03:25:19.383" endtime="20210322 03:25:19.383"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "risk.assessment.result",</arg>
<arg>"resource": "business.holder",</arg>
<arg>"created_at": "${year}-${month}-${day} 15:28:56.747Z",</arg>
<arg>"marketplace_id": "${marketplace_external_key}",</arg>
<arg>"object": {</arg>
<arg>"result": "APPROVED",</arg>
<arg>"holder_id": "${holder_external_key}",</arg>
<arg>"applicant_id": "${application_external_key}",</arg>
<arg>"assessment_id": "${assessment_id}"</arg>
<arg>}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 03:25:19.385" level="INFO">${body} = { "type": "risk.assessment.result", "resource": "business.holder", "created_at": "2021-03-22 15:28:56.747Z", "marketplace_id": "f71a8951368a4cc085cf7875ff44e61c", "object": { "result": "APPROVED", "ho...</msg>
<status status="PASS" starttime="20210322 03:25:19.383" endtime="20210322 03:25:19.385"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/admin/internal_operation/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/registration/approval</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:25:19.386" level="INFO">POST Request using : uri=/admin/internal_operation/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/d630f1d0d1c54357902f2ce256f89b82/registration/approval, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "risk.assessment.result", "resource": "business.holder", "created_at": "2021-03-22 15:28:56.747Z", "marketplace_id": "f71a8951368a4cc085cf7875ff44e61c", "object": { "result": "APPROVED", "holder_id": "d630f1d0d1c54357902f2ce256f89b82", "applicant_id": "bcc25a6751c14b52af1340d40dba78c5", "assessment_id": "8939ea50-a896-4e4a-8c9d-3dc64d971e95" } } 
json=None</msg>
<msg timestamp="20210322 03:25:19.603" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:25:19.385" endtime="20210322 03:25:19.603"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:25:19.605" level="INFO">{'message': 'Holder approved successfully'}</msg>
<status status="PASS" starttime="20210322 03:25:19.604" endtime="20210322 03:25:19.605"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:25:19.607" level="INFO">32e4a95364ad8b2f</msg>
<status status="PASS" starttime="20210322 03:25:19.606" endtime="20210322 03:25:19.607"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:25:19.610" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:25:19.608" endtime="20210322 03:25:19.610"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 03:25:19.611" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:25:19.610" endtime="20210322 03:25:19.611"></status>
</kw>
<status status="PASS" starttime="20210322 03:25:19.377" endtime="20210322 03:25:19.611"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 03:25:19.613" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:25:19.612" endtime="20210322 03:25:19.613"></status>
</kw>
<kw name="buscar account por holder" library="accounts_get_accounts_by_holder">
<kw name="conectar accounts" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accounts</arg>
<arg>url=${account_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 03:25:19.617" level="INFO">Creating Session using : alias=accounts, url=https://banking-accounts-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 03:25:19.616" endtime="20210322 03:25:19.618"></status>
</kw>
<status status="PASS" starttime="20210322 03:25:19.615" endtime="20210322 03:25:19.618"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accounts</arg>
<arg>/marketplaces/${marketplace_external_key}/holders/${holder_external_key}/accounts</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:25:19.620" level="INFO">GET Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/holders/d630f1d0d1c54357902f2ce256f89b82/accounts, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 03:25:20.261" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:25:19.619" endtime="20210322 03:25:20.261"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:25:20.263" level="INFO">{'items': [{'id': '2ea492c3f6634ab3b7a5c09489e58473', 'holder': 'd630f1d0d1c54357902f2ce256f89b82', 'balance': '0.00', 'currency': 'BRL', 'routing_number': '001', 'number': '1627102692', 'status': 'active', 'metadata': {}, 'created_at': '2021-03-22T06:25:20.442728', 'updated_at': '2021-03-22T06:25:20.442728', 'primary': True, 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'uri': '/v2/marketplaces/f71a8951368a4cc085cf7875ff44e61c/accounts/2ea492c3f6634ab3b7a5c09489e58473', 'resource': 'payment_account'}], 'has_more': False, 'limit': 100, 'total_pages': 1, 'page': 1, 'offset': 0, 'total': '1', 'query_count': '1'}</msg>
<status status="PASS" starttime="20210322 03:25:20.262" endtime="20210322 03:25:20.263"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:25:20.264" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:25:20.264" endtime="20210322 03:25:20.264"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["id"]}</arg>
</arguments>
<assign>
<var>${account_external_key}</var>
</assign>
<msg timestamp="20210322 03:25:20.266" level="INFO">${account_external_key} = 2ea492c3f6634ab3b7a5c09489e58473</msg>
<status status="PASS" starttime="20210322 03:25:20.265" endtime="20210322 03:25:20.266"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_external_key}</arg>
</arguments>
<msg timestamp="20210322 03:25:20.267" level="INFO">${account_external_key} = 2ea492c3f6634ab3b7a5c09489e58473</msg>
<status status="PASS" starttime="20210322 03:25:20.266" endtime="20210322 03:25:20.267"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["number"]}</arg>
</arguments>
<assign>
<var>${account_number}</var>
</assign>
<msg timestamp="20210322 03:25:20.269" level="INFO">${account_number} = 1627102692</msg>
<status status="PASS" starttime="20210322 03:25:20.268" endtime="20210322 03:25:20.269"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_number}</arg>
</arguments>
<msg timestamp="20210322 03:25:20.271" level="INFO">${account_number} = 1627102692</msg>
<status status="PASS" starttime="20210322 03:25:20.270" endtime="20210322 03:25:20.271"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["routing_number"]}</arg>
</arguments>
<assign>
<var>${account_routing_number}</var>
</assign>
<msg timestamp="20210322 03:25:20.272" level="INFO">${account_routing_number} = 001</msg>
<status status="PASS" starttime="20210322 03:25:20.271" endtime="20210322 03:25:20.273"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_routing_number}</arg>
</arguments>
<msg timestamp="20210322 03:25:20.273" level="INFO">${account_routing_number} = 001</msg>
<status status="PASS" starttime="20210322 03:25:20.273" endtime="20210322 03:25:20.273"></status>
</kw>
<status status="PASS" starttime="20210322 03:25:19.613" endtime="20210322 03:25:20.274"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 03:25:20.274" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:25:20.274" endtime="20210322 03:25:20.275"></status>
</kw>
<status status="PASS" starttime="20210322 03:25:16.861" endtime="20210322 03:25:20.275"></status>
</kw>
<kw name="criar chave pix" library="pix_dict_create_entry">
<arguments>
<arg>evp</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 03:25:20.276" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 03:25:20.276" endtime="20210322 03:25:20.277"></status>
</kw>
<status status="PASS" starttime="20210322 03:25:20.276" endtime="20210322 03:25:20.277"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${type}</arg>
</arguments>
<msg timestamp="20210322 03:25:20.278" level="INFO">${type} = evp</msg>
<status status="PASS" starttime="20210322 03:25:20.277" endtime="20210322 03:25:20.278"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210322 03:25:20.278" level="INFO">${value} = </msg>
<status status="PASS" starttime="20210322 03:25:20.278" endtime="20210322 03:25:20.278"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:25:20.278" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 03:25:20.278" endtime="20210322 03:25:20.279"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "${type}",</arg>
<arg>"value": "${value}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 03:25:20.279" level="INFO">${body} = { "type": "evp", "value": "" }</msg>
<status status="PASS" starttime="20210322 03:25:20.279" endtime="20210322 03:25:20.279"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:25:20.280" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/d630f1d0d1c54357902f2ce256f89b82/accounts/2ea492c3f6634ab3b7a5c09489e58473/entries, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "evp", "value": "" } 
json=None</msg>
<msg timestamp="20210322 03:25:22.169" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:25:20.279" endtime="20210322 03:25:22.169"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:25:22.169" level="INFO">{'id': 'e8676f46bf5b4016abb6fe8fc04fd495', 'status': 'active', 'created_at': '2021-03-22T03:25:21.809', 'updated_at': '2021-03-22T03:25:23.048', 'key': {'value': '278a06ec-b57a-4c14-8f91-fe12c72334f5', 'type': 'evp'}, 'account': {'id': '2ea492c3f6634ab3b7a5c09489e58473', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': 'd630f1d0d1c54357902f2ce256f89b82', 'owner': {'name': 'Holder de teste', 'national_registration': '02856179312', 'type': 'individual'}, 'routing_number': '001', 'number': '1627102692', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}, 'resource': 'pix.entry'}</msg>
<status status="PASS" starttime="20210322 03:25:22.169" endtime="20210322 03:25:22.170"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:25:22.170" level="INFO">daccf979946ed346</msg>
<status status="PASS" starttime="20210322 03:25:22.170" endtime="20210322 03:25:22.170"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 03:25:22.171" level="INFO">201</msg>
<status status="PASS" starttime="20210322 03:25:22.171" endtime="20210322 03:25:22.171"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:25:22.171" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:25:22.171" endtime="20210322 03:25:22.171"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${entry_external_key}</var>
</assign>
<msg timestamp="20210322 03:25:22.172" level="INFO">${entry_external_key} = e8676f46bf5b4016abb6fe8fc04fd495</msg>
<status status="PASS" starttime="20210322 03:25:22.172" endtime="20210322 03:25:22.172"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${entry_external_key}</arg>
</arguments>
<msg timestamp="20210322 03:25:22.172" level="INFO">${entry_external_key} = e8676f46bf5b4016abb6fe8fc04fd495</msg>
<status status="PASS" starttime="20210322 03:25:22.172" endtime="20210322 03:25:22.172"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["key"]["value"]}</arg>
</arguments>
<assign>
<var>${entry_key_value}</var>
</assign>
<msg timestamp="20210322 03:25:22.173" level="INFO">${entry_key_value} = 278a06ec-b57a-4c14-8f91-fe12c72334f5</msg>
<status status="PASS" starttime="20210322 03:25:22.172" endtime="20210322 03:25:22.173"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${entry_key_value}</arg>
</arguments>
<msg timestamp="20210322 03:25:22.173" level="INFO">${entry_key_value} = 278a06ec-b57a-4c14-8f91-fe12c72334f5</msg>
<status status="PASS" starttime="20210322 03:25:22.173" endtime="20210322 03:25:22.173"></status>
</kw>
<status status="PASS" starttime="20210322 03:25:20.275" endtime="20210322 03:25:22.173"></status>
</kw>
<kw name="buscar chave pix" library="pix_dict_get_entry">
<arguments>
<arg>${holder_external_key}</arg>
<arg>${account_external_key}</arg>
<arg>${entry_external_key}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 03:25:22.174" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 03:25:22.174" endtime="20210322 03:25:22.175"></status>
</kw>
<status status="PASS" starttime="20210322 03:25:22.174" endtime="20210322 03:25:22.175"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries/${entry_external_key}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:25:22.175" level="INFO">GET Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/d630f1d0d1c54357902f2ce256f89b82/accounts/2ea492c3f6634ab3b7a5c09489e58473/entries/e8676f46bf5b4016abb6fe8fc04fd495, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 03:25:22.809" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:25:22.175" endtime="20210322 03:25:22.809"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:25:22.810" level="INFO">{'id': 'e8676f46bf5b4016abb6fe8fc04fd495', 'status': 'active', 'created_at': '2021-03-22T03:25:21.809', 'updated_at': '2021-03-22T03:25:23.048', 'key': {'value': '278a06ec-b57a-4c14-8f91-fe12c72334f5', 'type': 'evp'}, 'account': {'id': '2ea492c3f6634ab3b7a5c09489e58473', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': 'd630f1d0d1c54357902f2ce256f89b82', 'owner': {'name': 'Holder de teste', 'national_registration': '02856179312', 'type': 'individual'}, 'routing_number': '001', 'number': '1627102692', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}, 'resource': 'pix.entry'}</msg>
<status status="PASS" starttime="20210322 03:25:22.809" endtime="20210322 03:25:22.810"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:25:22.811" level="INFO">b3134f0887a1836a</msg>
<status status="PASS" starttime="20210322 03:25:22.811" endtime="20210322 03:25:22.811"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 03:25:22.811" level="INFO">200</msg>
<status status="PASS" starttime="20210322 03:25:22.811" endtime="20210322 03:25:22.812"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:25:22.812" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:25:22.812" endtime="20210322 03:25:22.812"></status>
</kw>
<status status="PASS" starttime="20210322 03:25:22.174" endtime="20210322 03:25:22.812"></status>
</kw>
<kw name="validar busca da chave pix" library="asserts">
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 03:25:22.813" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:25:22.812" endtime="20210322 03:25:22.813"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar status da chave</arg>
</arguments>
<msg timestamp="20210322 03:25:22.813" level="INFO">Validar status da chave</msg>
<status status="PASS" starttime="20210322 03:25:22.813" endtime="20210322 03:25:22.813"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${type}' == 'evp'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["status"]}</arg>
<arg>active</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'phone'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["status"]}</arg>
<arg>waiting_ownership_verification</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'email'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["status"]}</arg>
<arg>waiting_ownership_verification</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'national_registration'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["status"]}</arg>
<arg>active</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["status"]}</arg>
<arg>active</arg>
</arguments>
<status status="PASS" starttime="20210322 03:25:22.814" endtime="20210322 03:25:22.814"></status>
</kw>
<status status="PASS" starttime="20210322 03:25:22.813" endtime="20210322 03:25:22.814"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando Tipo da chave PIX</arg>
</arguments>
<msg timestamp="20210322 03:25:22.814" level="INFO">Validando Tipo da chave PIX</msg>
<status status="PASS" starttime="20210322 03:25:22.814" endtime="20210322 03:25:22.814"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${type}' == 'evp'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["type"]}</arg>
<arg>${type}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'phone'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["type"]}</arg>
<arg>${type}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'email'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["type"]}</arg>
<arg>${type}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'national_registration'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["type"]}</arg>
<arg>${type}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["key"]["type"]}</arg>
<arg>${type}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:25:22.815" endtime="20210322 03:25:22.815"></status>
</kw>
<status status="PASS" starttime="20210322 03:25:22.814" endtime="20210322 03:25:22.815"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando Valor da chave PIX</arg>
</arguments>
<msg timestamp="20210322 03:25:22.817" level="INFO">Validando Valor da chave PIX</msg>
<status status="PASS" starttime="20210322 03:25:22.817" endtime="20210322 03:25:22.817"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${type}' == 'evp'</arg>
<arg>Should Not Be Empty</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'phone'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${phone_pix}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'email'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${email_pix}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'national_registration'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${national_registration}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${response.json()["key"]["value"]}</arg>
</arguments>
<msg timestamp="20210322 03:25:22.818" level="INFO">Length is 36</msg>
<status status="PASS" starttime="20210322 03:25:22.817" endtime="20210322 03:25:22.818"></status>
</kw>
<status status="PASS" starttime="20210322 03:25:22.817" endtime="20210322 03:25:22.818"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando dados da conta</arg>
</arguments>
<msg timestamp="20210322 03:25:22.818" level="INFO">Validando dados da conta</msg>
<status status="PASS" starttime="20210322 03:25:22.818" endtime="20210322 03:25:22.818"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["id"]}</arg>
<arg>${account_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:25:22.818" endtime="20210322 03:25:22.818"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["marketplace"]}</arg>
<arg>${marketplace_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:25:22.818" endtime="20210322 03:25:22.819"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["holder"]}</arg>
<arg>${holder_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:25:22.819" endtime="20210322 03:25:22.820"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["number"]}</arg>
<arg>${account_number}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:25:22.820" endtime="20210322 03:25:22.820"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["routing_number"]}</arg>
<arg>${account_routing_number}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:25:22.821" endtime="20210322 03:25:22.821"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["type"]}</arg>
<arg>CACC</arg>
</arguments>
<status status="PASS" starttime="20210322 03:25:22.821" endtime="20210322 03:25:22.821"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar Proprietário da Account Owner</arg>
</arguments>
<msg timestamp="20210322 03:25:22.822" level="INFO">Validar Proprietário da Account Owner</msg>
<status status="PASS" starttime="20210322 03:25:22.821" endtime="20210322 03:25:22.822"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${holder_type}' == 'individual'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["account"]["owner"]["name"]}</arg>
<arg>${holder_name}</arg>
<arg>ELSE IF</arg>
<arg>'${holder_type}' == 'business'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["account"]["owner"]["name"]}</arg>
<arg>${legal_name}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["account"]["owner"]["name"]}</arg>
<arg>${holder_name}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:25:22.822" endtime="20210322 03:25:22.823"></status>
</kw>
<status status="PASS" starttime="20210322 03:25:22.822" endtime="20210322 03:25:22.823"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar national_registration da Account Owner</arg>
</arguments>
<msg timestamp="20210322 03:25:22.823" level="INFO">Validar national_registration da Account Owner</msg>
<status status="PASS" starttime="20210322 03:25:22.823" endtime="20210322 03:25:22.823"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${holder_type}' == 'individual'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["account"]["owner"]["national_registration"]}</arg>
<arg>${national_registration}</arg>
<arg>ELSE IF</arg>
<arg>'${holder_type}' == 'business'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["account"]["owner"]["national_registration"]}</arg>
<arg>${national_registration}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["account"]["owner"]["national_registration"]}</arg>
<arg>${national_registration}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:25:22.824" endtime="20210322 03:25:22.824"></status>
</kw>
<status status="PASS" starttime="20210322 03:25:22.823" endtime="20210322 03:25:22.824"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar Holder Type do Account Owner</arg>
</arguments>
<msg timestamp="20210322 03:25:22.825" level="INFO">Validar Holder Type do Account Owner</msg>
<status status="PASS" starttime="20210322 03:25:22.824" endtime="20210322 03:25:22.825"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${holder_type}' == 'individual'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["account"]["owner"]["type"]}</arg>
<arg>${holder_type}</arg>
<arg>ELSE IF</arg>
<arg>'${holder_type}' == 'business'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["account"]["owner"]["type"]}</arg>
<arg>${holder_type}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["account"]["owner"]["type"]}</arg>
<arg>${holder_type}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:25:22.825" endtime="20210322 03:25:22.826"></status>
</kw>
<status status="PASS" starttime="20210322 03:25:22.825" endtime="20210322 03:25:22.826"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar PSP</arg>
</arguments>
<msg timestamp="20210322 03:25:22.827" level="INFO">Validar PSP</msg>
<status status="PASS" starttime="20210322 03:25:22.826" endtime="20210322 03:25:22.827"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["psp"]["code"]}</arg>
<arg>19468242</arg>
</arguments>
<status status="PASS" starttime="20210322 03:25:22.827" endtime="20210322 03:25:22.827"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["psp"]["name"]}</arg>
<arg>Zoop Tecnologia e Meios de Pagamento S.A.</arg>
</arguments>
<status status="PASS" starttime="20210322 03:25:22.827" endtime="20210322 03:25:22.827"></status>
</kw>
<status status="PASS" starttime="20210322 03:25:22.812" endtime="20210322 03:25:22.827"></status>
</kw>
<doc>Fluxo Básico</doc>
<tags>
<tag>smoke_test</tag>
</tags>
<status status="PASS" starttime="20210322 03:25:16.860" endtime="20210322 03:25:22.827" critical="yes"></status>
</test>
<test id="s1-s1-s1-t2" name="Cenário: Buscar chave de endereçamento do tipo Phone">
<kw name="Random Number" library="FakerLibrary">
<doc>Returns a random number with 1 digit (default, when digits==None),
a random number with 0 to given number of digits, or a random number
with given number to given number of digits (when ``fix_len==True``).</doc>
<arguments>
<arg>digits=8</arg>
<arg>fix_len=True</arg>
</arguments>
<assign>
<var>${phone}</var>
</assign>
<msg timestamp="20210322 03:25:22.829" level="INFO">${phone} = 64159389</msg>
<status status="PASS" starttime="20210322 03:25:22.828" endtime="20210322 03:25:22.829"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>+55219${phone}</arg>
</arguments>
<assign>
<var>${phone_pix}</var>
</assign>
<msg timestamp="20210322 03:25:22.829" level="INFO">${phone_pix} = +5521964159389</msg>
<status status="PASS" starttime="20210322 03:25:22.829" endtime="20210322 03:25:22.829"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${phone_pix}</arg>
</arguments>
<msg timestamp="20210322 03:25:22.829" level="INFO">${phone_pix} = +5521964159389</msg>
<status status="PASS" starttime="20210322 03:25:22.829" endtime="20210322 03:25:22.830"></status>
</kw>
<kw name="criar holder individual ativo" library="accreditation_create_holder_active">
<kw name="conectar accreditation" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accreditation</arg>
<arg>url=${accreditation_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 03:25:22.830" level="INFO">Creating Session using : alias=accreditation, url=https://banking-accreditation-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 03:25:22.830" endtime="20210322 03:25:22.831"></status>
</kw>
<status status="PASS" starttime="20210322 03:25:22.830" endtime="20210322 03:25:22.832"></status>
</kw>
<kw name="Cpf" library="FakerLibrary">
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 03:25:22.832" level="INFO">${national_registration} = 401.362.859-70</msg>
<status status="PASS" starttime="20210322 03:25:22.832" endtime="20210322 03:25:22.832"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${national_registration}</arg>
<arg>.</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 03:25:22.832" level="INFO">${national_registration} = 401362859-70</msg>
<status status="PASS" starttime="20210322 03:25:22.832" endtime="20210322 03:25:22.832"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${national_registration}</arg>
<arg>-</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 03:25:22.832" level="INFO">${national_registration} = 40136285970</msg>
<status status="PASS" starttime="20210322 03:25:22.832" endtime="20210322 03:25:22.832"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${national_registration}</arg>
</arguments>
<msg timestamp="20210322 03:25:22.832" level="INFO">${national_registration} = 40136285970</msg>
<status status="PASS" starttime="20210322 03:25:22.832" endtime="20210322 03:25:22.832"></status>
</kw>
<kw name="Rg" library="FakerLibrary">
<doc>Brazilian RG, return plain numbers.
Check:  https://www.ngmatematica.com/2014/02/como-determinar-o-digito-verificador-do.html</doc>
<assign>
<var>${identity_card}</var>
</assign>
<msg timestamp="20210322 03:25:22.833" level="INFO">${identity_card} = 145703289</msg>
<status status="PASS" starttime="20210322 03:25:22.833" endtime="20210322 03:25:22.833"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${identity_card}</arg>
</arguments>
<msg timestamp="20210322 03:25:22.833" level="INFO">${identity_card} = 145703289</msg>
<status status="PASS" starttime="20210322 03:25:22.833" endtime="20210322 03:25:22.833"></status>
</kw>
<kw name="criar holder individual" library="accreditation_post_holder_individual">
<arguments>
<arg>holder_type=individual</arg>
<arg>holder_name=${holder_name}</arg>
<arg>email=${email}</arg>
<arg>national_registration=${national_registration}</arg>
<arg>revenue=${revenue}</arg>
<arg>birthday=${birthday}</arg>
<arg>mothers_name=${mothers_name}</arg>
<arg>identity_card=${identity_card}</arg>
<arg>pep=false</arg>
<arg>cbo=${cbo}</arg>
</arguments>
<kw name="conectar accreditation" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accreditation</arg>
<arg>url=${accreditation_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 03:25:22.836" level="INFO">Creating Session using : alias=accreditation, url=https://banking-accreditation-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 03:25:22.836" endtime="20210322 03:25:22.836"></status>
</kw>
<status status="PASS" starttime="20210322 03:25:22.835" endtime="20210322 03:25:22.837"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_type}</arg>
</arguments>
<msg timestamp="20210322 03:25:22.838" level="INFO">${holder_type} = individual</msg>
<status status="PASS" starttime="20210322 03:25:22.837" endtime="20210322 03:25:22.838"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_name}</arg>
</arguments>
<msg timestamp="20210322 03:25:22.838" level="INFO">${holder_name} = Holder de teste</msg>
<status status="PASS" starttime="20210322 03:25:22.838" endtime="20210322 03:25:22.838"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:25:22.838" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 03:25:22.838" endtime="20210322 03:25:22.838"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "${holder_type}",</arg>
<arg>"name": "${holder_name}",</arg>
<arg>"email": "${email}",</arg>
<arg>"national_registration": "${national_registration}",</arg>
<arg>"revenue": ${revenue},</arg>
<arg>"birthday": "${birthday}",</arg>
<arg>"mothers_name": "${mothers_name}",</arg>
<arg>"identity_card": "${identity_card}",</arg>
<arg>"pep": false,</arg>
<arg>"cbo": ${cbo}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 03:25:22.839" level="INFO">${body} = { "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "40136285970", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder",...</msg>
<status status="PASS" starttime="20210322 03:25:22.838" endtime="20210322 03:25:22.839"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:25:22.839" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "40136285970", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder", "identity_card": "145703289", "pep": false, "cbo": 821450 } 
json=None</msg>
<msg timestamp="20210322 03:25:23.501" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:25:22.839" endtime="20210322 03:25:23.502"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:25:23.504" level="INFO">{'id': '41b7e72b164942da97f9f8c006ccc380', 'name': 'Holder de teste', 'revenue': 5500.0, 'email': 'teste@teste.com.br', 'status': 'waiting_info_and_documents', 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'marketplace_name': 'Marketplace de Teste', 'created_at': '2021-03-22T03:25:24.33934', 'updated_at': '2021-03-22T03:25:24.339342', 'type': 'individual', 'national_registration': '40136285970', 'birthday': '1988-04-23', 'mothers_name': 'Mãe do Holder', 'identity_card': '145703289', 'pep': False, 'cbo': '821450', '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/41b7e72b164942da97f9f8c006ccc380', 'type': 'GET'}, 'phones': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/41b7e72b164942da97f9f8c006ccc380/phones', 'type': 'GET'}, 'addresses': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/41b7e72b164942da97f9f8c006ccc380/addresses', 'type': 'GET'}, 'documents': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/41b7e72b164942da97f9f8c006ccc380/documents', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 03:25:23.502" endtime="20210322 03:25:23.504"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:25:23.506" level="INFO">97a7ce681c9e27c4</msg>
<status status="PASS" starttime="20210322 03:25:23.505" endtime="20210322 03:25:23.507"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${body}</arg>
</arguments>
<msg timestamp="20210322 03:25:23.508" level="INFO">{ "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "40136285970", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder", "identity_card": "145703289", "pep": false, "cbo": 821450 }</msg>
<status status="PASS" starttime="20210322 03:25:23.507" endtime="20210322 03:25:23.509"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:25:23.511" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:25:23.510" endtime="20210322 03:25:23.511"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${holder_external_key}</var>
</assign>
<msg timestamp="20210322 03:25:23.514" level="INFO">${holder_external_key} = 41b7e72b164942da97f9f8c006ccc380</msg>
<status status="PASS" starttime="20210322 03:25:23.512" endtime="20210322 03:25:23.514"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_external_key}</arg>
</arguments>
<msg timestamp="20210322 03:25:23.515" level="INFO">${holder_external_key} = 41b7e72b164942da97f9f8c006ccc380</msg>
<status status="PASS" starttime="20210322 03:25:23.515" endtime="20210322 03:25:23.515"></status>
</kw>
<status status="PASS" starttime="20210322 03:25:22.833" endtime="20210322 03:25:23.516"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_name}</arg>
</arguments>
<msg timestamp="20210322 03:25:23.517" level="INFO">${holder_name} = Holder de teste</msg>
<status status="PASS" starttime="20210322 03:25:23.516" endtime="20210322 03:25:23.517"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 03:25:23.519" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:25:23.518" endtime="20210322 03:25:23.519"></status>
</kw>
<kw name="criar holder phone" library="accreditation_post_holder_phone">
<arguments>
<arg>21</arg>
<arg>51</arg>
<arg>996221236</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:25:23.521" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 03:25:23.520" endtime="20210322 03:25:23.521"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"area_code": "${phone_area_code}",</arg>
<arg>"country_code": "${phone_country_code}",</arg>
<arg>"number": "${phone_number}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 03:25:23.522" level="INFO">${body} = { "area_code": "21", "country_code": "51", "number": "996221236" }</msg>
<status status="PASS" starttime="20210322 03:25:23.521" endtime="20210322 03:25:23.522"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/phones</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:25:23.524" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/41b7e72b164942da97f9f8c006ccc380/phones, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "area_code": "21", "country_code": "51", "number": "996221236" } 
json=None</msg>
<msg timestamp="20210322 03:25:23.780" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:25:23.523" endtime="20210322 03:25:23.780"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:25:23.781" level="INFO">{'id': '82c780d355fa4cd08f33defa1d8c0d53', 'area_code': '21', 'country_code': '51', 'number': '996221236', 'main': True, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/41b7e72b164942da97f9f8c006ccc380/phones/82c780d355fa4cd08f33defa1d8c0d53', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/41b7e72b164942da97f9f8c006ccc380', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 03:25:23.781" endtime="20210322 03:25:23.781"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:25:23.782" level="INFO">b3b01a69803dbdd2</msg>
<status status="PASS" starttime="20210322 03:25:23.781" endtime="20210322 03:25:23.782"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:25:23.782" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:25:23.782" endtime="20210322 03:25:23.782"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${phone_external_key}</var>
</assign>
<msg timestamp="20210322 03:25:23.783" level="INFO">${phone_external_key} = 82c780d355fa4cd08f33defa1d8c0d53</msg>
<status status="PASS" starttime="20210322 03:25:23.783" endtime="20210322 03:25:23.783"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${phone_external_key}</arg>
</arguments>
<msg timestamp="20210322 03:25:23.784" level="INFO">${phone_external_key} = 82c780d355fa4cd08f33defa1d8c0d53</msg>
<status status="PASS" starttime="20210322 03:25:23.783" endtime="20210322 03:25:23.784"></status>
</kw>
<status status="PASS" starttime="20210322 03:25:23.520" endtime="20210322 03:25:23.784"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 03:25:23.784" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:25:23.784" endtime="20210322 03:25:23.785"></status>
</kw>
<kw name="criar holder address" library="accreditation_post_holder_address">
<arguments>
<arg>Rio de Janeiro</arg>
<arg>Rio de Janeiro</arg>
<arg>Brasil</arg>
<arg>Bairro de Testes</arg>
<arg>Rua de Testes</arg>
<arg>90</arg>
<arg>apto 200</arg>
<arg>21550987</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:25:23.786" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 03:25:23.785" endtime="20210322 03:25:23.786"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"city": "${city}",</arg>
<arg>"state": "${state}",</arg>
<arg>"country": "${country}",</arg>
<arg>"neighborhood": "${neighborhood}",</arg>
<arg>"street": "${street}",</arg>
<arg>"number": "${number}",</arg>
<arg>"complement": "${complement}",</arg>
<arg>"postal_code": "${postal_code}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 03:25:23.786" level="INFO">${body} = { "city": "Rio de Janeiro", "state": "Rio de Janeiro", "country": "Brasil", "neighborhood": "Bairro de Testes", "street": "Rua de Testes", "number": "90", "complement": "apto 200", "postal_code": "215...</msg>
<status status="PASS" starttime="20210322 03:25:23.786" endtime="20210322 03:25:23.786"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/addresses</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:25:23.787" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/41b7e72b164942da97f9f8c006ccc380/addresses, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "city": "Rio de Janeiro", "state": "Rio de Janeiro", "country": "Brasil", "neighborhood": "Bairro de Testes", "street": "Rua de Testes", "number": "90", "complement": "apto 200", "postal_code": "21550987" } 
json=None</msg>
<msg timestamp="20210322 03:25:24.051" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:25:23.787" endtime="20210322 03:25:24.051"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:25:24.052" level="INFO">{'id': 'bc57b5a667b2496085eb6aaf76395cc0', 'street': 'Rua de Testes', 'number': '90', 'city': 'Rio de Janeiro', 'complement': 'apto 200', 'state': 'Rio de Janeiro', 'neighborhood': 'Bairro de Testes', 'postal_code': '21550987', 'country': 'Brasil', 'main': True, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/41b7e72b164942da97f9f8c006ccc380/addresses/bc57b5a667b2496085eb6aaf76395cc0', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/41b7e72b164942da97f9f8c006ccc380', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 03:25:24.051" endtime="20210322 03:25:24.052"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:25:24.053" level="INFO">3d27a505a44e8ffd</msg>
<status status="PASS" starttime="20210322 03:25:24.052" endtime="20210322 03:25:24.053"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:25:24.054" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:25:24.053" endtime="20210322 03:25:24.054"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${address_external_key}</var>
</assign>
<msg timestamp="20210322 03:25:24.055" level="INFO">${address_external_key} = bc57b5a667b2496085eb6aaf76395cc0</msg>
<status status="PASS" starttime="20210322 03:25:24.054" endtime="20210322 03:25:24.055"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${address_external_key}</arg>
</arguments>
<msg timestamp="20210322 03:25:24.055" level="INFO">${address_external_key} = bc57b5a667b2496085eb6aaf76395cc0</msg>
<status status="PASS" starttime="20210322 03:25:24.055" endtime="20210322 03:25:24.055"></status>
</kw>
<status status="PASS" starttime="20210322 03:25:23.785" endtime="20210322 03:25:24.055"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 03:25:24.056" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:25:24.056" endtime="20210322 03:25:24.056"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>SELFIE</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:25:24.057" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 03:25:24.057" endtime="20210322 03:25:24.057"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 03:25:24.058" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 03:25:24.060" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 03:25:24.058" endtime="20210322 03:25:24.060"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:25:24.061" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/41b7e72b164942da97f9f8c006ccc380/documents?type=SELFIE, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 03:25:24.372" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:25:24.061" endtime="20210322 03:25:24.372"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:25:24.373" level="INFO">{'id': 'f1c5683618874be78ed66b9dead2a4e1', 'document_type': 'selfie', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/41b7e72b164942da97f9f8c006ccc380/documents/f1c5683618874be78ed66b9dead2a4e1', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/41b7e72b164942da97f9f8c006ccc380', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/41b7e72b164942da97f9f8c006ccc380/documents/f1c5683618874be78ed66b9dead2a4e1/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 03:25:24.373" endtime="20210322 03:25:24.374"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:25:24.374" level="INFO">1596ccfea9854c82</msg>
<status status="PASS" starttime="20210322 03:25:24.374" endtime="20210322 03:25:24.375"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:25:24.375" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:25:24.375" endtime="20210322 03:25:24.375"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 03:25:24.377" level="INFO">${document_external_key} = f1c5683618874be78ed66b9dead2a4e1</msg>
<status status="PASS" starttime="20210322 03:25:24.376" endtime="20210322 03:25:24.377"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 03:25:24.378" level="INFO">${document_external_key} = f1c5683618874be78ed66b9dead2a4e1</msg>
<status status="PASS" starttime="20210322 03:25:24.377" endtime="20210322 03:25:24.378"></status>
</kw>
<status status="PASS" starttime="20210322 03:25:24.056" endtime="20210322 03:25:24.378"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 03:25:24.379" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:25:24.378" endtime="20210322 03:25:24.379"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>RG_FRENTE</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:25:24.381" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 03:25:24.380" endtime="20210322 03:25:24.381"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 03:25:24.382" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 03:25:24.383" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 03:25:24.381" endtime="20210322 03:25:24.384"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:25:24.385" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/41b7e72b164942da97f9f8c006ccc380/documents?type=RG_FRENTE, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 03:25:24.644" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:25:24.384" endtime="20210322 03:25:24.645"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:25:24.647" level="INFO">{'id': '498bad76212f430b8a38ff2b377294dc', 'document_type': 'rg_frente', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/41b7e72b164942da97f9f8c006ccc380/documents/498bad76212f430b8a38ff2b377294dc', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/41b7e72b164942da97f9f8c006ccc380', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/41b7e72b164942da97f9f8c006ccc380/documents/498bad76212f430b8a38ff2b377294dc/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 03:25:24.645" endtime="20210322 03:25:24.647"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:25:24.648" level="INFO">f3b5185eeb959e17</msg>
<status status="PASS" starttime="20210322 03:25:24.647" endtime="20210322 03:25:24.649"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:25:24.650" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:25:24.649" endtime="20210322 03:25:24.650"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 03:25:24.652" level="INFO">${document_external_key} = 498bad76212f430b8a38ff2b377294dc</msg>
<status status="PASS" starttime="20210322 03:25:24.651" endtime="20210322 03:25:24.652"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 03:25:24.653" level="INFO">${document_external_key} = 498bad76212f430b8a38ff2b377294dc</msg>
<status status="PASS" starttime="20210322 03:25:24.653" endtime="20210322 03:25:24.653"></status>
</kw>
<status status="PASS" starttime="20210322 03:25:24.380" endtime="20210322 03:25:24.654"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 03:25:24.655" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:25:24.654" endtime="20210322 03:25:24.655"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>RG_VERSO</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:25:24.657" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 03:25:24.656" endtime="20210322 03:25:24.657"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 03:25:24.658" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 03:25:24.660" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 03:25:24.657" endtime="20210322 03:25:24.660"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:25:24.661" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/41b7e72b164942da97f9f8c006ccc380/documents?type=RG_VERSO, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 03:25:24.913" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:25:24.660" endtime="20210322 03:25:24.913"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:25:24.914" level="INFO">{'id': '5925f82585c64eccb56cf417d9801dbf', 'document_type': 'rg_verso', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/41b7e72b164942da97f9f8c006ccc380/documents/5925f82585c64eccb56cf417d9801dbf', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/41b7e72b164942da97f9f8c006ccc380', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/41b7e72b164942da97f9f8c006ccc380/documents/5925f82585c64eccb56cf417d9801dbf/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 03:25:24.913" endtime="20210322 03:25:24.914"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:25:24.915" level="INFO">0959b7b9acc6b930</msg>
<status status="PASS" starttime="20210322 03:25:24.914" endtime="20210322 03:25:24.915"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:25:24.916" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:25:24.915" endtime="20210322 03:25:24.916"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 03:25:24.916" level="INFO">${document_external_key} = 5925f82585c64eccb56cf417d9801dbf</msg>
<status status="PASS" starttime="20210322 03:25:24.916" endtime="20210322 03:25:24.916"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 03:25:24.917" level="INFO">${document_external_key} = 5925f82585c64eccb56cf417d9801dbf</msg>
<status status="PASS" starttime="20210322 03:25:24.917" endtime="20210322 03:25:24.917"></status>
</kw>
<status status="PASS" starttime="20210322 03:25:24.656" endtime="20210322 03:25:24.917"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 03:25:24.918" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:25:24.917" endtime="20210322 03:25:24.918"></status>
</kw>
<kw name="solicitar aprovação do holder" library="accreditation_request_approval">
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:25:24.919" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 03:25:24.918" endtime="20210322 03:25:24.919"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/approval</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:25:24.919" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/41b7e72b164942da97f9f8c006ccc380/approval, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data=None 
json=None</msg>
<msg timestamp="20210322 03:25:25.192" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:25:24.919" endtime="20210322 03:25:25.192"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:25:25.193" level="INFO">{'message': 'Approval request accepted successfully. Processing analysis'}</msg>
<status status="PASS" starttime="20210322 03:25:25.192" endtime="20210322 03:25:25.193"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:25:25.193" level="INFO">6c54eee2d5416937</msg>
<status status="PASS" starttime="20210322 03:25:25.193" endtime="20210322 03:25:25.193"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:25:25.194" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:25:25.193" endtime="20210322 03:25:25.194"></status>
</kw>
<status status="PASS" starttime="20210322 03:25:24.918" endtime="20210322 03:25:25.194"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 03:25:25.194" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:25:25.194" endtime="20210322 03:25:25.194"></status>
</kw>
<kw name="recebendo notificação de aprovação" library="accreditation_risk_notification">
<kw name="Uuid 4" library="FakerLibrary">
<doc>Generates a random UUID4 string.
:param cast_to: Specify what type the UUID should be cast to. Default is `str`
:type cast_to: callable</doc>
<assign>
<var>${assessment_id}</var>
</assign>
<msg timestamp="20210322 03:25:25.195" level="INFO">${assessment_id} = 9ec4e61f-10f0-4b0f-9836-c7252327e267</msg>
<status status="PASS" starttime="20210322 03:25:25.195" endtime="20210322 03:25:25.195"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>year</arg>
</arguments>
<assign>
<var>${year}</var>
</assign>
<msg timestamp="20210322 03:25:25.195" level="INFO">${year} = 2021</msg>
<status status="PASS" starttime="20210322 03:25:25.195" endtime="20210322 03:25:25.195"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>month</arg>
</arguments>
<assign>
<var>${month}</var>
</assign>
<msg timestamp="20210322 03:25:25.196" level="INFO">${month} = 03</msg>
<status status="PASS" starttime="20210322 03:25:25.195" endtime="20210322 03:25:25.196"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>day</arg>
</arguments>
<assign>
<var>${day}</var>
</assign>
<msg timestamp="20210322 03:25:25.196" level="INFO">${day} = 22</msg>
<status status="PASS" starttime="20210322 03:25:25.196" endtime="20210322 03:25:25.196"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:25:25.196" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 03:25:25.196" endtime="20210322 03:25:25.196"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "risk.assessment.result",</arg>
<arg>"resource": "business.holder",</arg>
<arg>"created_at": "${year}-${month}-${day} 15:28:56.747Z",</arg>
<arg>"marketplace_id": "${marketplace_external_key}",</arg>
<arg>"object": {</arg>
<arg>"result": "APPROVED",</arg>
<arg>"holder_id": "${holder_external_key}",</arg>
<arg>"applicant_id": "${application_external_key}",</arg>
<arg>"assessment_id": "${assessment_id}"</arg>
<arg>}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 03:25:25.197" level="INFO">${body} = { "type": "risk.assessment.result", "resource": "business.holder", "created_at": "2021-03-22 15:28:56.747Z", "marketplace_id": "f71a8951368a4cc085cf7875ff44e61c", "object": { "result": "APPROVED", "ho...</msg>
<status status="PASS" starttime="20210322 03:25:25.197" endtime="20210322 03:25:25.197"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/admin/internal_operation/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/registration/approval</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:25:25.198" level="INFO">POST Request using : uri=/admin/internal_operation/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/41b7e72b164942da97f9f8c006ccc380/registration/approval, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "risk.assessment.result", "resource": "business.holder", "created_at": "2021-03-22 15:28:56.747Z", "marketplace_id": "f71a8951368a4cc085cf7875ff44e61c", "object": { "result": "APPROVED", "holder_id": "41b7e72b164942da97f9f8c006ccc380", "applicant_id": "bcc25a6751c14b52af1340d40dba78c5", "assessment_id": "9ec4e61f-10f0-4b0f-9836-c7252327e267" } } 
json=None</msg>
<msg timestamp="20210322 03:25:25.405" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:25:25.197" endtime="20210322 03:25:25.405"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:25:25.406" level="INFO">{'message': 'Holder approved successfully'}</msg>
<status status="PASS" starttime="20210322 03:25:25.406" endtime="20210322 03:25:25.406"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:25:25.407" level="INFO">9f67b4f45db4a787</msg>
<status status="PASS" starttime="20210322 03:25:25.407" endtime="20210322 03:25:25.407"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:25:25.409" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:25:25.408" endtime="20210322 03:25:25.409"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 03:25:25.410" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:25:25.409" endtime="20210322 03:25:25.410"></status>
</kw>
<status status="PASS" starttime="20210322 03:25:25.194" endtime="20210322 03:25:25.410"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 03:25:25.411" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:25:25.411" endtime="20210322 03:25:25.411"></status>
</kw>
<kw name="buscar account por holder" library="accounts_get_accounts_by_holder">
<kw name="conectar accounts" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accounts</arg>
<arg>url=${account_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 03:25:25.413" level="INFO">Creating Session using : alias=accounts, url=https://banking-accounts-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 03:25:25.413" endtime="20210322 03:25:25.414"></status>
</kw>
<status status="PASS" starttime="20210322 03:25:25.412" endtime="20210322 03:25:25.414"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accounts</arg>
<arg>/marketplaces/${marketplace_external_key}/holders/${holder_external_key}/accounts</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:25:25.414" level="INFO">GET Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/holders/41b7e72b164942da97f9f8c006ccc380/accounts, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 03:25:26.093" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:25:25.414" endtime="20210322 03:25:26.093"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:25:26.093" level="INFO">{'items': [{'id': 'b3acf0fcd3cf402faafaaa062280acbf', 'holder': '41b7e72b164942da97f9f8c006ccc380', 'balance': '0.00', 'currency': 'BRL', 'routing_number': '001', 'number': '2626486101', 'status': 'active', 'metadata': {}, 'created_at': '2021-03-22T06:25:26.248983', 'updated_at': '2021-03-22T06:25:26.248983', 'primary': True, 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'uri': '/v2/marketplaces/f71a8951368a4cc085cf7875ff44e61c/accounts/b3acf0fcd3cf402faafaaa062280acbf', 'resource': 'payment_account'}], 'has_more': False, 'limit': 100, 'total_pages': 1, 'page': 1, 'offset': 0, 'total': '1', 'query_count': '1'}</msg>
<status status="PASS" starttime="20210322 03:25:26.093" endtime="20210322 03:25:26.093"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:25:26.094" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:25:26.093" endtime="20210322 03:25:26.094"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["id"]}</arg>
</arguments>
<assign>
<var>${account_external_key}</var>
</assign>
<msg timestamp="20210322 03:25:26.095" level="INFO">${account_external_key} = b3acf0fcd3cf402faafaaa062280acbf</msg>
<status status="PASS" starttime="20210322 03:25:26.094" endtime="20210322 03:25:26.095"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_external_key}</arg>
</arguments>
<msg timestamp="20210322 03:25:26.096" level="INFO">${account_external_key} = b3acf0fcd3cf402faafaaa062280acbf</msg>
<status status="PASS" starttime="20210322 03:25:26.095" endtime="20210322 03:25:26.096"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["number"]}</arg>
</arguments>
<assign>
<var>${account_number}</var>
</assign>
<msg timestamp="20210322 03:25:26.097" level="INFO">${account_number} = 2626486101</msg>
<status status="PASS" starttime="20210322 03:25:26.096" endtime="20210322 03:25:26.097"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_number}</arg>
</arguments>
<msg timestamp="20210322 03:25:26.097" level="INFO">${account_number} = 2626486101</msg>
<status status="PASS" starttime="20210322 03:25:26.097" endtime="20210322 03:25:26.097"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["routing_number"]}</arg>
</arguments>
<assign>
<var>${account_routing_number}</var>
</assign>
<msg timestamp="20210322 03:25:26.098" level="INFO">${account_routing_number} = 001</msg>
<status status="PASS" starttime="20210322 03:25:26.097" endtime="20210322 03:25:26.098"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_routing_number}</arg>
</arguments>
<msg timestamp="20210322 03:25:26.098" level="INFO">${account_routing_number} = 001</msg>
<status status="PASS" starttime="20210322 03:25:26.098" endtime="20210322 03:25:26.098"></status>
</kw>
<status status="PASS" starttime="20210322 03:25:25.412" endtime="20210322 03:25:26.098"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 03:25:26.098" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:25:26.098" endtime="20210322 03:25:26.098"></status>
</kw>
<status status="PASS" starttime="20210322 03:25:22.830" endtime="20210322 03:25:26.098"></status>
</kw>
<kw name="criar chave pix" library="pix_dict_create_entry">
<arguments>
<arg>phone</arg>
<arg>${phone_pix}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 03:25:26.099" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 03:25:26.099" endtime="20210322 03:25:26.100"></status>
</kw>
<status status="PASS" starttime="20210322 03:25:26.099" endtime="20210322 03:25:26.100"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${type}</arg>
</arguments>
<msg timestamp="20210322 03:25:26.100" level="INFO">${type} = phone</msg>
<status status="PASS" starttime="20210322 03:25:26.100" endtime="20210322 03:25:26.100"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210322 03:25:26.101" level="INFO">${value} = +5521964159389</msg>
<status status="PASS" starttime="20210322 03:25:26.101" endtime="20210322 03:25:26.101"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:25:26.102" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 03:25:26.101" endtime="20210322 03:25:26.102"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "${type}",</arg>
<arg>"value": "${value}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 03:25:26.103" level="INFO">${body} = { "type": "phone", "value": "+5521964159389" }</msg>
<status status="PASS" starttime="20210322 03:25:26.102" endtime="20210322 03:25:26.103"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:25:26.103" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/41b7e72b164942da97f9f8c006ccc380/accounts/b3acf0fcd3cf402faafaaa062280acbf/entries, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "phone", "value": "+5521964159389" } 
json=None</msg>
<msg timestamp="20210322 03:25:26.732" level="INFO">${response} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20210322 03:25:26.103" endtime="20210322 03:25:26.732"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:25:26.733" level="INFO">{'id': '1cf42fbf728b4822a508c7a940837ea3', 'status': 'waiting_ownership_verification', 'created_at': '2021-03-22T03:25:27.586', 'updated_at': '2021-03-22T03:25:27.586', 'key': {'value': '+5521964159389', 'type': 'phone'}, 'account': {'id': 'b3acf0fcd3cf402faafaaa062280acbf', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': '41b7e72b164942da97f9f8c006ccc380', 'owner': {'name': 'Holder de teste', 'national_registration': '40136285970', 'type': 'individual'}, 'routing_number': '001', 'number': '2626486101', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}, 'resource': 'pix.entry'}</msg>
<status status="PASS" starttime="20210322 03:25:26.732" endtime="20210322 03:25:26.733"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:25:26.735" level="INFO">92f65da09d188e06</msg>
<status status="PASS" starttime="20210322 03:25:26.733" endtime="20210322 03:25:26.735"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 03:25:26.735" level="INFO">202</msg>
<status status="PASS" starttime="20210322 03:25:26.735" endtime="20210322 03:25:26.736"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:25:26.736" level="INFO">${response} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20210322 03:25:26.736" endtime="20210322 03:25:26.737"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${entry_external_key}</var>
</assign>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:25:26.738" endtime="20210322 03:25:26.739"></status>
</kw>
<msg timestamp="20210322 03:25:26.739" level="INFO">${entry_external_key} = 1cf42fbf728b4822a508c7a940837ea3</msg>
<status status="PASS" starttime="20210322 03:25:26.737" endtime="20210322 03:25:26.739"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${entry_external_key}</arg>
</arguments>
<msg timestamp="20210322 03:25:26.741" level="INFO">${entry_external_key} = 1cf42fbf728b4822a508c7a940837ea3</msg>
<status status="PASS" starttime="20210322 03:25:26.740" endtime="20210322 03:25:26.741"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["key"]["value"]}</arg>
</arguments>
<assign>
<var>${entry_key_value}</var>
</assign>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["key"]["value"]}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:25:26.742" endtime="20210322 03:25:26.742"></status>
</kw>
<msg timestamp="20210322 03:25:26.742" level="INFO">${entry_key_value} = +5521964159389</msg>
<status status="PASS" starttime="20210322 03:25:26.741" endtime="20210322 03:25:26.743"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${entry_key_value}</arg>
</arguments>
<msg timestamp="20210322 03:25:26.743" level="INFO">${entry_key_value} = +5521964159389</msg>
<status status="PASS" starttime="20210322 03:25:26.743" endtime="20210322 03:25:26.744"></status>
</kw>
<status status="PASS" starttime="20210322 03:25:26.099" endtime="20210322 03:25:26.744"></status>
</kw>
<kw name="buscar chave pix" library="pix_dict_get_entry">
<arguments>
<arg>${holder_external_key}</arg>
<arg>${account_external_key}</arg>
<arg>${entry_external_key}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 03:25:26.746" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 03:25:26.746" endtime="20210322 03:25:26.747"></status>
</kw>
<status status="PASS" starttime="20210322 03:25:26.745" endtime="20210322 03:25:26.747"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries/${entry_external_key}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:25:26.748" level="INFO">GET Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/41b7e72b164942da97f9f8c006ccc380/accounts/b3acf0fcd3cf402faafaaa062280acbf/entries/1cf42fbf728b4822a508c7a940837ea3, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 03:25:27.358" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:25:26.747" endtime="20210322 03:25:27.358"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:25:27.358" level="INFO">{'id': '1cf42fbf728b4822a508c7a940837ea3', 'status': 'waiting_ownership_verification', 'created_at': '2021-03-22T03:25:27.586', 'updated_at': '2021-03-22T03:25:27.586', 'key': {'value': '+5521964159389', 'type': 'phone'}, 'account': {'id': 'b3acf0fcd3cf402faafaaa062280acbf', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': '41b7e72b164942da97f9f8c006ccc380', 'owner': {'name': 'Holder de teste', 'national_registration': '40136285970', 'type': 'individual'}, 'routing_number': '001', 'number': '2626486101', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}, 'resource': 'pix.entry'}</msg>
<status status="PASS" starttime="20210322 03:25:27.358" endtime="20210322 03:25:27.358"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:25:27.359" level="INFO">64b709ca56ae7bc2</msg>
<status status="PASS" starttime="20210322 03:25:27.359" endtime="20210322 03:25:27.359"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 03:25:27.359" level="INFO">200</msg>
<status status="PASS" starttime="20210322 03:25:27.359" endtime="20210322 03:25:27.359"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:25:27.360" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:25:27.360" endtime="20210322 03:25:27.360"></status>
</kw>
<status status="PASS" starttime="20210322 03:25:26.744" endtime="20210322 03:25:27.360"></status>
</kw>
<kw name="validar busca da chave pix" library="asserts">
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 03:25:27.361" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:25:27.360" endtime="20210322 03:25:27.361"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar status da chave</arg>
</arguments>
<msg timestamp="20210322 03:25:27.362" level="INFO">Validar status da chave</msg>
<status status="PASS" starttime="20210322 03:25:27.361" endtime="20210322 03:25:27.362"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${type}' == 'evp'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["status"]}</arg>
<arg>active</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'phone'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["status"]}</arg>
<arg>waiting_ownership_verification</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'email'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["status"]}</arg>
<arg>waiting_ownership_verification</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'national_registration'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["status"]}</arg>
<arg>active</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["status"]}</arg>
<arg>waiting_ownership_verification</arg>
</arguments>
<status status="PASS" starttime="20210322 03:25:27.362" endtime="20210322 03:25:27.362"></status>
</kw>
<status status="PASS" starttime="20210322 03:25:27.362" endtime="20210322 03:25:27.362"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando Tipo da chave PIX</arg>
</arguments>
<msg timestamp="20210322 03:25:27.363" level="INFO">Validando Tipo da chave PIX</msg>
<status status="PASS" starttime="20210322 03:25:27.362" endtime="20210322 03:25:27.363"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${type}' == 'evp'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["type"]}</arg>
<arg>${type}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'phone'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["type"]}</arg>
<arg>${type}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'email'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["type"]}</arg>
<arg>${type}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'national_registration'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["type"]}</arg>
<arg>${type}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["key"]["type"]}</arg>
<arg>${type}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:25:27.364" endtime="20210322 03:25:27.364"></status>
</kw>
<status status="PASS" starttime="20210322 03:25:27.363" endtime="20210322 03:25:27.364"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando Valor da chave PIX</arg>
</arguments>
<msg timestamp="20210322 03:25:27.364" level="INFO">Validando Valor da chave PIX</msg>
<status status="PASS" starttime="20210322 03:25:27.364" endtime="20210322 03:25:27.364"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${type}' == 'evp'</arg>
<arg>Should Not Be Empty</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'phone'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${phone_pix}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'email'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${email_pix}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'national_registration'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${national_registration}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${phone_pix}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:25:27.365" endtime="20210322 03:25:27.365"></status>
</kw>
<status status="PASS" starttime="20210322 03:25:27.364" endtime="20210322 03:25:27.365"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando dados da conta</arg>
</arguments>
<msg timestamp="20210322 03:25:27.366" level="INFO">Validando dados da conta</msg>
<status status="PASS" starttime="20210322 03:25:27.366" endtime="20210322 03:25:27.366"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["id"]}</arg>
<arg>${account_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:25:27.366" endtime="20210322 03:25:27.366"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["marketplace"]}</arg>
<arg>${marketplace_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:25:27.366" endtime="20210322 03:25:27.367"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["holder"]}</arg>
<arg>${holder_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:25:27.367" endtime="20210322 03:25:27.367"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["number"]}</arg>
<arg>${account_number}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:25:27.367" endtime="20210322 03:25:27.368"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["routing_number"]}</arg>
<arg>${account_routing_number}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:25:27.368" endtime="20210322 03:25:27.368"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["type"]}</arg>
<arg>CACC</arg>
</arguments>
<status status="PASS" starttime="20210322 03:25:27.368" endtime="20210322 03:25:27.369"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar Proprietário da Account Owner</arg>
</arguments>
<msg timestamp="20210322 03:25:27.369" level="INFO">Validar Proprietário da Account Owner</msg>
<status status="PASS" starttime="20210322 03:25:27.369" endtime="20210322 03:25:27.369"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${holder_type}' == 'individual'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["account"]["owner"]["name"]}</arg>
<arg>${holder_name}</arg>
<arg>ELSE IF</arg>
<arg>'${holder_type}' == 'business'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["account"]["owner"]["name"]}</arg>
<arg>${legal_name}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["account"]["owner"]["name"]}</arg>
<arg>${holder_name}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:25:27.369" endtime="20210322 03:25:27.370"></status>
</kw>
<status status="PASS" starttime="20210322 03:25:27.369" endtime="20210322 03:25:27.370"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar national_registration da Account Owner</arg>
</arguments>
<msg timestamp="20210322 03:25:27.370" level="INFO">Validar national_registration da Account Owner</msg>
<status status="PASS" starttime="20210322 03:25:27.370" endtime="20210322 03:25:27.370"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${holder_type}' == 'individual'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["account"]["owner"]["national_registration"]}</arg>
<arg>${national_registration}</arg>
<arg>ELSE IF</arg>
<arg>'${holder_type}' == 'business'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["account"]["owner"]["national_registration"]}</arg>
<arg>${national_registration}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["account"]["owner"]["national_registration"]}</arg>
<arg>${national_registration}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:25:27.371" endtime="20210322 03:25:27.371"></status>
</kw>
<status status="PASS" starttime="20210322 03:25:27.370" endtime="20210322 03:25:27.371"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar Holder Type do Account Owner</arg>
</arguments>
<msg timestamp="20210322 03:25:27.371" level="INFO">Validar Holder Type do Account Owner</msg>
<status status="PASS" starttime="20210322 03:25:27.371" endtime="20210322 03:25:27.371"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${holder_type}' == 'individual'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["account"]["owner"]["type"]}</arg>
<arg>${holder_type}</arg>
<arg>ELSE IF</arg>
<arg>'${holder_type}' == 'business'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["account"]["owner"]["type"]}</arg>
<arg>${holder_type}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["account"]["owner"]["type"]}</arg>
<arg>${holder_type}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:25:27.372" endtime="20210322 03:25:27.372"></status>
</kw>
<status status="PASS" starttime="20210322 03:25:27.372" endtime="20210322 03:25:27.373"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar PSP</arg>
</arguments>
<msg timestamp="20210322 03:25:27.373" level="INFO">Validar PSP</msg>
<status status="PASS" starttime="20210322 03:25:27.373" endtime="20210322 03:25:27.373"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["psp"]["code"]}</arg>
<arg>19468242</arg>
</arguments>
<status status="PASS" starttime="20210322 03:25:27.373" endtime="20210322 03:25:27.373"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["psp"]["name"]}</arg>
<arg>Zoop Tecnologia e Meios de Pagamento S.A.</arg>
</arguments>
<status status="PASS" starttime="20210322 03:25:27.373" endtime="20210322 03:25:27.374"></status>
</kw>
<status status="PASS" starttime="20210322 03:25:27.360" endtime="20210322 03:25:27.374"></status>
</kw>
<doc>Fluxo Básico</doc>
<tags>
<tag>smoke_test</tag>
</tags>
<status status="PASS" starttime="20210322 03:25:22.828" endtime="20210322 03:25:27.374" critical="yes"></status>
</test>
<test id="s1-s1-s1-t3" name="Cenário: Buscar chave de endereçamento do tipo Email">
<kw name="Email" library="FakerLibrary">
<assign>
<var>${email_pix}</var>
</assign>
<msg timestamp="20210322 03:25:27.375" level="INFO">${email_pix} = rodrigosouza@carvalho.com</msg>
<status status="PASS" starttime="20210322 03:25:27.375" endtime="20210322 03:25:27.375"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${email_pix}</arg>
</arguments>
<msg timestamp="20210322 03:25:27.375" level="INFO">${email_pix} = rodrigosouza@carvalho.com</msg>
<status status="PASS" starttime="20210322 03:25:27.375" endtime="20210322 03:25:27.375"></status>
</kw>
<kw name="criar holder individual ativo" library="accreditation_create_holder_active">
<kw name="conectar accreditation" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accreditation</arg>
<arg>url=${accreditation_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 03:25:27.376" level="INFO">Creating Session using : alias=accreditation, url=https://banking-accreditation-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 03:25:27.376" endtime="20210322 03:25:27.376"></status>
</kw>
<status status="PASS" starttime="20210322 03:25:27.376" endtime="20210322 03:25:27.376"></status>
</kw>
<kw name="Cpf" library="FakerLibrary">
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 03:25:27.377" level="INFO">${national_registration} = 068.734.219-87</msg>
<status status="PASS" starttime="20210322 03:25:27.376" endtime="20210322 03:25:27.377"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${national_registration}</arg>
<arg>.</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 03:25:27.377" level="INFO">${national_registration} = 068734219-87</msg>
<status status="PASS" starttime="20210322 03:25:27.377" endtime="20210322 03:25:27.377"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${national_registration}</arg>
<arg>-</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 03:25:27.377" level="INFO">${national_registration} = 06873421987</msg>
<status status="PASS" starttime="20210322 03:25:27.377" endtime="20210322 03:25:27.378"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${national_registration}</arg>
</arguments>
<msg timestamp="20210322 03:25:27.378" level="INFO">${national_registration} = 06873421987</msg>
<status status="PASS" starttime="20210322 03:25:27.378" endtime="20210322 03:25:27.378"></status>
</kw>
<kw name="Rg" library="FakerLibrary">
<doc>Brazilian RG, return plain numbers.
Check:  https://www.ngmatematica.com/2014/02/como-determinar-o-digito-verificador-do.html</doc>
<assign>
<var>${identity_card}</var>
</assign>
<msg timestamp="20210322 03:25:27.378" level="INFO">${identity_card} = 08562374X</msg>
<status status="PASS" starttime="20210322 03:25:27.378" endtime="20210322 03:25:27.378"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${identity_card}</arg>
</arguments>
<msg timestamp="20210322 03:25:27.379" level="INFO">${identity_card} = 08562374X</msg>
<status status="PASS" starttime="20210322 03:25:27.378" endtime="20210322 03:25:27.379"></status>
</kw>
<kw name="criar holder individual" library="accreditation_post_holder_individual">
<arguments>
<arg>holder_type=individual</arg>
<arg>holder_name=${holder_name}</arg>
<arg>email=${email}</arg>
<arg>national_registration=${national_registration}</arg>
<arg>revenue=${revenue}</arg>
<arg>birthday=${birthday}</arg>
<arg>mothers_name=${mothers_name}</arg>
<arg>identity_card=${identity_card}</arg>
<arg>pep=false</arg>
<arg>cbo=${cbo}</arg>
</arguments>
<kw name="conectar accreditation" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accreditation</arg>
<arg>url=${accreditation_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 03:25:27.380" level="INFO">Creating Session using : alias=accreditation, url=https://banking-accreditation-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 03:25:27.380" endtime="20210322 03:25:27.380"></status>
</kw>
<status status="PASS" starttime="20210322 03:25:27.379" endtime="20210322 03:25:27.380"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_type}</arg>
</arguments>
<msg timestamp="20210322 03:25:27.381" level="INFO">${holder_type} = individual</msg>
<status status="PASS" starttime="20210322 03:25:27.380" endtime="20210322 03:25:27.381"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_name}</arg>
</arguments>
<msg timestamp="20210322 03:25:27.381" level="INFO">${holder_name} = Holder de teste</msg>
<status status="PASS" starttime="20210322 03:25:27.381" endtime="20210322 03:25:27.381"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:25:27.381" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 03:25:27.381" endtime="20210322 03:25:27.381"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "${holder_type}",</arg>
<arg>"name": "${holder_name}",</arg>
<arg>"email": "${email}",</arg>
<arg>"national_registration": "${national_registration}",</arg>
<arg>"revenue": ${revenue},</arg>
<arg>"birthday": "${birthday}",</arg>
<arg>"mothers_name": "${mothers_name}",</arg>
<arg>"identity_card": "${identity_card}",</arg>
<arg>"pep": false,</arg>
<arg>"cbo": ${cbo}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 03:25:27.382" level="INFO">${body} = { "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "06873421987", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder",...</msg>
<status status="PASS" starttime="20210322 03:25:27.382" endtime="20210322 03:25:27.382"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:25:27.382" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "06873421987", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder", "identity_card": "08562374X", "pep": false, "cbo": 821450 } 
json=None</msg>
<msg timestamp="20210322 03:25:28.031" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:25:27.382" endtime="20210322 03:25:28.031"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:25:28.031" level="INFO">{'id': 'ef80f35429d4440f87bb9ca971615377', 'name': 'Holder de teste', 'revenue': 5500.0, 'email': 'teste@teste.com.br', 'status': 'waiting_info_and_documents', 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'marketplace_name': 'Marketplace de Teste', 'created_at': '2021-03-22T03:25:28.883546', 'updated_at': '2021-03-22T03:25:28.883548', 'type': 'individual', 'national_registration': '06873421987', 'birthday': '1988-04-23', 'mothers_name': 'Mãe do Holder', 'identity_card': '08562374X', 'pep': False, 'cbo': '821450', '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/ef80f35429d4440f87bb9ca971615377', 'type': 'GET'}, 'phones': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/ef80f35429d4440f87bb9ca971615377/phones', 'type': 'GET'}, 'addresses': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/ef80f35429d4440f87bb9ca971615377/addresses', 'type': 'GET'}, 'documents': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/ef80f35429d4440f87bb9ca971615377/documents', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 03:25:28.031" endtime="20210322 03:25:28.032"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:25:28.032" level="INFO">28057ea480d0f5c0</msg>
<status status="PASS" starttime="20210322 03:25:28.032" endtime="20210322 03:25:28.032"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${body}</arg>
</arguments>
<msg timestamp="20210322 03:25:28.032" level="INFO">{ "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "06873421987", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder", "identity_card": "08562374X", "pep": false, "cbo": 821450 }</msg>
<status status="PASS" starttime="20210322 03:25:28.032" endtime="20210322 03:25:28.032"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:25:28.033" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:25:28.032" endtime="20210322 03:25:28.033"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${holder_external_key}</var>
</assign>
<msg timestamp="20210322 03:25:28.033" level="INFO">${holder_external_key} = ef80f35429d4440f87bb9ca971615377</msg>
<status status="PASS" starttime="20210322 03:25:28.033" endtime="20210322 03:25:28.033"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_external_key}</arg>
</arguments>
<msg timestamp="20210322 03:25:28.034" level="INFO">${holder_external_key} = ef80f35429d4440f87bb9ca971615377</msg>
<status status="PASS" starttime="20210322 03:25:28.033" endtime="20210322 03:25:28.034"></status>
</kw>
<status status="PASS" starttime="20210322 03:25:27.379" endtime="20210322 03:25:28.034"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_name}</arg>
</arguments>
<msg timestamp="20210322 03:25:28.034" level="INFO">${holder_name} = Holder de teste</msg>
<status status="PASS" starttime="20210322 03:25:28.034" endtime="20210322 03:25:28.034"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 03:25:28.035" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:25:28.034" endtime="20210322 03:25:28.035"></status>
</kw>
<kw name="criar holder phone" library="accreditation_post_holder_phone">
<arguments>
<arg>21</arg>
<arg>51</arg>
<arg>996221236</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:25:28.035" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 03:25:28.035" endtime="20210322 03:25:28.035"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"area_code": "${phone_area_code}",</arg>
<arg>"country_code": "${phone_country_code}",</arg>
<arg>"number": "${phone_number}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 03:25:28.036" level="INFO">${body} = { "area_code": "21", "country_code": "51", "number": "996221236" }</msg>
<status status="PASS" starttime="20210322 03:25:28.035" endtime="20210322 03:25:28.036"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/phones</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:25:28.036" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/ef80f35429d4440f87bb9ca971615377/phones, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "area_code": "21", "country_code": "51", "number": "996221236" } 
json=None</msg>
<msg timestamp="20210322 03:25:28.259" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:25:28.036" endtime="20210322 03:25:28.259"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:25:28.259" level="INFO">{'id': '88f1afae2d014feea9791ea84bf0a79b', 'area_code': '21', 'country_code': '51', 'number': '996221236', 'main': True, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/ef80f35429d4440f87bb9ca971615377/phones/88f1afae2d014feea9791ea84bf0a79b', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/ef80f35429d4440f87bb9ca971615377', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 03:25:28.259" endtime="20210322 03:25:28.259"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:25:28.260" level="INFO">b62ed232c303bdc9</msg>
<status status="PASS" starttime="20210322 03:25:28.259" endtime="20210322 03:25:28.260"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:25:28.260" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:25:28.260" endtime="20210322 03:25:28.260"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${phone_external_key}</var>
</assign>
<msg timestamp="20210322 03:25:28.261" level="INFO">${phone_external_key} = 88f1afae2d014feea9791ea84bf0a79b</msg>
<status status="PASS" starttime="20210322 03:25:28.260" endtime="20210322 03:25:28.261"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${phone_external_key}</arg>
</arguments>
<msg timestamp="20210322 03:25:28.261" level="INFO">${phone_external_key} = 88f1afae2d014feea9791ea84bf0a79b</msg>
<status status="PASS" starttime="20210322 03:25:28.261" endtime="20210322 03:25:28.261"></status>
</kw>
<status status="PASS" starttime="20210322 03:25:28.035" endtime="20210322 03:25:28.261"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 03:25:28.261" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:25:28.261" endtime="20210322 03:25:28.261"></status>
</kw>
<kw name="criar holder address" library="accreditation_post_holder_address">
<arguments>
<arg>Rio de Janeiro</arg>
<arg>Rio de Janeiro</arg>
<arg>Brasil</arg>
<arg>Bairro de Testes</arg>
<arg>Rua de Testes</arg>
<arg>90</arg>
<arg>apto 200</arg>
<arg>21550987</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:25:28.262" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 03:25:28.262" endtime="20210322 03:25:28.262"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"city": "${city}",</arg>
<arg>"state": "${state}",</arg>
<arg>"country": "${country}",</arg>
<arg>"neighborhood": "${neighborhood}",</arg>
<arg>"street": "${street}",</arg>
<arg>"number": "${number}",</arg>
<arg>"complement": "${complement}",</arg>
<arg>"postal_code": "${postal_code}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 03:25:28.263" level="INFO">${body} = { "city": "Rio de Janeiro", "state": "Rio de Janeiro", "country": "Brasil", "neighborhood": "Bairro de Testes", "street": "Rua de Testes", "number": "90", "complement": "apto 200", "postal_code": "215...</msg>
<status status="PASS" starttime="20210322 03:25:28.262" endtime="20210322 03:25:28.263"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/addresses</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:25:28.263" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/ef80f35429d4440f87bb9ca971615377/addresses, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "city": "Rio de Janeiro", "state": "Rio de Janeiro", "country": "Brasil", "neighborhood": "Bairro de Testes", "street": "Rua de Testes", "number": "90", "complement": "apto 200", "postal_code": "21550987" } 
json=None</msg>
<msg timestamp="20210322 03:25:28.488" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:25:28.263" endtime="20210322 03:25:28.488"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:25:28.490" level="INFO">{'id': '50c99203cdc548c0996f6f0f9f3ce07e', 'street': 'Rua de Testes', 'number': '90', 'city': 'Rio de Janeiro', 'complement': 'apto 200', 'state': 'Rio de Janeiro', 'neighborhood': 'Bairro de Testes', 'postal_code': '21550987', 'country': 'Brasil', 'main': True, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/ef80f35429d4440f87bb9ca971615377/addresses/50c99203cdc548c0996f6f0f9f3ce07e', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/ef80f35429d4440f87bb9ca971615377', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 03:25:28.489" endtime="20210322 03:25:28.490"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:25:28.491" level="INFO">edf4769ade5ee032</msg>
<status status="PASS" starttime="20210322 03:25:28.490" endtime="20210322 03:25:28.491"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:25:28.492" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:25:28.491" endtime="20210322 03:25:28.492"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${address_external_key}</var>
</assign>
<msg timestamp="20210322 03:25:28.493" level="INFO">${address_external_key} = 50c99203cdc548c0996f6f0f9f3ce07e</msg>
<status status="PASS" starttime="20210322 03:25:28.492" endtime="20210322 03:25:28.493"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${address_external_key}</arg>
</arguments>
<msg timestamp="20210322 03:25:28.494" level="INFO">${address_external_key} = 50c99203cdc548c0996f6f0f9f3ce07e</msg>
<status status="PASS" starttime="20210322 03:25:28.494" endtime="20210322 03:25:28.494"></status>
</kw>
<status status="PASS" starttime="20210322 03:25:28.262" endtime="20210322 03:25:28.495"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 03:25:28.495" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:25:28.495" endtime="20210322 03:25:28.495"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>SELFIE</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:25:28.497" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 03:25:28.496" endtime="20210322 03:25:28.497"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 03:25:28.498" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 03:25:28.500" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 03:25:28.497" endtime="20210322 03:25:28.500"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:25:28.501" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/ef80f35429d4440f87bb9ca971615377/documents?type=SELFIE, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 03:25:28.774" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:25:28.500" endtime="20210322 03:25:28.774"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:25:28.776" level="INFO">{'id': 'bcc961b66cf741c6b348395f4d0ab1a3', 'document_type': 'selfie', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/ef80f35429d4440f87bb9ca971615377/documents/bcc961b66cf741c6b348395f4d0ab1a3', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/ef80f35429d4440f87bb9ca971615377', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/ef80f35429d4440f87bb9ca971615377/documents/bcc961b66cf741c6b348395f4d0ab1a3/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 03:25:28.775" endtime="20210322 03:25:28.776"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:25:28.777" level="INFO">57cbe7a6c68bb3ee</msg>
<status status="PASS" starttime="20210322 03:25:28.776" endtime="20210322 03:25:28.777"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:25:28.778" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:25:28.777" endtime="20210322 03:25:28.778"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 03:25:28.779" level="INFO">${document_external_key} = bcc961b66cf741c6b348395f4d0ab1a3</msg>
<status status="PASS" starttime="20210322 03:25:28.778" endtime="20210322 03:25:28.780"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 03:25:28.781" level="INFO">${document_external_key} = bcc961b66cf741c6b348395f4d0ab1a3</msg>
<status status="PASS" starttime="20210322 03:25:28.780" endtime="20210322 03:25:28.781"></status>
</kw>
<status status="PASS" starttime="20210322 03:25:28.496" endtime="20210322 03:25:28.781"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 03:25:28.782" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:25:28.781" endtime="20210322 03:25:28.782"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>RG_FRENTE</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:25:28.784" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 03:25:28.783" endtime="20210322 03:25:28.784"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 03:25:28.785" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 03:25:28.787" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 03:25:28.784" endtime="20210322 03:25:28.787"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:25:28.789" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/ef80f35429d4440f87bb9ca971615377/documents?type=RG_FRENTE, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 03:25:29.049" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:25:28.787" endtime="20210322 03:25:29.050"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:25:29.052" level="INFO">{'id': '83ffe860af32447dac02c3bf1dbe6632', 'document_type': 'rg_frente', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/ef80f35429d4440f87bb9ca971615377/documents/83ffe860af32447dac02c3bf1dbe6632', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/ef80f35429d4440f87bb9ca971615377', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/ef80f35429d4440f87bb9ca971615377/documents/83ffe860af32447dac02c3bf1dbe6632/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 03:25:29.051" endtime="20210322 03:25:29.052"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:25:29.054" level="INFO">6cb73d1d2404dee8</msg>
<status status="PASS" starttime="20210322 03:25:29.053" endtime="20210322 03:25:29.054"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:25:29.055" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:25:29.054" endtime="20210322 03:25:29.055"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 03:25:29.057" level="INFO">${document_external_key} = 83ffe860af32447dac02c3bf1dbe6632</msg>
<status status="PASS" starttime="20210322 03:25:29.056" endtime="20210322 03:25:29.057"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 03:25:29.058" level="INFO">${document_external_key} = 83ffe860af32447dac02c3bf1dbe6632</msg>
<status status="PASS" starttime="20210322 03:25:29.057" endtime="20210322 03:25:29.058"></status>
</kw>
<status status="PASS" starttime="20210322 03:25:28.782" endtime="20210322 03:25:29.058"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 03:25:29.059" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:25:29.058" endtime="20210322 03:25:29.059"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>RG_VERSO</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:25:29.061" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 03:25:29.060" endtime="20210322 03:25:29.061"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 03:25:29.061" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 03:25:29.063" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 03:25:29.061" endtime="20210322 03:25:29.064"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:25:29.065" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/ef80f35429d4440f87bb9ca971615377/documents?type=RG_VERSO, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 03:25:29.329" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:25:29.064" endtime="20210322 03:25:29.330"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:25:29.331" level="INFO">{'id': '689d22c047174d71ad2c439bf132b338', 'document_type': 'rg_verso', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/ef80f35429d4440f87bb9ca971615377/documents/689d22c047174d71ad2c439bf132b338', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/ef80f35429d4440f87bb9ca971615377', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/ef80f35429d4440f87bb9ca971615377/documents/689d22c047174d71ad2c439bf132b338/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 03:25:29.330" endtime="20210322 03:25:29.331"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:25:29.332" level="INFO">1dbe999ca785440c</msg>
<status status="PASS" starttime="20210322 03:25:29.331" endtime="20210322 03:25:29.332"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:25:29.333" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:25:29.332" endtime="20210322 03:25:29.333"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 03:25:29.334" level="INFO">${document_external_key} = 689d22c047174d71ad2c439bf132b338</msg>
<status status="PASS" starttime="20210322 03:25:29.333" endtime="20210322 03:25:29.334"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 03:25:29.335" level="INFO">${document_external_key} = 689d22c047174d71ad2c439bf132b338</msg>
<status status="PASS" starttime="20210322 03:25:29.335" endtime="20210322 03:25:29.335"></status>
</kw>
<status status="PASS" starttime="20210322 03:25:29.059" endtime="20210322 03:25:29.336"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 03:25:29.337" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:25:29.336" endtime="20210322 03:25:29.337"></status>
</kw>
<kw name="solicitar aprovação do holder" library="accreditation_request_approval">
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:25:29.338" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 03:25:29.338" endtime="20210322 03:25:29.338"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/approval</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:25:29.339" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/ef80f35429d4440f87bb9ca971615377/approval, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data=None 
json=None</msg>
<msg timestamp="20210322 03:25:29.623" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:25:29.339" endtime="20210322 03:25:29.623"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:25:29.625" level="INFO">{'message': 'Approval request accepted successfully. Processing analysis'}</msg>
<status status="PASS" starttime="20210322 03:25:29.624" endtime="20210322 03:25:29.625"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:25:29.626" level="INFO">405682f1eec02059</msg>
<status status="PASS" starttime="20210322 03:25:29.625" endtime="20210322 03:25:29.626"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:25:29.627" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:25:29.627" endtime="20210322 03:25:29.628"></status>
</kw>
<status status="PASS" starttime="20210322 03:25:29.337" endtime="20210322 03:25:29.628"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 03:25:29.629" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:25:29.629" endtime="20210322 03:25:29.629"></status>
</kw>
<kw name="recebendo notificação de aprovação" library="accreditation_risk_notification">
<kw name="Uuid 4" library="FakerLibrary">
<doc>Generates a random UUID4 string.
:param cast_to: Specify what type the UUID should be cast to. Default is `str`
:type cast_to: callable</doc>
<assign>
<var>${assessment_id}</var>
</assign>
<msg timestamp="20210322 03:25:29.631" level="INFO">${assessment_id} = e36b01e7-a0f2-4e83-aa0d-ae3600b76643</msg>
<status status="PASS" starttime="20210322 03:25:29.630" endtime="20210322 03:25:29.631"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>year</arg>
</arguments>
<assign>
<var>${year}</var>
</assign>
<msg timestamp="20210322 03:25:29.632" level="INFO">${year} = 2021</msg>
<status status="PASS" starttime="20210322 03:25:29.632" endtime="20210322 03:25:29.632"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>month</arg>
</arguments>
<assign>
<var>${month}</var>
</assign>
<msg timestamp="20210322 03:25:29.634" level="INFO">${month} = 03</msg>
<status status="PASS" starttime="20210322 03:25:29.634" endtime="20210322 03:25:29.634"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>day</arg>
</arguments>
<assign>
<var>${day}</var>
</assign>
<msg timestamp="20210322 03:25:29.635" level="INFO">${day} = 22</msg>
<status status="PASS" starttime="20210322 03:25:29.634" endtime="20210322 03:25:29.635"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:25:29.636" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 03:25:29.635" endtime="20210322 03:25:29.636"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "risk.assessment.result",</arg>
<arg>"resource": "business.holder",</arg>
<arg>"created_at": "${year}-${month}-${day} 15:28:56.747Z",</arg>
<arg>"marketplace_id": "${marketplace_external_key}",</arg>
<arg>"object": {</arg>
<arg>"result": "APPROVED",</arg>
<arg>"holder_id": "${holder_external_key}",</arg>
<arg>"applicant_id": "${application_external_key}",</arg>
<arg>"assessment_id": "${assessment_id}"</arg>
<arg>}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 03:25:29.637" level="INFO">${body} = { "type": "risk.assessment.result", "resource": "business.holder", "created_at": "2021-03-22 15:28:56.747Z", "marketplace_id": "f71a8951368a4cc085cf7875ff44e61c", "object": { "result": "APPROVED", "ho...</msg>
<status status="PASS" starttime="20210322 03:25:29.637" endtime="20210322 03:25:29.637"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/admin/internal_operation/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/registration/approval</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:25:29.638" level="INFO">POST Request using : uri=/admin/internal_operation/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/ef80f35429d4440f87bb9ca971615377/registration/approval, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "risk.assessment.result", "resource": "business.holder", "created_at": "2021-03-22 15:28:56.747Z", "marketplace_id": "f71a8951368a4cc085cf7875ff44e61c", "object": { "result": "APPROVED", "holder_id": "ef80f35429d4440f87bb9ca971615377", "applicant_id": "bcc25a6751c14b52af1340d40dba78c5", "assessment_id": "e36b01e7-a0f2-4e83-aa0d-ae3600b76643" } } 
json=None</msg>
<msg timestamp="20210322 03:25:29.838" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:25:29.638" endtime="20210322 03:25:29.838"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:25:29.839" level="INFO">{'message': 'Holder approved successfully'}</msg>
<status status="PASS" starttime="20210322 03:25:29.838" endtime="20210322 03:25:29.839"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:25:29.840" level="INFO">d9a6b9f29f254249</msg>
<status status="PASS" starttime="20210322 03:25:29.839" endtime="20210322 03:25:29.840"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:25:29.841" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:25:29.840" endtime="20210322 03:25:29.841"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 03:25:29.841" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:25:29.841" endtime="20210322 03:25:29.842"></status>
</kw>
<status status="PASS" starttime="20210322 03:25:29.630" endtime="20210322 03:25:29.842"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 03:25:29.842" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:25:29.842" endtime="20210322 03:25:29.843"></status>
</kw>
<kw name="buscar account por holder" library="accounts_get_accounts_by_holder">
<kw name="conectar accounts" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accounts</arg>
<arg>url=${account_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 03:25:29.844" level="INFO">Creating Session using : alias=accounts, url=https://banking-accounts-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 03:25:29.844" endtime="20210322 03:25:29.845"></status>
</kw>
<status status="PASS" starttime="20210322 03:25:29.843" endtime="20210322 03:25:29.845"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accounts</arg>
<arg>/marketplaces/${marketplace_external_key}/holders/${holder_external_key}/accounts</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:25:29.846" level="INFO">GET Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/holders/ef80f35429d4440f87bb9ca971615377/accounts, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 03:25:30.446" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:25:29.845" endtime="20210322 03:25:30.446"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:25:30.447" level="INFO">{'items': [{'id': '1ff48eec05fa457f980839173fba3fbf', 'holder': 'ef80f35429d4440f87bb9ca971615377', 'balance': '0.00', 'currency': 'BRL', 'routing_number': '001', 'number': '3833756022', 'status': 'active', 'metadata': {}, 'created_at': '2021-03-22T06:25:30.6834', 'updated_at': '2021-03-22T06:25:30.6834', 'primary': True, 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'uri': '/v2/marketplaces/f71a8951368a4cc085cf7875ff44e61c/accounts/1ff48eec05fa457f980839173fba3fbf', 'resource': 'payment_account'}], 'has_more': False, 'limit': 100, 'total_pages': 1, 'page': 1, 'offset': 0, 'total': '1', 'query_count': '1'}</msg>
<status status="PASS" starttime="20210322 03:25:30.447" endtime="20210322 03:25:30.447"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:25:30.448" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:25:30.447" endtime="20210322 03:25:30.448"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["id"]}</arg>
</arguments>
<assign>
<var>${account_external_key}</var>
</assign>
<msg timestamp="20210322 03:25:30.448" level="INFO">${account_external_key} = 1ff48eec05fa457f980839173fba3fbf</msg>
<status status="PASS" starttime="20210322 03:25:30.448" endtime="20210322 03:25:30.448"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_external_key}</arg>
</arguments>
<msg timestamp="20210322 03:25:30.449" level="INFO">${account_external_key} = 1ff48eec05fa457f980839173fba3fbf</msg>
<status status="PASS" starttime="20210322 03:25:30.449" endtime="20210322 03:25:30.449"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["number"]}</arg>
</arguments>
<assign>
<var>${account_number}</var>
</assign>
<msg timestamp="20210322 03:25:30.450" level="INFO">${account_number} = 3833756022</msg>
<status status="PASS" starttime="20210322 03:25:30.449" endtime="20210322 03:25:30.450"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_number}</arg>
</arguments>
<msg timestamp="20210322 03:25:30.450" level="INFO">${account_number} = 3833756022</msg>
<status status="PASS" starttime="20210322 03:25:30.450" endtime="20210322 03:25:30.450"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["routing_number"]}</arg>
</arguments>
<assign>
<var>${account_routing_number}</var>
</assign>
<msg timestamp="20210322 03:25:30.451" level="INFO">${account_routing_number} = 001</msg>
<status status="PASS" starttime="20210322 03:25:30.450" endtime="20210322 03:25:30.451"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_routing_number}</arg>
</arguments>
<msg timestamp="20210322 03:25:30.451" level="INFO">${account_routing_number} = 001</msg>
<status status="PASS" starttime="20210322 03:25:30.451" endtime="20210322 03:25:30.451"></status>
</kw>
<status status="PASS" starttime="20210322 03:25:29.843" endtime="20210322 03:25:30.451"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 03:25:30.452" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:25:30.452" endtime="20210322 03:25:30.452"></status>
</kw>
<status status="PASS" starttime="20210322 03:25:27.375" endtime="20210322 03:25:30.452"></status>
</kw>
<kw name="criar chave pix" library="pix_dict_create_entry">
<arguments>
<arg>email</arg>
<arg>${email_pix}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 03:25:30.453" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 03:25:30.453" endtime="20210322 03:25:30.454"></status>
</kw>
<status status="PASS" starttime="20210322 03:25:30.453" endtime="20210322 03:25:30.454"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${type}</arg>
</arguments>
<msg timestamp="20210322 03:25:30.455" level="INFO">${type} = email</msg>
<status status="PASS" starttime="20210322 03:25:30.454" endtime="20210322 03:25:30.455"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210322 03:25:30.455" level="INFO">${value} = rodrigosouza@carvalho.com</msg>
<status status="PASS" starttime="20210322 03:25:30.455" endtime="20210322 03:25:30.455"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:25:30.455" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 03:25:30.455" endtime="20210322 03:25:30.455"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "${type}",</arg>
<arg>"value": "${value}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 03:25:30.455" level="INFO">${body} = { "type": "email", "value": "rodrigosouza@carvalho.com" }</msg>
<status status="PASS" starttime="20210322 03:25:30.455" endtime="20210322 03:25:30.455"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:25:30.456" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/ef80f35429d4440f87bb9ca971615377/accounts/1ff48eec05fa457f980839173fba3fbf/entries, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "email", "value": "rodrigosouza@carvalho.com" } 
json=None</msg>
<msg timestamp="20210322 03:25:31.128" level="INFO">${response} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20210322 03:25:30.456" endtime="20210322 03:25:31.128"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:25:31.130" level="INFO">{'id': '3d2a41714002449dbd125f44513d0221', 'status': 'waiting_ownership_verification', 'created_at': '2021-03-22T03:25:31.995', 'updated_at': '2021-03-22T03:25:31.995', 'key': {'value': 'rodrigosouza@carvalho.com', 'type': 'email'}, 'account': {'id': '1ff48eec05fa457f980839173fba3fbf', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': 'ef80f35429d4440f87bb9ca971615377', 'owner': {'name': 'Holder de teste', 'national_registration': '06873421987', 'type': 'individual'}, 'routing_number': '001', 'number': '3833756022', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}, 'resource': 'pix.entry'}</msg>
<status status="PASS" starttime="20210322 03:25:31.129" endtime="20210322 03:25:31.130"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:25:31.132" level="INFO">f5d75ca2bd333176</msg>
<status status="PASS" starttime="20210322 03:25:31.131" endtime="20210322 03:25:31.132"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 03:25:31.133" level="INFO">202</msg>
<status status="PASS" starttime="20210322 03:25:31.133" endtime="20210322 03:25:31.134"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:25:31.136" level="INFO">${response} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20210322 03:25:31.134" endtime="20210322 03:25:31.136"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${entry_external_key}</var>
</assign>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:25:31.138" endtime="20210322 03:25:31.139"></status>
</kw>
<msg timestamp="20210322 03:25:31.139" level="INFO">${entry_external_key} = 3d2a41714002449dbd125f44513d0221</msg>
<status status="PASS" starttime="20210322 03:25:31.136" endtime="20210322 03:25:31.139"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${entry_external_key}</arg>
</arguments>
<msg timestamp="20210322 03:25:31.140" level="INFO">${entry_external_key} = 3d2a41714002449dbd125f44513d0221</msg>
<status status="PASS" starttime="20210322 03:25:31.139" endtime="20210322 03:25:31.140"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["key"]["value"]}</arg>
</arguments>
<assign>
<var>${entry_key_value}</var>
</assign>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["key"]["value"]}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:25:31.142" endtime="20210322 03:25:31.143"></status>
</kw>
<msg timestamp="20210322 03:25:31.143" level="INFO">${entry_key_value} = rodrigosouza@carvalho.com</msg>
<status status="PASS" starttime="20210322 03:25:31.141" endtime="20210322 03:25:31.143"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${entry_key_value}</arg>
</arguments>
<msg timestamp="20210322 03:25:31.144" level="INFO">${entry_key_value} = rodrigosouza@carvalho.com</msg>
<status status="PASS" starttime="20210322 03:25:31.143" endtime="20210322 03:25:31.144"></status>
</kw>
<status status="PASS" starttime="20210322 03:25:30.452" endtime="20210322 03:25:31.144"></status>
</kw>
<kw name="buscar chave pix" library="pix_dict_get_entry">
<arguments>
<arg>${holder_external_key}</arg>
<arg>${account_external_key}</arg>
<arg>${entry_external_key}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 03:25:31.145" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 03:25:31.145" endtime="20210322 03:25:31.145"></status>
</kw>
<status status="PASS" starttime="20210322 03:25:31.145" endtime="20210322 03:25:31.146"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries/${entry_external_key}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:25:31.146" level="INFO">GET Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/ef80f35429d4440f87bb9ca971615377/accounts/1ff48eec05fa457f980839173fba3fbf/entries/3d2a41714002449dbd125f44513d0221, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 03:25:31.751" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:25:31.146" endtime="20210322 03:25:31.751"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:25:31.752" level="INFO">{'id': '3d2a41714002449dbd125f44513d0221', 'status': 'waiting_ownership_verification', 'created_at': '2021-03-22T03:25:31.995', 'updated_at': '2021-03-22T03:25:31.995', 'key': {'value': 'rodrigosouza@carvalho.com', 'type': 'email'}, 'account': {'id': '1ff48eec05fa457f980839173fba3fbf', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': 'ef80f35429d4440f87bb9ca971615377', 'owner': {'name': 'Holder de teste', 'national_registration': '06873421987', 'type': 'individual'}, 'routing_number': '001', 'number': '3833756022', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}, 'resource': 'pix.entry'}</msg>
<status status="PASS" starttime="20210322 03:25:31.751" endtime="20210322 03:25:31.752"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:25:31.753" level="INFO">5bc89b3e667792ae</msg>
<status status="PASS" starttime="20210322 03:25:31.752" endtime="20210322 03:25:31.753"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 03:25:31.754" level="INFO">200</msg>
<status status="PASS" starttime="20210322 03:25:31.753" endtime="20210322 03:25:31.754"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:25:31.755" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:25:31.754" endtime="20210322 03:25:31.755"></status>
</kw>
<status status="PASS" starttime="20210322 03:25:31.144" endtime="20210322 03:25:31.755"></status>
</kw>
<kw name="validar busca da chave pix" library="asserts">
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 03:25:31.756" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:25:31.756" endtime="20210322 03:25:31.756"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar status da chave</arg>
</arguments>
<msg timestamp="20210322 03:25:31.757" level="INFO">Validar status da chave</msg>
<status status="PASS" starttime="20210322 03:25:31.757" endtime="20210322 03:25:31.757"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${type}' == 'evp'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["status"]}</arg>
<arg>active</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'phone'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["status"]}</arg>
<arg>waiting_ownership_verification</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'email'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["status"]}</arg>
<arg>waiting_ownership_verification</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'national_registration'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["status"]}</arg>
<arg>active</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["status"]}</arg>
<arg>waiting_ownership_verification</arg>
</arguments>
<status status="PASS" starttime="20210322 03:25:31.758" endtime="20210322 03:25:31.759"></status>
</kw>
<status status="PASS" starttime="20210322 03:25:31.757" endtime="20210322 03:25:31.759"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando Tipo da chave PIX</arg>
</arguments>
<msg timestamp="20210322 03:25:31.760" level="INFO">Validando Tipo da chave PIX</msg>
<status status="PASS" starttime="20210322 03:25:31.759" endtime="20210322 03:25:31.760"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${type}' == 'evp'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["type"]}</arg>
<arg>${type}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'phone'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["type"]}</arg>
<arg>${type}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'email'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["type"]}</arg>
<arg>${type}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'national_registration'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["type"]}</arg>
<arg>${type}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["key"]["type"]}</arg>
<arg>${type}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:25:31.761" endtime="20210322 03:25:31.762"></status>
</kw>
<status status="PASS" starttime="20210322 03:25:31.760" endtime="20210322 03:25:31.762"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando Valor da chave PIX</arg>
</arguments>
<msg timestamp="20210322 03:25:31.763" level="INFO">Validando Valor da chave PIX</msg>
<status status="PASS" starttime="20210322 03:25:31.762" endtime="20210322 03:25:31.763"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${type}' == 'evp'</arg>
<arg>Should Not Be Empty</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'phone'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${phone_pix}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'email'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${email_pix}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'national_registration'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${national_registration}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${email_pix}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:25:31.764" endtime="20210322 03:25:31.764"></status>
</kw>
<status status="PASS" starttime="20210322 03:25:31.763" endtime="20210322 03:25:31.764"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando dados da conta</arg>
</arguments>
<msg timestamp="20210322 03:25:31.765" level="INFO">Validando dados da conta</msg>
<status status="PASS" starttime="20210322 03:25:31.765" endtime="20210322 03:25:31.765"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["id"]}</arg>
<arg>${account_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:25:31.765" endtime="20210322 03:25:31.766"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["marketplace"]}</arg>
<arg>${marketplace_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:25:31.766" endtime="20210322 03:25:31.767"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["holder"]}</arg>
<arg>${holder_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:25:31.767" endtime="20210322 03:25:31.767"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["number"]}</arg>
<arg>${account_number}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:25:31.768" endtime="20210322 03:25:31.768"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["routing_number"]}</arg>
<arg>${account_routing_number}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:25:31.769" endtime="20210322 03:25:31.769"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["type"]}</arg>
<arg>CACC</arg>
</arguments>
<status status="PASS" starttime="20210322 03:25:31.769" endtime="20210322 03:25:31.770"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar Proprietário da Account Owner</arg>
</arguments>
<msg timestamp="20210322 03:25:31.770" level="INFO">Validar Proprietário da Account Owner</msg>
<status status="PASS" starttime="20210322 03:25:31.770" endtime="20210322 03:25:31.771"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${holder_type}' == 'individual'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["account"]["owner"]["name"]}</arg>
<arg>${holder_name}</arg>
<arg>ELSE IF</arg>
<arg>'${holder_type}' == 'business'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["account"]["owner"]["name"]}</arg>
<arg>${legal_name}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["account"]["owner"]["name"]}</arg>
<arg>${holder_name}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:25:31.771" endtime="20210322 03:25:31.772"></status>
</kw>
<status status="PASS" starttime="20210322 03:25:31.771" endtime="20210322 03:25:31.772"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar national_registration da Account Owner</arg>
</arguments>
<msg timestamp="20210322 03:25:31.772" level="INFO">Validar national_registration da Account Owner</msg>
<status status="PASS" starttime="20210322 03:25:31.772" endtime="20210322 03:25:31.773"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${holder_type}' == 'individual'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["account"]["owner"]["national_registration"]}</arg>
<arg>${national_registration}</arg>
<arg>ELSE IF</arg>
<arg>'${holder_type}' == 'business'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["account"]["owner"]["national_registration"]}</arg>
<arg>${national_registration}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["account"]["owner"]["national_registration"]}</arg>
<arg>${national_registration}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:25:31.773" endtime="20210322 03:25:31.774"></status>
</kw>
<status status="PASS" starttime="20210322 03:25:31.773" endtime="20210322 03:25:31.774"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar Holder Type do Account Owner</arg>
</arguments>
<msg timestamp="20210322 03:25:31.774" level="INFO">Validar Holder Type do Account Owner</msg>
<status status="PASS" starttime="20210322 03:25:31.774" endtime="20210322 03:25:31.774"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${holder_type}' == 'individual'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["account"]["owner"]["type"]}</arg>
<arg>${holder_type}</arg>
<arg>ELSE IF</arg>
<arg>'${holder_type}' == 'business'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["account"]["owner"]["type"]}</arg>
<arg>${holder_type}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["account"]["owner"]["type"]}</arg>
<arg>${holder_type}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:25:31.775" endtime="20210322 03:25:31.775"></status>
</kw>
<status status="PASS" starttime="20210322 03:25:31.774" endtime="20210322 03:25:31.776"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar PSP</arg>
</arguments>
<msg timestamp="20210322 03:25:31.776" level="INFO">Validar PSP</msg>
<status status="PASS" starttime="20210322 03:25:31.776" endtime="20210322 03:25:31.776"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["psp"]["code"]}</arg>
<arg>19468242</arg>
</arguments>
<status status="PASS" starttime="20210322 03:25:31.776" endtime="20210322 03:25:31.777"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["psp"]["name"]}</arg>
<arg>Zoop Tecnologia e Meios de Pagamento S.A.</arg>
</arguments>
<status status="PASS" starttime="20210322 03:25:31.777" endtime="20210322 03:25:31.777"></status>
</kw>
<status status="PASS" starttime="20210322 03:25:31.755" endtime="20210322 03:25:31.777"></status>
</kw>
<doc>Fluxo Básico</doc>
<tags>
<tag>regression_test</tag>
<tag>smoke_test</tag>
</tags>
<status status="PASS" starttime="20210322 03:25:27.374" endtime="20210322 03:25:31.777" critical="yes"></status>
</test>
<test id="s1-s1-s1-t4" name="Cenário: Buscar chave de endereçamento do tipo CPF">
<kw name="criar holder individual ativo" library="accreditation_create_holder_active">
<kw name="conectar accreditation" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accreditation</arg>
<arg>url=${accreditation_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 03:25:31.779" level="INFO">Creating Session using : alias=accreditation, url=https://banking-accreditation-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 03:25:31.779" endtime="20210322 03:25:31.779"></status>
</kw>
<status status="PASS" starttime="20210322 03:25:31.778" endtime="20210322 03:25:31.779"></status>
</kw>
<kw name="Cpf" library="FakerLibrary">
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 03:25:31.780" level="INFO">${national_registration} = 760.415.839-01</msg>
<status status="PASS" starttime="20210322 03:25:31.780" endtime="20210322 03:25:31.780"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${national_registration}</arg>
<arg>.</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 03:25:31.781" level="INFO">${national_registration} = 760415839-01</msg>
<status status="PASS" starttime="20210322 03:25:31.780" endtime="20210322 03:25:31.781"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${national_registration}</arg>
<arg>-</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 03:25:31.781" level="INFO">${national_registration} = 76041583901</msg>
<status status="PASS" starttime="20210322 03:25:31.781" endtime="20210322 03:25:31.781"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${national_registration}</arg>
</arguments>
<msg timestamp="20210322 03:25:31.782" level="INFO">${national_registration} = 76041583901</msg>
<status status="PASS" starttime="20210322 03:25:31.782" endtime="20210322 03:25:31.782"></status>
</kw>
<kw name="Rg" library="FakerLibrary">
<doc>Brazilian RG, return plain numbers.
Check:  https://www.ngmatematica.com/2014/02/como-determinar-o-digito-verificador-do.html</doc>
<assign>
<var>${identity_card}</var>
</assign>
<msg timestamp="20210322 03:25:31.782" level="INFO">${identity_card} = 743182601</msg>
<status status="PASS" starttime="20210322 03:25:31.782" endtime="20210322 03:25:31.782"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${identity_card}</arg>
</arguments>
<msg timestamp="20210322 03:25:31.783" level="INFO">${identity_card} = 743182601</msg>
<status status="PASS" starttime="20210322 03:25:31.783" endtime="20210322 03:25:31.783"></status>
</kw>
<kw name="criar holder individual" library="accreditation_post_holder_individual">
<arguments>
<arg>holder_type=individual</arg>
<arg>holder_name=${holder_name}</arg>
<arg>email=${email}</arg>
<arg>national_registration=${national_registration}</arg>
<arg>revenue=${revenue}</arg>
<arg>birthday=${birthday}</arg>
<arg>mothers_name=${mothers_name}</arg>
<arg>identity_card=${identity_card}</arg>
<arg>pep=false</arg>
<arg>cbo=${cbo}</arg>
</arguments>
<kw name="conectar accreditation" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accreditation</arg>
<arg>url=${accreditation_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 03:25:31.784" level="INFO">Creating Session using : alias=accreditation, url=https://banking-accreditation-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 03:25:31.784" endtime="20210322 03:25:31.785"></status>
</kw>
<status status="PASS" starttime="20210322 03:25:31.784" endtime="20210322 03:25:31.785"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_type}</arg>
</arguments>
<msg timestamp="20210322 03:25:31.785" level="INFO">${holder_type} = individual</msg>
<status status="PASS" starttime="20210322 03:25:31.785" endtime="20210322 03:25:31.785"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_name}</arg>
</arguments>
<msg timestamp="20210322 03:25:31.786" level="INFO">${holder_name} = Holder de teste</msg>
<status status="PASS" starttime="20210322 03:25:31.786" endtime="20210322 03:25:31.786"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:25:31.786" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 03:25:31.786" endtime="20210322 03:25:31.786"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "${holder_type}",</arg>
<arg>"name": "${holder_name}",</arg>
<arg>"email": "${email}",</arg>
<arg>"national_registration": "${national_registration}",</arg>
<arg>"revenue": ${revenue},</arg>
<arg>"birthday": "${birthday}",</arg>
<arg>"mothers_name": "${mothers_name}",</arg>
<arg>"identity_card": "${identity_card}",</arg>
<arg>"pep": false,</arg>
<arg>"cbo": ${cbo}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 03:25:31.787" level="INFO">${body} = { "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "76041583901", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder",...</msg>
<status status="PASS" starttime="20210322 03:25:31.787" endtime="20210322 03:25:31.787"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:25:31.788" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "76041583901", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder", "identity_card": "743182601", "pep": false, "cbo": 821450 } 
json=None</msg>
<msg timestamp="20210322 03:25:32.421" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:25:31.787" endtime="20210322 03:25:32.421"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:25:32.421" level="INFO">{'id': '175280573d114786ad15c4083c83ff56', 'name': 'Holder de teste', 'revenue': 5500.0, 'email': 'teste@teste.com.br', 'status': 'waiting_info_and_documents', 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'marketplace_name': 'Marketplace de Teste', 'created_at': '2021-03-22T03:25:33.274218', 'updated_at': '2021-03-22T03:25:33.27422', 'type': 'individual', 'national_registration': '76041583901', 'birthday': '1988-04-23', 'mothers_name': 'Mãe do Holder', 'identity_card': '743182601', 'pep': False, 'cbo': '821450', '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/175280573d114786ad15c4083c83ff56', 'type': 'GET'}, 'phones': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/175280573d114786ad15c4083c83ff56/phones', 'type': 'GET'}, 'addresses': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/175280573d114786ad15c4083c83ff56/addresses', 'type': 'GET'}, 'documents': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/175280573d114786ad15c4083c83ff56/documents', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 03:25:32.421" endtime="20210322 03:25:32.421"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:25:32.422" level="INFO">dc9aee9140e6a1a1</msg>
<status status="PASS" starttime="20210322 03:25:32.422" endtime="20210322 03:25:32.422"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${body}</arg>
</arguments>
<msg timestamp="20210322 03:25:32.422" level="INFO">{ "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "76041583901", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder", "identity_card": "743182601", "pep": false, "cbo": 821450 }</msg>
<status status="PASS" starttime="20210322 03:25:32.422" endtime="20210322 03:25:32.422"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:25:32.423" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:25:32.422" endtime="20210322 03:25:32.423"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${holder_external_key}</var>
</assign>
<msg timestamp="20210322 03:25:32.423" level="INFO">${holder_external_key} = 175280573d114786ad15c4083c83ff56</msg>
<status status="PASS" starttime="20210322 03:25:32.423" endtime="20210322 03:25:32.423"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_external_key}</arg>
</arguments>
<msg timestamp="20210322 03:25:32.424" level="INFO">${holder_external_key} = 175280573d114786ad15c4083c83ff56</msg>
<status status="PASS" starttime="20210322 03:25:32.423" endtime="20210322 03:25:32.424"></status>
</kw>
<status status="PASS" starttime="20210322 03:25:31.783" endtime="20210322 03:25:32.424"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_name}</arg>
</arguments>
<msg timestamp="20210322 03:25:32.424" level="INFO">${holder_name} = Holder de teste</msg>
<status status="PASS" starttime="20210322 03:25:32.424" endtime="20210322 03:25:32.424"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 03:25:32.425" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:25:32.424" endtime="20210322 03:25:32.425"></status>
</kw>
<kw name="criar holder phone" library="accreditation_post_holder_phone">
<arguments>
<arg>21</arg>
<arg>51</arg>
<arg>996221236</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:25:32.425" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 03:25:32.425" endtime="20210322 03:25:32.425"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"area_code": "${phone_area_code}",</arg>
<arg>"country_code": "${phone_country_code}",</arg>
<arg>"number": "${phone_number}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 03:25:32.426" level="INFO">${body} = { "area_code": "21", "country_code": "51", "number": "996221236" }</msg>
<status status="PASS" starttime="20210322 03:25:32.425" endtime="20210322 03:25:32.426"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/phones</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:25:32.426" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/175280573d114786ad15c4083c83ff56/phones, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "area_code": "21", "country_code": "51", "number": "996221236" } 
json=None</msg>
<msg timestamp="20210322 03:25:32.665" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:25:32.426" endtime="20210322 03:25:32.666"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:25:32.668" level="INFO">{'id': '7979c6f8cd544c699fab7a4f011fca27', 'area_code': '21', 'country_code': '51', 'number': '996221236', 'main': True, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/175280573d114786ad15c4083c83ff56/phones/7979c6f8cd544c699fab7a4f011fca27', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/175280573d114786ad15c4083c83ff56', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 03:25:32.666" endtime="20210322 03:25:32.668"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:25:32.671" level="INFO">e15cff64a8f78469</msg>
<status status="PASS" starttime="20210322 03:25:32.669" endtime="20210322 03:25:32.671"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:25:32.673" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:25:32.672" endtime="20210322 03:25:32.673"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${phone_external_key}</var>
</assign>
<msg timestamp="20210322 03:25:32.676" level="INFO">${phone_external_key} = 7979c6f8cd544c699fab7a4f011fca27</msg>
<status status="PASS" starttime="20210322 03:25:32.674" endtime="20210322 03:25:32.676"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${phone_external_key}</arg>
</arguments>
<msg timestamp="20210322 03:25:32.679" level="INFO">${phone_external_key} = 7979c6f8cd544c699fab7a4f011fca27</msg>
<status status="PASS" starttime="20210322 03:25:32.677" endtime="20210322 03:25:32.679"></status>
</kw>
<status status="PASS" starttime="20210322 03:25:32.425" endtime="20210322 03:25:32.679"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 03:25:32.681" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:25:32.680" endtime="20210322 03:25:32.681"></status>
</kw>
<kw name="criar holder address" library="accreditation_post_holder_address">
<arguments>
<arg>Rio de Janeiro</arg>
<arg>Rio de Janeiro</arg>
<arg>Brasil</arg>
<arg>Bairro de Testes</arg>
<arg>Rua de Testes</arg>
<arg>90</arg>
<arg>apto 200</arg>
<arg>21550987</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:25:32.683" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 03:25:32.683" endtime="20210322 03:25:32.683"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"city": "${city}",</arg>
<arg>"state": "${state}",</arg>
<arg>"country": "${country}",</arg>
<arg>"neighborhood": "${neighborhood}",</arg>
<arg>"street": "${street}",</arg>
<arg>"number": "${number}",</arg>
<arg>"complement": "${complement}",</arg>
<arg>"postal_code": "${postal_code}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 03:25:32.686" level="INFO">${body} = { "city": "Rio de Janeiro", "state": "Rio de Janeiro", "country": "Brasil", "neighborhood": "Bairro de Testes", "street": "Rua de Testes", "number": "90", "complement": "apto 200", "postal_code": "215...</msg>
<status status="PASS" starttime="20210322 03:25:32.684" endtime="20210322 03:25:32.686"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/addresses</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:25:32.687" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/175280573d114786ad15c4083c83ff56/addresses, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "city": "Rio de Janeiro", "state": "Rio de Janeiro", "country": "Brasil", "neighborhood": "Bairro de Testes", "street": "Rua de Testes", "number": "90", "complement": "apto 200", "postal_code": "21550987" } 
json=None</msg>
<msg timestamp="20210322 03:25:32.911" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:25:32.686" endtime="20210322 03:25:32.911"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:25:32.914" level="INFO">{'id': '30a62bdea7e2477ca09a38b0acd960d6', 'street': 'Rua de Testes', 'number': '90', 'city': 'Rio de Janeiro', 'complement': 'apto 200', 'state': 'Rio de Janeiro', 'neighborhood': 'Bairro de Testes', 'postal_code': '21550987', 'country': 'Brasil', 'main': True, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/175280573d114786ad15c4083c83ff56/addresses/30a62bdea7e2477ca09a38b0acd960d6', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/175280573d114786ad15c4083c83ff56', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 03:25:32.912" endtime="20210322 03:25:32.914"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:25:32.917" level="INFO">78010e4d404a2f5b</msg>
<status status="PASS" starttime="20210322 03:25:32.915" endtime="20210322 03:25:32.917"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:25:32.918" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:25:32.917" endtime="20210322 03:25:32.918"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${address_external_key}</var>
</assign>
<msg timestamp="20210322 03:25:32.921" level="INFO">${address_external_key} = 30a62bdea7e2477ca09a38b0acd960d6</msg>
<status status="PASS" starttime="20210322 03:25:32.919" endtime="20210322 03:25:32.921"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${address_external_key}</arg>
</arguments>
<msg timestamp="20210322 03:25:32.923" level="INFO">${address_external_key} = 30a62bdea7e2477ca09a38b0acd960d6</msg>
<status status="PASS" starttime="20210322 03:25:32.922" endtime="20210322 03:25:32.924"></status>
</kw>
<status status="PASS" starttime="20210322 03:25:32.682" endtime="20210322 03:25:32.924"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 03:25:32.926" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:25:32.926" endtime="20210322 03:25:32.926"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>SELFIE</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:25:32.929" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 03:25:32.929" endtime="20210322 03:25:32.930"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 03:25:32.931" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 03:25:32.936" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 03:25:32.930" endtime="20210322 03:25:32.937"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:25:32.939" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/175280573d114786ad15c4083c83ff56/documents?type=SELFIE, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 03:25:33.224" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:25:32.937" endtime="20210322 03:25:33.224"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:25:33.225" level="INFO">{'id': '9e9b6559d30d42fa97be8ed0cfd3c301', 'document_type': 'selfie', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/175280573d114786ad15c4083c83ff56/documents/9e9b6559d30d42fa97be8ed0cfd3c301', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/175280573d114786ad15c4083c83ff56', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/175280573d114786ad15c4083c83ff56/documents/9e9b6559d30d42fa97be8ed0cfd3c301/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 03:25:33.224" endtime="20210322 03:25:33.225"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:25:33.225" level="INFO">2f469e4e4805b923</msg>
<status status="PASS" starttime="20210322 03:25:33.225" endtime="20210322 03:25:33.226"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:25:33.226" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:25:33.226" endtime="20210322 03:25:33.226"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 03:25:33.227" level="INFO">${document_external_key} = 9e9b6559d30d42fa97be8ed0cfd3c301</msg>
<status status="PASS" starttime="20210322 03:25:33.226" endtime="20210322 03:25:33.227"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 03:25:33.227" level="INFO">${document_external_key} = 9e9b6559d30d42fa97be8ed0cfd3c301</msg>
<status status="PASS" starttime="20210322 03:25:33.227" endtime="20210322 03:25:33.227"></status>
</kw>
<status status="PASS" starttime="20210322 03:25:32.927" endtime="20210322 03:25:33.229"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 03:25:33.229" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:25:33.229" endtime="20210322 03:25:33.229"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>RG_FRENTE</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:25:33.230" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 03:25:33.230" endtime="20210322 03:25:33.230"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 03:25:33.230" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 03:25:33.232" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 03:25:33.230" endtime="20210322 03:25:33.232"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:25:33.233" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/175280573d114786ad15c4083c83ff56/documents?type=RG_FRENTE, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 03:25:33.504" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:25:33.232" endtime="20210322 03:25:33.504"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:25:33.506" level="INFO">{'id': '1b920fb179b14a779cd9152820e16ab1', 'document_type': 'rg_frente', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/175280573d114786ad15c4083c83ff56/documents/1b920fb179b14a779cd9152820e16ab1', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/175280573d114786ad15c4083c83ff56', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/175280573d114786ad15c4083c83ff56/documents/1b920fb179b14a779cd9152820e16ab1/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 03:25:33.505" endtime="20210322 03:25:33.506"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:25:33.507" level="INFO">ddfb05ee7339eacb</msg>
<status status="PASS" starttime="20210322 03:25:33.507" endtime="20210322 03:25:33.508"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:25:33.509" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:25:33.508" endtime="20210322 03:25:33.510"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 03:25:33.512" level="INFO">${document_external_key} = 1b920fb179b14a779cd9152820e16ab1</msg>
<status status="PASS" starttime="20210322 03:25:33.510" endtime="20210322 03:25:33.512"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 03:25:33.513" level="INFO">${document_external_key} = 1b920fb179b14a779cd9152820e16ab1</msg>
<status status="PASS" starttime="20210322 03:25:33.513" endtime="20210322 03:25:33.514"></status>
</kw>
<status status="PASS" starttime="20210322 03:25:33.229" endtime="20210322 03:25:33.514"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 03:25:33.515" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:25:33.514" endtime="20210322 03:25:33.515"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>RG_VERSO</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:25:33.517" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 03:25:33.517" endtime="20210322 03:25:33.517"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 03:25:33.518" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 03:25:33.520" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 03:25:33.518" endtime="20210322 03:25:33.520"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:25:33.522" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/175280573d114786ad15c4083c83ff56/documents?type=RG_VERSO, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 03:25:33.789" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:25:33.521" endtime="20210322 03:25:33.789"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:25:33.791" level="INFO">{'id': 'd4ecc1d573de47f39777a2f1ab908d7f', 'document_type': 'rg_verso', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/175280573d114786ad15c4083c83ff56/documents/d4ecc1d573de47f39777a2f1ab908d7f', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/175280573d114786ad15c4083c83ff56', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/175280573d114786ad15c4083c83ff56/documents/d4ecc1d573de47f39777a2f1ab908d7f/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 03:25:33.790" endtime="20210322 03:25:33.791"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:25:33.793" level="INFO">ba19015a6ba213ef</msg>
<status status="PASS" starttime="20210322 03:25:33.792" endtime="20210322 03:25:33.793"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:25:33.795" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:25:33.794" endtime="20210322 03:25:33.795"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 03:25:33.797" level="INFO">${document_external_key} = d4ecc1d573de47f39777a2f1ab908d7f</msg>
<status status="PASS" starttime="20210322 03:25:33.795" endtime="20210322 03:25:33.797"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 03:25:33.798" level="INFO">${document_external_key} = d4ecc1d573de47f39777a2f1ab908d7f</msg>
<status status="PASS" starttime="20210322 03:25:33.797" endtime="20210322 03:25:33.798"></status>
</kw>
<status status="PASS" starttime="20210322 03:25:33.516" endtime="20210322 03:25:33.798"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 03:25:33.800" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:25:33.800" endtime="20210322 03:25:33.800"></status>
</kw>
<kw name="solicitar aprovação do holder" library="accreditation_request_approval">
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:25:33.802" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 03:25:33.802" endtime="20210322 03:25:33.802"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/approval</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:25:33.803" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/175280573d114786ad15c4083c83ff56/approval, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data=None 
json=None</msg>
<msg timestamp="20210322 03:25:34.107" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:25:33.803" endtime="20210322 03:25:34.108"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:25:34.109" level="INFO">{'message': 'Approval request accepted successfully. Processing analysis'}</msg>
<status status="PASS" starttime="20210322 03:25:34.108" endtime="20210322 03:25:34.109"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:25:34.110" level="INFO">4ab74a2465e7d8cb</msg>
<status status="PASS" starttime="20210322 03:25:34.109" endtime="20210322 03:25:34.110"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:25:34.111" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:25:34.110" endtime="20210322 03:25:34.111"></status>
</kw>
<status status="PASS" starttime="20210322 03:25:33.801" endtime="20210322 03:25:34.111"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 03:25:34.112" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:25:34.112" endtime="20210322 03:25:34.113"></status>
</kw>
<kw name="recebendo notificação de aprovação" library="accreditation_risk_notification">
<kw name="Uuid 4" library="FakerLibrary">
<doc>Generates a random UUID4 string.
:param cast_to: Specify what type the UUID should be cast to. Default is `str`
:type cast_to: callable</doc>
<assign>
<var>${assessment_id}</var>
</assign>
<msg timestamp="20210322 03:25:34.114" level="INFO">${assessment_id} = c7a6a1e5-f94c-480f-8c2d-b29d16ed0286</msg>
<status status="PASS" starttime="20210322 03:25:34.113" endtime="20210322 03:25:34.114"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>year</arg>
</arguments>
<assign>
<var>${year}</var>
</assign>
<msg timestamp="20210322 03:25:34.115" level="INFO">${year} = 2021</msg>
<status status="PASS" starttime="20210322 03:25:34.114" endtime="20210322 03:25:34.115"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>month</arg>
</arguments>
<assign>
<var>${month}</var>
</assign>
<msg timestamp="20210322 03:25:34.116" level="INFO">${month} = 03</msg>
<status status="PASS" starttime="20210322 03:25:34.115" endtime="20210322 03:25:34.116"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>day</arg>
</arguments>
<assign>
<var>${day}</var>
</assign>
<msg timestamp="20210322 03:25:34.117" level="INFO">${day} = 22</msg>
<status status="PASS" starttime="20210322 03:25:34.116" endtime="20210322 03:25:34.118"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:25:34.120" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 03:25:34.119" endtime="20210322 03:25:34.120"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "risk.assessment.result",</arg>
<arg>"resource": "business.holder",</arg>
<arg>"created_at": "${year}-${month}-${day} 15:28:56.747Z",</arg>
<arg>"marketplace_id": "${marketplace_external_key}",</arg>
<arg>"object": {</arg>
<arg>"result": "APPROVED",</arg>
<arg>"holder_id": "${holder_external_key}",</arg>
<arg>"applicant_id": "${application_external_key}",</arg>
<arg>"assessment_id": "${assessment_id}"</arg>
<arg>}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 03:25:34.121" level="INFO">${body} = { "type": "risk.assessment.result", "resource": "business.holder", "created_at": "2021-03-22 15:28:56.747Z", "marketplace_id": "f71a8951368a4cc085cf7875ff44e61c", "object": { "result": "APPROVED", "ho...</msg>
<status status="PASS" starttime="20210322 03:25:34.120" endtime="20210322 03:25:34.121"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/admin/internal_operation/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/registration/approval</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:25:34.122" level="INFO">POST Request using : uri=/admin/internal_operation/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/175280573d114786ad15c4083c83ff56/registration/approval, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "risk.assessment.result", "resource": "business.holder", "created_at": "2021-03-22 15:28:56.747Z", "marketplace_id": "f71a8951368a4cc085cf7875ff44e61c", "object": { "result": "APPROVED", "holder_id": "175280573d114786ad15c4083c83ff56", "applicant_id": "bcc25a6751c14b52af1340d40dba78c5", "assessment_id": "c7a6a1e5-f94c-480f-8c2d-b29d16ed0286" } } 
json=None</msg>
<msg timestamp="20210322 03:25:34.318" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:25:34.121" endtime="20210322 03:25:34.319"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:25:34.321" level="INFO">{'message': 'Holder approved successfully'}</msg>
<status status="PASS" starttime="20210322 03:25:34.320" endtime="20210322 03:25:34.321"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:25:34.322" level="INFO">ce6a5e2b898df814</msg>
<status status="PASS" starttime="20210322 03:25:34.322" endtime="20210322 03:25:34.322"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:25:34.324" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:25:34.322" endtime="20210322 03:25:34.324"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 03:25:34.324" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:25:34.324" endtime="20210322 03:25:34.324"></status>
</kw>
<status status="PASS" starttime="20210322 03:25:34.113" endtime="20210322 03:25:34.325"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 03:25:34.325" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:25:34.325" endtime="20210322 03:25:34.326"></status>
</kw>
<kw name="buscar account por holder" library="accounts_get_accounts_by_holder">
<kw name="conectar accounts" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accounts</arg>
<arg>url=${account_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 03:25:34.328" level="INFO">Creating Session using : alias=accounts, url=https://banking-accounts-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 03:25:34.327" endtime="20210322 03:25:34.328"></status>
</kw>
<status status="PASS" starttime="20210322 03:25:34.327" endtime="20210322 03:25:34.330"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accounts</arg>
<arg>/marketplaces/${marketplace_external_key}/holders/${holder_external_key}/accounts</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:25:34.330" level="INFO">GET Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/holders/175280573d114786ad15c4083c83ff56/accounts, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 03:25:34.939" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:25:34.330" endtime="20210322 03:25:34.939"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:25:34.942" level="INFO">{'items': [{'id': '43c6b88f21f345549ffb76c3e010aaac', 'holder': '175280573d114786ad15c4083c83ff56', 'balance': '0.00', 'currency': 'BRL', 'routing_number': '001', 'number': '3190623505', 'status': 'active', 'metadata': {}, 'created_at': '2021-03-22T06:25:35.164091', 'updated_at': '2021-03-22T06:25:35.164091', 'primary': True, 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'uri': '/v2/marketplaces/f71a8951368a4cc085cf7875ff44e61c/accounts/43c6b88f21f345549ffb76c3e010aaac', 'resource': 'payment_account'}], 'has_more': False, 'limit': 100, 'total_pages': 1, 'page': 1, 'offset': 0, 'total': '1', 'query_count': '1'}</msg>
<status status="PASS" starttime="20210322 03:25:34.940" endtime="20210322 03:25:34.942"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:25:34.944" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:25:34.943" endtime="20210322 03:25:34.944"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["id"]}</arg>
</arguments>
<assign>
<var>${account_external_key}</var>
</assign>
<msg timestamp="20210322 03:25:34.947" level="INFO">${account_external_key} = 43c6b88f21f345549ffb76c3e010aaac</msg>
<status status="PASS" starttime="20210322 03:25:34.945" endtime="20210322 03:25:34.947"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_external_key}</arg>
</arguments>
<msg timestamp="20210322 03:25:34.949" level="INFO">${account_external_key} = 43c6b88f21f345549ffb76c3e010aaac</msg>
<status status="PASS" starttime="20210322 03:25:34.948" endtime="20210322 03:25:34.949"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["number"]}</arg>
</arguments>
<assign>
<var>${account_number}</var>
</assign>
<msg timestamp="20210322 03:25:34.951" level="INFO">${account_number} = 3190623505</msg>
<status status="PASS" starttime="20210322 03:25:34.950" endtime="20210322 03:25:34.951"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_number}</arg>
</arguments>
<msg timestamp="20210322 03:25:34.952" level="INFO">${account_number} = 3190623505</msg>
<status status="PASS" starttime="20210322 03:25:34.952" endtime="20210322 03:25:34.953"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["routing_number"]}</arg>
</arguments>
<assign>
<var>${account_routing_number}</var>
</assign>
<msg timestamp="20210322 03:25:34.954" level="INFO">${account_routing_number} = 001</msg>
<status status="PASS" starttime="20210322 03:25:34.953" endtime="20210322 03:25:34.955"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_routing_number}</arg>
</arguments>
<msg timestamp="20210322 03:25:34.956" level="INFO">${account_routing_number} = 001</msg>
<status status="PASS" starttime="20210322 03:25:34.955" endtime="20210322 03:25:34.956"></status>
</kw>
<status status="PASS" starttime="20210322 03:25:34.327" endtime="20210322 03:25:34.956"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 03:25:34.957" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:25:34.957" endtime="20210322 03:25:34.958"></status>
</kw>
<status status="PASS" starttime="20210322 03:25:31.778" endtime="20210322 03:25:34.958"></status>
</kw>
<kw name="criar chave pix" library="pix_dict_create_entry">
<arguments>
<arg>national_registration</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 03:25:34.961" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 03:25:34.960" endtime="20210322 03:25:34.961"></status>
</kw>
<status status="PASS" starttime="20210322 03:25:34.959" endtime="20210322 03:25:34.961"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${type}</arg>
</arguments>
<msg timestamp="20210322 03:25:34.962" level="INFO">${type} = national_registration</msg>
<status status="PASS" starttime="20210322 03:25:34.962" endtime="20210322 03:25:34.962"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210322 03:25:34.963" level="INFO">${value} = </msg>
<status status="PASS" starttime="20210322 03:25:34.963" endtime="20210322 03:25:34.963"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:25:34.964" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 03:25:34.964" endtime="20210322 03:25:34.964"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "${type}",</arg>
<arg>"value": "${value}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 03:25:34.965" level="INFO">${body} = { "type": "national_registration", "value": "" }</msg>
<status status="PASS" starttime="20210322 03:25:34.964" endtime="20210322 03:25:34.965"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:25:34.966" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/175280573d114786ad15c4083c83ff56/accounts/43c6b88f21f345549ffb76c3e010aaac/entries, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "national_registration", "value": "" } 
json=None</msg>
<msg timestamp="20210322 03:25:36.604" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:25:34.965" endtime="20210322 03:25:36.604"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:25:36.606" level="INFO">{'id': '47910570235b43958f68ea40a0d7ce93', 'status': 'active', 'created_at': '2021-03-22T03:25:36.456', 'updated_at': '2021-03-22T03:25:36.456', 'key': {'value': '76041583901', 'type': 'national_registration'}, 'account': {'id': '43c6b88f21f345549ffb76c3e010aaac', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': '175280573d114786ad15c4083c83ff56', 'owner': {'name': 'Holder de teste', 'national_registration': '76041583901', 'type': 'individual'}, 'routing_number': '001', 'number': '3190623505', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}, 'resource': 'pix.entry'}</msg>
<status status="PASS" starttime="20210322 03:25:36.606" endtime="20210322 03:25:36.606"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:25:36.609" level="INFO">68b4e4ad50a919b9</msg>
<status status="PASS" starttime="20210322 03:25:36.607" endtime="20210322 03:25:36.609"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 03:25:36.610" level="INFO">201</msg>
<status status="PASS" starttime="20210322 03:25:36.609" endtime="20210322 03:25:36.610"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:25:36.611" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:25:36.610" endtime="20210322 03:25:36.611"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${entry_external_key}</var>
</assign>
<msg timestamp="20210322 03:25:36.613" level="INFO">${entry_external_key} = 47910570235b43958f68ea40a0d7ce93</msg>
<status status="PASS" starttime="20210322 03:25:36.611" endtime="20210322 03:25:36.614"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${entry_external_key}</arg>
</arguments>
<msg timestamp="20210322 03:25:36.614" level="INFO">${entry_external_key} = 47910570235b43958f68ea40a0d7ce93</msg>
<status status="PASS" starttime="20210322 03:25:36.614" endtime="20210322 03:25:36.614"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["key"]["value"]}</arg>
</arguments>
<assign>
<var>${entry_key_value}</var>
</assign>
<msg timestamp="20210322 03:25:36.616" level="INFO">${entry_key_value} = 76041583901</msg>
<status status="PASS" starttime="20210322 03:25:36.614" endtime="20210322 03:25:36.616"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${entry_key_value}</arg>
</arguments>
<msg timestamp="20210322 03:25:36.616" level="INFO">${entry_key_value} = 76041583901</msg>
<status status="PASS" starttime="20210322 03:25:36.616" endtime="20210322 03:25:36.616"></status>
</kw>
<status status="PASS" starttime="20210322 03:25:34.958" endtime="20210322 03:25:36.616"></status>
</kw>
<kw name="buscar chave pix" library="pix_dict_get_entry">
<arguments>
<arg>${holder_external_key}</arg>
<arg>${account_external_key}</arg>
<arg>${entry_external_key}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 03:25:36.617" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 03:25:36.617" endtime="20210322 03:25:36.617"></status>
</kw>
<status status="PASS" starttime="20210322 03:25:36.616" endtime="20210322 03:25:36.617"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries/${entry_external_key}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:25:36.619" level="INFO">GET Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/175280573d114786ad15c4083c83ff56/accounts/43c6b88f21f345549ffb76c3e010aaac/entries/47910570235b43958f68ea40a0d7ce93, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 03:25:37.268" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:25:36.617" endtime="20210322 03:25:37.268"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:25:37.269" level="INFO">{'id': '47910570235b43958f68ea40a0d7ce93', 'status': 'active', 'created_at': '2021-03-22T03:25:36.456', 'updated_at': '2021-03-22T03:25:36.456', 'key': {'value': '76041583901', 'type': 'national_registration'}, 'account': {'id': '43c6b88f21f345549ffb76c3e010aaac', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': '175280573d114786ad15c4083c83ff56', 'owner': {'name': 'Holder de teste', 'national_registration': '76041583901', 'type': 'individual'}, 'routing_number': '001', 'number': '3190623505', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}, 'resource': 'pix.entry'}</msg>
<status status="PASS" starttime="20210322 03:25:37.268" endtime="20210322 03:25:37.269"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:25:37.270" level="INFO">0960943e16844182</msg>
<status status="PASS" starttime="20210322 03:25:37.269" endtime="20210322 03:25:37.270"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 03:25:37.270" level="INFO">200</msg>
<status status="PASS" starttime="20210322 03:25:37.270" endtime="20210322 03:25:37.270"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:25:37.271" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:25:37.271" endtime="20210322 03:25:37.271"></status>
</kw>
<status status="PASS" starttime="20210322 03:25:36.616" endtime="20210322 03:25:37.271"></status>
</kw>
<kw name="validar busca da chave pix" library="asserts">
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 03:25:37.272" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:25:37.272" endtime="20210322 03:25:37.272"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar status da chave</arg>
</arguments>
<msg timestamp="20210322 03:25:37.272" level="INFO">Validar status da chave</msg>
<status status="PASS" starttime="20210322 03:25:37.272" endtime="20210322 03:25:37.273"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${type}' == 'evp'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["status"]}</arg>
<arg>active</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'phone'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["status"]}</arg>
<arg>waiting_ownership_verification</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'email'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["status"]}</arg>
<arg>waiting_ownership_verification</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'national_registration'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["status"]}</arg>
<arg>active</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["status"]}</arg>
<arg>active</arg>
</arguments>
<status status="PASS" starttime="20210322 03:25:37.274" endtime="20210322 03:25:37.274"></status>
</kw>
<status status="PASS" starttime="20210322 03:25:37.273" endtime="20210322 03:25:37.274"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando Tipo da chave PIX</arg>
</arguments>
<msg timestamp="20210322 03:25:37.274" level="INFO">Validando Tipo da chave PIX</msg>
<status status="PASS" starttime="20210322 03:25:37.274" endtime="20210322 03:25:37.275"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${type}' == 'evp'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["type"]}</arg>
<arg>${type}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'phone'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["type"]}</arg>
<arg>${type}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'email'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["type"]}</arg>
<arg>${type}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'national_registration'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["type"]}</arg>
<arg>${type}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["key"]["type"]}</arg>
<arg>${type}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:25:37.275" endtime="20210322 03:25:37.276"></status>
</kw>
<status status="PASS" starttime="20210322 03:25:37.275" endtime="20210322 03:25:37.276"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando Valor da chave PIX</arg>
</arguments>
<msg timestamp="20210322 03:25:37.276" level="INFO">Validando Valor da chave PIX</msg>
<status status="PASS" starttime="20210322 03:25:37.276" endtime="20210322 03:25:37.276"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${type}' == 'evp'</arg>
<arg>Should Not Be Empty</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'phone'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${phone_pix}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'email'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${email_pix}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'national_registration'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${national_registration}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${national_registration}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:25:37.277" endtime="20210322 03:25:37.278"></status>
</kw>
<status status="PASS" starttime="20210322 03:25:37.277" endtime="20210322 03:25:37.278"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando dados da conta</arg>
</arguments>
<msg timestamp="20210322 03:25:37.278" level="INFO">Validando dados da conta</msg>
<status status="PASS" starttime="20210322 03:25:37.278" endtime="20210322 03:25:37.278"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["id"]}</arg>
<arg>${account_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:25:37.278" endtime="20210322 03:25:37.279"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["marketplace"]}</arg>
<arg>${marketplace_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:25:37.279" endtime="20210322 03:25:37.279"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["holder"]}</arg>
<arg>${holder_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:25:37.280" endtime="20210322 03:25:37.280"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["number"]}</arg>
<arg>${account_number}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:25:37.280" endtime="20210322 03:25:37.280"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["routing_number"]}</arg>
<arg>${account_routing_number}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:25:37.281" endtime="20210322 03:25:37.281"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["type"]}</arg>
<arg>CACC</arg>
</arguments>
<status status="PASS" starttime="20210322 03:25:37.281" endtime="20210322 03:25:37.282"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar Proprietário da Account Owner</arg>
</arguments>
<msg timestamp="20210322 03:25:37.282" level="INFO">Validar Proprietário da Account Owner</msg>
<status status="PASS" starttime="20210322 03:25:37.282" endtime="20210322 03:25:37.282"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${holder_type}' == 'individual'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["account"]["owner"]["name"]}</arg>
<arg>${holder_name}</arg>
<arg>ELSE IF</arg>
<arg>'${holder_type}' == 'business'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["account"]["owner"]["name"]}</arg>
<arg>${legal_name}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["account"]["owner"]["name"]}</arg>
<arg>${holder_name}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:25:37.283" endtime="20210322 03:25:37.283"></status>
</kw>
<status status="PASS" starttime="20210322 03:25:37.282" endtime="20210322 03:25:37.283"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar national_registration da Account Owner</arg>
</arguments>
<msg timestamp="20210322 03:25:37.283" level="INFO">Validar national_registration da Account Owner</msg>
<status status="PASS" starttime="20210322 03:25:37.283" endtime="20210322 03:25:37.284"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${holder_type}' == 'individual'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["account"]["owner"]["national_registration"]}</arg>
<arg>${national_registration}</arg>
<arg>ELSE IF</arg>
<arg>'${holder_type}' == 'business'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["account"]["owner"]["national_registration"]}</arg>
<arg>${national_registration}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["account"]["owner"]["national_registration"]}</arg>
<arg>${national_registration}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:25:37.284" endtime="20210322 03:25:37.285"></status>
</kw>
<status status="PASS" starttime="20210322 03:25:37.284" endtime="20210322 03:25:37.285"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar Holder Type do Account Owner</arg>
</arguments>
<msg timestamp="20210322 03:25:37.286" level="INFO">Validar Holder Type do Account Owner</msg>
<status status="PASS" starttime="20210322 03:25:37.285" endtime="20210322 03:25:37.286"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${holder_type}' == 'individual'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["account"]["owner"]["type"]}</arg>
<arg>${holder_type}</arg>
<arg>ELSE IF</arg>
<arg>'${holder_type}' == 'business'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["account"]["owner"]["type"]}</arg>
<arg>${holder_type}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["account"]["owner"]["type"]}</arg>
<arg>${holder_type}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:25:37.286" endtime="20210322 03:25:37.287"></status>
</kw>
<status status="PASS" starttime="20210322 03:25:37.286" endtime="20210322 03:25:37.287"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar PSP</arg>
</arguments>
<msg timestamp="20210322 03:25:37.287" level="INFO">Validar PSP</msg>
<status status="PASS" starttime="20210322 03:25:37.287" endtime="20210322 03:25:37.287"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["psp"]["code"]}</arg>
<arg>19468242</arg>
</arguments>
<status status="PASS" starttime="20210322 03:25:37.287" endtime="20210322 03:25:37.288"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["psp"]["name"]}</arg>
<arg>Zoop Tecnologia e Meios de Pagamento S.A.</arg>
</arguments>
<status status="PASS" starttime="20210322 03:25:37.288" endtime="20210322 03:25:37.288"></status>
</kw>
<status status="PASS" starttime="20210322 03:25:37.271" endtime="20210322 03:25:37.288"></status>
</kw>
<doc>Fluxo Básico</doc>
<tags>
<tag>regression_test</tag>
<tag>smoke_test</tag>
</tags>
<status status="PASS" starttime="20210322 03:25:31.778" endtime="20210322 03:25:37.288" critical="yes"></status>
</test>
<test id="s1-s1-s1-t5" name="Cenário: Buscar chave de endereçamento do tipo CNPJ">
<kw name="criar holder business ativo" library="accreditation_create_holder_active">
<kw name="conectar accreditation" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accreditation</arg>
<arg>url=${accreditation_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 03:25:37.291" level="INFO">Creating Session using : alias=accreditation, url=https://banking-accreditation-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 03:25:37.290" endtime="20210322 03:25:37.291"></status>
</kw>
<status status="PASS" starttime="20210322 03:25:37.290" endtime="20210322 03:25:37.291"></status>
</kw>
<kw name="Cnpj" library="FakerLibrary">
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 03:25:37.292" level="INFO">${national_registration} = 94.532.860/0001-10</msg>
<status status="PASS" starttime="20210322 03:25:37.292" endtime="20210322 03:25:37.292"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${national_registration}</arg>
<arg>.</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 03:25:37.292" level="INFO">${national_registration} = 94532860/0001-10</msg>
<status status="PASS" starttime="20210322 03:25:37.292" endtime="20210322 03:25:37.292"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${national_registration}</arg>
<arg>-</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 03:25:37.293" level="INFO">${national_registration} = 94532860/000110</msg>
<status status="PASS" starttime="20210322 03:25:37.292" endtime="20210322 03:25:37.293"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${national_registration}</arg>
<arg>/</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 03:25:37.293" level="INFO">${national_registration} = 94532860000110</msg>
<status status="PASS" starttime="20210322 03:25:37.293" endtime="20210322 03:25:37.293"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${national_registration}</arg>
</arguments>
<msg timestamp="20210322 03:25:37.293" level="INFO">${national_registration} = 94532860000110</msg>
<status status="PASS" starttime="20210322 03:25:37.293" endtime="20210322 03:25:37.294"></status>
</kw>
<kw name="Rg" library="FakerLibrary">
<doc>Brazilian RG, return plain numbers.
Check:  https://www.ngmatematica.com/2014/02/como-determinar-o-digito-verificador-do.html</doc>
<assign>
<var>${identity_card}</var>
</assign>
<msg timestamp="20210322 03:25:37.294" level="INFO">${identity_card} = 123406572</msg>
<status status="PASS" starttime="20210322 03:25:37.294" endtime="20210322 03:25:37.294"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${identity_card}</arg>
</arguments>
<msg timestamp="20210322 03:25:37.294" level="INFO">${identity_card} = 123406572</msg>
<status status="PASS" starttime="20210322 03:25:37.294" endtime="20210322 03:25:37.294"></status>
</kw>
<kw name="criar holder business" library="accreditation_post_holder_business">
<arguments>
<arg>holder_type=business</arg>
<arg>holder_name=${holder_name}</arg>
<arg>email_business=${email_business}</arg>
<arg>national_registration=${national_registration}</arg>
<arg>revenue_business=${revenue_business}</arg>
<arg>cnae=${cnae}</arg>
<arg>legal_name=${legal_name}</arg>
<arg>establishment_format=mei</arg>
<arg>establishment_date=${establishment_date}</arg>
</arguments>
<kw name="conectar accreditation" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accreditation</arg>
<arg>url=${accreditation_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 03:25:37.296" level="INFO">Creating Session using : alias=accreditation, url=https://banking-accreditation-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 03:25:37.295" endtime="20210322 03:25:37.296"></status>
</kw>
<status status="PASS" starttime="20210322 03:25:37.295" endtime="20210322 03:25:37.296"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_type}</arg>
</arguments>
<msg timestamp="20210322 03:25:37.296" level="INFO">${holder_type} = business</msg>
<status status="PASS" starttime="20210322 03:25:37.296" endtime="20210322 03:25:37.296"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_name}</arg>
</arguments>
<msg timestamp="20210322 03:25:37.297" level="INFO">${holder_name} = Holder de teste</msg>
<status status="PASS" starttime="20210322 03:25:37.297" endtime="20210322 03:25:37.297"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${legal_name}</arg>
</arguments>
<msg timestamp="20210322 03:25:37.297" level="INFO">${legal_name} = Nome Legal da Empresa</msg>
<status status="PASS" starttime="20210322 03:25:37.297" endtime="20210322 03:25:37.297"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:25:37.298" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 03:25:37.297" endtime="20210322 03:25:37.298"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "${holder_type}",</arg>
<arg>"name": "${holder_name}",</arg>
<arg>"email": "${email_business}",</arg>
<arg>"national_registration": "${national_registration}",</arg>
<arg>"revenue": ${revenue_business},</arg>
<arg>"cnae": "${cnae}",</arg>
<arg>"legal_name": "${legal_name}",</arg>
<arg>"establishment": {</arg>
<arg>"format":"${establishment_format}",</arg>
<arg>"date":"${establishment_date}"</arg>
<arg>}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 03:25:37.298" level="INFO">${body} = { "type": "business", "name": "Holder de teste", "email": "contato@teste.com.br", "national_registration": "94532860000110", "revenue": 1005500.00, "cnae": "0111301", "legal_name": "Nome Legal da Empr...</msg>
<status status="PASS" starttime="20210322 03:25:37.298" endtime="20210322 03:25:37.298"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:25:37.299" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "business", "name": "Holder de teste", "email": "contato@teste.com.br", "national_registration": "94532860000110", "revenue": 1005500.00, "cnae": "0111301", "legal_name": "Nome Legal da Empresa", "establishment": { "format":"mei", "date":"2012-04-25" } } 
json=None</msg>
<msg timestamp="20210322 03:25:37.994" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:25:37.299" endtime="20210322 03:25:37.994"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:25:37.997" level="INFO">{'id': 'd1b7fa830cce47c8b57594cd1feccaf6', 'name': 'Holder de teste', 'revenue': 1005500.0, 'email': 'contato@teste.com.br', 'status': 'waiting_info_and_documents', 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'marketplace_name': 'Marketplace de Teste', 'created_at': '2021-03-22T03:25:38.815351', 'updated_at': '2021-03-22T03:25:38.815353', 'type': 'business', 'national_registration': '94532860000110', 'legal_name': 'Nome Legal da Empresa', 'establishment': {'format': 'mei', 'date': '2012-04-25'}, 'cnae': '0111301', '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/d1b7fa830cce47c8b57594cd1feccaf6', 'type': 'GET'}, 'phones': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/d1b7fa830cce47c8b57594cd1feccaf6/phones', 'type': 'GET'}, 'addresses': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/d1b7fa830cce47c8b57594cd1feccaf6/addresses', 'type': 'GET'}, 'documents': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/d1b7fa830cce47c8b57594cd1feccaf6/documents', 'type': 'GET'}, 'partners': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/d1b7fa830cce47c8b57594cd1feccaf6/partners', 'type': 'GET'}, 'associates': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/d1b7fa830cce47c8b57594cd1feccaf6/associates', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 03:25:37.995" endtime="20210322 03:25:37.998"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:25:38.000" level="INFO">aaffd387fd7a4d3d</msg>
<status status="PASS" starttime="20210322 03:25:37.998" endtime="20210322 03:25:38.000"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${body}</arg>
</arguments>
<msg timestamp="20210322 03:25:38.001" level="INFO">{ "type": "business", "name": "Holder de teste", "email": "contato@teste.com.br", "national_registration": "94532860000110", "revenue": 1005500.00, "cnae": "0111301", "legal_name": "Nome Legal da Empresa", "establishment": { "format":"mei", "date":"2012-04-25" } }</msg>
<status status="PASS" starttime="20210322 03:25:38.001" endtime="20210322 03:25:38.001"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:25:38.003" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:25:38.002" endtime="20210322 03:25:38.003"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${holder_external_key}</var>
</assign>
<msg timestamp="20210322 03:25:38.005" level="INFO">${holder_external_key} = d1b7fa830cce47c8b57594cd1feccaf6</msg>
<status status="PASS" starttime="20210322 03:25:38.004" endtime="20210322 03:25:38.005"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_external_key}</arg>
</arguments>
<msg timestamp="20210322 03:25:38.007" level="INFO">${holder_external_key} = d1b7fa830cce47c8b57594cd1feccaf6</msg>
<status status="PASS" starttime="20210322 03:25:38.005" endtime="20210322 03:25:38.007"></status>
</kw>
<status status="PASS" starttime="20210322 03:25:37.295" endtime="20210322 03:25:38.007"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 03:25:38.008" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:25:38.008" endtime="20210322 03:25:38.009"></status>
</kw>
<kw name="criar holder phone" library="accreditation_post_holder_phone">
<arguments>
<arg>21</arg>
<arg>51</arg>
<arg>996221236</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:25:38.012" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 03:25:38.012" endtime="20210322 03:25:38.012"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"area_code": "${phone_area_code}",</arg>
<arg>"country_code": "${phone_country_code}",</arg>
<arg>"number": "${phone_number}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 03:25:38.014" level="INFO">${body} = { "area_code": "21", "country_code": "51", "number": "996221236" }</msg>
<status status="PASS" starttime="20210322 03:25:38.013" endtime="20210322 03:25:38.014"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/phones</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:25:38.015" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/d1b7fa830cce47c8b57594cd1feccaf6/phones, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "area_code": "21", "country_code": "51", "number": "996221236" } 
json=None</msg>
<msg timestamp="20210322 03:25:38.263" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:25:38.014" endtime="20210322 03:25:38.263"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:25:38.264" level="INFO">{'id': '0a1335fb45aa41caba131bd95c6ed505', 'area_code': '21', 'country_code': '51', 'number': '996221236', 'main': True, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/d1b7fa830cce47c8b57594cd1feccaf6/phones/0a1335fb45aa41caba131bd95c6ed505', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/d1b7fa830cce47c8b57594cd1feccaf6', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 03:25:38.264" endtime="20210322 03:25:38.264"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:25:38.265" level="INFO">3d6a08e46a5db4eb</msg>
<status status="PASS" starttime="20210322 03:25:38.264" endtime="20210322 03:25:38.265"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:25:38.266" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:25:38.265" endtime="20210322 03:25:38.266"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${phone_external_key}</var>
</assign>
<msg timestamp="20210322 03:25:38.267" level="INFO">${phone_external_key} = 0a1335fb45aa41caba131bd95c6ed505</msg>
<status status="PASS" starttime="20210322 03:25:38.266" endtime="20210322 03:25:38.267"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${phone_external_key}</arg>
</arguments>
<msg timestamp="20210322 03:25:38.267" level="INFO">${phone_external_key} = 0a1335fb45aa41caba131bd95c6ed505</msg>
<status status="PASS" starttime="20210322 03:25:38.267" endtime="20210322 03:25:38.267"></status>
</kw>
<status status="PASS" starttime="20210322 03:25:38.009" endtime="20210322 03:25:38.267"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 03:25:38.268" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:25:38.267" endtime="20210322 03:25:38.268"></status>
</kw>
<kw name="criar holder address" library="accreditation_post_holder_address">
<arguments>
<arg>Rio de Janeiro</arg>
<arg>Rio de Janeiro</arg>
<arg>Brasil</arg>
<arg>Bairro de Testes</arg>
<arg>Rua de Testes</arg>
<arg>90</arg>
<arg>apto 200</arg>
<arg>21550987</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:25:38.269" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 03:25:38.268" endtime="20210322 03:25:38.269"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"city": "${city}",</arg>
<arg>"state": "${state}",</arg>
<arg>"country": "${country}",</arg>
<arg>"neighborhood": "${neighborhood}",</arg>
<arg>"street": "${street}",</arg>
<arg>"number": "${number}",</arg>
<arg>"complement": "${complement}",</arg>
<arg>"postal_code": "${postal_code}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 03:25:38.269" level="INFO">${body} = { "city": "Rio de Janeiro", "state": "Rio de Janeiro", "country": "Brasil", "neighborhood": "Bairro de Testes", "street": "Rua de Testes", "number": "90", "complement": "apto 200", "postal_code": "215...</msg>
<status status="PASS" starttime="20210322 03:25:38.269" endtime="20210322 03:25:38.270"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/addresses</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:25:38.270" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/d1b7fa830cce47c8b57594cd1feccaf6/addresses, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "city": "Rio de Janeiro", "state": "Rio de Janeiro", "country": "Brasil", "neighborhood": "Bairro de Testes", "street": "Rua de Testes", "number": "90", "complement": "apto 200", "postal_code": "21550987" } 
json=None</msg>
<msg timestamp="20210322 03:25:38.489" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:25:38.270" endtime="20210322 03:25:38.490"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:25:38.491" level="INFO">{'id': '711efdb087c6477c83682c8a3ea75e14', 'street': 'Rua de Testes', 'number': '90', 'city': 'Rio de Janeiro', 'complement': 'apto 200', 'state': 'Rio de Janeiro', 'neighborhood': 'Bairro de Testes', 'postal_code': '21550987', 'country': 'Brasil', 'main': True, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/d1b7fa830cce47c8b57594cd1feccaf6/addresses/711efdb087c6477c83682c8a3ea75e14', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/d1b7fa830cce47c8b57594cd1feccaf6', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 03:25:38.490" endtime="20210322 03:25:38.491"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:25:38.493" level="INFO">7d89ed21d433e17d</msg>
<status status="PASS" starttime="20210322 03:25:38.493" endtime="20210322 03:25:38.493"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:25:38.494" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:25:38.493" endtime="20210322 03:25:38.494"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${address_external_key}</var>
</assign>
<msg timestamp="20210322 03:25:38.497" level="INFO">${address_external_key} = 711efdb087c6477c83682c8a3ea75e14</msg>
<status status="PASS" starttime="20210322 03:25:38.495" endtime="20210322 03:25:38.497"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${address_external_key}</arg>
</arguments>
<msg timestamp="20210322 03:25:38.497" level="INFO">${address_external_key} = 711efdb087c6477c83682c8a3ea75e14</msg>
<status status="PASS" starttime="20210322 03:25:38.497" endtime="20210322 03:25:38.497"></status>
</kw>
<status status="PASS" starttime="20210322 03:25:38.268" endtime="20210322 03:25:38.498"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 03:25:38.499" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:25:38.498" endtime="20210322 03:25:38.499"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>CCMEI</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:25:38.501" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 03:25:38.500" endtime="20210322 03:25:38.501"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 03:25:38.502" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 03:25:38.504" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 03:25:38.501" endtime="20210322 03:25:38.504"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:25:38.505" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/d1b7fa830cce47c8b57594cd1feccaf6/documents?type=CCMEI, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 03:25:38.766" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:25:38.504" endtime="20210322 03:25:38.766"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:25:38.767" level="INFO">{'id': 'db60ba79f9d341038fc748d313c7d23e', 'document_type': 'ccmei', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/d1b7fa830cce47c8b57594cd1feccaf6/documents/db60ba79f9d341038fc748d313c7d23e', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/d1b7fa830cce47c8b57594cd1feccaf6', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/d1b7fa830cce47c8b57594cd1feccaf6/documents/db60ba79f9d341038fc748d313c7d23e/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 03:25:38.767" endtime="20210322 03:25:38.768"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:25:38.769" level="INFO">3d70ac6c72bd66ae</msg>
<status status="PASS" starttime="20210322 03:25:38.768" endtime="20210322 03:25:38.769"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:25:38.770" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:25:38.769" endtime="20210322 03:25:38.770"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 03:25:38.771" level="INFO">${document_external_key} = db60ba79f9d341038fc748d313c7d23e</msg>
<status status="PASS" starttime="20210322 03:25:38.771" endtime="20210322 03:25:38.772"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 03:25:38.772" level="INFO">${document_external_key} = db60ba79f9d341038fc748d313c7d23e</msg>
<status status="PASS" starttime="20210322 03:25:38.772" endtime="20210322 03:25:38.773"></status>
</kw>
<status status="PASS" starttime="20210322 03:25:38.500" endtime="20210322 03:25:38.773"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 03:25:38.774" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:25:38.773" endtime="20210322 03:25:38.774"></status>
</kw>
<kw name="Cpf" library="FakerLibrary">
<assign>
<var>${partner_individual_national_registration}</var>
</assign>
<msg timestamp="20210322 03:25:38.775" level="INFO">${partner_individual_national_registration} = 258.147.306-17</msg>
<status status="PASS" starttime="20210322 03:25:38.774" endtime="20210322 03:25:38.775"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${partner_individual_national_registration}</arg>
<arg>.</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${partner_individual_national_registration}</var>
</assign>
<msg timestamp="20210322 03:25:38.775" level="INFO">${partner_individual_national_registration} = 258147306-17</msg>
<status status="PASS" starttime="20210322 03:25:38.775" endtime="20210322 03:25:38.775"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${partner_individual_national_registration}</arg>
<arg>-</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${partner_individual_national_registration}</var>
</assign>
<msg timestamp="20210322 03:25:38.777" level="INFO">${partner_individual_national_registration} = 25814730617</msg>
<status status="PASS" starttime="20210322 03:25:38.776" endtime="20210322 03:25:38.777"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${partner_individual_national_registration}</arg>
</arguments>
<msg timestamp="20210322 03:25:38.777" level="INFO">${partner_individual_national_registration} = 25814730617</msg>
<status status="PASS" starttime="20210322 03:25:38.777" endtime="20210322 03:25:38.777"></status>
</kw>
<kw name="Rg" library="FakerLibrary">
<doc>Brazilian RG, return plain numbers.
Check:  https://www.ngmatematica.com/2014/02/como-determinar-o-digito-verificador-do.html</doc>
<assign>
<var>${partner_individual_identity_card}</var>
</assign>
<msg timestamp="20210322 03:25:38.778" level="INFO">${partner_individual_identity_card} = 056713289</msg>
<status status="PASS" starttime="20210322 03:25:38.777" endtime="20210322 03:25:38.778"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${partner_individual_identity_card}</arg>
</arguments>
<msg timestamp="20210322 03:25:38.779" level="INFO">${partner_individual_identity_card} = 056713289</msg>
<status status="PASS" starttime="20210322 03:25:38.778" endtime="20210322 03:25:38.779"></status>
</kw>
<kw name="criar partner individual" library="accreditation_post_partner_individual">
<arguments>
<arg>partner_individual_type=individual</arg>
<arg>partner_individual_name=${partner_individual_name}</arg>
<arg>partner_individual_email=${partner_individual_email}</arg>
<arg>partner_individual_national_registration=${partner_individual_national_registration}</arg>
<arg>partner_individual_revenue=${partner_individual_revenue}</arg>
<arg>partner_individual_birthday=${partner_individual_birthday}</arg>
<arg>partner_individual_mothers_name=${partner_individual_mothers_name}</arg>
<arg>partner_individual_identity_card=${partner_individual_identity_card}</arg>
<arg>partner_individual_pep=false</arg>
<arg>partner_individual_percentage=100</arg>
<arg>partner_individual_adm=true</arg>
<arg>partner_individual_cbo=${partner_individual_cbo}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:25:38.781" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 03:25:38.780" endtime="20210322 03:25:38.781"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "${partner_individual_type}",</arg>
<arg>"name": "${partner_individual_name}",</arg>
<arg>"email": "${partner_individual_email}",</arg>
<arg>"national_registration": "${partner_individual_national_registration}",</arg>
<arg>"revenue": ${partner_individual_revenue},</arg>
<arg>"birthday": "${partner_individual_birthday}",</arg>
<arg>"mothers_name": "${partner_individual_mothers_name}",</arg>
<arg>"identity_card": "${partner_individual_identity_card}",</arg>
<arg>"pep": false,</arg>
<arg>"percentage": ${partner_individual_percentage},</arg>
<arg>"adm": ${partner_individual_adm},</arg>
<arg>"cbo": ${partner_individual_cbo}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 03:25:38.782" level="INFO">${body} = { "type": "individual", "name": "Individual Partner de teste", "email": "teste@teste.com.br", "national_registration": "25814730617", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe...</msg>
<status status="PASS" starttime="20210322 03:25:38.781" endtime="20210322 03:25:38.782"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/partners</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:25:38.783" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/d1b7fa830cce47c8b57594cd1feccaf6/partners, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "individual", "name": "Individual Partner de teste", "email": "teste@teste.com.br", "national_registration": "25814730617", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Individual Partner", "identity_card": "056713289", "pep": false, "percentage": 100, "adm": true, "cbo": 821450 } 
json=None</msg>
<msg timestamp="20210322 03:25:39.012" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:25:38.782" endtime="20210322 03:25:39.012"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:25:39.013" level="INFO">{'id': 'b5d3a5543aad44f5b19bbeb9c54b176e', 'name': 'Individual Partner de teste', 'revenue': 5500.0, 'email': 'teste@teste.com.br', 'created_at': '2021-03-22T03:25:39.817392', 'updated_at': '2021-03-22T03:25:39.817394', 'main': True, 'adm': True, 'percentage': 100.0, 'type': 'individual', 'national_registration': '25814730617', 'birthday': '1988-04-23', 'mothers_name': 'Mãe do Individual Partner', 'identity_card': '056713289', 'pep': False, 'cbo': '821450', '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/d1b7fa830cce47c8b57594cd1feccaf6/partners/b5d3a5543aad44f5b19bbeb9c54b176e', 'type': 'GET'}, 'phones': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/d1b7fa830cce47c8b57594cd1feccaf6/partners/b5d3a5543aad44f5b19bbeb9c54b176e/phones', 'type': 'GET'}, 'addresses': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/d1b7fa830cce47c8b57594cd1feccaf6/partners/b5d3a5543aad44f5b19bbeb9c54b176e/addresses', 'type': 'GET'}, 'documents': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/d1b7fa830cce47c8b57594cd1feccaf6/partners/b5d3a5543aad44f5b19bbeb9c54b176e/documents', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/d1b7fa830cce47c8b57594cd1feccaf6', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 03:25:39.012" endtime="20210322 03:25:39.013"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:25:39.014" level="INFO">2613b210a7431387</msg>
<status status="PASS" starttime="20210322 03:25:39.013" endtime="20210322 03:25:39.014"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:25:39.015" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:25:39.014" endtime="20210322 03:25:39.015"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${partner_external_key}</var>
</assign>
<msg timestamp="20210322 03:25:39.016" level="INFO">${partner_external_key} = b5d3a5543aad44f5b19bbeb9c54b176e</msg>
<status status="PASS" starttime="20210322 03:25:39.015" endtime="20210322 03:25:39.016"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${partner_external_key}</arg>
</arguments>
<msg timestamp="20210322 03:25:39.017" level="INFO">${partner_external_key} = b5d3a5543aad44f5b19bbeb9c54b176e</msg>
<status status="PASS" starttime="20210322 03:25:39.017" endtime="20210322 03:25:39.017"></status>
</kw>
<status status="PASS" starttime="20210322 03:25:38.779" endtime="20210322 03:25:39.017"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 03:25:39.018" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:25:39.017" endtime="20210322 03:25:39.018"></status>
</kw>
<kw name="criar partner phone" library="accreditation_post_partner_phone">
<arguments>
<arg>21</arg>
<arg>51</arg>
<arg>996554785</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:25:39.019" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 03:25:39.019" endtime="20210322 03:25:39.019"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"area_code": "${phone_area_code}",</arg>
<arg>"country_code": "${phone_country_code}",</arg>
<arg>"number": "${phone_number}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 03:25:39.020" level="INFO">${body} = { "area_code": "21", "country_code": "51", "number": "996554785" }</msg>
<status status="PASS" starttime="20210322 03:25:39.019" endtime="20210322 03:25:39.020"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/partners/${partner_external_key}/phones/</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:25:39.021" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/d1b7fa830cce47c8b57594cd1feccaf6/partners/b5d3a5543aad44f5b19bbeb9c54b176e/phones/, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "area_code": "21", "country_code": "51", "number": "996554785" } 
json=None</msg>
<msg timestamp="20210322 03:25:39.246" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:25:39.020" endtime="20210322 03:25:39.246"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:25:39.247" level="INFO">{'id': 'e376761c9b9b4e34ae79e3fe6b47c972', 'area_code': '21', 'country_code': '51', 'number': '996554785', 'main': True, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/d1b7fa830cce47c8b57594cd1feccaf6/partners/b5d3a5543aad44f5b19bbeb9c54b176e/phones/e376761c9b9b4e34ae79e3fe6b47c972', 'type': 'GET'}, 'partner': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/d1b7fa830cce47c8b57594cd1feccaf6/partners/b5d3a5543aad44f5b19bbeb9c54b176e', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/d1b7fa830cce47c8b57594cd1feccaf6', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 03:25:39.246" endtime="20210322 03:25:39.247"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:25:39.247" level="INFO">43de0c62c590d3fa</msg>
<status status="PASS" starttime="20210322 03:25:39.247" endtime="20210322 03:25:39.247"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:25:39.248" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:25:39.248" endtime="20210322 03:25:39.248"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${holder_external_key}</var>
</assign>
<msg timestamp="20210322 03:25:39.249" level="INFO">${holder_external_key} = e376761c9b9b4e34ae79e3fe6b47c972</msg>
<status status="PASS" starttime="20210322 03:25:39.248" endtime="20210322 03:25:39.249"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${phone_external_key}</arg>
</arguments>
<msg timestamp="20210322 03:25:39.249" level="INFO">${phone_external_key} = 0a1335fb45aa41caba131bd95c6ed505</msg>
<status status="PASS" starttime="20210322 03:25:39.249" endtime="20210322 03:25:39.249"></status>
</kw>
<status status="PASS" starttime="20210322 03:25:39.018" endtime="20210322 03:25:39.249"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 03:25:39.250" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:25:39.250" endtime="20210322 03:25:39.250"></status>
</kw>
<kw name="criar partner address" library="accreditation_post_partner_address">
<arguments>
<arg>Rio de Janeiro</arg>
<arg>Rio de Janeiro</arg>
<arg>Brasil</arg>
<arg>Bairro de Testes</arg>
<arg>Rua de Testes</arg>
<arg>61</arg>
<arg>apto 201</arg>
<arg>21550478</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:25:39.251" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 03:25:39.251" endtime="20210322 03:25:39.251"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"city": "${city}",</arg>
<arg>"state": "${state}",</arg>
<arg>"country": "${country}",</arg>
<arg>"neighborhood": "${neighborhood}",</arg>
<arg>"street": "${street}",</arg>
<arg>"number": "${number}",</arg>
<arg>"complement": "${complement}",</arg>
<arg>"postal_code": "${postal_code}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 03:25:39.251" level="INFO">${body} = { "city": "Rio de Janeiro", "state": "Rio de Janeiro", "country": "Brasil", "neighborhood": "Bairro de Testes", "street": "Rua de Testes", "number": "61", "complement": "apto 201", "postal_code": "215...</msg>
<status status="PASS" starttime="20210322 03:25:39.251" endtime="20210322 03:25:39.251"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/partners/${partner_external_key}/addresses</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:25:39.252" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/d1b7fa830cce47c8b57594cd1feccaf6/partners/b5d3a5543aad44f5b19bbeb9c54b176e/addresses, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "city": "Rio de Janeiro", "state": "Rio de Janeiro", "country": "Brasil", "neighborhood": "Bairro de Testes", "street": "Rua de Testes", "number": "61", "complement": "apto 201", "postal_code": "21550478" } 
json=None</msg>
<msg timestamp="20210322 03:25:39.474" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:25:39.252" endtime="20210322 03:25:39.474"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:25:39.476" level="INFO">{'id': '37a7d6bcae93493f8c6076eaef18dd78', 'street': 'Rua de Testes', 'number': '61', 'city': 'Rio de Janeiro', 'complement': 'apto 201', 'state': 'Rio de Janeiro', 'neighborhood': 'Bairro de Testes', 'postal_code': '21550478', 'country': 'Brasil', 'main': True, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/d1b7fa830cce47c8b57594cd1feccaf6/partners/b5d3a5543aad44f5b19bbeb9c54b176e/addresses/37a7d6bcae93493f8c6076eaef18dd78', 'type': 'GET'}, 'partner': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/d1b7fa830cce47c8b57594cd1feccaf6/partners/b5d3a5543aad44f5b19bbeb9c54b176e', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/d1b7fa830cce47c8b57594cd1feccaf6', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 03:25:39.475" endtime="20210322 03:25:39.476"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:25:39.477" level="INFO">a43d5a4712c5611f</msg>
<status status="PASS" starttime="20210322 03:25:39.477" endtime="20210322 03:25:39.478"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:25:39.479" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:25:39.478" endtime="20210322 03:25:39.479"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${address_external_key}</var>
</assign>
<msg timestamp="20210322 03:25:39.481" level="INFO">${address_external_key} = 37a7d6bcae93493f8c6076eaef18dd78</msg>
<status status="PASS" starttime="20210322 03:25:39.480" endtime="20210322 03:25:39.481"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${address_external_key}</arg>
</arguments>
<msg timestamp="20210322 03:25:39.481" level="INFO">${address_external_key} = 37a7d6bcae93493f8c6076eaef18dd78</msg>
<status status="PASS" starttime="20210322 03:25:39.481" endtime="20210322 03:25:39.481"></status>
</kw>
<status status="PASS" starttime="20210322 03:25:39.250" endtime="20210322 03:25:39.481"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 03:25:39.482" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:25:39.481" endtime="20210322 03:25:39.482"></status>
</kw>
<kw name="criar partner document" library="accreditation_post_partner_document">
<arguments>
<arg>SELFIE</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:25:39.483" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 03:25:39.483" endtime="20210322 03:25:39.483"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 03:25:39.483" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 03:25:39.485" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 03:25:39.483" endtime="20210322 03:25:39.485"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/partners/${partner_externaL_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:25:39.486" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/d1b7fa830cce47c8b57594cd1feccaf6/partners/b5d3a5543aad44f5b19bbeb9c54b176e/documents?type=SELFIE, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 03:25:39.731" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:25:39.485" endtime="20210322 03:25:39.731"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:25:39.732" level="INFO">{'id': 'd6d06744285843bda5fd2a378366b03f', 'document_type': 'selfie', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/d1b7fa830cce47c8b57594cd1feccaf6/partners/b5d3a5543aad44f5b19bbeb9c54b176e/documents/d6d06744285843bda5fd2a378366b03f', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/d1b7fa830cce47c8b57594cd1feccaf6', 'type': 'GET'}, 'partner': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/d1b7fa830cce47c8b57594cd1feccaf6/partners/b5d3a5543aad44f5b19bbeb9c54b176e', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/d1b7fa830cce47c8b57594cd1feccaf6/partners/b5d3a5543aad44f5b19bbeb9c54b176e/documents/d6d06744285843bda5fd2a378366b03f/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 03:25:39.732" endtime="20210322 03:25:39.732"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:25:39.733" level="INFO">aa9c72726d650db0</msg>
<status status="PASS" starttime="20210322 03:25:39.732" endtime="20210322 03:25:39.733"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:25:39.733" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:25:39.733" endtime="20210322 03:25:39.734"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 03:25:39.735" level="INFO">${document_external_key} = d6d06744285843bda5fd2a378366b03f</msg>
<status status="PASS" starttime="20210322 03:25:39.734" endtime="20210322 03:25:39.735"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 03:25:39.736" level="INFO">${document_external_key} = d6d06744285843bda5fd2a378366b03f</msg>
<status status="PASS" starttime="20210322 03:25:39.736" endtime="20210322 03:25:39.736"></status>
</kw>
<status status="PASS" starttime="20210322 03:25:39.482" endtime="20210322 03:25:39.736"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 03:25:39.737" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:25:39.736" endtime="20210322 03:25:39.737"></status>
</kw>
<kw name="criar partner document" library="accreditation_post_partner_document">
<arguments>
<arg>RG_FRENTE</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:25:39.737" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 03:25:39.737" endtime="20210322 03:25:39.737"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 03:25:39.738" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 03:25:39.739" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 03:25:39.738" endtime="20210322 03:25:39.739"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/partners/${partner_externaL_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:25:39.739" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/d1b7fa830cce47c8b57594cd1feccaf6/partners/b5d3a5543aad44f5b19bbeb9c54b176e/documents?type=RG_FRENTE, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 03:25:40.030" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:25:39.739" endtime="20210322 03:25:40.030"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:25:40.031" level="INFO">{'id': '5e4889fa508942a5b35edaf65c6396e7', 'document_type': 'rg_frente', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/d1b7fa830cce47c8b57594cd1feccaf6/partners/b5d3a5543aad44f5b19bbeb9c54b176e/documents/5e4889fa508942a5b35edaf65c6396e7', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/d1b7fa830cce47c8b57594cd1feccaf6', 'type': 'GET'}, 'partner': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/d1b7fa830cce47c8b57594cd1feccaf6/partners/b5d3a5543aad44f5b19bbeb9c54b176e', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/d1b7fa830cce47c8b57594cd1feccaf6/partners/b5d3a5543aad44f5b19bbeb9c54b176e/documents/5e4889fa508942a5b35edaf65c6396e7/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 03:25:40.031" endtime="20210322 03:25:40.031"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:25:40.031" level="INFO">d2bc7e0798a39b0f</msg>
<status status="PASS" starttime="20210322 03:25:40.031" endtime="20210322 03:25:40.032"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:25:40.032" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:25:40.032" endtime="20210322 03:25:40.032"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 03:25:40.034" level="INFO">${document_external_key} = 5e4889fa508942a5b35edaf65c6396e7</msg>
<status status="PASS" starttime="20210322 03:25:40.033" endtime="20210322 03:25:40.035"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 03:25:40.035" level="INFO">${document_external_key} = 5e4889fa508942a5b35edaf65c6396e7</msg>
<status status="PASS" starttime="20210322 03:25:40.035" endtime="20210322 03:25:40.035"></status>
</kw>
<status status="PASS" starttime="20210322 03:25:39.737" endtime="20210322 03:25:40.035"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 03:25:40.037" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:25:40.036" endtime="20210322 03:25:40.037"></status>
</kw>
<kw name="criar partner document" library="accreditation_post_partner_document">
<arguments>
<arg>RG_VERSO</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:25:40.038" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 03:25:40.037" endtime="20210322 03:25:40.038"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 03:25:40.038" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 03:25:40.039" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 03:25:40.038" endtime="20210322 03:25:40.040"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/partners/${partner_externaL_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:25:40.040" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/d1b7fa830cce47c8b57594cd1feccaf6/partners/b5d3a5543aad44f5b19bbeb9c54b176e/documents?type=RG_VERSO, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 03:25:40.313" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:25:40.040" endtime="20210322 03:25:40.313"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:25:40.316" level="INFO">{'id': '072fabb2d10046878a414c1cf7e2fbe9', 'document_type': 'rg_verso', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/d1b7fa830cce47c8b57594cd1feccaf6/partners/b5d3a5543aad44f5b19bbeb9c54b176e/documents/072fabb2d10046878a414c1cf7e2fbe9', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/d1b7fa830cce47c8b57594cd1feccaf6', 'type': 'GET'}, 'partner': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/d1b7fa830cce47c8b57594cd1feccaf6/partners/b5d3a5543aad44f5b19bbeb9c54b176e', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/d1b7fa830cce47c8b57594cd1feccaf6/partners/b5d3a5543aad44f5b19bbeb9c54b176e/documents/072fabb2d10046878a414c1cf7e2fbe9/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 03:25:40.314" endtime="20210322 03:25:40.316"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:25:40.317" level="INFO">c53aa9e1dc1eda4f</msg>
<status status="PASS" starttime="20210322 03:25:40.316" endtime="20210322 03:25:40.317"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:25:40.320" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:25:40.318" endtime="20210322 03:25:40.320"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 03:25:40.322" level="INFO">${document_external_key} = 072fabb2d10046878a414c1cf7e2fbe9</msg>
<status status="PASS" starttime="20210322 03:25:40.320" endtime="20210322 03:25:40.322"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 03:25:40.324" level="INFO">${document_external_key} = 072fabb2d10046878a414c1cf7e2fbe9</msg>
<status status="PASS" starttime="20210322 03:25:40.323" endtime="20210322 03:25:40.324"></status>
</kw>
<status status="PASS" starttime="20210322 03:25:40.037" endtime="20210322 03:25:40.324"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 03:25:40.325" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:25:40.325" endtime="20210322 03:25:40.326"></status>
</kw>
<kw name="solicitar aprovação do holder" library="accreditation_request_approval">
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:25:40.328" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 03:25:40.327" endtime="20210322 03:25:40.328"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/approval</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:25:40.330" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/d1b7fa830cce47c8b57594cd1feccaf6/approval, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data=None 
json=None</msg>
<msg timestamp="20210322 03:25:40.617" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:25:40.329" endtime="20210322 03:25:40.617"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:25:40.618" level="INFO">{'message': 'Approval request accepted successfully. Processing analysis'}</msg>
<status status="PASS" starttime="20210322 03:25:40.617" endtime="20210322 03:25:40.618"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:25:40.618" level="INFO">21cea507712bc396</msg>
<status status="PASS" starttime="20210322 03:25:40.618" endtime="20210322 03:25:40.618"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:25:40.619" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:25:40.618" endtime="20210322 03:25:40.619"></status>
</kw>
<status status="PASS" starttime="20210322 03:25:40.326" endtime="20210322 03:25:40.619"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 03:25:40.619" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:25:40.619" endtime="20210322 03:25:40.619"></status>
</kw>
<kw name="recebendo notificação de aprovação" library="accreditation_risk_notification">
<kw name="Uuid 4" library="FakerLibrary">
<doc>Generates a random UUID4 string.
:param cast_to: Specify what type the UUID should be cast to. Default is `str`
:type cast_to: callable</doc>
<assign>
<var>${assessment_id}</var>
</assign>
<msg timestamp="20210322 03:25:40.620" level="INFO">${assessment_id} = 7b84d0fa-d41b-4f6f-95a5-92aaae0f5968</msg>
<status status="PASS" starttime="20210322 03:25:40.620" endtime="20210322 03:25:40.620"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>year</arg>
</arguments>
<assign>
<var>${year}</var>
</assign>
<msg timestamp="20210322 03:25:40.620" level="INFO">${year} = 2021</msg>
<status status="PASS" starttime="20210322 03:25:40.620" endtime="20210322 03:25:40.620"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>month</arg>
</arguments>
<assign>
<var>${month}</var>
</assign>
<msg timestamp="20210322 03:25:40.621" level="INFO">${month} = 03</msg>
<status status="PASS" starttime="20210322 03:25:40.620" endtime="20210322 03:25:40.621"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>day</arg>
</arguments>
<assign>
<var>${day}</var>
</assign>
<msg timestamp="20210322 03:25:40.621" level="INFO">${day} = 22</msg>
<status status="PASS" starttime="20210322 03:25:40.621" endtime="20210322 03:25:40.621"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:25:40.622" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 03:25:40.621" endtime="20210322 03:25:40.622"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "risk.assessment.result",</arg>
<arg>"resource": "business.holder",</arg>
<arg>"created_at": "${year}-${month}-${day} 15:28:56.747Z",</arg>
<arg>"marketplace_id": "${marketplace_external_key}",</arg>
<arg>"object": {</arg>
<arg>"result": "APPROVED",</arg>
<arg>"holder_id": "${holder_external_key}",</arg>
<arg>"applicant_id": "${application_external_key}",</arg>
<arg>"assessment_id": "${assessment_id}"</arg>
<arg>}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 03:25:40.622" level="INFO">${body} = { "type": "risk.assessment.result", "resource": "business.holder", "created_at": "2021-03-22 15:28:56.747Z", "marketplace_id": "f71a8951368a4cc085cf7875ff44e61c", "object": { "result": "APPROVED", "ho...</msg>
<status status="PASS" starttime="20210322 03:25:40.622" endtime="20210322 03:25:40.622"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/admin/internal_operation/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/registration/approval</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:25:40.623" level="INFO">POST Request using : uri=/admin/internal_operation/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/d1b7fa830cce47c8b57594cd1feccaf6/registration/approval, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "risk.assessment.result", "resource": "business.holder", "created_at": "2021-03-22 15:28:56.747Z", "marketplace_id": "f71a8951368a4cc085cf7875ff44e61c", "object": { "result": "APPROVED", "holder_id": "d1b7fa830cce47c8b57594cd1feccaf6", "applicant_id": "bcc25a6751c14b52af1340d40dba78c5", "assessment_id": "7b84d0fa-d41b-4f6f-95a5-92aaae0f5968" } } 
json=None</msg>
<msg timestamp="20210322 03:25:40.820" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:25:40.623" endtime="20210322 03:25:40.820"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:25:40.822" level="INFO">{'message': 'Holder approved successfully'}</msg>
<status status="PASS" starttime="20210322 03:25:40.821" endtime="20210322 03:25:40.822"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:25:40.824" level="INFO">14c76e0c9e05b6f0</msg>
<status status="PASS" starttime="20210322 03:25:40.823" endtime="20210322 03:25:40.824"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:25:40.826" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:25:40.825" endtime="20210322 03:25:40.826"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 03:25:40.828" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:25:40.827" endtime="20210322 03:25:40.828"></status>
</kw>
<status status="PASS" starttime="20210322 03:25:40.619" endtime="20210322 03:25:40.828"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 03:25:40.829" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:25:40.829" endtime="20210322 03:25:40.830"></status>
</kw>
<kw name="buscar account por holder" library="accounts_get_accounts_by_holder">
<kw name="conectar accounts" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accounts</arg>
<arg>url=${account_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 03:25:40.832" level="INFO">Creating Session using : alias=accounts, url=https://banking-accounts-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 03:25:40.832" endtime="20210322 03:25:40.833"></status>
</kw>
<status status="PASS" starttime="20210322 03:25:40.831" endtime="20210322 03:25:40.833"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accounts</arg>
<arg>/marketplaces/${marketplace_external_key}/holders/${holder_external_key}/accounts</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:25:40.835" level="INFO">GET Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/holders/d1b7fa830cce47c8b57594cd1feccaf6/accounts, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 03:25:41.491" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:25:40.834" endtime="20210322 03:25:41.491"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:25:41.493" level="INFO">{'items': [{'id': 'e06f23bde9c74cf5a050ff1b8f3e8d82', 'holder': 'd1b7fa830cce47c8b57594cd1feccaf6', 'balance': '0.00', 'currency': 'BRL', 'routing_number': '001', 'number': '9639966619', 'status': 'active', 'metadata': {}, 'created_at': '2021-03-22T06:25:41.667492', 'updated_at': '2021-03-22T06:25:41.667492', 'primary': True, 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'uri': '/v2/marketplaces/f71a8951368a4cc085cf7875ff44e61c/accounts/e06f23bde9c74cf5a050ff1b8f3e8d82', 'resource': 'payment_account'}], 'has_more': False, 'limit': 100, 'total_pages': 1, 'page': 1, 'offset': 0, 'total': '1', 'query_count': '1'}</msg>
<status status="PASS" starttime="20210322 03:25:41.492" endtime="20210322 03:25:41.493"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:25:41.495" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:25:41.494" endtime="20210322 03:25:41.495"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["id"]}</arg>
</arguments>
<assign>
<var>${account_external_key}</var>
</assign>
<msg timestamp="20210322 03:25:41.497" level="INFO">${account_external_key} = e06f23bde9c74cf5a050ff1b8f3e8d82</msg>
<status status="PASS" starttime="20210322 03:25:41.496" endtime="20210322 03:25:41.497"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_external_key}</arg>
</arguments>
<msg timestamp="20210322 03:25:41.498" level="INFO">${account_external_key} = e06f23bde9c74cf5a050ff1b8f3e8d82</msg>
<status status="PASS" starttime="20210322 03:25:41.498" endtime="20210322 03:25:41.499"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["number"]}</arg>
</arguments>
<assign>
<var>${account_number}</var>
</assign>
<msg timestamp="20210322 03:25:41.500" level="INFO">${account_number} = 9639966619</msg>
<status status="PASS" starttime="20210322 03:25:41.499" endtime="20210322 03:25:41.500"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_number}</arg>
</arguments>
<msg timestamp="20210322 03:25:41.501" level="INFO">${account_number} = 9639966619</msg>
<status status="PASS" starttime="20210322 03:25:41.501" endtime="20210322 03:25:41.501"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["routing_number"]}</arg>
</arguments>
<assign>
<var>${account_routing_number}</var>
</assign>
<msg timestamp="20210322 03:25:41.503" level="INFO">${account_routing_number} = 001</msg>
<status status="PASS" starttime="20210322 03:25:41.502" endtime="20210322 03:25:41.503"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_routing_number}</arg>
</arguments>
<msg timestamp="20210322 03:25:41.504" level="INFO">${account_routing_number} = 001</msg>
<status status="PASS" starttime="20210322 03:25:41.503" endtime="20210322 03:25:41.504"></status>
</kw>
<status status="PASS" starttime="20210322 03:25:40.831" endtime="20210322 03:25:41.504"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 03:25:41.505" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:25:41.504" endtime="20210322 03:25:41.505"></status>
</kw>
<status status="PASS" starttime="20210322 03:25:37.289" endtime="20210322 03:25:41.505"></status>
</kw>
<kw name="criar chave pix" library="pix_dict_create_entry">
<arguments>
<arg>national_registration</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 03:25:41.507" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 03:25:41.506" endtime="20210322 03:25:41.507"></status>
</kw>
<status status="PASS" starttime="20210322 03:25:41.506" endtime="20210322 03:25:41.507"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${type}</arg>
</arguments>
<msg timestamp="20210322 03:25:41.508" level="INFO">${type} = national_registration</msg>
<status status="PASS" starttime="20210322 03:25:41.508" endtime="20210322 03:25:41.508"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210322 03:25:41.509" level="INFO">${value} = </msg>
<status status="PASS" starttime="20210322 03:25:41.508" endtime="20210322 03:25:41.509"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:25:41.510" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 03:25:41.509" endtime="20210322 03:25:41.510"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "${type}",</arg>
<arg>"value": "${value}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 03:25:41.510" level="INFO">${body} = { "type": "national_registration", "value": "" }</msg>
<status status="PASS" starttime="20210322 03:25:41.510" endtime="20210322 03:25:41.510"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:25:41.511" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/d1b7fa830cce47c8b57594cd1feccaf6/accounts/e06f23bde9c74cf5a050ff1b8f3e8d82/entries, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "national_registration", "value": "" } 
json=None</msg>
<msg timestamp="20210322 03:25:43.100" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:25:41.511" endtime="20210322 03:25:43.100"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:25:43.102" level="INFO">{'id': '9eb082af1a754ae6ba84ae09a206bbca', 'status': 'active', 'created_at': '2021-03-22T03:25:43.050', 'updated_at': '2021-03-22T03:25:43.050', 'key': {'value': '94532860000110', 'type': 'national_registration'}, 'account': {'id': 'e06f23bde9c74cf5a050ff1b8f3e8d82', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': 'd1b7fa830cce47c8b57594cd1feccaf6', 'owner': {'name': 'Nome Legal da Empresa', 'national_registration': '94532860000110', 'type': 'business'}, 'routing_number': '001', 'number': '9639966619', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}, 'resource': 'pix.entry'}</msg>
<status status="PASS" starttime="20210322 03:25:43.101" endtime="20210322 03:25:43.102"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:25:43.103" level="INFO">98705dd58ec05848</msg>
<status status="PASS" starttime="20210322 03:25:43.103" endtime="20210322 03:25:43.103"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 03:25:43.104" level="INFO">201</msg>
<status status="PASS" starttime="20210322 03:25:43.104" endtime="20210322 03:25:43.104"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:25:43.105" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:25:43.105" endtime="20210322 03:25:43.106"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${entry_external_key}</var>
</assign>
<msg timestamp="20210322 03:25:43.107" level="INFO">${entry_external_key} = 9eb082af1a754ae6ba84ae09a206bbca</msg>
<status status="PASS" starttime="20210322 03:25:43.106" endtime="20210322 03:25:43.107"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${entry_external_key}</arg>
</arguments>
<msg timestamp="20210322 03:25:43.108" level="INFO">${entry_external_key} = 9eb082af1a754ae6ba84ae09a206bbca</msg>
<status status="PASS" starttime="20210322 03:25:43.108" endtime="20210322 03:25:43.109"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["key"]["value"]}</arg>
</arguments>
<assign>
<var>${entry_key_value}</var>
</assign>
<msg timestamp="20210322 03:25:43.110" level="INFO">${entry_key_value} = 94532860000110</msg>
<status status="PASS" starttime="20210322 03:25:43.109" endtime="20210322 03:25:43.110"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${entry_key_value}</arg>
</arguments>
<msg timestamp="20210322 03:25:43.112" level="INFO">${entry_key_value} = 94532860000110</msg>
<status status="PASS" starttime="20210322 03:25:43.111" endtime="20210322 03:25:43.112"></status>
</kw>
<status status="PASS" starttime="20210322 03:25:41.505" endtime="20210322 03:25:43.112"></status>
</kw>
<kw name="buscar chave pix" library="pix_dict_get_entry">
<arguments>
<arg>${holder_external_key}</arg>
<arg>${account_external_key}</arg>
<arg>${entry_external_key}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 03:25:43.116" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 03:25:43.115" endtime="20210322 03:25:43.116"></status>
</kw>
<status status="PASS" starttime="20210322 03:25:43.114" endtime="20210322 03:25:43.116"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries/${entry_external_key}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:25:43.117" level="INFO">GET Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/d1b7fa830cce47c8b57594cd1feccaf6/accounts/e06f23bde9c74cf5a050ff1b8f3e8d82/entries/9eb082af1a754ae6ba84ae09a206bbca, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 03:25:43.775" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:25:43.117" endtime="20210322 03:25:43.775"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:25:43.776" level="INFO">{'id': '9eb082af1a754ae6ba84ae09a206bbca', 'status': 'active', 'created_at': '2021-03-22T03:25:43.050', 'updated_at': '2021-03-22T03:25:43.050', 'key': {'value': '94532860000110', 'type': 'national_registration'}, 'account': {'id': 'e06f23bde9c74cf5a050ff1b8f3e8d82', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': 'd1b7fa830cce47c8b57594cd1feccaf6', 'owner': {'name': 'Nome Legal da Empresa', 'national_registration': '94532860000110', 'type': 'business'}, 'routing_number': '001', 'number': '9639966619', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}, 'resource': 'pix.entry'}</msg>
<status status="PASS" starttime="20210322 03:25:43.775" endtime="20210322 03:25:43.776"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:25:43.776" level="INFO">e9e6503408d51bb0</msg>
<status status="PASS" starttime="20210322 03:25:43.776" endtime="20210322 03:25:43.776"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 03:25:43.776" level="INFO">200</msg>
<status status="PASS" starttime="20210322 03:25:43.776" endtime="20210322 03:25:43.777"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:25:43.778" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:25:43.777" endtime="20210322 03:25:43.778"></status>
</kw>
<status status="PASS" starttime="20210322 03:25:43.113" endtime="20210322 03:25:43.778"></status>
</kw>
<kw name="validar busca da chave pix" library="asserts">
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 03:25:43.779" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:25:43.778" endtime="20210322 03:25:43.779"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar status da chave</arg>
</arguments>
<msg timestamp="20210322 03:25:43.779" level="INFO">Validar status da chave</msg>
<status status="PASS" starttime="20210322 03:25:43.779" endtime="20210322 03:25:43.779"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${type}' == 'evp'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["status"]}</arg>
<arg>active</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'phone'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["status"]}</arg>
<arg>waiting_ownership_verification</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'email'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["status"]}</arg>
<arg>waiting_ownership_verification</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'national_registration'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["status"]}</arg>
<arg>active</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["status"]}</arg>
<arg>active</arg>
</arguments>
<status status="PASS" starttime="20210322 03:25:43.780" endtime="20210322 03:25:43.781"></status>
</kw>
<status status="PASS" starttime="20210322 03:25:43.779" endtime="20210322 03:25:43.781"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando Tipo da chave PIX</arg>
</arguments>
<msg timestamp="20210322 03:25:43.781" level="INFO">Validando Tipo da chave PIX</msg>
<status status="PASS" starttime="20210322 03:25:43.781" endtime="20210322 03:25:43.781"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${type}' == 'evp'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["type"]}</arg>
<arg>${type}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'phone'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["type"]}</arg>
<arg>${type}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'email'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["type"]}</arg>
<arg>${type}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'national_registration'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["type"]}</arg>
<arg>${type}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["key"]["type"]}</arg>
<arg>${type}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:25:43.782" endtime="20210322 03:25:43.782"></status>
</kw>
<status status="PASS" starttime="20210322 03:25:43.782" endtime="20210322 03:25:43.782"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando Valor da chave PIX</arg>
</arguments>
<msg timestamp="20210322 03:25:43.783" level="INFO">Validando Valor da chave PIX</msg>
<status status="PASS" starttime="20210322 03:25:43.782" endtime="20210322 03:25:43.783"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${type}' == 'evp'</arg>
<arg>Should Not Be Empty</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'phone'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${phone_pix}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'email'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${email_pix}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'national_registration'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${national_registration}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${national_registration}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:25:43.784" endtime="20210322 03:25:43.784"></status>
</kw>
<status status="PASS" starttime="20210322 03:25:43.783" endtime="20210322 03:25:43.784"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando dados da conta</arg>
</arguments>
<msg timestamp="20210322 03:25:43.784" level="INFO">Validando dados da conta</msg>
<status status="PASS" starttime="20210322 03:25:43.784" endtime="20210322 03:25:43.784"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["id"]}</arg>
<arg>${account_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:25:43.784" endtime="20210322 03:25:43.785"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["marketplace"]}</arg>
<arg>${marketplace_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:25:43.785" endtime="20210322 03:25:43.785"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["holder"]}</arg>
<arg>${holder_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:25:43.785" endtime="20210322 03:25:43.786"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["number"]}</arg>
<arg>${account_number}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:25:43.786" endtime="20210322 03:25:43.786"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["routing_number"]}</arg>
<arg>${account_routing_number}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:25:43.786" endtime="20210322 03:25:43.786"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["type"]}</arg>
<arg>CACC</arg>
</arguments>
<status status="PASS" starttime="20210322 03:25:43.787" endtime="20210322 03:25:43.787"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar Proprietário da Account Owner</arg>
</arguments>
<msg timestamp="20210322 03:25:43.787" level="INFO">Validar Proprietário da Account Owner</msg>
<status status="PASS" starttime="20210322 03:25:43.787" endtime="20210322 03:25:43.787"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${holder_type}' == 'individual'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["account"]["owner"]["name"]}</arg>
<arg>${holder_name}</arg>
<arg>ELSE IF</arg>
<arg>'${holder_type}' == 'business'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["account"]["owner"]["name"]}</arg>
<arg>${legal_name}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["account"]["owner"]["name"]}</arg>
<arg>${legal_name}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:25:43.787" endtime="20210322 03:25:43.788"></status>
</kw>
<status status="PASS" starttime="20210322 03:25:43.787" endtime="20210322 03:25:43.788"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar national_registration da Account Owner</arg>
</arguments>
<msg timestamp="20210322 03:25:43.788" level="INFO">Validar national_registration da Account Owner</msg>
<status status="PASS" starttime="20210322 03:25:43.788" endtime="20210322 03:25:43.788"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${holder_type}' == 'individual'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["account"]["owner"]["national_registration"]}</arg>
<arg>${national_registration}</arg>
<arg>ELSE IF</arg>
<arg>'${holder_type}' == 'business'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["account"]["owner"]["national_registration"]}</arg>
<arg>${national_registration}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["account"]["owner"]["national_registration"]}</arg>
<arg>${national_registration}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:25:43.788" endtime="20210322 03:25:43.788"></status>
</kw>
<status status="PASS" starttime="20210322 03:25:43.788" endtime="20210322 03:25:43.789"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar Holder Type do Account Owner</arg>
</arguments>
<msg timestamp="20210322 03:25:43.789" level="INFO">Validar Holder Type do Account Owner</msg>
<status status="PASS" starttime="20210322 03:25:43.789" endtime="20210322 03:25:43.789"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${holder_type}' == 'individual'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["account"]["owner"]["type"]}</arg>
<arg>${holder_type}</arg>
<arg>ELSE IF</arg>
<arg>'${holder_type}' == 'business'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["account"]["owner"]["type"]}</arg>
<arg>${holder_type}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["account"]["owner"]["type"]}</arg>
<arg>${holder_type}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:25:43.789" endtime="20210322 03:25:43.790"></status>
</kw>
<status status="PASS" starttime="20210322 03:25:43.789" endtime="20210322 03:25:43.790"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar PSP</arg>
</arguments>
<msg timestamp="20210322 03:25:43.790" level="INFO">Validar PSP</msg>
<status status="PASS" starttime="20210322 03:25:43.790" endtime="20210322 03:25:43.790"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["psp"]["code"]}</arg>
<arg>19468242</arg>
</arguments>
<status status="PASS" starttime="20210322 03:25:43.790" endtime="20210322 03:25:43.791"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["psp"]["name"]}</arg>
<arg>Zoop Tecnologia e Meios de Pagamento S.A.</arg>
</arguments>
<status status="PASS" starttime="20210322 03:25:43.791" endtime="20210322 03:25:43.791"></status>
</kw>
<status status="PASS" starttime="20210322 03:25:43.778" endtime="20210322 03:25:43.791"></status>
</kw>
<doc>Fluxo Básico</doc>
<tags>
<tag>regression_test</tag>
<tag>smoke_test</tag>
</tags>
<status status="PASS" starttime="20210322 03:25:37.289" endtime="20210322 03:25:43.791" critical="yes"></status>
</test>
<doc>Funcionalidade: Criar Chave de Endereçamento
Eu, como um Holder, portador de uma conta ativa em Banking
Desejo criar uma chave de endereçamento PIX associada à minha conta</doc>
<status status="PASS" starttime="20210322 03:25:16.236" endtime="20210322 03:25:43.792"></status>
</suite>
<suite id="s1-s1-s2" name="Confirmação de Propriedade" source="C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\tests\pix-dict\diretorio\Confirmação de Propriedade.robot">
<test id="s1-s1-s2-t1" name="Cenário: Confirmar propriedade de chave de endereçamento do tipo Phone">
<kw name="Random Number" library="FakerLibrary">
<doc>Returns a random number with 1 digit (default, when digits==None),
a random number with 0 to given number of digits, or a random number
with given number to given number of digits (when ``fix_len==True``).</doc>
<arguments>
<arg>digits=8</arg>
<arg>fix_len=True</arg>
</arguments>
<assign>
<var>${phone}</var>
</assign>
<msg timestamp="20210322 03:25:43.837" level="INFO">${phone} = 11459490</msg>
<status status="PASS" starttime="20210322 03:25:43.837" endtime="20210322 03:25:43.837"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>+55219${phone}</arg>
</arguments>
<assign>
<var>${phone_pix}</var>
</assign>
<msg timestamp="20210322 03:25:43.838" level="INFO">${phone_pix} = +5521911459490</msg>
<status status="PASS" starttime="20210322 03:25:43.837" endtime="20210322 03:25:43.838"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${phone_pix}</arg>
</arguments>
<msg timestamp="20210322 03:25:43.839" level="INFO">${phone_pix} = +5521911459490</msg>
<status status="PASS" starttime="20210322 03:25:43.839" endtime="20210322 03:25:43.839"></status>
</kw>
<kw name="criar holder individual ativo" library="accreditation_create_holder_active">
<kw name="conectar accreditation" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accreditation</arg>
<arg>url=${accreditation_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 03:25:43.839" level="INFO">Creating Session using : alias=accreditation, url=https://banking-accreditation-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 03:25:43.839" endtime="20210322 03:25:43.840"></status>
</kw>
<status status="PASS" starttime="20210322 03:25:43.839" endtime="20210322 03:25:43.840"></status>
</kw>
<kw name="Cpf" library="FakerLibrary">
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 03:25:43.841" level="INFO">${national_registration} = 691.245.078-49</msg>
<status status="PASS" starttime="20210322 03:25:43.841" endtime="20210322 03:25:43.841"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${national_registration}</arg>
<arg>.</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 03:25:43.841" level="INFO">${national_registration} = 691245078-49</msg>
<status status="PASS" starttime="20210322 03:25:43.841" endtime="20210322 03:25:43.841"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${national_registration}</arg>
<arg>-</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 03:25:43.842" level="INFO">${national_registration} = 69124507849</msg>
<status status="PASS" starttime="20210322 03:25:43.841" endtime="20210322 03:25:43.842"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${national_registration}</arg>
</arguments>
<msg timestamp="20210322 03:25:43.842" level="INFO">${national_registration} = 69124507849</msg>
<status status="PASS" starttime="20210322 03:25:43.842" endtime="20210322 03:25:43.842"></status>
</kw>
<kw name="Rg" library="FakerLibrary">
<doc>Brazilian RG, return plain numbers.
Check:  https://www.ngmatematica.com/2014/02/como-determinar-o-digito-verificador-do.html</doc>
<assign>
<var>${identity_card}</var>
</assign>
<msg timestamp="20210322 03:25:43.843" level="INFO">${identity_card} = 714586031</msg>
<status status="PASS" starttime="20210322 03:25:43.843" endtime="20210322 03:25:43.843"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${identity_card}</arg>
</arguments>
<msg timestamp="20210322 03:25:43.843" level="INFO">${identity_card} = 714586031</msg>
<status status="PASS" starttime="20210322 03:25:43.843" endtime="20210322 03:25:43.844"></status>
</kw>
<kw name="criar holder individual" library="accreditation_post_holder_individual">
<arguments>
<arg>holder_type=individual</arg>
<arg>holder_name=${holder_name}</arg>
<arg>email=${email}</arg>
<arg>national_registration=${national_registration}</arg>
<arg>revenue=${revenue}</arg>
<arg>birthday=${birthday}</arg>
<arg>mothers_name=${mothers_name}</arg>
<arg>identity_card=${identity_card}</arg>
<arg>pep=false</arg>
<arg>cbo=${cbo}</arg>
</arguments>
<kw name="conectar accreditation" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accreditation</arg>
<arg>url=${accreditation_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 03:25:43.846" level="INFO">Creating Session using : alias=accreditation, url=https://banking-accreditation-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 03:25:43.845" endtime="20210322 03:25:43.846"></status>
</kw>
<status status="PASS" starttime="20210322 03:25:43.845" endtime="20210322 03:25:43.846"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_type}</arg>
</arguments>
<msg timestamp="20210322 03:25:43.847" level="INFO">${holder_type} = individual</msg>
<status status="PASS" starttime="20210322 03:25:43.846" endtime="20210322 03:25:43.847"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_name}</arg>
</arguments>
<msg timestamp="20210322 03:25:43.847" level="INFO">${holder_name} = Holder de teste</msg>
<status status="PASS" starttime="20210322 03:25:43.847" endtime="20210322 03:25:43.847"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:25:43.848" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 03:25:43.847" endtime="20210322 03:25:43.849"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "${holder_type}",</arg>
<arg>"name": "${holder_name}",</arg>
<arg>"email": "${email}",</arg>
<arg>"national_registration": "${national_registration}",</arg>
<arg>"revenue": ${revenue},</arg>
<arg>"birthday": "${birthday}",</arg>
<arg>"mothers_name": "${mothers_name}",</arg>
<arg>"identity_card": "${identity_card}",</arg>
<arg>"pep": false,</arg>
<arg>"cbo": ${cbo}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 03:25:43.849" level="INFO">${body} = { "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "69124507849", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder",...</msg>
<status status="PASS" starttime="20210322 03:25:43.849" endtime="20210322 03:25:43.849"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:25:43.850" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "69124507849", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder", "identity_card": "714586031", "pep": false, "cbo": 821450 } 
json=None</msg>
<msg timestamp="20210322 03:25:44.521" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:25:43.849" endtime="20210322 03:25:44.521"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:25:44.522" level="INFO">{'id': 'b3aaea854e0c4c5399acc411290aba88', 'name': 'Holder de teste', 'revenue': 5500.0, 'email': 'teste@teste.com.br', 'status': 'waiting_info_and_documents', 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'marketplace_name': 'Marketplace de Teste', 'created_at': '2021-03-22T03:25:45.369702', 'updated_at': '2021-03-22T03:25:45.369704', 'type': 'individual', 'national_registration': '69124507849', 'birthday': '1988-04-23', 'mothers_name': 'Mãe do Holder', 'identity_card': '714586031', 'pep': False, 'cbo': '821450', '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/b3aaea854e0c4c5399acc411290aba88', 'type': 'GET'}, 'phones': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/b3aaea854e0c4c5399acc411290aba88/phones', 'type': 'GET'}, 'addresses': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/b3aaea854e0c4c5399acc411290aba88/addresses', 'type': 'GET'}, 'documents': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/b3aaea854e0c4c5399acc411290aba88/documents', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 03:25:44.521" endtime="20210322 03:25:44.522"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:25:44.522" level="INFO">1d77e0d3cc78a64d</msg>
<status status="PASS" starttime="20210322 03:25:44.522" endtime="20210322 03:25:44.522"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${body}</arg>
</arguments>
<msg timestamp="20210322 03:25:44.522" level="INFO">{ "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "69124507849", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder", "identity_card": "714586031", "pep": false, "cbo": 821450 }</msg>
<status status="PASS" starttime="20210322 03:25:44.522" endtime="20210322 03:25:44.523"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:25:44.523" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:25:44.523" endtime="20210322 03:25:44.523"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${holder_external_key}</var>
</assign>
<msg timestamp="20210322 03:25:44.524" level="INFO">${holder_external_key} = b3aaea854e0c4c5399acc411290aba88</msg>
<status status="PASS" starttime="20210322 03:25:44.523" endtime="20210322 03:25:44.524"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_external_key}</arg>
</arguments>
<msg timestamp="20210322 03:25:44.524" level="INFO">${holder_external_key} = b3aaea854e0c4c5399acc411290aba88</msg>
<status status="PASS" starttime="20210322 03:25:44.524" endtime="20210322 03:25:44.524"></status>
</kw>
<status status="PASS" starttime="20210322 03:25:43.844" endtime="20210322 03:25:44.524"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_name}</arg>
</arguments>
<msg timestamp="20210322 03:25:44.524" level="INFO">${holder_name} = Holder de teste</msg>
<status status="PASS" starttime="20210322 03:25:44.524" endtime="20210322 03:25:44.525"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 03:25:44.525" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:25:44.525" endtime="20210322 03:25:44.525"></status>
</kw>
<kw name="criar holder phone" library="accreditation_post_holder_phone">
<arguments>
<arg>21</arg>
<arg>51</arg>
<arg>996221236</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:25:44.526" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 03:25:44.525" endtime="20210322 03:25:44.526"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"area_code": "${phone_area_code}",</arg>
<arg>"country_code": "${phone_country_code}",</arg>
<arg>"number": "${phone_number}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 03:25:44.526" level="INFO">${body} = { "area_code": "21", "country_code": "51", "number": "996221236" }</msg>
<status status="PASS" starttime="20210322 03:25:44.526" endtime="20210322 03:25:44.526"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/phones</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:25:44.526" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/b3aaea854e0c4c5399acc411290aba88/phones, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "area_code": "21", "country_code": "51", "number": "996221236" } 
json=None</msg>
<msg timestamp="20210322 03:25:44.835" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:25:44.526" endtime="20210322 03:25:44.835"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:25:44.837" level="INFO">{'id': '56856af3f7d4488facedd270d4cd2590', 'area_code': '21', 'country_code': '51', 'number': '996221236', 'main': True, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/b3aaea854e0c4c5399acc411290aba88/phones/56856af3f7d4488facedd270d4cd2590', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/b3aaea854e0c4c5399acc411290aba88', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 03:25:44.835" endtime="20210322 03:25:44.837"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:25:44.837" level="INFO">9d42e9cc11f88998</msg>
<status status="PASS" starttime="20210322 03:25:44.837" endtime="20210322 03:25:44.838"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:25:44.838" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:25:44.838" endtime="20210322 03:25:44.838"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${phone_external_key}</var>
</assign>
<msg timestamp="20210322 03:25:44.838" level="INFO">${phone_external_key} = 56856af3f7d4488facedd270d4cd2590</msg>
<status status="PASS" starttime="20210322 03:25:44.838" endtime="20210322 03:25:44.838"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${phone_external_key}</arg>
</arguments>
<msg timestamp="20210322 03:25:44.838" level="INFO">${phone_external_key} = 56856af3f7d4488facedd270d4cd2590</msg>
<status status="PASS" starttime="20210322 03:25:44.838" endtime="20210322 03:25:44.838"></status>
</kw>
<status status="PASS" starttime="20210322 03:25:44.525" endtime="20210322 03:25:44.838"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 03:25:44.840" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:25:44.840" endtime="20210322 03:25:44.840"></status>
</kw>
<kw name="criar holder address" library="accreditation_post_holder_address">
<arguments>
<arg>Rio de Janeiro</arg>
<arg>Rio de Janeiro</arg>
<arg>Brasil</arg>
<arg>Bairro de Testes</arg>
<arg>Rua de Testes</arg>
<arg>90</arg>
<arg>apto 200</arg>
<arg>21550987</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:25:44.841" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 03:25:44.841" endtime="20210322 03:25:44.841"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"city": "${city}",</arg>
<arg>"state": "${state}",</arg>
<arg>"country": "${country}",</arg>
<arg>"neighborhood": "${neighborhood}",</arg>
<arg>"street": "${street}",</arg>
<arg>"number": "${number}",</arg>
<arg>"complement": "${complement}",</arg>
<arg>"postal_code": "${postal_code}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 03:25:44.842" level="INFO">${body} = { "city": "Rio de Janeiro", "state": "Rio de Janeiro", "country": "Brasil", "neighborhood": "Bairro de Testes", "street": "Rua de Testes", "number": "90", "complement": "apto 200", "postal_code": "215...</msg>
<status status="PASS" starttime="20210322 03:25:44.841" endtime="20210322 03:25:44.842"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/addresses</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:25:44.842" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/b3aaea854e0c4c5399acc411290aba88/addresses, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "city": "Rio de Janeiro", "state": "Rio de Janeiro", "country": "Brasil", "neighborhood": "Bairro de Testes", "street": "Rua de Testes", "number": "90", "complement": "apto 200", "postal_code": "21550987" } 
json=None</msg>
<msg timestamp="20210322 03:25:45.115" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:25:44.842" endtime="20210322 03:25:45.115"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:25:45.117" level="INFO">{'id': 'c6b78d8de2cf4eb0b1438964cb1b8957', 'street': 'Rua de Testes', 'number': '90', 'city': 'Rio de Janeiro', 'complement': 'apto 200', 'state': 'Rio de Janeiro', 'neighborhood': 'Bairro de Testes', 'postal_code': '21550987', 'country': 'Brasil', 'main': True, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/b3aaea854e0c4c5399acc411290aba88/addresses/c6b78d8de2cf4eb0b1438964cb1b8957', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/b3aaea854e0c4c5399acc411290aba88', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 03:25:45.115" endtime="20210322 03:25:45.117"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:25:45.117" level="INFO">d0ccc67bb64caac5</msg>
<status status="PASS" starttime="20210322 03:25:45.117" endtime="20210322 03:25:45.117"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:25:45.117" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:25:45.117" endtime="20210322 03:25:45.117"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${address_external_key}</var>
</assign>
<msg timestamp="20210322 03:25:45.119" level="INFO">${address_external_key} = c6b78d8de2cf4eb0b1438964cb1b8957</msg>
<status status="PASS" starttime="20210322 03:25:45.117" endtime="20210322 03:25:45.119"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${address_external_key}</arg>
</arguments>
<msg timestamp="20210322 03:25:45.121" level="INFO">${address_external_key} = c6b78d8de2cf4eb0b1438964cb1b8957</msg>
<status status="PASS" starttime="20210322 03:25:45.119" endtime="20210322 03:25:45.121"></status>
</kw>
<status status="PASS" starttime="20210322 03:25:44.840" endtime="20210322 03:25:45.121"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 03:25:45.121" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:25:45.121" endtime="20210322 03:25:45.121"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>SELFIE</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:25:45.122" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 03:25:45.122" endtime="20210322 03:25:45.122"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 03:25:45.122" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 03:25:45.122" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 03:25:45.122" endtime="20210322 03:25:45.124"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:25:45.125" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/b3aaea854e0c4c5399acc411290aba88/documents?type=SELFIE, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 03:25:45.398" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:25:45.124" endtime="20210322 03:25:45.398"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:25:45.400" level="INFO">{'id': 'af49bb1545f14e6fa90242274a37806c', 'document_type': 'selfie', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/b3aaea854e0c4c5399acc411290aba88/documents/af49bb1545f14e6fa90242274a37806c', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/b3aaea854e0c4c5399acc411290aba88', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/b3aaea854e0c4c5399acc411290aba88/documents/af49bb1545f14e6fa90242274a37806c/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 03:25:45.399" endtime="20210322 03:25:45.401"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:25:45.402" level="INFO">1471f81f7d00c391</msg>
<status status="PASS" starttime="20210322 03:25:45.401" endtime="20210322 03:25:45.403"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:25:45.404" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:25:45.403" endtime="20210322 03:25:45.404"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 03:25:45.407" level="INFO">${document_external_key} = af49bb1545f14e6fa90242274a37806c</msg>
<status status="PASS" starttime="20210322 03:25:45.405" endtime="20210322 03:25:45.407"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 03:25:45.409" level="INFO">${document_external_key} = af49bb1545f14e6fa90242274a37806c</msg>
<status status="PASS" starttime="20210322 03:25:45.408" endtime="20210322 03:25:45.409"></status>
</kw>
<status status="PASS" starttime="20210322 03:25:45.121" endtime="20210322 03:25:45.409"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 03:25:45.411" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:25:45.410" endtime="20210322 03:25:45.411"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>RG_FRENTE</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:25:45.413" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 03:25:45.412" endtime="20210322 03:25:45.413"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 03:25:45.414" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 03:25:45.417" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 03:25:45.413" endtime="20210322 03:25:45.417"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:25:45.418" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/b3aaea854e0c4c5399acc411290aba88/documents?type=RG_FRENTE, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 03:25:45.694" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:25:45.417" endtime="20210322 03:25:45.694"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:25:45.696" level="INFO">{'id': '766c211c780a4d5392c1a323cbba11d8', 'document_type': 'rg_frente', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/b3aaea854e0c4c5399acc411290aba88/documents/766c211c780a4d5392c1a323cbba11d8', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/b3aaea854e0c4c5399acc411290aba88', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/b3aaea854e0c4c5399acc411290aba88/documents/766c211c780a4d5392c1a323cbba11d8/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 03:25:45.694" endtime="20210322 03:25:45.697"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:25:45.698" level="INFO">fea5e3c11301e9b0</msg>
<status status="PASS" starttime="20210322 03:25:45.697" endtime="20210322 03:25:45.699"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:25:45.701" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:25:45.699" endtime="20210322 03:25:45.701"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 03:25:45.703" level="INFO">${document_external_key} = 766c211c780a4d5392c1a323cbba11d8</msg>
<status status="PASS" starttime="20210322 03:25:45.702" endtime="20210322 03:25:45.704"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 03:25:45.704" level="INFO">${document_external_key} = 766c211c780a4d5392c1a323cbba11d8</msg>
<status status="PASS" starttime="20210322 03:25:45.704" endtime="20210322 03:25:45.704"></status>
</kw>
<status status="PASS" starttime="20210322 03:25:45.411" endtime="20210322 03:25:45.706"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 03:25:45.706" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:25:45.706" endtime="20210322 03:25:45.706"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>RG_VERSO</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:25:45.709" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 03:25:45.709" endtime="20210322 03:25:45.709"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 03:25:45.710" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 03:25:45.713" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 03:25:45.710" endtime="20210322 03:25:45.713"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:25:45.715" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/b3aaea854e0c4c5399acc411290aba88/documents?type=RG_VERSO, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 03:25:45.979" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:25:45.713" endtime="20210322 03:25:45.979"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:25:45.982" level="INFO">{'id': '03551c9a1598499caae0d0a70089861e', 'document_type': 'rg_verso', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/b3aaea854e0c4c5399acc411290aba88/documents/03551c9a1598499caae0d0a70089861e', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/b3aaea854e0c4c5399acc411290aba88', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/b3aaea854e0c4c5399acc411290aba88/documents/03551c9a1598499caae0d0a70089861e/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 03:25:45.980" endtime="20210322 03:25:45.982"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:25:45.985" level="INFO">e19558e144a9b3cb</msg>
<status status="PASS" starttime="20210322 03:25:45.983" endtime="20210322 03:25:45.985"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:25:45.987" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:25:45.987" endtime="20210322 03:25:45.987"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 03:25:45.989" level="INFO">${document_external_key} = 03551c9a1598499caae0d0a70089861e</msg>
<status status="PASS" starttime="20210322 03:25:45.987" endtime="20210322 03:25:45.989"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 03:25:45.990" level="INFO">${document_external_key} = 03551c9a1598499caae0d0a70089861e</msg>
<status status="PASS" starttime="20210322 03:25:45.989" endtime="20210322 03:25:45.990"></status>
</kw>
<status status="PASS" starttime="20210322 03:25:45.707" endtime="20210322 03:25:45.990"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 03:25:45.991" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:25:45.991" endtime="20210322 03:25:45.992"></status>
</kw>
<kw name="solicitar aprovação do holder" library="accreditation_request_approval">
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:25:45.993" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 03:25:45.993" endtime="20210322 03:25:45.993"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/approval</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:25:45.994" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/b3aaea854e0c4c5399acc411290aba88/approval, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data=None 
json=None</msg>
<msg timestamp="20210322 03:25:46.277" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:25:45.994" endtime="20210322 03:25:46.278"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:25:46.281" level="INFO">{'message': 'Approval request accepted successfully. Processing analysis'}</msg>
<status status="PASS" starttime="20210322 03:25:46.279" endtime="20210322 03:25:46.281"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:25:46.283" level="INFO">1638defbb72ef813</msg>
<status status="PASS" starttime="20210322 03:25:46.282" endtime="20210322 03:25:46.283"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:25:46.286" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:25:46.284" endtime="20210322 03:25:46.286"></status>
</kw>
<status status="PASS" starttime="20210322 03:25:45.992" endtime="20210322 03:25:46.286"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 03:25:46.288" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:25:46.287" endtime="20210322 03:25:46.288"></status>
</kw>
<kw name="recebendo notificação de aprovação" library="accreditation_risk_notification">
<kw name="Uuid 4" library="FakerLibrary">
<doc>Generates a random UUID4 string.
:param cast_to: Specify what type the UUID should be cast to. Default is `str`
:type cast_to: callable</doc>
<assign>
<var>${assessment_id}</var>
</assign>
<msg timestamp="20210322 03:25:46.290" level="INFO">${assessment_id} = 27500acf-ac4f-41a5-aaae-525d31f174ce</msg>
<status status="PASS" starttime="20210322 03:25:46.290" endtime="20210322 03:25:46.290"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>year</arg>
</arguments>
<assign>
<var>${year}</var>
</assign>
<msg timestamp="20210322 03:25:46.292" level="INFO">${year} = 2021</msg>
<status status="PASS" starttime="20210322 03:25:46.291" endtime="20210322 03:25:46.292"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>month</arg>
</arguments>
<assign>
<var>${month}</var>
</assign>
<msg timestamp="20210322 03:25:46.293" level="INFO">${month} = 03</msg>
<status status="PASS" starttime="20210322 03:25:46.292" endtime="20210322 03:25:46.293"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>day</arg>
</arguments>
<assign>
<var>${day}</var>
</assign>
<msg timestamp="20210322 03:25:46.293" level="INFO">${day} = 22</msg>
<status status="PASS" starttime="20210322 03:25:46.293" endtime="20210322 03:25:46.293"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:25:46.294" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 03:25:46.294" endtime="20210322 03:25:46.294"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "risk.assessment.result",</arg>
<arg>"resource": "business.holder",</arg>
<arg>"created_at": "${year}-${month}-${day} 15:28:56.747Z",</arg>
<arg>"marketplace_id": "${marketplace_external_key}",</arg>
<arg>"object": {</arg>
<arg>"result": "APPROVED",</arg>
<arg>"holder_id": "${holder_external_key}",</arg>
<arg>"applicant_id": "${application_external_key}",</arg>
<arg>"assessment_id": "${assessment_id}"</arg>
<arg>}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 03:25:46.295" level="INFO">${body} = { "type": "risk.assessment.result", "resource": "business.holder", "created_at": "2021-03-22 15:28:56.747Z", "marketplace_id": "f71a8951368a4cc085cf7875ff44e61c", "object": { "result": "APPROVED", "ho...</msg>
<status status="PASS" starttime="20210322 03:25:46.295" endtime="20210322 03:25:46.295"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/admin/internal_operation/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/registration/approval</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:25:46.295" level="INFO">POST Request using : uri=/admin/internal_operation/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/b3aaea854e0c4c5399acc411290aba88/registration/approval, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "risk.assessment.result", "resource": "business.holder", "created_at": "2021-03-22 15:28:56.747Z", "marketplace_id": "f71a8951368a4cc085cf7875ff44e61c", "object": { "result": "APPROVED", "holder_id": "b3aaea854e0c4c5399acc411290aba88", "applicant_id": "bcc25a6751c14b52af1340d40dba78c5", "assessment_id": "27500acf-ac4f-41a5-aaae-525d31f174ce" } } 
json=None</msg>
<msg timestamp="20210322 03:25:46.504" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:25:46.295" endtime="20210322 03:25:46.505"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:25:46.507" level="INFO">{'message': 'Holder approved successfully'}</msg>
<status status="PASS" starttime="20210322 03:25:46.506" endtime="20210322 03:25:46.507"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:25:46.509" level="INFO">050da3d63842cb1e</msg>
<status status="PASS" starttime="20210322 03:25:46.508" endtime="20210322 03:25:46.509"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:25:46.511" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:25:46.510" endtime="20210322 03:25:46.511"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 03:25:46.513" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:25:46.512" endtime="20210322 03:25:46.514"></status>
</kw>
<status status="PASS" starttime="20210322 03:25:46.288" endtime="20210322 03:25:46.514"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 03:25:46.516" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:25:46.514" endtime="20210322 03:25:46.516"></status>
</kw>
<kw name="buscar account por holder" library="accounts_get_accounts_by_holder">
<kw name="conectar accounts" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accounts</arg>
<arg>url=${account_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 03:25:46.519" level="INFO">Creating Session using : alias=accounts, url=https://banking-accounts-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 03:25:46.518" endtime="20210322 03:25:46.519"></status>
</kw>
<status status="PASS" starttime="20210322 03:25:46.517" endtime="20210322 03:25:46.519"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accounts</arg>
<arg>/marketplaces/${marketplace_external_key}/holders/${holder_external_key}/accounts</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:25:46.520" level="INFO">GET Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/holders/b3aaea854e0c4c5399acc411290aba88/accounts, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 03:25:47.165" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:25:46.520" endtime="20210322 03:25:47.165"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:25:47.165" level="INFO">{'items': [{'id': 'd334412aa88d4929b195e6bfbf7d794c', 'holder': 'b3aaea854e0c4c5399acc411290aba88', 'balance': '0.00', 'currency': 'BRL', 'routing_number': '001', 'number': '5959002756', 'status': 'active', 'metadata': {}, 'created_at': '2021-03-22T06:25:47.342005', 'updated_at': '2021-03-22T06:25:47.342005', 'primary': True, 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'uri': '/v2/marketplaces/f71a8951368a4cc085cf7875ff44e61c/accounts/d334412aa88d4929b195e6bfbf7d794c', 'resource': 'payment_account'}], 'has_more': False, 'limit': 100, 'total_pages': 1, 'page': 1, 'offset': 0, 'total': '1', 'query_count': '1'}</msg>
<status status="PASS" starttime="20210322 03:25:47.165" endtime="20210322 03:25:47.165"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:25:47.166" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:25:47.165" endtime="20210322 03:25:47.166"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["id"]}</arg>
</arguments>
<assign>
<var>${account_external_key}</var>
</assign>
<msg timestamp="20210322 03:25:47.166" level="INFO">${account_external_key} = d334412aa88d4929b195e6bfbf7d794c</msg>
<status status="PASS" starttime="20210322 03:25:47.166" endtime="20210322 03:25:47.166"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_external_key}</arg>
</arguments>
<msg timestamp="20210322 03:25:47.167" level="INFO">${account_external_key} = d334412aa88d4929b195e6bfbf7d794c</msg>
<status status="PASS" starttime="20210322 03:25:47.166" endtime="20210322 03:25:47.167"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["number"]}</arg>
</arguments>
<assign>
<var>${account_number}</var>
</assign>
<msg timestamp="20210322 03:25:47.168" level="INFO">${account_number} = 5959002756</msg>
<status status="PASS" starttime="20210322 03:25:47.168" endtime="20210322 03:25:47.168"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_number}</arg>
</arguments>
<msg timestamp="20210322 03:25:47.168" level="INFO">${account_number} = 5959002756</msg>
<status status="PASS" starttime="20210322 03:25:47.168" endtime="20210322 03:25:47.168"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["routing_number"]}</arg>
</arguments>
<assign>
<var>${account_routing_number}</var>
</assign>
<msg timestamp="20210322 03:25:47.168" level="INFO">${account_routing_number} = 001</msg>
<status status="PASS" starttime="20210322 03:25:47.168" endtime="20210322 03:25:47.168"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_routing_number}</arg>
</arguments>
<msg timestamp="20210322 03:25:47.168" level="INFO">${account_routing_number} = 001</msg>
<status status="PASS" starttime="20210322 03:25:47.168" endtime="20210322 03:25:47.168"></status>
</kw>
<status status="PASS" starttime="20210322 03:25:46.516" endtime="20210322 03:25:47.168"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 03:25:47.170" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:25:47.170" endtime="20210322 03:25:47.170"></status>
</kw>
<status status="PASS" starttime="20210322 03:25:43.839" endtime="20210322 03:25:47.170"></status>
</kw>
<kw name="criar chave pix" library="pix_dict_create_entry">
<arguments>
<arg>phone</arg>
<arg>${phone_pix}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 03:25:47.171" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 03:25:47.171" endtime="20210322 03:25:47.171"></status>
</kw>
<status status="PASS" starttime="20210322 03:25:47.171" endtime="20210322 03:25:47.171"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${type}</arg>
</arguments>
<msg timestamp="20210322 03:25:47.172" level="INFO">${type} = phone</msg>
<status status="PASS" starttime="20210322 03:25:47.172" endtime="20210322 03:25:47.172"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210322 03:25:47.172" level="INFO">${value} = +5521911459490</msg>
<status status="PASS" starttime="20210322 03:25:47.172" endtime="20210322 03:25:47.172"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:25:47.173" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 03:25:47.172" endtime="20210322 03:25:47.173"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "${type}",</arg>
<arg>"value": "${value}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 03:25:47.173" level="INFO">${body} = { "type": "phone", "value": "+5521911459490" }</msg>
<status status="PASS" starttime="20210322 03:25:47.173" endtime="20210322 03:25:47.173"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:25:47.174" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/b3aaea854e0c4c5399acc411290aba88/accounts/d334412aa88d4929b195e6bfbf7d794c/entries, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "phone", "value": "+5521911459490" } 
json=None</msg>
<msg timestamp="20210322 03:25:47.844" level="INFO">${response} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20210322 03:25:47.173" endtime="20210322 03:25:47.844"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:25:47.846" level="INFO">{'id': 'cac965baa54d45108d16f86feccb972f', 'status': 'waiting_ownership_verification', 'created_at': '2021-03-22T03:25:48.708', 'updated_at': '2021-03-22T03:25:48.708', 'key': {'value': '+5521911459490', 'type': 'phone'}, 'account': {'id': 'd334412aa88d4929b195e6bfbf7d794c', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': 'b3aaea854e0c4c5399acc411290aba88', 'owner': {'name': 'Holder de teste', 'national_registration': '69124507849', 'type': 'individual'}, 'routing_number': '001', 'number': '5959002756', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}, 'resource': 'pix.entry'}</msg>
<status status="PASS" starttime="20210322 03:25:47.845" endtime="20210322 03:25:47.847"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:25:47.848" level="INFO">9de3bedfa610e305</msg>
<status status="PASS" starttime="20210322 03:25:47.847" endtime="20210322 03:25:47.848"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 03:25:47.850" level="INFO">202</msg>
<status status="PASS" starttime="20210322 03:25:47.849" endtime="20210322 03:25:47.850"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:25:47.851" level="INFO">${response} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20210322 03:25:47.850" endtime="20210322 03:25:47.852"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${entry_external_key}</var>
</assign>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:25:47.854" endtime="20210322 03:25:47.856"></status>
</kw>
<msg timestamp="20210322 03:25:47.856" level="INFO">${entry_external_key} = cac965baa54d45108d16f86feccb972f</msg>
<status status="PASS" starttime="20210322 03:25:47.852" endtime="20210322 03:25:47.856"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${entry_external_key}</arg>
</arguments>
<msg timestamp="20210322 03:25:47.857" level="INFO">${entry_external_key} = cac965baa54d45108d16f86feccb972f</msg>
<status status="PASS" starttime="20210322 03:25:47.856" endtime="20210322 03:25:47.857"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["key"]["value"]}</arg>
</arguments>
<assign>
<var>${entry_key_value}</var>
</assign>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["key"]["value"]}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:25:47.858" endtime="20210322 03:25:47.859"></status>
</kw>
<msg timestamp="20210322 03:25:47.859" level="INFO">${entry_key_value} = +5521911459490</msg>
<status status="PASS" starttime="20210322 03:25:47.857" endtime="20210322 03:25:47.859"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${entry_key_value}</arg>
</arguments>
<msg timestamp="20210322 03:25:47.859" level="INFO">${entry_key_value} = +5521911459490</msg>
<status status="PASS" starttime="20210322 03:25:47.859" endtime="20210322 03:25:47.860"></status>
</kw>
<status status="PASS" starttime="20210322 03:25:47.170" endtime="20210322 03:25:47.860"></status>
</kw>
<kw name="validar criação da chave pix" library="asserts">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando status_code</arg>
</arguments>
<msg timestamp="20210322 03:25:47.861" level="INFO">Validando status_code</msg>
<status status="PASS" starttime="20210322 03:25:47.861" endtime="20210322 03:25:47.861"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${type}' == 'evp'</arg>
<arg>Should Be Equal As Integers</arg>
<arg>${response.status_code}</arg>
<arg>201</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'phone'</arg>
<arg>Should Be Equal As Integers</arg>
<arg>${response.status_code}</arg>
<arg>202</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'email'</arg>
<arg>Should Be Equal As Integers</arg>
<arg>${response.status_code}</arg>
<arg>202</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'national_registration'</arg>
<arg>Should Be Equal As Integers</arg>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>202</arg>
</arguments>
<msg timestamp="20210322 03:25:47.863" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:25:47.862" endtime="20210322 03:25:47.863"></status>
</kw>
<status status="PASS" starttime="20210322 03:25:47.861" endtime="20210322 03:25:47.863"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar status da chave</arg>
</arguments>
<msg timestamp="20210322 03:25:47.863" level="INFO">Validar status da chave</msg>
<status status="PASS" starttime="20210322 03:25:47.863" endtime="20210322 03:25:47.863"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${type}' == 'evp'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["status"]}</arg>
<arg>active</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'phone'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["status"]}</arg>
<arg>waiting_ownership_verification</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'email'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["status"]}</arg>
<arg>waiting_ownership_verification</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'national_registration'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["status"]}</arg>
<arg>active</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["status"]}</arg>
<arg>waiting_ownership_verification</arg>
</arguments>
<status status="PASS" starttime="20210322 03:25:47.864" endtime="20210322 03:25:47.865"></status>
</kw>
<status status="PASS" starttime="20210322 03:25:47.864" endtime="20210322 03:25:47.865"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando Tipo da chave PIX</arg>
</arguments>
<msg timestamp="20210322 03:25:47.865" level="INFO">Validando Tipo da chave PIX</msg>
<status status="PASS" starttime="20210322 03:25:47.865" endtime="20210322 03:25:47.865"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${type}' == 'evp'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["type"]}</arg>
<arg>${type}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'phone'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["type"]}</arg>
<arg>${type}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'email'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["type"]}</arg>
<arg>${type}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'national_registration'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["type"]}</arg>
<arg>${type}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["key"]["type"]}</arg>
<arg>${type}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:25:47.867" endtime="20210322 03:25:47.867"></status>
</kw>
<status status="PASS" starttime="20210322 03:25:47.866" endtime="20210322 03:25:47.867"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando Valor da chave PIX</arg>
</arguments>
<msg timestamp="20210322 03:25:47.868" level="INFO">Validando Valor da chave PIX</msg>
<status status="PASS" starttime="20210322 03:25:47.867" endtime="20210322 03:25:47.868"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${type}' == 'evp'</arg>
<arg>Should Not Be Empty</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'phone'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${phone_pix}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'email'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${email_pix}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'national_registration'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${national_registration}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${phone_pix}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:25:47.869" endtime="20210322 03:25:47.869"></status>
</kw>
<status status="PASS" starttime="20210322 03:25:47.868" endtime="20210322 03:25:47.869"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando dados da conta</arg>
</arguments>
<msg timestamp="20210322 03:25:47.870" level="INFO">Validando dados da conta</msg>
<status status="PASS" starttime="20210322 03:25:47.870" endtime="20210322 03:25:47.870"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["id"]}</arg>
<arg>${account_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:25:47.870" endtime="20210322 03:25:47.871"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["marketplace"]}</arg>
<arg>${marketplace_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:25:47.871" endtime="20210322 03:25:47.871"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["holder"]}</arg>
<arg>${holder_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:25:47.871" endtime="20210322 03:25:47.872"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["number"]}</arg>
<arg>${account_number}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:25:47.872" endtime="20210322 03:25:47.872"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["routing_number"]}</arg>
<arg>${account_routing_number}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:25:47.873" endtime="20210322 03:25:47.873"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["type"]}</arg>
<arg>CACC</arg>
</arguments>
<status status="PASS" starttime="20210322 03:25:47.873" endtime="20210322 03:25:47.873"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar Proprietário da Account Owner</arg>
</arguments>
<msg timestamp="20210322 03:25:47.874" level="INFO">Validar Proprietário da Account Owner</msg>
<status status="PASS" starttime="20210322 03:25:47.874" endtime="20210322 03:25:47.874"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${holder_type}' == 'individual'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["account"]["owner"]["name"]}</arg>
<arg>${holder_name}</arg>
<arg>ELSE IF</arg>
<arg>'${holder_type}' == 'business'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["account"]["owner"]["name"]}</arg>
<arg>${legal_name}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["account"]["owner"]["name"]}</arg>
<arg>${holder_name}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:25:47.875" endtime="20210322 03:25:47.875"></status>
</kw>
<status status="PASS" starttime="20210322 03:25:47.874" endtime="20210322 03:25:47.875"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar national_registration da Account Owner</arg>
</arguments>
<msg timestamp="20210322 03:25:47.875" level="INFO">Validar national_registration da Account Owner</msg>
<status status="PASS" starttime="20210322 03:25:47.875" endtime="20210322 03:25:47.876"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${holder_type}' == 'individual'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["account"]["owner"]["national_registration"]}</arg>
<arg>${national_registration}</arg>
<arg>ELSE IF</arg>
<arg>'${holder_type}' == 'business'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["account"]["owner"]["national_registration"]}</arg>
<arg>${national_registration}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["account"]["owner"]["national_registration"]}</arg>
<arg>${national_registration}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:25:47.876" endtime="20210322 03:25:47.877"></status>
</kw>
<status status="PASS" starttime="20210322 03:25:47.876" endtime="20210322 03:25:47.877"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar Holder Type do Account Owner</arg>
</arguments>
<msg timestamp="20210322 03:25:47.877" level="INFO">Validar Holder Type do Account Owner</msg>
<status status="PASS" starttime="20210322 03:25:47.877" endtime="20210322 03:25:47.877"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${holder_type}' == 'individual'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["account"]["owner"]["type"]}</arg>
<arg>${holder_type}</arg>
<arg>ELSE IF</arg>
<arg>'${holder_type}' == 'business'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["account"]["owner"]["type"]}</arg>
<arg>${holder_type}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["account"]["owner"]["type"]}</arg>
<arg>${holder_type}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:25:47.878" endtime="20210322 03:25:47.878"></status>
</kw>
<status status="PASS" starttime="20210322 03:25:47.877" endtime="20210322 03:25:47.878"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar PSP</arg>
</arguments>
<msg timestamp="20210322 03:25:47.879" level="INFO">Validar PSP</msg>
<status status="PASS" starttime="20210322 03:25:47.878" endtime="20210322 03:25:47.879"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["psp"]["code"]}</arg>
<arg>19468242</arg>
</arguments>
<status status="PASS" starttime="20210322 03:25:47.879" endtime="20210322 03:25:47.879"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["psp"]["name"]}</arg>
<arg>Zoop Tecnologia e Meios de Pagamento S.A.</arg>
</arguments>
<status status="PASS" starttime="20210322 03:25:47.879" endtime="20210322 03:25:47.880"></status>
</kw>
<status status="PASS" starttime="20210322 03:25:47.860" endtime="20210322 03:25:47.880"></status>
</kw>
<kw name="buscar verification code" library="pix_dict_verification_code">
<arguments>
<arg>${holder_external_key}</arg>
<arg>${account_external_key}</arg>
<arg>${entry_external_key}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 03:25:47.881" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 03:25:47.881" endtime="20210322 03:25:47.882"></status>
</kw>
<status status="PASS" starttime="20210322 03:25:47.881" endtime="20210322 03:25:47.882"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/admin/internal_operation/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries/${entry_external_key}/code</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:25:47.882" level="INFO">GET Request using : uri=/admin/internal_operation/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/b3aaea854e0c4c5399acc411290aba88/accounts/d334412aa88d4929b195e6bfbf7d794c/entries/cac965baa54d45108d16f86feccb972f/code, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 03:25:48.521" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:25:47.882" endtime="20210322 03:25:48.521"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:25:48.523" level="INFO">{'code': '4072'}</msg>
<status status="PASS" starttime="20210322 03:25:48.522" endtime="20210322 03:25:48.524"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:25:48.526" level="INFO">4193879494f6c953</msg>
<status status="PASS" starttime="20210322 03:25:48.525" endtime="20210322 03:25:48.526"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 03:25:48.528" level="INFO">200</msg>
<status status="PASS" starttime="20210322 03:25:48.527" endtime="20210322 03:25:48.528"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:25:48.530" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:25:48.529" endtime="20210322 03:25:48.530"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["code"]}</arg>
</arguments>
<assign>
<var>${verification_code}</var>
</assign>
<msg timestamp="20210322 03:25:48.532" level="INFO">${verification_code} = 4072</msg>
<status status="PASS" starttime="20210322 03:25:48.531" endtime="20210322 03:25:48.533"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${verification_code}</arg>
</arguments>
<msg timestamp="20210322 03:25:48.534" level="INFO">${verification_code} = 4072</msg>
<status status="PASS" starttime="20210322 03:25:48.533" endtime="20210322 03:25:48.534"></status>
</kw>
<status status="PASS" starttime="20210322 03:25:47.880" endtime="20210322 03:25:48.534"></status>
</kw>
<kw name="confirmar propriedade da chave pix" library="pix_dict_confirm_propriety">
<arguments>
<arg>${verification_code}</arg>
<arg>${holder_external_key}</arg>
<arg>${account_external_key}</arg>
<arg>${entry_external_key}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 03:25:48.537" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 03:25:48.537" endtime="20210322 03:25:48.538"></status>
</kw>
<status status="PASS" starttime="20210322 03:25:48.536" endtime="20210322 03:25:48.538"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:25:48.539" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 03:25:48.539" endtime="20210322 03:25:48.539"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"code": "${verification_code}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 03:25:48.540" level="INFO">${body} = { "code": "4072" }</msg>
<status status="PASS" starttime="20210322 03:25:48.540" endtime="20210322 03:25:48.540"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries/${entry_external_key}/ownership</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:25:48.541" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/b3aaea854e0c4c5399acc411290aba88/accounts/d334412aa88d4929b195e6bfbf7d794c/entries/cac965baa54d45108d16f86feccb972f/ownership, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "code": "4072" } 
json=None</msg>
<msg timestamp="20210322 03:25:50.092" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:25:48.541" endtime="20210322 03:25:50.092"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:25:50.095" level="INFO">{'id': 'cac965baa54d45108d16f86feccb972f', 'status': 'active', 'created_at': '2021-03-22T03:25:48.708', 'updated_at': '2021-03-22T03:25:50.973', 'key': {'value': '+5521911459490', 'type': 'phone'}, 'account': {'id': 'd334412aa88d4929b195e6bfbf7d794c', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': 'b3aaea854e0c4c5399acc411290aba88', 'owner': {'name': 'Holder de teste', 'national_registration': '69124507849', 'type': 'individual'}, 'routing_number': '001', 'number': '5959002756', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}, 'resource': 'pix.entry'}</msg>
<status status="PASS" starttime="20210322 03:25:50.093" endtime="20210322 03:25:50.095"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:25:50.097" level="INFO">0ea2d5a3a778005c</msg>
<status status="PASS" starttime="20210322 03:25:50.097" endtime="20210322 03:25:50.097"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 03:25:50.100" level="INFO">201</msg>
<status status="PASS" starttime="20210322 03:25:50.098" endtime="20210322 03:25:50.100"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:25:50.100" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:25:50.100" endtime="20210322 03:25:50.101"></status>
</kw>
<status status="PASS" starttime="20210322 03:25:48.535" endtime="20210322 03:25:50.101"></status>
</kw>
<kw name="validar ativação da chave de endereçamento" library="asserts">
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["status"]}</arg>
<arg>active</arg>
</arguments>
<status status="PASS" starttime="20210322 03:25:50.102" endtime="20210322 03:25:50.103"></status>
</kw>
<status status="PASS" starttime="20210322 03:25:50.101" endtime="20210322 03:25:50.103"></status>
</kw>
<doc>Fluxo de Exceção</doc>
<tags>
<tag>smoke_test</tag>
</tags>
<status status="PASS" starttime="20210322 03:25:43.835" endtime="20210322 03:25:50.104" critical="yes"></status>
</test>
<test id="s1-s1-s2-t2" name="Cenário: Confirmar propriedade de chave de endereçamento do tipo Email">
<kw name="Email" library="FakerLibrary">
<assign>
<var>${email_pix}</var>
</assign>
<msg timestamp="20210322 03:25:50.107" level="INFO">${email_pix} = da-cruzbianca@hotmail.com</msg>
<status status="PASS" starttime="20210322 03:25:50.106" endtime="20210322 03:25:50.107"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${email_pix}</arg>
</arguments>
<msg timestamp="20210322 03:25:50.108" level="INFO">${email_pix} = da-cruzbianca@hotmail.com</msg>
<status status="PASS" starttime="20210322 03:25:50.107" endtime="20210322 03:25:50.108"></status>
</kw>
<kw name="criar holder individual ativo" library="accreditation_create_holder_active">
<kw name="conectar accreditation" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accreditation</arg>
<arg>url=${accreditation_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 03:25:50.110" level="INFO">Creating Session using : alias=accreditation, url=https://banking-accreditation-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 03:25:50.110" endtime="20210322 03:25:50.111"></status>
</kw>
<status status="PASS" starttime="20210322 03:25:50.109" endtime="20210322 03:25:50.112"></status>
</kw>
<kw name="Cpf" library="FakerLibrary">
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 03:25:50.112" level="INFO">${national_registration} = 973.061.428-87</msg>
<status status="PASS" starttime="20210322 03:25:50.112" endtime="20210322 03:25:50.112"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${national_registration}</arg>
<arg>.</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 03:25:50.113" level="INFO">${national_registration} = 973061428-87</msg>
<status status="PASS" starttime="20210322 03:25:50.113" endtime="20210322 03:25:50.113"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${national_registration}</arg>
<arg>-</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 03:25:50.114" level="INFO">${national_registration} = 97306142887</msg>
<status status="PASS" starttime="20210322 03:25:50.114" endtime="20210322 03:25:50.114"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${national_registration}</arg>
</arguments>
<msg timestamp="20210322 03:25:50.115" level="INFO">${national_registration} = 97306142887</msg>
<status status="PASS" starttime="20210322 03:25:50.115" endtime="20210322 03:25:50.115"></status>
</kw>
<kw name="Rg" library="FakerLibrary">
<doc>Brazilian RG, return plain numbers.
Check:  https://www.ngmatematica.com/2014/02/como-determinar-o-digito-verificador-do.html</doc>
<assign>
<var>${identity_card}</var>
</assign>
<msg timestamp="20210322 03:25:50.116" level="INFO">${identity_card} = 350816244</msg>
<status status="PASS" starttime="20210322 03:25:50.116" endtime="20210322 03:25:50.116"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${identity_card}</arg>
</arguments>
<msg timestamp="20210322 03:25:50.117" level="INFO">${identity_card} = 350816244</msg>
<status status="PASS" starttime="20210322 03:25:50.117" endtime="20210322 03:25:50.117"></status>
</kw>
<kw name="criar holder individual" library="accreditation_post_holder_individual">
<arguments>
<arg>holder_type=individual</arg>
<arg>holder_name=${holder_name}</arg>
<arg>email=${email}</arg>
<arg>national_registration=${national_registration}</arg>
<arg>revenue=${revenue}</arg>
<arg>birthday=${birthday}</arg>
<arg>mothers_name=${mothers_name}</arg>
<arg>identity_card=${identity_card}</arg>
<arg>pep=false</arg>
<arg>cbo=${cbo}</arg>
</arguments>
<kw name="conectar accreditation" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accreditation</arg>
<arg>url=${accreditation_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 03:25:50.120" level="INFO">Creating Session using : alias=accreditation, url=https://banking-accreditation-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 03:25:50.119" endtime="20210322 03:25:50.120"></status>
</kw>
<status status="PASS" starttime="20210322 03:25:50.119" endtime="20210322 03:25:50.120"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_type}</arg>
</arguments>
<msg timestamp="20210322 03:25:50.121" level="INFO">${holder_type} = individual</msg>
<status status="PASS" starttime="20210322 03:25:50.121" endtime="20210322 03:25:50.121"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_name}</arg>
</arguments>
<msg timestamp="20210322 03:25:50.122" level="INFO">${holder_name} = Holder de teste</msg>
<status status="PASS" starttime="20210322 03:25:50.121" endtime="20210322 03:25:50.122"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:25:50.123" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 03:25:50.122" endtime="20210322 03:25:50.123"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "${holder_type}",</arg>
<arg>"name": "${holder_name}",</arg>
<arg>"email": "${email}",</arg>
<arg>"national_registration": "${national_registration}",</arg>
<arg>"revenue": ${revenue},</arg>
<arg>"birthday": "${birthday}",</arg>
<arg>"mothers_name": "${mothers_name}",</arg>
<arg>"identity_card": "${identity_card}",</arg>
<arg>"pep": false,</arg>
<arg>"cbo": ${cbo}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 03:25:50.124" level="INFO">${body} = { "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "97306142887", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder",...</msg>
<status status="PASS" starttime="20210322 03:25:50.123" endtime="20210322 03:25:50.124"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:25:50.125" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "97306142887", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder", "identity_card": "350816244", "pep": false, "cbo": 821450 } 
json=None</msg>
<msg timestamp="20210322 03:25:50.786" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:25:50.124" endtime="20210322 03:25:50.786"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:25:50.788" level="INFO">{'id': 'f55592da611e4373b023a9c94cf3dc42', 'name': 'Holder de teste', 'revenue': 5500.0, 'email': 'teste@teste.com.br', 'status': 'waiting_info_and_documents', 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'marketplace_name': 'Marketplace de Teste', 'created_at': '2021-03-22T03:25:51.638979', 'updated_at': '2021-03-22T03:25:51.638981', 'type': 'individual', 'national_registration': '97306142887', 'birthday': '1988-04-23', 'mothers_name': 'Mãe do Holder', 'identity_card': '350816244', 'pep': False, 'cbo': '821450', '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/f55592da611e4373b023a9c94cf3dc42', 'type': 'GET'}, 'phones': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/f55592da611e4373b023a9c94cf3dc42/phones', 'type': 'GET'}, 'addresses': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/f55592da611e4373b023a9c94cf3dc42/addresses', 'type': 'GET'}, 'documents': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/f55592da611e4373b023a9c94cf3dc42/documents', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 03:25:50.787" endtime="20210322 03:25:50.789"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:25:50.790" level="INFO">93d3177f3c60b7c1</msg>
<status status="PASS" starttime="20210322 03:25:50.789" endtime="20210322 03:25:50.790"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${body}</arg>
</arguments>
<msg timestamp="20210322 03:25:50.791" level="INFO">{ "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "97306142887", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder", "identity_card": "350816244", "pep": false, "cbo": 821450 }</msg>
<status status="PASS" starttime="20210322 03:25:50.791" endtime="20210322 03:25:50.791"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:25:50.793" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:25:50.792" endtime="20210322 03:25:50.793"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${holder_external_key}</var>
</assign>
<msg timestamp="20210322 03:25:50.794" level="INFO">${holder_external_key} = f55592da611e4373b023a9c94cf3dc42</msg>
<status status="PASS" starttime="20210322 03:25:50.793" endtime="20210322 03:25:50.794"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_external_key}</arg>
</arguments>
<msg timestamp="20210322 03:25:50.795" level="INFO">${holder_external_key} = f55592da611e4373b023a9c94cf3dc42</msg>
<status status="PASS" starttime="20210322 03:25:50.795" endtime="20210322 03:25:50.795"></status>
</kw>
<status status="PASS" starttime="20210322 03:25:50.117" endtime="20210322 03:25:50.795"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_name}</arg>
</arguments>
<msg timestamp="20210322 03:25:50.796" level="INFO">${holder_name} = Holder de teste</msg>
<status status="PASS" starttime="20210322 03:25:50.796" endtime="20210322 03:25:50.796"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 03:25:50.797" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:25:50.797" endtime="20210322 03:25:50.797"></status>
</kw>
<kw name="criar holder phone" library="accreditation_post_holder_phone">
<arguments>
<arg>21</arg>
<arg>51</arg>
<arg>996221236</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:25:50.799" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 03:25:50.798" endtime="20210322 03:25:50.799"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"area_code": "${phone_area_code}",</arg>
<arg>"country_code": "${phone_country_code}",</arg>
<arg>"number": "${phone_number}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 03:25:50.800" level="INFO">${body} = { "area_code": "21", "country_code": "51", "number": "996221236" }</msg>
<status status="PASS" starttime="20210322 03:25:50.799" endtime="20210322 03:25:50.800"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/phones</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:25:50.801" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/f55592da611e4373b023a9c94cf3dc42/phones, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "area_code": "21", "country_code": "51", "number": "996221236" } 
json=None</msg>
<msg timestamp="20210322 03:25:51.016" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:25:50.800" endtime="20210322 03:25:51.016"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:25:51.018" level="INFO">{'id': '787ee809db4542d2b834781454f765f3', 'area_code': '21', 'country_code': '51', 'number': '996221236', 'main': True, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/f55592da611e4373b023a9c94cf3dc42/phones/787ee809db4542d2b834781454f765f3', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/f55592da611e4373b023a9c94cf3dc42', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 03:25:51.017" endtime="20210322 03:25:51.018"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:25:51.019" level="INFO">7e5f37959d59f559</msg>
<status status="PASS" starttime="20210322 03:25:51.019" endtime="20210322 03:25:51.019"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:25:51.021" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:25:51.020" endtime="20210322 03:25:51.021"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${phone_external_key}</var>
</assign>
<msg timestamp="20210322 03:25:51.022" level="INFO">${phone_external_key} = 787ee809db4542d2b834781454f765f3</msg>
<status status="PASS" starttime="20210322 03:25:51.021" endtime="20210322 03:25:51.022"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${phone_external_key}</arg>
</arguments>
<msg timestamp="20210322 03:25:51.023" level="INFO">${phone_external_key} = 787ee809db4542d2b834781454f765f3</msg>
<status status="PASS" starttime="20210322 03:25:51.022" endtime="20210322 03:25:51.023"></status>
</kw>
<status status="PASS" starttime="20210322 03:25:50.798" endtime="20210322 03:25:51.023"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 03:25:51.024" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:25:51.024" endtime="20210322 03:25:51.024"></status>
</kw>
<kw name="criar holder address" library="accreditation_post_holder_address">
<arguments>
<arg>Rio de Janeiro</arg>
<arg>Rio de Janeiro</arg>
<arg>Brasil</arg>
<arg>Bairro de Testes</arg>
<arg>Rua de Testes</arg>
<arg>90</arg>
<arg>apto 200</arg>
<arg>21550987</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:25:51.026" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 03:25:51.025" endtime="20210322 03:25:51.026"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"city": "${city}",</arg>
<arg>"state": "${state}",</arg>
<arg>"country": "${country}",</arg>
<arg>"neighborhood": "${neighborhood}",</arg>
<arg>"street": "${street}",</arg>
<arg>"number": "${number}",</arg>
<arg>"complement": "${complement}",</arg>
<arg>"postal_code": "${postal_code}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 03:25:51.027" level="INFO">${body} = { "city": "Rio de Janeiro", "state": "Rio de Janeiro", "country": "Brasil", "neighborhood": "Bairro de Testes", "street": "Rua de Testes", "number": "90", "complement": "apto 200", "postal_code": "215...</msg>
<status status="PASS" starttime="20210322 03:25:51.026" endtime="20210322 03:25:51.027"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/addresses</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:25:51.028" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/f55592da611e4373b023a9c94cf3dc42/addresses, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "city": "Rio de Janeiro", "state": "Rio de Janeiro", "country": "Brasil", "neighborhood": "Bairro de Testes", "street": "Rua de Testes", "number": "90", "complement": "apto 200", "postal_code": "21550987" } 
json=None</msg>
<msg timestamp="20210322 03:25:51.253" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:25:51.027" endtime="20210322 03:25:51.254"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:25:51.256" level="INFO">{'id': '404796dee431424fbdaf74d04c255983', 'street': 'Rua de Testes', 'number': '90', 'city': 'Rio de Janeiro', 'complement': 'apto 200', 'state': 'Rio de Janeiro', 'neighborhood': 'Bairro de Testes', 'postal_code': '21550987', 'country': 'Brasil', 'main': True, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/f55592da611e4373b023a9c94cf3dc42/addresses/404796dee431424fbdaf74d04c255983', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/f55592da611e4373b023a9c94cf3dc42', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 03:25:51.255" endtime="20210322 03:25:51.258"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:25:51.259" level="INFO">9ac64278e0fdbae6</msg>
<status status="PASS" starttime="20210322 03:25:51.258" endtime="20210322 03:25:51.260"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:25:51.261" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:25:51.260" endtime="20210322 03:25:51.261"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${address_external_key}</var>
</assign>
<msg timestamp="20210322 03:25:51.265" level="INFO">${address_external_key} = 404796dee431424fbdaf74d04c255983</msg>
<status status="PASS" starttime="20210322 03:25:51.263" endtime="20210322 03:25:51.265"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${address_external_key}</arg>
</arguments>
<msg timestamp="20210322 03:25:51.266" level="INFO">${address_external_key} = 404796dee431424fbdaf74d04c255983</msg>
<status status="PASS" starttime="20210322 03:25:51.266" endtime="20210322 03:25:51.266"></status>
</kw>
<status status="PASS" starttime="20210322 03:25:51.025" endtime="20210322 03:25:51.267"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 03:25:51.269" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:25:51.268" endtime="20210322 03:25:51.269"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>SELFIE</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:25:51.271" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 03:25:51.271" endtime="20210322 03:25:51.272"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 03:25:51.273" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 03:25:51.277" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 03:25:51.272" endtime="20210322 03:25:51.277"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:25:51.278" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/f55592da611e4373b023a9c94cf3dc42/documents?type=SELFIE, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 03:25:51.578" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:25:51.277" endtime="20210322 03:25:51.578"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:25:51.581" level="INFO">{'id': '86f3cb5cce4f431cb563a0a776b5dc64', 'document_type': 'selfie', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/f55592da611e4373b023a9c94cf3dc42/documents/86f3cb5cce4f431cb563a0a776b5dc64', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/f55592da611e4373b023a9c94cf3dc42', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/f55592da611e4373b023a9c94cf3dc42/documents/86f3cb5cce4f431cb563a0a776b5dc64/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 03:25:51.579" endtime="20210322 03:25:51.581"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:25:51.583" level="INFO">54fca3a7c9b893cb</msg>
<status status="PASS" starttime="20210322 03:25:51.582" endtime="20210322 03:25:51.584"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:25:51.587" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:25:51.585" endtime="20210322 03:25:51.588"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 03:25:51.590" level="INFO">${document_external_key} = 86f3cb5cce4f431cb563a0a776b5dc64</msg>
<status status="PASS" starttime="20210322 03:25:51.588" endtime="20210322 03:25:51.590"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 03:25:51.592" level="INFO">${document_external_key} = 86f3cb5cce4f431cb563a0a776b5dc64</msg>
<status status="PASS" starttime="20210322 03:25:51.591" endtime="20210322 03:25:51.592"></status>
</kw>
<status status="PASS" starttime="20210322 03:25:51.270" endtime="20210322 03:25:51.592"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 03:25:51.593" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:25:51.593" endtime="20210322 03:25:51.594"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>RG_FRENTE</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:25:51.595" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 03:25:51.595" endtime="20210322 03:25:51.596"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 03:25:51.596" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 03:25:51.599" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 03:25:51.596" endtime="20210322 03:25:51.599"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:25:51.601" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/f55592da611e4373b023a9c94cf3dc42/documents?type=RG_FRENTE, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 03:25:51.857" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:25:51.599" endtime="20210322 03:25:51.857"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:25:51.858" level="INFO">{'id': 'd54b61c5a77246e1b33954d55669c312', 'document_type': 'rg_frente', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/f55592da611e4373b023a9c94cf3dc42/documents/d54b61c5a77246e1b33954d55669c312', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/f55592da611e4373b023a9c94cf3dc42', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/f55592da611e4373b023a9c94cf3dc42/documents/d54b61c5a77246e1b33954d55669c312/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 03:25:51.857" endtime="20210322 03:25:51.858"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:25:51.859" level="INFO">7ba1f0e7aa268dad</msg>
<status status="PASS" starttime="20210322 03:25:51.858" endtime="20210322 03:25:51.859"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:25:51.860" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:25:51.859" endtime="20210322 03:25:51.860"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 03:25:51.860" level="INFO">${document_external_key} = d54b61c5a77246e1b33954d55669c312</msg>
<status status="PASS" starttime="20210322 03:25:51.860" endtime="20210322 03:25:51.860"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 03:25:51.861" level="INFO">${document_external_key} = d54b61c5a77246e1b33954d55669c312</msg>
<status status="PASS" starttime="20210322 03:25:51.861" endtime="20210322 03:25:51.861"></status>
</kw>
<status status="PASS" starttime="20210322 03:25:51.594" endtime="20210322 03:25:51.861"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 03:25:51.861" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:25:51.861" endtime="20210322 03:25:51.862"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>RG_VERSO</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:25:51.862" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 03:25:51.862" endtime="20210322 03:25:51.862"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 03:25:51.863" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 03:25:51.864" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 03:25:51.863" endtime="20210322 03:25:51.864"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:25:51.866" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/f55592da611e4373b023a9c94cf3dc42/documents?type=RG_VERSO, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 03:25:52.122" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:25:51.865" endtime="20210322 03:25:52.122"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:25:52.124" level="INFO">{'id': '726080ba307449fb89dc39f0aff75796', 'document_type': 'rg_verso', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/f55592da611e4373b023a9c94cf3dc42/documents/726080ba307449fb89dc39f0aff75796', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/f55592da611e4373b023a9c94cf3dc42', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/f55592da611e4373b023a9c94cf3dc42/documents/726080ba307449fb89dc39f0aff75796/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 03:25:52.123" endtime="20210322 03:25:52.124"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:25:52.124" level="INFO">51245c10323c3c74</msg>
<status status="PASS" starttime="20210322 03:25:52.124" endtime="20210322 03:25:52.124"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:25:52.125" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:25:52.124" endtime="20210322 03:25:52.125"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 03:25:52.126" level="INFO">${document_external_key} = 726080ba307449fb89dc39f0aff75796</msg>
<status status="PASS" starttime="20210322 03:25:52.125" endtime="20210322 03:25:52.126"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 03:25:52.127" level="INFO">${document_external_key} = 726080ba307449fb89dc39f0aff75796</msg>
<status status="PASS" starttime="20210322 03:25:52.126" endtime="20210322 03:25:52.127"></status>
</kw>
<status status="PASS" starttime="20210322 03:25:51.862" endtime="20210322 03:25:52.127"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 03:25:52.128" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:25:52.127" endtime="20210322 03:25:52.128"></status>
</kw>
<kw name="solicitar aprovação do holder" library="accreditation_request_approval">
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:25:52.129" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 03:25:52.128" endtime="20210322 03:25:52.129"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/approval</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:25:52.130" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/f55592da611e4373b023a9c94cf3dc42/approval, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data=None 
json=None</msg>
<msg timestamp="20210322 03:25:52.407" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:25:52.129" endtime="20210322 03:25:52.407"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:25:52.409" level="INFO">{'message': 'Approval request accepted successfully. Processing analysis'}</msg>
<status status="PASS" starttime="20210322 03:25:52.408" endtime="20210322 03:25:52.409"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:25:52.410" level="INFO">5dbd8cce1837ed85</msg>
<status status="PASS" starttime="20210322 03:25:52.410" endtime="20210322 03:25:52.410"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:25:52.411" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:25:52.411" endtime="20210322 03:25:52.412"></status>
</kw>
<status status="PASS" starttime="20210322 03:25:52.128" endtime="20210322 03:25:52.412"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 03:25:52.413" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:25:52.412" endtime="20210322 03:25:52.413"></status>
</kw>
<kw name="recebendo notificação de aprovação" library="accreditation_risk_notification">
<kw name="Uuid 4" library="FakerLibrary">
<doc>Generates a random UUID4 string.
:param cast_to: Specify what type the UUID should be cast to. Default is `str`
:type cast_to: callable</doc>
<assign>
<var>${assessment_id}</var>
</assign>
<msg timestamp="20210322 03:25:52.415" level="INFO">${assessment_id} = e0a43120-e706-4e12-8ec5-c0a6c32a6c26</msg>
<status status="PASS" starttime="20210322 03:25:52.414" endtime="20210322 03:25:52.415"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>year</arg>
</arguments>
<assign>
<var>${year}</var>
</assign>
<msg timestamp="20210322 03:25:52.416" level="INFO">${year} = 2021</msg>
<status status="PASS" starttime="20210322 03:25:52.415" endtime="20210322 03:25:52.416"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>month</arg>
</arguments>
<assign>
<var>${month}</var>
</assign>
<msg timestamp="20210322 03:25:52.417" level="INFO">${month} = 03</msg>
<status status="PASS" starttime="20210322 03:25:52.416" endtime="20210322 03:25:52.417"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>day</arg>
</arguments>
<assign>
<var>${day}</var>
</assign>
<msg timestamp="20210322 03:25:52.417" level="INFO">${day} = 22</msg>
<status status="PASS" starttime="20210322 03:25:52.417" endtime="20210322 03:25:52.417"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:25:52.418" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 03:25:52.418" endtime="20210322 03:25:52.418"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "risk.assessment.result",</arg>
<arg>"resource": "business.holder",</arg>
<arg>"created_at": "${year}-${month}-${day} 15:28:56.747Z",</arg>
<arg>"marketplace_id": "${marketplace_external_key}",</arg>
<arg>"object": {</arg>
<arg>"result": "APPROVED",</arg>
<arg>"holder_id": "${holder_external_key}",</arg>
<arg>"applicant_id": "${application_external_key}",</arg>
<arg>"assessment_id": "${assessment_id}"</arg>
<arg>}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 03:25:52.419" level="INFO">${body} = { "type": "risk.assessment.result", "resource": "business.holder", "created_at": "2021-03-22 15:28:56.747Z", "marketplace_id": "f71a8951368a4cc085cf7875ff44e61c", "object": { "result": "APPROVED", "ho...</msg>
<status status="PASS" starttime="20210322 03:25:52.419" endtime="20210322 03:25:52.419"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/admin/internal_operation/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/registration/approval</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:25:52.420" level="INFO">POST Request using : uri=/admin/internal_operation/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/f55592da611e4373b023a9c94cf3dc42/registration/approval, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "risk.assessment.result", "resource": "business.holder", "created_at": "2021-03-22 15:28:56.747Z", "marketplace_id": "f71a8951368a4cc085cf7875ff44e61c", "object": { "result": "APPROVED", "holder_id": "f55592da611e4373b023a9c94cf3dc42", "applicant_id": "bcc25a6751c14b52af1340d40dba78c5", "assessment_id": "e0a43120-e706-4e12-8ec5-c0a6c32a6c26" } } 
json=None</msg>
<msg timestamp="20210322 03:25:52.626" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:25:52.419" endtime="20210322 03:25:52.627"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:25:52.629" level="INFO">{'message': 'Holder approved successfully'}</msg>
<status status="PASS" starttime="20210322 03:25:52.628" endtime="20210322 03:25:52.629"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:25:52.631" level="INFO">ff9693530559baea</msg>
<status status="PASS" starttime="20210322 03:25:52.630" endtime="20210322 03:25:52.631"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:25:52.633" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:25:52.632" endtime="20210322 03:25:52.634"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 03:25:52.637" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:25:52.635" endtime="20210322 03:25:52.637"></status>
</kw>
<status status="PASS" starttime="20210322 03:25:52.413" endtime="20210322 03:25:52.638"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 03:25:52.640" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:25:52.639" endtime="20210322 03:25:52.640"></status>
</kw>
<kw name="buscar account por holder" library="accounts_get_accounts_by_holder">
<kw name="conectar accounts" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accounts</arg>
<arg>url=${account_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 03:25:52.644" level="INFO">Creating Session using : alias=accounts, url=https://banking-accounts-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 03:25:52.644" endtime="20210322 03:25:52.646"></status>
</kw>
<status status="PASS" starttime="20210322 03:25:52.642" endtime="20210322 03:25:52.646"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accounts</arg>
<arg>/marketplaces/${marketplace_external_key}/holders/${holder_external_key}/accounts</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:25:52.648" level="INFO">GET Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/holders/f55592da611e4373b023a9c94cf3dc42/accounts, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 03:25:53.289" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:25:52.647" endtime="20210322 03:25:53.289"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:25:53.290" level="INFO">{'items': [{'id': '8c7305695a5542fd998c9623e0923279', 'holder': 'f55592da611e4373b023a9c94cf3dc42', 'balance': '0.00', 'currency': 'BRL', 'routing_number': '001', 'number': '9424079648', 'status': 'active', 'metadata': {}, 'created_at': '2021-03-22T06:25:53.472959', 'updated_at': '2021-03-22T06:25:53.472959', 'primary': True, 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'uri': '/v2/marketplaces/f71a8951368a4cc085cf7875ff44e61c/accounts/8c7305695a5542fd998c9623e0923279', 'resource': 'payment_account'}], 'has_more': False, 'limit': 100, 'total_pages': 1, 'page': 1, 'offset': 0, 'total': '1', 'query_count': '1'}</msg>
<status status="PASS" starttime="20210322 03:25:53.289" endtime="20210322 03:25:53.290"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:25:53.290" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:25:53.290" endtime="20210322 03:25:53.290"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["id"]}</arg>
</arguments>
<assign>
<var>${account_external_key}</var>
</assign>
<msg timestamp="20210322 03:25:53.291" level="INFO">${account_external_key} = 8c7305695a5542fd998c9623e0923279</msg>
<status status="PASS" starttime="20210322 03:25:53.290" endtime="20210322 03:25:53.291"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_external_key}</arg>
</arguments>
<msg timestamp="20210322 03:25:53.291" level="INFO">${account_external_key} = 8c7305695a5542fd998c9623e0923279</msg>
<status status="PASS" starttime="20210322 03:25:53.291" endtime="20210322 03:25:53.291"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["number"]}</arg>
</arguments>
<assign>
<var>${account_number}</var>
</assign>
<msg timestamp="20210322 03:25:53.293" level="INFO">${account_number} = 9424079648</msg>
<status status="PASS" starttime="20210322 03:25:53.292" endtime="20210322 03:25:53.293"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_number}</arg>
</arguments>
<msg timestamp="20210322 03:25:53.293" level="INFO">${account_number} = 9424079648</msg>
<status status="PASS" starttime="20210322 03:25:53.293" endtime="20210322 03:25:53.293"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["routing_number"]}</arg>
</arguments>
<assign>
<var>${account_routing_number}</var>
</assign>
<msg timestamp="20210322 03:25:53.293" level="INFO">${account_routing_number} = 001</msg>
<status status="PASS" starttime="20210322 03:25:53.293" endtime="20210322 03:25:53.293"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_routing_number}</arg>
</arguments>
<msg timestamp="20210322 03:25:53.294" level="INFO">${account_routing_number} = 001</msg>
<status status="PASS" starttime="20210322 03:25:53.294" endtime="20210322 03:25:53.294"></status>
</kw>
<status status="PASS" starttime="20210322 03:25:52.641" endtime="20210322 03:25:53.294"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 03:25:53.294" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:25:53.294" endtime="20210322 03:25:53.294"></status>
</kw>
<status status="PASS" starttime="20210322 03:25:50.108" endtime="20210322 03:25:53.295"></status>
</kw>
<kw name="criar chave pix" library="pix_dict_create_entry">
<arguments>
<arg>email</arg>
<arg>${email_pix}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 03:25:53.297" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 03:25:53.295" endtime="20210322 03:25:53.297"></status>
</kw>
<status status="PASS" starttime="20210322 03:25:53.295" endtime="20210322 03:25:53.297"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${type}</arg>
</arguments>
<msg timestamp="20210322 03:25:53.299" level="INFO">${type} = email</msg>
<status status="PASS" starttime="20210322 03:25:53.298" endtime="20210322 03:25:53.299"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210322 03:25:53.299" level="INFO">${value} = da-cruzbianca@hotmail.com</msg>
<status status="PASS" starttime="20210322 03:25:53.299" endtime="20210322 03:25:53.299"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:25:53.300" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 03:25:53.299" endtime="20210322 03:25:53.300"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "${type}",</arg>
<arg>"value": "${value}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 03:25:53.300" level="INFO">${body} = { "type": "email", "value": "da-cruzbianca@hotmail.com" }</msg>
<status status="PASS" starttime="20210322 03:25:53.300" endtime="20210322 03:25:53.300"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:25:53.301" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/f55592da611e4373b023a9c94cf3dc42/accounts/8c7305695a5542fd998c9623e0923279/entries, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "email", "value": "da-cruzbianca@hotmail.com" } 
json=None</msg>
<msg timestamp="20210322 03:25:53.947" level="INFO">${response} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20210322 03:25:53.300" endtime="20210322 03:25:53.948"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:25:53.950" level="INFO">{'id': 'afa73fc2555f468ea80d79d02a909a61', 'status': 'waiting_ownership_verification', 'created_at': '2021-03-22T03:25:54.811', 'updated_at': '2021-03-22T03:25:54.811', 'key': {'value': 'da-cruzbianca@hotmail.com', 'type': 'email'}, 'account': {'id': '8c7305695a5542fd998c9623e0923279', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': 'f55592da611e4373b023a9c94cf3dc42', 'owner': {'name': 'Holder de teste', 'national_registration': '97306142887', 'type': 'individual'}, 'routing_number': '001', 'number': '9424079648', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}, 'resource': 'pix.entry'}</msg>
<status status="PASS" starttime="20210322 03:25:53.948" endtime="20210322 03:25:53.951"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:25:53.952" level="INFO">50fede9e73d90b12</msg>
<status status="PASS" starttime="20210322 03:25:53.951" endtime="20210322 03:25:53.953"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 03:25:53.954" level="INFO">202</msg>
<status status="PASS" starttime="20210322 03:25:53.953" endtime="20210322 03:25:53.955"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:25:53.956" level="INFO">${response} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20210322 03:25:53.955" endtime="20210322 03:25:53.957"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${entry_external_key}</var>
</assign>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:25:53.959" endtime="20210322 03:25:53.961"></status>
</kw>
<msg timestamp="20210322 03:25:53.961" level="INFO">${entry_external_key} = afa73fc2555f468ea80d79d02a909a61</msg>
<status status="PASS" starttime="20210322 03:25:53.958" endtime="20210322 03:25:53.962"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${entry_external_key}</arg>
</arguments>
<msg timestamp="20210322 03:25:53.963" level="INFO">${entry_external_key} = afa73fc2555f468ea80d79d02a909a61</msg>
<status status="PASS" starttime="20210322 03:25:53.962" endtime="20210322 03:25:53.963"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["key"]["value"]}</arg>
</arguments>
<assign>
<var>${entry_key_value}</var>
</assign>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["key"]["value"]}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:25:53.964" endtime="20210322 03:25:53.966"></status>
</kw>
<msg timestamp="20210322 03:25:53.966" level="INFO">${entry_key_value} = da-cruzbianca@hotmail.com</msg>
<status status="PASS" starttime="20210322 03:25:53.963" endtime="20210322 03:25:53.966"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${entry_key_value}</arg>
</arguments>
<msg timestamp="20210322 03:25:53.967" level="INFO">${entry_key_value} = da-cruzbianca@hotmail.com</msg>
<status status="PASS" starttime="20210322 03:25:53.966" endtime="20210322 03:25:53.967"></status>
</kw>
<status status="PASS" starttime="20210322 03:25:53.295" endtime="20210322 03:25:53.967"></status>
</kw>
<kw name="validar criação da chave pix" library="asserts">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando status_code</arg>
</arguments>
<msg timestamp="20210322 03:25:53.969" level="INFO">Validando status_code</msg>
<status status="PASS" starttime="20210322 03:25:53.969" endtime="20210322 03:25:53.969"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${type}' == 'evp'</arg>
<arg>Should Be Equal As Integers</arg>
<arg>${response.status_code}</arg>
<arg>201</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'phone'</arg>
<arg>Should Be Equal As Integers</arg>
<arg>${response.status_code}</arg>
<arg>202</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'email'</arg>
<arg>Should Be Equal As Integers</arg>
<arg>${response.status_code}</arg>
<arg>202</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'national_registration'</arg>
<arg>Should Be Equal As Integers</arg>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>202</arg>
</arguments>
<msg timestamp="20210322 03:25:53.972" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:25:53.971" endtime="20210322 03:25:53.972"></status>
</kw>
<status status="PASS" starttime="20210322 03:25:53.970" endtime="20210322 03:25:53.972"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar status da chave</arg>
</arguments>
<msg timestamp="20210322 03:25:53.973" level="INFO">Validar status da chave</msg>
<status status="PASS" starttime="20210322 03:25:53.972" endtime="20210322 03:25:53.973"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${type}' == 'evp'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["status"]}</arg>
<arg>active</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'phone'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["status"]}</arg>
<arg>waiting_ownership_verification</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'email'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["status"]}</arg>
<arg>waiting_ownership_verification</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'national_registration'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["status"]}</arg>
<arg>active</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["status"]}</arg>
<arg>waiting_ownership_verification</arg>
</arguments>
<status status="PASS" starttime="20210322 03:25:53.974" endtime="20210322 03:25:53.975"></status>
</kw>
<status status="PASS" starttime="20210322 03:25:53.973" endtime="20210322 03:25:53.975"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando Tipo da chave PIX</arg>
</arguments>
<msg timestamp="20210322 03:25:53.976" level="INFO">Validando Tipo da chave PIX</msg>
<status status="PASS" starttime="20210322 03:25:53.976" endtime="20210322 03:25:53.976"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${type}' == 'evp'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["type"]}</arg>
<arg>${type}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'phone'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["type"]}</arg>
<arg>${type}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'email'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["type"]}</arg>
<arg>${type}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'national_registration'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["type"]}</arg>
<arg>${type}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["key"]["type"]}</arg>
<arg>${type}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:25:53.978" endtime="20210322 03:25:53.979"></status>
</kw>
<status status="PASS" starttime="20210322 03:25:53.976" endtime="20210322 03:25:53.979"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando Valor da chave PIX</arg>
</arguments>
<msg timestamp="20210322 03:25:53.980" level="INFO">Validando Valor da chave PIX</msg>
<status status="PASS" starttime="20210322 03:25:53.979" endtime="20210322 03:25:53.980"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${type}' == 'evp'</arg>
<arg>Should Not Be Empty</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'phone'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${phone_pix}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'email'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${email_pix}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'national_registration'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${national_registration}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${email_pix}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:25:53.981" endtime="20210322 03:25:53.982"></status>
</kw>
<status status="PASS" starttime="20210322 03:25:53.980" endtime="20210322 03:25:53.982"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando dados da conta</arg>
</arguments>
<msg timestamp="20210322 03:25:53.983" level="INFO">Validando dados da conta</msg>
<status status="PASS" starttime="20210322 03:25:53.983" endtime="20210322 03:25:53.983"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["id"]}</arg>
<arg>${account_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:25:53.984" endtime="20210322 03:25:53.984"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["marketplace"]}</arg>
<arg>${marketplace_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:25:53.985" endtime="20210322 03:25:53.986"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["holder"]}</arg>
<arg>${holder_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:25:53.986" endtime="20210322 03:25:53.987"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["number"]}</arg>
<arg>${account_number}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:25:53.987" endtime="20210322 03:25:53.988"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["routing_number"]}</arg>
<arg>${account_routing_number}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:25:53.988" endtime="20210322 03:25:53.989"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["type"]}</arg>
<arg>CACC</arg>
</arguments>
<status status="PASS" starttime="20210322 03:25:53.989" endtime="20210322 03:25:53.990"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar Proprietário da Account Owner</arg>
</arguments>
<msg timestamp="20210322 03:25:53.991" level="INFO">Validar Proprietário da Account Owner</msg>
<status status="PASS" starttime="20210322 03:25:53.991" endtime="20210322 03:25:53.991"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${holder_type}' == 'individual'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["account"]["owner"]["name"]}</arg>
<arg>${holder_name}</arg>
<arg>ELSE IF</arg>
<arg>'${holder_type}' == 'business'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["account"]["owner"]["name"]}</arg>
<arg>${legal_name}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["account"]["owner"]["name"]}</arg>
<arg>${holder_name}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:25:53.992" endtime="20210322 03:25:53.993"></status>
</kw>
<status status="PASS" starttime="20210322 03:25:53.991" endtime="20210322 03:25:53.994"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar national_registration da Account Owner</arg>
</arguments>
<msg timestamp="20210322 03:25:53.994" level="INFO">Validar national_registration da Account Owner</msg>
<status status="PASS" starttime="20210322 03:25:53.994" endtime="20210322 03:25:53.994"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${holder_type}' == 'individual'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["account"]["owner"]["national_registration"]}</arg>
<arg>${national_registration}</arg>
<arg>ELSE IF</arg>
<arg>'${holder_type}' == 'business'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["account"]["owner"]["national_registration"]}</arg>
<arg>${national_registration}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["account"]["owner"]["national_registration"]}</arg>
<arg>${national_registration}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:25:53.996" endtime="20210322 03:25:53.997"></status>
</kw>
<status status="PASS" starttime="20210322 03:25:53.995" endtime="20210322 03:25:53.997"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar Holder Type do Account Owner</arg>
</arguments>
<msg timestamp="20210322 03:25:53.997" level="INFO">Validar Holder Type do Account Owner</msg>
<status status="PASS" starttime="20210322 03:25:53.997" endtime="20210322 03:25:53.997"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${holder_type}' == 'individual'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["account"]["owner"]["type"]}</arg>
<arg>${holder_type}</arg>
<arg>ELSE IF</arg>
<arg>'${holder_type}' == 'business'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["account"]["owner"]["type"]}</arg>
<arg>${holder_type}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["account"]["owner"]["type"]}</arg>
<arg>${holder_type}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:25:53.999" endtime="20210322 03:25:54.000"></status>
</kw>
<status status="PASS" starttime="20210322 03:25:53.998" endtime="20210322 03:25:54.000"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar PSP</arg>
</arguments>
<msg timestamp="20210322 03:25:54.001" level="INFO">Validar PSP</msg>
<status status="PASS" starttime="20210322 03:25:54.000" endtime="20210322 03:25:54.001"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["psp"]["code"]}</arg>
<arg>19468242</arg>
</arguments>
<status status="PASS" starttime="20210322 03:25:54.002" endtime="20210322 03:25:54.003"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["psp"]["name"]}</arg>
<arg>Zoop Tecnologia e Meios de Pagamento S.A.</arg>
</arguments>
<status status="PASS" starttime="20210322 03:25:54.003" endtime="20210322 03:25:54.005"></status>
</kw>
<status status="PASS" starttime="20210322 03:25:53.968" endtime="20210322 03:25:54.005"></status>
</kw>
<kw name="buscar verification code" library="pix_dict_verification_code">
<arguments>
<arg>${holder_external_key}</arg>
<arg>${account_external_key}</arg>
<arg>${entry_external_key}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 03:25:54.008" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 03:25:54.007" endtime="20210322 03:25:54.009"></status>
</kw>
<status status="PASS" starttime="20210322 03:25:54.006" endtime="20210322 03:25:54.009"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/admin/internal_operation/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries/${entry_external_key}/code</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:25:54.010" level="INFO">GET Request using : uri=/admin/internal_operation/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/f55592da611e4373b023a9c94cf3dc42/accounts/8c7305695a5542fd998c9623e0923279/entries/afa73fc2555f468ea80d79d02a909a61/code, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 03:25:54.611" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:25:54.009" endtime="20210322 03:25:54.612"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:25:54.613" level="INFO">{'code': '2101'}</msg>
<status status="PASS" starttime="20210322 03:25:54.612" endtime="20210322 03:25:54.614"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:25:54.615" level="INFO">bc000c7951d067f4</msg>
<status status="PASS" starttime="20210322 03:25:54.614" endtime="20210322 03:25:54.616"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 03:25:54.617" level="INFO">200</msg>
<status status="PASS" starttime="20210322 03:25:54.616" endtime="20210322 03:25:54.618"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:25:54.619" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:25:54.618" endtime="20210322 03:25:54.619"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["code"]}</arg>
</arguments>
<assign>
<var>${verification_code}</var>
</assign>
<msg timestamp="20210322 03:25:54.622" level="INFO">${verification_code} = 2101</msg>
<status status="PASS" starttime="20210322 03:25:54.620" endtime="20210322 03:25:54.622"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${verification_code}</arg>
</arguments>
<msg timestamp="20210322 03:25:54.624" level="INFO">${verification_code} = 2101</msg>
<status status="PASS" starttime="20210322 03:25:54.623" endtime="20210322 03:25:54.624"></status>
</kw>
<status status="PASS" starttime="20210322 03:25:54.006" endtime="20210322 03:25:54.624"></status>
</kw>
<kw name="confirmar propriedade da chave pix" library="pix_dict_confirm_propriety">
<arguments>
<arg>${verification_code}</arg>
<arg>${holder_external_key}</arg>
<arg>${account_external_key}</arg>
<arg>${entry_external_key}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 03:25:54.628" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 03:25:54.628" endtime="20210322 03:25:54.630"></status>
</kw>
<status status="PASS" starttime="20210322 03:25:54.626" endtime="20210322 03:25:54.630"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:25:54.631" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 03:25:54.630" endtime="20210322 03:25:54.631"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"code": "${verification_code}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 03:25:54.632" level="INFO">${body} = { "code": "2101" }</msg>
<status status="PASS" starttime="20210322 03:25:54.632" endtime="20210322 03:25:54.632"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries/${entry_external_key}/ownership</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:25:54.634" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/f55592da611e4373b023a9c94cf3dc42/accounts/8c7305695a5542fd998c9623e0923279/entries/afa73fc2555f468ea80d79d02a909a61/ownership, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "code": "2101" } 
json=None</msg>
<msg timestamp="20210322 03:25:56.210" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:25:54.633" endtime="20210322 03:25:56.210"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:25:56.211" level="INFO">{'id': 'afa73fc2555f468ea80d79d02a909a61', 'status': 'active', 'created_at': '2021-03-22T03:25:54.811', 'updated_at': '2021-03-22T03:25:57.091', 'key': {'value': 'da-cruzbianca@hotmail.com', 'type': 'email'}, 'account': {'id': '8c7305695a5542fd998c9623e0923279', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': 'f55592da611e4373b023a9c94cf3dc42', 'owner': {'name': 'Holder de teste', 'national_registration': '97306142887', 'type': 'individual'}, 'routing_number': '001', 'number': '9424079648', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}, 'resource': 'pix.entry'}</msg>
<status status="PASS" starttime="20210322 03:25:56.210" endtime="20210322 03:25:56.211"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:25:56.211" level="INFO">c885a28a1d51b1b9</msg>
<status status="PASS" starttime="20210322 03:25:56.211" endtime="20210322 03:25:56.212"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 03:25:56.212" level="INFO">201</msg>
<status status="PASS" starttime="20210322 03:25:56.212" endtime="20210322 03:25:56.212"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:25:56.213" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:25:56.212" endtime="20210322 03:25:56.213"></status>
</kw>
<status status="PASS" starttime="20210322 03:25:54.625" endtime="20210322 03:25:56.213"></status>
</kw>
<kw name="validar ativação da chave de endereçamento" library="asserts">
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["status"]}</arg>
<arg>active</arg>
</arguments>
<status status="PASS" starttime="20210322 03:25:56.214" endtime="20210322 03:25:56.214"></status>
</kw>
<status status="PASS" starttime="20210322 03:25:56.213" endtime="20210322 03:25:56.214"></status>
</kw>
<doc>Fluxo de Exceção</doc>
<tags>
<tag>smoke_test</tag>
</tags>
<status status="PASS" starttime="20210322 03:25:50.104" endtime="20210322 03:25:56.214" critical="yes"></status>
</test>
<test id="s1-s1-s2-t3" name="Cenário: Reenviar código de verificação">
<kw name="Email" library="FakerLibrary">
<assign>
<var>${email_pix}</var>
</assign>
<msg timestamp="20210322 03:25:56.216" level="INFO">${email_pix} = milenagoncalves@pinto.com</msg>
<status status="PASS" starttime="20210322 03:25:56.216" endtime="20210322 03:25:56.216"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${email_pix}</arg>
</arguments>
<msg timestamp="20210322 03:25:56.217" level="INFO">${email_pix} = milenagoncalves@pinto.com</msg>
<status status="PASS" starttime="20210322 03:25:56.216" endtime="20210322 03:25:56.217"></status>
</kw>
<kw name="criar holder individual ativo" library="accreditation_create_holder_active">
<kw name="conectar accreditation" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accreditation</arg>
<arg>url=${accreditation_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 03:25:56.220" level="INFO">Creating Session using : alias=accreditation, url=https://banking-accreditation-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 03:25:56.219" endtime="20210322 03:25:56.220"></status>
</kw>
<status status="PASS" starttime="20210322 03:25:56.218" endtime="20210322 03:25:56.221"></status>
</kw>
<kw name="Cpf" library="FakerLibrary">
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 03:25:56.221" level="INFO">${national_registration} = 708.215.694-49</msg>
<status status="PASS" starttime="20210322 03:25:56.221" endtime="20210322 03:25:56.221"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${national_registration}</arg>
<arg>.</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 03:25:56.222" level="INFO">${national_registration} = 708215694-49</msg>
<status status="PASS" starttime="20210322 03:25:56.222" endtime="20210322 03:25:56.222"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${national_registration}</arg>
<arg>-</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 03:25:56.223" level="INFO">${national_registration} = 70821569449</msg>
<status status="PASS" starttime="20210322 03:25:56.222" endtime="20210322 03:25:56.223"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${national_registration}</arg>
</arguments>
<msg timestamp="20210322 03:25:56.223" level="INFO">${national_registration} = 70821569449</msg>
<status status="PASS" starttime="20210322 03:25:56.223" endtime="20210322 03:25:56.223"></status>
</kw>
<kw name="Rg" library="FakerLibrary">
<doc>Brazilian RG, return plain numbers.
Check:  https://www.ngmatematica.com/2014/02/como-determinar-o-digito-verificador-do.html</doc>
<assign>
<var>${identity_card}</var>
</assign>
<msg timestamp="20210322 03:25:56.224" level="INFO">${identity_card} = 738156048</msg>
<status status="PASS" starttime="20210322 03:25:56.223" endtime="20210322 03:25:56.224"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${identity_card}</arg>
</arguments>
<msg timestamp="20210322 03:25:56.224" level="INFO">${identity_card} = 738156048</msg>
<status status="PASS" starttime="20210322 03:25:56.224" endtime="20210322 03:25:56.224"></status>
</kw>
<kw name="criar holder individual" library="accreditation_post_holder_individual">
<arguments>
<arg>holder_type=individual</arg>
<arg>holder_name=${holder_name}</arg>
<arg>email=${email}</arg>
<arg>national_registration=${national_registration}</arg>
<arg>revenue=${revenue}</arg>
<arg>birthday=${birthday}</arg>
<arg>mothers_name=${mothers_name}</arg>
<arg>identity_card=${identity_card}</arg>
<arg>pep=false</arg>
<arg>cbo=${cbo}</arg>
</arguments>
<kw name="conectar accreditation" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accreditation</arg>
<arg>url=${accreditation_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 03:25:56.227" level="INFO">Creating Session using : alias=accreditation, url=https://banking-accreditation-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 03:25:56.226" endtime="20210322 03:25:56.227"></status>
</kw>
<status status="PASS" starttime="20210322 03:25:56.225" endtime="20210322 03:25:56.227"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_type}</arg>
</arguments>
<msg timestamp="20210322 03:25:56.227" level="INFO">${holder_type} = individual</msg>
<status status="PASS" starttime="20210322 03:25:56.227" endtime="20210322 03:25:56.228"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_name}</arg>
</arguments>
<msg timestamp="20210322 03:25:56.228" level="INFO">${holder_name} = Holder de teste</msg>
<status status="PASS" starttime="20210322 03:25:56.228" endtime="20210322 03:25:56.228"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:25:56.228" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 03:25:56.228" endtime="20210322 03:25:56.229"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "${holder_type}",</arg>
<arg>"name": "${holder_name}",</arg>
<arg>"email": "${email}",</arg>
<arg>"national_registration": "${national_registration}",</arg>
<arg>"revenue": ${revenue},</arg>
<arg>"birthday": "${birthday}",</arg>
<arg>"mothers_name": "${mothers_name}",</arg>
<arg>"identity_card": "${identity_card}",</arg>
<arg>"pep": false,</arg>
<arg>"cbo": ${cbo}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 03:25:56.229" level="INFO">${body} = { "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "70821569449", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder",...</msg>
<status status="PASS" starttime="20210322 03:25:56.229" endtime="20210322 03:25:56.229"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:25:56.230" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "70821569449", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder", "identity_card": "738156048", "pep": false, "cbo": 821450 } 
json=None</msg>
<msg timestamp="20210322 03:25:56.856" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:25:56.229" endtime="20210322 03:25:56.856"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:25:56.856" level="INFO">{'id': '9d952033671a468ba9e74de45f5c2d3c', 'name': 'Holder de teste', 'revenue': 5500.0, 'email': 'teste@teste.com.br', 'status': 'waiting_info_and_documents', 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'marketplace_name': 'Marketplace de Teste', 'created_at': '2021-03-22T03:25:57.710054', 'updated_at': '2021-03-22T03:25:57.710056', 'type': 'individual', 'national_registration': '70821569449', 'birthday': '1988-04-23', 'mothers_name': 'Mãe do Holder', 'identity_card': '738156048', 'pep': False, 'cbo': '821450', '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/9d952033671a468ba9e74de45f5c2d3c', 'type': 'GET'}, 'phones': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/9d952033671a468ba9e74de45f5c2d3c/phones', 'type': 'GET'}, 'addresses': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/9d952033671a468ba9e74de45f5c2d3c/addresses', 'type': 'GET'}, 'documents': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/9d952033671a468ba9e74de45f5c2d3c/documents', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 03:25:56.856" endtime="20210322 03:25:56.856"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:25:56.857" level="INFO">1eb37804a58102ab</msg>
<status status="PASS" starttime="20210322 03:25:56.857" endtime="20210322 03:25:56.857"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${body}</arg>
</arguments>
<msg timestamp="20210322 03:25:56.857" level="INFO">{ "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "70821569449", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder", "identity_card": "738156048", "pep": false, "cbo": 821450 }</msg>
<status status="PASS" starttime="20210322 03:25:56.857" endtime="20210322 03:25:56.857"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:25:56.858" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:25:56.857" endtime="20210322 03:25:56.858"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${holder_external_key}</var>
</assign>
<msg timestamp="20210322 03:25:56.858" level="INFO">${holder_external_key} = 9d952033671a468ba9e74de45f5c2d3c</msg>
<status status="PASS" starttime="20210322 03:25:56.858" endtime="20210322 03:25:56.858"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_external_key}</arg>
</arguments>
<msg timestamp="20210322 03:25:56.858" level="INFO">${holder_external_key} = 9d952033671a468ba9e74de45f5c2d3c</msg>
<status status="PASS" starttime="20210322 03:25:56.858" endtime="20210322 03:25:56.858"></status>
</kw>
<status status="PASS" starttime="20210322 03:25:56.225" endtime="20210322 03:25:56.859"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_name}</arg>
</arguments>
<msg timestamp="20210322 03:25:56.859" level="INFO">${holder_name} = Holder de teste</msg>
<status status="PASS" starttime="20210322 03:25:56.859" endtime="20210322 03:25:56.859"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 03:25:56.859" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:25:56.859" endtime="20210322 03:25:56.859"></status>
</kw>
<kw name="criar holder phone" library="accreditation_post_holder_phone">
<arguments>
<arg>21</arg>
<arg>51</arg>
<arg>996221236</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:25:56.860" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 03:25:56.860" endtime="20210322 03:25:56.860"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"area_code": "${phone_area_code}",</arg>
<arg>"country_code": "${phone_country_code}",</arg>
<arg>"number": "${phone_number}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 03:25:56.860" level="INFO">${body} = { "area_code": "21", "country_code": "51", "number": "996221236" }</msg>
<status status="PASS" starttime="20210322 03:25:56.860" endtime="20210322 03:25:56.861"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/phones</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:25:56.861" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/9d952033671a468ba9e74de45f5c2d3c/phones, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "area_code": "21", "country_code": "51", "number": "996221236" } 
json=None</msg>
<msg timestamp="20210322 03:25:57.073" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:25:56.861" endtime="20210322 03:25:57.073"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:25:57.073" level="INFO">{'id': '84a6443f7d074a579cd579566a370be4', 'area_code': '21', 'country_code': '51', 'number': '996221236', 'main': True, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/9d952033671a468ba9e74de45f5c2d3c/phones/84a6443f7d074a579cd579566a370be4', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/9d952033671a468ba9e74de45f5c2d3c', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 03:25:57.073" endtime="20210322 03:25:57.073"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:25:57.074" level="INFO">db75a8d860e5f96b</msg>
<status status="PASS" starttime="20210322 03:25:57.074" endtime="20210322 03:25:57.074"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:25:57.075" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:25:57.074" endtime="20210322 03:25:57.075"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${phone_external_key}</var>
</assign>
<msg timestamp="20210322 03:25:57.076" level="INFO">${phone_external_key} = 84a6443f7d074a579cd579566a370be4</msg>
<status status="PASS" starttime="20210322 03:25:57.075" endtime="20210322 03:25:57.076"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${phone_external_key}</arg>
</arguments>
<msg timestamp="20210322 03:25:57.077" level="INFO">${phone_external_key} = 84a6443f7d074a579cd579566a370be4</msg>
<status status="PASS" starttime="20210322 03:25:57.076" endtime="20210322 03:25:57.077"></status>
</kw>
<status status="PASS" starttime="20210322 03:25:56.859" endtime="20210322 03:25:57.077"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 03:25:57.077" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:25:57.077" endtime="20210322 03:25:57.077"></status>
</kw>
<kw name="criar holder address" library="accreditation_post_holder_address">
<arguments>
<arg>Rio de Janeiro</arg>
<arg>Rio de Janeiro</arg>
<arg>Brasil</arg>
<arg>Bairro de Testes</arg>
<arg>Rua de Testes</arg>
<arg>90</arg>
<arg>apto 200</arg>
<arg>21550987</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:25:57.079" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 03:25:57.078" endtime="20210322 03:25:57.079"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"city": "${city}",</arg>
<arg>"state": "${state}",</arg>
<arg>"country": "${country}",</arg>
<arg>"neighborhood": "${neighborhood}",</arg>
<arg>"street": "${street}",</arg>
<arg>"number": "${number}",</arg>
<arg>"complement": "${complement}",</arg>
<arg>"postal_code": "${postal_code}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 03:25:57.080" level="INFO">${body} = { "city": "Rio de Janeiro", "state": "Rio de Janeiro", "country": "Brasil", "neighborhood": "Bairro de Testes", "street": "Rua de Testes", "number": "90", "complement": "apto 200", "postal_code": "215...</msg>
<status status="PASS" starttime="20210322 03:25:57.079" endtime="20210322 03:25:57.080"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/addresses</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:25:57.081" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/9d952033671a468ba9e74de45f5c2d3c/addresses, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "city": "Rio de Janeiro", "state": "Rio de Janeiro", "country": "Brasil", "neighborhood": "Bairro de Testes", "street": "Rua de Testes", "number": "90", "complement": "apto 200", "postal_code": "21550987" } 
json=None</msg>
<msg timestamp="20210322 03:25:57.306" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:25:57.080" endtime="20210322 03:25:57.306"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:25:57.307" level="INFO">{'id': '17b8dfb5d9a54204a9d5c8837457f493', 'street': 'Rua de Testes', 'number': '90', 'city': 'Rio de Janeiro', 'complement': 'apto 200', 'state': 'Rio de Janeiro', 'neighborhood': 'Bairro de Testes', 'postal_code': '21550987', 'country': 'Brasil', 'main': True, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/9d952033671a468ba9e74de45f5c2d3c/addresses/17b8dfb5d9a54204a9d5c8837457f493', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/9d952033671a468ba9e74de45f5c2d3c', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 03:25:57.306" endtime="20210322 03:25:57.307"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:25:57.308" level="INFO">b01308ea9d5a9625</msg>
<status status="PASS" starttime="20210322 03:25:57.307" endtime="20210322 03:25:57.308"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:25:57.309" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:25:57.308" endtime="20210322 03:25:57.309"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${address_external_key}</var>
</assign>
<msg timestamp="20210322 03:25:57.310" level="INFO">${address_external_key} = 17b8dfb5d9a54204a9d5c8837457f493</msg>
<status status="PASS" starttime="20210322 03:25:57.309" endtime="20210322 03:25:57.310"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${address_external_key}</arg>
</arguments>
<msg timestamp="20210322 03:25:57.311" level="INFO">${address_external_key} = 17b8dfb5d9a54204a9d5c8837457f493</msg>
<status status="PASS" starttime="20210322 03:25:57.310" endtime="20210322 03:25:57.311"></status>
</kw>
<status status="PASS" starttime="20210322 03:25:57.078" endtime="20210322 03:25:57.311"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 03:25:57.312" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:25:57.312" endtime="20210322 03:25:57.312"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>SELFIE</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:25:57.314" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 03:25:57.313" endtime="20210322 03:25:57.314"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 03:25:57.315" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 03:25:57.317" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 03:25:57.314" endtime="20210322 03:25:57.317"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:25:57.318" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/9d952033671a468ba9e74de45f5c2d3c/documents?type=SELFIE, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 03:25:57.578" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:25:57.317" endtime="20210322 03:25:57.578"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:25:57.580" level="INFO">{'id': 'e280712c0c76445fae71114e504e0225', 'document_type': 'selfie', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/9d952033671a468ba9e74de45f5c2d3c/documents/e280712c0c76445fae71114e504e0225', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/9d952033671a468ba9e74de45f5c2d3c', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/9d952033671a468ba9e74de45f5c2d3c/documents/e280712c0c76445fae71114e504e0225/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 03:25:57.579" endtime="20210322 03:25:57.580"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:25:57.582" level="INFO">27e0fbe41dfb55d0</msg>
<status status="PASS" starttime="20210322 03:25:57.581" endtime="20210322 03:25:57.582"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:25:57.583" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:25:57.582" endtime="20210322 03:25:57.584"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 03:25:57.586" level="INFO">${document_external_key} = e280712c0c76445fae71114e504e0225</msg>
<status status="PASS" starttime="20210322 03:25:57.584" endtime="20210322 03:25:57.586"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 03:25:57.588" level="INFO">${document_external_key} = e280712c0c76445fae71114e504e0225</msg>
<status status="PASS" starttime="20210322 03:25:57.587" endtime="20210322 03:25:57.588"></status>
</kw>
<status status="PASS" starttime="20210322 03:25:57.313" endtime="20210322 03:25:57.588"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 03:25:57.589" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:25:57.589" endtime="20210322 03:25:57.590"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>RG_FRENTE</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:25:57.591" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 03:25:57.591" endtime="20210322 03:25:57.591"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 03:25:57.592" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 03:25:57.595" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 03:25:57.592" endtime="20210322 03:25:57.595"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:25:57.596" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/9d952033671a468ba9e74de45f5c2d3c/documents?type=RG_FRENTE, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 03:25:57.850" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:25:57.595" endtime="20210322 03:25:57.850"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:25:57.851" level="INFO">{'id': '8944c798e35549d098de2f5bffd83a3a', 'document_type': 'rg_frente', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/9d952033671a468ba9e74de45f5c2d3c/documents/8944c798e35549d098de2f5bffd83a3a', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/9d952033671a468ba9e74de45f5c2d3c', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/9d952033671a468ba9e74de45f5c2d3c/documents/8944c798e35549d098de2f5bffd83a3a/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 03:25:57.850" endtime="20210322 03:25:57.851"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:25:57.852" level="INFO">be2e41ad0222d75d</msg>
<status status="PASS" starttime="20210322 03:25:57.852" endtime="20210322 03:25:57.852"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:25:57.853" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:25:57.852" endtime="20210322 03:25:57.853"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 03:25:57.853" level="INFO">${document_external_key} = 8944c798e35549d098de2f5bffd83a3a</msg>
<status status="PASS" starttime="20210322 03:25:57.853" endtime="20210322 03:25:57.853"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 03:25:57.854" level="INFO">${document_external_key} = 8944c798e35549d098de2f5bffd83a3a</msg>
<status status="PASS" starttime="20210322 03:25:57.854" endtime="20210322 03:25:57.854"></status>
</kw>
<status status="PASS" starttime="20210322 03:25:57.590" endtime="20210322 03:25:57.855"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 03:25:57.855" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:25:57.855" endtime="20210322 03:25:57.855"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>RG_VERSO</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:25:57.856" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 03:25:57.856" endtime="20210322 03:25:57.856"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 03:25:57.856" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 03:25:57.858" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 03:25:57.856" endtime="20210322 03:25:57.858"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:25:57.858" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/9d952033671a468ba9e74de45f5c2d3c/documents?type=RG_VERSO, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 03:25:58.126" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:25:57.858" endtime="20210322 03:25:58.126"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:25:58.127" level="INFO">{'id': '3010eb48bf964f4fbe05ee5ea7f3c231', 'document_type': 'rg_verso', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/9d952033671a468ba9e74de45f5c2d3c/documents/3010eb48bf964f4fbe05ee5ea7f3c231', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/9d952033671a468ba9e74de45f5c2d3c', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/9d952033671a468ba9e74de45f5c2d3c/documents/3010eb48bf964f4fbe05ee5ea7f3c231/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 03:25:58.126" endtime="20210322 03:25:58.127"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:25:58.128" level="INFO">1b9f9585885f78ac</msg>
<status status="PASS" starttime="20210322 03:25:58.128" endtime="20210322 03:25:58.128"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:25:58.129" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:25:58.128" endtime="20210322 03:25:58.129"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 03:25:58.130" level="INFO">${document_external_key} = 3010eb48bf964f4fbe05ee5ea7f3c231</msg>
<status status="PASS" starttime="20210322 03:25:58.129" endtime="20210322 03:25:58.130"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 03:25:58.131" level="INFO">${document_external_key} = 3010eb48bf964f4fbe05ee5ea7f3c231</msg>
<status status="PASS" starttime="20210322 03:25:58.130" endtime="20210322 03:25:58.131"></status>
</kw>
<status status="PASS" starttime="20210322 03:25:57.855" endtime="20210322 03:25:58.131"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 03:25:58.132" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:25:58.131" endtime="20210322 03:25:58.132"></status>
</kw>
<kw name="solicitar aprovação do holder" library="accreditation_request_approval">
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:25:58.133" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 03:25:58.133" endtime="20210322 03:25:58.133"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/approval</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:25:58.134" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/9d952033671a468ba9e74de45f5c2d3c/approval, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data=None 
json=None</msg>
<msg timestamp="20210322 03:25:58.396" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:25:58.134" endtime="20210322 03:25:58.396"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:25:58.397" level="INFO">{'message': 'Approval request accepted successfully. Processing analysis'}</msg>
<status status="PASS" starttime="20210322 03:25:58.396" endtime="20210322 03:25:58.397"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:25:58.397" level="INFO">77643cfb226ac0f4</msg>
<status status="PASS" starttime="20210322 03:25:58.397" endtime="20210322 03:25:58.397"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:25:58.398" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:25:58.397" endtime="20210322 03:25:58.398"></status>
</kw>
<status status="PASS" starttime="20210322 03:25:58.132" endtime="20210322 03:25:58.398"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 03:25:58.398" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:25:58.398" endtime="20210322 03:25:58.398"></status>
</kw>
<kw name="recebendo notificação de aprovação" library="accreditation_risk_notification">
<kw name="Uuid 4" library="FakerLibrary">
<doc>Generates a random UUID4 string.
:param cast_to: Specify what type the UUID should be cast to. Default is `str`
:type cast_to: callable</doc>
<assign>
<var>${assessment_id}</var>
</assign>
<msg timestamp="20210322 03:25:58.399" level="INFO">${assessment_id} = e5cdbe7a-0e98-4f52-8b02-2d155ae7d18d</msg>
<status status="PASS" starttime="20210322 03:25:58.399" endtime="20210322 03:25:58.399"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>year</arg>
</arguments>
<assign>
<var>${year}</var>
</assign>
<msg timestamp="20210322 03:25:58.399" level="INFO">${year} = 2021</msg>
<status status="PASS" starttime="20210322 03:25:58.399" endtime="20210322 03:25:58.399"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>month</arg>
</arguments>
<assign>
<var>${month}</var>
</assign>
<msg timestamp="20210322 03:25:58.399" level="INFO">${month} = 03</msg>
<status status="PASS" starttime="20210322 03:25:58.399" endtime="20210322 03:25:58.399"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>day</arg>
</arguments>
<assign>
<var>${day}</var>
</assign>
<msg timestamp="20210322 03:25:58.400" level="INFO">${day} = 22</msg>
<status status="PASS" starttime="20210322 03:25:58.400" endtime="20210322 03:25:58.400"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:25:58.400" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 03:25:58.400" endtime="20210322 03:25:58.400"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "risk.assessment.result",</arg>
<arg>"resource": "business.holder",</arg>
<arg>"created_at": "${year}-${month}-${day} 15:28:56.747Z",</arg>
<arg>"marketplace_id": "${marketplace_external_key}",</arg>
<arg>"object": {</arg>
<arg>"result": "APPROVED",</arg>
<arg>"holder_id": "${holder_external_key}",</arg>
<arg>"applicant_id": "${application_external_key}",</arg>
<arg>"assessment_id": "${assessment_id}"</arg>
<arg>}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 03:25:58.401" level="INFO">${body} = { "type": "risk.assessment.result", "resource": "business.holder", "created_at": "2021-03-22 15:28:56.747Z", "marketplace_id": "f71a8951368a4cc085cf7875ff44e61c", "object": { "result": "APPROVED", "ho...</msg>
<status status="PASS" starttime="20210322 03:25:58.401" endtime="20210322 03:25:58.402"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/admin/internal_operation/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/registration/approval</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:25:58.402" level="INFO">POST Request using : uri=/admin/internal_operation/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/9d952033671a468ba9e74de45f5c2d3c/registration/approval, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "risk.assessment.result", "resource": "business.holder", "created_at": "2021-03-22 15:28:56.747Z", "marketplace_id": "f71a8951368a4cc085cf7875ff44e61c", "object": { "result": "APPROVED", "holder_id": "9d952033671a468ba9e74de45f5c2d3c", "applicant_id": "bcc25a6751c14b52af1340d40dba78c5", "assessment_id": "e5cdbe7a-0e98-4f52-8b02-2d155ae7d18d" } } 
json=None</msg>
<msg timestamp="20210322 03:25:58.591" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:25:58.402" endtime="20210322 03:25:58.591"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:25:58.591" level="INFO">{'message': 'Holder approved successfully'}</msg>
<status status="PASS" starttime="20210322 03:25:58.591" endtime="20210322 03:25:58.591"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:25:58.592" level="INFO">760d72cb6399b813</msg>
<status status="PASS" starttime="20210322 03:25:58.591" endtime="20210322 03:25:58.592"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:25:58.593" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:25:58.592" endtime="20210322 03:25:58.593"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 03:25:58.593" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:25:58.593" endtime="20210322 03:25:58.593"></status>
</kw>
<status status="PASS" starttime="20210322 03:25:58.398" endtime="20210322 03:25:58.593"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 03:25:58.593" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:25:58.593" endtime="20210322 03:25:58.593"></status>
</kw>
<kw name="buscar account por holder" library="accounts_get_accounts_by_holder">
<kw name="conectar accounts" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accounts</arg>
<arg>url=${account_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 03:25:58.594" level="INFO">Creating Session using : alias=accounts, url=https://banking-accounts-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 03:25:58.594" endtime="20210322 03:25:58.595"></status>
</kw>
<status status="PASS" starttime="20210322 03:25:58.593" endtime="20210322 03:25:58.595"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accounts</arg>
<arg>/marketplaces/${marketplace_external_key}/holders/${holder_external_key}/accounts</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:25:58.595" level="INFO">GET Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/holders/9d952033671a468ba9e74de45f5c2d3c/accounts, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 03:25:59.200" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:25:58.595" endtime="20210322 03:25:59.201"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:25:59.201" level="INFO">{'items': [{'id': '3258924289884cadb305c9d5dc230657', 'holder': '9d952033671a468ba9e74de45f5c2d3c', 'balance': '0.00', 'currency': 'BRL', 'routing_number': '001', 'number': '5682140518', 'status': 'active', 'metadata': {}, 'created_at': '2021-03-22T06:25:59.445195', 'updated_at': '2021-03-22T06:25:59.445195', 'primary': True, 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'uri': '/v2/marketplaces/f71a8951368a4cc085cf7875ff44e61c/accounts/3258924289884cadb305c9d5dc230657', 'resource': 'payment_account'}], 'has_more': False, 'limit': 100, 'total_pages': 1, 'page': 1, 'offset': 0, 'total': '1', 'query_count': '1'}</msg>
<status status="PASS" starttime="20210322 03:25:59.201" endtime="20210322 03:25:59.201"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:25:59.202" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:25:59.202" endtime="20210322 03:25:59.202"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["id"]}</arg>
</arguments>
<assign>
<var>${account_external_key}</var>
</assign>
<msg timestamp="20210322 03:25:59.203" level="INFO">${account_external_key} = 3258924289884cadb305c9d5dc230657</msg>
<status status="PASS" starttime="20210322 03:25:59.202" endtime="20210322 03:25:59.203"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_external_key}</arg>
</arguments>
<msg timestamp="20210322 03:25:59.203" level="INFO">${account_external_key} = 3258924289884cadb305c9d5dc230657</msg>
<status status="PASS" starttime="20210322 03:25:59.203" endtime="20210322 03:25:59.203"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["number"]}</arg>
</arguments>
<assign>
<var>${account_number}</var>
</assign>
<msg timestamp="20210322 03:25:59.204" level="INFO">${account_number} = 5682140518</msg>
<status status="PASS" starttime="20210322 03:25:59.203" endtime="20210322 03:25:59.204"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_number}</arg>
</arguments>
<msg timestamp="20210322 03:25:59.205" level="INFO">${account_number} = 5682140518</msg>
<status status="PASS" starttime="20210322 03:25:59.204" endtime="20210322 03:25:59.205"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["routing_number"]}</arg>
</arguments>
<assign>
<var>${account_routing_number}</var>
</assign>
<msg timestamp="20210322 03:25:59.205" level="INFO">${account_routing_number} = 001</msg>
<status status="PASS" starttime="20210322 03:25:59.205" endtime="20210322 03:25:59.205"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_routing_number}</arg>
</arguments>
<msg timestamp="20210322 03:25:59.206" level="INFO">${account_routing_number} = 001</msg>
<status status="PASS" starttime="20210322 03:25:59.206" endtime="20210322 03:25:59.206"></status>
</kw>
<status status="PASS" starttime="20210322 03:25:58.593" endtime="20210322 03:25:59.206"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 03:25:59.206" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:25:59.206" endtime="20210322 03:25:59.206"></status>
</kw>
<status status="PASS" starttime="20210322 03:25:56.217" endtime="20210322 03:25:59.207"></status>
</kw>
<kw name="criar chave pix" library="pix_dict_create_entry">
<arguments>
<arg>email</arg>
<arg>${email_pix}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 03:25:59.208" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 03:25:59.207" endtime="20210322 03:25:59.208"></status>
</kw>
<status status="PASS" starttime="20210322 03:25:59.207" endtime="20210322 03:25:59.208"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${type}</arg>
</arguments>
<msg timestamp="20210322 03:25:59.208" level="INFO">${type} = email</msg>
<status status="PASS" starttime="20210322 03:25:59.208" endtime="20210322 03:25:59.209"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210322 03:25:59.209" level="INFO">${value} = milenagoncalves@pinto.com</msg>
<status status="PASS" starttime="20210322 03:25:59.209" endtime="20210322 03:25:59.209"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:25:59.209" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 03:25:59.209" endtime="20210322 03:25:59.209"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "${type}",</arg>
<arg>"value": "${value}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 03:25:59.210" level="INFO">${body} = { "type": "email", "value": "milenagoncalves@pinto.com" }</msg>
<status status="PASS" starttime="20210322 03:25:59.210" endtime="20210322 03:25:59.210"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:25:59.211" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/9d952033671a468ba9e74de45f5c2d3c/accounts/3258924289884cadb305c9d5dc230657/entries, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "email", "value": "milenagoncalves@pinto.com" } 
json=None</msg>
<msg timestamp="20210322 03:25:59.891" level="INFO">${response} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20210322 03:25:59.210" endtime="20210322 03:25:59.891"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:25:59.893" level="INFO">{'id': '8e342cc808514b00957d8dc6089afe2b', 'status': 'waiting_ownership_verification', 'created_at': '2021-03-22T03:26:00.759', 'updated_at': '2021-03-22T03:26:00.759', 'key': {'value': 'milenagoncalves@pinto.com', 'type': 'email'}, 'account': {'id': '3258924289884cadb305c9d5dc230657', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': '9d952033671a468ba9e74de45f5c2d3c', 'owner': {'name': 'Holder de teste', 'national_registration': '70821569449', 'type': 'individual'}, 'routing_number': '001', 'number': '5682140518', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}, 'resource': 'pix.entry'}</msg>
<status status="PASS" starttime="20210322 03:25:59.892" endtime="20210322 03:25:59.894"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:25:59.895" level="INFO">2e2f824bfc6bf706</msg>
<status status="PASS" starttime="20210322 03:25:59.894" endtime="20210322 03:25:59.895"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 03:25:59.896" level="INFO">202</msg>
<status status="PASS" starttime="20210322 03:25:59.896" endtime="20210322 03:25:59.897"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:25:59.898" level="INFO">${response} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20210322 03:25:59.897" endtime="20210322 03:25:59.899"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${entry_external_key}</var>
</assign>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:25:59.900" endtime="20210322 03:25:59.901"></status>
</kw>
<msg timestamp="20210322 03:25:59.902" level="INFO">${entry_external_key} = 8e342cc808514b00957d8dc6089afe2b</msg>
<status status="PASS" starttime="20210322 03:25:59.899" endtime="20210322 03:25:59.902"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${entry_external_key}</arg>
</arguments>
<msg timestamp="20210322 03:25:59.903" level="INFO">${entry_external_key} = 8e342cc808514b00957d8dc6089afe2b</msg>
<status status="PASS" starttime="20210322 03:25:59.902" endtime="20210322 03:25:59.903"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["key"]["value"]}</arg>
</arguments>
<assign>
<var>${entry_key_value}</var>
</assign>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["key"]["value"]}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:25:59.904" endtime="20210322 03:25:59.905"></status>
</kw>
<msg timestamp="20210322 03:25:59.905" level="INFO">${entry_key_value} = milenagoncalves@pinto.com</msg>
<status status="PASS" starttime="20210322 03:25:59.903" endtime="20210322 03:25:59.905"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${entry_key_value}</arg>
</arguments>
<msg timestamp="20210322 03:25:59.905" level="INFO">${entry_key_value} = milenagoncalves@pinto.com</msg>
<status status="PASS" starttime="20210322 03:25:59.905" endtime="20210322 03:25:59.905"></status>
</kw>
<status status="PASS" starttime="20210322 03:25:59.207" endtime="20210322 03:25:59.905"></status>
</kw>
<kw name="validar criação da chave pix" library="asserts">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando status_code</arg>
</arguments>
<msg timestamp="20210322 03:25:59.906" level="INFO">Validando status_code</msg>
<status status="PASS" starttime="20210322 03:25:59.906" endtime="20210322 03:25:59.906"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${type}' == 'evp'</arg>
<arg>Should Be Equal As Integers</arg>
<arg>${response.status_code}</arg>
<arg>201</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'phone'</arg>
<arg>Should Be Equal As Integers</arg>
<arg>${response.status_code}</arg>
<arg>202</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'email'</arg>
<arg>Should Be Equal As Integers</arg>
<arg>${response.status_code}</arg>
<arg>202</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'national_registration'</arg>
<arg>Should Be Equal As Integers</arg>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>202</arg>
</arguments>
<msg timestamp="20210322 03:25:59.907" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:25:59.907" endtime="20210322 03:25:59.907"></status>
</kw>
<status status="PASS" starttime="20210322 03:25:59.906" endtime="20210322 03:25:59.907"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar status da chave</arg>
</arguments>
<msg timestamp="20210322 03:25:59.907" level="INFO">Validar status da chave</msg>
<status status="PASS" starttime="20210322 03:25:59.907" endtime="20210322 03:25:59.907"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${type}' == 'evp'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["status"]}</arg>
<arg>active</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'phone'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["status"]}</arg>
<arg>waiting_ownership_verification</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'email'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["status"]}</arg>
<arg>waiting_ownership_verification</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'national_registration'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["status"]}</arg>
<arg>active</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["status"]}</arg>
<arg>waiting_ownership_verification</arg>
</arguments>
<status status="PASS" starttime="20210322 03:25:59.908" endtime="20210322 03:25:59.908"></status>
</kw>
<status status="PASS" starttime="20210322 03:25:59.907" endtime="20210322 03:25:59.908"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando Tipo da chave PIX</arg>
</arguments>
<msg timestamp="20210322 03:25:59.908" level="INFO">Validando Tipo da chave PIX</msg>
<status status="PASS" starttime="20210322 03:25:59.908" endtime="20210322 03:25:59.909"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${type}' == 'evp'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["type"]}</arg>
<arg>${type}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'phone'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["type"]}</arg>
<arg>${type}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'email'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["type"]}</arg>
<arg>${type}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'national_registration'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["type"]}</arg>
<arg>${type}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["key"]["type"]}</arg>
<arg>${type}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:25:59.909" endtime="20210322 03:25:59.909"></status>
</kw>
<status status="PASS" starttime="20210322 03:25:59.909" endtime="20210322 03:25:59.910"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando Valor da chave PIX</arg>
</arguments>
<msg timestamp="20210322 03:25:59.910" level="INFO">Validando Valor da chave PIX</msg>
<status status="PASS" starttime="20210322 03:25:59.910" endtime="20210322 03:25:59.910"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${type}' == 'evp'</arg>
<arg>Should Not Be Empty</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'phone'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${phone_pix}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'email'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${email_pix}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'national_registration'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${national_registration}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${email_pix}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:25:59.910" endtime="20210322 03:25:59.911"></status>
</kw>
<status status="PASS" starttime="20210322 03:25:59.910" endtime="20210322 03:25:59.911"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando dados da conta</arg>
</arguments>
<msg timestamp="20210322 03:25:59.911" level="INFO">Validando dados da conta</msg>
<status status="PASS" starttime="20210322 03:25:59.911" endtime="20210322 03:25:59.911"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["id"]}</arg>
<arg>${account_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:25:59.911" endtime="20210322 03:25:59.912"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["marketplace"]}</arg>
<arg>${marketplace_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:25:59.912" endtime="20210322 03:25:59.912"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["holder"]}</arg>
<arg>${holder_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:25:59.912" endtime="20210322 03:25:59.912"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["number"]}</arg>
<arg>${account_number}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:25:59.913" endtime="20210322 03:25:59.913"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["routing_number"]}</arg>
<arg>${account_routing_number}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:25:59.913" endtime="20210322 03:25:59.913"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["type"]}</arg>
<arg>CACC</arg>
</arguments>
<status status="PASS" starttime="20210322 03:25:59.913" endtime="20210322 03:25:59.914"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar Proprietário da Account Owner</arg>
</arguments>
<msg timestamp="20210322 03:25:59.914" level="INFO">Validar Proprietário da Account Owner</msg>
<status status="PASS" starttime="20210322 03:25:59.914" endtime="20210322 03:25:59.914"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${holder_type}' == 'individual'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["account"]["owner"]["name"]}</arg>
<arg>${holder_name}</arg>
<arg>ELSE IF</arg>
<arg>'${holder_type}' == 'business'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["account"]["owner"]["name"]}</arg>
<arg>${legal_name}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["account"]["owner"]["name"]}</arg>
<arg>${holder_name}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:25:59.915" endtime="20210322 03:25:59.915"></status>
</kw>
<status status="PASS" starttime="20210322 03:25:59.914" endtime="20210322 03:25:59.915"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar national_registration da Account Owner</arg>
</arguments>
<msg timestamp="20210322 03:25:59.915" level="INFO">Validar national_registration da Account Owner</msg>
<status status="PASS" starttime="20210322 03:25:59.915" endtime="20210322 03:25:59.915"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${holder_type}' == 'individual'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["account"]["owner"]["national_registration"]}</arg>
<arg>${national_registration}</arg>
<arg>ELSE IF</arg>
<arg>'${holder_type}' == 'business'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["account"]["owner"]["national_registration"]}</arg>
<arg>${national_registration}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["account"]["owner"]["national_registration"]}</arg>
<arg>${national_registration}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:25:59.916" endtime="20210322 03:25:59.916"></status>
</kw>
<status status="PASS" starttime="20210322 03:25:59.915" endtime="20210322 03:25:59.916"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar Holder Type do Account Owner</arg>
</arguments>
<msg timestamp="20210322 03:25:59.916" level="INFO">Validar Holder Type do Account Owner</msg>
<status status="PASS" starttime="20210322 03:25:59.916" endtime="20210322 03:25:59.917"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${holder_type}' == 'individual'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["account"]["owner"]["type"]}</arg>
<arg>${holder_type}</arg>
<arg>ELSE IF</arg>
<arg>'${holder_type}' == 'business'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["account"]["owner"]["type"]}</arg>
<arg>${holder_type}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["account"]["owner"]["type"]}</arg>
<arg>${holder_type}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:25:59.917" endtime="20210322 03:25:59.918"></status>
</kw>
<status status="PASS" starttime="20210322 03:25:59.917" endtime="20210322 03:25:59.918"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar PSP</arg>
</arguments>
<msg timestamp="20210322 03:25:59.918" level="INFO">Validar PSP</msg>
<status status="PASS" starttime="20210322 03:25:59.918" endtime="20210322 03:25:59.918"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["psp"]["code"]}</arg>
<arg>19468242</arg>
</arguments>
<status status="PASS" starttime="20210322 03:25:59.919" endtime="20210322 03:25:59.919"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["psp"]["name"]}</arg>
<arg>Zoop Tecnologia e Meios de Pagamento S.A.</arg>
</arguments>
<status status="PASS" starttime="20210322 03:25:59.919" endtime="20210322 03:25:59.920"></status>
</kw>
<status status="PASS" starttime="20210322 03:25:59.905" endtime="20210322 03:25:59.920"></status>
</kw>
<kw name="reenviar verification code" library="pix_dict_resend_verification_code">
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 03:25:59.921" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 03:25:59.921" endtime="20210322 03:25:59.922"></status>
</kw>
<status status="PASS" starttime="20210322 03:25:59.921" endtime="20210322 03:25:59.922"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:25:59.922" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 03:25:59.922" endtime="20210322 03:25:59.922"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries/${entry_external_key}/ownership/resend</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:25:59.923" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/9d952033671a468ba9e74de45f5c2d3c/accounts/3258924289884cadb305c9d5dc230657/entries/8e342cc808514b00957d8dc6089afe2b/ownership/resend, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data=None 
json=None</msg>
<msg timestamp="20210322 03:26:00.552" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:25:59.922" endtime="20210322 03:26:00.552"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:26:00.553" level="INFO">{'message': 'Ownership verification code recreated and sent successfully'}</msg>
<status status="PASS" starttime="20210322 03:26:00.552" endtime="20210322 03:26:00.553"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:26:00.554" level="INFO">a617892abe3043f4</msg>
<status status="PASS" starttime="20210322 03:26:00.554" endtime="20210322 03:26:00.555"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 03:26:00.556" level="INFO">200</msg>
<status status="PASS" starttime="20210322 03:26:00.556" endtime="20210322 03:26:00.557"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:26:00.557" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:26:00.557" endtime="20210322 03:26:00.557"></status>
</kw>
<status status="PASS" starttime="20210322 03:25:59.920" endtime="20210322 03:26:00.557"></status>
</kw>
<kw name="validar reenvio do codigo de verificação" library="asserts">
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 03:26:00.560" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:26:00.560" endtime="20210322 03:26:00.560"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["message"]}</arg>
<arg>Ownership verification code recreated and sent successfully</arg>
</arguments>
<status status="PASS" starttime="20210322 03:26:00.561" endtime="20210322 03:26:00.561"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:00.558" endtime="20210322 03:26:00.561"></status>
</kw>
<kw name="buscar verification code" library="pix_dict_verification_code">
<arguments>
<arg>${holder_external_key}</arg>
<arg>${account_external_key}</arg>
<arg>${entry_external_key}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 03:26:00.563" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 03:26:00.562" endtime="20210322 03:26:00.563"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:00.562" endtime="20210322 03:26:00.564"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/admin/internal_operation/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries/${entry_external_key}/code</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:26:00.565" level="INFO">GET Request using : uri=/admin/internal_operation/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/9d952033671a468ba9e74de45f5c2d3c/accounts/3258924289884cadb305c9d5dc230657/entries/8e342cc808514b00957d8dc6089afe2b/code, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 03:26:01.164" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:26:00.565" endtime="20210322 03:26:01.165"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:26:01.167" level="INFO">{'code': '3170'}</msg>
<status status="PASS" starttime="20210322 03:26:01.166" endtime="20210322 03:26:01.167"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:26:01.170" level="INFO">14eb2c4a6633dbf5</msg>
<status status="PASS" starttime="20210322 03:26:01.168" endtime="20210322 03:26:01.170"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 03:26:01.172" level="INFO">200</msg>
<status status="PASS" starttime="20210322 03:26:01.171" endtime="20210322 03:26:01.172"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:26:01.174" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:26:01.173" endtime="20210322 03:26:01.175"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["code"]}</arg>
</arguments>
<assign>
<var>${verification_code}</var>
</assign>
<msg timestamp="20210322 03:26:01.177" level="INFO">${verification_code} = 3170</msg>
<status status="PASS" starttime="20210322 03:26:01.175" endtime="20210322 03:26:01.177"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${verification_code}</arg>
</arguments>
<msg timestamp="20210322 03:26:01.178" level="INFO">${verification_code} = 3170</msg>
<status status="PASS" starttime="20210322 03:26:01.178" endtime="20210322 03:26:01.178"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:00.561" endtime="20210322 03:26:01.179"></status>
</kw>
<kw name="confirmar propriedade da chave pix" library="pix_dict_confirm_propriety">
<arguments>
<arg>${verification_code}</arg>
<arg>${holder_external_key}</arg>
<arg>${account_external_key}</arg>
<arg>${entry_external_key}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 03:26:01.182" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 03:26:01.181" endtime="20210322 03:26:01.182"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:01.180" endtime="20210322 03:26:01.182"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:26:01.183" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 03:26:01.183" endtime="20210322 03:26:01.183"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"code": "${verification_code}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 03:26:01.184" level="INFO">${body} = { "code": "3170" }</msg>
<status status="PASS" starttime="20210322 03:26:01.184" endtime="20210322 03:26:01.184"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries/${entry_external_key}/ownership</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:26:01.186" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/9d952033671a468ba9e74de45f5c2d3c/accounts/3258924289884cadb305c9d5dc230657/entries/8e342cc808514b00957d8dc6089afe2b/ownership, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "code": "3170" } 
json=None</msg>
<msg timestamp="20210322 03:26:02.795" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:26:01.185" endtime="20210322 03:26:02.795"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:26:02.796" level="INFO">{'id': '8e342cc808514b00957d8dc6089afe2b', 'status': 'active', 'created_at': '2021-03-22T03:26:00.759', 'updated_at': '2021-03-22T03:26:03.678', 'key': {'value': 'milenagoncalves@pinto.com', 'type': 'email'}, 'account': {'id': '3258924289884cadb305c9d5dc230657', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': '9d952033671a468ba9e74de45f5c2d3c', 'owner': {'name': 'Holder de teste', 'national_registration': '70821569449', 'type': 'individual'}, 'routing_number': '001', 'number': '5682140518', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}, 'resource': 'pix.entry'}</msg>
<status status="PASS" starttime="20210322 03:26:02.795" endtime="20210322 03:26:02.796"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:26:02.797" level="INFO">a41b9ec51057a56e</msg>
<status status="PASS" starttime="20210322 03:26:02.796" endtime="20210322 03:26:02.797"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 03:26:02.798" level="INFO">201</msg>
<status status="PASS" starttime="20210322 03:26:02.797" endtime="20210322 03:26:02.798"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:26:02.798" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:26:02.798" endtime="20210322 03:26:02.799"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:01.179" endtime="20210322 03:26:02.799"></status>
</kw>
<kw name="validar ativação da chave de endereçamento" library="asserts">
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["status"]}</arg>
<arg>active</arg>
</arguments>
<status status="PASS" starttime="20210322 03:26:02.800" endtime="20210322 03:26:02.800"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:02.799" endtime="20210322 03:26:02.800"></status>
</kw>
<doc>Fluxo Alternativo</doc>
<tags>
<tag>smoke_test</tag>
</tags>
<status status="PASS" starttime="20210322 03:25:56.215" endtime="20210322 03:26:02.800" critical="yes"></status>
</test>
<test id="s1-s1-s2-t4" name="Cenário: Confirmar proprierdade de de chave de endereçamento utilizando o código de verificação inválido">
<kw name="Random Number" library="FakerLibrary">
<doc>Returns a random number with 1 digit (default, when digits==None),
a random number with 0 to given number of digits, or a random number
with given number to given number of digits (when ``fix_len==True``).</doc>
<arguments>
<arg>digits=8</arg>
<arg>fix_len=True</arg>
</arguments>
<assign>
<var>${phone}</var>
</assign>
<msg timestamp="20210322 03:26:02.803" level="INFO">${phone} = 33044692</msg>
<status status="PASS" starttime="20210322 03:26:02.802" endtime="20210322 03:26:02.803"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>+55219${phone}</arg>
</arguments>
<assign>
<var>${phone_pix}</var>
</assign>
<msg timestamp="20210322 03:26:02.804" level="INFO">${phone_pix} = +5521933044692</msg>
<status status="PASS" starttime="20210322 03:26:02.803" endtime="20210322 03:26:02.804"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${phone_pix}</arg>
</arguments>
<msg timestamp="20210322 03:26:02.804" level="INFO">${phone_pix} = +5521933044692</msg>
<status status="PASS" starttime="20210322 03:26:02.804" endtime="20210322 03:26:02.804"></status>
</kw>
<kw name="criar holder individual ativo" library="accreditation_create_holder_active">
<kw name="conectar accreditation" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accreditation</arg>
<arg>url=${accreditation_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 03:26:02.806" level="INFO">Creating Session using : alias=accreditation, url=https://banking-accreditation-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 03:26:02.805" endtime="20210322 03:26:02.806"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:02.805" endtime="20210322 03:26:02.806"></status>
</kw>
<kw name="Cpf" library="FakerLibrary">
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 03:26:02.807" level="INFO">${national_registration} = 364.280.957-00</msg>
<status status="PASS" starttime="20210322 03:26:02.807" endtime="20210322 03:26:02.807"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${national_registration}</arg>
<arg>.</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 03:26:02.808" level="INFO">${national_registration} = 364280957-00</msg>
<status status="PASS" starttime="20210322 03:26:02.807" endtime="20210322 03:26:02.808"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${national_registration}</arg>
<arg>-</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 03:26:02.810" level="INFO">${national_registration} = 36428095700</msg>
<status status="PASS" starttime="20210322 03:26:02.810" endtime="20210322 03:26:02.810"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${national_registration}</arg>
</arguments>
<msg timestamp="20210322 03:26:02.810" level="INFO">${national_registration} = 36428095700</msg>
<status status="PASS" starttime="20210322 03:26:02.810" endtime="20210322 03:26:02.810"></status>
</kw>
<kw name="Rg" library="FakerLibrary">
<doc>Brazilian RG, return plain numbers.
Check:  https://www.ngmatematica.com/2014/02/como-determinar-o-digito-verificador-do.html</doc>
<assign>
<var>${identity_card}</var>
</assign>
<msg timestamp="20210322 03:26:02.811" level="INFO">${identity_card} = 148765300</msg>
<status status="PASS" starttime="20210322 03:26:02.810" endtime="20210322 03:26:02.811"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${identity_card}</arg>
</arguments>
<msg timestamp="20210322 03:26:02.811" level="INFO">${identity_card} = 148765300</msg>
<status status="PASS" starttime="20210322 03:26:02.811" endtime="20210322 03:26:02.811"></status>
</kw>
<kw name="criar holder individual" library="accreditation_post_holder_individual">
<arguments>
<arg>holder_type=individual</arg>
<arg>holder_name=${holder_name}</arg>
<arg>email=${email}</arg>
<arg>national_registration=${national_registration}</arg>
<arg>revenue=${revenue}</arg>
<arg>birthday=${birthday}</arg>
<arg>mothers_name=${mothers_name}</arg>
<arg>identity_card=${identity_card}</arg>
<arg>pep=false</arg>
<arg>cbo=${cbo}</arg>
</arguments>
<kw name="conectar accreditation" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accreditation</arg>
<arg>url=${accreditation_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 03:26:02.813" level="INFO">Creating Session using : alias=accreditation, url=https://banking-accreditation-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 03:26:02.813" endtime="20210322 03:26:02.814"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:02.812" endtime="20210322 03:26:02.814"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_type}</arg>
</arguments>
<msg timestamp="20210322 03:26:02.814" level="INFO">${holder_type} = individual</msg>
<status status="PASS" starttime="20210322 03:26:02.814" endtime="20210322 03:26:02.814"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_name}</arg>
</arguments>
<msg timestamp="20210322 03:26:02.815" level="INFO">${holder_name} = Holder de teste</msg>
<status status="PASS" starttime="20210322 03:26:02.815" endtime="20210322 03:26:02.815"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:26:02.816" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 03:26:02.815" endtime="20210322 03:26:02.816"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "${holder_type}",</arg>
<arg>"name": "${holder_name}",</arg>
<arg>"email": "${email}",</arg>
<arg>"national_registration": "${national_registration}",</arg>
<arg>"revenue": ${revenue},</arg>
<arg>"birthday": "${birthday}",</arg>
<arg>"mothers_name": "${mothers_name}",</arg>
<arg>"identity_card": "${identity_card}",</arg>
<arg>"pep": false,</arg>
<arg>"cbo": ${cbo}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 03:26:02.817" level="INFO">${body} = { "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "36428095700", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder",...</msg>
<status status="PASS" starttime="20210322 03:26:02.816" endtime="20210322 03:26:02.817"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:26:02.818" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "36428095700", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder", "identity_card": "148765300", "pep": false, "cbo": 821450 } 
json=None</msg>
<msg timestamp="20210322 03:26:03.467" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:26:02.817" endtime="20210322 03:26:03.467"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:26:03.467" level="INFO">{'id': '36574b52695d40958d252b41dc0b91c3', 'name': 'Holder de teste', 'revenue': 5500.0, 'email': 'teste@teste.com.br', 'status': 'waiting_info_and_documents', 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'marketplace_name': 'Marketplace de Teste', 'created_at': '2021-03-22T03:26:04.317777', 'updated_at': '2021-03-22T03:26:04.317778', 'type': 'individual', 'national_registration': '36428095700', 'birthday': '1988-04-23', 'mothers_name': 'Mãe do Holder', 'identity_card': '148765300', 'pep': False, 'cbo': '821450', '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/36574b52695d40958d252b41dc0b91c3', 'type': 'GET'}, 'phones': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/36574b52695d40958d252b41dc0b91c3/phones', 'type': 'GET'}, 'addresses': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/36574b52695d40958d252b41dc0b91c3/addresses', 'type': 'GET'}, 'documents': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/36574b52695d40958d252b41dc0b91c3/documents', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 03:26:03.467" endtime="20210322 03:26:03.467"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:26:03.468" level="INFO">16d4aa147d29fe22</msg>
<status status="PASS" starttime="20210322 03:26:03.468" endtime="20210322 03:26:03.469"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${body}</arg>
</arguments>
<msg timestamp="20210322 03:26:03.469" level="INFO">{ "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "36428095700", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder", "identity_card": "148765300", "pep": false, "cbo": 821450 }</msg>
<status status="PASS" starttime="20210322 03:26:03.469" endtime="20210322 03:26:03.469"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:26:03.469" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:26:03.469" endtime="20210322 03:26:03.469"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${holder_external_key}</var>
</assign>
<msg timestamp="20210322 03:26:03.470" level="INFO">${holder_external_key} = 36574b52695d40958d252b41dc0b91c3</msg>
<status status="PASS" starttime="20210322 03:26:03.469" endtime="20210322 03:26:03.470"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_external_key}</arg>
</arguments>
<msg timestamp="20210322 03:26:03.470" level="INFO">${holder_external_key} = 36574b52695d40958d252b41dc0b91c3</msg>
<status status="PASS" starttime="20210322 03:26:03.470" endtime="20210322 03:26:03.470"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:02.811" endtime="20210322 03:26:03.470"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_name}</arg>
</arguments>
<msg timestamp="20210322 03:26:03.471" level="INFO">${holder_name} = Holder de teste</msg>
<status status="PASS" starttime="20210322 03:26:03.471" endtime="20210322 03:26:03.471"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 03:26:03.471" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:26:03.471" endtime="20210322 03:26:03.472"></status>
</kw>
<kw name="criar holder phone" library="accreditation_post_holder_phone">
<arguments>
<arg>21</arg>
<arg>51</arg>
<arg>996221236</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:26:03.472" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 03:26:03.472" endtime="20210322 03:26:03.472"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"area_code": "${phone_area_code}",</arg>
<arg>"country_code": "${phone_country_code}",</arg>
<arg>"number": "${phone_number}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 03:26:03.473" level="INFO">${body} = { "area_code": "21", "country_code": "51", "number": "996221236" }</msg>
<status status="PASS" starttime="20210322 03:26:03.473" endtime="20210322 03:26:03.473"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/phones</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:26:03.474" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/36574b52695d40958d252b41dc0b91c3/phones, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "area_code": "21", "country_code": "51", "number": "996221236" } 
json=None</msg>
<msg timestamp="20210322 03:26:03.692" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:26:03.473" endtime="20210322 03:26:03.692"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:26:03.695" level="INFO">{'id': '6b3b72648090437592f0da91c3584b56', 'area_code': '21', 'country_code': '51', 'number': '996221236', 'main': True, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/36574b52695d40958d252b41dc0b91c3/phones/6b3b72648090437592f0da91c3584b56', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/36574b52695d40958d252b41dc0b91c3', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 03:26:03.693" endtime="20210322 03:26:03.695"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:26:03.697" level="INFO">054ceca8fe11323c</msg>
<status status="PASS" starttime="20210322 03:26:03.696" endtime="20210322 03:26:03.697"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:26:03.699" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:26:03.698" endtime="20210322 03:26:03.699"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${phone_external_key}</var>
</assign>
<msg timestamp="20210322 03:26:03.703" level="INFO">${phone_external_key} = 6b3b72648090437592f0da91c3584b56</msg>
<status status="PASS" starttime="20210322 03:26:03.700" endtime="20210322 03:26:03.703"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${phone_external_key}</arg>
</arguments>
<msg timestamp="20210322 03:26:03.705" level="INFO">${phone_external_key} = 6b3b72648090437592f0da91c3584b56</msg>
<status status="PASS" starttime="20210322 03:26:03.704" endtime="20210322 03:26:03.705"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:03.472" endtime="20210322 03:26:03.706"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 03:26:03.707" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:26:03.706" endtime="20210322 03:26:03.708"></status>
</kw>
<kw name="criar holder address" library="accreditation_post_holder_address">
<arguments>
<arg>Rio de Janeiro</arg>
<arg>Rio de Janeiro</arg>
<arg>Brasil</arg>
<arg>Bairro de Testes</arg>
<arg>Rua de Testes</arg>
<arg>90</arg>
<arg>apto 200</arg>
<arg>21550987</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:26:03.710" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 03:26:03.709" endtime="20210322 03:26:03.710"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"city": "${city}",</arg>
<arg>"state": "${state}",</arg>
<arg>"country": "${country}",</arg>
<arg>"neighborhood": "${neighborhood}",</arg>
<arg>"street": "${street}",</arg>
<arg>"number": "${number}",</arg>
<arg>"complement": "${complement}",</arg>
<arg>"postal_code": "${postal_code}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 03:26:03.712" level="INFO">${body} = { "city": "Rio de Janeiro", "state": "Rio de Janeiro", "country": "Brasil", "neighborhood": "Bairro de Testes", "street": "Rua de Testes", "number": "90", "complement": "apto 200", "postal_code": "215...</msg>
<status status="PASS" starttime="20210322 03:26:03.711" endtime="20210322 03:26:03.712"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/addresses</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:26:03.713" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/36574b52695d40958d252b41dc0b91c3/addresses, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "city": "Rio de Janeiro", "state": "Rio de Janeiro", "country": "Brasil", "neighborhood": "Bairro de Testes", "street": "Rua de Testes", "number": "90", "complement": "apto 200", "postal_code": "21550987" } 
json=None</msg>
<msg timestamp="20210322 03:26:03.941" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:26:03.712" endtime="20210322 03:26:03.941"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:26:03.941" level="INFO">{'id': '75caa85e5a0b4de4aca57d708a0eacdb', 'street': 'Rua de Testes', 'number': '90', 'city': 'Rio de Janeiro', 'complement': 'apto 200', 'state': 'Rio de Janeiro', 'neighborhood': 'Bairro de Testes', 'postal_code': '21550987', 'country': 'Brasil', 'main': True, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/36574b52695d40958d252b41dc0b91c3/addresses/75caa85e5a0b4de4aca57d708a0eacdb', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/36574b52695d40958d252b41dc0b91c3', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 03:26:03.941" endtime="20210322 03:26:03.941"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:26:03.942" level="INFO">9ccbcb979c0231ee</msg>
<status status="PASS" starttime="20210322 03:26:03.941" endtime="20210322 03:26:03.942"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:26:03.943" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:26:03.942" endtime="20210322 03:26:03.943"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${address_external_key}</var>
</assign>
<msg timestamp="20210322 03:26:03.943" level="INFO">${address_external_key} = 75caa85e5a0b4de4aca57d708a0eacdb</msg>
<status status="PASS" starttime="20210322 03:26:03.943" endtime="20210322 03:26:03.943"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${address_external_key}</arg>
</arguments>
<msg timestamp="20210322 03:26:03.944" level="INFO">${address_external_key} = 75caa85e5a0b4de4aca57d708a0eacdb</msg>
<status status="PASS" starttime="20210322 03:26:03.944" endtime="20210322 03:26:03.944"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:03.708" endtime="20210322 03:26:03.944"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 03:26:03.945" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:26:03.945" endtime="20210322 03:26:03.945"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>SELFIE</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:26:03.946" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 03:26:03.946" endtime="20210322 03:26:03.946"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 03:26:03.947" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 03:26:03.949" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 03:26:03.946" endtime="20210322 03:26:03.949"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:26:03.949" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/36574b52695d40958d252b41dc0b91c3/documents?type=SELFIE, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 03:26:04.251" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:26:03.949" endtime="20210322 03:26:04.251"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:26:04.251" level="INFO">{'id': '4a0084068a58452badc7e5dd396c15c1', 'document_type': 'selfie', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/36574b52695d40958d252b41dc0b91c3/documents/4a0084068a58452badc7e5dd396c15c1', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/36574b52695d40958d252b41dc0b91c3', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/36574b52695d40958d252b41dc0b91c3/documents/4a0084068a58452badc7e5dd396c15c1/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 03:26:04.251" endtime="20210322 03:26:04.251"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:26:04.252" level="INFO">b571ed11ff4b9e59</msg>
<status status="PASS" starttime="20210322 03:26:04.252" endtime="20210322 03:26:04.252"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:26:04.252" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:26:04.252" endtime="20210322 03:26:04.252"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 03:26:04.253" level="INFO">${document_external_key} = 4a0084068a58452badc7e5dd396c15c1</msg>
<status status="PASS" starttime="20210322 03:26:04.253" endtime="20210322 03:26:04.253"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 03:26:04.253" level="INFO">${document_external_key} = 4a0084068a58452badc7e5dd396c15c1</msg>
<status status="PASS" starttime="20210322 03:26:04.253" endtime="20210322 03:26:04.253"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:03.945" endtime="20210322 03:26:04.253"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 03:26:04.254" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:26:04.254" endtime="20210322 03:26:04.254"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>RG_FRENTE</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:26:04.255" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 03:26:04.254" endtime="20210322 03:26:04.255"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 03:26:04.255" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 03:26:04.256" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 03:26:04.255" endtime="20210322 03:26:04.256"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:26:04.256" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/36574b52695d40958d252b41dc0b91c3/documents?type=RG_FRENTE, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 03:26:04.538" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:26:04.256" endtime="20210322 03:26:04.538"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:26:04.541" level="INFO">{'id': 'e0df2487277a42f7ab4a21e9c7b16059', 'document_type': 'rg_frente', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/36574b52695d40958d252b41dc0b91c3/documents/e0df2487277a42f7ab4a21e9c7b16059', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/36574b52695d40958d252b41dc0b91c3', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/36574b52695d40958d252b41dc0b91c3/documents/e0df2487277a42f7ab4a21e9c7b16059/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 03:26:04.540" endtime="20210322 03:26:04.541"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:26:04.543" level="INFO">19fc63c0f8c464d8</msg>
<status status="PASS" starttime="20210322 03:26:04.542" endtime="20210322 03:26:04.544"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:26:04.545" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:26:04.544" endtime="20210322 03:26:04.545"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 03:26:04.547" level="INFO">${document_external_key} = e0df2487277a42f7ab4a21e9c7b16059</msg>
<status status="PASS" starttime="20210322 03:26:04.546" endtime="20210322 03:26:04.547"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 03:26:04.548" level="INFO">${document_external_key} = e0df2487277a42f7ab4a21e9c7b16059</msg>
<status status="PASS" starttime="20210322 03:26:04.548" endtime="20210322 03:26:04.549"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:04.254" endtime="20210322 03:26:04.549"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 03:26:04.550" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:26:04.549" endtime="20210322 03:26:04.550"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>RG_VERSO</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:26:04.552" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 03:26:04.551" endtime="20210322 03:26:04.552"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 03:26:04.552" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 03:26:04.554" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 03:26:04.552" endtime="20210322 03:26:04.554"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:26:04.556" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/36574b52695d40958d252b41dc0b91c3/documents?type=RG_VERSO, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 03:26:04.887" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:26:04.555" endtime="20210322 03:26:04.887"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:26:04.890" level="INFO">{'id': '9cee83096fb44166a1363181c15ebcb5', 'document_type': 'rg_verso', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/36574b52695d40958d252b41dc0b91c3/documents/9cee83096fb44166a1363181c15ebcb5', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/36574b52695d40958d252b41dc0b91c3', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/36574b52695d40958d252b41dc0b91c3/documents/9cee83096fb44166a1363181c15ebcb5/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 03:26:04.888" endtime="20210322 03:26:04.891"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:26:04.893" level="INFO">22519eb31b346271</msg>
<status status="PASS" starttime="20210322 03:26:04.892" endtime="20210322 03:26:04.893"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:26:04.895" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:26:04.894" endtime="20210322 03:26:04.895"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 03:26:04.897" level="INFO">${document_external_key} = 9cee83096fb44166a1363181c15ebcb5</msg>
<status status="PASS" starttime="20210322 03:26:04.896" endtime="20210322 03:26:04.897"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 03:26:04.898" level="INFO">${document_external_key} = 9cee83096fb44166a1363181c15ebcb5</msg>
<status status="PASS" starttime="20210322 03:26:04.898" endtime="20210322 03:26:04.899"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:04.550" endtime="20210322 03:26:04.899"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 03:26:04.899" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:26:04.899" endtime="20210322 03:26:04.900"></status>
</kw>
<kw name="solicitar aprovação do holder" library="accreditation_request_approval">
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:26:04.901" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 03:26:04.900" endtime="20210322 03:26:04.901"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/approval</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:26:04.903" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/36574b52695d40958d252b41dc0b91c3/approval, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data=None 
json=None</msg>
<msg timestamp="20210322 03:26:05.223" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:26:04.902" endtime="20210322 03:26:05.223"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:26:05.225" level="INFO">{'message': 'Approval request accepted successfully. Processing analysis'}</msg>
<status status="PASS" starttime="20210322 03:26:05.224" endtime="20210322 03:26:05.225"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:26:05.227" level="INFO">66cf192d53c11ec6</msg>
<status status="PASS" starttime="20210322 03:26:05.226" endtime="20210322 03:26:05.227"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:26:05.229" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:26:05.228" endtime="20210322 03:26:05.229"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:04.900" endtime="20210322 03:26:05.230"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 03:26:05.232" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:26:05.231" endtime="20210322 03:26:05.232"></status>
</kw>
<kw name="recebendo notificação de aprovação" library="accreditation_risk_notification">
<kw name="Uuid 4" library="FakerLibrary">
<doc>Generates a random UUID4 string.
:param cast_to: Specify what type the UUID should be cast to. Default is `str`
:type cast_to: callable</doc>
<assign>
<var>${assessment_id}</var>
</assign>
<msg timestamp="20210322 03:26:05.235" level="INFO">${assessment_id} = 99ddc1a2-cf7a-461f-81dd-0bf15df7b1b1</msg>
<status status="PASS" starttime="20210322 03:26:05.234" endtime="20210322 03:26:05.235"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>year</arg>
</arguments>
<assign>
<var>${year}</var>
</assign>
<msg timestamp="20210322 03:26:05.237" level="INFO">${year} = 2021</msg>
<status status="PASS" starttime="20210322 03:26:05.236" endtime="20210322 03:26:05.237"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>month</arg>
</arguments>
<assign>
<var>${month}</var>
</assign>
<msg timestamp="20210322 03:26:05.238" level="INFO">${month} = 03</msg>
<status status="PASS" starttime="20210322 03:26:05.238" endtime="20210322 03:26:05.239"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>day</arg>
</arguments>
<assign>
<var>${day}</var>
</assign>
<msg timestamp="20210322 03:26:05.240" level="INFO">${day} = 22</msg>
<status status="PASS" starttime="20210322 03:26:05.239" endtime="20210322 03:26:05.240"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:26:05.241" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 03:26:05.240" endtime="20210322 03:26:05.241"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "risk.assessment.result",</arg>
<arg>"resource": "business.holder",</arg>
<arg>"created_at": "${year}-${month}-${day} 15:28:56.747Z",</arg>
<arg>"marketplace_id": "${marketplace_external_key}",</arg>
<arg>"object": {</arg>
<arg>"result": "APPROVED",</arg>
<arg>"holder_id": "${holder_external_key}",</arg>
<arg>"applicant_id": "${application_external_key}",</arg>
<arg>"assessment_id": "${assessment_id}"</arg>
<arg>}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 03:26:05.243" level="INFO">${body} = { "type": "risk.assessment.result", "resource": "business.holder", "created_at": "2021-03-22 15:28:56.747Z", "marketplace_id": "f71a8951368a4cc085cf7875ff44e61c", "object": { "result": "APPROVED", "ho...</msg>
<status status="PASS" starttime="20210322 03:26:05.241" endtime="20210322 03:26:05.243"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/admin/internal_operation/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/registration/approval</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:26:05.245" level="INFO">POST Request using : uri=/admin/internal_operation/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/36574b52695d40958d252b41dc0b91c3/registration/approval, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "risk.assessment.result", "resource": "business.holder", "created_at": "2021-03-22 15:28:56.747Z", "marketplace_id": "f71a8951368a4cc085cf7875ff44e61c", "object": { "result": "APPROVED", "holder_id": "36574b52695d40958d252b41dc0b91c3", "applicant_id": "bcc25a6751c14b52af1340d40dba78c5", "assessment_id": "99ddc1a2-cf7a-461f-81dd-0bf15df7b1b1" } } 
json=None</msg>
<msg timestamp="20210322 03:26:05.448" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:26:05.243" endtime="20210322 03:26:05.448"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:26:05.450" level="INFO">{'message': 'Holder approved successfully'}</msg>
<status status="PASS" starttime="20210322 03:26:05.449" endtime="20210322 03:26:05.450"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:26:05.451" level="INFO">b1abb454268eb6cb</msg>
<status status="PASS" starttime="20210322 03:26:05.450" endtime="20210322 03:26:05.451"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:26:05.453" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:26:05.452" endtime="20210322 03:26:05.453"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 03:26:05.454" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:26:05.454" endtime="20210322 03:26:05.454"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:05.233" endtime="20210322 03:26:05.455"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 03:26:05.456" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:26:05.455" endtime="20210322 03:26:05.456"></status>
</kw>
<kw name="buscar account por holder" library="accounts_get_accounts_by_holder">
<kw name="conectar accounts" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accounts</arg>
<arg>url=${account_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 03:26:05.458" level="INFO">Creating Session using : alias=accounts, url=https://banking-accounts-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 03:26:05.458" endtime="20210322 03:26:05.459"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:05.457" endtime="20210322 03:26:05.459"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accounts</arg>
<arg>/marketplaces/${marketplace_external_key}/holders/${holder_external_key}/accounts</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:26:05.460" level="INFO">GET Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/holders/36574b52695d40958d252b41dc0b91c3/accounts, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 03:26:06.112" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:26:05.459" endtime="20210322 03:26:06.112"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:26:06.114" level="INFO">{'items': [{'id': '07ef9ea324e141fc84a02422ba809e8a', 'holder': '36574b52695d40958d252b41dc0b91c3', 'balance': '0.00', 'currency': 'BRL', 'routing_number': '001', 'number': '554703560', 'status': 'active', 'metadata': {}, 'created_at': '2021-03-22T06:26:06.29266', 'updated_at': '2021-03-22T06:26:06.29266', 'primary': True, 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'uri': '/v2/marketplaces/f71a8951368a4cc085cf7875ff44e61c/accounts/07ef9ea324e141fc84a02422ba809e8a', 'resource': 'payment_account'}], 'has_more': False, 'limit': 100, 'total_pages': 1, 'page': 1, 'offset': 0, 'total': '1', 'query_count': '1'}</msg>
<status status="PASS" starttime="20210322 03:26:06.112" endtime="20210322 03:26:06.114"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:26:06.117" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:26:06.115" endtime="20210322 03:26:06.117"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["id"]}</arg>
</arguments>
<assign>
<var>${account_external_key}</var>
</assign>
<msg timestamp="20210322 03:26:06.119" level="INFO">${account_external_key} = 07ef9ea324e141fc84a02422ba809e8a</msg>
<status status="PASS" starttime="20210322 03:26:06.117" endtime="20210322 03:26:06.119"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_external_key}</arg>
</arguments>
<msg timestamp="20210322 03:26:06.120" level="INFO">${account_external_key} = 07ef9ea324e141fc84a02422ba809e8a</msg>
<status status="PASS" starttime="20210322 03:26:06.120" endtime="20210322 03:26:06.120"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["number"]}</arg>
</arguments>
<assign>
<var>${account_number}</var>
</assign>
<msg timestamp="20210322 03:26:06.122" level="INFO">${account_number} = 554703560</msg>
<status status="PASS" starttime="20210322 03:26:06.121" endtime="20210322 03:26:06.122"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_number}</arg>
</arguments>
<msg timestamp="20210322 03:26:06.123" level="INFO">${account_number} = 554703560</msg>
<status status="PASS" starttime="20210322 03:26:06.123" endtime="20210322 03:26:06.124"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["routing_number"]}</arg>
</arguments>
<assign>
<var>${account_routing_number}</var>
</assign>
<msg timestamp="20210322 03:26:06.125" level="INFO">${account_routing_number} = 001</msg>
<status status="PASS" starttime="20210322 03:26:06.124" endtime="20210322 03:26:06.125"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_routing_number}</arg>
</arguments>
<msg timestamp="20210322 03:26:06.127" level="INFO">${account_routing_number} = 001</msg>
<status status="PASS" starttime="20210322 03:26:06.125" endtime="20210322 03:26:06.127"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:05.456" endtime="20210322 03:26:06.127"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 03:26:06.127" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:26:06.127" endtime="20210322 03:26:06.127"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:02.804" endtime="20210322 03:26:06.127"></status>
</kw>
<kw name="criar chave pix" library="pix_dict_create_entry">
<arguments>
<arg>phone</arg>
<arg>${phone_pix}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 03:26:06.129" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 03:26:06.129" endtime="20210322 03:26:06.130"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:06.128" endtime="20210322 03:26:06.131"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${type}</arg>
</arguments>
<msg timestamp="20210322 03:26:06.131" level="INFO">${type} = phone</msg>
<status status="PASS" starttime="20210322 03:26:06.131" endtime="20210322 03:26:06.132"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210322 03:26:06.132" level="INFO">${value} = +5521933044692</msg>
<status status="PASS" starttime="20210322 03:26:06.132" endtime="20210322 03:26:06.132"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:26:06.133" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 03:26:06.133" endtime="20210322 03:26:06.133"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "${type}",</arg>
<arg>"value": "${value}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 03:26:06.134" level="INFO">${body} = { "type": "phone", "value": "+5521933044692" }</msg>
<status status="PASS" starttime="20210322 03:26:06.134" endtime="20210322 03:26:06.134"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:26:06.135" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/36574b52695d40958d252b41dc0b91c3/accounts/07ef9ea324e141fc84a02422ba809e8a/entries, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "phone", "value": "+5521933044692" } 
json=None</msg>
<msg timestamp="20210322 03:26:06.828" level="INFO">${response} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20210322 03:26:06.134" endtime="20210322 03:26:06.828"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:26:06.830" level="INFO">{'id': '07cffece7fd84ae1a36fb02eb084ea10', 'status': 'waiting_ownership_verification', 'created_at': '2021-03-22T03:26:07.697', 'updated_at': '2021-03-22T03:26:07.697', 'key': {'value': '+5521933044692', 'type': 'phone'}, 'account': {'id': '07ef9ea324e141fc84a02422ba809e8a', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': '36574b52695d40958d252b41dc0b91c3', 'owner': {'name': 'Holder de teste', 'national_registration': '36428095700', 'type': 'individual'}, 'routing_number': '001', 'number': '554703560', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}, 'resource': 'pix.entry'}</msg>
<status status="PASS" starttime="20210322 03:26:06.829" endtime="20210322 03:26:06.830"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:26:06.830" level="INFO">35f34a21f9fa4865</msg>
<status status="PASS" starttime="20210322 03:26:06.830" endtime="20210322 03:26:06.831"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 03:26:06.831" level="INFO">202</msg>
<status status="PASS" starttime="20210322 03:26:06.831" endtime="20210322 03:26:06.831"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:26:06.832" level="INFO">${response} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20210322 03:26:06.832" endtime="20210322 03:26:06.832"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${entry_external_key}</var>
</assign>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:26:06.833" endtime="20210322 03:26:06.834"></status>
</kw>
<msg timestamp="20210322 03:26:06.834" level="INFO">${entry_external_key} = 07cffece7fd84ae1a36fb02eb084ea10</msg>
<status status="PASS" starttime="20210322 03:26:06.832" endtime="20210322 03:26:06.834"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${entry_external_key}</arg>
</arguments>
<msg timestamp="20210322 03:26:06.835" level="INFO">${entry_external_key} = 07cffece7fd84ae1a36fb02eb084ea10</msg>
<status status="PASS" starttime="20210322 03:26:06.835" endtime="20210322 03:26:06.836"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["key"]["value"]}</arg>
</arguments>
<assign>
<var>${entry_key_value}</var>
</assign>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["key"]["value"]}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:26:06.837" endtime="20210322 03:26:06.837"></status>
</kw>
<msg timestamp="20210322 03:26:06.837" level="INFO">${entry_key_value} = +5521933044692</msg>
<status status="PASS" starttime="20210322 03:26:06.836" endtime="20210322 03:26:06.837"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${entry_key_value}</arg>
</arguments>
<msg timestamp="20210322 03:26:06.838" level="INFO">${entry_key_value} = +5521933044692</msg>
<status status="PASS" starttime="20210322 03:26:06.838" endtime="20210322 03:26:06.838"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:06.128" endtime="20210322 03:26:06.838"></status>
</kw>
<kw name="validar criação da chave pix" library="asserts">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando status_code</arg>
</arguments>
<msg timestamp="20210322 03:26:06.839" level="INFO">Validando status_code</msg>
<status status="PASS" starttime="20210322 03:26:06.839" endtime="20210322 03:26:06.839"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${type}' == 'evp'</arg>
<arg>Should Be Equal As Integers</arg>
<arg>${response.status_code}</arg>
<arg>201</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'phone'</arg>
<arg>Should Be Equal As Integers</arg>
<arg>${response.status_code}</arg>
<arg>202</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'email'</arg>
<arg>Should Be Equal As Integers</arg>
<arg>${response.status_code}</arg>
<arg>202</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'national_registration'</arg>
<arg>Should Be Equal As Integers</arg>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>202</arg>
</arguments>
<msg timestamp="20210322 03:26:06.840" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:26:06.840" endtime="20210322 03:26:06.840"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:06.839" endtime="20210322 03:26:06.840"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar status da chave</arg>
</arguments>
<msg timestamp="20210322 03:26:06.840" level="INFO">Validar status da chave</msg>
<status status="PASS" starttime="20210322 03:26:06.840" endtime="20210322 03:26:06.840"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${type}' == 'evp'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["status"]}</arg>
<arg>active</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'phone'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["status"]}</arg>
<arg>waiting_ownership_verification</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'email'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["status"]}</arg>
<arg>waiting_ownership_verification</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'national_registration'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["status"]}</arg>
<arg>active</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["status"]}</arg>
<arg>waiting_ownership_verification</arg>
</arguments>
<status status="PASS" starttime="20210322 03:26:06.841" endtime="20210322 03:26:06.841"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:06.840" endtime="20210322 03:26:06.841"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando Tipo da chave PIX</arg>
</arguments>
<msg timestamp="20210322 03:26:06.842" level="INFO">Validando Tipo da chave PIX</msg>
<status status="PASS" starttime="20210322 03:26:06.841" endtime="20210322 03:26:06.842"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${type}' == 'evp'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["type"]}</arg>
<arg>${type}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'phone'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["type"]}</arg>
<arg>${type}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'email'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["type"]}</arg>
<arg>${type}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'national_registration'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["type"]}</arg>
<arg>${type}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["key"]["type"]}</arg>
<arg>${type}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:26:06.843" endtime="20210322 03:26:06.843"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:06.842" endtime="20210322 03:26:06.843"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando Valor da chave PIX</arg>
</arguments>
<msg timestamp="20210322 03:26:06.843" level="INFO">Validando Valor da chave PIX</msg>
<status status="PASS" starttime="20210322 03:26:06.843" endtime="20210322 03:26:06.843"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${type}' == 'evp'</arg>
<arg>Should Not Be Empty</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'phone'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${phone_pix}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'email'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${email_pix}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'national_registration'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${national_registration}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${phone_pix}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:26:06.845" endtime="20210322 03:26:06.845"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:06.843" endtime="20210322 03:26:06.845"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando dados da conta</arg>
</arguments>
<msg timestamp="20210322 03:26:06.845" level="INFO">Validando dados da conta</msg>
<status status="PASS" starttime="20210322 03:26:06.845" endtime="20210322 03:26:06.845"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["id"]}</arg>
<arg>${account_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:26:06.845" endtime="20210322 03:26:06.845"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["marketplace"]}</arg>
<arg>${marketplace_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:26:06.845" endtime="20210322 03:26:06.846"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["holder"]}</arg>
<arg>${holder_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:26:06.846" endtime="20210322 03:26:06.846"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["number"]}</arg>
<arg>${account_number}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:26:06.846" endtime="20210322 03:26:06.846"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["routing_number"]}</arg>
<arg>${account_routing_number}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:26:06.847" endtime="20210322 03:26:06.847"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["type"]}</arg>
<arg>CACC</arg>
</arguments>
<status status="PASS" starttime="20210322 03:26:06.847" endtime="20210322 03:26:06.847"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar Proprietário da Account Owner</arg>
</arguments>
<msg timestamp="20210322 03:26:06.848" level="INFO">Validar Proprietário da Account Owner</msg>
<status status="PASS" starttime="20210322 03:26:06.848" endtime="20210322 03:26:06.848"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${holder_type}' == 'individual'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["account"]["owner"]["name"]}</arg>
<arg>${holder_name}</arg>
<arg>ELSE IF</arg>
<arg>'${holder_type}' == 'business'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["account"]["owner"]["name"]}</arg>
<arg>${legal_name}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["account"]["owner"]["name"]}</arg>
<arg>${holder_name}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:26:06.848" endtime="20210322 03:26:06.849"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:06.848" endtime="20210322 03:26:06.849"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar national_registration da Account Owner</arg>
</arguments>
<msg timestamp="20210322 03:26:06.849" level="INFO">Validar national_registration da Account Owner</msg>
<status status="PASS" starttime="20210322 03:26:06.849" endtime="20210322 03:26:06.849"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${holder_type}' == 'individual'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["account"]["owner"]["national_registration"]}</arg>
<arg>${national_registration}</arg>
<arg>ELSE IF</arg>
<arg>'${holder_type}' == 'business'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["account"]["owner"]["national_registration"]}</arg>
<arg>${national_registration}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["account"]["owner"]["national_registration"]}</arg>
<arg>${national_registration}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:26:06.851" endtime="20210322 03:26:06.851"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:06.849" endtime="20210322 03:26:06.851"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar Holder Type do Account Owner</arg>
</arguments>
<msg timestamp="20210322 03:26:06.851" level="INFO">Validar Holder Type do Account Owner</msg>
<status status="PASS" starttime="20210322 03:26:06.851" endtime="20210322 03:26:06.851"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${holder_type}' == 'individual'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["account"]["owner"]["type"]}</arg>
<arg>${holder_type}</arg>
<arg>ELSE IF</arg>
<arg>'${holder_type}' == 'business'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["account"]["owner"]["type"]}</arg>
<arg>${holder_type}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["account"]["owner"]["type"]}</arg>
<arg>${holder_type}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:26:06.852" endtime="20210322 03:26:06.852"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:06.851" endtime="20210322 03:26:06.852"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar PSP</arg>
</arguments>
<msg timestamp="20210322 03:26:06.852" level="INFO">Validar PSP</msg>
<status status="PASS" starttime="20210322 03:26:06.852" endtime="20210322 03:26:06.853"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["psp"]["code"]}</arg>
<arg>19468242</arg>
</arguments>
<status status="PASS" starttime="20210322 03:26:06.853" endtime="20210322 03:26:06.853"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["psp"]["name"]}</arg>
<arg>Zoop Tecnologia e Meios de Pagamento S.A.</arg>
</arguments>
<status status="PASS" starttime="20210322 03:26:06.853" endtime="20210322 03:26:06.853"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:06.838" endtime="20210322 03:26:06.854"></status>
</kw>
<kw name="buscar verification code" library="pix_dict_verification_code">
<arguments>
<arg>${holder_external_key}</arg>
<arg>${account_external_key}</arg>
<arg>${entry_external_key}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 03:26:06.854" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 03:26:06.854" endtime="20210322 03:26:06.855"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:06.854" endtime="20210322 03:26:06.855"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/admin/internal_operation/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries/${entry_external_key}/code</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:26:06.855" level="INFO">GET Request using : uri=/admin/internal_operation/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/36574b52695d40958d252b41dc0b91c3/accounts/07ef9ea324e141fc84a02422ba809e8a/entries/07cffece7fd84ae1a36fb02eb084ea10/code, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 03:26:07.470" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:26:06.855" endtime="20210322 03:26:07.470"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:26:07.470" level="INFO">{'code': '0481'}</msg>
<status status="PASS" starttime="20210322 03:26:07.470" endtime="20210322 03:26:07.470"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:26:07.471" level="INFO">b7f1abb6335a684c</msg>
<status status="PASS" starttime="20210322 03:26:07.471" endtime="20210322 03:26:07.471"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 03:26:07.471" level="INFO">200</msg>
<status status="PASS" starttime="20210322 03:26:07.471" endtime="20210322 03:26:07.471"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:26:07.472" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:26:07.472" endtime="20210322 03:26:07.472"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["code"]}</arg>
</arguments>
<assign>
<var>${verification_code}</var>
</assign>
<msg timestamp="20210322 03:26:07.473" level="INFO">${verification_code} = 0481</msg>
<status status="PASS" starttime="20210322 03:26:07.472" endtime="20210322 03:26:07.473"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${verification_code}</arg>
</arguments>
<msg timestamp="20210322 03:26:07.473" level="INFO">${verification_code} = 0481</msg>
<status status="PASS" starttime="20210322 03:26:07.473" endtime="20210322 03:26:07.473"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:06.854" endtime="20210322 03:26:07.473"></status>
</kw>
<kw name="confirmar propriedade da chave pix" library="pix_dict_confirm_propriety">
<arguments>
<arg>123abc</arg>
<arg>${holder_external_key}</arg>
<arg>${account_external_key}</arg>
<arg>${entry_external_key}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 03:26:07.474" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 03:26:07.474" endtime="20210322 03:26:07.475"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:07.474" endtime="20210322 03:26:07.475"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:26:07.475" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 03:26:07.475" endtime="20210322 03:26:07.475"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"code": "${verification_code}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 03:26:07.476" level="INFO">${body} = { "code": "123abc" }</msg>
<status status="PASS" starttime="20210322 03:26:07.475" endtime="20210322 03:26:07.476"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries/${entry_external_key}/ownership</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:26:07.476" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/36574b52695d40958d252b41dc0b91c3/accounts/07ef9ea324e141fc84a02422ba809e8a/entries/07cffece7fd84ae1a36fb02eb084ea10/ownership, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "code": "123abc" } 
json=None</msg>
<msg timestamp="20210322 03:26:08.107" level="INFO">${response} = &lt;Response [404]&gt;</msg>
<status status="PASS" starttime="20210322 03:26:07.476" endtime="20210322 03:26:08.107"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:26:08.107" level="INFO">{'code': 3003, 'status': 'not_found', 'type': 'not_found', 'message': 'Ownership entry not found', 'category': 'business', 'status_code': 404}</msg>
<status status="PASS" starttime="20210322 03:26:08.107" endtime="20210322 03:26:08.107"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:26:08.108" level="INFO">658d416e446a5cd3</msg>
<status status="PASS" starttime="20210322 03:26:08.107" endtime="20210322 03:26:08.108"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 03:26:08.108" level="INFO">404</msg>
<status status="PASS" starttime="20210322 03:26:08.108" endtime="20210322 03:26:08.108"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:26:08.109" level="INFO">${response} = &lt;Response [404]&gt;</msg>
<status status="PASS" starttime="20210322 03:26:08.108" endtime="20210322 03:26:08.109"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:07.473" endtime="20210322 03:26:08.109"></status>
</kw>
<kw name="validar not found" library="asserts">
<arguments>
<arg>Ownership entry not found</arg>
<arg>3003</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando response nor found</arg>
</arguments>
<msg timestamp="20210322 03:26:08.109" level="INFO">Validando response nor found</msg>
<status status="PASS" starttime="20210322 03:26:08.109" endtime="20210322 03:26:08.109"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>404</arg>
</arguments>
<msg timestamp="20210322 03:26:08.111" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:26:08.110" endtime="20210322 03:26:08.111"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["status"]}</arg>
<arg>not_found</arg>
</arguments>
<status status="PASS" starttime="20210322 03:26:08.111" endtime="20210322 03:26:08.111"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["category"]}</arg>
<arg>business</arg>
</arguments>
<status status="PASS" starttime="20210322 03:26:08.112" endtime="20210322 03:26:08.112"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.json()["code"]}</arg>
<arg>${message_code}</arg>
</arguments>
<msg timestamp="20210322 03:26:08.112" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:26:08.112" endtime="20210322 03:26:08.113"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.json()["status_code"]}</arg>
<arg>404</arg>
</arguments>
<msg timestamp="20210322 03:26:08.113" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:26:08.113" endtime="20210322 03:26:08.113"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["message"]}</arg>
<arg>${message}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:26:08.113" endtime="20210322 03:26:08.114"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["type"]}</arg>
<arg>not_found</arg>
</arguments>
<status status="PASS" starttime="20210322 03:26:08.114" endtime="20210322 03:26:08.114"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:08.109" endtime="20210322 03:26:08.114"></status>
</kw>
<doc>Fluxo de Exceção</doc>
<tags>
<tag>smoke_test</tag>
</tags>
<status status="PASS" starttime="20210322 03:26:02.801" endtime="20210322 03:26:08.114" critical="yes"></status>
</test>
<test id="s1-s1-s2-t5" name="Cenário: Confirmar proprierdade de de chave de endereçamento utilizando sem informar o código de verificação">
<kw name="Random Number" library="FakerLibrary">
<doc>Returns a random number with 1 digit (default, when digits==None),
a random number with 0 to given number of digits, or a random number
with given number to given number of digits (when ``fix_len==True``).</doc>
<arguments>
<arg>digits=8</arg>
<arg>fix_len=True</arg>
</arguments>
<assign>
<var>${phone}</var>
</assign>
<msg timestamp="20210322 03:26:08.115" level="INFO">${phone} = 99316611</msg>
<status status="PASS" starttime="20210322 03:26:08.115" endtime="20210322 03:26:08.115"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>+55219${phone}</arg>
</arguments>
<assign>
<var>${phone_pix}</var>
</assign>
<msg timestamp="20210322 03:26:08.116" level="INFO">${phone_pix} = +5521999316611</msg>
<status status="PASS" starttime="20210322 03:26:08.115" endtime="20210322 03:26:08.116"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${phone_pix}</arg>
</arguments>
<msg timestamp="20210322 03:26:08.116" level="INFO">${phone_pix} = +5521999316611</msg>
<status status="PASS" starttime="20210322 03:26:08.116" endtime="20210322 03:26:08.116"></status>
</kw>
<kw name="criar holder individual ativo" library="accreditation_create_holder_active">
<kw name="conectar accreditation" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accreditation</arg>
<arg>url=${accreditation_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 03:26:08.117" level="INFO">Creating Session using : alias=accreditation, url=https://banking-accreditation-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 03:26:08.117" endtime="20210322 03:26:08.117"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:08.116" endtime="20210322 03:26:08.117"></status>
</kw>
<kw name="Cpf" library="FakerLibrary">
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 03:26:08.118" level="INFO">${national_registration} = 235.496.017-43</msg>
<status status="PASS" starttime="20210322 03:26:08.117" endtime="20210322 03:26:08.118"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${national_registration}</arg>
<arg>.</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 03:26:08.118" level="INFO">${national_registration} = 235496017-43</msg>
<status status="PASS" starttime="20210322 03:26:08.118" endtime="20210322 03:26:08.118"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${national_registration}</arg>
<arg>-</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 03:26:08.118" level="INFO">${national_registration} = 23549601743</msg>
<status status="PASS" starttime="20210322 03:26:08.118" endtime="20210322 03:26:08.118"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${national_registration}</arg>
</arguments>
<msg timestamp="20210322 03:26:08.119" level="INFO">${national_registration} = 23549601743</msg>
<status status="PASS" starttime="20210322 03:26:08.119" endtime="20210322 03:26:08.119"></status>
</kw>
<kw name="Rg" library="FakerLibrary">
<doc>Brazilian RG, return plain numbers.
Check:  https://www.ngmatematica.com/2014/02/como-determinar-o-digito-verificador-do.html</doc>
<assign>
<var>${identity_card}</var>
</assign>
<msg timestamp="20210322 03:26:08.120" level="INFO">${identity_card} = 782643152</msg>
<status status="PASS" starttime="20210322 03:26:08.119" endtime="20210322 03:26:08.120"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${identity_card}</arg>
</arguments>
<msg timestamp="20210322 03:26:08.120" level="INFO">${identity_card} = 782643152</msg>
<status status="PASS" starttime="20210322 03:26:08.120" endtime="20210322 03:26:08.120"></status>
</kw>
<kw name="criar holder individual" library="accreditation_post_holder_individual">
<arguments>
<arg>holder_type=individual</arg>
<arg>holder_name=${holder_name}</arg>
<arg>email=${email}</arg>
<arg>national_registration=${national_registration}</arg>
<arg>revenue=${revenue}</arg>
<arg>birthday=${birthday}</arg>
<arg>mothers_name=${mothers_name}</arg>
<arg>identity_card=${identity_card}</arg>
<arg>pep=false</arg>
<arg>cbo=${cbo}</arg>
</arguments>
<kw name="conectar accreditation" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accreditation</arg>
<arg>url=${accreditation_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 03:26:08.121" level="INFO">Creating Session using : alias=accreditation, url=https://banking-accreditation-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 03:26:08.121" endtime="20210322 03:26:08.121"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:08.120" endtime="20210322 03:26:08.121"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_type}</arg>
</arguments>
<msg timestamp="20210322 03:26:08.121" level="INFO">${holder_type} = individual</msg>
<status status="PASS" starttime="20210322 03:26:08.121" endtime="20210322 03:26:08.122"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_name}</arg>
</arguments>
<msg timestamp="20210322 03:26:08.122" level="INFO">${holder_name} = Holder de teste</msg>
<status status="PASS" starttime="20210322 03:26:08.122" endtime="20210322 03:26:08.122"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:26:08.122" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 03:26:08.122" endtime="20210322 03:26:08.122"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "${holder_type}",</arg>
<arg>"name": "${holder_name}",</arg>
<arg>"email": "${email}",</arg>
<arg>"national_registration": "${national_registration}",</arg>
<arg>"revenue": ${revenue},</arg>
<arg>"birthday": "${birthday}",</arg>
<arg>"mothers_name": "${mothers_name}",</arg>
<arg>"identity_card": "${identity_card}",</arg>
<arg>"pep": false,</arg>
<arg>"cbo": ${cbo}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 03:26:08.123" level="INFO">${body} = { "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "23549601743", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder",...</msg>
<status status="PASS" starttime="20210322 03:26:08.123" endtime="20210322 03:26:08.123"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:26:08.124" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "23549601743", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder", "identity_card": "782643152", "pep": false, "cbo": 821450 } 
json=None</msg>
<msg timestamp="20210322 03:26:08.764" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:26:08.123" endtime="20210322 03:26:08.764"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:26:08.765" level="INFO">{'id': '24bcda59bb1f4e0b9b82911fc3155c76', 'name': 'Holder de teste', 'revenue': 5500.0, 'email': 'teste@teste.com.br', 'status': 'waiting_info_and_documents', 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'marketplace_name': 'Marketplace de Teste', 'created_at': '2021-03-22T03:26:09.610284', 'updated_at': '2021-03-22T03:26:09.610286', 'type': 'individual', 'national_registration': '23549601743', 'birthday': '1988-04-23', 'mothers_name': 'Mãe do Holder', 'identity_card': '782643152', 'pep': False, 'cbo': '821450', '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/24bcda59bb1f4e0b9b82911fc3155c76', 'type': 'GET'}, 'phones': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/24bcda59bb1f4e0b9b82911fc3155c76/phones', 'type': 'GET'}, 'addresses': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/24bcda59bb1f4e0b9b82911fc3155c76/addresses', 'type': 'GET'}, 'documents': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/24bcda59bb1f4e0b9b82911fc3155c76/documents', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 03:26:08.765" endtime="20210322 03:26:08.765"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:26:08.765" level="INFO">8804435f83a30e8d</msg>
<status status="PASS" starttime="20210322 03:26:08.765" endtime="20210322 03:26:08.765"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${body}</arg>
</arguments>
<msg timestamp="20210322 03:26:08.766" level="INFO">{ "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "23549601743", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder", "identity_card": "782643152", "pep": false, "cbo": 821450 }</msg>
<status status="PASS" starttime="20210322 03:26:08.766" endtime="20210322 03:26:08.766"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:26:08.766" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:26:08.766" endtime="20210322 03:26:08.766"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${holder_external_key}</var>
</assign>
<msg timestamp="20210322 03:26:08.767" level="INFO">${holder_external_key} = 24bcda59bb1f4e0b9b82911fc3155c76</msg>
<status status="PASS" starttime="20210322 03:26:08.766" endtime="20210322 03:26:08.767"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_external_key}</arg>
</arguments>
<msg timestamp="20210322 03:26:08.767" level="INFO">${holder_external_key} = 24bcda59bb1f4e0b9b82911fc3155c76</msg>
<status status="PASS" starttime="20210322 03:26:08.767" endtime="20210322 03:26:08.767"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:08.120" endtime="20210322 03:26:08.767"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_name}</arg>
</arguments>
<msg timestamp="20210322 03:26:08.768" level="INFO">${holder_name} = Holder de teste</msg>
<status status="PASS" starttime="20210322 03:26:08.768" endtime="20210322 03:26:08.768"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 03:26:08.768" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:26:08.768" endtime="20210322 03:26:08.769"></status>
</kw>
<kw name="criar holder phone" library="accreditation_post_holder_phone">
<arguments>
<arg>21</arg>
<arg>51</arg>
<arg>996221236</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:26:08.769" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 03:26:08.769" endtime="20210322 03:26:08.769"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"area_code": "${phone_area_code}",</arg>
<arg>"country_code": "${phone_country_code}",</arg>
<arg>"number": "${phone_number}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 03:26:08.770" level="INFO">${body} = { "area_code": "21", "country_code": "51", "number": "996221236" }</msg>
<status status="PASS" starttime="20210322 03:26:08.769" endtime="20210322 03:26:08.770"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/phones</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:26:08.770" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/24bcda59bb1f4e0b9b82911fc3155c76/phones, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "area_code": "21", "country_code": "51", "number": "996221236" } 
json=None</msg>
<msg timestamp="20210322 03:26:08.996" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:26:08.770" endtime="20210322 03:26:08.996"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:26:08.997" level="INFO">{'id': '1ae3e90a323b43aeb011c8b42795c16f', 'area_code': '21', 'country_code': '51', 'number': '996221236', 'main': True, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/24bcda59bb1f4e0b9b82911fc3155c76/phones/1ae3e90a323b43aeb011c8b42795c16f', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/24bcda59bb1f4e0b9b82911fc3155c76', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 03:26:08.997" endtime="20210322 03:26:08.997"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:26:08.997" level="INFO">091a9618de3a01c9</msg>
<status status="PASS" starttime="20210322 03:26:08.997" endtime="20210322 03:26:08.997"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:26:08.998" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:26:08.998" endtime="20210322 03:26:08.998"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${phone_external_key}</var>
</assign>
<msg timestamp="20210322 03:26:08.998" level="INFO">${phone_external_key} = 1ae3e90a323b43aeb011c8b42795c16f</msg>
<status status="PASS" starttime="20210322 03:26:08.998" endtime="20210322 03:26:08.999"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${phone_external_key}</arg>
</arguments>
<msg timestamp="20210322 03:26:08.999" level="INFO">${phone_external_key} = 1ae3e90a323b43aeb011c8b42795c16f</msg>
<status status="PASS" starttime="20210322 03:26:08.999" endtime="20210322 03:26:08.999"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:08.769" endtime="20210322 03:26:08.999"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 03:26:09.000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:26:08.999" endtime="20210322 03:26:09.000"></status>
</kw>
<kw name="criar holder address" library="accreditation_post_holder_address">
<arguments>
<arg>Rio de Janeiro</arg>
<arg>Rio de Janeiro</arg>
<arg>Brasil</arg>
<arg>Bairro de Testes</arg>
<arg>Rua de Testes</arg>
<arg>90</arg>
<arg>apto 200</arg>
<arg>21550987</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:26:09.000" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 03:26:09.000" endtime="20210322 03:26:09.000"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"city": "${city}",</arg>
<arg>"state": "${state}",</arg>
<arg>"country": "${country}",</arg>
<arg>"neighborhood": "${neighborhood}",</arg>
<arg>"street": "${street}",</arg>
<arg>"number": "${number}",</arg>
<arg>"complement": "${complement}",</arg>
<arg>"postal_code": "${postal_code}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 03:26:09.001" level="INFO">${body} = { "city": "Rio de Janeiro", "state": "Rio de Janeiro", "country": "Brasil", "neighborhood": "Bairro de Testes", "street": "Rua de Testes", "number": "90", "complement": "apto 200", "postal_code": "215...</msg>
<status status="PASS" starttime="20210322 03:26:09.000" endtime="20210322 03:26:09.001"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/addresses</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:26:09.002" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/24bcda59bb1f4e0b9b82911fc3155c76/addresses, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "city": "Rio de Janeiro", "state": "Rio de Janeiro", "country": "Brasil", "neighborhood": "Bairro de Testes", "street": "Rua de Testes", "number": "90", "complement": "apto 200", "postal_code": "21550987" } 
json=None</msg>
<msg timestamp="20210322 03:26:09.231" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:26:09.001" endtime="20210322 03:26:09.231"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:26:09.232" level="INFO">{'id': '4937ef9b538145579c6acc0463bccd78', 'street': 'Rua de Testes', 'number': '90', 'city': 'Rio de Janeiro', 'complement': 'apto 200', 'state': 'Rio de Janeiro', 'neighborhood': 'Bairro de Testes', 'postal_code': '21550987', 'country': 'Brasil', 'main': True, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/24bcda59bb1f4e0b9b82911fc3155c76/addresses/4937ef9b538145579c6acc0463bccd78', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/24bcda59bb1f4e0b9b82911fc3155c76', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 03:26:09.232" endtime="20210322 03:26:09.232"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:26:09.233" level="INFO">9a007bec78987c81</msg>
<status status="PASS" starttime="20210322 03:26:09.232" endtime="20210322 03:26:09.233"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:26:09.233" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:26:09.233" endtime="20210322 03:26:09.233"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${address_external_key}</var>
</assign>
<msg timestamp="20210322 03:26:09.234" level="INFO">${address_external_key} = 4937ef9b538145579c6acc0463bccd78</msg>
<status status="PASS" starttime="20210322 03:26:09.233" endtime="20210322 03:26:09.234"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${address_external_key}</arg>
</arguments>
<msg timestamp="20210322 03:26:09.234" level="INFO">${address_external_key} = 4937ef9b538145579c6acc0463bccd78</msg>
<status status="PASS" starttime="20210322 03:26:09.234" endtime="20210322 03:26:09.234"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:09.000" endtime="20210322 03:26:09.234"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 03:26:09.235" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:26:09.235" endtime="20210322 03:26:09.235"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>SELFIE</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:26:09.236" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 03:26:09.235" endtime="20210322 03:26:09.236"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 03:26:09.236" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 03:26:09.237" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 03:26:09.236" endtime="20210322 03:26:09.237"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:26:09.238" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/24bcda59bb1f4e0b9b82911fc3155c76/documents?type=SELFIE, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 03:26:09.515" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:26:09.237" endtime="20210322 03:26:09.515"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:26:09.516" level="INFO">{'id': '80fda747df4f433a89825a3adac60bc4', 'document_type': 'selfie', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/24bcda59bb1f4e0b9b82911fc3155c76/documents/80fda747df4f433a89825a3adac60bc4', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/24bcda59bb1f4e0b9b82911fc3155c76', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/24bcda59bb1f4e0b9b82911fc3155c76/documents/80fda747df4f433a89825a3adac60bc4/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 03:26:09.515" endtime="20210322 03:26:09.516"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:26:09.517" level="INFO">d7c74b9bdc778a8c</msg>
<status status="PASS" starttime="20210322 03:26:09.516" endtime="20210322 03:26:09.517"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:26:09.517" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:26:09.517" endtime="20210322 03:26:09.517"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 03:26:09.518" level="INFO">${document_external_key} = 80fda747df4f433a89825a3adac60bc4</msg>
<status status="PASS" starttime="20210322 03:26:09.517" endtime="20210322 03:26:09.518"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 03:26:09.519" level="INFO">${document_external_key} = 80fda747df4f433a89825a3adac60bc4</msg>
<status status="PASS" starttime="20210322 03:26:09.518" endtime="20210322 03:26:09.519"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:09.235" endtime="20210322 03:26:09.519"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 03:26:09.519" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:26:09.519" endtime="20210322 03:26:09.519"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>RG_FRENTE</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:26:09.521" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 03:26:09.521" endtime="20210322 03:26:09.521"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 03:26:09.521" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 03:26:09.523" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 03:26:09.521" endtime="20210322 03:26:09.523"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:26:09.523" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/24bcda59bb1f4e0b9b82911fc3155c76/documents?type=RG_FRENTE, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 03:26:09.778" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:26:09.523" endtime="20210322 03:26:09.778"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:26:09.778" level="INFO">{'id': '511c149cf8fc47f7ae8ff91fd57439e8', 'document_type': 'rg_frente', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/24bcda59bb1f4e0b9b82911fc3155c76/documents/511c149cf8fc47f7ae8ff91fd57439e8', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/24bcda59bb1f4e0b9b82911fc3155c76', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/24bcda59bb1f4e0b9b82911fc3155c76/documents/511c149cf8fc47f7ae8ff91fd57439e8/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 03:26:09.778" endtime="20210322 03:26:09.778"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:26:09.778" level="INFO">820713546082814c</msg>
<status status="PASS" starttime="20210322 03:26:09.778" endtime="20210322 03:26:09.778"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:26:09.779" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:26:09.779" endtime="20210322 03:26:09.779"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 03:26:09.779" level="INFO">${document_external_key} = 511c149cf8fc47f7ae8ff91fd57439e8</msg>
<status status="PASS" starttime="20210322 03:26:09.779" endtime="20210322 03:26:09.779"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 03:26:09.780" level="INFO">${document_external_key} = 511c149cf8fc47f7ae8ff91fd57439e8</msg>
<status status="PASS" starttime="20210322 03:26:09.779" endtime="20210322 03:26:09.780"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:09.520" endtime="20210322 03:26:09.780"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 03:26:09.780" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:26:09.780" endtime="20210322 03:26:09.780"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>RG_VERSO</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:26:09.781" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 03:26:09.781" endtime="20210322 03:26:09.781"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 03:26:09.781" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 03:26:09.782" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 03:26:09.781" endtime="20210322 03:26:09.782"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:26:09.783" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/24bcda59bb1f4e0b9b82911fc3155c76/documents?type=RG_VERSO, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 03:26:10.050" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:26:09.782" endtime="20210322 03:26:10.050"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:26:10.053" level="INFO">{'id': '9495614c2a314127b00cc76fa8900256', 'document_type': 'rg_verso', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/24bcda59bb1f4e0b9b82911fc3155c76/documents/9495614c2a314127b00cc76fa8900256', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/24bcda59bb1f4e0b9b82911fc3155c76', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/24bcda59bb1f4e0b9b82911fc3155c76/documents/9495614c2a314127b00cc76fa8900256/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 03:26:10.052" endtime="20210322 03:26:10.053"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:26:10.055" level="INFO">56ad161fcda54272</msg>
<status status="PASS" starttime="20210322 03:26:10.054" endtime="20210322 03:26:10.055"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:26:10.058" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:26:10.056" endtime="20210322 03:26:10.058"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 03:26:10.060" level="INFO">${document_external_key} = 9495614c2a314127b00cc76fa8900256</msg>
<status status="PASS" starttime="20210322 03:26:10.058" endtime="20210322 03:26:10.060"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 03:26:10.062" level="INFO">${document_external_key} = 9495614c2a314127b00cc76fa8900256</msg>
<status status="PASS" starttime="20210322 03:26:10.061" endtime="20210322 03:26:10.063"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:09.780" endtime="20210322 03:26:10.063"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 03:26:10.064" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:26:10.064" endtime="20210322 03:26:10.064"></status>
</kw>
<kw name="solicitar aprovação do holder" library="accreditation_request_approval">
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:26:10.066" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 03:26:10.066" endtime="20210322 03:26:10.067"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/approval</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:26:10.068" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/24bcda59bb1f4e0b9b82911fc3155c76/approval, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data=None 
json=None</msg>
<msg timestamp="20210322 03:26:10.345" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:26:10.067" endtime="20210322 03:26:10.345"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:26:10.347" level="INFO">{'message': 'Approval request accepted successfully. Processing analysis'}</msg>
<status status="PASS" starttime="20210322 03:26:10.346" endtime="20210322 03:26:10.348"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:26:10.350" level="INFO">54bd23fb2ce2effc</msg>
<status status="PASS" starttime="20210322 03:26:10.348" endtime="20210322 03:26:10.350"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:26:10.353" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:26:10.351" endtime="20210322 03:26:10.353"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:10.065" endtime="20210322 03:26:10.353"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 03:26:10.356" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:26:10.354" endtime="20210322 03:26:10.356"></status>
</kw>
<kw name="recebendo notificação de aprovação" library="accreditation_risk_notification">
<kw name="Uuid 4" library="FakerLibrary">
<doc>Generates a random UUID4 string.
:param cast_to: Specify what type the UUID should be cast to. Default is `str`
:type cast_to: callable</doc>
<assign>
<var>${assessment_id}</var>
</assign>
<msg timestamp="20210322 03:26:10.358" level="INFO">${assessment_id} = 0eef3a32-c410-4411-af86-34c584456e6f</msg>
<status status="PASS" starttime="20210322 03:26:10.358" endtime="20210322 03:26:10.358"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>year</arg>
</arguments>
<assign>
<var>${year}</var>
</assign>
<msg timestamp="20210322 03:26:10.359" level="INFO">${year} = 2021</msg>
<status status="PASS" starttime="20210322 03:26:10.359" endtime="20210322 03:26:10.359"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>month</arg>
</arguments>
<assign>
<var>${month}</var>
</assign>
<msg timestamp="20210322 03:26:10.361" level="INFO">${month} = 03</msg>
<status status="PASS" starttime="20210322 03:26:10.360" endtime="20210322 03:26:10.361"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>day</arg>
</arguments>
<assign>
<var>${day}</var>
</assign>
<msg timestamp="20210322 03:26:10.362" level="INFO">${day} = 22</msg>
<status status="PASS" starttime="20210322 03:26:10.361" endtime="20210322 03:26:10.362"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:26:10.363" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 03:26:10.363" endtime="20210322 03:26:10.363"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "risk.assessment.result",</arg>
<arg>"resource": "business.holder",</arg>
<arg>"created_at": "${year}-${month}-${day} 15:28:56.747Z",</arg>
<arg>"marketplace_id": "${marketplace_external_key}",</arg>
<arg>"object": {</arg>
<arg>"result": "APPROVED",</arg>
<arg>"holder_id": "${holder_external_key}",</arg>
<arg>"applicant_id": "${application_external_key}",</arg>
<arg>"assessment_id": "${assessment_id}"</arg>
<arg>}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 03:26:10.365" level="INFO">${body} = { "type": "risk.assessment.result", "resource": "business.holder", "created_at": "2021-03-22 15:28:56.747Z", "marketplace_id": "f71a8951368a4cc085cf7875ff44e61c", "object": { "result": "APPROVED", "ho...</msg>
<status status="PASS" starttime="20210322 03:26:10.364" endtime="20210322 03:26:10.365"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/admin/internal_operation/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/registration/approval</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:26:10.367" level="INFO">POST Request using : uri=/admin/internal_operation/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/24bcda59bb1f4e0b9b82911fc3155c76/registration/approval, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "risk.assessment.result", "resource": "business.holder", "created_at": "2021-03-22 15:28:56.747Z", "marketplace_id": "f71a8951368a4cc085cf7875ff44e61c", "object": { "result": "APPROVED", "holder_id": "24bcda59bb1f4e0b9b82911fc3155c76", "applicant_id": "bcc25a6751c14b52af1340d40dba78c5", "assessment_id": "0eef3a32-c410-4411-af86-34c584456e6f" } } 
json=None</msg>
<msg timestamp="20210322 03:26:10.578" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:26:10.366" endtime="20210322 03:26:10.578"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:26:10.580" level="INFO">{'message': 'Holder approved successfully'}</msg>
<status status="PASS" starttime="20210322 03:26:10.579" endtime="20210322 03:26:10.580"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:26:10.582" level="INFO">1a7ec3d54af6b4fd</msg>
<status status="PASS" starttime="20210322 03:26:10.581" endtime="20210322 03:26:10.582"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:26:10.584" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:26:10.583" endtime="20210322 03:26:10.584"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 03:26:10.587" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:26:10.585" endtime="20210322 03:26:10.587"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:10.357" endtime="20210322 03:26:10.587"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 03:26:10.589" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:26:10.589" endtime="20210322 03:26:10.589"></status>
</kw>
<kw name="buscar account por holder" library="accounts_get_accounts_by_holder">
<kw name="conectar accounts" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accounts</arg>
<arg>url=${account_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 03:26:10.592" level="INFO">Creating Session using : alias=accounts, url=https://banking-accounts-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 03:26:10.591" endtime="20210322 03:26:10.593"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:10.591" endtime="20210322 03:26:10.593"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accounts</arg>
<arg>/marketplaces/${marketplace_external_key}/holders/${holder_external_key}/accounts</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:26:10.594" level="INFO">GET Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/holders/24bcda59bb1f4e0b9b82911fc3155c76/accounts, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 03:26:11.249" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:26:10.594" endtime="20210322 03:26:11.249"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:26:11.251" level="INFO">{'items': [{'id': '668f29e6237d471b9b0a2f53e7ec0418', 'holder': '24bcda59bb1f4e0b9b82911fc3155c76', 'balance': '0.00', 'currency': 'BRL', 'routing_number': '001', 'number': '5082137111', 'status': 'active', 'metadata': {}, 'created_at': '2021-03-22T06:26:11.424195', 'updated_at': '2021-03-22T06:26:11.424195', 'primary': True, 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'uri': '/v2/marketplaces/f71a8951368a4cc085cf7875ff44e61c/accounts/668f29e6237d471b9b0a2f53e7ec0418', 'resource': 'payment_account'}], 'has_more': False, 'limit': 100, 'total_pages': 1, 'page': 1, 'offset': 0, 'total': '1', 'query_count': '1'}</msg>
<status status="PASS" starttime="20210322 03:26:11.250" endtime="20210322 03:26:11.252"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:26:11.254" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:26:11.253" endtime="20210322 03:26:11.254"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["id"]}</arg>
</arguments>
<assign>
<var>${account_external_key}</var>
</assign>
<msg timestamp="20210322 03:26:11.256" level="INFO">${account_external_key} = 668f29e6237d471b9b0a2f53e7ec0418</msg>
<status status="PASS" starttime="20210322 03:26:11.255" endtime="20210322 03:26:11.256"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_external_key}</arg>
</arguments>
<msg timestamp="20210322 03:26:11.258" level="INFO">${account_external_key} = 668f29e6237d471b9b0a2f53e7ec0418</msg>
<status status="PASS" starttime="20210322 03:26:11.257" endtime="20210322 03:26:11.258"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["number"]}</arg>
</arguments>
<assign>
<var>${account_number}</var>
</assign>
<msg timestamp="20210322 03:26:11.260" level="INFO">${account_number} = 5082137111</msg>
<status status="PASS" starttime="20210322 03:26:11.258" endtime="20210322 03:26:11.260"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_number}</arg>
</arguments>
<msg timestamp="20210322 03:26:11.261" level="INFO">${account_number} = 5082137111</msg>
<status status="PASS" starttime="20210322 03:26:11.260" endtime="20210322 03:26:11.261"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["routing_number"]}</arg>
</arguments>
<assign>
<var>${account_routing_number}</var>
</assign>
<msg timestamp="20210322 03:26:11.262" level="INFO">${account_routing_number} = 001</msg>
<status status="PASS" starttime="20210322 03:26:11.261" endtime="20210322 03:26:11.262"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_routing_number}</arg>
</arguments>
<msg timestamp="20210322 03:26:11.263" level="INFO">${account_routing_number} = 001</msg>
<status status="PASS" starttime="20210322 03:26:11.263" endtime="20210322 03:26:11.263"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:10.590" endtime="20210322 03:26:11.263"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 03:26:11.264" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:26:11.264" endtime="20210322 03:26:11.264"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:08.116" endtime="20210322 03:26:11.265"></status>
</kw>
<kw name="criar chave pix" library="pix_dict_create_entry">
<arguments>
<arg>phone</arg>
<arg>${phone_pix}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 03:26:11.267" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 03:26:11.266" endtime="20210322 03:26:11.267"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:11.266" endtime="20210322 03:26:11.267"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${type}</arg>
</arguments>
<msg timestamp="20210322 03:26:11.268" level="INFO">${type} = phone</msg>
<status status="PASS" starttime="20210322 03:26:11.268" endtime="20210322 03:26:11.268"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210322 03:26:11.269" level="INFO">${value} = +5521999316611</msg>
<status status="PASS" starttime="20210322 03:26:11.269" endtime="20210322 03:26:11.269"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:26:11.270" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 03:26:11.269" endtime="20210322 03:26:11.270"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "${type}",</arg>
<arg>"value": "${value}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 03:26:11.270" level="INFO">${body} = { "type": "phone", "value": "+5521999316611" }</msg>
<status status="PASS" starttime="20210322 03:26:11.270" endtime="20210322 03:26:11.270"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:26:11.271" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/24bcda59bb1f4e0b9b82911fc3155c76/accounts/668f29e6237d471b9b0a2f53e7ec0418/entries, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "phone", "value": "+5521999316611" } 
json=None</msg>
<msg timestamp="20210322 03:26:11.930" level="INFO">${response} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20210322 03:26:11.271" endtime="20210322 03:26:11.930"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:26:11.932" level="INFO">{'id': '1ae2c37850bb4ee1b7acb234c764eaec', 'status': 'waiting_ownership_verification', 'created_at': '2021-03-22T03:26:12.795', 'updated_at': '2021-03-22T03:26:12.795', 'key': {'value': '+5521999316611', 'type': 'phone'}, 'account': {'id': '668f29e6237d471b9b0a2f53e7ec0418', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': '24bcda59bb1f4e0b9b82911fc3155c76', 'owner': {'name': 'Holder de teste', 'national_registration': '23549601743', 'type': 'individual'}, 'routing_number': '001', 'number': '5082137111', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}, 'resource': 'pix.entry'}</msg>
<status status="PASS" starttime="20210322 03:26:11.931" endtime="20210322 03:26:11.933"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:26:11.935" level="INFO">084545edcdb924dd</msg>
<status status="PASS" starttime="20210322 03:26:11.934" endtime="20210322 03:26:11.935"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 03:26:11.937" level="INFO">202</msg>
<status status="PASS" starttime="20210322 03:26:11.936" endtime="20210322 03:26:11.937"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:26:11.939" level="INFO">${response} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20210322 03:26:11.938" endtime="20210322 03:26:11.940"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${entry_external_key}</var>
</assign>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:26:11.942" endtime="20210322 03:26:11.943"></status>
</kw>
<msg timestamp="20210322 03:26:11.943" level="INFO">${entry_external_key} = 1ae2c37850bb4ee1b7acb234c764eaec</msg>
<status status="PASS" starttime="20210322 03:26:11.940" endtime="20210322 03:26:11.943"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${entry_external_key}</arg>
</arguments>
<msg timestamp="20210322 03:26:11.945" level="INFO">${entry_external_key} = 1ae2c37850bb4ee1b7acb234c764eaec</msg>
<status status="PASS" starttime="20210322 03:26:11.944" endtime="20210322 03:26:11.945"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["key"]["value"]}</arg>
</arguments>
<assign>
<var>${entry_key_value}</var>
</assign>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["key"]["value"]}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:26:11.946" endtime="20210322 03:26:11.948"></status>
</kw>
<msg timestamp="20210322 03:26:11.948" level="INFO">${entry_key_value} = +5521999316611</msg>
<status status="PASS" starttime="20210322 03:26:11.945" endtime="20210322 03:26:11.948"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${entry_key_value}</arg>
</arguments>
<msg timestamp="20210322 03:26:11.949" level="INFO">${entry_key_value} = +5521999316611</msg>
<status status="PASS" starttime="20210322 03:26:11.949" endtime="20210322 03:26:11.949"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:11.265" endtime="20210322 03:26:11.950"></status>
</kw>
<kw name="validar criação da chave pix" library="asserts">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando status_code</arg>
</arguments>
<msg timestamp="20210322 03:26:11.952" level="INFO">Validando status_code</msg>
<status status="PASS" starttime="20210322 03:26:11.951" endtime="20210322 03:26:11.952"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${type}' == 'evp'</arg>
<arg>Should Be Equal As Integers</arg>
<arg>${response.status_code}</arg>
<arg>201</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'phone'</arg>
<arg>Should Be Equal As Integers</arg>
<arg>${response.status_code}</arg>
<arg>202</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'email'</arg>
<arg>Should Be Equal As Integers</arg>
<arg>${response.status_code}</arg>
<arg>202</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'national_registration'</arg>
<arg>Should Be Equal As Integers</arg>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>202</arg>
</arguments>
<msg timestamp="20210322 03:26:11.953" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:26:11.953" endtime="20210322 03:26:11.953"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:11.952" endtime="20210322 03:26:11.953"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar status da chave</arg>
</arguments>
<msg timestamp="20210322 03:26:11.954" level="INFO">Validar status da chave</msg>
<status status="PASS" starttime="20210322 03:26:11.954" endtime="20210322 03:26:11.954"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${type}' == 'evp'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["status"]}</arg>
<arg>active</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'phone'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["status"]}</arg>
<arg>waiting_ownership_verification</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'email'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["status"]}</arg>
<arg>waiting_ownership_verification</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'national_registration'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["status"]}</arg>
<arg>active</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["status"]}</arg>
<arg>waiting_ownership_verification</arg>
</arguments>
<status status="PASS" starttime="20210322 03:26:11.956" endtime="20210322 03:26:11.956"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:11.954" endtime="20210322 03:26:11.956"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando Tipo da chave PIX</arg>
</arguments>
<msg timestamp="20210322 03:26:11.957" level="INFO">Validando Tipo da chave PIX</msg>
<status status="PASS" starttime="20210322 03:26:11.956" endtime="20210322 03:26:11.957"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${type}' == 'evp'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["type"]}</arg>
<arg>${type}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'phone'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["type"]}</arg>
<arg>${type}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'email'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["type"]}</arg>
<arg>${type}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'national_registration'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["type"]}</arg>
<arg>${type}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["key"]["type"]}</arg>
<arg>${type}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:26:11.958" endtime="20210322 03:26:11.959"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:11.957" endtime="20210322 03:26:11.959"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando Valor da chave PIX</arg>
</arguments>
<msg timestamp="20210322 03:26:11.959" level="INFO">Validando Valor da chave PIX</msg>
<status status="PASS" starttime="20210322 03:26:11.959" endtime="20210322 03:26:11.959"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${type}' == 'evp'</arg>
<arg>Should Not Be Empty</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'phone'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${phone_pix}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'email'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${email_pix}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'national_registration'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${national_registration}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${phone_pix}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:26:11.960" endtime="20210322 03:26:11.960"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:11.959" endtime="20210322 03:26:11.960"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando dados da conta</arg>
</arguments>
<msg timestamp="20210322 03:26:11.961" level="INFO">Validando dados da conta</msg>
<status status="PASS" starttime="20210322 03:26:11.961" endtime="20210322 03:26:11.961"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["id"]}</arg>
<arg>${account_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:26:11.961" endtime="20210322 03:26:11.961"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["marketplace"]}</arg>
<arg>${marketplace_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:26:11.961" endtime="20210322 03:26:11.962"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["holder"]}</arg>
<arg>${holder_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:26:11.962" endtime="20210322 03:26:11.962"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["number"]}</arg>
<arg>${account_number}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:26:11.962" endtime="20210322 03:26:11.963"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["routing_number"]}</arg>
<arg>${account_routing_number}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:26:11.963" endtime="20210322 03:26:11.963"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["type"]}</arg>
<arg>CACC</arg>
</arguments>
<status status="PASS" starttime="20210322 03:26:11.963" endtime="20210322 03:26:11.964"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar Proprietário da Account Owner</arg>
</arguments>
<msg timestamp="20210322 03:26:11.964" level="INFO">Validar Proprietário da Account Owner</msg>
<status status="PASS" starttime="20210322 03:26:11.964" endtime="20210322 03:26:11.964"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${holder_type}' == 'individual'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["account"]["owner"]["name"]}</arg>
<arg>${holder_name}</arg>
<arg>ELSE IF</arg>
<arg>'${holder_type}' == 'business'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["account"]["owner"]["name"]}</arg>
<arg>${legal_name}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["account"]["owner"]["name"]}</arg>
<arg>${holder_name}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:26:11.965" endtime="20210322 03:26:11.965"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:11.964" endtime="20210322 03:26:11.965"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar national_registration da Account Owner</arg>
</arguments>
<msg timestamp="20210322 03:26:11.965" level="INFO">Validar national_registration da Account Owner</msg>
<status status="PASS" starttime="20210322 03:26:11.965" endtime="20210322 03:26:11.965"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${holder_type}' == 'individual'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["account"]["owner"]["national_registration"]}</arg>
<arg>${national_registration}</arg>
<arg>ELSE IF</arg>
<arg>'${holder_type}' == 'business'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["account"]["owner"]["national_registration"]}</arg>
<arg>${national_registration}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["account"]["owner"]["national_registration"]}</arg>
<arg>${national_registration}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:26:11.966" endtime="20210322 03:26:11.966"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:11.966" endtime="20210322 03:26:11.966"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar Holder Type do Account Owner</arg>
</arguments>
<msg timestamp="20210322 03:26:11.967" level="INFO">Validar Holder Type do Account Owner</msg>
<status status="PASS" starttime="20210322 03:26:11.967" endtime="20210322 03:26:11.967"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${holder_type}' == 'individual'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["account"]["owner"]["type"]}</arg>
<arg>${holder_type}</arg>
<arg>ELSE IF</arg>
<arg>'${holder_type}' == 'business'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["account"]["owner"]["type"]}</arg>
<arg>${holder_type}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["account"]["owner"]["type"]}</arg>
<arg>${holder_type}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:26:11.968" endtime="20210322 03:26:11.968"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:11.967" endtime="20210322 03:26:11.968"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar PSP</arg>
</arguments>
<msg timestamp="20210322 03:26:11.968" level="INFO">Validar PSP</msg>
<status status="PASS" starttime="20210322 03:26:11.968" endtime="20210322 03:26:11.969"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["psp"]["code"]}</arg>
<arg>19468242</arg>
</arguments>
<status status="PASS" starttime="20210322 03:26:11.969" endtime="20210322 03:26:11.969"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["psp"]["name"]}</arg>
<arg>Zoop Tecnologia e Meios de Pagamento S.A.</arg>
</arguments>
<status status="PASS" starttime="20210322 03:26:11.969" endtime="20210322 03:26:11.970"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:11.950" endtime="20210322 03:26:11.970"></status>
</kw>
<kw name="buscar verification code" library="pix_dict_verification_code">
<arguments>
<arg>${holder_external_key}</arg>
<arg>${account_external_key}</arg>
<arg>${entry_external_key}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 03:26:11.971" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 03:26:11.971" endtime="20210322 03:26:11.971"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:11.970" endtime="20210322 03:26:11.972"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/admin/internal_operation/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries/${entry_external_key}/code</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:26:11.972" level="INFO">GET Request using : uri=/admin/internal_operation/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/24bcda59bb1f4e0b9b82911fc3155c76/accounts/668f29e6237d471b9b0a2f53e7ec0418/entries/1ae2c37850bb4ee1b7acb234c764eaec/code, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 03:26:12.595" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:26:11.972" endtime="20210322 03:26:12.595"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:26:12.598" level="INFO">{'code': '3084'}</msg>
<status status="PASS" starttime="20210322 03:26:12.596" endtime="20210322 03:26:12.598"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:26:12.600" level="INFO">d2775e36208b49c3</msg>
<status status="PASS" starttime="20210322 03:26:12.599" endtime="20210322 03:26:12.600"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 03:26:12.602" level="INFO">200</msg>
<status status="PASS" starttime="20210322 03:26:12.601" endtime="20210322 03:26:12.602"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:26:12.604" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:26:12.603" endtime="20210322 03:26:12.604"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["code"]}</arg>
</arguments>
<assign>
<var>${verification_code}</var>
</assign>
<msg timestamp="20210322 03:26:12.607" level="INFO">${verification_code} = 3084</msg>
<status status="PASS" starttime="20210322 03:26:12.605" endtime="20210322 03:26:12.607"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${verification_code}</arg>
</arguments>
<msg timestamp="20210322 03:26:12.608" level="INFO">${verification_code} = 3084</msg>
<status status="PASS" starttime="20210322 03:26:12.608" endtime="20210322 03:26:12.608"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:11.970" endtime="20210322 03:26:12.609"></status>
</kw>
<kw name="confirmar propriedade da chave pix" library="pix_dict_confirm_propriety">
<arguments>
<arg>${EMPTY}</arg>
<arg>${holder_external_key}</arg>
<arg>${account_external_key}</arg>
<arg>${entry_external_key}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 03:26:12.612" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 03:26:12.611" endtime="20210322 03:26:12.613"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:12.611" endtime="20210322 03:26:12.613"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:26:12.614" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 03:26:12.613" endtime="20210322 03:26:12.614"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"code": "${verification_code}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 03:26:12.615" level="INFO">${body} = { "code": "" }</msg>
<status status="PASS" starttime="20210322 03:26:12.614" endtime="20210322 03:26:12.615"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries/${entry_external_key}/ownership</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:26:12.616" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/24bcda59bb1f4e0b9b82911fc3155c76/accounts/668f29e6237d471b9b0a2f53e7ec0418/entries/1ae2c37850bb4ee1b7acb234c764eaec/ownership, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "code": "" } 
json=None</msg>
<msg timestamp="20210322 03:26:13.238" level="INFO">${response} = &lt;Response [404]&gt;</msg>
<status status="PASS" starttime="20210322 03:26:12.615" endtime="20210322 03:26:13.238"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:26:13.240" level="INFO">{'code': 3003, 'status': 'not_found', 'type': 'not_found', 'message': 'Ownership entry not found', 'category': 'business', 'status_code': 404}</msg>
<status status="PASS" starttime="20210322 03:26:13.239" endtime="20210322 03:26:13.241"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:26:13.242" level="INFO">e3ff10049e15e16a</msg>
<status status="PASS" starttime="20210322 03:26:13.241" endtime="20210322 03:26:13.243"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 03:26:13.245" level="INFO">404</msg>
<status status="PASS" starttime="20210322 03:26:13.244" endtime="20210322 03:26:13.245"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:26:13.247" level="INFO">${response} = &lt;Response [404]&gt;</msg>
<status status="PASS" starttime="20210322 03:26:13.246" endtime="20210322 03:26:13.247"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:12.609" endtime="20210322 03:26:13.247"></status>
</kw>
<kw name="validar not found" library="asserts">
<arguments>
<arg>Ownership entry not found</arg>
<arg>3003</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando response nor found</arg>
</arguments>
<msg timestamp="20210322 03:26:13.249" level="INFO">Validando response nor found</msg>
<status status="PASS" starttime="20210322 03:26:13.248" endtime="20210322 03:26:13.250"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>404</arg>
</arguments>
<msg timestamp="20210322 03:26:13.251" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:26:13.250" endtime="20210322 03:26:13.251"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["status"]}</arg>
<arg>not_found</arg>
</arguments>
<status status="PASS" starttime="20210322 03:26:13.252" endtime="20210322 03:26:13.252"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["category"]}</arg>
<arg>business</arg>
</arguments>
<status status="PASS" starttime="20210322 03:26:13.253" endtime="20210322 03:26:13.253"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.json()["code"]}</arg>
<arg>${message_code}</arg>
</arguments>
<msg timestamp="20210322 03:26:13.254" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:26:13.254" endtime="20210322 03:26:13.254"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.json()["status_code"]}</arg>
<arg>404</arg>
</arguments>
<msg timestamp="20210322 03:26:13.255" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:26:13.255" endtime="20210322 03:26:13.255"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["message"]}</arg>
<arg>${message}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:26:13.256" endtime="20210322 03:26:13.257"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["type"]}</arg>
<arg>not_found</arg>
</arguments>
<status status="PASS" starttime="20210322 03:26:13.257" endtime="20210322 03:26:13.257"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:13.248" endtime="20210322 03:26:13.257"></status>
</kw>
<doc>Fluxo de Exceção</doc>
<tags>
<tag>smoke_test</tag>
</tags>
<status status="PASS" starttime="20210322 03:26:08.114" endtime="20210322 03:26:13.258" critical="yes"></status>
</test>
<doc>Funcionalidade: Confirmação de Propriedade de Chave de Endereçamento
Eu, como um Holder, portador de uma conta ativa em Banking
E portador de uma chave de endereçamento do tipo Email ou Telefone
Desejo confirmar a propriedade da chave de endereçamento</doc>
<status status="PASS" starttime="20210322 03:25:43.794" endtime="20210322 03:26:13.259"></status>
</suite>
<suite id="s1-s1-s3" name="Criar Chave de Endereçamento" source="C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\tests\pix-dict\diretorio\Criar Chave de Endereçamento.robot">
<test id="s1-s1-s3-t1" name="Cenário: Criando Chave de Endereçamento do tipo EVP">
<kw name="criar holder individual ativo" library="accreditation_create_holder_active">
<kw name="conectar accreditation" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accreditation</arg>
<arg>url=${accreditation_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 03:26:13.308" level="INFO">Creating Session using : alias=accreditation, url=https://banking-accreditation-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 03:26:13.308" endtime="20210322 03:26:13.308"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:13.307" endtime="20210322 03:26:13.309"></status>
</kw>
<kw name="Cpf" library="FakerLibrary">
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 03:26:13.309" level="INFO">${national_registration} = 685.049.371-00</msg>
<status status="PASS" starttime="20210322 03:26:13.309" endtime="20210322 03:26:13.309"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${national_registration}</arg>
<arg>.</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 03:26:13.310" level="INFO">${national_registration} = 685049371-00</msg>
<status status="PASS" starttime="20210322 03:26:13.309" endtime="20210322 03:26:13.310"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${national_registration}</arg>
<arg>-</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 03:26:13.310" level="INFO">${national_registration} = 68504937100</msg>
<status status="PASS" starttime="20210322 03:26:13.310" endtime="20210322 03:26:13.310"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${national_registration}</arg>
</arguments>
<msg timestamp="20210322 03:26:13.311" level="INFO">${national_registration} = 68504937100</msg>
<status status="PASS" starttime="20210322 03:26:13.311" endtime="20210322 03:26:13.311"></status>
</kw>
<kw name="Rg" library="FakerLibrary">
<doc>Brazilian RG, return plain numbers.
Check:  https://www.ngmatematica.com/2014/02/como-determinar-o-digito-verificador-do.html</doc>
<assign>
<var>${identity_card}</var>
</assign>
<msg timestamp="20210322 03:26:13.311" level="INFO">${identity_card} = 578403614</msg>
<status status="PASS" starttime="20210322 03:26:13.311" endtime="20210322 03:26:13.312"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${identity_card}</arg>
</arguments>
<msg timestamp="20210322 03:26:13.312" level="INFO">${identity_card} = 578403614</msg>
<status status="PASS" starttime="20210322 03:26:13.312" endtime="20210322 03:26:13.312"></status>
</kw>
<kw name="criar holder individual" library="accreditation_post_holder_individual">
<arguments>
<arg>holder_type=individual</arg>
<arg>holder_name=${holder_name}</arg>
<arg>email=${email}</arg>
<arg>national_registration=${national_registration}</arg>
<arg>revenue=${revenue}</arg>
<arg>birthday=${birthday}</arg>
<arg>mothers_name=${mothers_name}</arg>
<arg>identity_card=${identity_card}</arg>
<arg>pep=false</arg>
<arg>cbo=${cbo}</arg>
</arguments>
<kw name="conectar accreditation" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accreditation</arg>
<arg>url=${accreditation_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 03:26:13.314" level="INFO">Creating Session using : alias=accreditation, url=https://banking-accreditation-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 03:26:13.314" endtime="20210322 03:26:13.315"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:13.314" endtime="20210322 03:26:13.315"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_type}</arg>
</arguments>
<msg timestamp="20210322 03:26:13.315" level="INFO">${holder_type} = individual</msg>
<status status="PASS" starttime="20210322 03:26:13.315" endtime="20210322 03:26:13.316"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_name}</arg>
</arguments>
<msg timestamp="20210322 03:26:13.316" level="INFO">${holder_name} = Holder de teste</msg>
<status status="PASS" starttime="20210322 03:26:13.316" endtime="20210322 03:26:13.316"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:26:13.317" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 03:26:13.316" endtime="20210322 03:26:13.317"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "${holder_type}",</arg>
<arg>"name": "${holder_name}",</arg>
<arg>"email": "${email}",</arg>
<arg>"national_registration": "${national_registration}",</arg>
<arg>"revenue": ${revenue},</arg>
<arg>"birthday": "${birthday}",</arg>
<arg>"mothers_name": "${mothers_name}",</arg>
<arg>"identity_card": "${identity_card}",</arg>
<arg>"pep": false,</arg>
<arg>"cbo": ${cbo}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 03:26:13.318" level="INFO">${body} = { "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "68504937100", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder",...</msg>
<status status="PASS" starttime="20210322 03:26:13.317" endtime="20210322 03:26:13.318"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:26:13.318" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "68504937100", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder", "identity_card": "578403614", "pep": false, "cbo": 821450 } 
json=None</msg>
<msg timestamp="20210322 03:26:13.991" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:26:13.318" endtime="20210322 03:26:13.991"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:26:13.992" level="INFO">{'id': '2485bc04ec494364b1ff30b7d5467775', 'name': 'Holder de teste', 'revenue': 5500.0, 'email': 'teste@teste.com.br', 'status': 'waiting_info_and_documents', 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'marketplace_name': 'Marketplace de Teste', 'created_at': '2021-03-22T03:26:14.839329', 'updated_at': '2021-03-22T03:26:14.839332', 'type': 'individual', 'national_registration': '68504937100', 'birthday': '1988-04-23', 'mothers_name': 'Mãe do Holder', 'identity_card': '578403614', 'pep': False, 'cbo': '821450', '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/2485bc04ec494364b1ff30b7d5467775', 'type': 'GET'}, 'phones': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/2485bc04ec494364b1ff30b7d5467775/phones', 'type': 'GET'}, 'addresses': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/2485bc04ec494364b1ff30b7d5467775/addresses', 'type': 'GET'}, 'documents': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/2485bc04ec494364b1ff30b7d5467775/documents', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 03:26:13.991" endtime="20210322 03:26:13.992"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:26:13.993" level="INFO">d647c86e0368c2fc</msg>
<status status="PASS" starttime="20210322 03:26:13.993" endtime="20210322 03:26:13.993"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${body}</arg>
</arguments>
<msg timestamp="20210322 03:26:13.994" level="INFO">{ "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "68504937100", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder", "identity_card": "578403614", "pep": false, "cbo": 821450 }</msg>
<status status="PASS" starttime="20210322 03:26:13.993" endtime="20210322 03:26:13.994"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:26:13.995" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:26:13.994" endtime="20210322 03:26:13.995"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${holder_external_key}</var>
</assign>
<msg timestamp="20210322 03:26:13.996" level="INFO">${holder_external_key} = 2485bc04ec494364b1ff30b7d5467775</msg>
<status status="PASS" starttime="20210322 03:26:13.995" endtime="20210322 03:26:13.996"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_external_key}</arg>
</arguments>
<msg timestamp="20210322 03:26:13.997" level="INFO">${holder_external_key} = 2485bc04ec494364b1ff30b7d5467775</msg>
<status status="PASS" starttime="20210322 03:26:13.996" endtime="20210322 03:26:13.997"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:13.312" endtime="20210322 03:26:13.997"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_name}</arg>
</arguments>
<msg timestamp="20210322 03:26:13.997" level="INFO">${holder_name} = Holder de teste</msg>
<status status="PASS" starttime="20210322 03:26:13.997" endtime="20210322 03:26:13.998"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 03:26:13.998" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:26:13.998" endtime="20210322 03:26:13.998"></status>
</kw>
<kw name="criar holder phone" library="accreditation_post_holder_phone">
<arguments>
<arg>21</arg>
<arg>51</arg>
<arg>996221236</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:26:13.999" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 03:26:13.999" endtime="20210322 03:26:13.999"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"area_code": "${phone_area_code}",</arg>
<arg>"country_code": "${phone_country_code}",</arg>
<arg>"number": "${phone_number}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 03:26:14.000" level="INFO">${body} = { "area_code": "21", "country_code": "51", "number": "996221236" }</msg>
<status status="PASS" starttime="20210322 03:26:14.000" endtime="20210322 03:26:14.000"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/phones</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:26:14.001" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/2485bc04ec494364b1ff30b7d5467775/phones, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "area_code": "21", "country_code": "51", "number": "996221236" } 
json=None</msg>
<msg timestamp="20210322 03:26:14.276" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:26:14.000" endtime="20210322 03:26:14.277"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:26:14.279" level="INFO">{'id': '48124127b3f74b03a6d1af94f9739c67', 'area_code': '21', 'country_code': '51', 'number': '996221236', 'main': True, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/2485bc04ec494364b1ff30b7d5467775/phones/48124127b3f74b03a6d1af94f9739c67', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/2485bc04ec494364b1ff30b7d5467775', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 03:26:14.278" endtime="20210322 03:26:14.279"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:26:14.281" level="INFO">e098c586aee376ef</msg>
<status status="PASS" starttime="20210322 03:26:14.280" endtime="20210322 03:26:14.281"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:26:14.283" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:26:14.282" endtime="20210322 03:26:14.284"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${phone_external_key}</var>
</assign>
<msg timestamp="20210322 03:26:14.287" level="INFO">${phone_external_key} = 48124127b3f74b03a6d1af94f9739c67</msg>
<status status="PASS" starttime="20210322 03:26:14.285" endtime="20210322 03:26:14.287"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${phone_external_key}</arg>
</arguments>
<msg timestamp="20210322 03:26:14.288" level="INFO">${phone_external_key} = 48124127b3f74b03a6d1af94f9739c67</msg>
<status status="PASS" starttime="20210322 03:26:14.288" endtime="20210322 03:26:14.289"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:13.998" endtime="20210322 03:26:14.289"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 03:26:14.290" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:26:14.290" endtime="20210322 03:26:14.291"></status>
</kw>
<kw name="criar holder address" library="accreditation_post_holder_address">
<arguments>
<arg>Rio de Janeiro</arg>
<arg>Rio de Janeiro</arg>
<arg>Brasil</arg>
<arg>Bairro de Testes</arg>
<arg>Rua de Testes</arg>
<arg>90</arg>
<arg>apto 200</arg>
<arg>21550987</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:26:14.293" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 03:26:14.292" endtime="20210322 03:26:14.293"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"city": "${city}",</arg>
<arg>"state": "${state}",</arg>
<arg>"country": "${country}",</arg>
<arg>"neighborhood": "${neighborhood}",</arg>
<arg>"street": "${street}",</arg>
<arg>"number": "${number}",</arg>
<arg>"complement": "${complement}",</arg>
<arg>"postal_code": "${postal_code}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 03:26:14.294" level="INFO">${body} = { "city": "Rio de Janeiro", "state": "Rio de Janeiro", "country": "Brasil", "neighborhood": "Bairro de Testes", "street": "Rua de Testes", "number": "90", "complement": "apto 200", "postal_code": "215...</msg>
<status status="PASS" starttime="20210322 03:26:14.293" endtime="20210322 03:26:14.295"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/addresses</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:26:14.296" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/2485bc04ec494364b1ff30b7d5467775/addresses, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "city": "Rio de Janeiro", "state": "Rio de Janeiro", "country": "Brasil", "neighborhood": "Bairro de Testes", "street": "Rua de Testes", "number": "90", "complement": "apto 200", "postal_code": "21550987" } 
json=None</msg>
<msg timestamp="20210322 03:26:14.515" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:26:14.295" endtime="20210322 03:26:14.515"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:26:14.516" level="INFO">{'id': '2e7b25303a7b495d9e7550156d676a9a', 'street': 'Rua de Testes', 'number': '90', 'city': 'Rio de Janeiro', 'complement': 'apto 200', 'state': 'Rio de Janeiro', 'neighborhood': 'Bairro de Testes', 'postal_code': '21550987', 'country': 'Brasil', 'main': True, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/2485bc04ec494364b1ff30b7d5467775/addresses/2e7b25303a7b495d9e7550156d676a9a', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/2485bc04ec494364b1ff30b7d5467775', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 03:26:14.515" endtime="20210322 03:26:14.516"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:26:14.517" level="INFO">f073525c2053e7ab</msg>
<status status="PASS" starttime="20210322 03:26:14.516" endtime="20210322 03:26:14.517"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:26:14.518" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:26:14.517" endtime="20210322 03:26:14.518"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${address_external_key}</var>
</assign>
<msg timestamp="20210322 03:26:14.519" level="INFO">${address_external_key} = 2e7b25303a7b495d9e7550156d676a9a</msg>
<status status="PASS" starttime="20210322 03:26:14.518" endtime="20210322 03:26:14.519"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${address_external_key}</arg>
</arguments>
<msg timestamp="20210322 03:26:14.520" level="INFO">${address_external_key} = 2e7b25303a7b495d9e7550156d676a9a</msg>
<status status="PASS" starttime="20210322 03:26:14.520" endtime="20210322 03:26:14.520"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:14.291" endtime="20210322 03:26:14.521"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 03:26:14.521" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:26:14.521" endtime="20210322 03:26:14.522"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>SELFIE</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:26:14.523" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 03:26:14.523" endtime="20210322 03:26:14.523"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 03:26:14.524" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 03:26:14.526" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 03:26:14.524" endtime="20210322 03:26:14.526"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:26:14.528" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/2485bc04ec494364b1ff30b7d5467775/documents?type=SELFIE, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 03:26:14.845" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:26:14.527" endtime="20210322 03:26:14.845"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:26:14.846" level="INFO">{'id': 'f229203eb96e41deb3aaee7b9b27f199', 'document_type': 'selfie', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/2485bc04ec494364b1ff30b7d5467775/documents/f229203eb96e41deb3aaee7b9b27f199', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/2485bc04ec494364b1ff30b7d5467775', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/2485bc04ec494364b1ff30b7d5467775/documents/f229203eb96e41deb3aaee7b9b27f199/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 03:26:14.845" endtime="20210322 03:26:14.846"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:26:14.846" level="INFO">a11d07af4cc23a7f</msg>
<status status="PASS" starttime="20210322 03:26:14.846" endtime="20210322 03:26:14.846"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:26:14.847" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:26:14.847" endtime="20210322 03:26:14.847"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 03:26:14.848" level="INFO">${document_external_key} = f229203eb96e41deb3aaee7b9b27f199</msg>
<status status="PASS" starttime="20210322 03:26:14.848" endtime="20210322 03:26:14.848"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 03:26:14.849" level="INFO">${document_external_key} = f229203eb96e41deb3aaee7b9b27f199</msg>
<status status="PASS" starttime="20210322 03:26:14.849" endtime="20210322 03:26:14.849"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:14.522" endtime="20210322 03:26:14.849"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 03:26:14.850" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:26:14.850" endtime="20210322 03:26:14.850"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>RG_FRENTE</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:26:14.852" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 03:26:14.851" endtime="20210322 03:26:14.852"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 03:26:14.853" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 03:26:14.855" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 03:26:14.852" endtime="20210322 03:26:14.855"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:26:14.856" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/2485bc04ec494364b1ff30b7d5467775/documents?type=RG_FRENTE, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 03:26:15.147" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:26:14.855" endtime="20210322 03:26:15.147"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:26:15.150" level="INFO">{'id': 'b4a7511d1aa442949af5822dee922583', 'document_type': 'rg_frente', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/2485bc04ec494364b1ff30b7d5467775/documents/b4a7511d1aa442949af5822dee922583', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/2485bc04ec494364b1ff30b7d5467775', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/2485bc04ec494364b1ff30b7d5467775/documents/b4a7511d1aa442949af5822dee922583/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 03:26:15.148" endtime="20210322 03:26:15.150"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:26:15.153" level="INFO">7ed4844f6c93df3a</msg>
<status status="PASS" starttime="20210322 03:26:15.151" endtime="20210322 03:26:15.153"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:26:15.155" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:26:15.154" endtime="20210322 03:26:15.156"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 03:26:15.158" level="INFO">${document_external_key} = b4a7511d1aa442949af5822dee922583</msg>
<status status="PASS" starttime="20210322 03:26:15.156" endtime="20210322 03:26:15.158"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 03:26:15.159" level="INFO">${document_external_key} = b4a7511d1aa442949af5822dee922583</msg>
<status status="PASS" starttime="20210322 03:26:15.158" endtime="20210322 03:26:15.159"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:14.850" endtime="20210322 03:26:15.160"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 03:26:15.160" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:26:15.160" endtime="20210322 03:26:15.161"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>RG_VERSO</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:26:15.162" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 03:26:15.162" endtime="20210322 03:26:15.162"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 03:26:15.163" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 03:26:15.165" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 03:26:15.163" endtime="20210322 03:26:15.165"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:26:15.167" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/2485bc04ec494364b1ff30b7d5467775/documents?type=RG_VERSO, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 03:26:15.425" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:26:15.166" endtime="20210322 03:26:15.425"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:26:15.429" level="INFO">{'id': 'db0db4bd3b624454bc5daa313501eb9c', 'document_type': 'rg_verso', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/2485bc04ec494364b1ff30b7d5467775/documents/db0db4bd3b624454bc5daa313501eb9c', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/2485bc04ec494364b1ff30b7d5467775', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/2485bc04ec494364b1ff30b7d5467775/documents/db0db4bd3b624454bc5daa313501eb9c/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 03:26:15.427" endtime="20210322 03:26:15.429"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:26:15.431" level="INFO">73e9d4d45dc01a3e</msg>
<status status="PASS" starttime="20210322 03:26:15.430" endtime="20210322 03:26:15.431"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:26:15.434" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:26:15.432" endtime="20210322 03:26:15.434"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 03:26:15.436" level="INFO">${document_external_key} = db0db4bd3b624454bc5daa313501eb9c</msg>
<status status="PASS" starttime="20210322 03:26:15.435" endtime="20210322 03:26:15.436"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 03:26:15.437" level="INFO">${document_external_key} = db0db4bd3b624454bc5daa313501eb9c</msg>
<status status="PASS" starttime="20210322 03:26:15.437" endtime="20210322 03:26:15.438"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:15.161" endtime="20210322 03:26:15.438"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 03:26:15.439" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:26:15.438" endtime="20210322 03:26:15.439"></status>
</kw>
<kw name="solicitar aprovação do holder" library="accreditation_request_approval">
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:26:15.442" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 03:26:15.440" endtime="20210322 03:26:15.442"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/approval</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:26:15.442" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/2485bc04ec494364b1ff30b7d5467775/approval, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data=None 
json=None</msg>
<msg timestamp="20210322 03:26:15.708" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:26:15.442" endtime="20210322 03:26:15.709"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:26:15.711" level="INFO">{'message': 'Approval request accepted successfully. Processing analysis'}</msg>
<status status="PASS" starttime="20210322 03:26:15.710" endtime="20210322 03:26:15.711"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:26:15.713" level="INFO">b8b601c006bb257a</msg>
<status status="PASS" starttime="20210322 03:26:15.712" endtime="20210322 03:26:15.713"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:26:15.714" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:26:15.714" endtime="20210322 03:26:15.715"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:15.440" endtime="20210322 03:26:15.715"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 03:26:15.716" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:26:15.715" endtime="20210322 03:26:15.716"></status>
</kw>
<kw name="recebendo notificação de aprovação" library="accreditation_risk_notification">
<kw name="Uuid 4" library="FakerLibrary">
<doc>Generates a random UUID4 string.
:param cast_to: Specify what type the UUID should be cast to. Default is `str`
:type cast_to: callable</doc>
<assign>
<var>${assessment_id}</var>
</assign>
<msg timestamp="20210322 03:26:15.718" level="INFO">${assessment_id} = e8760be1-4403-43aa-a239-6e87c11c542a</msg>
<status status="PASS" starttime="20210322 03:26:15.718" endtime="20210322 03:26:15.718"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>year</arg>
</arguments>
<assign>
<var>${year}</var>
</assign>
<msg timestamp="20210322 03:26:15.719" level="INFO">${year} = 2021</msg>
<status status="PASS" starttime="20210322 03:26:15.718" endtime="20210322 03:26:15.719"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>month</arg>
</arguments>
<assign>
<var>${month}</var>
</assign>
<msg timestamp="20210322 03:26:15.720" level="INFO">${month} = 03</msg>
<status status="PASS" starttime="20210322 03:26:15.720" endtime="20210322 03:26:15.720"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>day</arg>
</arguments>
<assign>
<var>${day}</var>
</assign>
<msg timestamp="20210322 03:26:15.721" level="INFO">${day} = 22</msg>
<status status="PASS" starttime="20210322 03:26:15.720" endtime="20210322 03:26:15.721"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:26:15.722" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 03:26:15.721" endtime="20210322 03:26:15.722"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "risk.assessment.result",</arg>
<arg>"resource": "business.holder",</arg>
<arg>"created_at": "${year}-${month}-${day} 15:28:56.747Z",</arg>
<arg>"marketplace_id": "${marketplace_external_key}",</arg>
<arg>"object": {</arg>
<arg>"result": "APPROVED",</arg>
<arg>"holder_id": "${holder_external_key}",</arg>
<arg>"applicant_id": "${application_external_key}",</arg>
<arg>"assessment_id": "${assessment_id}"</arg>
<arg>}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 03:26:15.723" level="INFO">${body} = { "type": "risk.assessment.result", "resource": "business.holder", "created_at": "2021-03-22 15:28:56.747Z", "marketplace_id": "f71a8951368a4cc085cf7875ff44e61c", "object": { "result": "APPROVED", "ho...</msg>
<status status="PASS" starttime="20210322 03:26:15.722" endtime="20210322 03:26:15.723"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/admin/internal_operation/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/registration/approval</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:26:15.724" level="INFO">POST Request using : uri=/admin/internal_operation/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/2485bc04ec494364b1ff30b7d5467775/registration/approval, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "risk.assessment.result", "resource": "business.holder", "created_at": "2021-03-22 15:28:56.747Z", "marketplace_id": "f71a8951368a4cc085cf7875ff44e61c", "object": { "result": "APPROVED", "holder_id": "2485bc04ec494364b1ff30b7d5467775", "applicant_id": "bcc25a6751c14b52af1340d40dba78c5", "assessment_id": "e8760be1-4403-43aa-a239-6e87c11c542a" } } 
json=None</msg>
<msg timestamp="20210322 03:26:15.928" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:26:15.723" endtime="20210322 03:26:15.928"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:26:15.932" level="INFO">{'message': 'Holder approved successfully'}</msg>
<status status="PASS" starttime="20210322 03:26:15.930" endtime="20210322 03:26:15.932"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:26:15.934" level="INFO">59f5b5d585713baf</msg>
<status status="PASS" starttime="20210322 03:26:15.933" endtime="20210322 03:26:15.934"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:26:15.936" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:26:15.935" endtime="20210322 03:26:15.937"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 03:26:15.939" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:26:15.938" endtime="20210322 03:26:15.939"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:15.717" endtime="20210322 03:26:15.939"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 03:26:15.940" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:26:15.939" endtime="20210322 03:26:15.941"></status>
</kw>
<kw name="buscar account por holder" library="accounts_get_accounts_by_holder">
<kw name="conectar accounts" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accounts</arg>
<arg>url=${account_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 03:26:15.944" level="INFO">Creating Session using : alias=accounts, url=https://banking-accounts-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 03:26:15.943" endtime="20210322 03:26:15.945"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:15.943" endtime="20210322 03:26:15.945"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accounts</arg>
<arg>/marketplaces/${marketplace_external_key}/holders/${holder_external_key}/accounts</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:26:15.946" level="INFO">GET Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/holders/2485bc04ec494364b1ff30b7d5467775/accounts, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 03:26:16.569" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:26:15.945" endtime="20210322 03:26:16.569"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:26:16.569" level="INFO">{'items': [{'id': '0258857d51d146f687e4994b83c1c4e3', 'holder': '2485bc04ec494364b1ff30b7d5467775', 'balance': '0.00', 'currency': 'BRL', 'routing_number': '001', 'number': '9583145259', 'status': 'active', 'metadata': {}, 'created_at': '2021-03-22T06:26:16.772029', 'updated_at': '2021-03-22T06:26:16.772029', 'primary': True, 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'uri': '/v2/marketplaces/f71a8951368a4cc085cf7875ff44e61c/accounts/0258857d51d146f687e4994b83c1c4e3', 'resource': 'payment_account'}], 'has_more': False, 'limit': 100, 'total_pages': 1, 'page': 1, 'offset': 0, 'total': '1', 'query_count': '1'}</msg>
<status status="PASS" starttime="20210322 03:26:16.569" endtime="20210322 03:26:16.569"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:26:16.570" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:26:16.570" endtime="20210322 03:26:16.570"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["id"]}</arg>
</arguments>
<assign>
<var>${account_external_key}</var>
</assign>
<msg timestamp="20210322 03:26:16.571" level="INFO">${account_external_key} = 0258857d51d146f687e4994b83c1c4e3</msg>
<status status="PASS" starttime="20210322 03:26:16.570" endtime="20210322 03:26:16.571"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_external_key}</arg>
</arguments>
<msg timestamp="20210322 03:26:16.571" level="INFO">${account_external_key} = 0258857d51d146f687e4994b83c1c4e3</msg>
<status status="PASS" starttime="20210322 03:26:16.571" endtime="20210322 03:26:16.571"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["number"]}</arg>
</arguments>
<assign>
<var>${account_number}</var>
</assign>
<msg timestamp="20210322 03:26:16.572" level="INFO">${account_number} = 9583145259</msg>
<status status="PASS" starttime="20210322 03:26:16.571" endtime="20210322 03:26:16.572"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_number}</arg>
</arguments>
<msg timestamp="20210322 03:26:16.572" level="INFO">${account_number} = 9583145259</msg>
<status status="PASS" starttime="20210322 03:26:16.572" endtime="20210322 03:26:16.572"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["routing_number"]}</arg>
</arguments>
<assign>
<var>${account_routing_number}</var>
</assign>
<msg timestamp="20210322 03:26:16.573" level="INFO">${account_routing_number} = 001</msg>
<status status="PASS" starttime="20210322 03:26:16.572" endtime="20210322 03:26:16.573"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_routing_number}</arg>
</arguments>
<msg timestamp="20210322 03:26:16.573" level="INFO">${account_routing_number} = 001</msg>
<status status="PASS" starttime="20210322 03:26:16.573" endtime="20210322 03:26:16.573"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:15.942" endtime="20210322 03:26:16.573"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 03:26:16.574" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:26:16.574" endtime="20210322 03:26:16.574"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:13.307" endtime="20210322 03:26:16.574"></status>
</kw>
<kw name="criar chave pix" library="pix_dict_create_entry">
<arguments>
<arg>type=evp</arg>
<arg>value=${EMPTY}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 03:26:16.576" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 03:26:16.575" endtime="20210322 03:26:16.576"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:16.575" endtime="20210322 03:26:16.576"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${type}</arg>
</arguments>
<msg timestamp="20210322 03:26:16.577" level="INFO">${type} = evp</msg>
<status status="PASS" starttime="20210322 03:26:16.576" endtime="20210322 03:26:16.577"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210322 03:26:16.577" level="INFO">${value} = </msg>
<status status="PASS" starttime="20210322 03:26:16.577" endtime="20210322 03:26:16.577"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:26:16.578" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 03:26:16.577" endtime="20210322 03:26:16.578"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "${type}",</arg>
<arg>"value": "${value}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 03:26:16.578" level="INFO">${body} = { "type": "evp", "value": "" }</msg>
<status status="PASS" starttime="20210322 03:26:16.578" endtime="20210322 03:26:16.578"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:26:16.578" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/2485bc04ec494364b1ff30b7d5467775/accounts/0258857d51d146f687e4994b83c1c4e3/entries, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "evp", "value": "" } 
json=None</msg>
<msg timestamp="20210322 03:26:18.301" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:26:16.578" endtime="20210322 03:26:18.302"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:26:18.304" level="INFO">{'id': '83ea7dd0f8914199acad031ca39f7ec1', 'status': 'active', 'created_at': '2021-03-22T03:26:18.104', 'updated_at': '2021-03-22T03:26:19.178', 'key': {'value': 'f475552e-cdaa-486e-a26e-0eb7762da928', 'type': 'evp'}, 'account': {'id': '0258857d51d146f687e4994b83c1c4e3', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': '2485bc04ec494364b1ff30b7d5467775', 'owner': {'name': 'Holder de teste', 'national_registration': '68504937100', 'type': 'individual'}, 'routing_number': '001', 'number': '9583145259', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}, 'resource': 'pix.entry'}</msg>
<status status="PASS" starttime="20210322 03:26:18.302" endtime="20210322 03:26:18.304"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:26:18.306" level="INFO">abf578a3631e1112</msg>
<status status="PASS" starttime="20210322 03:26:18.305" endtime="20210322 03:26:18.306"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 03:26:18.308" level="INFO">201</msg>
<status status="PASS" starttime="20210322 03:26:18.307" endtime="20210322 03:26:18.308"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:26:18.310" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:26:18.309" endtime="20210322 03:26:18.310"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${entry_external_key}</var>
</assign>
<msg timestamp="20210322 03:26:18.313" level="INFO">${entry_external_key} = 83ea7dd0f8914199acad031ca39f7ec1</msg>
<status status="PASS" starttime="20210322 03:26:18.311" endtime="20210322 03:26:18.313"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${entry_external_key}</arg>
</arguments>
<msg timestamp="20210322 03:26:18.314" level="INFO">${entry_external_key} = 83ea7dd0f8914199acad031ca39f7ec1</msg>
<status status="PASS" starttime="20210322 03:26:18.314" endtime="20210322 03:26:18.314"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["key"]["value"]}</arg>
</arguments>
<assign>
<var>${entry_key_value}</var>
</assign>
<msg timestamp="20210322 03:26:18.316" level="INFO">${entry_key_value} = f475552e-cdaa-486e-a26e-0eb7762da928</msg>
<status status="PASS" starttime="20210322 03:26:18.315" endtime="20210322 03:26:18.316"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${entry_key_value}</arg>
</arguments>
<msg timestamp="20210322 03:26:18.318" level="INFO">${entry_key_value} = f475552e-cdaa-486e-a26e-0eb7762da928</msg>
<status status="PASS" starttime="20210322 03:26:18.317" endtime="20210322 03:26:18.318"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:16.574" endtime="20210322 03:26:18.318"></status>
</kw>
<kw name="validar criação da chave pix" library="asserts">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando status_code</arg>
</arguments>
<msg timestamp="20210322 03:26:18.320" level="INFO">Validando status_code</msg>
<status status="PASS" starttime="20210322 03:26:18.320" endtime="20210322 03:26:18.320"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${type}' == 'evp'</arg>
<arg>Should Be Equal As Integers</arg>
<arg>${response.status_code}</arg>
<arg>201</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'phone'</arg>
<arg>Should Be Equal As Integers</arg>
<arg>${response.status_code}</arg>
<arg>202</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'email'</arg>
<arg>Should Be Equal As Integers</arg>
<arg>${response.status_code}</arg>
<arg>202</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'national_registration'</arg>
<arg>Should Be Equal As Integers</arg>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 03:26:18.322" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:26:18.322" endtime="20210322 03:26:18.323"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:18.321" endtime="20210322 03:26:18.323"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar status da chave</arg>
</arguments>
<msg timestamp="20210322 03:26:18.323" level="INFO">Validar status da chave</msg>
<status status="PASS" starttime="20210322 03:26:18.323" endtime="20210322 03:26:18.324"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${type}' == 'evp'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["status"]}</arg>
<arg>active</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'phone'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["status"]}</arg>
<arg>waiting_ownership_verification</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'email'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["status"]}</arg>
<arg>waiting_ownership_verification</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'national_registration'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["status"]}</arg>
<arg>active</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["status"]}</arg>
<arg>active</arg>
</arguments>
<status status="PASS" starttime="20210322 03:26:18.325" endtime="20210322 03:26:18.326"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:18.324" endtime="20210322 03:26:18.326"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando Tipo da chave PIX</arg>
</arguments>
<msg timestamp="20210322 03:26:18.327" level="INFO">Validando Tipo da chave PIX</msg>
<status status="PASS" starttime="20210322 03:26:18.326" endtime="20210322 03:26:18.327"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${type}' == 'evp'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["type"]}</arg>
<arg>${type}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'phone'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["type"]}</arg>
<arg>${type}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'email'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["type"]}</arg>
<arg>${type}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'national_registration'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["type"]}</arg>
<arg>${type}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["key"]["type"]}</arg>
<arg>${type}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:26:18.328" endtime="20210322 03:26:18.329"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:18.327" endtime="20210322 03:26:18.329"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando Valor da chave PIX</arg>
</arguments>
<msg timestamp="20210322 03:26:18.329" level="INFO">Validando Valor da chave PIX</msg>
<status status="PASS" starttime="20210322 03:26:18.329" endtime="20210322 03:26:18.330"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${type}' == 'evp'</arg>
<arg>Should Not Be Empty</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'phone'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${phone_pix}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'email'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${email_pix}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'national_registration'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${national_registration}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${response.json()["key"]["value"]}</arg>
</arguments>
<msg timestamp="20210322 03:26:18.332" level="INFO">Length is 36</msg>
<status status="PASS" starttime="20210322 03:26:18.332" endtime="20210322 03:26:18.333"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:18.330" endtime="20210322 03:26:18.333"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando dados da conta</arg>
</arguments>
<msg timestamp="20210322 03:26:18.334" level="INFO">Validando dados da conta</msg>
<status status="PASS" starttime="20210322 03:26:18.333" endtime="20210322 03:26:18.334"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["id"]}</arg>
<arg>${account_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:26:18.334" endtime="20210322 03:26:18.335"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["marketplace"]}</arg>
<arg>${marketplace_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:26:18.336" endtime="20210322 03:26:18.337"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["holder"]}</arg>
<arg>${holder_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:26:18.338" endtime="20210322 03:26:18.338"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["number"]}</arg>
<arg>${account_number}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:26:18.338" endtime="20210322 03:26:18.339"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["routing_number"]}</arg>
<arg>${account_routing_number}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:26:18.339" endtime="20210322 03:26:18.340"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["type"]}</arg>
<arg>CACC</arg>
</arguments>
<status status="PASS" starttime="20210322 03:26:18.340" endtime="20210322 03:26:18.341"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar Proprietário da Account Owner</arg>
</arguments>
<msg timestamp="20210322 03:26:18.341" level="INFO">Validar Proprietário da Account Owner</msg>
<status status="PASS" starttime="20210322 03:26:18.341" endtime="20210322 03:26:18.341"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${holder_type}' == 'individual'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["account"]["owner"]["name"]}</arg>
<arg>${holder_name}</arg>
<arg>ELSE IF</arg>
<arg>'${holder_type}' == 'business'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["account"]["owner"]["name"]}</arg>
<arg>${legal_name}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["account"]["owner"]["name"]}</arg>
<arg>${holder_name}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:26:18.343" endtime="20210322 03:26:18.343"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:18.342" endtime="20210322 03:26:18.343"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar national_registration da Account Owner</arg>
</arguments>
<msg timestamp="20210322 03:26:18.344" level="INFO">Validar national_registration da Account Owner</msg>
<status status="PASS" starttime="20210322 03:26:18.344" endtime="20210322 03:26:18.344"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${holder_type}' == 'individual'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["account"]["owner"]["national_registration"]}</arg>
<arg>${national_registration}</arg>
<arg>ELSE IF</arg>
<arg>'${holder_type}' == 'business'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["account"]["owner"]["national_registration"]}</arg>
<arg>${national_registration}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["account"]["owner"]["national_registration"]}</arg>
<arg>${national_registration}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:26:18.345" endtime="20210322 03:26:18.346"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:18.345" endtime="20210322 03:26:18.346"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar Holder Type do Account Owner</arg>
</arguments>
<msg timestamp="20210322 03:26:18.347" level="INFO">Validar Holder Type do Account Owner</msg>
<status status="PASS" starttime="20210322 03:26:18.346" endtime="20210322 03:26:18.347"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${holder_type}' == 'individual'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["account"]["owner"]["type"]}</arg>
<arg>${holder_type}</arg>
<arg>ELSE IF</arg>
<arg>'${holder_type}' == 'business'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["account"]["owner"]["type"]}</arg>
<arg>${holder_type}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["account"]["owner"]["type"]}</arg>
<arg>${holder_type}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:26:18.348" endtime="20210322 03:26:18.349"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:18.347" endtime="20210322 03:26:18.349"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar PSP</arg>
</arguments>
<msg timestamp="20210322 03:26:18.349" level="INFO">Validar PSP</msg>
<status status="PASS" starttime="20210322 03:26:18.349" endtime="20210322 03:26:18.349"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["psp"]["code"]}</arg>
<arg>19468242</arg>
</arguments>
<status status="PASS" starttime="20210322 03:26:18.350" endtime="20210322 03:26:18.351"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["psp"]["name"]}</arg>
<arg>Zoop Tecnologia e Meios de Pagamento S.A.</arg>
</arguments>
<status status="PASS" starttime="20210322 03:26:18.351" endtime="20210322 03:26:18.352"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:18.319" endtime="20210322 03:26:18.352"></status>
</kw>
<doc>Fluxo Básico</doc>
<tags>
<tag>regression_test</tag>
<tag>smoke_test</tag>
</tags>
<status status="PASS" starttime="20210322 03:26:13.306" endtime="20210322 03:26:18.353" critical="yes"></status>
</test>
<test id="s1-s1-s3-t2" name="Cenário: Criando Chave de Endereçamento do tipo Telefone">
<kw name="Random Number" library="FakerLibrary">
<doc>Returns a random number with 1 digit (default, when digits==None),
a random number with 0 to given number of digits, or a random number
with given number to given number of digits (when ``fix_len==True``).</doc>
<arguments>
<arg>digits=8</arg>
<arg>fix_len=True</arg>
</arguments>
<assign>
<var>${phone}</var>
</assign>
<msg timestamp="20210322 03:26:18.355" level="INFO">${phone} = 84708940</msg>
<status status="PASS" starttime="20210322 03:26:18.355" endtime="20210322 03:26:18.355"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>+55219${phone}</arg>
</arguments>
<assign>
<var>${phone_pix}</var>
</assign>
<msg timestamp="20210322 03:26:18.357" level="INFO">${phone_pix} = +5521984708940</msg>
<status status="PASS" starttime="20210322 03:26:18.356" endtime="20210322 03:26:18.357"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${phone_pix}</arg>
</arguments>
<msg timestamp="20210322 03:26:18.357" level="INFO">${phone_pix} = +5521984708940</msg>
<status status="PASS" starttime="20210322 03:26:18.357" endtime="20210322 03:26:18.357"></status>
</kw>
<kw name="criar holder individual ativo" library="accreditation_create_holder_active">
<kw name="conectar accreditation" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accreditation</arg>
<arg>url=${accreditation_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 03:26:18.359" level="INFO">Creating Session using : alias=accreditation, url=https://banking-accreditation-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 03:26:18.359" endtime="20210322 03:26:18.360"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:18.359" endtime="20210322 03:26:18.360"></status>
</kw>
<kw name="Cpf" library="FakerLibrary">
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 03:26:18.361" level="INFO">${national_registration} = 302.675.948-10</msg>
<status status="PASS" starttime="20210322 03:26:18.360" endtime="20210322 03:26:18.361"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${national_registration}</arg>
<arg>.</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 03:26:18.362" level="INFO">${national_registration} = 302675948-10</msg>
<status status="PASS" starttime="20210322 03:26:18.361" endtime="20210322 03:26:18.362"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${national_registration}</arg>
<arg>-</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 03:26:18.363" level="INFO">${national_registration} = 30267594810</msg>
<status status="PASS" starttime="20210322 03:26:18.362" endtime="20210322 03:26:18.363"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${national_registration}</arg>
</arguments>
<msg timestamp="20210322 03:26:18.363" level="INFO">${national_registration} = 30267594810</msg>
<status status="PASS" starttime="20210322 03:26:18.363" endtime="20210322 03:26:18.364"></status>
</kw>
<kw name="Rg" library="FakerLibrary">
<doc>Brazilian RG, return plain numbers.
Check:  https://www.ngmatematica.com/2014/02/como-determinar-o-digito-verificador-do.html</doc>
<assign>
<var>${identity_card}</var>
</assign>
<msg timestamp="20210322 03:26:18.364" level="INFO">${identity_card} = 714638055</msg>
<status status="PASS" starttime="20210322 03:26:18.364" endtime="20210322 03:26:18.364"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${identity_card}</arg>
</arguments>
<msg timestamp="20210322 03:26:18.365" level="INFO">${identity_card} = 714638055</msg>
<status status="PASS" starttime="20210322 03:26:18.365" endtime="20210322 03:26:18.365"></status>
</kw>
<kw name="criar holder individual" library="accreditation_post_holder_individual">
<arguments>
<arg>holder_type=individual</arg>
<arg>holder_name=${holder_name}</arg>
<arg>email=${email}</arg>
<arg>national_registration=${national_registration}</arg>
<arg>revenue=${revenue}</arg>
<arg>birthday=${birthday}</arg>
<arg>mothers_name=${mothers_name}</arg>
<arg>identity_card=${identity_card}</arg>
<arg>pep=false</arg>
<arg>cbo=${cbo}</arg>
</arguments>
<kw name="conectar accreditation" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accreditation</arg>
<arg>url=${accreditation_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 03:26:18.368" level="INFO">Creating Session using : alias=accreditation, url=https://banking-accreditation-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 03:26:18.367" endtime="20210322 03:26:18.368"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:18.367" endtime="20210322 03:26:18.369"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_type}</arg>
</arguments>
<msg timestamp="20210322 03:26:18.369" level="INFO">${holder_type} = individual</msg>
<status status="PASS" starttime="20210322 03:26:18.369" endtime="20210322 03:26:18.369"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_name}</arg>
</arguments>
<msg timestamp="20210322 03:26:18.370" level="INFO">${holder_name} = Holder de teste</msg>
<status status="PASS" starttime="20210322 03:26:18.370" endtime="20210322 03:26:18.371"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:26:18.373" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 03:26:18.373" endtime="20210322 03:26:18.373"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "${holder_type}",</arg>
<arg>"name": "${holder_name}",</arg>
<arg>"email": "${email}",</arg>
<arg>"national_registration": "${national_registration}",</arg>
<arg>"revenue": ${revenue},</arg>
<arg>"birthday": "${birthday}",</arg>
<arg>"mothers_name": "${mothers_name}",</arg>
<arg>"identity_card": "${identity_card}",</arg>
<arg>"pep": false,</arg>
<arg>"cbo": ${cbo}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 03:26:18.374" level="INFO">${body} = { "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "30267594810", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder",...</msg>
<status status="PASS" starttime="20210322 03:26:18.373" endtime="20210322 03:26:18.375"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:26:18.376" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "30267594810", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder", "identity_card": "714638055", "pep": false, "cbo": 821450 } 
json=None</msg>
<msg timestamp="20210322 03:26:19.055" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:26:18.375" endtime="20210322 03:26:19.055"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:26:19.057" level="INFO">{'id': 'd6c7ec17a05944bd8d7909a24c8483cd', 'name': 'Holder de teste', 'revenue': 5500.0, 'email': 'teste@teste.com.br', 'status': 'waiting_info_and_documents', 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'marketplace_name': 'Marketplace de Teste', 'created_at': '2021-03-22T03:26:19.859758', 'updated_at': '2021-03-22T03:26:19.85976', 'type': 'individual', 'national_registration': '30267594810', 'birthday': '1988-04-23', 'mothers_name': 'Mãe do Holder', 'identity_card': '714638055', 'pep': False, 'cbo': '821450', '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/d6c7ec17a05944bd8d7909a24c8483cd', 'type': 'GET'}, 'phones': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/d6c7ec17a05944bd8d7909a24c8483cd/phones', 'type': 'GET'}, 'addresses': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/d6c7ec17a05944bd8d7909a24c8483cd/addresses', 'type': 'GET'}, 'documents': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/d6c7ec17a05944bd8d7909a24c8483cd/documents', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 03:26:19.056" endtime="20210322 03:26:19.057"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:26:19.059" level="INFO">9b9a0d44937cd74a</msg>
<status status="PASS" starttime="20210322 03:26:19.058" endtime="20210322 03:26:19.059"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${body}</arg>
</arguments>
<msg timestamp="20210322 03:26:19.060" level="INFO">{ "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "30267594810", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder", "identity_card": "714638055", "pep": false, "cbo": 821450 }</msg>
<status status="PASS" starttime="20210322 03:26:19.059" endtime="20210322 03:26:19.060"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:26:19.061" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:26:19.060" endtime="20210322 03:26:19.061"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${holder_external_key}</var>
</assign>
<msg timestamp="20210322 03:26:19.062" level="INFO">${holder_external_key} = d6c7ec17a05944bd8d7909a24c8483cd</msg>
<status status="PASS" starttime="20210322 03:26:19.062" endtime="20210322 03:26:19.063"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_external_key}</arg>
</arguments>
<msg timestamp="20210322 03:26:19.063" level="INFO">${holder_external_key} = d6c7ec17a05944bd8d7909a24c8483cd</msg>
<status status="PASS" starttime="20210322 03:26:19.063" endtime="20210322 03:26:19.064"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:18.366" endtime="20210322 03:26:19.064"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_name}</arg>
</arguments>
<msg timestamp="20210322 03:26:19.065" level="INFO">${holder_name} = Holder de teste</msg>
<status status="PASS" starttime="20210322 03:26:19.064" endtime="20210322 03:26:19.065"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 03:26:19.066" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:26:19.065" endtime="20210322 03:26:19.066"></status>
</kw>
<kw name="criar holder phone" library="accreditation_post_holder_phone">
<arguments>
<arg>21</arg>
<arg>51</arg>
<arg>996221236</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:26:19.068" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 03:26:19.067" endtime="20210322 03:26:19.068"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"area_code": "${phone_area_code}",</arg>
<arg>"country_code": "${phone_country_code}",</arg>
<arg>"number": "${phone_number}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 03:26:19.069" level="INFO">${body} = { "area_code": "21", "country_code": "51", "number": "996221236" }</msg>
<status status="PASS" starttime="20210322 03:26:19.068" endtime="20210322 03:26:19.069"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/phones</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:26:19.070" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/d6c7ec17a05944bd8d7909a24c8483cd/phones, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "area_code": "21", "country_code": "51", "number": "996221236" } 
json=None</msg>
<msg timestamp="20210322 03:26:19.297" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:26:19.069" endtime="20210322 03:26:19.297"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:26:19.299" level="INFO">{'id': 'e102cd0a4dd04d2e8b6016ac6455bac0', 'area_code': '21', 'country_code': '51', 'number': '996221236', 'main': True, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/d6c7ec17a05944bd8d7909a24c8483cd/phones/e102cd0a4dd04d2e8b6016ac6455bac0', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/d6c7ec17a05944bd8d7909a24c8483cd', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 03:26:19.298" endtime="20210322 03:26:19.299"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:26:19.300" level="INFO">88055e077a491bab</msg>
<status status="PASS" starttime="20210322 03:26:19.299" endtime="20210322 03:26:19.300"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:26:19.303" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:26:19.301" endtime="20210322 03:26:19.303"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${phone_external_key}</var>
</assign>
<msg timestamp="20210322 03:26:19.305" level="INFO">${phone_external_key} = e102cd0a4dd04d2e8b6016ac6455bac0</msg>
<status status="PASS" starttime="20210322 03:26:19.304" endtime="20210322 03:26:19.305"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${phone_external_key}</arg>
</arguments>
<msg timestamp="20210322 03:26:19.306" level="INFO">${phone_external_key} = e102cd0a4dd04d2e8b6016ac6455bac0</msg>
<status status="PASS" starttime="20210322 03:26:19.306" endtime="20210322 03:26:19.306"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:19.066" endtime="20210322 03:26:19.307"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 03:26:19.308" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:26:19.307" endtime="20210322 03:26:19.308"></status>
</kw>
<kw name="criar holder address" library="accreditation_post_holder_address">
<arguments>
<arg>Rio de Janeiro</arg>
<arg>Rio de Janeiro</arg>
<arg>Brasil</arg>
<arg>Bairro de Testes</arg>
<arg>Rua de Testes</arg>
<arg>90</arg>
<arg>apto 200</arg>
<arg>21550987</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:26:19.309" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 03:26:19.309" endtime="20210322 03:26:19.310"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"city": "${city}",</arg>
<arg>"state": "${state}",</arg>
<arg>"country": "${country}",</arg>
<arg>"neighborhood": "${neighborhood}",</arg>
<arg>"street": "${street}",</arg>
<arg>"number": "${number}",</arg>
<arg>"complement": "${complement}",</arg>
<arg>"postal_code": "${postal_code}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 03:26:19.311" level="INFO">${body} = { "city": "Rio de Janeiro", "state": "Rio de Janeiro", "country": "Brasil", "neighborhood": "Bairro de Testes", "street": "Rua de Testes", "number": "90", "complement": "apto 200", "postal_code": "215...</msg>
<status status="PASS" starttime="20210322 03:26:19.310" endtime="20210322 03:26:19.311"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/addresses</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:26:19.312" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/d6c7ec17a05944bd8d7909a24c8483cd/addresses, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "city": "Rio de Janeiro", "state": "Rio de Janeiro", "country": "Brasil", "neighborhood": "Bairro de Testes", "street": "Rua de Testes", "number": "90", "complement": "apto 200", "postal_code": "21550987" } 
json=None</msg>
<msg timestamp="20210322 03:26:19.526" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:26:19.312" endtime="20210322 03:26:19.526"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:26:19.526" level="INFO">{'id': '719bfdae11af4e7289ce009e18b1aabe', 'street': 'Rua de Testes', 'number': '90', 'city': 'Rio de Janeiro', 'complement': 'apto 200', 'state': 'Rio de Janeiro', 'neighborhood': 'Bairro de Testes', 'postal_code': '21550987', 'country': 'Brasil', 'main': True, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/d6c7ec17a05944bd8d7909a24c8483cd/addresses/719bfdae11af4e7289ce009e18b1aabe', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/d6c7ec17a05944bd8d7909a24c8483cd', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 03:26:19.526" endtime="20210322 03:26:19.526"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:26:19.527" level="INFO">6cee60be693c1eb0</msg>
<status status="PASS" starttime="20210322 03:26:19.527" endtime="20210322 03:26:19.527"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:26:19.527" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:26:19.527" endtime="20210322 03:26:19.528"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${address_external_key}</var>
</assign>
<msg timestamp="20210322 03:26:19.528" level="INFO">${address_external_key} = 719bfdae11af4e7289ce009e18b1aabe</msg>
<status status="PASS" starttime="20210322 03:26:19.528" endtime="20210322 03:26:19.528"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${address_external_key}</arg>
</arguments>
<msg timestamp="20210322 03:26:19.529" level="INFO">${address_external_key} = 719bfdae11af4e7289ce009e18b1aabe</msg>
<status status="PASS" starttime="20210322 03:26:19.529" endtime="20210322 03:26:19.529"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:19.308" endtime="20210322 03:26:19.529"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 03:26:19.529" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:26:19.529" endtime="20210322 03:26:19.530"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>SELFIE</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:26:19.530" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 03:26:19.530" endtime="20210322 03:26:19.530"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 03:26:19.531" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 03:26:19.532" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 03:26:19.531" endtime="20210322 03:26:19.532"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:26:19.533" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/d6c7ec17a05944bd8d7909a24c8483cd/documents?type=SELFIE, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 03:26:19.821" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:26:19.532" endtime="20210322 03:26:19.821"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:26:19.823" level="INFO">{'id': '9d6728d8647744d196ed97160a141367', 'document_type': 'selfie', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/d6c7ec17a05944bd8d7909a24c8483cd/documents/9d6728d8647744d196ed97160a141367', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/d6c7ec17a05944bd8d7909a24c8483cd', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/d6c7ec17a05944bd8d7909a24c8483cd/documents/9d6728d8647744d196ed97160a141367/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 03:26:19.822" endtime="20210322 03:26:19.823"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:26:19.824" level="INFO">9d7c8ec38ab85a66</msg>
<status status="PASS" starttime="20210322 03:26:19.824" endtime="20210322 03:26:19.825"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:26:19.826" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:26:19.825" endtime="20210322 03:26:19.826"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 03:26:19.827" level="INFO">${document_external_key} = 9d6728d8647744d196ed97160a141367</msg>
<status status="PASS" starttime="20210322 03:26:19.826" endtime="20210322 03:26:19.828"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 03:26:19.828" level="INFO">${document_external_key} = 9d6728d8647744d196ed97160a141367</msg>
<status status="PASS" starttime="20210322 03:26:19.828" endtime="20210322 03:26:19.829"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:19.530" endtime="20210322 03:26:19.829"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 03:26:19.830" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:26:19.829" endtime="20210322 03:26:19.830"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>RG_FRENTE</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:26:19.832" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 03:26:19.831" endtime="20210322 03:26:19.832"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 03:26:19.833" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 03:26:19.835" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 03:26:19.832" endtime="20210322 03:26:19.835"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:26:19.836" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/d6c7ec17a05944bd8d7909a24c8483cd/documents?type=RG_FRENTE, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 03:26:20.126" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:26:19.835" endtime="20210322 03:26:20.126"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:26:20.127" level="INFO">{'id': '3d5e0466339a4131829c32e66ec30e30', 'document_type': 'rg_frente', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/d6c7ec17a05944bd8d7909a24c8483cd/documents/3d5e0466339a4131829c32e66ec30e30', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/d6c7ec17a05944bd8d7909a24c8483cd', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/d6c7ec17a05944bd8d7909a24c8483cd/documents/3d5e0466339a4131829c32e66ec30e30/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 03:26:20.127" endtime="20210322 03:26:20.127"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:26:20.128" level="INFO">eec611029b49d4ce</msg>
<status status="PASS" starttime="20210322 03:26:20.127" endtime="20210322 03:26:20.128"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:26:20.129" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:26:20.128" endtime="20210322 03:26:20.129"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 03:26:20.129" level="INFO">${document_external_key} = 3d5e0466339a4131829c32e66ec30e30</msg>
<status status="PASS" starttime="20210322 03:26:20.129" endtime="20210322 03:26:20.130"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 03:26:20.130" level="INFO">${document_external_key} = 3d5e0466339a4131829c32e66ec30e30</msg>
<status status="PASS" starttime="20210322 03:26:20.130" endtime="20210322 03:26:20.130"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:19.830" endtime="20210322 03:26:20.130"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 03:26:20.131" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:26:20.131" endtime="20210322 03:26:20.131"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>RG_VERSO</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:26:20.132" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 03:26:20.132" endtime="20210322 03:26:20.132"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 03:26:20.133" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 03:26:20.134" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 03:26:20.133" endtime="20210322 03:26:20.134"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:26:20.136" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/d6c7ec17a05944bd8d7909a24c8483cd/documents?type=RG_VERSO, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 03:26:20.395" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:26:20.135" endtime="20210322 03:26:20.396"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:26:20.398" level="INFO">{'id': '9e68c93e0efc4d4999a8d1c1a95778d1', 'document_type': 'rg_verso', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/d6c7ec17a05944bd8d7909a24c8483cd/documents/9e68c93e0efc4d4999a8d1c1a95778d1', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/d6c7ec17a05944bd8d7909a24c8483cd', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/d6c7ec17a05944bd8d7909a24c8483cd/documents/9e68c93e0efc4d4999a8d1c1a95778d1/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 03:26:20.397" endtime="20210322 03:26:20.398"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:26:20.398" level="INFO">7dc0733d2d1d0f33</msg>
<status status="PASS" starttime="20210322 03:26:20.398" endtime="20210322 03:26:20.399"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:26:20.400" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:26:20.399" endtime="20210322 03:26:20.401"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 03:26:20.401" level="INFO">${document_external_key} = 9e68c93e0efc4d4999a8d1c1a95778d1</msg>
<status status="PASS" starttime="20210322 03:26:20.401" endtime="20210322 03:26:20.402"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 03:26:20.403" level="INFO">${document_external_key} = 9e68c93e0efc4d4999a8d1c1a95778d1</msg>
<status status="PASS" starttime="20210322 03:26:20.402" endtime="20210322 03:26:20.403"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:20.131" endtime="20210322 03:26:20.403"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 03:26:20.406" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:26:20.403" endtime="20210322 03:26:20.406"></status>
</kw>
<kw name="solicitar aprovação do holder" library="accreditation_request_approval">
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:26:20.407" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 03:26:20.407" endtime="20210322 03:26:20.407"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/approval</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:26:20.408" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/d6c7ec17a05944bd8d7909a24c8483cd/approval, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data=None 
json=None</msg>
<msg timestamp="20210322 03:26:20.685" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:26:20.407" endtime="20210322 03:26:20.685"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:26:20.686" level="INFO">{'message': 'Approval request accepted successfully. Processing analysis'}</msg>
<status status="PASS" starttime="20210322 03:26:20.686" endtime="20210322 03:26:20.687"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:26:20.688" level="INFO">41dec98fce92388c</msg>
<status status="PASS" starttime="20210322 03:26:20.687" endtime="20210322 03:26:20.688"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:26:20.689" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:26:20.688" endtime="20210322 03:26:20.689"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:20.406" endtime="20210322 03:26:20.689"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 03:26:20.690" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:26:20.690" endtime="20210322 03:26:20.691"></status>
</kw>
<kw name="recebendo notificação de aprovação" library="accreditation_risk_notification">
<kw name="Uuid 4" library="FakerLibrary">
<doc>Generates a random UUID4 string.
:param cast_to: Specify what type the UUID should be cast to. Default is `str`
:type cast_to: callable</doc>
<assign>
<var>${assessment_id}</var>
</assign>
<msg timestamp="20210322 03:26:20.692" level="INFO">${assessment_id} = 3eaf132e-ffeb-4641-94df-f6c6deed1f48</msg>
<status status="PASS" starttime="20210322 03:26:20.692" endtime="20210322 03:26:20.692"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>year</arg>
</arguments>
<assign>
<var>${year}</var>
</assign>
<msg timestamp="20210322 03:26:20.693" level="INFO">${year} = 2021</msg>
<status status="PASS" starttime="20210322 03:26:20.692" endtime="20210322 03:26:20.693"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>month</arg>
</arguments>
<assign>
<var>${month}</var>
</assign>
<msg timestamp="20210322 03:26:20.693" level="INFO">${month} = 03</msg>
<status status="PASS" starttime="20210322 03:26:20.693" endtime="20210322 03:26:20.693"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>day</arg>
</arguments>
<assign>
<var>${day}</var>
</assign>
<msg timestamp="20210322 03:26:20.694" level="INFO">${day} = 22</msg>
<status status="PASS" starttime="20210322 03:26:20.693" endtime="20210322 03:26:20.694"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:26:20.695" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 03:26:20.694" endtime="20210322 03:26:20.695"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "risk.assessment.result",</arg>
<arg>"resource": "business.holder",</arg>
<arg>"created_at": "${year}-${month}-${day} 15:28:56.747Z",</arg>
<arg>"marketplace_id": "${marketplace_external_key}",</arg>
<arg>"object": {</arg>
<arg>"result": "APPROVED",</arg>
<arg>"holder_id": "${holder_external_key}",</arg>
<arg>"applicant_id": "${application_external_key}",</arg>
<arg>"assessment_id": "${assessment_id}"</arg>
<arg>}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 03:26:20.696" level="INFO">${body} = { "type": "risk.assessment.result", "resource": "business.holder", "created_at": "2021-03-22 15:28:56.747Z", "marketplace_id": "f71a8951368a4cc085cf7875ff44e61c", "object": { "result": "APPROVED", "ho...</msg>
<status status="PASS" starttime="20210322 03:26:20.695" endtime="20210322 03:26:20.696"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/admin/internal_operation/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/registration/approval</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:26:20.696" level="INFO">POST Request using : uri=/admin/internal_operation/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/d6c7ec17a05944bd8d7909a24c8483cd/registration/approval, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "risk.assessment.result", "resource": "business.holder", "created_at": "2021-03-22 15:28:56.747Z", "marketplace_id": "f71a8951368a4cc085cf7875ff44e61c", "object": { "result": "APPROVED", "holder_id": "d6c7ec17a05944bd8d7909a24c8483cd", "applicant_id": "bcc25a6751c14b52af1340d40dba78c5", "assessment_id": "3eaf132e-ffeb-4641-94df-f6c6deed1f48" } } 
json=None</msg>
<msg timestamp="20210322 03:26:20.891" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:26:20.696" endtime="20210322 03:26:20.891"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:26:20.893" level="INFO">{'message': 'Holder approved successfully'}</msg>
<status status="PASS" starttime="20210322 03:26:20.891" endtime="20210322 03:26:20.893"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:26:20.893" level="INFO">d25df7ddc40745a4</msg>
<status status="PASS" starttime="20210322 03:26:20.893" endtime="20210322 03:26:20.893"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:26:20.893" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:26:20.893" endtime="20210322 03:26:20.893"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 03:26:20.894" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:26:20.894" endtime="20210322 03:26:20.894"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:20.691" endtime="20210322 03:26:20.894"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 03:26:20.895" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:26:20.894" endtime="20210322 03:26:20.895"></status>
</kw>
<kw name="buscar account por holder" library="accounts_get_accounts_by_holder">
<kw name="conectar accounts" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accounts</arg>
<arg>url=${account_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 03:26:20.895" level="INFO">Creating Session using : alias=accounts, url=https://banking-accounts-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 03:26:20.895" endtime="20210322 03:26:20.896"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:20.895" endtime="20210322 03:26:20.896"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accounts</arg>
<arg>/marketplaces/${marketplace_external_key}/holders/${holder_external_key}/accounts</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:26:20.896" level="INFO">GET Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/holders/d6c7ec17a05944bd8d7909a24c8483cd/accounts, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 03:26:21.501" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:26:20.896" endtime="20210322 03:26:21.501"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:26:21.502" level="INFO">{'items': [{'id': 'e45499d63bec4ca8a47aec1099a4d85b', 'holder': 'd6c7ec17a05944bd8d7909a24c8483cd', 'balance': '0.00', 'currency': 'BRL', 'routing_number': '001', 'number': '6798994263', 'status': 'active', 'metadata': {}, 'created_at': '2021-03-22T06:26:21.742927', 'updated_at': '2021-03-22T06:26:21.742927', 'primary': True, 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'uri': '/v2/marketplaces/f71a8951368a4cc085cf7875ff44e61c/accounts/e45499d63bec4ca8a47aec1099a4d85b', 'resource': 'payment_account'}], 'has_more': False, 'limit': 100, 'total_pages': 1, 'page': 1, 'offset': 0, 'total': '1', 'query_count': '1'}</msg>
<status status="PASS" starttime="20210322 03:26:21.501" endtime="20210322 03:26:21.502"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:26:21.502" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:26:21.502" endtime="20210322 03:26:21.502"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["id"]}</arg>
</arguments>
<assign>
<var>${account_external_key}</var>
</assign>
<msg timestamp="20210322 03:26:21.502" level="INFO">${account_external_key} = e45499d63bec4ca8a47aec1099a4d85b</msg>
<status status="PASS" starttime="20210322 03:26:21.502" endtime="20210322 03:26:21.502"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_external_key}</arg>
</arguments>
<msg timestamp="20210322 03:26:21.503" level="INFO">${account_external_key} = e45499d63bec4ca8a47aec1099a4d85b</msg>
<status status="PASS" starttime="20210322 03:26:21.503" endtime="20210322 03:26:21.503"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["number"]}</arg>
</arguments>
<assign>
<var>${account_number}</var>
</assign>
<msg timestamp="20210322 03:26:21.503" level="INFO">${account_number} = 6798994263</msg>
<status status="PASS" starttime="20210322 03:26:21.503" endtime="20210322 03:26:21.503"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_number}</arg>
</arguments>
<msg timestamp="20210322 03:26:21.504" level="INFO">${account_number} = 6798994263</msg>
<status status="PASS" starttime="20210322 03:26:21.504" endtime="20210322 03:26:21.504"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["routing_number"]}</arg>
</arguments>
<assign>
<var>${account_routing_number}</var>
</assign>
<msg timestamp="20210322 03:26:21.504" level="INFO">${account_routing_number} = 001</msg>
<status status="PASS" starttime="20210322 03:26:21.504" endtime="20210322 03:26:21.504"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_routing_number}</arg>
</arguments>
<msg timestamp="20210322 03:26:21.505" level="INFO">${account_routing_number} = 001</msg>
<status status="PASS" starttime="20210322 03:26:21.504" endtime="20210322 03:26:21.505"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:20.895" endtime="20210322 03:26:21.505"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 03:26:21.505" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:26:21.505" endtime="20210322 03:26:21.505"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:18.358" endtime="20210322 03:26:21.505"></status>
</kw>
<kw name="criar chave pix" library="pix_dict_create_entry">
<arguments>
<arg>type=phone</arg>
<arg>value=${phone_pix}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 03:26:21.506" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 03:26:21.506" endtime="20210322 03:26:21.507"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:21.506" endtime="20210322 03:26:21.507"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${type}</arg>
</arguments>
<msg timestamp="20210322 03:26:21.507" level="INFO">${type} = phone</msg>
<status status="PASS" starttime="20210322 03:26:21.507" endtime="20210322 03:26:21.507"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210322 03:26:21.508" level="INFO">${value} = +5521984708940</msg>
<status status="PASS" starttime="20210322 03:26:21.507" endtime="20210322 03:26:21.508"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:26:21.508" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 03:26:21.508" endtime="20210322 03:26:21.508"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "${type}",</arg>
<arg>"value": "${value}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 03:26:21.508" level="INFO">${body} = { "type": "phone", "value": "+5521984708940" }</msg>
<status status="PASS" starttime="20210322 03:26:21.508" endtime="20210322 03:26:21.509"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:26:21.509" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/d6c7ec17a05944bd8d7909a24c8483cd/accounts/e45499d63bec4ca8a47aec1099a4d85b/entries, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "phone", "value": "+5521984708940" } 
json=None</msg>
<msg timestamp="20210322 03:26:22.147" level="INFO">${response} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20210322 03:26:21.509" endtime="20210322 03:26:22.147"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:26:22.149" level="INFO">{'id': '3b6d5adfaa7f4372b994d3bb1dc86015', 'status': 'waiting_ownership_verification', 'created_at': '2021-03-22T03:26:23.012', 'updated_at': '2021-03-22T03:26:23.012', 'key': {'value': '+5521984708940', 'type': 'phone'}, 'account': {'id': 'e45499d63bec4ca8a47aec1099a4d85b', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': 'd6c7ec17a05944bd8d7909a24c8483cd', 'owner': {'name': 'Holder de teste', 'national_registration': '30267594810', 'type': 'individual'}, 'routing_number': '001', 'number': '6798994263', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}, 'resource': 'pix.entry'}</msg>
<status status="PASS" starttime="20210322 03:26:22.148" endtime="20210322 03:26:22.149"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:26:22.150" level="INFO">a18d97a91e180975</msg>
<status status="PASS" starttime="20210322 03:26:22.150" endtime="20210322 03:26:22.150"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 03:26:22.152" level="INFO">202</msg>
<status status="PASS" starttime="20210322 03:26:22.151" endtime="20210322 03:26:22.152"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:26:22.154" level="INFO">${response} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20210322 03:26:22.153" endtime="20210322 03:26:22.154"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${entry_external_key}</var>
</assign>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:26:22.156" endtime="20210322 03:26:22.157"></status>
</kw>
<msg timestamp="20210322 03:26:22.157" level="INFO">${entry_external_key} = 3b6d5adfaa7f4372b994d3bb1dc86015</msg>
<status status="PASS" starttime="20210322 03:26:22.154" endtime="20210322 03:26:22.157"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${entry_external_key}</arg>
</arguments>
<msg timestamp="20210322 03:26:22.159" level="INFO">${entry_external_key} = 3b6d5adfaa7f4372b994d3bb1dc86015</msg>
<status status="PASS" starttime="20210322 03:26:22.158" endtime="20210322 03:26:22.159"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["key"]["value"]}</arg>
</arguments>
<assign>
<var>${entry_key_value}</var>
</assign>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["key"]["value"]}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:26:22.162" endtime="20210322 03:26:22.163"></status>
</kw>
<msg timestamp="20210322 03:26:22.163" level="INFO">${entry_key_value} = +5521984708940</msg>
<status status="PASS" starttime="20210322 03:26:22.160" endtime="20210322 03:26:22.163"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${entry_key_value}</arg>
</arguments>
<msg timestamp="20210322 03:26:22.164" level="INFO">${entry_key_value} = +5521984708940</msg>
<status status="PASS" starttime="20210322 03:26:22.164" endtime="20210322 03:26:22.164"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:21.505" endtime="20210322 03:26:22.164"></status>
</kw>
<kw name="validar criação da chave pix" library="asserts">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando status_code</arg>
</arguments>
<msg timestamp="20210322 03:26:22.166" level="INFO">Validando status_code</msg>
<status status="PASS" starttime="20210322 03:26:22.165" endtime="20210322 03:26:22.166"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${type}' == 'evp'</arg>
<arg>Should Be Equal As Integers</arg>
<arg>${response.status_code}</arg>
<arg>201</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'phone'</arg>
<arg>Should Be Equal As Integers</arg>
<arg>${response.status_code}</arg>
<arg>202</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'email'</arg>
<arg>Should Be Equal As Integers</arg>
<arg>${response.status_code}</arg>
<arg>202</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'national_registration'</arg>
<arg>Should Be Equal As Integers</arg>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>202</arg>
</arguments>
<msg timestamp="20210322 03:26:22.168" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:26:22.168" endtime="20210322 03:26:22.168"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:22.166" endtime="20210322 03:26:22.169"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar status da chave</arg>
</arguments>
<msg timestamp="20210322 03:26:22.169" level="INFO">Validar status da chave</msg>
<status status="PASS" starttime="20210322 03:26:22.169" endtime="20210322 03:26:22.170"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${type}' == 'evp'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["status"]}</arg>
<arg>active</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'phone'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["status"]}</arg>
<arg>waiting_ownership_verification</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'email'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["status"]}</arg>
<arg>waiting_ownership_verification</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'national_registration'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["status"]}</arg>
<arg>active</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["status"]}</arg>
<arg>waiting_ownership_verification</arg>
</arguments>
<status status="PASS" starttime="20210322 03:26:22.171" endtime="20210322 03:26:22.172"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:22.170" endtime="20210322 03:26:22.172"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando Tipo da chave PIX</arg>
</arguments>
<msg timestamp="20210322 03:26:22.172" level="INFO">Validando Tipo da chave PIX</msg>
<status status="PASS" starttime="20210322 03:26:22.172" endtime="20210322 03:26:22.172"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${type}' == 'evp'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["type"]}</arg>
<arg>${type}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'phone'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["type"]}</arg>
<arg>${type}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'email'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["type"]}</arg>
<arg>${type}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'national_registration'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["type"]}</arg>
<arg>${type}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["key"]["type"]}</arg>
<arg>${type}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:26:22.173" endtime="20210322 03:26:22.174"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:22.173" endtime="20210322 03:26:22.174"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando Valor da chave PIX</arg>
</arguments>
<msg timestamp="20210322 03:26:22.174" level="INFO">Validando Valor da chave PIX</msg>
<status status="PASS" starttime="20210322 03:26:22.174" endtime="20210322 03:26:22.175"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${type}' == 'evp'</arg>
<arg>Should Not Be Empty</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'phone'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${phone_pix}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'email'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${email_pix}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'national_registration'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${national_registration}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${phone_pix}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:26:22.176" endtime="20210322 03:26:22.176"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:22.175" endtime="20210322 03:26:22.176"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando dados da conta</arg>
</arguments>
<msg timestamp="20210322 03:26:22.177" level="INFO">Validando dados da conta</msg>
<status status="PASS" starttime="20210322 03:26:22.177" endtime="20210322 03:26:22.177"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["id"]}</arg>
<arg>${account_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:26:22.177" endtime="20210322 03:26:22.178"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["marketplace"]}</arg>
<arg>${marketplace_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:26:22.178" endtime="20210322 03:26:22.178"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["holder"]}</arg>
<arg>${holder_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:26:22.179" endtime="20210322 03:26:22.179"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["number"]}</arg>
<arg>${account_number}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:26:22.179" endtime="20210322 03:26:22.179"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["routing_number"]}</arg>
<arg>${account_routing_number}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:26:22.180" endtime="20210322 03:26:22.180"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["type"]}</arg>
<arg>CACC</arg>
</arguments>
<status status="PASS" starttime="20210322 03:26:22.180" endtime="20210322 03:26:22.181"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar Proprietário da Account Owner</arg>
</arguments>
<msg timestamp="20210322 03:26:22.181" level="INFO">Validar Proprietário da Account Owner</msg>
<status status="PASS" starttime="20210322 03:26:22.181" endtime="20210322 03:26:22.181"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${holder_type}' == 'individual'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["account"]["owner"]["name"]}</arg>
<arg>${holder_name}</arg>
<arg>ELSE IF</arg>
<arg>'${holder_type}' == 'business'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["account"]["owner"]["name"]}</arg>
<arg>${legal_name}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["account"]["owner"]["name"]}</arg>
<arg>${holder_name}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:26:22.182" endtime="20210322 03:26:22.182"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:22.181" endtime="20210322 03:26:22.182"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar national_registration da Account Owner</arg>
</arguments>
<msg timestamp="20210322 03:26:22.183" level="INFO">Validar national_registration da Account Owner</msg>
<status status="PASS" starttime="20210322 03:26:22.183" endtime="20210322 03:26:22.183"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${holder_type}' == 'individual'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["account"]["owner"]["national_registration"]}</arg>
<arg>${national_registration}</arg>
<arg>ELSE IF</arg>
<arg>'${holder_type}' == 'business'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["account"]["owner"]["national_registration"]}</arg>
<arg>${national_registration}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["account"]["owner"]["national_registration"]}</arg>
<arg>${national_registration}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:26:22.183" endtime="20210322 03:26:22.184"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:22.183" endtime="20210322 03:26:22.184"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar Holder Type do Account Owner</arg>
</arguments>
<msg timestamp="20210322 03:26:22.184" level="INFO">Validar Holder Type do Account Owner</msg>
<status status="PASS" starttime="20210322 03:26:22.184" endtime="20210322 03:26:22.184"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${holder_type}' == 'individual'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["account"]["owner"]["type"]}</arg>
<arg>${holder_type}</arg>
<arg>ELSE IF</arg>
<arg>'${holder_type}' == 'business'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["account"]["owner"]["type"]}</arg>
<arg>${holder_type}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["account"]["owner"]["type"]}</arg>
<arg>${holder_type}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:26:22.185" endtime="20210322 03:26:22.185"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:22.184" endtime="20210322 03:26:22.185"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar PSP</arg>
</arguments>
<msg timestamp="20210322 03:26:22.186" level="INFO">Validar PSP</msg>
<status status="PASS" starttime="20210322 03:26:22.185" endtime="20210322 03:26:22.186"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["psp"]["code"]}</arg>
<arg>19468242</arg>
</arguments>
<status status="PASS" starttime="20210322 03:26:22.186" endtime="20210322 03:26:22.187"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["psp"]["name"]}</arg>
<arg>Zoop Tecnologia e Meios de Pagamento S.A.</arg>
</arguments>
<status status="PASS" starttime="20210322 03:26:22.187" endtime="20210322 03:26:22.187"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:22.165" endtime="20210322 03:26:22.187"></status>
</kw>
<doc>Fluxo Básico</doc>
<tags>
<tag>regression_test</tag>
<tag>smoke_test</tag>
</tags>
<status status="PASS" starttime="20210322 03:26:18.353" endtime="20210322 03:26:22.187" critical="yes"></status>
</test>
<test id="s1-s1-s3-t3" name="Cenário: Criando Chave de Endereçamento do tipo Email">
<kw name="Email" library="FakerLibrary">
<assign>
<var>${email_pix}</var>
</assign>
<msg timestamp="20210322 03:26:22.188" level="INFO">${email_pix} = erick21@gmail.com</msg>
<status status="PASS" starttime="20210322 03:26:22.188" endtime="20210322 03:26:22.188"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${email_pix}</arg>
</arguments>
<msg timestamp="20210322 03:26:22.189" level="INFO">${email_pix} = erick21@gmail.com</msg>
<status status="PASS" starttime="20210322 03:26:22.188" endtime="20210322 03:26:22.189"></status>
</kw>
<kw name="criar holder individual ativo" library="accreditation_create_holder_active">
<kw name="conectar accreditation" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accreditation</arg>
<arg>url=${accreditation_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 03:26:22.190" level="INFO">Creating Session using : alias=accreditation, url=https://banking-accreditation-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 03:26:22.190" endtime="20210322 03:26:22.190"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:22.189" endtime="20210322 03:26:22.190"></status>
</kw>
<kw name="Cpf" library="FakerLibrary">
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 03:26:22.190" level="INFO">${national_registration} = 578.021.394-14</msg>
<status status="PASS" starttime="20210322 03:26:22.190" endtime="20210322 03:26:22.190"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${national_registration}</arg>
<arg>.</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 03:26:22.191" level="INFO">${national_registration} = 578021394-14</msg>
<status status="PASS" starttime="20210322 03:26:22.191" endtime="20210322 03:26:22.191"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${national_registration}</arg>
<arg>-</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 03:26:22.191" level="INFO">${national_registration} = 57802139414</msg>
<status status="PASS" starttime="20210322 03:26:22.191" endtime="20210322 03:26:22.191"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${national_registration}</arg>
</arguments>
<msg timestamp="20210322 03:26:22.192" level="INFO">${national_registration} = 57802139414</msg>
<status status="PASS" starttime="20210322 03:26:22.191" endtime="20210322 03:26:22.192"></status>
</kw>
<kw name="Rg" library="FakerLibrary">
<doc>Brazilian RG, return plain numbers.
Check:  https://www.ngmatematica.com/2014/02/como-determinar-o-digito-verificador-do.html</doc>
<assign>
<var>${identity_card}</var>
</assign>
<msg timestamp="20210322 03:26:22.192" level="INFO">${identity_card} = 473051862</msg>
<status status="PASS" starttime="20210322 03:26:22.192" endtime="20210322 03:26:22.192"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${identity_card}</arg>
</arguments>
<msg timestamp="20210322 03:26:22.193" level="INFO">${identity_card} = 473051862</msg>
<status status="PASS" starttime="20210322 03:26:22.192" endtime="20210322 03:26:22.193"></status>
</kw>
<kw name="criar holder individual" library="accreditation_post_holder_individual">
<arguments>
<arg>holder_type=individual</arg>
<arg>holder_name=${holder_name}</arg>
<arg>email=${email}</arg>
<arg>national_registration=${national_registration}</arg>
<arg>revenue=${revenue}</arg>
<arg>birthday=${birthday}</arg>
<arg>mothers_name=${mothers_name}</arg>
<arg>identity_card=${identity_card}</arg>
<arg>pep=false</arg>
<arg>cbo=${cbo}</arg>
</arguments>
<kw name="conectar accreditation" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accreditation</arg>
<arg>url=${accreditation_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 03:26:22.194" level="INFO">Creating Session using : alias=accreditation, url=https://banking-accreditation-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 03:26:22.194" endtime="20210322 03:26:22.195"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:22.194" endtime="20210322 03:26:22.195"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_type}</arg>
</arguments>
<msg timestamp="20210322 03:26:22.195" level="INFO">${holder_type} = individual</msg>
<status status="PASS" starttime="20210322 03:26:22.195" endtime="20210322 03:26:22.196"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_name}</arg>
</arguments>
<msg timestamp="20210322 03:26:22.196" level="INFO">${holder_name} = Holder de teste</msg>
<status status="PASS" starttime="20210322 03:26:22.196" endtime="20210322 03:26:22.196"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:26:22.197" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 03:26:22.196" endtime="20210322 03:26:22.197"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "${holder_type}",</arg>
<arg>"name": "${holder_name}",</arg>
<arg>"email": "${email}",</arg>
<arg>"national_registration": "${national_registration}",</arg>
<arg>"revenue": ${revenue},</arg>
<arg>"birthday": "${birthday}",</arg>
<arg>"mothers_name": "${mothers_name}",</arg>
<arg>"identity_card": "${identity_card}",</arg>
<arg>"pep": false,</arg>
<arg>"cbo": ${cbo}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 03:26:22.198" level="INFO">${body} = { "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "57802139414", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder",...</msg>
<status status="PASS" starttime="20210322 03:26:22.197" endtime="20210322 03:26:22.198"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:26:22.198" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "57802139414", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder", "identity_card": "473051862", "pep": false, "cbo": 821450 } 
json=None</msg>
<msg timestamp="20210322 03:26:22.902" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:26:22.198" endtime="20210322 03:26:22.902"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:26:22.904" level="INFO">{'id': '3d128bc4fd9843b3aa51aea81ee13c79', 'name': 'Holder de teste', 'revenue': 5500.0, 'email': 'teste@teste.com.br', 'status': 'waiting_info_and_documents', 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'marketplace_name': 'Marketplace de Teste', 'created_at': '2021-03-22T03:26:23.747734', 'updated_at': '2021-03-22T03:26:23.747737', 'type': 'individual', 'national_registration': '57802139414', 'birthday': '1988-04-23', 'mothers_name': 'Mãe do Holder', 'identity_card': '473051862', 'pep': False, 'cbo': '821450', '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/3d128bc4fd9843b3aa51aea81ee13c79', 'type': 'GET'}, 'phones': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/3d128bc4fd9843b3aa51aea81ee13c79/phones', 'type': 'GET'}, 'addresses': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/3d128bc4fd9843b3aa51aea81ee13c79/addresses', 'type': 'GET'}, 'documents': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/3d128bc4fd9843b3aa51aea81ee13c79/documents', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 03:26:22.903" endtime="20210322 03:26:22.904"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:26:22.904" level="INFO">2829d544be589a8c</msg>
<status status="PASS" starttime="20210322 03:26:22.904" endtime="20210322 03:26:22.905"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${body}</arg>
</arguments>
<msg timestamp="20210322 03:26:22.906" level="INFO">{ "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "57802139414", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder", "identity_card": "473051862", "pep": false, "cbo": 821450 }</msg>
<status status="PASS" starttime="20210322 03:26:22.906" endtime="20210322 03:26:22.906"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:26:22.906" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:26:22.906" endtime="20210322 03:26:22.906"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${holder_external_key}</var>
</assign>
<msg timestamp="20210322 03:26:22.907" level="INFO">${holder_external_key} = 3d128bc4fd9843b3aa51aea81ee13c79</msg>
<status status="PASS" starttime="20210322 03:26:22.907" endtime="20210322 03:26:22.907"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_external_key}</arg>
</arguments>
<msg timestamp="20210322 03:26:22.908" level="INFO">${holder_external_key} = 3d128bc4fd9843b3aa51aea81ee13c79</msg>
<status status="PASS" starttime="20210322 03:26:22.908" endtime="20210322 03:26:22.908"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:22.193" endtime="20210322 03:26:22.909"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_name}</arg>
</arguments>
<msg timestamp="20210322 03:26:22.909" level="INFO">${holder_name} = Holder de teste</msg>
<status status="PASS" starttime="20210322 03:26:22.909" endtime="20210322 03:26:22.910"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 03:26:22.910" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:26:22.910" endtime="20210322 03:26:22.910"></status>
</kw>
<kw name="criar holder phone" library="accreditation_post_holder_phone">
<arguments>
<arg>21</arg>
<arg>51</arg>
<arg>996221236</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:26:22.912" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 03:26:22.912" endtime="20210322 03:26:22.912"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"area_code": "${phone_area_code}",</arg>
<arg>"country_code": "${phone_country_code}",</arg>
<arg>"number": "${phone_number}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 03:26:22.912" level="INFO">${body} = { "area_code": "21", "country_code": "51", "number": "996221236" }</msg>
<status status="PASS" starttime="20210322 03:26:22.912" endtime="20210322 03:26:22.912"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/phones</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:26:22.913" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/3d128bc4fd9843b3aa51aea81ee13c79/phones, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "area_code": "21", "country_code": "51", "number": "996221236" } 
json=None</msg>
<msg timestamp="20210322 03:26:23.140" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:26:22.913" endtime="20210322 03:26:23.140"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:26:23.142" level="INFO">{'id': 'f98a3882a74947bc9b3809624827d2ad', 'area_code': '21', 'country_code': '51', 'number': '996221236', 'main': True, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/3d128bc4fd9843b3aa51aea81ee13c79/phones/f98a3882a74947bc9b3809624827d2ad', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/3d128bc4fd9843b3aa51aea81ee13c79', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 03:26:23.141" endtime="20210322 03:26:23.143"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:26:23.144" level="INFO">05dbc8cf2f0e0e11</msg>
<status status="PASS" starttime="20210322 03:26:23.144" endtime="20210322 03:26:23.145"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:26:23.145" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:26:23.145" endtime="20210322 03:26:23.146"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${phone_external_key}</var>
</assign>
<msg timestamp="20210322 03:26:23.147" level="INFO">${phone_external_key} = f98a3882a74947bc9b3809624827d2ad</msg>
<status status="PASS" starttime="20210322 03:26:23.146" endtime="20210322 03:26:23.147"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${phone_external_key}</arg>
</arguments>
<msg timestamp="20210322 03:26:23.148" level="INFO">${phone_external_key} = f98a3882a74947bc9b3809624827d2ad</msg>
<status status="PASS" starttime="20210322 03:26:23.147" endtime="20210322 03:26:23.148"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:22.912" endtime="20210322 03:26:23.148"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 03:26:23.149" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:26:23.149" endtime="20210322 03:26:23.149"></status>
</kw>
<kw name="criar holder address" library="accreditation_post_holder_address">
<arguments>
<arg>Rio de Janeiro</arg>
<arg>Rio de Janeiro</arg>
<arg>Brasil</arg>
<arg>Bairro de Testes</arg>
<arg>Rua de Testes</arg>
<arg>90</arg>
<arg>apto 200</arg>
<arg>21550987</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:26:23.152" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 03:26:23.151" endtime="20210322 03:26:23.153"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"city": "${city}",</arg>
<arg>"state": "${state}",</arg>
<arg>"country": "${country}",</arg>
<arg>"neighborhood": "${neighborhood}",</arg>
<arg>"street": "${street}",</arg>
<arg>"number": "${number}",</arg>
<arg>"complement": "${complement}",</arg>
<arg>"postal_code": "${postal_code}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 03:26:23.155" level="INFO">${body} = { "city": "Rio de Janeiro", "state": "Rio de Janeiro", "country": "Brasil", "neighborhood": "Bairro de Testes", "street": "Rua de Testes", "number": "90", "complement": "apto 200", "postal_code": "215...</msg>
<status status="PASS" starttime="20210322 03:26:23.154" endtime="20210322 03:26:23.155"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/addresses</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:26:23.156" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/3d128bc4fd9843b3aa51aea81ee13c79/addresses, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "city": "Rio de Janeiro", "state": "Rio de Janeiro", "country": "Brasil", "neighborhood": "Bairro de Testes", "street": "Rua de Testes", "number": "90", "complement": "apto 200", "postal_code": "21550987" } 
json=None</msg>
<msg timestamp="20210322 03:26:23.386" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:26:23.156" endtime="20210322 03:26:23.386"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:26:23.388" level="INFO">{'id': 'cbb60140ee6843c99b5a7416f8e7b3aa', 'street': 'Rua de Testes', 'number': '90', 'city': 'Rio de Janeiro', 'complement': 'apto 200', 'state': 'Rio de Janeiro', 'neighborhood': 'Bairro de Testes', 'postal_code': '21550987', 'country': 'Brasil', 'main': True, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/3d128bc4fd9843b3aa51aea81ee13c79/addresses/cbb60140ee6843c99b5a7416f8e7b3aa', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/3d128bc4fd9843b3aa51aea81ee13c79', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 03:26:23.387" endtime="20210322 03:26:23.389"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:26:23.390" level="INFO">b4b66ba0cc7ff3f5</msg>
<status status="PASS" starttime="20210322 03:26:23.389" endtime="20210322 03:26:23.391"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:26:23.393" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:26:23.391" endtime="20210322 03:26:23.393"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${address_external_key}</var>
</assign>
<msg timestamp="20210322 03:26:23.395" level="INFO">${address_external_key} = cbb60140ee6843c99b5a7416f8e7b3aa</msg>
<status status="PASS" starttime="20210322 03:26:23.394" endtime="20210322 03:26:23.396"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${address_external_key}</arg>
</arguments>
<msg timestamp="20210322 03:26:23.397" level="INFO">${address_external_key} = cbb60140ee6843c99b5a7416f8e7b3aa</msg>
<status status="PASS" starttime="20210322 03:26:23.396" endtime="20210322 03:26:23.398"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:23.150" endtime="20210322 03:26:23.398"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 03:26:23.400" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:26:23.399" endtime="20210322 03:26:23.400"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>SELFIE</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:26:23.403" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 03:26:23.403" endtime="20210322 03:26:23.403"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 03:26:23.404" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 03:26:23.407" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 03:26:23.404" endtime="20210322 03:26:23.407"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:26:23.409" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/3d128bc4fd9843b3aa51aea81ee13c79/documents?type=SELFIE, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 03:26:23.685" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:26:23.408" endtime="20210322 03:26:23.685"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:26:23.687" level="INFO">{'id': '174e22eb75df4a708550cf40da675a5a', 'document_type': 'selfie', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/3d128bc4fd9843b3aa51aea81ee13c79/documents/174e22eb75df4a708550cf40da675a5a', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/3d128bc4fd9843b3aa51aea81ee13c79', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/3d128bc4fd9843b3aa51aea81ee13c79/documents/174e22eb75df4a708550cf40da675a5a/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 03:26:23.686" endtime="20210322 03:26:23.687"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:26:23.689" level="INFO">a01355c52dfe9d31</msg>
<status status="PASS" starttime="20210322 03:26:23.688" endtime="20210322 03:26:23.689"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:26:23.692" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:26:23.690" endtime="20210322 03:26:23.692"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 03:26:23.693" level="INFO">${document_external_key} = 174e22eb75df4a708550cf40da675a5a</msg>
<status status="PASS" starttime="20210322 03:26:23.692" endtime="20210322 03:26:23.693"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 03:26:23.695" level="INFO">${document_external_key} = 174e22eb75df4a708550cf40da675a5a</msg>
<status status="PASS" starttime="20210322 03:26:23.694" endtime="20210322 03:26:23.695"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:23.401" endtime="20210322 03:26:23.695"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 03:26:23.696" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:26:23.696" endtime="20210322 03:26:23.697"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>RG_FRENTE</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:26:23.699" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 03:26:23.698" endtime="20210322 03:26:23.699"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 03:26:23.701" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 03:26:23.702" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 03:26:23.700" endtime="20210322 03:26:23.703"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:26:23.704" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/3d128bc4fd9843b3aa51aea81ee13c79/documents?type=RG_FRENTE, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 03:26:23.976" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:26:23.703" endtime="20210322 03:26:23.976"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:26:23.977" level="INFO">{'id': '0d2e7095d1f44823bef286ad40d26453', 'document_type': 'rg_frente', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/3d128bc4fd9843b3aa51aea81ee13c79/documents/0d2e7095d1f44823bef286ad40d26453', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/3d128bc4fd9843b3aa51aea81ee13c79', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/3d128bc4fd9843b3aa51aea81ee13c79/documents/0d2e7095d1f44823bef286ad40d26453/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 03:26:23.977" endtime="20210322 03:26:23.979"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:26:23.979" level="INFO">a5b2efd4fbe46a0c</msg>
<status status="PASS" starttime="20210322 03:26:23.979" endtime="20210322 03:26:23.979"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:26:23.981" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:26:23.979" endtime="20210322 03:26:23.981"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 03:26:23.981" level="INFO">${document_external_key} = 0d2e7095d1f44823bef286ad40d26453</msg>
<status status="PASS" starttime="20210322 03:26:23.981" endtime="20210322 03:26:23.981"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 03:26:23.982" level="INFO">${document_external_key} = 0d2e7095d1f44823bef286ad40d26453</msg>
<status status="PASS" starttime="20210322 03:26:23.982" endtime="20210322 03:26:23.982"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:23.697" endtime="20210322 03:26:23.982"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 03:26:23.984" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:26:23.983" endtime="20210322 03:26:23.984"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>RG_VERSO</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:26:23.986" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 03:26:23.985" endtime="20210322 03:26:23.986"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 03:26:23.987" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 03:26:23.989" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 03:26:23.986" endtime="20210322 03:26:23.989"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:26:23.991" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/3d128bc4fd9843b3aa51aea81ee13c79/documents?type=RG_VERSO, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 03:26:24.394" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:26:23.989" endtime="20210322 03:26:24.394"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:26:24.395" level="INFO">{'id': 'e0b17544a7ec4d7580466d64ff4997ed', 'document_type': 'rg_verso', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/3d128bc4fd9843b3aa51aea81ee13c79/documents/e0b17544a7ec4d7580466d64ff4997ed', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/3d128bc4fd9843b3aa51aea81ee13c79', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/3d128bc4fd9843b3aa51aea81ee13c79/documents/e0b17544a7ec4d7580466d64ff4997ed/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 03:26:24.394" endtime="20210322 03:26:24.395"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:26:24.395" level="INFO">b3f5a270c12c19a3</msg>
<status status="PASS" starttime="20210322 03:26:24.395" endtime="20210322 03:26:24.395"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:26:24.396" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:26:24.396" endtime="20210322 03:26:24.396"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 03:26:24.397" level="INFO">${document_external_key} = e0b17544a7ec4d7580466d64ff4997ed</msg>
<status status="PASS" starttime="20210322 03:26:24.396" endtime="20210322 03:26:24.397"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 03:26:24.397" level="INFO">${document_external_key} = e0b17544a7ec4d7580466d64ff4997ed</msg>
<status status="PASS" starttime="20210322 03:26:24.397" endtime="20210322 03:26:24.397"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:23.984" endtime="20210322 03:26:24.397"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 03:26:24.398" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:26:24.398" endtime="20210322 03:26:24.398"></status>
</kw>
<kw name="solicitar aprovação do holder" library="accreditation_request_approval">
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:26:24.399" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 03:26:24.399" endtime="20210322 03:26:24.399"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/approval</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:26:24.399" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/3d128bc4fd9843b3aa51aea81ee13c79/approval, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data=None 
json=None</msg>
<msg timestamp="20210322 03:26:24.666" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:26:24.399" endtime="20210322 03:26:24.666"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:26:24.667" level="INFO">{'message': 'Approval request accepted successfully. Processing analysis'}</msg>
<status status="PASS" starttime="20210322 03:26:24.666" endtime="20210322 03:26:24.667"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:26:24.667" level="INFO">1bf0cb49234730bc</msg>
<status status="PASS" starttime="20210322 03:26:24.667" endtime="20210322 03:26:24.667"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:26:24.668" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:26:24.668" endtime="20210322 03:26:24.668"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:24.398" endtime="20210322 03:26:24.668"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 03:26:24.669" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:26:24.668" endtime="20210322 03:26:24.669"></status>
</kw>
<kw name="recebendo notificação de aprovação" library="accreditation_risk_notification">
<kw name="Uuid 4" library="FakerLibrary">
<doc>Generates a random UUID4 string.
:param cast_to: Specify what type the UUID should be cast to. Default is `str`
:type cast_to: callable</doc>
<assign>
<var>${assessment_id}</var>
</assign>
<msg timestamp="20210322 03:26:24.670" level="INFO">${assessment_id} = 2b3d1ba9-d304-4fd8-b9be-80e9d5ff06e1</msg>
<status status="PASS" starttime="20210322 03:26:24.669" endtime="20210322 03:26:24.670"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>year</arg>
</arguments>
<assign>
<var>${year}</var>
</assign>
<msg timestamp="20210322 03:26:24.670" level="INFO">${year} = 2021</msg>
<status status="PASS" starttime="20210322 03:26:24.670" endtime="20210322 03:26:24.670"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>month</arg>
</arguments>
<assign>
<var>${month}</var>
</assign>
<msg timestamp="20210322 03:26:24.671" level="INFO">${month} = 03</msg>
<status status="PASS" starttime="20210322 03:26:24.670" endtime="20210322 03:26:24.671"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>day</arg>
</arguments>
<assign>
<var>${day}</var>
</assign>
<msg timestamp="20210322 03:26:24.671" level="INFO">${day} = 22</msg>
<status status="PASS" starttime="20210322 03:26:24.671" endtime="20210322 03:26:24.671"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:26:24.672" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 03:26:24.672" endtime="20210322 03:26:24.672"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "risk.assessment.result",</arg>
<arg>"resource": "business.holder",</arg>
<arg>"created_at": "${year}-${month}-${day} 15:28:56.747Z",</arg>
<arg>"marketplace_id": "${marketplace_external_key}",</arg>
<arg>"object": {</arg>
<arg>"result": "APPROVED",</arg>
<arg>"holder_id": "${holder_external_key}",</arg>
<arg>"applicant_id": "${application_external_key}",</arg>
<arg>"assessment_id": "${assessment_id}"</arg>
<arg>}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 03:26:24.673" level="INFO">${body} = { "type": "risk.assessment.result", "resource": "business.holder", "created_at": "2021-03-22 15:28:56.747Z", "marketplace_id": "f71a8951368a4cc085cf7875ff44e61c", "object": { "result": "APPROVED", "ho...</msg>
<status status="PASS" starttime="20210322 03:26:24.672" endtime="20210322 03:26:24.673"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/admin/internal_operation/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/registration/approval</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:26:24.674" level="INFO">POST Request using : uri=/admin/internal_operation/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/3d128bc4fd9843b3aa51aea81ee13c79/registration/approval, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "risk.assessment.result", "resource": "business.holder", "created_at": "2021-03-22 15:28:56.747Z", "marketplace_id": "f71a8951368a4cc085cf7875ff44e61c", "object": { "result": "APPROVED", "holder_id": "3d128bc4fd9843b3aa51aea81ee13c79", "applicant_id": "bcc25a6751c14b52af1340d40dba78c5", "assessment_id": "2b3d1ba9-d304-4fd8-b9be-80e9d5ff06e1" } } 
json=None</msg>
<msg timestamp="20210322 03:26:24.873" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:26:24.673" endtime="20210322 03:26:24.873"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:26:24.875" level="INFO">{'message': 'Holder approved successfully'}</msg>
<status status="PASS" starttime="20210322 03:26:24.875" endtime="20210322 03:26:24.876"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:26:24.878" level="INFO">cf46e24c738252ac</msg>
<status status="PASS" starttime="20210322 03:26:24.876" endtime="20210322 03:26:24.878"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:26:24.879" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:26:24.879" endtime="20210322 03:26:24.879"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 03:26:24.881" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:26:24.881" endtime="20210322 03:26:24.881"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:24.669" endtime="20210322 03:26:24.882"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 03:26:24.883" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:26:24.882" endtime="20210322 03:26:24.883"></status>
</kw>
<kw name="buscar account por holder" library="accounts_get_accounts_by_holder">
<kw name="conectar accounts" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accounts</arg>
<arg>url=${account_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 03:26:24.886" level="INFO">Creating Session using : alias=accounts, url=https://banking-accounts-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 03:26:24.885" endtime="20210322 03:26:24.887"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:24.884" endtime="20210322 03:26:24.887"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accounts</arg>
<arg>/marketplaces/${marketplace_external_key}/holders/${holder_external_key}/accounts</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:26:24.888" level="INFO">GET Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/holders/3d128bc4fd9843b3aa51aea81ee13c79/accounts, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 03:26:25.516" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:26:24.887" endtime="20210322 03:26:25.516"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:26:25.517" level="INFO">{'items': [{'id': '4cf29a3d5efd46feb9f497598796307f', 'holder': '3d128bc4fd9843b3aa51aea81ee13c79', 'balance': '0.00', 'currency': 'BRL', 'routing_number': '001', 'number': '6400460334', 'status': 'active', 'metadata': {}, 'created_at': '2021-03-22T06:26:25.717991', 'updated_at': '2021-03-22T06:26:25.717991', 'primary': True, 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'uri': '/v2/marketplaces/f71a8951368a4cc085cf7875ff44e61c/accounts/4cf29a3d5efd46feb9f497598796307f', 'resource': 'payment_account'}], 'has_more': False, 'limit': 100, 'total_pages': 1, 'page': 1, 'offset': 0, 'total': '1', 'query_count': '1'}</msg>
<status status="PASS" starttime="20210322 03:26:25.516" endtime="20210322 03:26:25.517"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:26:25.518" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:26:25.518" endtime="20210322 03:26:25.519"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["id"]}</arg>
</arguments>
<assign>
<var>${account_external_key}</var>
</assign>
<msg timestamp="20210322 03:26:25.521" level="INFO">${account_external_key} = 4cf29a3d5efd46feb9f497598796307f</msg>
<status status="PASS" starttime="20210322 03:26:25.519" endtime="20210322 03:26:25.521"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_external_key}</arg>
</arguments>
<msg timestamp="20210322 03:26:25.522" level="INFO">${account_external_key} = 4cf29a3d5efd46feb9f497598796307f</msg>
<status status="PASS" starttime="20210322 03:26:25.521" endtime="20210322 03:26:25.522"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["number"]}</arg>
</arguments>
<assign>
<var>${account_number}</var>
</assign>
<msg timestamp="20210322 03:26:25.523" level="INFO">${account_number} = 6400460334</msg>
<status status="PASS" starttime="20210322 03:26:25.522" endtime="20210322 03:26:25.523"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_number}</arg>
</arguments>
<msg timestamp="20210322 03:26:25.524" level="INFO">${account_number} = 6400460334</msg>
<status status="PASS" starttime="20210322 03:26:25.523" endtime="20210322 03:26:25.524"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["routing_number"]}</arg>
</arguments>
<assign>
<var>${account_routing_number}</var>
</assign>
<msg timestamp="20210322 03:26:25.525" level="INFO">${account_routing_number} = 001</msg>
<status status="PASS" starttime="20210322 03:26:25.524" endtime="20210322 03:26:25.525"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_routing_number}</arg>
</arguments>
<msg timestamp="20210322 03:26:25.526" level="INFO">${account_routing_number} = 001</msg>
<status status="PASS" starttime="20210322 03:26:25.525" endtime="20210322 03:26:25.526"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:24.884" endtime="20210322 03:26:25.526"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 03:26:25.526" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:26:25.526" endtime="20210322 03:26:25.527"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:22.189" endtime="20210322 03:26:25.527"></status>
</kw>
<kw name="criar chave pix" library="pix_dict_create_entry">
<arguments>
<arg>type=email</arg>
<arg>value=${email_pix}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 03:26:25.528" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 03:26:25.528" endtime="20210322 03:26:25.529"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:25.527" endtime="20210322 03:26:25.529"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${type}</arg>
</arguments>
<msg timestamp="20210322 03:26:25.529" level="INFO">${type} = email</msg>
<status status="PASS" starttime="20210322 03:26:25.529" endtime="20210322 03:26:25.529"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210322 03:26:25.530" level="INFO">${value} = erick21@gmail.com</msg>
<status status="PASS" starttime="20210322 03:26:25.530" endtime="20210322 03:26:25.530"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:26:25.531" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 03:26:25.530" endtime="20210322 03:26:25.531"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "${type}",</arg>
<arg>"value": "${value}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 03:26:25.531" level="INFO">${body} = { "type": "email", "value": "erick21@gmail.com" }</msg>
<status status="PASS" starttime="20210322 03:26:25.531" endtime="20210322 03:26:25.531"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:26:25.532" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/3d128bc4fd9843b3aa51aea81ee13c79/accounts/4cf29a3d5efd46feb9f497598796307f/entries, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "email", "value": "erick21@gmail.com" } 
json=None</msg>
<msg timestamp="20210322 03:26:26.206" level="INFO">${response} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20210322 03:26:25.531" endtime="20210322 03:26:26.206"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:26:26.208" level="INFO">{'id': 'b55106071ca44c239914a3ce046c650c', 'status': 'waiting_ownership_verification', 'created_at': '2021-03-22T03:26:27.066', 'updated_at': '2021-03-22T03:26:27.066', 'key': {'value': 'erick21@gmail.com', 'type': 'email'}, 'account': {'id': '4cf29a3d5efd46feb9f497598796307f', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': '3d128bc4fd9843b3aa51aea81ee13c79', 'owner': {'name': 'Holder de teste', 'national_registration': '57802139414', 'type': 'individual'}, 'routing_number': '001', 'number': '6400460334', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}, 'resource': 'pix.entry'}</msg>
<status status="PASS" starttime="20210322 03:26:26.207" endtime="20210322 03:26:26.208"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:26:26.210" level="INFO">d90379503dc7c7af</msg>
<status status="PASS" starttime="20210322 03:26:26.209" endtime="20210322 03:26:26.210"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 03:26:26.212" level="INFO">202</msg>
<status status="PASS" starttime="20210322 03:26:26.211" endtime="20210322 03:26:26.212"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:26:26.214" level="INFO">${response} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20210322 03:26:26.213" endtime="20210322 03:26:26.214"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${entry_external_key}</var>
</assign>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:26:26.215" endtime="20210322 03:26:26.216"></status>
</kw>
<msg timestamp="20210322 03:26:26.217" level="INFO">${entry_external_key} = b55106071ca44c239914a3ce046c650c</msg>
<status status="PASS" starttime="20210322 03:26:26.214" endtime="20210322 03:26:26.217"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${entry_external_key}</arg>
</arguments>
<msg timestamp="20210322 03:26:26.218" level="INFO">${entry_external_key} = b55106071ca44c239914a3ce046c650c</msg>
<status status="PASS" starttime="20210322 03:26:26.217" endtime="20210322 03:26:26.218"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["key"]["value"]}</arg>
</arguments>
<assign>
<var>${entry_key_value}</var>
</assign>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["key"]["value"]}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:26:26.220" endtime="20210322 03:26:26.221"></status>
</kw>
<msg timestamp="20210322 03:26:26.221" level="INFO">${entry_key_value} = erick21@gmail.com</msg>
<status status="PASS" starttime="20210322 03:26:26.219" endtime="20210322 03:26:26.221"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${entry_key_value}</arg>
</arguments>
<msg timestamp="20210322 03:26:26.222" level="INFO">${entry_key_value} = erick21@gmail.com</msg>
<status status="PASS" starttime="20210322 03:26:26.222" endtime="20210322 03:26:26.222"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:25.527" endtime="20210322 03:26:26.222"></status>
</kw>
<kw name="validar criação da chave pix" library="asserts">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando status_code</arg>
</arguments>
<msg timestamp="20210322 03:26:26.224" level="INFO">Validando status_code</msg>
<status status="PASS" starttime="20210322 03:26:26.223" endtime="20210322 03:26:26.224"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${type}' == 'evp'</arg>
<arg>Should Be Equal As Integers</arg>
<arg>${response.status_code}</arg>
<arg>201</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'phone'</arg>
<arg>Should Be Equal As Integers</arg>
<arg>${response.status_code}</arg>
<arg>202</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'email'</arg>
<arg>Should Be Equal As Integers</arg>
<arg>${response.status_code}</arg>
<arg>202</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'national_registration'</arg>
<arg>Should Be Equal As Integers</arg>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>202</arg>
</arguments>
<msg timestamp="20210322 03:26:26.226" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:26:26.226" endtime="20210322 03:26:26.226"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:26.224" endtime="20210322 03:26:26.226"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar status da chave</arg>
</arguments>
<msg timestamp="20210322 03:26:26.227" level="INFO">Validar status da chave</msg>
<status status="PASS" starttime="20210322 03:26:26.227" endtime="20210322 03:26:26.227"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${type}' == 'evp'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["status"]}</arg>
<arg>active</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'phone'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["status"]}</arg>
<arg>waiting_ownership_verification</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'email'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["status"]}</arg>
<arg>waiting_ownership_verification</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'national_registration'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["status"]}</arg>
<arg>active</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["status"]}</arg>
<arg>waiting_ownership_verification</arg>
</arguments>
<status status="PASS" starttime="20210322 03:26:26.229" endtime="20210322 03:26:26.230"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:26.228" endtime="20210322 03:26:26.230"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando Tipo da chave PIX</arg>
</arguments>
<msg timestamp="20210322 03:26:26.230" level="INFO">Validando Tipo da chave PIX</msg>
<status status="PASS" starttime="20210322 03:26:26.230" endtime="20210322 03:26:26.230"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${type}' == 'evp'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["type"]}</arg>
<arg>${type}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'phone'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["type"]}</arg>
<arg>${type}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'email'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["type"]}</arg>
<arg>${type}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'national_registration'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["type"]}</arg>
<arg>${type}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["key"]["type"]}</arg>
<arg>${type}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:26:26.232" endtime="20210322 03:26:26.232"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:26.231" endtime="20210322 03:26:26.232"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando Valor da chave PIX</arg>
</arguments>
<msg timestamp="20210322 03:26:26.233" level="INFO">Validando Valor da chave PIX</msg>
<status status="PASS" starttime="20210322 03:26:26.233" endtime="20210322 03:26:26.233"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${type}' == 'evp'</arg>
<arg>Should Not Be Empty</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'phone'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${phone_pix}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'email'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${email_pix}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'national_registration'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${national_registration}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${email_pix}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:26:26.234" endtime="20210322 03:26:26.235"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:26.233" endtime="20210322 03:26:26.235"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando dados da conta</arg>
</arguments>
<msg timestamp="20210322 03:26:26.236" level="INFO">Validando dados da conta</msg>
<status status="PASS" starttime="20210322 03:26:26.235" endtime="20210322 03:26:26.236"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["id"]}</arg>
<arg>${account_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:26:26.236" endtime="20210322 03:26:26.236"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["marketplace"]}</arg>
<arg>${marketplace_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:26:26.237" endtime="20210322 03:26:26.237"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["holder"]}</arg>
<arg>${holder_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:26:26.238" endtime="20210322 03:26:26.238"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["number"]}</arg>
<arg>${account_number}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:26:26.238" endtime="20210322 03:26:26.239"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["routing_number"]}</arg>
<arg>${account_routing_number}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:26:26.239" endtime="20210322 03:26:26.240"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["type"]}</arg>
<arg>CACC</arg>
</arguments>
<status status="PASS" starttime="20210322 03:26:26.240" endtime="20210322 03:26:26.241"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar Proprietário da Account Owner</arg>
</arguments>
<msg timestamp="20210322 03:26:26.241" level="INFO">Validar Proprietário da Account Owner</msg>
<status status="PASS" starttime="20210322 03:26:26.241" endtime="20210322 03:26:26.241"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${holder_type}' == 'individual'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["account"]["owner"]["name"]}</arg>
<arg>${holder_name}</arg>
<arg>ELSE IF</arg>
<arg>'${holder_type}' == 'business'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["account"]["owner"]["name"]}</arg>
<arg>${legal_name}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["account"]["owner"]["name"]}</arg>
<arg>${holder_name}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:26:26.242" endtime="20210322 03:26:26.243"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:26.242" endtime="20210322 03:26:26.243"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar national_registration da Account Owner</arg>
</arguments>
<msg timestamp="20210322 03:26:26.244" level="INFO">Validar national_registration da Account Owner</msg>
<status status="PASS" starttime="20210322 03:26:26.243" endtime="20210322 03:26:26.244"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${holder_type}' == 'individual'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["account"]["owner"]["national_registration"]}</arg>
<arg>${national_registration}</arg>
<arg>ELSE IF</arg>
<arg>'${holder_type}' == 'business'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["account"]["owner"]["national_registration"]}</arg>
<arg>${national_registration}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["account"]["owner"]["national_registration"]}</arg>
<arg>${national_registration}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:26:26.245" endtime="20210322 03:26:26.245"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:26.244" endtime="20210322 03:26:26.245"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar Holder Type do Account Owner</arg>
</arguments>
<msg timestamp="20210322 03:26:26.246" level="INFO">Validar Holder Type do Account Owner</msg>
<status status="PASS" starttime="20210322 03:26:26.246" endtime="20210322 03:26:26.246"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${holder_type}' == 'individual'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["account"]["owner"]["type"]}</arg>
<arg>${holder_type}</arg>
<arg>ELSE IF</arg>
<arg>'${holder_type}' == 'business'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["account"]["owner"]["type"]}</arg>
<arg>${holder_type}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["account"]["owner"]["type"]}</arg>
<arg>${holder_type}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:26:26.247" endtime="20210322 03:26:26.247"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:26.246" endtime="20210322 03:26:26.247"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar PSP</arg>
</arguments>
<msg timestamp="20210322 03:26:26.248" level="INFO">Validar PSP</msg>
<status status="PASS" starttime="20210322 03:26:26.248" endtime="20210322 03:26:26.248"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["psp"]["code"]}</arg>
<arg>19468242</arg>
</arguments>
<status status="PASS" starttime="20210322 03:26:26.248" endtime="20210322 03:26:26.249"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["psp"]["name"]}</arg>
<arg>Zoop Tecnologia e Meios de Pagamento S.A.</arg>
</arguments>
<status status="PASS" starttime="20210322 03:26:26.249" endtime="20210322 03:26:26.249"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:26.223" endtime="20210322 03:26:26.249"></status>
</kw>
<doc>Fluxo Básico</doc>
<tags>
<tag>regression_test</tag>
<tag>smoke_test</tag>
</tags>
<status status="PASS" starttime="20210322 03:26:22.188" endtime="20210322 03:26:26.250" critical="yes"></status>
</test>
<test id="s1-s1-s3-t4" name="Cenário: Criando Chave de Endereçamento do tipo CPF">
<kw name="criar holder individual ativo" library="accreditation_create_holder_active">
<kw name="conectar accreditation" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accreditation</arg>
<arg>url=${accreditation_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 03:26:26.252" level="INFO">Creating Session using : alias=accreditation, url=https://banking-accreditation-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 03:26:26.252" endtime="20210322 03:26:26.253"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:26.251" endtime="20210322 03:26:26.253"></status>
</kw>
<kw name="Cpf" library="FakerLibrary">
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 03:26:26.253" level="INFO">${national_registration} = 934.017.268-03</msg>
<status status="PASS" starttime="20210322 03:26:26.253" endtime="20210322 03:26:26.253"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${national_registration}</arg>
<arg>.</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 03:26:26.254" level="INFO">${national_registration} = 934017268-03</msg>
<status status="PASS" starttime="20210322 03:26:26.254" endtime="20210322 03:26:26.254"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${national_registration}</arg>
<arg>-</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 03:26:26.255" level="INFO">${national_registration} = 93401726803</msg>
<status status="PASS" starttime="20210322 03:26:26.254" endtime="20210322 03:26:26.255"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${national_registration}</arg>
</arguments>
<msg timestamp="20210322 03:26:26.255" level="INFO">${national_registration} = 93401726803</msg>
<status status="PASS" starttime="20210322 03:26:26.255" endtime="20210322 03:26:26.255"></status>
</kw>
<kw name="Rg" library="FakerLibrary">
<doc>Brazilian RG, return plain numbers.
Check:  https://www.ngmatematica.com/2014/02/como-determinar-o-digito-verificador-do.html</doc>
<assign>
<var>${identity_card}</var>
</assign>
<msg timestamp="20210322 03:26:26.256" level="INFO">${identity_card} = 281674358</msg>
<status status="PASS" starttime="20210322 03:26:26.256" endtime="20210322 03:26:26.256"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${identity_card}</arg>
</arguments>
<msg timestamp="20210322 03:26:26.257" level="INFO">${identity_card} = 281674358</msg>
<status status="PASS" starttime="20210322 03:26:26.256" endtime="20210322 03:26:26.257"></status>
</kw>
<kw name="criar holder individual" library="accreditation_post_holder_individual">
<arguments>
<arg>holder_type=individual</arg>
<arg>holder_name=${holder_name}</arg>
<arg>email=${email}</arg>
<arg>national_registration=${national_registration}</arg>
<arg>revenue=${revenue}</arg>
<arg>birthday=${birthday}</arg>
<arg>mothers_name=${mothers_name}</arg>
<arg>identity_card=${identity_card}</arg>
<arg>pep=false</arg>
<arg>cbo=${cbo}</arg>
</arguments>
<kw name="conectar accreditation" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accreditation</arg>
<arg>url=${accreditation_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 03:26:26.259" level="INFO">Creating Session using : alias=accreditation, url=https://banking-accreditation-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 03:26:26.258" endtime="20210322 03:26:26.259"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:26.258" endtime="20210322 03:26:26.259"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_type}</arg>
</arguments>
<msg timestamp="20210322 03:26:26.260" level="INFO">${holder_type} = individual</msg>
<status status="PASS" starttime="20210322 03:26:26.260" endtime="20210322 03:26:26.260"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_name}</arg>
</arguments>
<msg timestamp="20210322 03:26:26.261" level="INFO">${holder_name} = Holder de teste</msg>
<status status="PASS" starttime="20210322 03:26:26.260" endtime="20210322 03:26:26.261"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:26:26.261" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 03:26:26.261" endtime="20210322 03:26:26.261"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "${holder_type}",</arg>
<arg>"name": "${holder_name}",</arg>
<arg>"email": "${email}",</arg>
<arg>"national_registration": "${national_registration}",</arg>
<arg>"revenue": ${revenue},</arg>
<arg>"birthday": "${birthday}",</arg>
<arg>"mothers_name": "${mothers_name}",</arg>
<arg>"identity_card": "${identity_card}",</arg>
<arg>"pep": false,</arg>
<arg>"cbo": ${cbo}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 03:26:26.262" level="INFO">${body} = { "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "93401726803", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder",...</msg>
<status status="PASS" starttime="20210322 03:26:26.262" endtime="20210322 03:26:26.263"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:26:26.263" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "93401726803", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder", "identity_card": "281674358", "pep": false, "cbo": 821450 } 
json=None</msg>
<msg timestamp="20210322 03:26:26.942" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:26:26.263" endtime="20210322 03:26:26.943"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:26:26.945" level="INFO">{'id': '84712b759adf47caa0362af427621276', 'name': 'Holder de teste', 'revenue': 5500.0, 'email': 'teste@teste.com.br', 'status': 'waiting_info_and_documents', 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'marketplace_name': 'Marketplace de Teste', 'created_at': '2021-03-22T03:26:27.793035', 'updated_at': '2021-03-22T03:26:27.793037', 'type': 'individual', 'national_registration': '93401726803', 'birthday': '1988-04-23', 'mothers_name': 'Mãe do Holder', 'identity_card': '281674358', 'pep': False, 'cbo': '821450', '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/84712b759adf47caa0362af427621276', 'type': 'GET'}, 'phones': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/84712b759adf47caa0362af427621276/phones', 'type': 'GET'}, 'addresses': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/84712b759adf47caa0362af427621276/addresses', 'type': 'GET'}, 'documents': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/84712b759adf47caa0362af427621276/documents', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 03:26:26.944" endtime="20210322 03:26:26.945"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:26:26.946" level="INFO">6ed8a9558cbdb591</msg>
<status status="PASS" starttime="20210322 03:26:26.945" endtime="20210322 03:26:26.946"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${body}</arg>
</arguments>
<msg timestamp="20210322 03:26:26.947" level="INFO">{ "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "93401726803", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder", "identity_card": "281674358", "pep": false, "cbo": 821450 }</msg>
<status status="PASS" starttime="20210322 03:26:26.947" endtime="20210322 03:26:26.947"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:26:26.949" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:26:26.948" endtime="20210322 03:26:26.949"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${holder_external_key}</var>
</assign>
<msg timestamp="20210322 03:26:26.950" level="INFO">${holder_external_key} = 84712b759adf47caa0362af427621276</msg>
<status status="PASS" starttime="20210322 03:26:26.949" endtime="20210322 03:26:26.950"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_external_key}</arg>
</arguments>
<msg timestamp="20210322 03:26:26.951" level="INFO">${holder_external_key} = 84712b759adf47caa0362af427621276</msg>
<status status="PASS" starttime="20210322 03:26:26.951" endtime="20210322 03:26:26.951"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:26.257" endtime="20210322 03:26:26.952"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_name}</arg>
</arguments>
<msg timestamp="20210322 03:26:26.952" level="INFO">${holder_name} = Holder de teste</msg>
<status status="PASS" starttime="20210322 03:26:26.952" endtime="20210322 03:26:26.953"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 03:26:26.953" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:26:26.953" endtime="20210322 03:26:26.954"></status>
</kw>
<kw name="criar holder phone" library="accreditation_post_holder_phone">
<arguments>
<arg>21</arg>
<arg>51</arg>
<arg>996221236</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:26:26.956" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 03:26:26.955" endtime="20210322 03:26:26.956"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"area_code": "${phone_area_code}",</arg>
<arg>"country_code": "${phone_country_code}",</arg>
<arg>"number": "${phone_number}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 03:26:26.957" level="INFO">${body} = { "area_code": "21", "country_code": "51", "number": "996221236" }</msg>
<status status="PASS" starttime="20210322 03:26:26.956" endtime="20210322 03:26:26.957"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/phones</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:26:26.958" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/84712b759adf47caa0362af427621276/phones, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "area_code": "21", "country_code": "51", "number": "996221236" } 
json=None</msg>
<msg timestamp="20210322 03:26:27.186" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:26:26.957" endtime="20210322 03:26:27.186"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:26:27.188" level="INFO">{'id': '0a024c0afdc84fb49117cc291428ffea', 'area_code': '21', 'country_code': '51', 'number': '996221236', 'main': True, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/84712b759adf47caa0362af427621276/phones/0a024c0afdc84fb49117cc291428ffea', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/84712b759adf47caa0362af427621276', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 03:26:27.187" endtime="20210322 03:26:27.188"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:26:27.190" level="INFO">3d8c141083717516</msg>
<status status="PASS" starttime="20210322 03:26:27.189" endtime="20210322 03:26:27.190"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:26:27.192" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:26:27.191" endtime="20210322 03:26:27.193"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${phone_external_key}</var>
</assign>
<msg timestamp="20210322 03:26:27.195" level="INFO">${phone_external_key} = 0a024c0afdc84fb49117cc291428ffea</msg>
<status status="PASS" starttime="20210322 03:26:27.194" endtime="20210322 03:26:27.196"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${phone_external_key}</arg>
</arguments>
<msg timestamp="20210322 03:26:27.197" level="INFO">${phone_external_key} = 0a024c0afdc84fb49117cc291428ffea</msg>
<status status="PASS" starttime="20210322 03:26:27.196" endtime="20210322 03:26:27.197"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:26.954" endtime="20210322 03:26:27.198"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 03:26:27.199" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:26:27.198" endtime="20210322 03:26:27.199"></status>
</kw>
<kw name="criar holder address" library="accreditation_post_holder_address">
<arguments>
<arg>Rio de Janeiro</arg>
<arg>Rio de Janeiro</arg>
<arg>Brasil</arg>
<arg>Bairro de Testes</arg>
<arg>Rua de Testes</arg>
<arg>90</arg>
<arg>apto 200</arg>
<arg>21550987</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:26:27.201" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 03:26:27.201" endtime="20210322 03:26:27.201"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"city": "${city}",</arg>
<arg>"state": "${state}",</arg>
<arg>"country": "${country}",</arg>
<arg>"neighborhood": "${neighborhood}",</arg>
<arg>"street": "${street}",</arg>
<arg>"number": "${number}",</arg>
<arg>"complement": "${complement}",</arg>
<arg>"postal_code": "${postal_code}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 03:26:27.203" level="INFO">${body} = { "city": "Rio de Janeiro", "state": "Rio de Janeiro", "country": "Brasil", "neighborhood": "Bairro de Testes", "street": "Rua de Testes", "number": "90", "complement": "apto 200", "postal_code": "215...</msg>
<status status="PASS" starttime="20210322 03:26:27.202" endtime="20210322 03:26:27.203"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/addresses</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:26:27.205" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/84712b759adf47caa0362af427621276/addresses, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "city": "Rio de Janeiro", "state": "Rio de Janeiro", "country": "Brasil", "neighborhood": "Bairro de Testes", "street": "Rua de Testes", "number": "90", "complement": "apto 200", "postal_code": "21550987" } 
json=None</msg>
<msg timestamp="20210322 03:26:27.463" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:26:27.204" endtime="20210322 03:26:27.463"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:26:27.467" level="INFO">{'id': 'a4aaac435cc6468fbcf8ff339e87045c', 'street': 'Rua de Testes', 'number': '90', 'city': 'Rio de Janeiro', 'complement': 'apto 200', 'state': 'Rio de Janeiro', 'neighborhood': 'Bairro de Testes', 'postal_code': '21550987', 'country': 'Brasil', 'main': True, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/84712b759adf47caa0362af427621276/addresses/a4aaac435cc6468fbcf8ff339e87045c', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/84712b759adf47caa0362af427621276', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 03:26:27.464" endtime="20210322 03:26:27.467"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:26:27.468" level="INFO">16c6a46994e7130b</msg>
<status status="PASS" starttime="20210322 03:26:27.467" endtime="20210322 03:26:27.468"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:26:27.470" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:26:27.470" endtime="20210322 03:26:27.471"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${address_external_key}</var>
</assign>
<msg timestamp="20210322 03:26:27.473" level="INFO">${address_external_key} = a4aaac435cc6468fbcf8ff339e87045c</msg>
<status status="PASS" starttime="20210322 03:26:27.471" endtime="20210322 03:26:27.473"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${address_external_key}</arg>
</arguments>
<msg timestamp="20210322 03:26:27.475" level="INFO">${address_external_key} = a4aaac435cc6468fbcf8ff339e87045c</msg>
<status status="PASS" starttime="20210322 03:26:27.474" endtime="20210322 03:26:27.475"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:27.199" endtime="20210322 03:26:27.475"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 03:26:27.477" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:26:27.476" endtime="20210322 03:26:27.477"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>SELFIE</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:26:27.479" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 03:26:27.478" endtime="20210322 03:26:27.479"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 03:26:27.480" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 03:26:27.483" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 03:26:27.479" endtime="20210322 03:26:27.483"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:26:27.485" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/84712b759adf47caa0362af427621276/documents?type=SELFIE, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 03:26:27.766" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:26:27.483" endtime="20210322 03:26:27.766"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:26:27.768" level="INFO">{'id': 'dd0188b7a2884be99dbb9f89391e3399', 'document_type': 'selfie', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/84712b759adf47caa0362af427621276/documents/dd0188b7a2884be99dbb9f89391e3399', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/84712b759adf47caa0362af427621276', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/84712b759adf47caa0362af427621276/documents/dd0188b7a2884be99dbb9f89391e3399/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 03:26:27.768" endtime="20210322 03:26:27.768"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:26:27.770" level="INFO">9cf2f0952e3258dc</msg>
<status status="PASS" starttime="20210322 03:26:27.769" endtime="20210322 03:26:27.770"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:26:27.773" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:26:27.771" endtime="20210322 03:26:27.773"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 03:26:27.776" level="INFO">${document_external_key} = dd0188b7a2884be99dbb9f89391e3399</msg>
<status status="PASS" starttime="20210322 03:26:27.773" endtime="20210322 03:26:27.776"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 03:26:27.778" level="INFO">${document_external_key} = dd0188b7a2884be99dbb9f89391e3399</msg>
<status status="PASS" starttime="20210322 03:26:27.776" endtime="20210322 03:26:27.778"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:27.477" endtime="20210322 03:26:27.779"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 03:26:27.780" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:26:27.779" endtime="20210322 03:26:27.780"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>RG_FRENTE</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:26:27.783" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 03:26:27.782" endtime="20210322 03:26:27.783"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 03:26:27.784" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 03:26:27.787" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 03:26:27.784" endtime="20210322 03:26:27.787"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:26:27.788" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/84712b759adf47caa0362af427621276/documents?type=RG_FRENTE, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 03:26:28.053" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:26:27.787" endtime="20210322 03:26:28.053"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:26:28.055" level="INFO">{'id': '566c1ca6cbb8458c919748ca119cda49', 'document_type': 'rg_frente', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/84712b759adf47caa0362af427621276/documents/566c1ca6cbb8458c919748ca119cda49', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/84712b759adf47caa0362af427621276', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/84712b759adf47caa0362af427621276/documents/566c1ca6cbb8458c919748ca119cda49/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 03:26:28.054" endtime="20210322 03:26:28.055"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:26:28.057" level="INFO">6aae0b21102dd46c</msg>
<status status="PASS" starttime="20210322 03:26:28.056" endtime="20210322 03:26:28.058"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:26:28.059" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:26:28.058" endtime="20210322 03:26:28.060"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 03:26:28.062" level="INFO">${document_external_key} = 566c1ca6cbb8458c919748ca119cda49</msg>
<status status="PASS" starttime="20210322 03:26:28.061" endtime="20210322 03:26:28.063"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 03:26:28.064" level="INFO">${document_external_key} = 566c1ca6cbb8458c919748ca119cda49</msg>
<status status="PASS" starttime="20210322 03:26:28.063" endtime="20210322 03:26:28.066"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:27.782" endtime="20210322 03:26:28.066"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 03:26:28.067" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:26:28.066" endtime="20210322 03:26:28.067"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>RG_VERSO</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:26:28.070" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 03:26:28.069" endtime="20210322 03:26:28.070"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 03:26:28.071" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 03:26:28.074" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 03:26:28.071" endtime="20210322 03:26:28.074"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:26:28.076" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/84712b759adf47caa0362af427621276/documents?type=RG_VERSO, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 03:26:28.353" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:26:28.075" endtime="20210322 03:26:28.353"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:26:28.355" level="INFO">{'id': 'e72e862173e946e9b3bd32317f5bb4c4', 'document_type': 'rg_verso', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/84712b759adf47caa0362af427621276/documents/e72e862173e946e9b3bd32317f5bb4c4', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/84712b759adf47caa0362af427621276', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/84712b759adf47caa0362af427621276/documents/e72e862173e946e9b3bd32317f5bb4c4/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 03:26:28.354" endtime="20210322 03:26:28.355"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:26:28.357" level="INFO">45c955b6980e66d5</msg>
<status status="PASS" starttime="20210322 03:26:28.357" endtime="20210322 03:26:28.358"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:26:28.359" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:26:28.358" endtime="20210322 03:26:28.360"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 03:26:28.362" level="INFO">${document_external_key} = e72e862173e946e9b3bd32317f5bb4c4</msg>
<status status="PASS" starttime="20210322 03:26:28.361" endtime="20210322 03:26:28.362"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 03:26:28.364" level="INFO">${document_external_key} = e72e862173e946e9b3bd32317f5bb4c4</msg>
<status status="PASS" starttime="20210322 03:26:28.363" endtime="20210322 03:26:28.364"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:28.068" endtime="20210322 03:26:28.365"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 03:26:28.365" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:26:28.365" endtime="20210322 03:26:28.366"></status>
</kw>
<kw name="solicitar aprovação do holder" library="accreditation_request_approval">
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:26:28.369" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 03:26:28.368" endtime="20210322 03:26:28.369"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/approval</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:26:28.371" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/84712b759adf47caa0362af427621276/approval, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data=None 
json=None</msg>
<msg timestamp="20210322 03:26:28.639" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:26:28.370" endtime="20210322 03:26:28.639"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:26:28.640" level="INFO">{'message': 'Approval request accepted successfully. Processing analysis'}</msg>
<status status="PASS" starttime="20210322 03:26:28.640" endtime="20210322 03:26:28.641"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:26:28.641" level="INFO">aad5134a2c020147</msg>
<status status="PASS" starttime="20210322 03:26:28.641" endtime="20210322 03:26:28.642"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:26:28.643" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:26:28.642" endtime="20210322 03:26:28.643"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:28.366" endtime="20210322 03:26:28.643"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 03:26:28.644" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:26:28.643" endtime="20210322 03:26:28.644"></status>
</kw>
<kw name="recebendo notificação de aprovação" library="accreditation_risk_notification">
<kw name="Uuid 4" library="FakerLibrary">
<doc>Generates a random UUID4 string.
:param cast_to: Specify what type the UUID should be cast to. Default is `str`
:type cast_to: callable</doc>
<assign>
<var>${assessment_id}</var>
</assign>
<msg timestamp="20210322 03:26:28.646" level="INFO">${assessment_id} = 6bd05007-487e-46d7-a9bc-076f38446ac4</msg>
<status status="PASS" starttime="20210322 03:26:28.645" endtime="20210322 03:26:28.646"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>year</arg>
</arguments>
<assign>
<var>${year}</var>
</assign>
<msg timestamp="20210322 03:26:28.647" level="INFO">${year} = 2021</msg>
<status status="PASS" starttime="20210322 03:26:28.646" endtime="20210322 03:26:28.647"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>month</arg>
</arguments>
<assign>
<var>${month}</var>
</assign>
<msg timestamp="20210322 03:26:28.648" level="INFO">${month} = 03</msg>
<status status="PASS" starttime="20210322 03:26:28.648" endtime="20210322 03:26:28.648"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>day</arg>
</arguments>
<assign>
<var>${day}</var>
</assign>
<msg timestamp="20210322 03:26:28.649" level="INFO">${day} = 22</msg>
<status status="PASS" starttime="20210322 03:26:28.649" endtime="20210322 03:26:28.650"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:26:28.650" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 03:26:28.650" endtime="20210322 03:26:28.650"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "risk.assessment.result",</arg>
<arg>"resource": "business.holder",</arg>
<arg>"created_at": "${year}-${month}-${day} 15:28:56.747Z",</arg>
<arg>"marketplace_id": "${marketplace_external_key}",</arg>
<arg>"object": {</arg>
<arg>"result": "APPROVED",</arg>
<arg>"holder_id": "${holder_external_key}",</arg>
<arg>"applicant_id": "${application_external_key}",</arg>
<arg>"assessment_id": "${assessment_id}"</arg>
<arg>}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 03:26:28.652" level="INFO">${body} = { "type": "risk.assessment.result", "resource": "business.holder", "created_at": "2021-03-22 15:28:56.747Z", "marketplace_id": "f71a8951368a4cc085cf7875ff44e61c", "object": { "result": "APPROVED", "ho...</msg>
<status status="PASS" starttime="20210322 03:26:28.651" endtime="20210322 03:26:28.652"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/admin/internal_operation/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/registration/approval</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:26:28.653" level="INFO">POST Request using : uri=/admin/internal_operation/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/84712b759adf47caa0362af427621276/registration/approval, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "risk.assessment.result", "resource": "business.holder", "created_at": "2021-03-22 15:28:56.747Z", "marketplace_id": "f71a8951368a4cc085cf7875ff44e61c", "object": { "result": "APPROVED", "holder_id": "84712b759adf47caa0362af427621276", "applicant_id": "bcc25a6751c14b52af1340d40dba78c5", "assessment_id": "6bd05007-487e-46d7-a9bc-076f38446ac4" } } 
json=None</msg>
<msg timestamp="20210322 03:26:28.855" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:26:28.652" endtime="20210322 03:26:28.855"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:26:28.856" level="INFO">{'message': 'Holder approved successfully'}</msg>
<status status="PASS" starttime="20210322 03:26:28.855" endtime="20210322 03:26:28.856"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:26:28.857" level="INFO">10ddcd89ef52657c</msg>
<status status="PASS" starttime="20210322 03:26:28.857" endtime="20210322 03:26:28.858"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:26:28.859" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:26:28.858" endtime="20210322 03:26:28.859"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 03:26:28.860" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:26:28.859" endtime="20210322 03:26:28.860"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:28.645" endtime="20210322 03:26:28.860"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 03:26:28.861" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:26:28.861" endtime="20210322 03:26:28.862"></status>
</kw>
<kw name="buscar account por holder" library="accounts_get_accounts_by_holder">
<kw name="conectar accounts" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accounts</arg>
<arg>url=${account_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 03:26:28.864" level="INFO">Creating Session using : alias=accounts, url=https://banking-accounts-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 03:26:28.864" endtime="20210322 03:26:28.865"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:28.863" endtime="20210322 03:26:28.865"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accounts</arg>
<arg>/marketplaces/${marketplace_external_key}/holders/${holder_external_key}/accounts</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:26:28.866" level="INFO">GET Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/holders/84712b759adf47caa0362af427621276/accounts, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 03:26:29.492" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:26:28.866" endtime="20210322 03:26:29.492"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:26:29.492" level="INFO">{'items': [{'id': '1c40f011bb194ac38e922637e4867781', 'holder': '84712b759adf47caa0362af427621276', 'balance': '0.00', 'currency': 'BRL', 'routing_number': '001', 'number': '7785008118', 'status': 'active', 'metadata': {}, 'created_at': '2021-03-22T06:26:29.702796', 'updated_at': '2021-03-22T06:26:29.702796', 'primary': True, 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'uri': '/v2/marketplaces/f71a8951368a4cc085cf7875ff44e61c/accounts/1c40f011bb194ac38e922637e4867781', 'resource': 'payment_account'}], 'has_more': False, 'limit': 100, 'total_pages': 1, 'page': 1, 'offset': 0, 'total': '1', 'query_count': '1'}</msg>
<status status="PASS" starttime="20210322 03:26:29.492" endtime="20210322 03:26:29.492"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:26:29.494" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:26:29.492" endtime="20210322 03:26:29.494"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["id"]}</arg>
</arguments>
<assign>
<var>${account_external_key}</var>
</assign>
<msg timestamp="20210322 03:26:29.494" level="INFO">${account_external_key} = 1c40f011bb194ac38e922637e4867781</msg>
<status status="PASS" starttime="20210322 03:26:29.494" endtime="20210322 03:26:29.494"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_external_key}</arg>
</arguments>
<msg timestamp="20210322 03:26:29.494" level="INFO">${account_external_key} = 1c40f011bb194ac38e922637e4867781</msg>
<status status="PASS" starttime="20210322 03:26:29.494" endtime="20210322 03:26:29.494"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["number"]}</arg>
</arguments>
<assign>
<var>${account_number}</var>
</assign>
<msg timestamp="20210322 03:26:29.495" level="INFO">${account_number} = 7785008118</msg>
<status status="PASS" starttime="20210322 03:26:29.495" endtime="20210322 03:26:29.495"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_number}</arg>
</arguments>
<msg timestamp="20210322 03:26:29.496" level="INFO">${account_number} = 7785008118</msg>
<status status="PASS" starttime="20210322 03:26:29.496" endtime="20210322 03:26:29.496"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["routing_number"]}</arg>
</arguments>
<assign>
<var>${account_routing_number}</var>
</assign>
<msg timestamp="20210322 03:26:29.498" level="INFO">${account_routing_number} = 001</msg>
<status status="PASS" starttime="20210322 03:26:29.496" endtime="20210322 03:26:29.498"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_routing_number}</arg>
</arguments>
<msg timestamp="20210322 03:26:29.498" level="INFO">${account_routing_number} = 001</msg>
<status status="PASS" starttime="20210322 03:26:29.498" endtime="20210322 03:26:29.498"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:28.862" endtime="20210322 03:26:29.498"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 03:26:29.498" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:26:29.498" endtime="20210322 03:26:29.498"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:26.251" endtime="20210322 03:26:29.498"></status>
</kw>
<kw name="criar chave pix" library="pix_dict_create_entry">
<arguments>
<arg>type=national_registration</arg>
<arg>value=${EMPTY}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 03:26:29.501" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 03:26:29.499" endtime="20210322 03:26:29.501"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:29.499" endtime="20210322 03:26:29.501"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${type}</arg>
</arguments>
<msg timestamp="20210322 03:26:29.501" level="INFO">${type} = national_registration</msg>
<status status="PASS" starttime="20210322 03:26:29.501" endtime="20210322 03:26:29.501"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210322 03:26:29.503" level="INFO">${value} = </msg>
<status status="PASS" starttime="20210322 03:26:29.502" endtime="20210322 03:26:29.503"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:26:29.503" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 03:26:29.503" endtime="20210322 03:26:29.503"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "${type}",</arg>
<arg>"value": "${value}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 03:26:29.504" level="INFO">${body} = { "type": "national_registration", "value": "" }</msg>
<status status="PASS" starttime="20210322 03:26:29.504" endtime="20210322 03:26:29.504"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:26:29.505" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/84712b759adf47caa0362af427621276/accounts/1c40f011bb194ac38e922637e4867781/entries, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "national_registration", "value": "" } 
json=None</msg>
<msg timestamp="20210322 03:26:31.002" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:26:29.504" endtime="20210322 03:26:31.003"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:26:31.004" level="INFO">{'id': 'e7e159d48c7241c8bfafbd4f616a8511', 'status': 'active', 'created_at': '2021-03-22T03:26:30.996', 'updated_at': '2021-03-22T03:26:30.996', 'key': {'value': '93401726803', 'type': 'national_registration'}, 'account': {'id': '1c40f011bb194ac38e922637e4867781', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': '84712b759adf47caa0362af427621276', 'owner': {'name': 'Holder de teste', 'national_registration': '93401726803', 'type': 'individual'}, 'routing_number': '001', 'number': '7785008118', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}, 'resource': 'pix.entry'}</msg>
<status status="PASS" starttime="20210322 03:26:31.003" endtime="20210322 03:26:31.005"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:26:31.007" level="INFO">b8fae545f4402fab</msg>
<status status="PASS" starttime="20210322 03:26:31.007" endtime="20210322 03:26:31.007"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 03:26:31.008" level="INFO">201</msg>
<status status="PASS" starttime="20210322 03:26:31.007" endtime="20210322 03:26:31.008"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:26:31.011" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:26:31.010" endtime="20210322 03:26:31.011"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${entry_external_key}</var>
</assign>
<msg timestamp="20210322 03:26:31.014" level="INFO">${entry_external_key} = e7e159d48c7241c8bfafbd4f616a8511</msg>
<status status="PASS" starttime="20210322 03:26:31.012" endtime="20210322 03:26:31.014"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${entry_external_key}</arg>
</arguments>
<msg timestamp="20210322 03:26:31.015" level="INFO">${entry_external_key} = e7e159d48c7241c8bfafbd4f616a8511</msg>
<status status="PASS" starttime="20210322 03:26:31.015" endtime="20210322 03:26:31.016"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["key"]["value"]}</arg>
</arguments>
<assign>
<var>${entry_key_value}</var>
</assign>
<msg timestamp="20210322 03:26:31.017" level="INFO">${entry_key_value} = 93401726803</msg>
<status status="PASS" starttime="20210322 03:26:31.016" endtime="20210322 03:26:31.017"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${entry_key_value}</arg>
</arguments>
<msg timestamp="20210322 03:26:31.018" level="INFO">${entry_key_value} = 93401726803</msg>
<status status="PASS" starttime="20210322 03:26:31.018" endtime="20210322 03:26:31.018"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:29.499" endtime="20210322 03:26:31.020"></status>
</kw>
<kw name="validar criação da chave pix" library="asserts">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando status_code</arg>
</arguments>
<msg timestamp="20210322 03:26:31.020" level="INFO">Validando status_code</msg>
<status status="PASS" starttime="20210322 03:26:31.020" endtime="20210322 03:26:31.020"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${type}' == 'evp'</arg>
<arg>Should Be Equal As Integers</arg>
<arg>${response.status_code}</arg>
<arg>201</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'phone'</arg>
<arg>Should Be Equal As Integers</arg>
<arg>${response.status_code}</arg>
<arg>202</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'email'</arg>
<arg>Should Be Equal As Integers</arg>
<arg>${response.status_code}</arg>
<arg>202</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'national_registration'</arg>
<arg>Should Be Equal As Integers</arg>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 03:26:31.023" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:26:31.023" endtime="20210322 03:26:31.023"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:31.021" endtime="20210322 03:26:31.023"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar status da chave</arg>
</arguments>
<msg timestamp="20210322 03:26:31.023" level="INFO">Validar status da chave</msg>
<status status="PASS" starttime="20210322 03:26:31.023" endtime="20210322 03:26:31.023"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${type}' == 'evp'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["status"]}</arg>
<arg>active</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'phone'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["status"]}</arg>
<arg>waiting_ownership_verification</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'email'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["status"]}</arg>
<arg>waiting_ownership_verification</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'national_registration'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["status"]}</arg>
<arg>active</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["status"]}</arg>
<arg>active</arg>
</arguments>
<status status="PASS" starttime="20210322 03:26:31.026" endtime="20210322 03:26:31.026"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:31.024" endtime="20210322 03:26:31.026"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando Tipo da chave PIX</arg>
</arguments>
<msg timestamp="20210322 03:26:31.026" level="INFO">Validando Tipo da chave PIX</msg>
<status status="PASS" starttime="20210322 03:26:31.026" endtime="20210322 03:26:31.026"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${type}' == 'evp'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["type"]}</arg>
<arg>${type}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'phone'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["type"]}</arg>
<arg>${type}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'email'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["type"]}</arg>
<arg>${type}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'national_registration'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["type"]}</arg>
<arg>${type}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["key"]["type"]}</arg>
<arg>${type}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:26:31.027" endtime="20210322 03:26:31.028"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:31.026" endtime="20210322 03:26:31.028"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando Valor da chave PIX</arg>
</arguments>
<msg timestamp="20210322 03:26:31.029" level="INFO">Validando Valor da chave PIX</msg>
<status status="PASS" starttime="20210322 03:26:31.028" endtime="20210322 03:26:31.029"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${type}' == 'evp'</arg>
<arg>Should Not Be Empty</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'phone'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${phone_pix}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'email'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${email_pix}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'national_registration'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${national_registration}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${national_registration}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:26:31.031" endtime="20210322 03:26:31.031"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:31.029" endtime="20210322 03:26:31.031"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando dados da conta</arg>
</arguments>
<msg timestamp="20210322 03:26:31.032" level="INFO">Validando dados da conta</msg>
<status status="PASS" starttime="20210322 03:26:31.032" endtime="20210322 03:26:31.032"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["id"]}</arg>
<arg>${account_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:26:31.032" endtime="20210322 03:26:31.032"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["marketplace"]}</arg>
<arg>${marketplace_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:26:31.032" endtime="20210322 03:26:31.032"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["holder"]}</arg>
<arg>${holder_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:26:31.033" endtime="20210322 03:26:31.033"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["number"]}</arg>
<arg>${account_number}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:26:31.035" endtime="20210322 03:26:31.035"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["routing_number"]}</arg>
<arg>${account_routing_number}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:26:31.035" endtime="20210322 03:26:31.035"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["type"]}</arg>
<arg>CACC</arg>
</arguments>
<status status="PASS" starttime="20210322 03:26:31.035" endtime="20210322 03:26:31.036"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar Proprietário da Account Owner</arg>
</arguments>
<msg timestamp="20210322 03:26:31.036" level="INFO">Validar Proprietário da Account Owner</msg>
<status status="PASS" starttime="20210322 03:26:31.036" endtime="20210322 03:26:31.036"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${holder_type}' == 'individual'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["account"]["owner"]["name"]}</arg>
<arg>${holder_name}</arg>
<arg>ELSE IF</arg>
<arg>'${holder_type}' == 'business'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["account"]["owner"]["name"]}</arg>
<arg>${legal_name}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["account"]["owner"]["name"]}</arg>
<arg>${holder_name}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:26:31.037" endtime="20210322 03:26:31.037"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:31.036" endtime="20210322 03:26:31.037"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar national_registration da Account Owner</arg>
</arguments>
<msg timestamp="20210322 03:26:31.038" level="INFO">Validar national_registration da Account Owner</msg>
<status status="PASS" starttime="20210322 03:26:31.038" endtime="20210322 03:26:31.038"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${holder_type}' == 'individual'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["account"]["owner"]["national_registration"]}</arg>
<arg>${national_registration}</arg>
<arg>ELSE IF</arg>
<arg>'${holder_type}' == 'business'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["account"]["owner"]["national_registration"]}</arg>
<arg>${national_registration}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["account"]["owner"]["national_registration"]}</arg>
<arg>${national_registration}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:26:31.039" endtime="20210322 03:26:31.039"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:31.038" endtime="20210322 03:26:31.039"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar Holder Type do Account Owner</arg>
</arguments>
<msg timestamp="20210322 03:26:31.040" level="INFO">Validar Holder Type do Account Owner</msg>
<status status="PASS" starttime="20210322 03:26:31.039" endtime="20210322 03:26:31.040"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${holder_type}' == 'individual'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["account"]["owner"]["type"]}</arg>
<arg>${holder_type}</arg>
<arg>ELSE IF</arg>
<arg>'${holder_type}' == 'business'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["account"]["owner"]["type"]}</arg>
<arg>${holder_type}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["account"]["owner"]["type"]}</arg>
<arg>${holder_type}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:26:31.040" endtime="20210322 03:26:31.042"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:31.040" endtime="20210322 03:26:31.042"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar PSP</arg>
</arguments>
<msg timestamp="20210322 03:26:31.042" level="INFO">Validar PSP</msg>
<status status="PASS" starttime="20210322 03:26:31.042" endtime="20210322 03:26:31.042"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["psp"]["code"]}</arg>
<arg>19468242</arg>
</arguments>
<status status="PASS" starttime="20210322 03:26:31.042" endtime="20210322 03:26:31.042"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["psp"]["name"]}</arg>
<arg>Zoop Tecnologia e Meios de Pagamento S.A.</arg>
</arguments>
<status status="PASS" starttime="20210322 03:26:31.042" endtime="20210322 03:26:31.043"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:31.020" endtime="20210322 03:26:31.043"></status>
</kw>
<doc>Fluxo Básico</doc>
<tags>
<tag>regression_test</tag>
<tag>smoke_test</tag>
</tags>
<status status="PASS" starttime="20210322 03:26:26.250" endtime="20210322 03:26:31.043" critical="yes"></status>
</test>
<test id="s1-s1-s3-t5" name="Cenário: Criando Chave de Endereçamento do tipo CNPJ">
<kw name="criar holder business ativo" library="accreditation_create_holder_active">
<kw name="conectar accreditation" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accreditation</arg>
<arg>url=${accreditation_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 03:26:31.045" level="INFO">Creating Session using : alias=accreditation, url=https://banking-accreditation-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 03:26:31.045" endtime="20210322 03:26:31.045"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:31.044" endtime="20210322 03:26:31.046"></status>
</kw>
<kw name="Cnpj" library="FakerLibrary">
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 03:26:31.046" level="INFO">${national_registration} = 57.091.438/0001-40</msg>
<status status="PASS" starttime="20210322 03:26:31.046" endtime="20210322 03:26:31.046"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${national_registration}</arg>
<arg>.</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 03:26:31.047" level="INFO">${national_registration} = 57091438/0001-40</msg>
<status status="PASS" starttime="20210322 03:26:31.046" endtime="20210322 03:26:31.047"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${national_registration}</arg>
<arg>-</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 03:26:31.047" level="INFO">${national_registration} = 57091438/000140</msg>
<status status="PASS" starttime="20210322 03:26:31.047" endtime="20210322 03:26:31.047"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${national_registration}</arg>
<arg>/</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 03:26:31.048" level="INFO">${national_registration} = 57091438000140</msg>
<status status="PASS" starttime="20210322 03:26:31.048" endtime="20210322 03:26:31.048"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${national_registration}</arg>
</arguments>
<msg timestamp="20210322 03:26:31.048" level="INFO">${national_registration} = 57091438000140</msg>
<status status="PASS" starttime="20210322 03:26:31.048" endtime="20210322 03:26:31.050"></status>
</kw>
<kw name="Rg" library="FakerLibrary">
<doc>Brazilian RG, return plain numbers.
Check:  https://www.ngmatematica.com/2014/02/como-determinar-o-digito-verificador-do.html</doc>
<assign>
<var>${identity_card}</var>
</assign>
<msg timestamp="20210322 03:26:31.050" level="INFO">${identity_card} = 680542139</msg>
<status status="PASS" starttime="20210322 03:26:31.050" endtime="20210322 03:26:31.050"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${identity_card}</arg>
</arguments>
<msg timestamp="20210322 03:26:31.050" level="INFO">${identity_card} = 680542139</msg>
<status status="PASS" starttime="20210322 03:26:31.050" endtime="20210322 03:26:31.050"></status>
</kw>
<kw name="criar holder business" library="accreditation_post_holder_business">
<arguments>
<arg>holder_type=business</arg>
<arg>holder_name=${holder_name}</arg>
<arg>email_business=${email_business}</arg>
<arg>national_registration=${national_registration}</arg>
<arg>revenue_business=${revenue_business}</arg>
<arg>cnae=${cnae}</arg>
<arg>legal_name=${legal_name}</arg>
<arg>establishment_format=mei</arg>
<arg>establishment_date=${establishment_date}</arg>
</arguments>
<kw name="conectar accreditation" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accreditation</arg>
<arg>url=${accreditation_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 03:26:31.052" level="INFO">Creating Session using : alias=accreditation, url=https://banking-accreditation-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 03:26:31.051" endtime="20210322 03:26:31.052"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:31.051" endtime="20210322 03:26:31.052"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_type}</arg>
</arguments>
<msg timestamp="20210322 03:26:31.053" level="INFO">${holder_type} = business</msg>
<status status="PASS" starttime="20210322 03:26:31.052" endtime="20210322 03:26:31.053"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_name}</arg>
</arguments>
<msg timestamp="20210322 03:26:31.053" level="INFO">${holder_name} = Holder de teste</msg>
<status status="PASS" starttime="20210322 03:26:31.053" endtime="20210322 03:26:31.053"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${legal_name}</arg>
</arguments>
<msg timestamp="20210322 03:26:31.055" level="INFO">${legal_name} = Nome Legal da Empresa</msg>
<status status="PASS" starttime="20210322 03:26:31.055" endtime="20210322 03:26:31.055"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:26:31.055" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 03:26:31.055" endtime="20210322 03:26:31.055"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "${holder_type}",</arg>
<arg>"name": "${holder_name}",</arg>
<arg>"email": "${email_business}",</arg>
<arg>"national_registration": "${national_registration}",</arg>
<arg>"revenue": ${revenue_business},</arg>
<arg>"cnae": "${cnae}",</arg>
<arg>"legal_name": "${legal_name}",</arg>
<arg>"establishment": {</arg>
<arg>"format":"${establishment_format}",</arg>
<arg>"date":"${establishment_date}"</arg>
<arg>}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 03:26:31.056" level="INFO">${body} = { "type": "business", "name": "Holder de teste", "email": "contato@teste.com.br", "national_registration": "57091438000140", "revenue": 1005500.00, "cnae": "0111301", "legal_name": "Nome Legal da Empr...</msg>
<status status="PASS" starttime="20210322 03:26:31.055" endtime="20210322 03:26:31.056"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:26:31.056" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "business", "name": "Holder de teste", "email": "contato@teste.com.br", "national_registration": "57091438000140", "revenue": 1005500.00, "cnae": "0111301", "legal_name": "Nome Legal da Empresa", "establishment": { "format":"mei", "date":"2012-04-25" } } 
json=None</msg>
<msg timestamp="20210322 03:26:31.746" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:26:31.056" endtime="20210322 03:26:31.746"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:26:31.746" level="INFO">{'id': 'b89f49fac63f46e59f0b660f51d66587', 'name': 'Holder de teste', 'revenue': 1005500.0, 'email': 'contato@teste.com.br', 'status': 'waiting_info_and_documents', 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'marketplace_name': 'Marketplace de Teste', 'created_at': '2021-03-22T03:26:32.576273', 'updated_at': '2021-03-22T03:26:32.576275', 'type': 'business', 'national_registration': '57091438000140', 'legal_name': 'Nome Legal da Empresa', 'establishment': {'format': 'mei', 'date': '2012-04-25'}, 'cnae': '0111301', '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/b89f49fac63f46e59f0b660f51d66587', 'type': 'GET'}, 'phones': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/b89f49fac63f46e59f0b660f51d66587/phones', 'type': 'GET'}, 'addresses': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/b89f49fac63f46e59f0b660f51d66587/addresses', 'type': 'GET'}, 'documents': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/b89f49fac63f46e59f0b660f51d66587/documents', 'type': 'GET'}, 'partners': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/b89f49fac63f46e59f0b660f51d66587/partners', 'type': 'GET'}, 'associates': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/b89f49fac63f46e59f0b660f51d66587/associates', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 03:26:31.746" endtime="20210322 03:26:31.746"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:26:31.747" level="INFO">f69e142e3d4c2cf8</msg>
<status status="PASS" starttime="20210322 03:26:31.747" endtime="20210322 03:26:31.747"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${body}</arg>
</arguments>
<msg timestamp="20210322 03:26:31.747" level="INFO">{ "type": "business", "name": "Holder de teste", "email": "contato@teste.com.br", "national_registration": "57091438000140", "revenue": 1005500.00, "cnae": "0111301", "legal_name": "Nome Legal da Empresa", "establishment": { "format":"mei", "date":"2012-04-25" } }</msg>
<status status="PASS" starttime="20210322 03:26:31.747" endtime="20210322 03:26:31.747"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:26:31.748" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:26:31.747" endtime="20210322 03:26:31.748"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${holder_external_key}</var>
</assign>
<msg timestamp="20210322 03:26:31.748" level="INFO">${holder_external_key} = b89f49fac63f46e59f0b660f51d66587</msg>
<status status="PASS" starttime="20210322 03:26:31.748" endtime="20210322 03:26:31.748"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_external_key}</arg>
</arguments>
<msg timestamp="20210322 03:26:31.748" level="INFO">${holder_external_key} = b89f49fac63f46e59f0b660f51d66587</msg>
<status status="PASS" starttime="20210322 03:26:31.748" endtime="20210322 03:26:31.749"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:31.050" endtime="20210322 03:26:31.749"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 03:26:31.749" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:26:31.749" endtime="20210322 03:26:31.749"></status>
</kw>
<kw name="criar holder phone" library="accreditation_post_holder_phone">
<arguments>
<arg>21</arg>
<arg>51</arg>
<arg>996221236</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:26:31.750" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 03:26:31.750" endtime="20210322 03:26:31.750"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"area_code": "${phone_area_code}",</arg>
<arg>"country_code": "${phone_country_code}",</arg>
<arg>"number": "${phone_number}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 03:26:31.750" level="INFO">${body} = { "area_code": "21", "country_code": "51", "number": "996221236" }</msg>
<status status="PASS" starttime="20210322 03:26:31.750" endtime="20210322 03:26:31.750"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/phones</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:26:31.751" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/b89f49fac63f46e59f0b660f51d66587/phones, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "area_code": "21", "country_code": "51", "number": "996221236" } 
json=None</msg>
<msg timestamp="20210322 03:26:31.979" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:26:31.750" endtime="20210322 03:26:31.979"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:26:31.981" level="INFO">{'id': '56ab1774d5f8475491698cb73afecdee', 'area_code': '21', 'country_code': '51', 'number': '996221236', 'main': True, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/b89f49fac63f46e59f0b660f51d66587/phones/56ab1774d5f8475491698cb73afecdee', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/b89f49fac63f46e59f0b660f51d66587', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 03:26:31.981" endtime="20210322 03:26:31.982"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:26:31.983" level="INFO">3943a80205569ac3</msg>
<status status="PASS" starttime="20210322 03:26:31.982" endtime="20210322 03:26:31.983"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:26:31.986" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:26:31.984" endtime="20210322 03:26:31.986"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${phone_external_key}</var>
</assign>
<msg timestamp="20210322 03:26:31.988" level="INFO">${phone_external_key} = 56ab1774d5f8475491698cb73afecdee</msg>
<status status="PASS" starttime="20210322 03:26:31.987" endtime="20210322 03:26:31.988"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${phone_external_key}</arg>
</arguments>
<msg timestamp="20210322 03:26:31.989" level="INFO">${phone_external_key} = 56ab1774d5f8475491698cb73afecdee</msg>
<status status="PASS" starttime="20210322 03:26:31.988" endtime="20210322 03:26:31.989"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:31.749" endtime="20210322 03:26:31.989"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 03:26:31.990" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:26:31.990" endtime="20210322 03:26:31.990"></status>
</kw>
<kw name="criar holder address" library="accreditation_post_holder_address">
<arguments>
<arg>Rio de Janeiro</arg>
<arg>Rio de Janeiro</arg>
<arg>Brasil</arg>
<arg>Bairro de Testes</arg>
<arg>Rua de Testes</arg>
<arg>90</arg>
<arg>apto 200</arg>
<arg>21550987</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:26:31.992" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 03:26:31.992" endtime="20210322 03:26:31.992"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"city": "${city}",</arg>
<arg>"state": "${state}",</arg>
<arg>"country": "${country}",</arg>
<arg>"neighborhood": "${neighborhood}",</arg>
<arg>"street": "${street}",</arg>
<arg>"number": "${number}",</arg>
<arg>"complement": "${complement}",</arg>
<arg>"postal_code": "${postal_code}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 03:26:31.993" level="INFO">${body} = { "city": "Rio de Janeiro", "state": "Rio de Janeiro", "country": "Brasil", "neighborhood": "Bairro de Testes", "street": "Rua de Testes", "number": "90", "complement": "apto 200", "postal_code": "215...</msg>
<status status="PASS" starttime="20210322 03:26:31.992" endtime="20210322 03:26:31.993"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/addresses</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:26:31.994" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/b89f49fac63f46e59f0b660f51d66587/addresses, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "city": "Rio de Janeiro", "state": "Rio de Janeiro", "country": "Brasil", "neighborhood": "Bairro de Testes", "street": "Rua de Testes", "number": "90", "complement": "apto 200", "postal_code": "21550987" } 
json=None</msg>
<msg timestamp="20210322 03:26:32.245" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:26:31.994" endtime="20210322 03:26:32.245"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:26:32.248" level="INFO">{'id': '350730ac8730434384b7dd5c43f46412', 'street': 'Rua de Testes', 'number': '90', 'city': 'Rio de Janeiro', 'complement': 'apto 200', 'state': 'Rio de Janeiro', 'neighborhood': 'Bairro de Testes', 'postal_code': '21550987', 'country': 'Brasil', 'main': True, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/b89f49fac63f46e59f0b660f51d66587/addresses/350730ac8730434384b7dd5c43f46412', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/b89f49fac63f46e59f0b660f51d66587', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 03:26:32.246" endtime="20210322 03:26:32.248"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:26:32.250" level="INFO">0d8d7f2e8ade0ce7</msg>
<status status="PASS" starttime="20210322 03:26:32.249" endtime="20210322 03:26:32.251"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:26:32.253" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:26:32.251" endtime="20210322 03:26:32.253"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${address_external_key}</var>
</assign>
<msg timestamp="20210322 03:26:32.254" level="INFO">${address_external_key} = 350730ac8730434384b7dd5c43f46412</msg>
<status status="PASS" starttime="20210322 03:26:32.253" endtime="20210322 03:26:32.255"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${address_external_key}</arg>
</arguments>
<msg timestamp="20210322 03:26:32.256" level="INFO">${address_external_key} = 350730ac8730434384b7dd5c43f46412</msg>
<status status="PASS" starttime="20210322 03:26:32.255" endtime="20210322 03:26:32.256"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:31.991" endtime="20210322 03:26:32.256"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 03:26:32.257" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:26:32.257" endtime="20210322 03:26:32.257"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>CCMEI</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:26:32.259" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 03:26:32.258" endtime="20210322 03:26:32.259"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 03:26:32.260" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 03:26:32.262" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 03:26:32.259" endtime="20210322 03:26:32.262"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:26:32.263" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/b89f49fac63f46e59f0b660f51d66587/documents?type=CCMEI, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 03:26:32.529" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:26:32.262" endtime="20210322 03:26:32.529"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:26:32.531" level="INFO">{'id': '20bfc41530f64126b42f15c4cbc51fb6', 'document_type': 'ccmei', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/b89f49fac63f46e59f0b660f51d66587/documents/20bfc41530f64126b42f15c4cbc51fb6', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/b89f49fac63f46e59f0b660f51d66587', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/b89f49fac63f46e59f0b660f51d66587/documents/20bfc41530f64126b42f15c4cbc51fb6/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 03:26:32.529" endtime="20210322 03:26:32.531"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:26:32.533" level="INFO">86790514ce9d268e</msg>
<status status="PASS" starttime="20210322 03:26:32.532" endtime="20210322 03:26:32.533"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:26:32.536" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:26:32.534" endtime="20210322 03:26:32.536"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 03:26:32.538" level="INFO">${document_external_key} = 20bfc41530f64126b42f15c4cbc51fb6</msg>
<status status="PASS" starttime="20210322 03:26:32.537" endtime="20210322 03:26:32.538"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 03:26:32.539" level="INFO">${document_external_key} = 20bfc41530f64126b42f15c4cbc51fb6</msg>
<status status="PASS" starttime="20210322 03:26:32.538" endtime="20210322 03:26:32.539"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:32.258" endtime="20210322 03:26:32.540"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 03:26:32.541" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:26:32.540" endtime="20210322 03:26:32.541"></status>
</kw>
<kw name="Cpf" library="FakerLibrary">
<assign>
<var>${partner_individual_national_registration}</var>
</assign>
<msg timestamp="20210322 03:26:32.542" level="INFO">${partner_individual_national_registration} = 391.207.684-78</msg>
<status status="PASS" starttime="20210322 03:26:32.541" endtime="20210322 03:26:32.542"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${partner_individual_national_registration}</arg>
<arg>.</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${partner_individual_national_registration}</var>
</assign>
<msg timestamp="20210322 03:26:32.544" level="INFO">${partner_individual_national_registration} = 391207684-78</msg>
<status status="PASS" starttime="20210322 03:26:32.543" endtime="20210322 03:26:32.544"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${partner_individual_national_registration}</arg>
<arg>-</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${partner_individual_national_registration}</var>
</assign>
<msg timestamp="20210322 03:26:32.545" level="INFO">${partner_individual_national_registration} = 39120768478</msg>
<status status="PASS" starttime="20210322 03:26:32.544" endtime="20210322 03:26:32.545"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${partner_individual_national_registration}</arg>
</arguments>
<msg timestamp="20210322 03:26:32.546" level="INFO">${partner_individual_national_registration} = 39120768478</msg>
<status status="PASS" starttime="20210322 03:26:32.546" endtime="20210322 03:26:32.546"></status>
</kw>
<kw name="Rg" library="FakerLibrary">
<doc>Brazilian RG, return plain numbers.
Check:  https://www.ngmatematica.com/2014/02/como-determinar-o-digito-verificador-do.html</doc>
<assign>
<var>${partner_individual_identity_card}</var>
</assign>
<msg timestamp="20210322 03:26:32.547" level="INFO">${partner_individual_identity_card} = 215340784</msg>
<status status="PASS" starttime="20210322 03:26:32.547" endtime="20210322 03:26:32.547"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${partner_individual_identity_card}</arg>
</arguments>
<msg timestamp="20210322 03:26:32.548" level="INFO">${partner_individual_identity_card} = 215340784</msg>
<status status="PASS" starttime="20210322 03:26:32.547" endtime="20210322 03:26:32.548"></status>
</kw>
<kw name="criar partner individual" library="accreditation_post_partner_individual">
<arguments>
<arg>partner_individual_type=individual</arg>
<arg>partner_individual_name=${partner_individual_name}</arg>
<arg>partner_individual_email=${partner_individual_email}</arg>
<arg>partner_individual_national_registration=${partner_individual_national_registration}</arg>
<arg>partner_individual_revenue=${partner_individual_revenue}</arg>
<arg>partner_individual_birthday=${partner_individual_birthday}</arg>
<arg>partner_individual_mothers_name=${partner_individual_mothers_name}</arg>
<arg>partner_individual_identity_card=${partner_individual_identity_card}</arg>
<arg>partner_individual_pep=false</arg>
<arg>partner_individual_percentage=100</arg>
<arg>partner_individual_adm=true</arg>
<arg>partner_individual_cbo=${partner_individual_cbo}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:26:32.551" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 03:26:32.550" endtime="20210322 03:26:32.551"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "${partner_individual_type}",</arg>
<arg>"name": "${partner_individual_name}",</arg>
<arg>"email": "${partner_individual_email}",</arg>
<arg>"national_registration": "${partner_individual_national_registration}",</arg>
<arg>"revenue": ${partner_individual_revenue},</arg>
<arg>"birthday": "${partner_individual_birthday}",</arg>
<arg>"mothers_name": "${partner_individual_mothers_name}",</arg>
<arg>"identity_card": "${partner_individual_identity_card}",</arg>
<arg>"pep": false,</arg>
<arg>"percentage": ${partner_individual_percentage},</arg>
<arg>"adm": ${partner_individual_adm},</arg>
<arg>"cbo": ${partner_individual_cbo}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 03:26:32.552" level="INFO">${body} = { "type": "individual", "name": "Individual Partner de teste", "email": "teste@teste.com.br", "national_registration": "39120768478", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe...</msg>
<status status="PASS" starttime="20210322 03:26:32.551" endtime="20210322 03:26:32.552"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/partners</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:26:32.553" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/b89f49fac63f46e59f0b660f51d66587/partners, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "individual", "name": "Individual Partner de teste", "email": "teste@teste.com.br", "national_registration": "39120768478", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Individual Partner", "identity_card": "215340784", "pep": false, "percentage": 100, "adm": true, "cbo": 821450 } 
json=None</msg>
<msg timestamp="20210322 03:26:32.834" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:26:32.553" endtime="20210322 03:26:32.835"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:26:32.837" level="INFO">{'id': 'b22492428bfd42429f1158d9aa84c75b', 'name': 'Individual Partner de teste', 'revenue': 5500.0, 'email': 'teste@teste.com.br', 'created_at': '2021-03-22T03:26:33.58984', 'updated_at': '2021-03-22T03:26:33.589842', 'main': True, 'adm': True, 'percentage': 100.0, 'type': 'individual', 'national_registration': '39120768478', 'birthday': '1988-04-23', 'mothers_name': 'Mãe do Individual Partner', 'identity_card': '215340784', 'pep': False, 'cbo': '821450', '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/b89f49fac63f46e59f0b660f51d66587/partners/b22492428bfd42429f1158d9aa84c75b', 'type': 'GET'}, 'phones': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/b89f49fac63f46e59f0b660f51d66587/partners/b22492428bfd42429f1158d9aa84c75b/phones', 'type': 'GET'}, 'addresses': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/b89f49fac63f46e59f0b660f51d66587/partners/b22492428bfd42429f1158d9aa84c75b/addresses', 'type': 'GET'}, 'documents': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/b89f49fac63f46e59f0b660f51d66587/partners/b22492428bfd42429f1158d9aa84c75b/documents', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/b89f49fac63f46e59f0b660f51d66587', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 03:26:32.836" endtime="20210322 03:26:32.838"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:26:32.840" level="INFO">5f9e0c1b8b66efe4</msg>
<status status="PASS" starttime="20210322 03:26:32.839" endtime="20210322 03:26:32.841"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:26:32.842" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:26:32.842" endtime="20210322 03:26:32.843"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${partner_external_key}</var>
</assign>
<msg timestamp="20210322 03:26:32.847" level="INFO">${partner_external_key} = b22492428bfd42429f1158d9aa84c75b</msg>
<status status="PASS" starttime="20210322 03:26:32.843" endtime="20210322 03:26:32.847"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${partner_external_key}</arg>
</arguments>
<msg timestamp="20210322 03:26:32.848" level="INFO">${partner_external_key} = b22492428bfd42429f1158d9aa84c75b</msg>
<status status="PASS" starttime="20210322 03:26:32.848" endtime="20210322 03:26:32.848"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:32.549" endtime="20210322 03:26:32.849"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 03:26:32.850" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:26:32.849" endtime="20210322 03:26:32.850"></status>
</kw>
<kw name="criar partner phone" library="accreditation_post_partner_phone">
<arguments>
<arg>21</arg>
<arg>51</arg>
<arg>996554785</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:26:32.852" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 03:26:32.852" endtime="20210322 03:26:32.852"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"area_code": "${phone_area_code}",</arg>
<arg>"country_code": "${phone_country_code}",</arg>
<arg>"number": "${phone_number}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 03:26:32.854" level="INFO">${body} = { "area_code": "21", "country_code": "51", "number": "996554785" }</msg>
<status status="PASS" starttime="20210322 03:26:32.853" endtime="20210322 03:26:32.854"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/partners/${partner_external_key}/phones/</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:26:32.855" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/b89f49fac63f46e59f0b660f51d66587/partners/b22492428bfd42429f1158d9aa84c75b/phones/, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "area_code": "21", "country_code": "51", "number": "996554785" } 
json=None</msg>
<msg timestamp="20210322 03:26:33.077" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:26:32.854" endtime="20210322 03:26:33.077"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:26:33.078" level="INFO">{'id': '3cea5e0cf19942a5828d925bb80e444c', 'area_code': '21', 'country_code': '51', 'number': '996554785', 'main': True, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/b89f49fac63f46e59f0b660f51d66587/partners/b22492428bfd42429f1158d9aa84c75b/phones/3cea5e0cf19942a5828d925bb80e444c', 'type': 'GET'}, 'partner': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/b89f49fac63f46e59f0b660f51d66587/partners/b22492428bfd42429f1158d9aa84c75b', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/b89f49fac63f46e59f0b660f51d66587', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 03:26:33.078" endtime="20210322 03:26:33.079"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:26:33.080" level="INFO">2f6ba2de65eb5700</msg>
<status status="PASS" starttime="20210322 03:26:33.079" endtime="20210322 03:26:33.080"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:26:33.081" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:26:33.080" endtime="20210322 03:26:33.081"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${holder_external_key}</var>
</assign>
<msg timestamp="20210322 03:26:33.082" level="INFO">${holder_external_key} = 3cea5e0cf19942a5828d925bb80e444c</msg>
<status status="PASS" starttime="20210322 03:26:33.081" endtime="20210322 03:26:33.082"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${phone_external_key}</arg>
</arguments>
<msg timestamp="20210322 03:26:33.083" level="INFO">${phone_external_key} = 56ab1774d5f8475491698cb73afecdee</msg>
<status status="PASS" starttime="20210322 03:26:33.083" endtime="20210322 03:26:33.083"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:32.851" endtime="20210322 03:26:33.083"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 03:26:33.084" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:26:33.084" endtime="20210322 03:26:33.084"></status>
</kw>
<kw name="criar partner address" library="accreditation_post_partner_address">
<arguments>
<arg>Rio de Janeiro</arg>
<arg>Rio de Janeiro</arg>
<arg>Brasil</arg>
<arg>Bairro de Testes</arg>
<arg>Rua de Testes</arg>
<arg>61</arg>
<arg>apto 201</arg>
<arg>21550478</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:26:33.086" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 03:26:33.085" endtime="20210322 03:26:33.086"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"city": "${city}",</arg>
<arg>"state": "${state}",</arg>
<arg>"country": "${country}",</arg>
<arg>"neighborhood": "${neighborhood}",</arg>
<arg>"street": "${street}",</arg>
<arg>"number": "${number}",</arg>
<arg>"complement": "${complement}",</arg>
<arg>"postal_code": "${postal_code}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 03:26:33.087" level="INFO">${body} = { "city": "Rio de Janeiro", "state": "Rio de Janeiro", "country": "Brasil", "neighborhood": "Bairro de Testes", "street": "Rua de Testes", "number": "61", "complement": "apto 201", "postal_code": "215...</msg>
<status status="PASS" starttime="20210322 03:26:33.086" endtime="20210322 03:26:33.087"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/partners/${partner_external_key}/addresses</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:26:33.088" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/b89f49fac63f46e59f0b660f51d66587/partners/b22492428bfd42429f1158d9aa84c75b/addresses, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "city": "Rio de Janeiro", "state": "Rio de Janeiro", "country": "Brasil", "neighborhood": "Bairro de Testes", "street": "Rua de Testes", "number": "61", "complement": "apto 201", "postal_code": "21550478" } 
json=None</msg>
<msg timestamp="20210322 03:26:33.311" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:26:33.087" endtime="20210322 03:26:33.311"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:26:33.314" level="INFO">{'id': '160cdf42fa1940fbbe93158e75e7ad3e', 'street': 'Rua de Testes', 'number': '61', 'city': 'Rio de Janeiro', 'complement': 'apto 201', 'state': 'Rio de Janeiro', 'neighborhood': 'Bairro de Testes', 'postal_code': '21550478', 'country': 'Brasil', 'main': True, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/b89f49fac63f46e59f0b660f51d66587/partners/b22492428bfd42429f1158d9aa84c75b/addresses/160cdf42fa1940fbbe93158e75e7ad3e', 'type': 'GET'}, 'partner': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/b89f49fac63f46e59f0b660f51d66587/partners/b22492428bfd42429f1158d9aa84c75b', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/b89f49fac63f46e59f0b660f51d66587', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 03:26:33.312" endtime="20210322 03:26:33.314"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:26:33.316" level="INFO">3935482a90d98ccc</msg>
<status status="PASS" starttime="20210322 03:26:33.315" endtime="20210322 03:26:33.316"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:26:33.318" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:26:33.317" endtime="20210322 03:26:33.318"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${address_external_key}</var>
</assign>
<msg timestamp="20210322 03:26:33.320" level="INFO">${address_external_key} = 160cdf42fa1940fbbe93158e75e7ad3e</msg>
<status status="PASS" starttime="20210322 03:26:33.318" endtime="20210322 03:26:33.320"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${address_external_key}</arg>
</arguments>
<msg timestamp="20210322 03:26:33.321" level="INFO">${address_external_key} = 160cdf42fa1940fbbe93158e75e7ad3e</msg>
<status status="PASS" starttime="20210322 03:26:33.320" endtime="20210322 03:26:33.321"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:33.085" endtime="20210322 03:26:33.321"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 03:26:33.322" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:26:33.322" endtime="20210322 03:26:33.323"></status>
</kw>
<kw name="criar partner document" library="accreditation_post_partner_document">
<arguments>
<arg>SELFIE</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:26:33.324" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 03:26:33.324" endtime="20210322 03:26:33.324"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 03:26:33.325" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 03:26:33.327" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 03:26:33.324" endtime="20210322 03:26:33.327"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/partners/${partner_externaL_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:26:33.329" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/b89f49fac63f46e59f0b660f51d66587/partners/b22492428bfd42429f1158d9aa84c75b/documents?type=SELFIE, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 03:26:33.598" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:26:33.328" endtime="20210322 03:26:33.598"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:26:33.602" level="INFO">{'id': '8eda4c155dfd441f8c4ae62851055e4f', 'document_type': 'selfie', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/b89f49fac63f46e59f0b660f51d66587/partners/b22492428bfd42429f1158d9aa84c75b/documents/8eda4c155dfd441f8c4ae62851055e4f', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/b89f49fac63f46e59f0b660f51d66587', 'type': 'GET'}, 'partner': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/b89f49fac63f46e59f0b660f51d66587/partners/b22492428bfd42429f1158d9aa84c75b', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/b89f49fac63f46e59f0b660f51d66587/partners/b22492428bfd42429f1158d9aa84c75b/documents/8eda4c155dfd441f8c4ae62851055e4f/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 03:26:33.599" endtime="20210322 03:26:33.603"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:26:33.606" level="INFO">a80e3cda7c7633d5</msg>
<status status="PASS" starttime="20210322 03:26:33.604" endtime="20210322 03:26:33.607"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:26:33.609" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:26:33.608" endtime="20210322 03:26:33.609"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 03:26:33.610" level="INFO">${document_external_key} = 8eda4c155dfd441f8c4ae62851055e4f</msg>
<status status="PASS" starttime="20210322 03:26:33.609" endtime="20210322 03:26:33.610"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 03:26:33.610" level="INFO">${document_external_key} = 8eda4c155dfd441f8c4ae62851055e4f</msg>
<status status="PASS" starttime="20210322 03:26:33.610" endtime="20210322 03:26:33.610"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:33.323" endtime="20210322 03:26:33.610"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 03:26:33.611" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:26:33.611" endtime="20210322 03:26:33.611"></status>
</kw>
<kw name="criar partner document" library="accreditation_post_partner_document">
<arguments>
<arg>RG_FRENTE</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:26:33.612" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 03:26:33.612" endtime="20210322 03:26:33.612"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 03:26:33.612" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 03:26:33.614" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 03:26:33.612" endtime="20210322 03:26:33.614"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/partners/${partner_externaL_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:26:33.615" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/b89f49fac63f46e59f0b660f51d66587/partners/b22492428bfd42429f1158d9aa84c75b/documents?type=RG_FRENTE, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 03:26:33.905" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:26:33.614" endtime="20210322 03:26:33.905"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:26:33.907" level="INFO">{'id': '5b6da3b8b218491bb1ccae1ab9bb72fd', 'document_type': 'rg_frente', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/b89f49fac63f46e59f0b660f51d66587/partners/b22492428bfd42429f1158d9aa84c75b/documents/5b6da3b8b218491bb1ccae1ab9bb72fd', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/b89f49fac63f46e59f0b660f51d66587', 'type': 'GET'}, 'partner': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/b89f49fac63f46e59f0b660f51d66587/partners/b22492428bfd42429f1158d9aa84c75b', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/b89f49fac63f46e59f0b660f51d66587/partners/b22492428bfd42429f1158d9aa84c75b/documents/5b6da3b8b218491bb1ccae1ab9bb72fd/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 03:26:33.906" endtime="20210322 03:26:33.907"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:26:33.909" level="INFO">0382f7d1cca5fb2c</msg>
<status status="PASS" starttime="20210322 03:26:33.908" endtime="20210322 03:26:33.910"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:26:33.912" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:26:33.911" endtime="20210322 03:26:33.912"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 03:26:33.915" level="INFO">${document_external_key} = 5b6da3b8b218491bb1ccae1ab9bb72fd</msg>
<status status="PASS" starttime="20210322 03:26:33.913" endtime="20210322 03:26:33.915"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 03:26:33.917" level="INFO">${document_external_key} = 5b6da3b8b218491bb1ccae1ab9bb72fd</msg>
<status status="PASS" starttime="20210322 03:26:33.916" endtime="20210322 03:26:33.917"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:33.612" endtime="20210322 03:26:33.917"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 03:26:33.918" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:26:33.918" endtime="20210322 03:26:33.919"></status>
</kw>
<kw name="criar partner document" library="accreditation_post_partner_document">
<arguments>
<arg>RG_VERSO</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:26:33.921" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 03:26:33.920" endtime="20210322 03:26:33.921"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 03:26:33.922" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 03:26:33.925" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 03:26:33.921" endtime="20210322 03:26:33.925"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/partners/${partner_externaL_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:26:33.926" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/b89f49fac63f46e59f0b660f51d66587/partners/b22492428bfd42429f1158d9aa84c75b/documents?type=RG_VERSO, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 03:26:34.213" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:26:33.925" endtime="20210322 03:26:34.214"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:26:34.216" level="INFO">{'id': 'f8e7070c6c6f4bc48fedad7be3ab98d0', 'document_type': 'rg_verso', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/b89f49fac63f46e59f0b660f51d66587/partners/b22492428bfd42429f1158d9aa84c75b/documents/f8e7070c6c6f4bc48fedad7be3ab98d0', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/b89f49fac63f46e59f0b660f51d66587', 'type': 'GET'}, 'partner': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/b89f49fac63f46e59f0b660f51d66587/partners/b22492428bfd42429f1158d9aa84c75b', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/b89f49fac63f46e59f0b660f51d66587/partners/b22492428bfd42429f1158d9aa84c75b/documents/f8e7070c6c6f4bc48fedad7be3ab98d0/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 03:26:34.215" endtime="20210322 03:26:34.216"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:26:34.218" level="INFO">77e894ad35f53a84</msg>
<status status="PASS" starttime="20210322 03:26:34.217" endtime="20210322 03:26:34.218"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:26:34.220" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:26:34.219" endtime="20210322 03:26:34.221"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 03:26:34.223" level="INFO">${document_external_key} = f8e7070c6c6f4bc48fedad7be3ab98d0</msg>
<status status="PASS" starttime="20210322 03:26:34.221" endtime="20210322 03:26:34.223"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 03:26:34.225" level="INFO">${document_external_key} = f8e7070c6c6f4bc48fedad7be3ab98d0</msg>
<status status="PASS" starttime="20210322 03:26:34.224" endtime="20210322 03:26:34.225"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:33.919" endtime="20210322 03:26:34.226"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 03:26:34.227" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:26:34.226" endtime="20210322 03:26:34.227"></status>
</kw>
<kw name="solicitar aprovação do holder" library="accreditation_request_approval">
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:26:34.229" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 03:26:34.229" endtime="20210322 03:26:34.229"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/approval</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:26:34.231" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/b89f49fac63f46e59f0b660f51d66587/approval, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data=None 
json=None</msg>
<msg timestamp="20210322 03:26:34.507" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:26:34.230" endtime="20210322 03:26:34.507"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:26:34.509" level="INFO">{'message': 'Approval request accepted successfully. Processing analysis'}</msg>
<status status="PASS" starttime="20210322 03:26:34.508" endtime="20210322 03:26:34.509"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:26:34.511" level="INFO">884b6515adef220e</msg>
<status status="PASS" starttime="20210322 03:26:34.510" endtime="20210322 03:26:34.512"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:26:34.514" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:26:34.512" endtime="20210322 03:26:34.515"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:34.228" endtime="20210322 03:26:34.515"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 03:26:34.516" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:26:34.515" endtime="20210322 03:26:34.516"></status>
</kw>
<kw name="recebendo notificação de aprovação" library="accreditation_risk_notification">
<kw name="Uuid 4" library="FakerLibrary">
<doc>Generates a random UUID4 string.
:param cast_to: Specify what type the UUID should be cast to. Default is `str`
:type cast_to: callable</doc>
<assign>
<var>${assessment_id}</var>
</assign>
<msg timestamp="20210322 03:26:34.518" level="INFO">${assessment_id} = 359bb9ca-1b89-4237-a1eb-8ac8364a7c44</msg>
<status status="PASS" starttime="20210322 03:26:34.518" endtime="20210322 03:26:34.518"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>year</arg>
</arguments>
<assign>
<var>${year}</var>
</assign>
<msg timestamp="20210322 03:26:34.520" level="INFO">${year} = 2021</msg>
<status status="PASS" starttime="20210322 03:26:34.519" endtime="20210322 03:26:34.520"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>month</arg>
</arguments>
<assign>
<var>${month}</var>
</assign>
<msg timestamp="20210322 03:26:34.521" level="INFO">${month} = 03</msg>
<status status="PASS" starttime="20210322 03:26:34.520" endtime="20210322 03:26:34.521"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>day</arg>
</arguments>
<assign>
<var>${day}</var>
</assign>
<msg timestamp="20210322 03:26:34.522" level="INFO">${day} = 22</msg>
<status status="PASS" starttime="20210322 03:26:34.521" endtime="20210322 03:26:34.522"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:26:34.523" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 03:26:34.523" endtime="20210322 03:26:34.523"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "risk.assessment.result",</arg>
<arg>"resource": "business.holder",</arg>
<arg>"created_at": "${year}-${month}-${day} 15:28:56.747Z",</arg>
<arg>"marketplace_id": "${marketplace_external_key}",</arg>
<arg>"object": {</arg>
<arg>"result": "APPROVED",</arg>
<arg>"holder_id": "${holder_external_key}",</arg>
<arg>"applicant_id": "${application_external_key}",</arg>
<arg>"assessment_id": "${assessment_id}"</arg>
<arg>}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 03:26:34.525" level="INFO">${body} = { "type": "risk.assessment.result", "resource": "business.holder", "created_at": "2021-03-22 15:28:56.747Z", "marketplace_id": "f71a8951368a4cc085cf7875ff44e61c", "object": { "result": "APPROVED", "ho...</msg>
<status status="PASS" starttime="20210322 03:26:34.524" endtime="20210322 03:26:34.525"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/admin/internal_operation/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/registration/approval</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:26:34.526" level="INFO">POST Request using : uri=/admin/internal_operation/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/b89f49fac63f46e59f0b660f51d66587/registration/approval, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "risk.assessment.result", "resource": "business.holder", "created_at": "2021-03-22 15:28:56.747Z", "marketplace_id": "f71a8951368a4cc085cf7875ff44e61c", "object": { "result": "APPROVED", "holder_id": "b89f49fac63f46e59f0b660f51d66587", "applicant_id": "bcc25a6751c14b52af1340d40dba78c5", "assessment_id": "359bb9ca-1b89-4237-a1eb-8ac8364a7c44" } } 
json=None</msg>
<msg timestamp="20210322 03:26:34.721" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:26:34.525" endtime="20210322 03:26:34.721"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:26:34.722" level="INFO">{'message': 'Holder approved successfully'}</msg>
<status status="PASS" starttime="20210322 03:26:34.721" endtime="20210322 03:26:34.722"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:26:34.723" level="INFO">932e63d86c947cbd</msg>
<status status="PASS" starttime="20210322 03:26:34.723" endtime="20210322 03:26:34.723"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:26:34.725" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:26:34.724" endtime="20210322 03:26:34.725"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 03:26:34.726" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:26:34.725" endtime="20210322 03:26:34.726"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:34.517" endtime="20210322 03:26:34.726"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 03:26:34.727" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:26:34.727" endtime="20210322 03:26:34.727"></status>
</kw>
<kw name="buscar account por holder" library="accounts_get_accounts_by_holder">
<kw name="conectar accounts" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accounts</arg>
<arg>url=${account_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 03:26:34.730" level="INFO">Creating Session using : alias=accounts, url=https://banking-accounts-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 03:26:34.729" endtime="20210322 03:26:34.731"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:34.729" endtime="20210322 03:26:34.731"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accounts</arg>
<arg>/marketplaces/${marketplace_external_key}/holders/${holder_external_key}/accounts</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:26:34.732" level="INFO">GET Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/holders/b89f49fac63f46e59f0b660f51d66587/accounts, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 03:26:35.386" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:26:34.731" endtime="20210322 03:26:35.387"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:26:35.390" level="INFO">{'items': [{'id': '76b70d6398464352b005cceb1e6c45d0', 'holder': 'b89f49fac63f46e59f0b660f51d66587', 'balance': '0.00', 'currency': 'BRL', 'routing_number': '001', 'number': '4665791798', 'status': 'active', 'metadata': {}, 'created_at': '2021-03-22T06:26:35.571803', 'updated_at': '2021-03-22T06:26:35.571803', 'primary': True, 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'uri': '/v2/marketplaces/f71a8951368a4cc085cf7875ff44e61c/accounts/76b70d6398464352b005cceb1e6c45d0', 'resource': 'payment_account'}], 'has_more': False, 'limit': 100, 'total_pages': 1, 'page': 1, 'offset': 0, 'total': '1', 'query_count': '1'}</msg>
<status status="PASS" starttime="20210322 03:26:35.388" endtime="20210322 03:26:35.390"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:26:35.392" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:26:35.391" endtime="20210322 03:26:35.393"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["id"]}</arg>
</arguments>
<assign>
<var>${account_external_key}</var>
</assign>
<msg timestamp="20210322 03:26:35.395" level="INFO">${account_external_key} = 76b70d6398464352b005cceb1e6c45d0</msg>
<status status="PASS" starttime="20210322 03:26:35.394" endtime="20210322 03:26:35.395"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_external_key}</arg>
</arguments>
<msg timestamp="20210322 03:26:35.396" level="INFO">${account_external_key} = 76b70d6398464352b005cceb1e6c45d0</msg>
<status status="PASS" starttime="20210322 03:26:35.396" endtime="20210322 03:26:35.397"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["number"]}</arg>
</arguments>
<assign>
<var>${account_number}</var>
</assign>
<msg timestamp="20210322 03:26:35.398" level="INFO">${account_number} = 4665791798</msg>
<status status="PASS" starttime="20210322 03:26:35.397" endtime="20210322 03:26:35.399"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_number}</arg>
</arguments>
<msg timestamp="20210322 03:26:35.400" level="INFO">${account_number} = 4665791798</msg>
<status status="PASS" starttime="20210322 03:26:35.399" endtime="20210322 03:26:35.400"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["routing_number"]}</arg>
</arguments>
<assign>
<var>${account_routing_number}</var>
</assign>
<msg timestamp="20210322 03:26:35.401" level="INFO">${account_routing_number} = 001</msg>
<status status="PASS" starttime="20210322 03:26:35.400" endtime="20210322 03:26:35.401"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_routing_number}</arg>
</arguments>
<msg timestamp="20210322 03:26:35.402" level="INFO">${account_routing_number} = 001</msg>
<status status="PASS" starttime="20210322 03:26:35.402" endtime="20210322 03:26:35.402"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:34.728" endtime="20210322 03:26:35.402"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 03:26:35.404" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:26:35.403" endtime="20210322 03:26:35.404"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:31.044" endtime="20210322 03:26:35.404"></status>
</kw>
<kw name="criar chave pix" library="pix_dict_create_entry">
<arguments>
<arg>type=national_registration</arg>
<arg>value=${EMPTY}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 03:26:35.407" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 03:26:35.406" endtime="20210322 03:26:35.407"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:35.406" endtime="20210322 03:26:35.407"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${type}</arg>
</arguments>
<msg timestamp="20210322 03:26:35.408" level="INFO">${type} = national_registration</msg>
<status status="PASS" starttime="20210322 03:26:35.407" endtime="20210322 03:26:35.408"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210322 03:26:35.409" level="INFO">${value} = </msg>
<status status="PASS" starttime="20210322 03:26:35.408" endtime="20210322 03:26:35.409"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:26:35.410" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 03:26:35.409" endtime="20210322 03:26:35.410"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "${type}",</arg>
<arg>"value": "${value}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 03:26:35.410" level="INFO">${body} = { "type": "national_registration", "value": "" }</msg>
<status status="PASS" starttime="20210322 03:26:35.410" endtime="20210322 03:26:35.410"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:26:35.411" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/b89f49fac63f46e59f0b660f51d66587/accounts/76b70d6398464352b005cceb1e6c45d0/entries, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "national_registration", "value": "" } 
json=None</msg>
<msg timestamp="20210322 03:26:36.978" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:26:35.410" endtime="20210322 03:26:36.978"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:26:36.981" level="INFO">{'id': '174e9d9bcea24e23becbc089b3813cc9', 'status': 'active', 'created_at': '2021-03-22T03:26:36.938', 'updated_at': '2021-03-22T03:26:36.938', 'key': {'value': '57091438000140', 'type': 'national_registration'}, 'account': {'id': '76b70d6398464352b005cceb1e6c45d0', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': 'b89f49fac63f46e59f0b660f51d66587', 'owner': {'name': 'Nome Legal da Empresa', 'national_registration': '57091438000140', 'type': 'business'}, 'routing_number': '001', 'number': '4665791798', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}, 'resource': 'pix.entry'}</msg>
<status status="PASS" starttime="20210322 03:26:36.979" endtime="20210322 03:26:36.981"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:26:36.983" level="INFO">48add96b2c7a1745</msg>
<status status="PASS" starttime="20210322 03:26:36.982" endtime="20210322 03:26:36.983"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 03:26:36.985" level="INFO">201</msg>
<status status="PASS" starttime="20210322 03:26:36.984" endtime="20210322 03:26:36.985"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:26:36.987" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:26:36.986" endtime="20210322 03:26:36.987"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${entry_external_key}</var>
</assign>
<msg timestamp="20210322 03:26:36.990" level="INFO">${entry_external_key} = 174e9d9bcea24e23becbc089b3813cc9</msg>
<status status="PASS" starttime="20210322 03:26:36.988" endtime="20210322 03:26:36.990"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${entry_external_key}</arg>
</arguments>
<msg timestamp="20210322 03:26:36.992" level="INFO">${entry_external_key} = 174e9d9bcea24e23becbc089b3813cc9</msg>
<status status="PASS" starttime="20210322 03:26:36.991" endtime="20210322 03:26:36.992"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["key"]["value"]}</arg>
</arguments>
<assign>
<var>${entry_key_value}</var>
</assign>
<msg timestamp="20210322 03:26:36.994" level="INFO">${entry_key_value} = 57091438000140</msg>
<status status="PASS" starttime="20210322 03:26:36.993" endtime="20210322 03:26:36.994"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${entry_key_value}</arg>
</arguments>
<msg timestamp="20210322 03:26:36.995" level="INFO">${entry_key_value} = 57091438000140</msg>
<status status="PASS" starttime="20210322 03:26:36.994" endtime="20210322 03:26:36.995"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:35.404" endtime="20210322 03:26:36.996"></status>
</kw>
<kw name="validar criação da chave pix" library="asserts">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando status_code</arg>
</arguments>
<msg timestamp="20210322 03:26:36.997" level="INFO">Validando status_code</msg>
<status status="PASS" starttime="20210322 03:26:36.997" endtime="20210322 03:26:36.997"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${type}' == 'evp'</arg>
<arg>Should Be Equal As Integers</arg>
<arg>${response.status_code}</arg>
<arg>201</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'phone'</arg>
<arg>Should Be Equal As Integers</arg>
<arg>${response.status_code}</arg>
<arg>202</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'email'</arg>
<arg>Should Be Equal As Integers</arg>
<arg>${response.status_code}</arg>
<arg>202</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'national_registration'</arg>
<arg>Should Be Equal As Integers</arg>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 03:26:37.001" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:26:37.000" endtime="20210322 03:26:37.001"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:36.998" endtime="20210322 03:26:37.001"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar status da chave</arg>
</arguments>
<msg timestamp="20210322 03:26:37.002" level="INFO">Validar status da chave</msg>
<status status="PASS" starttime="20210322 03:26:37.002" endtime="20210322 03:26:37.002"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${type}' == 'evp'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["status"]}</arg>
<arg>active</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'phone'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["status"]}</arg>
<arg>waiting_ownership_verification</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'email'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["status"]}</arg>
<arg>waiting_ownership_verification</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'national_registration'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["status"]}</arg>
<arg>active</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["status"]}</arg>
<arg>active</arg>
</arguments>
<status status="PASS" starttime="20210322 03:26:37.004" endtime="20210322 03:26:37.005"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:37.002" endtime="20210322 03:26:37.005"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando Tipo da chave PIX</arg>
</arguments>
<msg timestamp="20210322 03:26:37.005" level="INFO">Validando Tipo da chave PIX</msg>
<status status="PASS" starttime="20210322 03:26:37.005" endtime="20210322 03:26:37.005"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${type}' == 'evp'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["type"]}</arg>
<arg>${type}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'phone'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["type"]}</arg>
<arg>${type}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'email'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["type"]}</arg>
<arg>${type}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'national_registration'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["type"]}</arg>
<arg>${type}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["key"]["type"]}</arg>
<arg>${type}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:26:37.007" endtime="20210322 03:26:37.008"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:37.006" endtime="20210322 03:26:37.008"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando Valor da chave PIX</arg>
</arguments>
<msg timestamp="20210322 03:26:37.009" level="INFO">Validando Valor da chave PIX</msg>
<status status="PASS" starttime="20210322 03:26:37.008" endtime="20210322 03:26:37.009"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${type}' == 'evp'</arg>
<arg>Should Not Be Empty</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'phone'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${phone_pix}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'email'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${email_pix}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'national_registration'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${national_registration}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${national_registration}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:26:37.011" endtime="20210322 03:26:37.012"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:37.009" endtime="20210322 03:26:37.012"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando dados da conta</arg>
</arguments>
<msg timestamp="20210322 03:26:37.013" level="INFO">Validando dados da conta</msg>
<status status="PASS" starttime="20210322 03:26:37.012" endtime="20210322 03:26:37.013"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["id"]}</arg>
<arg>${account_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:26:37.013" endtime="20210322 03:26:37.014"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["marketplace"]}</arg>
<arg>${marketplace_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:26:37.015" endtime="20210322 03:26:37.015"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["holder"]}</arg>
<arg>${holder_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:26:37.016" endtime="20210322 03:26:37.017"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["number"]}</arg>
<arg>${account_number}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:26:37.017" endtime="20210322 03:26:37.018"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["routing_number"]}</arg>
<arg>${account_routing_number}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:26:37.019" endtime="20210322 03:26:37.019"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["type"]}</arg>
<arg>CACC</arg>
</arguments>
<status status="PASS" starttime="20210322 03:26:37.020" endtime="20210322 03:26:37.020"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar Proprietário da Account Owner</arg>
</arguments>
<msg timestamp="20210322 03:26:37.021" level="INFO">Validar Proprietário da Account Owner</msg>
<status status="PASS" starttime="20210322 03:26:37.021" endtime="20210322 03:26:37.021"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${holder_type}' == 'individual'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["account"]["owner"]["name"]}</arg>
<arg>${holder_name}</arg>
<arg>ELSE IF</arg>
<arg>'${holder_type}' == 'business'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["account"]["owner"]["name"]}</arg>
<arg>${legal_name}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["account"]["owner"]["name"]}</arg>
<arg>${legal_name}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:26:37.023" endtime="20210322 03:26:37.024"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:37.022" endtime="20210322 03:26:37.024"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar national_registration da Account Owner</arg>
</arguments>
<msg timestamp="20210322 03:26:37.024" level="INFO">Validar national_registration da Account Owner</msg>
<status status="PASS" starttime="20210322 03:26:37.024" endtime="20210322 03:26:37.024"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${holder_type}' == 'individual'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["account"]["owner"]["national_registration"]}</arg>
<arg>${national_registration}</arg>
<arg>ELSE IF</arg>
<arg>'${holder_type}' == 'business'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["account"]["owner"]["national_registration"]}</arg>
<arg>${national_registration}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["account"]["owner"]["national_registration"]}</arg>
<arg>${national_registration}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:26:37.026" endtime="20210322 03:26:37.027"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:37.025" endtime="20210322 03:26:37.027"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar Holder Type do Account Owner</arg>
</arguments>
<msg timestamp="20210322 03:26:37.027" level="INFO">Validar Holder Type do Account Owner</msg>
<status status="PASS" starttime="20210322 03:26:37.027" endtime="20210322 03:26:37.027"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${holder_type}' == 'individual'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["account"]["owner"]["type"]}</arg>
<arg>${holder_type}</arg>
<arg>ELSE IF</arg>
<arg>'${holder_type}' == 'business'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["account"]["owner"]["type"]}</arg>
<arg>${holder_type}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["account"]["owner"]["type"]}</arg>
<arg>${holder_type}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:26:37.029" endtime="20210322 03:26:37.030"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:37.028" endtime="20210322 03:26:37.030"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar PSP</arg>
</arguments>
<msg timestamp="20210322 03:26:37.030" level="INFO">Validar PSP</msg>
<status status="PASS" starttime="20210322 03:26:37.030" endtime="20210322 03:26:37.031"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["psp"]["code"]}</arg>
<arg>19468242</arg>
</arguments>
<status status="PASS" starttime="20210322 03:26:37.031" endtime="20210322 03:26:37.032"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["psp"]["name"]}</arg>
<arg>Zoop Tecnologia e Meios de Pagamento S.A.</arg>
</arguments>
<status status="PASS" starttime="20210322 03:26:37.032" endtime="20210322 03:26:37.033"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:36.996" endtime="20210322 03:26:37.033"></status>
</kw>
<doc>Fluxo Básico</doc>
<tags>
<tag>regression_test</tag>
<tag>smoke_test</tag>
</tags>
<status status="PASS" starttime="20210322 03:26:31.043" endtime="20210322 03:26:37.033" critical="yes"></status>
</test>
<doc>Funcionalidade: Criar Chave de Endereçamento
Eu, como um Holder, portador de uma conta ativa em Banking
Desejo criar uma chave de endereçamento PIX associada à minha conta</doc>
<status status="PASS" starttime="20210322 03:26:13.263" endtime="20210322 03:26:37.035"></status>
</suite>
<suite id="s1-s1-s4" name="Excluir Chave de Endereçamento" source="C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\tests\pix-dict\diretorio\Excluir Chave de Endereçamento.robot">
<test id="s1-s1-s4-t1" name="Cenário: Excluir chave de endereçamento EVP">
<kw name="criar holder individual ativo" library="accreditation_create_holder_active">
<kw name="conectar accreditation" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accreditation</arg>
<arg>url=${accreditation_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 03:26:37.112" level="INFO">Creating Session using : alias=accreditation, url=https://banking-accreditation-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 03:26:37.112" endtime="20210322 03:26:37.113"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:37.111" endtime="20210322 03:26:37.113"></status>
</kw>
<kw name="Cpf" library="FakerLibrary">
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 03:26:37.114" level="INFO">${national_registration} = 321.576.480-62</msg>
<status status="PASS" starttime="20210322 03:26:37.113" endtime="20210322 03:26:37.114"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${national_registration}</arg>
<arg>.</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 03:26:37.114" level="INFO">${national_registration} = 321576480-62</msg>
<status status="PASS" starttime="20210322 03:26:37.114" endtime="20210322 03:26:37.114"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${national_registration}</arg>
<arg>-</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 03:26:37.115" level="INFO">${national_registration} = 32157648062</msg>
<status status="PASS" starttime="20210322 03:26:37.115" endtime="20210322 03:26:37.115"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${national_registration}</arg>
</arguments>
<msg timestamp="20210322 03:26:37.116" level="INFO">${national_registration} = 32157648062</msg>
<status status="PASS" starttime="20210322 03:26:37.116" endtime="20210322 03:26:37.116"></status>
</kw>
<kw name="Rg" library="FakerLibrary">
<doc>Brazilian RG, return plain numbers.
Check:  https://www.ngmatematica.com/2014/02/como-determinar-o-digito-verificador-do.html</doc>
<assign>
<var>${identity_card}</var>
</assign>
<msg timestamp="20210322 03:26:37.117" level="INFO">${identity_card} = 304675829</msg>
<status status="PASS" starttime="20210322 03:26:37.116" endtime="20210322 03:26:37.117"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${identity_card}</arg>
</arguments>
<msg timestamp="20210322 03:26:37.118" level="INFO">${identity_card} = 304675829</msg>
<status status="PASS" starttime="20210322 03:26:37.117" endtime="20210322 03:26:37.118"></status>
</kw>
<kw name="criar holder individual" library="accreditation_post_holder_individual">
<arguments>
<arg>holder_type=individual</arg>
<arg>holder_name=${holder_name}</arg>
<arg>email=${email}</arg>
<arg>national_registration=${national_registration}</arg>
<arg>revenue=${revenue}</arg>
<arg>birthday=${birthday}</arg>
<arg>mothers_name=${mothers_name}</arg>
<arg>identity_card=${identity_card}</arg>
<arg>pep=false</arg>
<arg>cbo=${cbo}</arg>
</arguments>
<kw name="conectar accreditation" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accreditation</arg>
<arg>url=${accreditation_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 03:26:37.120" level="INFO">Creating Session using : alias=accreditation, url=https://banking-accreditation-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 03:26:37.120" endtime="20210322 03:26:37.121"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:37.119" endtime="20210322 03:26:37.121"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_type}</arg>
</arguments>
<msg timestamp="20210322 03:26:37.122" level="INFO">${holder_type} = individual</msg>
<status status="PASS" starttime="20210322 03:26:37.121" endtime="20210322 03:26:37.122"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_name}</arg>
</arguments>
<msg timestamp="20210322 03:26:37.122" level="INFO">${holder_name} = Holder de teste</msg>
<status status="PASS" starttime="20210322 03:26:37.122" endtime="20210322 03:26:37.122"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:26:37.123" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 03:26:37.123" endtime="20210322 03:26:37.123"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "${holder_type}",</arg>
<arg>"name": "${holder_name}",</arg>
<arg>"email": "${email}",</arg>
<arg>"national_registration": "${national_registration}",</arg>
<arg>"revenue": ${revenue},</arg>
<arg>"birthday": "${birthday}",</arg>
<arg>"mothers_name": "${mothers_name}",</arg>
<arg>"identity_card": "${identity_card}",</arg>
<arg>"pep": false,</arg>
<arg>"cbo": ${cbo}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 03:26:37.124" level="INFO">${body} = { "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "32157648062", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder",...</msg>
<status status="PASS" starttime="20210322 03:26:37.124" endtime="20210322 03:26:37.125"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:26:37.126" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "32157648062", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder", "identity_card": "304675829", "pep": false, "cbo": 821450 } 
json=None</msg>
<msg timestamp="20210322 03:26:37.790" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:26:37.125" endtime="20210322 03:26:37.790"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:26:37.791" level="INFO">{'id': 'bc350711aa5f4f14bc5b8e62e3bf835f', 'name': 'Holder de teste', 'revenue': 5500.0, 'email': 'teste@teste.com.br', 'status': 'waiting_info_and_documents', 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'marketplace_name': 'Marketplace de Teste', 'created_at': '2021-03-22T03:26:38.642516', 'updated_at': '2021-03-22T03:26:38.642519', 'type': 'individual', 'national_registration': '32157648062', 'birthday': '1988-04-23', 'mothers_name': 'Mãe do Holder', 'identity_card': '304675829', 'pep': False, 'cbo': '821450', '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/bc350711aa5f4f14bc5b8e62e3bf835f', 'type': 'GET'}, 'phones': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/bc350711aa5f4f14bc5b8e62e3bf835f/phones', 'type': 'GET'}, 'addresses': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/bc350711aa5f4f14bc5b8e62e3bf835f/addresses', 'type': 'GET'}, 'documents': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/bc350711aa5f4f14bc5b8e62e3bf835f/documents', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 03:26:37.790" endtime="20210322 03:26:37.791"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:26:37.791" level="INFO">8ec1028c01cecfe4</msg>
<status status="PASS" starttime="20210322 03:26:37.791" endtime="20210322 03:26:37.791"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${body}</arg>
</arguments>
<msg timestamp="20210322 03:26:37.792" level="INFO">{ "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "32157648062", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder", "identity_card": "304675829", "pep": false, "cbo": 821450 }</msg>
<status status="PASS" starttime="20210322 03:26:37.791" endtime="20210322 03:26:37.792"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:26:37.792" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:26:37.792" endtime="20210322 03:26:37.792"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${holder_external_key}</var>
</assign>
<msg timestamp="20210322 03:26:37.793" level="INFO">${holder_external_key} = bc350711aa5f4f14bc5b8e62e3bf835f</msg>
<status status="PASS" starttime="20210322 03:26:37.792" endtime="20210322 03:26:37.793"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_external_key}</arg>
</arguments>
<msg timestamp="20210322 03:26:37.793" level="INFO">${holder_external_key} = bc350711aa5f4f14bc5b8e62e3bf835f</msg>
<status status="PASS" starttime="20210322 03:26:37.793" endtime="20210322 03:26:37.793"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:37.118" endtime="20210322 03:26:37.793"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_name}</arg>
</arguments>
<msg timestamp="20210322 03:26:37.794" level="INFO">${holder_name} = Holder de teste</msg>
<status status="PASS" starttime="20210322 03:26:37.793" endtime="20210322 03:26:37.794"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 03:26:37.794" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:26:37.794" endtime="20210322 03:26:37.794"></status>
</kw>
<kw name="criar holder phone" library="accreditation_post_holder_phone">
<arguments>
<arg>21</arg>
<arg>51</arg>
<arg>996221236</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:26:37.795" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 03:26:37.795" endtime="20210322 03:26:37.795"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"area_code": "${phone_area_code}",</arg>
<arg>"country_code": "${phone_country_code}",</arg>
<arg>"number": "${phone_number}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 03:26:37.796" level="INFO">${body} = { "area_code": "21", "country_code": "51", "number": "996221236" }</msg>
<status status="PASS" starttime="20210322 03:26:37.795" endtime="20210322 03:26:37.796"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/phones</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:26:37.796" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/bc350711aa5f4f14bc5b8e62e3bf835f/phones, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "area_code": "21", "country_code": "51", "number": "996221236" } 
json=None</msg>
<msg timestamp="20210322 03:26:38.029" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:26:37.796" endtime="20210322 03:26:38.029"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:26:38.029" level="INFO">{'id': '2310213a2cfd457d9897533b052178ac', 'area_code': '21', 'country_code': '51', 'number': '996221236', 'main': True, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/bc350711aa5f4f14bc5b8e62e3bf835f/phones/2310213a2cfd457d9897533b052178ac', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/bc350711aa5f4f14bc5b8e62e3bf835f', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 03:26:38.029" endtime="20210322 03:26:38.029"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:26:38.030" level="INFO">201997f2be053516</msg>
<status status="PASS" starttime="20210322 03:26:38.029" endtime="20210322 03:26:38.030"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:26:38.030" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:26:38.030" endtime="20210322 03:26:38.030"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${phone_external_key}</var>
</assign>
<msg timestamp="20210322 03:26:38.031" level="INFO">${phone_external_key} = 2310213a2cfd457d9897533b052178ac</msg>
<status status="PASS" starttime="20210322 03:26:38.030" endtime="20210322 03:26:38.031"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${phone_external_key}</arg>
</arguments>
<msg timestamp="20210322 03:26:38.031" level="INFO">${phone_external_key} = 2310213a2cfd457d9897533b052178ac</msg>
<status status="PASS" starttime="20210322 03:26:38.031" endtime="20210322 03:26:38.031"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:37.794" endtime="20210322 03:26:38.031"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 03:26:38.032" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:26:38.031" endtime="20210322 03:26:38.032"></status>
</kw>
<kw name="criar holder address" library="accreditation_post_holder_address">
<arguments>
<arg>Rio de Janeiro</arg>
<arg>Rio de Janeiro</arg>
<arg>Brasil</arg>
<arg>Bairro de Testes</arg>
<arg>Rua de Testes</arg>
<arg>90</arg>
<arg>apto 200</arg>
<arg>21550987</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:26:38.032" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 03:26:38.032" endtime="20210322 03:26:38.032"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"city": "${city}",</arg>
<arg>"state": "${state}",</arg>
<arg>"country": "${country}",</arg>
<arg>"neighborhood": "${neighborhood}",</arg>
<arg>"street": "${street}",</arg>
<arg>"number": "${number}",</arg>
<arg>"complement": "${complement}",</arg>
<arg>"postal_code": "${postal_code}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 03:26:38.033" level="INFO">${body} = { "city": "Rio de Janeiro", "state": "Rio de Janeiro", "country": "Brasil", "neighborhood": "Bairro de Testes", "street": "Rua de Testes", "number": "90", "complement": "apto 200", "postal_code": "215...</msg>
<status status="PASS" starttime="20210322 03:26:38.033" endtime="20210322 03:26:38.033"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/addresses</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:26:38.034" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/bc350711aa5f4f14bc5b8e62e3bf835f/addresses, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "city": "Rio de Janeiro", "state": "Rio de Janeiro", "country": "Brasil", "neighborhood": "Bairro de Testes", "street": "Rua de Testes", "number": "90", "complement": "apto 200", "postal_code": "21550987" } 
json=None</msg>
<msg timestamp="20210322 03:26:38.267" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:26:38.033" endtime="20210322 03:26:38.267"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:26:38.268" level="INFO">{'id': 'd91a12d4db6747dbba61522fe28ee255', 'street': 'Rua de Testes', 'number': '90', 'city': 'Rio de Janeiro', 'complement': 'apto 200', 'state': 'Rio de Janeiro', 'neighborhood': 'Bairro de Testes', 'postal_code': '21550987', 'country': 'Brasil', 'main': True, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/bc350711aa5f4f14bc5b8e62e3bf835f/addresses/d91a12d4db6747dbba61522fe28ee255', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/bc350711aa5f4f14bc5b8e62e3bf835f', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 03:26:38.268" endtime="20210322 03:26:38.268"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:26:38.269" level="INFO">a6203b19a4504f9d</msg>
<status status="PASS" starttime="20210322 03:26:38.269" endtime="20210322 03:26:38.269"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:26:38.269" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:26:38.269" endtime="20210322 03:26:38.269"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${address_external_key}</var>
</assign>
<msg timestamp="20210322 03:26:38.270" level="INFO">${address_external_key} = d91a12d4db6747dbba61522fe28ee255</msg>
<status status="PASS" starttime="20210322 03:26:38.269" endtime="20210322 03:26:38.270"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${address_external_key}</arg>
</arguments>
<msg timestamp="20210322 03:26:38.271" level="INFO">${address_external_key} = d91a12d4db6747dbba61522fe28ee255</msg>
<status status="PASS" starttime="20210322 03:26:38.271" endtime="20210322 03:26:38.271"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:38.032" endtime="20210322 03:26:38.271"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 03:26:38.271" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:26:38.271" endtime="20210322 03:26:38.271"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>SELFIE</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:26:38.272" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 03:26:38.272" endtime="20210322 03:26:38.272"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 03:26:38.272" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 03:26:38.273" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 03:26:38.272" endtime="20210322 03:26:38.273"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:26:38.274" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/bc350711aa5f4f14bc5b8e62e3bf835f/documents?type=SELFIE, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 03:26:38.549" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:26:38.273" endtime="20210322 03:26:38.549"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:26:38.549" level="INFO">{'id': '46ad19b2a4e64b3c93f06adc7a5d706c', 'document_type': 'selfie', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/bc350711aa5f4f14bc5b8e62e3bf835f/documents/46ad19b2a4e64b3c93f06adc7a5d706c', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/bc350711aa5f4f14bc5b8e62e3bf835f', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/bc350711aa5f4f14bc5b8e62e3bf835f/documents/46ad19b2a4e64b3c93f06adc7a5d706c/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 03:26:38.549" endtime="20210322 03:26:38.549"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:26:38.550" level="INFO">2db58168c27438fa</msg>
<status status="PASS" starttime="20210322 03:26:38.549" endtime="20210322 03:26:38.550"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:26:38.550" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:26:38.550" endtime="20210322 03:26:38.550"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 03:26:38.551" level="INFO">${document_external_key} = 46ad19b2a4e64b3c93f06adc7a5d706c</msg>
<status status="PASS" starttime="20210322 03:26:38.550" endtime="20210322 03:26:38.551"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 03:26:38.552" level="INFO">${document_external_key} = 46ad19b2a4e64b3c93f06adc7a5d706c</msg>
<status status="PASS" starttime="20210322 03:26:38.551" endtime="20210322 03:26:38.552"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:38.271" endtime="20210322 03:26:38.552"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 03:26:38.552" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:26:38.552" endtime="20210322 03:26:38.552"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>RG_FRENTE</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:26:38.553" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 03:26:38.553" endtime="20210322 03:26:38.553"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 03:26:38.554" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 03:26:38.555" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 03:26:38.553" endtime="20210322 03:26:38.555"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:26:38.556" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/bc350711aa5f4f14bc5b8e62e3bf835f/documents?type=RG_FRENTE, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 03:26:38.826" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:26:38.555" endtime="20210322 03:26:38.826"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:26:38.826" level="INFO">{'id': 'b91c6089d2d04d4ca486b959dc3c16f8', 'document_type': 'rg_frente', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/bc350711aa5f4f14bc5b8e62e3bf835f/documents/b91c6089d2d04d4ca486b959dc3c16f8', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/bc350711aa5f4f14bc5b8e62e3bf835f', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/bc350711aa5f4f14bc5b8e62e3bf835f/documents/b91c6089d2d04d4ca486b959dc3c16f8/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 03:26:38.826" endtime="20210322 03:26:38.826"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:26:38.827" level="INFO">d708d56942f3178a</msg>
<status status="PASS" starttime="20210322 03:26:38.826" endtime="20210322 03:26:38.827"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:26:38.827" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:26:38.827" endtime="20210322 03:26:38.827"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 03:26:38.828" level="INFO">${document_external_key} = b91c6089d2d04d4ca486b959dc3c16f8</msg>
<status status="PASS" starttime="20210322 03:26:38.827" endtime="20210322 03:26:38.828"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 03:26:38.828" level="INFO">${document_external_key} = b91c6089d2d04d4ca486b959dc3c16f8</msg>
<status status="PASS" starttime="20210322 03:26:38.828" endtime="20210322 03:26:38.828"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:38.552" endtime="20210322 03:26:38.828"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 03:26:38.829" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:26:38.829" endtime="20210322 03:26:38.829"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>RG_VERSO</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:26:38.830" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 03:26:38.829" endtime="20210322 03:26:38.830"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 03:26:38.830" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 03:26:38.831" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 03:26:38.830" endtime="20210322 03:26:38.831"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:26:38.832" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/bc350711aa5f4f14bc5b8e62e3bf835f/documents?type=RG_VERSO, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 03:26:39.103" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:26:38.831" endtime="20210322 03:26:39.103"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:26:39.104" level="INFO">{'id': 'e386f4ddc1a149e18418e53392e3c7fe', 'document_type': 'rg_verso', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/bc350711aa5f4f14bc5b8e62e3bf835f/documents/e386f4ddc1a149e18418e53392e3c7fe', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/bc350711aa5f4f14bc5b8e62e3bf835f', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/bc350711aa5f4f14bc5b8e62e3bf835f/documents/e386f4ddc1a149e18418e53392e3c7fe/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 03:26:39.104" endtime="20210322 03:26:39.104"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:26:39.105" level="INFO">41748c430c28b369</msg>
<status status="PASS" starttime="20210322 03:26:39.104" endtime="20210322 03:26:39.105"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:26:39.105" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:26:39.105" endtime="20210322 03:26:39.105"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 03:26:39.106" level="INFO">${document_external_key} = e386f4ddc1a149e18418e53392e3c7fe</msg>
<status status="PASS" starttime="20210322 03:26:39.105" endtime="20210322 03:26:39.106"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 03:26:39.106" level="INFO">${document_external_key} = e386f4ddc1a149e18418e53392e3c7fe</msg>
<status status="PASS" starttime="20210322 03:26:39.106" endtime="20210322 03:26:39.106"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:38.829" endtime="20210322 03:26:39.106"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 03:26:39.107" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:26:39.107" endtime="20210322 03:26:39.107"></status>
</kw>
<kw name="solicitar aprovação do holder" library="accreditation_request_approval">
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:26:39.107" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 03:26:39.107" endtime="20210322 03:26:39.107"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/approval</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:26:39.108" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/bc350711aa5f4f14bc5b8e62e3bf835f/approval, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data=None 
json=None</msg>
<msg timestamp="20210322 03:26:39.379" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:26:39.108" endtime="20210322 03:26:39.379"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:26:39.379" level="INFO">{'message': 'Approval request accepted successfully. Processing analysis'}</msg>
<status status="PASS" starttime="20210322 03:26:39.379" endtime="20210322 03:26:39.380"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:26:39.380" level="INFO">a5461e25ba78e48b</msg>
<status status="PASS" starttime="20210322 03:26:39.380" endtime="20210322 03:26:39.380"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:26:39.381" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:26:39.380" endtime="20210322 03:26:39.381"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:39.107" endtime="20210322 03:26:39.381"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 03:26:39.381" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:26:39.381" endtime="20210322 03:26:39.381"></status>
</kw>
<kw name="recebendo notificação de aprovação" library="accreditation_risk_notification">
<kw name="Uuid 4" library="FakerLibrary">
<doc>Generates a random UUID4 string.
:param cast_to: Specify what type the UUID should be cast to. Default is `str`
:type cast_to: callable</doc>
<assign>
<var>${assessment_id}</var>
</assign>
<msg timestamp="20210322 03:26:39.382" level="INFO">${assessment_id} = e66a050e-90d2-4f25-9056-602a3ab71ec7</msg>
<status status="PASS" starttime="20210322 03:26:39.382" endtime="20210322 03:26:39.382"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>year</arg>
</arguments>
<assign>
<var>${year}</var>
</assign>
<msg timestamp="20210322 03:26:39.383" level="INFO">${year} = 2021</msg>
<status status="PASS" starttime="20210322 03:26:39.383" endtime="20210322 03:26:39.383"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>month</arg>
</arguments>
<assign>
<var>${month}</var>
</assign>
<msg timestamp="20210322 03:26:39.384" level="INFO">${month} = 03</msg>
<status status="PASS" starttime="20210322 03:26:39.383" endtime="20210322 03:26:39.384"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>day</arg>
</arguments>
<assign>
<var>${day}</var>
</assign>
<msg timestamp="20210322 03:26:39.384" level="INFO">${day} = 22</msg>
<status status="PASS" starttime="20210322 03:26:39.384" endtime="20210322 03:26:39.385"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:26:39.386" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 03:26:39.385" endtime="20210322 03:26:39.386"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "risk.assessment.result",</arg>
<arg>"resource": "business.holder",</arg>
<arg>"created_at": "${year}-${month}-${day} 15:28:56.747Z",</arg>
<arg>"marketplace_id": "${marketplace_external_key}",</arg>
<arg>"object": {</arg>
<arg>"result": "APPROVED",</arg>
<arg>"holder_id": "${holder_external_key}",</arg>
<arg>"applicant_id": "${application_external_key}",</arg>
<arg>"assessment_id": "${assessment_id}"</arg>
<arg>}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 03:26:39.387" level="INFO">${body} = { "type": "risk.assessment.result", "resource": "business.holder", "created_at": "2021-03-22 15:28:56.747Z", "marketplace_id": "f71a8951368a4cc085cf7875ff44e61c", "object": { "result": "APPROVED", "ho...</msg>
<status status="PASS" starttime="20210322 03:26:39.386" endtime="20210322 03:26:39.387"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/admin/internal_operation/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/registration/approval</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:26:39.388" level="INFO">POST Request using : uri=/admin/internal_operation/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/bc350711aa5f4f14bc5b8e62e3bf835f/registration/approval, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "risk.assessment.result", "resource": "business.holder", "created_at": "2021-03-22 15:28:56.747Z", "marketplace_id": "f71a8951368a4cc085cf7875ff44e61c", "object": { "result": "APPROVED", "holder_id": "bc350711aa5f4f14bc5b8e62e3bf835f", "applicant_id": "bcc25a6751c14b52af1340d40dba78c5", "assessment_id": "e66a050e-90d2-4f25-9056-602a3ab71ec7" } } 
json=None</msg>
<msg timestamp="20210322 03:26:39.586" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:26:39.387" endtime="20210322 03:26:39.586"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:26:39.587" level="INFO">{'message': 'Holder approved successfully'}</msg>
<status status="PASS" starttime="20210322 03:26:39.586" endtime="20210322 03:26:39.587"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:26:39.588" level="INFO">eb25ac496ac9f3d6</msg>
<status status="PASS" starttime="20210322 03:26:39.587" endtime="20210322 03:26:39.588"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:26:39.588" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:26:39.588" endtime="20210322 03:26:39.588"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 03:26:39.589" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:26:39.589" endtime="20210322 03:26:39.589"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:39.382" endtime="20210322 03:26:39.589"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 03:26:39.590" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:26:39.589" endtime="20210322 03:26:39.590"></status>
</kw>
<kw name="buscar account por holder" library="accounts_get_accounts_by_holder">
<kw name="conectar accounts" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accounts</arg>
<arg>url=${account_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 03:26:39.591" level="INFO">Creating Session using : alias=accounts, url=https://banking-accounts-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 03:26:39.591" endtime="20210322 03:26:39.592"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:39.591" endtime="20210322 03:26:39.592"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accounts</arg>
<arg>/marketplaces/${marketplace_external_key}/holders/${holder_external_key}/accounts</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:26:39.593" level="INFO">GET Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/holders/bc350711aa5f4f14bc5b8e62e3bf835f/accounts, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 03:26:40.204" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:26:39.592" endtime="20210322 03:26:40.204"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:26:40.205" level="INFO">{'items': [{'id': '0cddc0841b8c449199cef96315f6fb07', 'holder': 'bc350711aa5f4f14bc5b8e62e3bf835f', 'balance': '0.00', 'currency': 'BRL', 'routing_number': '001', 'number': '8557564878', 'status': 'active', 'metadata': {}, 'created_at': '2021-03-22T06:26:40.433539', 'updated_at': '2021-03-22T06:26:40.433539', 'primary': True, 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'uri': '/v2/marketplaces/f71a8951368a4cc085cf7875ff44e61c/accounts/0cddc0841b8c449199cef96315f6fb07', 'resource': 'payment_account'}], 'has_more': False, 'limit': 100, 'total_pages': 1, 'page': 1, 'offset': 0, 'total': '1', 'query_count': '1'}</msg>
<status status="PASS" starttime="20210322 03:26:40.204" endtime="20210322 03:26:40.205"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:26:40.206" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:26:40.205" endtime="20210322 03:26:40.206"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["id"]}</arg>
</arguments>
<assign>
<var>${account_external_key}</var>
</assign>
<msg timestamp="20210322 03:26:40.207" level="INFO">${account_external_key} = 0cddc0841b8c449199cef96315f6fb07</msg>
<status status="PASS" starttime="20210322 03:26:40.206" endtime="20210322 03:26:40.207"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_external_key}</arg>
</arguments>
<msg timestamp="20210322 03:26:40.208" level="INFO">${account_external_key} = 0cddc0841b8c449199cef96315f6fb07</msg>
<status status="PASS" starttime="20210322 03:26:40.207" endtime="20210322 03:26:40.208"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["number"]}</arg>
</arguments>
<assign>
<var>${account_number}</var>
</assign>
<msg timestamp="20210322 03:26:40.209" level="INFO">${account_number} = 8557564878</msg>
<status status="PASS" starttime="20210322 03:26:40.208" endtime="20210322 03:26:40.209"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_number}</arg>
</arguments>
<msg timestamp="20210322 03:26:40.209" level="INFO">${account_number} = 8557564878</msg>
<status status="PASS" starttime="20210322 03:26:40.209" endtime="20210322 03:26:40.209"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["routing_number"]}</arg>
</arguments>
<assign>
<var>${account_routing_number}</var>
</assign>
<msg timestamp="20210322 03:26:40.210" level="INFO">${account_routing_number} = 001</msg>
<status status="PASS" starttime="20210322 03:26:40.210" endtime="20210322 03:26:40.210"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_routing_number}</arg>
</arguments>
<msg timestamp="20210322 03:26:40.211" level="INFO">${account_routing_number} = 001</msg>
<status status="PASS" starttime="20210322 03:26:40.211" endtime="20210322 03:26:40.211"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:39.590" endtime="20210322 03:26:40.211"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 03:26:40.212" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:26:40.211" endtime="20210322 03:26:40.212"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:37.111" endtime="20210322 03:26:40.212"></status>
</kw>
<kw name="criar chave pix" library="pix_dict_create_entry">
<arguments>
<arg>evp</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 03:26:40.213" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 03:26:40.213" endtime="20210322 03:26:40.214"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:40.213" endtime="20210322 03:26:40.214"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${type}</arg>
</arguments>
<msg timestamp="20210322 03:26:40.214" level="INFO">${type} = evp</msg>
<status status="PASS" starttime="20210322 03:26:40.214" endtime="20210322 03:26:40.214"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210322 03:26:40.215" level="INFO">${value} = </msg>
<status status="PASS" starttime="20210322 03:26:40.215" endtime="20210322 03:26:40.215"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:26:40.216" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 03:26:40.215" endtime="20210322 03:26:40.216"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "${type}",</arg>
<arg>"value": "${value}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 03:26:40.216" level="INFO">${body} = { "type": "evp", "value": "" }</msg>
<status status="PASS" starttime="20210322 03:26:40.216" endtime="20210322 03:26:40.216"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:26:40.217" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/bc350711aa5f4f14bc5b8e62e3bf835f/accounts/0cddc0841b8c449199cef96315f6fb07/entries, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "evp", "value": "" } 
json=None</msg>
<msg timestamp="20210322 03:26:41.773" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:26:40.216" endtime="20210322 03:26:41.773"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:26:41.774" level="INFO">{'id': 'ec7f271c7a29453a8dc457364d41ab06', 'status': 'active', 'created_at': '2021-03-22T03:26:41.788', 'updated_at': '2021-03-22T03:26:42.649', 'key': {'value': 'c095ca95-1934-4eaf-ac95-100f0501e7cb', 'type': 'evp'}, 'account': {'id': '0cddc0841b8c449199cef96315f6fb07', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': 'bc350711aa5f4f14bc5b8e62e3bf835f', 'owner': {'name': 'Holder de teste', 'national_registration': '32157648062', 'type': 'individual'}, 'routing_number': '001', 'number': '8557564878', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}, 'resource': 'pix.entry'}</msg>
<status status="PASS" starttime="20210322 03:26:41.773" endtime="20210322 03:26:41.774"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:26:41.774" level="INFO">f78890936c47fe43</msg>
<status status="PASS" starttime="20210322 03:26:41.774" endtime="20210322 03:26:41.774"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 03:26:41.775" level="INFO">201</msg>
<status status="PASS" starttime="20210322 03:26:41.775" endtime="20210322 03:26:41.775"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:26:41.775" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:26:41.775" endtime="20210322 03:26:41.775"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${entry_external_key}</var>
</assign>
<msg timestamp="20210322 03:26:41.776" level="INFO">${entry_external_key} = ec7f271c7a29453a8dc457364d41ab06</msg>
<status status="PASS" starttime="20210322 03:26:41.776" endtime="20210322 03:26:41.776"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${entry_external_key}</arg>
</arguments>
<msg timestamp="20210322 03:26:41.776" level="INFO">${entry_external_key} = ec7f271c7a29453a8dc457364d41ab06</msg>
<status status="PASS" starttime="20210322 03:26:41.776" endtime="20210322 03:26:41.776"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["key"]["value"]}</arg>
</arguments>
<assign>
<var>${entry_key_value}</var>
</assign>
<msg timestamp="20210322 03:26:41.777" level="INFO">${entry_key_value} = c095ca95-1934-4eaf-ac95-100f0501e7cb</msg>
<status status="PASS" starttime="20210322 03:26:41.777" endtime="20210322 03:26:41.777"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${entry_key_value}</arg>
</arguments>
<msg timestamp="20210322 03:26:41.778" level="INFO">${entry_key_value} = c095ca95-1934-4eaf-ac95-100f0501e7cb</msg>
<status status="PASS" starttime="20210322 03:26:41.778" endtime="20210322 03:26:41.778"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:40.212" endtime="20210322 03:26:41.778"></status>
</kw>
<kw name="validar criação da chave pix" library="asserts">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando status_code</arg>
</arguments>
<msg timestamp="20210322 03:26:41.779" level="INFO">Validando status_code</msg>
<status status="PASS" starttime="20210322 03:26:41.779" endtime="20210322 03:26:41.779"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${type}' == 'evp'</arg>
<arg>Should Be Equal As Integers</arg>
<arg>${response.status_code}</arg>
<arg>201</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'phone'</arg>
<arg>Should Be Equal As Integers</arg>
<arg>${response.status_code}</arg>
<arg>202</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'email'</arg>
<arg>Should Be Equal As Integers</arg>
<arg>${response.status_code}</arg>
<arg>202</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'national_registration'</arg>
<arg>Should Be Equal As Integers</arg>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 03:26:41.780" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:26:41.780" endtime="20210322 03:26:41.780"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:41.779" endtime="20210322 03:26:41.780"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar status da chave</arg>
</arguments>
<msg timestamp="20210322 03:26:41.780" level="INFO">Validar status da chave</msg>
<status status="PASS" starttime="20210322 03:26:41.780" endtime="20210322 03:26:41.780"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${type}' == 'evp'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["status"]}</arg>
<arg>active</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'phone'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["status"]}</arg>
<arg>waiting_ownership_verification</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'email'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["status"]}</arg>
<arg>waiting_ownership_verification</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'national_registration'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["status"]}</arg>
<arg>active</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["status"]}</arg>
<arg>active</arg>
</arguments>
<status status="PASS" starttime="20210322 03:26:41.781" endtime="20210322 03:26:41.781"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:41.781" endtime="20210322 03:26:41.781"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando Tipo da chave PIX</arg>
</arguments>
<msg timestamp="20210322 03:26:41.781" level="INFO">Validando Tipo da chave PIX</msg>
<status status="PASS" starttime="20210322 03:26:41.781" endtime="20210322 03:26:41.781"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${type}' == 'evp'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["type"]}</arg>
<arg>${type}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'phone'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["type"]}</arg>
<arg>${type}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'email'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["type"]}</arg>
<arg>${type}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'national_registration'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["type"]}</arg>
<arg>${type}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["key"]["type"]}</arg>
<arg>${type}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:26:41.782" endtime="20210322 03:26:41.782"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:41.782" endtime="20210322 03:26:41.782"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando Valor da chave PIX</arg>
</arguments>
<msg timestamp="20210322 03:26:41.783" level="INFO">Validando Valor da chave PIX</msg>
<status status="PASS" starttime="20210322 03:26:41.783" endtime="20210322 03:26:41.783"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${type}' == 'evp'</arg>
<arg>Should Not Be Empty</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'phone'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${phone_pix}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'email'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${email_pix}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'national_registration'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${national_registration}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${response.json()["key"]["value"]}</arg>
</arguments>
<msg timestamp="20210322 03:26:41.783" level="INFO">Length is 36</msg>
<status status="PASS" starttime="20210322 03:26:41.783" endtime="20210322 03:26:41.784"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:41.783" endtime="20210322 03:26:41.784"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando dados da conta</arg>
</arguments>
<msg timestamp="20210322 03:26:41.784" level="INFO">Validando dados da conta</msg>
<status status="PASS" starttime="20210322 03:26:41.784" endtime="20210322 03:26:41.784"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["id"]}</arg>
<arg>${account_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:26:41.784" endtime="20210322 03:26:41.785"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["marketplace"]}</arg>
<arg>${marketplace_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:26:41.786" endtime="20210322 03:26:41.788"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["holder"]}</arg>
<arg>${holder_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:26:41.789" endtime="20210322 03:26:41.789"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["number"]}</arg>
<arg>${account_number}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:26:41.790" endtime="20210322 03:26:41.790"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["routing_number"]}</arg>
<arg>${account_routing_number}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:26:41.790" endtime="20210322 03:26:41.791"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["type"]}</arg>
<arg>CACC</arg>
</arguments>
<status status="PASS" starttime="20210322 03:26:41.791" endtime="20210322 03:26:41.792"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar Proprietário da Account Owner</arg>
</arguments>
<msg timestamp="20210322 03:26:41.792" level="INFO">Validar Proprietário da Account Owner</msg>
<status status="PASS" starttime="20210322 03:26:41.792" endtime="20210322 03:26:41.792"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${holder_type}' == 'individual'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["account"]["owner"]["name"]}</arg>
<arg>${holder_name}</arg>
<arg>ELSE IF</arg>
<arg>'${holder_type}' == 'business'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["account"]["owner"]["name"]}</arg>
<arg>${legal_name}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["account"]["owner"]["name"]}</arg>
<arg>${holder_name}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:26:41.793" endtime="20210322 03:26:41.793"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:41.792" endtime="20210322 03:26:41.793"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar national_registration da Account Owner</arg>
</arguments>
<msg timestamp="20210322 03:26:41.794" level="INFO">Validar national_registration da Account Owner</msg>
<status status="PASS" starttime="20210322 03:26:41.794" endtime="20210322 03:26:41.794"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${holder_type}' == 'individual'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["account"]["owner"]["national_registration"]}</arg>
<arg>${national_registration}</arg>
<arg>ELSE IF</arg>
<arg>'${holder_type}' == 'business'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["account"]["owner"]["national_registration"]}</arg>
<arg>${national_registration}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["account"]["owner"]["national_registration"]}</arg>
<arg>${national_registration}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:26:41.795" endtime="20210322 03:26:41.795"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:41.794" endtime="20210322 03:26:41.795"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar Holder Type do Account Owner</arg>
</arguments>
<msg timestamp="20210322 03:26:41.796" level="INFO">Validar Holder Type do Account Owner</msg>
<status status="PASS" starttime="20210322 03:26:41.796" endtime="20210322 03:26:41.796"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${holder_type}' == 'individual'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["account"]["owner"]["type"]}</arg>
<arg>${holder_type}</arg>
<arg>ELSE IF</arg>
<arg>'${holder_type}' == 'business'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["account"]["owner"]["type"]}</arg>
<arg>${holder_type}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["account"]["owner"]["type"]}</arg>
<arg>${holder_type}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:26:41.797" endtime="20210322 03:26:41.797"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:41.796" endtime="20210322 03:26:41.797"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar PSP</arg>
</arguments>
<msg timestamp="20210322 03:26:41.797" level="INFO">Validar PSP</msg>
<status status="PASS" starttime="20210322 03:26:41.797" endtime="20210322 03:26:41.797"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["psp"]["code"]}</arg>
<arg>19468242</arg>
</arguments>
<status status="PASS" starttime="20210322 03:26:41.797" endtime="20210322 03:26:41.798"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["psp"]["name"]}</arg>
<arg>Zoop Tecnologia e Meios de Pagamento S.A.</arg>
</arguments>
<status status="PASS" starttime="20210322 03:26:41.798" endtime="20210322 03:26:41.798"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:41.778" endtime="20210322 03:26:41.798"></status>
</kw>
<kw name="excluir chave pix" library="pix_dict_delete_entry">
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 03:26:41.799" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 03:26:41.799" endtime="20210322 03:26:41.799"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:41.799" endtime="20210322 03:26:41.799"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:26:41.800" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 03:26:41.800" endtime="20210322 03:26:41.800"></status>
</kw>
<kw name="Delete Request" library="RequestsLibrary">
<doc>Send a DELETE request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries/${entry_external_key}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:26:41.801" level="INFO">DELETE Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/bc350711aa5f4f14bc5b8e62e3bf835f/accounts/0cddc0841b8c449199cef96315f6fb07/entries/ec7f271c7a29453a8dc457364d41ab06, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data=None 
json=None</msg>
<msg timestamp="20210322 03:26:43.209" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:26:41.800" endtime="20210322 03:26:43.209"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:26:43.210" level="INFO">{'message': 'Entry removed successfully'}</msg>
<status status="PASS" starttime="20210322 03:26:43.209" endtime="20210322 03:26:43.210"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:26:43.211" level="INFO">d7962afaa8b73f21</msg>
<status status="PASS" starttime="20210322 03:26:43.210" endtime="20210322 03:26:43.211"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 03:26:43.211" level="INFO">200</msg>
<status status="PASS" starttime="20210322 03:26:43.211" endtime="20210322 03:26:43.211"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:26:43.212" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:26:43.212" endtime="20210322 03:26:43.212"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:41.798" endtime="20210322 03:26:43.212"></status>
</kw>
<kw name="validar exclusão da chave pix" library="asserts">
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 03:26:43.214" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:26:43.213" endtime="20210322 03:26:43.214"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["message"]}</arg>
<arg>Entry removed successfully</arg>
</arguments>
<status status="PASS" starttime="20210322 03:26:43.214" endtime="20210322 03:26:43.215"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:43.213" endtime="20210322 03:26:43.215"></status>
</kw>
<doc>Fluxo Básico</doc>
<tags>
<tag>regression_test</tag>
<tag>smoke_test</tag>
</tags>
<status status="PASS" starttime="20210322 03:26:37.110" endtime="20210322 03:26:43.215" critical="yes"></status>
</test>
<test id="s1-s1-s4-t2" name="Cenário: Excluir Chave de Endereçamento do tipo Telefone">
<kw name="Random Number" library="FakerLibrary">
<doc>Returns a random number with 1 digit (default, when digits==None),
a random number with 0 to given number of digits, or a random number
with given number to given number of digits (when ``fix_len==True``).</doc>
<arguments>
<arg>digits=8</arg>
<arg>fix_len=True</arg>
</arguments>
<assign>
<var>${phone}</var>
</assign>
<msg timestamp="20210322 03:26:43.218" level="INFO">${phone} = 79671252</msg>
<status status="PASS" starttime="20210322 03:26:43.217" endtime="20210322 03:26:43.218"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>+55219${phone}</arg>
</arguments>
<assign>
<var>${phone_pix}</var>
</assign>
<msg timestamp="20210322 03:26:43.219" level="INFO">${phone_pix} = +5521979671252</msg>
<status status="PASS" starttime="20210322 03:26:43.218" endtime="20210322 03:26:43.219"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${phone_pix}</arg>
</arguments>
<msg timestamp="20210322 03:26:43.221" level="INFO">${phone_pix} = +5521979671252</msg>
<status status="PASS" starttime="20210322 03:26:43.220" endtime="20210322 03:26:43.221"></status>
</kw>
<kw name="criar holder individual ativo" library="accreditation_create_holder_active">
<kw name="conectar accreditation" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accreditation</arg>
<arg>url=${accreditation_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 03:26:43.223" level="INFO">Creating Session using : alias=accreditation, url=https://banking-accreditation-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 03:26:43.223" endtime="20210322 03:26:43.224"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:43.222" endtime="20210322 03:26:43.224"></status>
</kw>
<kw name="Cpf" library="FakerLibrary">
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 03:26:43.225" level="INFO">${national_registration} = 790.451.368-48</msg>
<status status="PASS" starttime="20210322 03:26:43.224" endtime="20210322 03:26:43.225"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${national_registration}</arg>
<arg>.</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 03:26:43.226" level="INFO">${national_registration} = 790451368-48</msg>
<status status="PASS" starttime="20210322 03:26:43.225" endtime="20210322 03:26:43.226"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${national_registration}</arg>
<arg>-</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 03:26:43.226" level="INFO">${national_registration} = 79045136848</msg>
<status status="PASS" starttime="20210322 03:26:43.226" endtime="20210322 03:26:43.226"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${national_registration}</arg>
</arguments>
<msg timestamp="20210322 03:26:43.226" level="INFO">${national_registration} = 79045136848</msg>
<status status="PASS" starttime="20210322 03:26:43.226" endtime="20210322 03:26:43.226"></status>
</kw>
<kw name="Rg" library="FakerLibrary">
<doc>Brazilian RG, return plain numbers.
Check:  https://www.ngmatematica.com/2014/02/como-determinar-o-digito-verificador-do.html</doc>
<assign>
<var>${identity_card}</var>
</assign>
<msg timestamp="20210322 03:26:43.227" level="INFO">${identity_card} = 671458024</msg>
<status status="PASS" starttime="20210322 03:26:43.227" endtime="20210322 03:26:43.227"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${identity_card}</arg>
</arguments>
<msg timestamp="20210322 03:26:43.227" level="INFO">${identity_card} = 671458024</msg>
<status status="PASS" starttime="20210322 03:26:43.227" endtime="20210322 03:26:43.228"></status>
</kw>
<kw name="criar holder individual" library="accreditation_post_holder_individual">
<arguments>
<arg>holder_type=individual</arg>
<arg>holder_name=${holder_name}</arg>
<arg>email=${email}</arg>
<arg>national_registration=${national_registration}</arg>
<arg>revenue=${revenue}</arg>
<arg>birthday=${birthday}</arg>
<arg>mothers_name=${mothers_name}</arg>
<arg>identity_card=${identity_card}</arg>
<arg>pep=false</arg>
<arg>cbo=${cbo}</arg>
</arguments>
<kw name="conectar accreditation" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accreditation</arg>
<arg>url=${accreditation_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 03:26:43.229" level="INFO">Creating Session using : alias=accreditation, url=https://banking-accreditation-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 03:26:43.229" endtime="20210322 03:26:43.229"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:43.229" endtime="20210322 03:26:43.230"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_type}</arg>
</arguments>
<msg timestamp="20210322 03:26:43.230" level="INFO">${holder_type} = individual</msg>
<status status="PASS" starttime="20210322 03:26:43.230" endtime="20210322 03:26:43.230"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_name}</arg>
</arguments>
<msg timestamp="20210322 03:26:43.231" level="INFO">${holder_name} = Holder de teste</msg>
<status status="PASS" starttime="20210322 03:26:43.230" endtime="20210322 03:26:43.231"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:26:43.231" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 03:26:43.231" endtime="20210322 03:26:43.231"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "${holder_type}",</arg>
<arg>"name": "${holder_name}",</arg>
<arg>"email": "${email}",</arg>
<arg>"national_registration": "${national_registration}",</arg>
<arg>"revenue": ${revenue},</arg>
<arg>"birthday": "${birthday}",</arg>
<arg>"mothers_name": "${mothers_name}",</arg>
<arg>"identity_card": "${identity_card}",</arg>
<arg>"pep": false,</arg>
<arg>"cbo": ${cbo}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 03:26:43.232" level="INFO">${body} = { "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "79045136848", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder",...</msg>
<status status="PASS" starttime="20210322 03:26:43.231" endtime="20210322 03:26:43.232"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:26:43.233" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "79045136848", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder", "identity_card": "671458024", "pep": false, "cbo": 821450 } 
json=None</msg>
<msg timestamp="20210322 03:26:43.857" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:26:43.232" endtime="20210322 03:26:43.857"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:26:43.858" level="INFO">{'id': 'c2fcc5b1778f44cf9287d68c57cc0888', 'name': 'Holder de teste', 'revenue': 5500.0, 'email': 'teste@teste.com.br', 'status': 'waiting_info_and_documents', 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'marketplace_name': 'Marketplace de Teste', 'created_at': '2021-03-22T03:26:44.715374', 'updated_at': '2021-03-22T03:26:44.715376', 'type': 'individual', 'national_registration': '79045136848', 'birthday': '1988-04-23', 'mothers_name': 'Mãe do Holder', 'identity_card': '671458024', 'pep': False, 'cbo': '821450', '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/c2fcc5b1778f44cf9287d68c57cc0888', 'type': 'GET'}, 'phones': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/c2fcc5b1778f44cf9287d68c57cc0888/phones', 'type': 'GET'}, 'addresses': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/c2fcc5b1778f44cf9287d68c57cc0888/addresses', 'type': 'GET'}, 'documents': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/c2fcc5b1778f44cf9287d68c57cc0888/documents', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 03:26:43.857" endtime="20210322 03:26:43.858"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:26:43.858" level="INFO">61c2877df72fa96f</msg>
<status status="PASS" starttime="20210322 03:26:43.858" endtime="20210322 03:26:43.859"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${body}</arg>
</arguments>
<msg timestamp="20210322 03:26:43.859" level="INFO">{ "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "79045136848", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder", "identity_card": "671458024", "pep": false, "cbo": 821450 }</msg>
<status status="PASS" starttime="20210322 03:26:43.859" endtime="20210322 03:26:43.859"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:26:43.860" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:26:43.859" endtime="20210322 03:26:43.860"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${holder_external_key}</var>
</assign>
<msg timestamp="20210322 03:26:43.861" level="INFO">${holder_external_key} = c2fcc5b1778f44cf9287d68c57cc0888</msg>
<status status="PASS" starttime="20210322 03:26:43.860" endtime="20210322 03:26:43.861"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_external_key}</arg>
</arguments>
<msg timestamp="20210322 03:26:43.861" level="INFO">${holder_external_key} = c2fcc5b1778f44cf9287d68c57cc0888</msg>
<status status="PASS" starttime="20210322 03:26:43.861" endtime="20210322 03:26:43.862"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:43.228" endtime="20210322 03:26:43.862"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_name}</arg>
</arguments>
<msg timestamp="20210322 03:26:43.862" level="INFO">${holder_name} = Holder de teste</msg>
<status status="PASS" starttime="20210322 03:26:43.862" endtime="20210322 03:26:43.862"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 03:26:43.863" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:26:43.863" endtime="20210322 03:26:43.863"></status>
</kw>
<kw name="criar holder phone" library="accreditation_post_holder_phone">
<arguments>
<arg>21</arg>
<arg>51</arg>
<arg>996221236</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:26:43.864" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 03:26:43.864" endtime="20210322 03:26:43.864"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"area_code": "${phone_area_code}",</arg>
<arg>"country_code": "${phone_country_code}",</arg>
<arg>"number": "${phone_number}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 03:26:43.865" level="INFO">${body} = { "area_code": "21", "country_code": "51", "number": "996221236" }</msg>
<status status="PASS" starttime="20210322 03:26:43.864" endtime="20210322 03:26:43.865"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/phones</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:26:43.866" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/c2fcc5b1778f44cf9287d68c57cc0888/phones, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "area_code": "21", "country_code": "51", "number": "996221236" } 
json=None</msg>
<msg timestamp="20210322 03:26:44.077" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:26:43.865" endtime="20210322 03:26:44.078"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:26:44.078" level="INFO">{'id': '17816a5d4f224e0cb1e82ad59b564725', 'area_code': '21', 'country_code': '51', 'number': '996221236', 'main': True, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/c2fcc5b1778f44cf9287d68c57cc0888/phones/17816a5d4f224e0cb1e82ad59b564725', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/c2fcc5b1778f44cf9287d68c57cc0888', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 03:26:44.078" endtime="20210322 03:26:44.078"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:26:44.079" level="INFO">bdd80c34fdb53996</msg>
<status status="PASS" starttime="20210322 03:26:44.078" endtime="20210322 03:26:44.079"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:26:44.079" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:26:44.079" endtime="20210322 03:26:44.079"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${phone_external_key}</var>
</assign>
<msg timestamp="20210322 03:26:44.080" level="INFO">${phone_external_key} = 17816a5d4f224e0cb1e82ad59b564725</msg>
<status status="PASS" starttime="20210322 03:26:44.080" endtime="20210322 03:26:44.080"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${phone_external_key}</arg>
</arguments>
<msg timestamp="20210322 03:26:44.081" level="INFO">${phone_external_key} = 17816a5d4f224e0cb1e82ad59b564725</msg>
<status status="PASS" starttime="20210322 03:26:44.080" endtime="20210322 03:26:44.081"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:43.863" endtime="20210322 03:26:44.081"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 03:26:44.081" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:26:44.081" endtime="20210322 03:26:44.081"></status>
</kw>
<kw name="criar holder address" library="accreditation_post_holder_address">
<arguments>
<arg>Rio de Janeiro</arg>
<arg>Rio de Janeiro</arg>
<arg>Brasil</arg>
<arg>Bairro de Testes</arg>
<arg>Rua de Testes</arg>
<arg>90</arg>
<arg>apto 200</arg>
<arg>21550987</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:26:44.082" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 03:26:44.082" endtime="20210322 03:26:44.082"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"city": "${city}",</arg>
<arg>"state": "${state}",</arg>
<arg>"country": "${country}",</arg>
<arg>"neighborhood": "${neighborhood}",</arg>
<arg>"street": "${street}",</arg>
<arg>"number": "${number}",</arg>
<arg>"complement": "${complement}",</arg>
<arg>"postal_code": "${postal_code}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 03:26:44.083" level="INFO">${body} = { "city": "Rio de Janeiro", "state": "Rio de Janeiro", "country": "Brasil", "neighborhood": "Bairro de Testes", "street": "Rua de Testes", "number": "90", "complement": "apto 200", "postal_code": "215...</msg>
<status status="PASS" starttime="20210322 03:26:44.083" endtime="20210322 03:26:44.083"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/addresses</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:26:44.084" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/c2fcc5b1778f44cf9287d68c57cc0888/addresses, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "city": "Rio de Janeiro", "state": "Rio de Janeiro", "country": "Brasil", "neighborhood": "Bairro de Testes", "street": "Rua de Testes", "number": "90", "complement": "apto 200", "postal_code": "21550987" } 
json=None</msg>
<msg timestamp="20210322 03:26:44.444" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:26:44.083" endtime="20210322 03:26:44.444"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:26:44.445" level="INFO">{'id': '01c6d72f02b34a7aa07f8642512548e6', 'street': 'Rua de Testes', 'number': '90', 'city': 'Rio de Janeiro', 'complement': 'apto 200', 'state': 'Rio de Janeiro', 'neighborhood': 'Bairro de Testes', 'postal_code': '21550987', 'country': 'Brasil', 'main': True, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/c2fcc5b1778f44cf9287d68c57cc0888/addresses/01c6d72f02b34a7aa07f8642512548e6', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/c2fcc5b1778f44cf9287d68c57cc0888', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 03:26:44.444" endtime="20210322 03:26:44.446"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:26:44.447" level="INFO">9972ae296b5e9994</msg>
<status status="PASS" starttime="20210322 03:26:44.446" endtime="20210322 03:26:44.447"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:26:44.449" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:26:44.448" endtime="20210322 03:26:44.449"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${address_external_key}</var>
</assign>
<msg timestamp="20210322 03:26:44.452" level="INFO">${address_external_key} = 01c6d72f02b34a7aa07f8642512548e6</msg>
<status status="PASS" starttime="20210322 03:26:44.449" endtime="20210322 03:26:44.453"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${address_external_key}</arg>
</arguments>
<msg timestamp="20210322 03:26:44.454" level="INFO">${address_external_key} = 01c6d72f02b34a7aa07f8642512548e6</msg>
<status status="PASS" starttime="20210322 03:26:44.453" endtime="20210322 03:26:44.454"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:44.082" endtime="20210322 03:26:44.454"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 03:26:44.456" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:26:44.455" endtime="20210322 03:26:44.456"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>SELFIE</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:26:44.459" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 03:26:44.457" endtime="20210322 03:26:44.459"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 03:26:44.460" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 03:26:44.462" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 03:26:44.459" endtime="20210322 03:26:44.462"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:26:44.464" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/c2fcc5b1778f44cf9287d68c57cc0888/documents?type=SELFIE, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 03:26:44.732" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:26:44.462" endtime="20210322 03:26:44.732"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:26:44.732" level="INFO">{'id': '54bb1fefe03d44508bff367931a8e791', 'document_type': 'selfie', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/c2fcc5b1778f44cf9287d68c57cc0888/documents/54bb1fefe03d44508bff367931a8e791', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/c2fcc5b1778f44cf9287d68c57cc0888', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/c2fcc5b1778f44cf9287d68c57cc0888/documents/54bb1fefe03d44508bff367931a8e791/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 03:26:44.732" endtime="20210322 03:26:44.732"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:26:44.733" level="INFO">f3434c0d780a1057</msg>
<status status="PASS" starttime="20210322 03:26:44.733" endtime="20210322 03:26:44.733"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:26:44.733" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:26:44.733" endtime="20210322 03:26:44.733"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 03:26:44.734" level="INFO">${document_external_key} = 54bb1fefe03d44508bff367931a8e791</msg>
<status status="PASS" starttime="20210322 03:26:44.734" endtime="20210322 03:26:44.734"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 03:26:44.735" level="INFO">${document_external_key} = 54bb1fefe03d44508bff367931a8e791</msg>
<status status="PASS" starttime="20210322 03:26:44.735" endtime="20210322 03:26:44.735"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:44.456" endtime="20210322 03:26:44.736"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 03:26:44.738" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:26:44.737" endtime="20210322 03:26:44.739"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>RG_FRENTE</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:26:44.740" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 03:26:44.739" endtime="20210322 03:26:44.740"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 03:26:44.740" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 03:26:44.742" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 03:26:44.740" endtime="20210322 03:26:44.742"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:26:44.743" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/c2fcc5b1778f44cf9287d68c57cc0888/documents?type=RG_FRENTE, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 03:26:44.996" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:26:44.742" endtime="20210322 03:26:44.996"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:26:44.996" level="INFO">{'id': '05978abe4e2f4597b1c11b1e11002671', 'document_type': 'rg_frente', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/c2fcc5b1778f44cf9287d68c57cc0888/documents/05978abe4e2f4597b1c11b1e11002671', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/c2fcc5b1778f44cf9287d68c57cc0888', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/c2fcc5b1778f44cf9287d68c57cc0888/documents/05978abe4e2f4597b1c11b1e11002671/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 03:26:44.996" endtime="20210322 03:26:44.996"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:26:44.997" level="INFO">8227d8622ba15c07</msg>
<status status="PASS" starttime="20210322 03:26:44.997" endtime="20210322 03:26:44.997"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:26:44.997" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:26:44.997" endtime="20210322 03:26:44.997"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 03:26:44.998" level="INFO">${document_external_key} = 05978abe4e2f4597b1c11b1e11002671</msg>
<status status="PASS" starttime="20210322 03:26:44.997" endtime="20210322 03:26:44.998"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 03:26:44.998" level="INFO">${document_external_key} = 05978abe4e2f4597b1c11b1e11002671</msg>
<status status="PASS" starttime="20210322 03:26:44.998" endtime="20210322 03:26:44.998"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:44.739" endtime="20210322 03:26:44.998"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 03:26:44.999" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:26:44.999" endtime="20210322 03:26:44.999"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>RG_VERSO</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:26:44.999" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 03:26:44.999" endtime="20210322 03:26:44.999"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 03:26:45.000" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 03:26:45.001" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 03:26:44.999" endtime="20210322 03:26:45.001"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:26:45.002" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/c2fcc5b1778f44cf9287d68c57cc0888/documents?type=RG_VERSO, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 03:26:45.257" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:26:45.001" endtime="20210322 03:26:45.257"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:26:45.259" level="INFO">{'id': '5fdec181fed6496a99015eb686f61c6c', 'document_type': 'rg_verso', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/c2fcc5b1778f44cf9287d68c57cc0888/documents/5fdec181fed6496a99015eb686f61c6c', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/c2fcc5b1778f44cf9287d68c57cc0888', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/c2fcc5b1778f44cf9287d68c57cc0888/documents/5fdec181fed6496a99015eb686f61c6c/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 03:26:45.257" endtime="20210322 03:26:45.259"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:26:45.259" level="INFO">789fbf0c41383174</msg>
<status status="PASS" starttime="20210322 03:26:45.259" endtime="20210322 03:26:45.259"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:26:45.260" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:26:45.259" endtime="20210322 03:26:45.260"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 03:26:45.261" level="INFO">${document_external_key} = 5fdec181fed6496a99015eb686f61c6c</msg>
<status status="PASS" starttime="20210322 03:26:45.260" endtime="20210322 03:26:45.261"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 03:26:45.262" level="INFO">${document_external_key} = 5fdec181fed6496a99015eb686f61c6c</msg>
<status status="PASS" starttime="20210322 03:26:45.261" endtime="20210322 03:26:45.263"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:44.999" endtime="20210322 03:26:45.263"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 03:26:45.263" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:26:45.263" endtime="20210322 03:26:45.263"></status>
</kw>
<kw name="solicitar aprovação do holder" library="accreditation_request_approval">
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:26:45.264" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 03:26:45.263" endtime="20210322 03:26:45.264"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/approval</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:26:45.264" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/c2fcc5b1778f44cf9287d68c57cc0888/approval, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data=None 
json=None</msg>
<msg timestamp="20210322 03:26:45.532" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:26:45.264" endtime="20210322 03:26:45.532"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:26:45.532" level="INFO">{'message': 'Approval request accepted successfully. Processing analysis'}</msg>
<status status="PASS" starttime="20210322 03:26:45.532" endtime="20210322 03:26:45.532"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:26:45.533" level="INFO">b00fd0eb23288649</msg>
<status status="PASS" starttime="20210322 03:26:45.533" endtime="20210322 03:26:45.533"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:26:45.534" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:26:45.534" endtime="20210322 03:26:45.534"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:45.263" endtime="20210322 03:26:45.534"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 03:26:45.536" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:26:45.535" endtime="20210322 03:26:45.536"></status>
</kw>
<kw name="recebendo notificação de aprovação" library="accreditation_risk_notification">
<kw name="Uuid 4" library="FakerLibrary">
<doc>Generates a random UUID4 string.
:param cast_to: Specify what type the UUID should be cast to. Default is `str`
:type cast_to: callable</doc>
<assign>
<var>${assessment_id}</var>
</assign>
<msg timestamp="20210322 03:26:45.539" level="INFO">${assessment_id} = 178050c7-506c-4104-ad68-d0fa8e944e6e</msg>
<status status="PASS" starttime="20210322 03:26:45.538" endtime="20210322 03:26:45.539"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>year</arg>
</arguments>
<assign>
<var>${year}</var>
</assign>
<msg timestamp="20210322 03:26:45.539" level="INFO">${year} = 2021</msg>
<status status="PASS" starttime="20210322 03:26:45.539" endtime="20210322 03:26:45.539"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>month</arg>
</arguments>
<assign>
<var>${month}</var>
</assign>
<msg timestamp="20210322 03:26:45.540" level="INFO">${month} = 03</msg>
<status status="PASS" starttime="20210322 03:26:45.540" endtime="20210322 03:26:45.540"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>day</arg>
</arguments>
<assign>
<var>${day}</var>
</assign>
<msg timestamp="20210322 03:26:45.540" level="INFO">${day} = 22</msg>
<status status="PASS" starttime="20210322 03:26:45.540" endtime="20210322 03:26:45.540"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:26:45.541" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 03:26:45.541" endtime="20210322 03:26:45.541"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "risk.assessment.result",</arg>
<arg>"resource": "business.holder",</arg>
<arg>"created_at": "${year}-${month}-${day} 15:28:56.747Z",</arg>
<arg>"marketplace_id": "${marketplace_external_key}",</arg>
<arg>"object": {</arg>
<arg>"result": "APPROVED",</arg>
<arg>"holder_id": "${holder_external_key}",</arg>
<arg>"applicant_id": "${application_external_key}",</arg>
<arg>"assessment_id": "${assessment_id}"</arg>
<arg>}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 03:26:45.542" level="INFO">${body} = { "type": "risk.assessment.result", "resource": "business.holder", "created_at": "2021-03-22 15:28:56.747Z", "marketplace_id": "f71a8951368a4cc085cf7875ff44e61c", "object": { "result": "APPROVED", "ho...</msg>
<status status="PASS" starttime="20210322 03:26:45.541" endtime="20210322 03:26:45.542"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/admin/internal_operation/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/registration/approval</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:26:45.542" level="INFO">POST Request using : uri=/admin/internal_operation/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/c2fcc5b1778f44cf9287d68c57cc0888/registration/approval, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "risk.assessment.result", "resource": "business.holder", "created_at": "2021-03-22 15:28:56.747Z", "marketplace_id": "f71a8951368a4cc085cf7875ff44e61c", "object": { "result": "APPROVED", "holder_id": "c2fcc5b1778f44cf9287d68c57cc0888", "applicant_id": "bcc25a6751c14b52af1340d40dba78c5", "assessment_id": "178050c7-506c-4104-ad68-d0fa8e944e6e" } } 
json=None</msg>
<msg timestamp="20210322 03:26:45.742" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:26:45.542" endtime="20210322 03:26:45.742"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:26:45.743" level="INFO">{'message': 'Holder approved successfully'}</msg>
<status status="PASS" starttime="20210322 03:26:45.742" endtime="20210322 03:26:45.743"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:26:45.744" level="INFO">1d8b222151e5ca62</msg>
<status status="PASS" starttime="20210322 03:26:45.743" endtime="20210322 03:26:45.744"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:26:45.744" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:26:45.744" endtime="20210322 03:26:45.745"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 03:26:45.745" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:26:45.745" endtime="20210322 03:26:45.745"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:45.538" endtime="20210322 03:26:45.746"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 03:26:45.746" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:26:45.746" endtime="20210322 03:26:45.747"></status>
</kw>
<kw name="buscar account por holder" library="accounts_get_accounts_by_holder">
<kw name="conectar accounts" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accounts</arg>
<arg>url=${account_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 03:26:45.749" level="INFO">Creating Session using : alias=accounts, url=https://banking-accounts-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 03:26:45.748" endtime="20210322 03:26:45.749"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:45.748" endtime="20210322 03:26:45.749"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accounts</arg>
<arg>/marketplaces/${marketplace_external_key}/holders/${holder_external_key}/accounts</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:26:45.750" level="INFO">GET Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/holders/c2fcc5b1778f44cf9287d68c57cc0888/accounts, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 03:26:46.334" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:26:45.750" endtime="20210322 03:26:46.334"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:26:46.336" level="INFO">{'items': [{'id': '46dfaf809b5441429ac399ba940cd2e7', 'holder': 'c2fcc5b1778f44cf9287d68c57cc0888', 'balance': '0.00', 'currency': 'BRL', 'routing_number': '001', 'number': '4565685977', 'status': 'active', 'metadata': {}, 'created_at': '2021-03-22T06:26:46.590274', 'updated_at': '2021-03-22T06:26:46.590274', 'primary': True, 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'uri': '/v2/marketplaces/f71a8951368a4cc085cf7875ff44e61c/accounts/46dfaf809b5441429ac399ba940cd2e7', 'resource': 'payment_account'}], 'has_more': False, 'limit': 100, 'total_pages': 1, 'page': 1, 'offset': 0, 'total': '1', 'query_count': '1'}</msg>
<status status="PASS" starttime="20210322 03:26:46.335" endtime="20210322 03:26:46.337"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:26:46.339" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:26:46.338" endtime="20210322 03:26:46.339"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["id"]}</arg>
</arguments>
<assign>
<var>${account_external_key}</var>
</assign>
<msg timestamp="20210322 03:26:46.340" level="INFO">${account_external_key} = 46dfaf809b5441429ac399ba940cd2e7</msg>
<status status="PASS" starttime="20210322 03:26:46.339" endtime="20210322 03:26:46.340"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_external_key}</arg>
</arguments>
<msg timestamp="20210322 03:26:46.340" level="INFO">${account_external_key} = 46dfaf809b5441429ac399ba940cd2e7</msg>
<status status="PASS" starttime="20210322 03:26:46.340" endtime="20210322 03:26:46.340"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["number"]}</arg>
</arguments>
<assign>
<var>${account_number}</var>
</assign>
<msg timestamp="20210322 03:26:46.341" level="INFO">${account_number} = 4565685977</msg>
<status status="PASS" starttime="20210322 03:26:46.341" endtime="20210322 03:26:46.341"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_number}</arg>
</arguments>
<msg timestamp="20210322 03:26:46.342" level="INFO">${account_number} = 4565685977</msg>
<status status="PASS" starttime="20210322 03:26:46.342" endtime="20210322 03:26:46.342"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["routing_number"]}</arg>
</arguments>
<assign>
<var>${account_routing_number}</var>
</assign>
<msg timestamp="20210322 03:26:46.343" level="INFO">${account_routing_number} = 001</msg>
<status status="PASS" starttime="20210322 03:26:46.342" endtime="20210322 03:26:46.343"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_routing_number}</arg>
</arguments>
<msg timestamp="20210322 03:26:46.343" level="INFO">${account_routing_number} = 001</msg>
<status status="PASS" starttime="20210322 03:26:46.343" endtime="20210322 03:26:46.343"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:45.747" endtime="20210322 03:26:46.343"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 03:26:46.344" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:26:46.343" endtime="20210322 03:26:46.344"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:43.222" endtime="20210322 03:26:46.344"></status>
</kw>
<kw name="criar chave pix" library="pix_dict_create_entry">
<arguments>
<arg>phone</arg>
<arg>${phone_pix}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 03:26:46.345" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 03:26:46.344" endtime="20210322 03:26:46.345"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:46.344" endtime="20210322 03:26:46.345"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${type}</arg>
</arguments>
<msg timestamp="20210322 03:26:46.345" level="INFO">${type} = phone</msg>
<status status="PASS" starttime="20210322 03:26:46.345" endtime="20210322 03:26:46.345"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210322 03:26:46.346" level="INFO">${value} = +5521979671252</msg>
<status status="PASS" starttime="20210322 03:26:46.346" endtime="20210322 03:26:46.346"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:26:46.346" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 03:26:46.346" endtime="20210322 03:26:46.346"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "${type}",</arg>
<arg>"value": "${value}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 03:26:46.347" level="INFO">${body} = { "type": "phone", "value": "+5521979671252" }</msg>
<status status="PASS" starttime="20210322 03:26:46.346" endtime="20210322 03:26:46.347"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:26:46.347" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/c2fcc5b1778f44cf9287d68c57cc0888/accounts/46dfaf809b5441429ac399ba940cd2e7/entries, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "phone", "value": "+5521979671252" } 
json=None</msg>
<msg timestamp="20210322 03:26:46.967" level="INFO">${response} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20210322 03:26:46.347" endtime="20210322 03:26:46.967"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:26:46.968" level="INFO">{'id': '3d6fd5779f4e49fcbfda600982672db5', 'status': 'waiting_ownership_verification', 'created_at': '2021-03-22T03:26:47.832', 'updated_at': '2021-03-22T03:26:47.832', 'key': {'value': '+5521979671252', 'type': 'phone'}, 'account': {'id': '46dfaf809b5441429ac399ba940cd2e7', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': 'c2fcc5b1778f44cf9287d68c57cc0888', 'owner': {'name': 'Holder de teste', 'national_registration': '79045136848', 'type': 'individual'}, 'routing_number': '001', 'number': '4565685977', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}, 'resource': 'pix.entry'}</msg>
<status status="PASS" starttime="20210322 03:26:46.968" endtime="20210322 03:26:46.969"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:26:46.971" level="INFO">2d300e2d8491bda2</msg>
<status status="PASS" starttime="20210322 03:26:46.969" endtime="20210322 03:26:46.972"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 03:26:46.973" level="INFO">202</msg>
<status status="PASS" starttime="20210322 03:26:46.972" endtime="20210322 03:26:46.973"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:26:46.974" level="INFO">${response} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20210322 03:26:46.973" endtime="20210322 03:26:46.974"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${entry_external_key}</var>
</assign>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:26:46.975" endtime="20210322 03:26:46.976"></status>
</kw>
<msg timestamp="20210322 03:26:46.976" level="INFO">${entry_external_key} = 3d6fd5779f4e49fcbfda600982672db5</msg>
<status status="PASS" starttime="20210322 03:26:46.974" endtime="20210322 03:26:46.976"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${entry_external_key}</arg>
</arguments>
<msg timestamp="20210322 03:26:46.976" level="INFO">${entry_external_key} = 3d6fd5779f4e49fcbfda600982672db5</msg>
<status status="PASS" starttime="20210322 03:26:46.976" endtime="20210322 03:26:46.976"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["key"]["value"]}</arg>
</arguments>
<assign>
<var>${entry_key_value}</var>
</assign>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["key"]["value"]}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:26:46.977" endtime="20210322 03:26:46.978"></status>
</kw>
<msg timestamp="20210322 03:26:46.978" level="INFO">${entry_key_value} = +5521979671252</msg>
<status status="PASS" starttime="20210322 03:26:46.977" endtime="20210322 03:26:46.978"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${entry_key_value}</arg>
</arguments>
<msg timestamp="20210322 03:26:46.979" level="INFO">${entry_key_value} = +5521979671252</msg>
<status status="PASS" starttime="20210322 03:26:46.978" endtime="20210322 03:26:46.979"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:46.344" endtime="20210322 03:26:46.979"></status>
</kw>
<kw name="validar criação da chave pix" library="asserts">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando status_code</arg>
</arguments>
<msg timestamp="20210322 03:26:46.980" level="INFO">Validando status_code</msg>
<status status="PASS" starttime="20210322 03:26:46.980" endtime="20210322 03:26:46.980"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${type}' == 'evp'</arg>
<arg>Should Be Equal As Integers</arg>
<arg>${response.status_code}</arg>
<arg>201</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'phone'</arg>
<arg>Should Be Equal As Integers</arg>
<arg>${response.status_code}</arg>
<arg>202</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'email'</arg>
<arg>Should Be Equal As Integers</arg>
<arg>${response.status_code}</arg>
<arg>202</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'national_registration'</arg>
<arg>Should Be Equal As Integers</arg>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>202</arg>
</arguments>
<msg timestamp="20210322 03:26:46.981" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:26:46.981" endtime="20210322 03:26:46.981"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:46.980" endtime="20210322 03:26:46.982"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar status da chave</arg>
</arguments>
<msg timestamp="20210322 03:26:46.982" level="INFO">Validar status da chave</msg>
<status status="PASS" starttime="20210322 03:26:46.982" endtime="20210322 03:26:46.982"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${type}' == 'evp'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["status"]}</arg>
<arg>active</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'phone'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["status"]}</arg>
<arg>waiting_ownership_verification</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'email'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["status"]}</arg>
<arg>waiting_ownership_verification</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'national_registration'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["status"]}</arg>
<arg>active</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["status"]}</arg>
<arg>waiting_ownership_verification</arg>
</arguments>
<status status="PASS" starttime="20210322 03:26:46.983" endtime="20210322 03:26:46.984"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:46.982" endtime="20210322 03:26:46.984"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando Tipo da chave PIX</arg>
</arguments>
<msg timestamp="20210322 03:26:46.984" level="INFO">Validando Tipo da chave PIX</msg>
<status status="PASS" starttime="20210322 03:26:46.984" endtime="20210322 03:26:46.985"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${type}' == 'evp'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["type"]}</arg>
<arg>${type}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'phone'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["type"]}</arg>
<arg>${type}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'email'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["type"]}</arg>
<arg>${type}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'national_registration'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["type"]}</arg>
<arg>${type}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["key"]["type"]}</arg>
<arg>${type}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:26:46.986" endtime="20210322 03:26:46.988"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:46.985" endtime="20210322 03:26:46.988"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando Valor da chave PIX</arg>
</arguments>
<msg timestamp="20210322 03:26:46.988" level="INFO">Validando Valor da chave PIX</msg>
<status status="PASS" starttime="20210322 03:26:46.988" endtime="20210322 03:26:46.989"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${type}' == 'evp'</arg>
<arg>Should Not Be Empty</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'phone'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${phone_pix}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'email'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${email_pix}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'national_registration'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${national_registration}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${phone_pix}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:26:46.990" endtime="20210322 03:26:46.990"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:46.989" endtime="20210322 03:26:46.990"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando dados da conta</arg>
</arguments>
<msg timestamp="20210322 03:26:46.990" level="INFO">Validando dados da conta</msg>
<status status="PASS" starttime="20210322 03:26:46.990" endtime="20210322 03:26:46.990"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["id"]}</arg>
<arg>${account_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:26:46.991" endtime="20210322 03:26:46.991"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["marketplace"]}</arg>
<arg>${marketplace_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:26:46.991" endtime="20210322 03:26:46.992"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["holder"]}</arg>
<arg>${holder_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:26:46.992" endtime="20210322 03:26:46.992"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["number"]}</arg>
<arg>${account_number}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:26:46.992" endtime="20210322 03:26:46.993"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["routing_number"]}</arg>
<arg>${account_routing_number}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:26:46.993" endtime="20210322 03:26:46.993"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["type"]}</arg>
<arg>CACC</arg>
</arguments>
<status status="PASS" starttime="20210322 03:26:46.993" endtime="20210322 03:26:46.994"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar Proprietário da Account Owner</arg>
</arguments>
<msg timestamp="20210322 03:26:46.994" level="INFO">Validar Proprietário da Account Owner</msg>
<status status="PASS" starttime="20210322 03:26:46.994" endtime="20210322 03:26:46.994"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${holder_type}' == 'individual'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["account"]["owner"]["name"]}</arg>
<arg>${holder_name}</arg>
<arg>ELSE IF</arg>
<arg>'${holder_type}' == 'business'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["account"]["owner"]["name"]}</arg>
<arg>${legal_name}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["account"]["owner"]["name"]}</arg>
<arg>${holder_name}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:26:46.995" endtime="20210322 03:26:46.995"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:46.994" endtime="20210322 03:26:46.995"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar national_registration da Account Owner</arg>
</arguments>
<msg timestamp="20210322 03:26:46.996" level="INFO">Validar national_registration da Account Owner</msg>
<status status="PASS" starttime="20210322 03:26:46.996" endtime="20210322 03:26:46.996"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${holder_type}' == 'individual'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["account"]["owner"]["national_registration"]}</arg>
<arg>${national_registration}</arg>
<arg>ELSE IF</arg>
<arg>'${holder_type}' == 'business'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["account"]["owner"]["national_registration"]}</arg>
<arg>${national_registration}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["account"]["owner"]["national_registration"]}</arg>
<arg>${national_registration}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:26:46.996" endtime="20210322 03:26:46.997"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:46.996" endtime="20210322 03:26:46.997"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar Holder Type do Account Owner</arg>
</arguments>
<msg timestamp="20210322 03:26:46.997" level="INFO">Validar Holder Type do Account Owner</msg>
<status status="PASS" starttime="20210322 03:26:46.997" endtime="20210322 03:26:46.997"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${holder_type}' == 'individual'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["account"]["owner"]["type"]}</arg>
<arg>${holder_type}</arg>
<arg>ELSE IF</arg>
<arg>'${holder_type}' == 'business'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["account"]["owner"]["type"]}</arg>
<arg>${holder_type}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["account"]["owner"]["type"]}</arg>
<arg>${holder_type}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:26:46.998" endtime="20210322 03:26:46.998"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:46.997" endtime="20210322 03:26:46.998"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar PSP</arg>
</arguments>
<msg timestamp="20210322 03:26:46.998" level="INFO">Validar PSP</msg>
<status status="PASS" starttime="20210322 03:26:46.998" endtime="20210322 03:26:46.999"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["psp"]["code"]}</arg>
<arg>19468242</arg>
</arguments>
<status status="PASS" starttime="20210322 03:26:46.999" endtime="20210322 03:26:46.999"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["psp"]["name"]}</arg>
<arg>Zoop Tecnologia e Meios de Pagamento S.A.</arg>
</arguments>
<status status="PASS" starttime="20210322 03:26:46.999" endtime="20210322 03:26:47.000"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:46.979" endtime="20210322 03:26:47.000"></status>
</kw>
<kw name="excluir chave pix" library="pix_dict_delete_entry">
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 03:26:47.001" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 03:26:47.001" endtime="20210322 03:26:47.001"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:47.000" endtime="20210322 03:26:47.001"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:26:47.002" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 03:26:47.002" endtime="20210322 03:26:47.002"></status>
</kw>
<kw name="Delete Request" library="RequestsLibrary">
<doc>Send a DELETE request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries/${entry_external_key}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:26:47.004" level="INFO">DELETE Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/c2fcc5b1778f44cf9287d68c57cc0888/accounts/46dfaf809b5441429ac399ba940cd2e7/entries/3d6fd5779f4e49fcbfda600982672db5, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data=None 
json=None</msg>
<msg timestamp="20210322 03:26:47.630" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:26:47.003" endtime="20210322 03:26:47.630"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:26:47.630" level="INFO">{'message': 'Entry removed successfully'}</msg>
<status status="PASS" starttime="20210322 03:26:47.630" endtime="20210322 03:26:47.630"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:26:47.631" level="INFO">48c5edde22fa7cc9</msg>
<status status="PASS" starttime="20210322 03:26:47.631" endtime="20210322 03:26:47.631"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 03:26:47.632" level="INFO">200</msg>
<status status="PASS" starttime="20210322 03:26:47.631" endtime="20210322 03:26:47.632"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:26:47.632" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:26:47.632" endtime="20210322 03:26:47.632"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:47.000" endtime="20210322 03:26:47.632"></status>
</kw>
<kw name="validar exclusão da chave pix" library="asserts">
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 03:26:47.633" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:26:47.633" endtime="20210322 03:26:47.633"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["message"]}</arg>
<arg>Entry removed successfully</arg>
</arguments>
<status status="PASS" starttime="20210322 03:26:47.634" endtime="20210322 03:26:47.634"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:47.633" endtime="20210322 03:26:47.634"></status>
</kw>
<doc>Fluxo Básico</doc>
<tags>
<tag>regression_test</tag>
<tag>smoke_test</tag>
</tags>
<status status="PASS" starttime="20210322 03:26:43.216" endtime="20210322 03:26:47.635" critical="yes"></status>
</test>
<test id="s1-s1-s4-t3" name="Cenário: Excluir Chave de Endereçamento do tipo Email">
<kw name="Email" library="FakerLibrary">
<assign>
<var>${email_pix}</var>
</assign>
<msg timestamp="20210322 03:26:47.638" level="INFO">${email_pix} = lopesalice@sales.br</msg>
<status status="PASS" starttime="20210322 03:26:47.637" endtime="20210322 03:26:47.638"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${email_pix}</arg>
</arguments>
<msg timestamp="20210322 03:26:47.639" level="INFO">${email_pix} = lopesalice@sales.br</msg>
<status status="PASS" starttime="20210322 03:26:47.638" endtime="20210322 03:26:47.639"></status>
</kw>
<kw name="criar holder individual ativo" library="accreditation_create_holder_active">
<kw name="conectar accreditation" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accreditation</arg>
<arg>url=${accreditation_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 03:26:47.640" level="INFO">Creating Session using : alias=accreditation, url=https://banking-accreditation-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 03:26:47.640" endtime="20210322 03:26:47.640"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:47.639" endtime="20210322 03:26:47.640"></status>
</kw>
<kw name="Cpf" library="FakerLibrary">
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 03:26:47.641" level="INFO">${national_registration} = 807.354.169-66</msg>
<status status="PASS" starttime="20210322 03:26:47.641" endtime="20210322 03:26:47.641"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${national_registration}</arg>
<arg>.</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 03:26:47.641" level="INFO">${national_registration} = 807354169-66</msg>
<status status="PASS" starttime="20210322 03:26:47.641" endtime="20210322 03:26:47.642"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${national_registration}</arg>
<arg>-</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 03:26:47.642" level="INFO">${national_registration} = 80735416966</msg>
<status status="PASS" starttime="20210322 03:26:47.642" endtime="20210322 03:26:47.642"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${national_registration}</arg>
</arguments>
<msg timestamp="20210322 03:26:47.642" level="INFO">${national_registration} = 80735416966</msg>
<status status="PASS" starttime="20210322 03:26:47.642" endtime="20210322 03:26:47.643"></status>
</kw>
<kw name="Rg" library="FakerLibrary">
<doc>Brazilian RG, return plain numbers.
Check:  https://www.ngmatematica.com/2014/02/como-determinar-o-digito-verificador-do.html</doc>
<assign>
<var>${identity_card}</var>
</assign>
<msg timestamp="20210322 03:26:47.643" level="INFO">${identity_card} = 467510234</msg>
<status status="PASS" starttime="20210322 03:26:47.643" endtime="20210322 03:26:47.643"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${identity_card}</arg>
</arguments>
<msg timestamp="20210322 03:26:47.643" level="INFO">${identity_card} = 467510234</msg>
<status status="PASS" starttime="20210322 03:26:47.643" endtime="20210322 03:26:47.643"></status>
</kw>
<kw name="criar holder individual" library="accreditation_post_holder_individual">
<arguments>
<arg>holder_type=individual</arg>
<arg>holder_name=${holder_name}</arg>
<arg>email=${email}</arg>
<arg>national_registration=${national_registration}</arg>
<arg>revenue=${revenue}</arg>
<arg>birthday=${birthday}</arg>
<arg>mothers_name=${mothers_name}</arg>
<arg>identity_card=${identity_card}</arg>
<arg>pep=false</arg>
<arg>cbo=${cbo}</arg>
</arguments>
<kw name="conectar accreditation" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accreditation</arg>
<arg>url=${accreditation_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 03:26:47.645" level="INFO">Creating Session using : alias=accreditation, url=https://banking-accreditation-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 03:26:47.645" endtime="20210322 03:26:47.646"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:47.644" endtime="20210322 03:26:47.646"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_type}</arg>
</arguments>
<msg timestamp="20210322 03:26:47.646" level="INFO">${holder_type} = individual</msg>
<status status="PASS" starttime="20210322 03:26:47.646" endtime="20210322 03:26:47.646"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_name}</arg>
</arguments>
<msg timestamp="20210322 03:26:47.647" level="INFO">${holder_name} = Holder de teste</msg>
<status status="PASS" starttime="20210322 03:26:47.647" endtime="20210322 03:26:47.647"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:26:47.647" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 03:26:47.647" endtime="20210322 03:26:47.647"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "${holder_type}",</arg>
<arg>"name": "${holder_name}",</arg>
<arg>"email": "${email}",</arg>
<arg>"national_registration": "${national_registration}",</arg>
<arg>"revenue": ${revenue},</arg>
<arg>"birthday": "${birthday}",</arg>
<arg>"mothers_name": "${mothers_name}",</arg>
<arg>"identity_card": "${identity_card}",</arg>
<arg>"pep": false,</arg>
<arg>"cbo": ${cbo}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 03:26:47.648" level="INFO">${body} = { "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "80735416966", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder",...</msg>
<status status="PASS" starttime="20210322 03:26:47.648" endtime="20210322 03:26:47.648"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:26:47.649" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "80735416966", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder", "identity_card": "467510234", "pep": false, "cbo": 821450 } 
json=None</msg>
<msg timestamp="20210322 03:26:48.273" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:26:47.649" endtime="20210322 03:26:48.273"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:26:48.274" level="INFO">{'id': 'e8e4838aaa0e44f59be536c2ef41bd7f', 'name': 'Holder de teste', 'revenue': 5500.0, 'email': 'teste@teste.com.br', 'status': 'waiting_info_and_documents', 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'marketplace_name': 'Marketplace de Teste', 'created_at': '2021-03-22T03:26:49.112918', 'updated_at': '2021-03-22T03:26:49.11292', 'type': 'individual', 'national_registration': '80735416966', 'birthday': '1988-04-23', 'mothers_name': 'Mãe do Holder', 'identity_card': '467510234', 'pep': False, 'cbo': '821450', '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/e8e4838aaa0e44f59be536c2ef41bd7f', 'type': 'GET'}, 'phones': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/e8e4838aaa0e44f59be536c2ef41bd7f/phones', 'type': 'GET'}, 'addresses': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/e8e4838aaa0e44f59be536c2ef41bd7f/addresses', 'type': 'GET'}, 'documents': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/e8e4838aaa0e44f59be536c2ef41bd7f/documents', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 03:26:48.273" endtime="20210322 03:26:48.274"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:26:48.275" level="INFO">0a16d0f55300190c</msg>
<status status="PASS" starttime="20210322 03:26:48.274" endtime="20210322 03:26:48.275"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${body}</arg>
</arguments>
<msg timestamp="20210322 03:26:48.275" level="INFO">{ "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "80735416966", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder", "identity_card": "467510234", "pep": false, "cbo": 821450 }</msg>
<status status="PASS" starttime="20210322 03:26:48.275" endtime="20210322 03:26:48.275"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:26:48.276" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:26:48.276" endtime="20210322 03:26:48.276"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${holder_external_key}</var>
</assign>
<msg timestamp="20210322 03:26:48.277" level="INFO">${holder_external_key} = e8e4838aaa0e44f59be536c2ef41bd7f</msg>
<status status="PASS" starttime="20210322 03:26:48.276" endtime="20210322 03:26:48.277"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_external_key}</arg>
</arguments>
<msg timestamp="20210322 03:26:48.278" level="INFO">${holder_external_key} = e8e4838aaa0e44f59be536c2ef41bd7f</msg>
<status status="PASS" starttime="20210322 03:26:48.278" endtime="20210322 03:26:48.278"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:47.643" endtime="20210322 03:26:48.278"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_name}</arg>
</arguments>
<msg timestamp="20210322 03:26:48.279" level="INFO">${holder_name} = Holder de teste</msg>
<status status="PASS" starttime="20210322 03:26:48.278" endtime="20210322 03:26:48.279"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 03:26:48.279" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:26:48.279" endtime="20210322 03:26:48.280"></status>
</kw>
<kw name="criar holder phone" library="accreditation_post_holder_phone">
<arguments>
<arg>21</arg>
<arg>51</arg>
<arg>996221236</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:26:48.281" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 03:26:48.280" endtime="20210322 03:26:48.281"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"area_code": "${phone_area_code}",</arg>
<arg>"country_code": "${phone_country_code}",</arg>
<arg>"number": "${phone_number}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 03:26:48.281" level="INFO">${body} = { "area_code": "21", "country_code": "51", "number": "996221236" }</msg>
<status status="PASS" starttime="20210322 03:26:48.281" endtime="20210322 03:26:48.282"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/phones</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:26:48.282" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/e8e4838aaa0e44f59be536c2ef41bd7f/phones, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "area_code": "21", "country_code": "51", "number": "996221236" } 
json=None</msg>
<msg timestamp="20210322 03:26:48.495" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:26:48.282" endtime="20210322 03:26:48.495"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:26:48.496" level="INFO">{'id': '8825ec2546ac4dc0842ebf37af02bfc3', 'area_code': '21', 'country_code': '51', 'number': '996221236', 'main': True, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/e8e4838aaa0e44f59be536c2ef41bd7f/phones/8825ec2546ac4dc0842ebf37af02bfc3', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/e8e4838aaa0e44f59be536c2ef41bd7f', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 03:26:48.495" endtime="20210322 03:26:48.496"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:26:48.497" level="INFO">58e6236091e57253</msg>
<status status="PASS" starttime="20210322 03:26:48.496" endtime="20210322 03:26:48.497"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:26:48.498" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:26:48.497" endtime="20210322 03:26:48.498"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${phone_external_key}</var>
</assign>
<msg timestamp="20210322 03:26:48.499" level="INFO">${phone_external_key} = 8825ec2546ac4dc0842ebf37af02bfc3</msg>
<status status="PASS" starttime="20210322 03:26:48.498" endtime="20210322 03:26:48.499"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${phone_external_key}</arg>
</arguments>
<msg timestamp="20210322 03:26:48.499" level="INFO">${phone_external_key} = 8825ec2546ac4dc0842ebf37af02bfc3</msg>
<status status="PASS" starttime="20210322 03:26:48.499" endtime="20210322 03:26:48.500"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:48.280" endtime="20210322 03:26:48.500"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 03:26:48.501" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:26:48.500" endtime="20210322 03:26:48.501"></status>
</kw>
<kw name="criar holder address" library="accreditation_post_holder_address">
<arguments>
<arg>Rio de Janeiro</arg>
<arg>Rio de Janeiro</arg>
<arg>Brasil</arg>
<arg>Bairro de Testes</arg>
<arg>Rua de Testes</arg>
<arg>90</arg>
<arg>apto 200</arg>
<arg>21550987</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:26:48.504" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 03:26:48.502" endtime="20210322 03:26:48.505"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"city": "${city}",</arg>
<arg>"state": "${state}",</arg>
<arg>"country": "${country}",</arg>
<arg>"neighborhood": "${neighborhood}",</arg>
<arg>"street": "${street}",</arg>
<arg>"number": "${number}",</arg>
<arg>"complement": "${complement}",</arg>
<arg>"postal_code": "${postal_code}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 03:26:48.506" level="INFO">${body} = { "city": "Rio de Janeiro", "state": "Rio de Janeiro", "country": "Brasil", "neighborhood": "Bairro de Testes", "street": "Rua de Testes", "number": "90", "complement": "apto 200", "postal_code": "215...</msg>
<status status="PASS" starttime="20210322 03:26:48.505" endtime="20210322 03:26:48.506"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/addresses</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:26:48.507" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/e8e4838aaa0e44f59be536c2ef41bd7f/addresses, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "city": "Rio de Janeiro", "state": "Rio de Janeiro", "country": "Brasil", "neighborhood": "Bairro de Testes", "street": "Rua de Testes", "number": "90", "complement": "apto 200", "postal_code": "21550987" } 
json=None</msg>
<msg timestamp="20210322 03:26:48.734" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:26:48.507" endtime="20210322 03:26:48.734"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:26:48.735" level="INFO">{'id': '1a05d832acf94be3b0107cfa98d65c9e', 'street': 'Rua de Testes', 'number': '90', 'city': 'Rio de Janeiro', 'complement': 'apto 200', 'state': 'Rio de Janeiro', 'neighborhood': 'Bairro de Testes', 'postal_code': '21550987', 'country': 'Brasil', 'main': True, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/e8e4838aaa0e44f59be536c2ef41bd7f/addresses/1a05d832acf94be3b0107cfa98d65c9e', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/e8e4838aaa0e44f59be536c2ef41bd7f', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 03:26:48.734" endtime="20210322 03:26:48.735"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:26:48.737" level="INFO">3c5dc5be111fa58b</msg>
<status status="PASS" starttime="20210322 03:26:48.736" endtime="20210322 03:26:48.737"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:26:48.739" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:26:48.738" endtime="20210322 03:26:48.739"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${address_external_key}</var>
</assign>
<msg timestamp="20210322 03:26:48.740" level="INFO">${address_external_key} = 1a05d832acf94be3b0107cfa98d65c9e</msg>
<status status="PASS" starttime="20210322 03:26:48.739" endtime="20210322 03:26:48.740"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${address_external_key}</arg>
</arguments>
<msg timestamp="20210322 03:26:48.741" level="INFO">${address_external_key} = 1a05d832acf94be3b0107cfa98d65c9e</msg>
<status status="PASS" starttime="20210322 03:26:48.740" endtime="20210322 03:26:48.741"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:48.501" endtime="20210322 03:26:48.741"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 03:26:48.741" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:26:48.741" endtime="20210322 03:26:48.742"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>SELFIE</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:26:48.743" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 03:26:48.742" endtime="20210322 03:26:48.743"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 03:26:48.743" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 03:26:48.745" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 03:26:48.743" endtime="20210322 03:26:48.745"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:26:48.746" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/e8e4838aaa0e44f59be536c2ef41bd7f/documents?type=SELFIE, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 03:26:49.031" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:26:48.745" endtime="20210322 03:26:49.031"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:26:49.032" level="INFO">{'id': 'df8eb75f5dcd4bd8974fded3d60e3d5d', 'document_type': 'selfie', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/e8e4838aaa0e44f59be536c2ef41bd7f/documents/df8eb75f5dcd4bd8974fded3d60e3d5d', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/e8e4838aaa0e44f59be536c2ef41bd7f', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/e8e4838aaa0e44f59be536c2ef41bd7f/documents/df8eb75f5dcd4bd8974fded3d60e3d5d/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 03:26:49.031" endtime="20210322 03:26:49.032"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:26:49.033" level="INFO">28f284b75e1bb3f8</msg>
<status status="PASS" starttime="20210322 03:26:49.032" endtime="20210322 03:26:49.033"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:26:49.034" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:26:49.033" endtime="20210322 03:26:49.034"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 03:26:49.036" level="INFO">${document_external_key} = df8eb75f5dcd4bd8974fded3d60e3d5d</msg>
<status status="PASS" starttime="20210322 03:26:49.035" endtime="20210322 03:26:49.036"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 03:26:49.038" level="INFO">${document_external_key} = df8eb75f5dcd4bd8974fded3d60e3d5d</msg>
<status status="PASS" starttime="20210322 03:26:49.037" endtime="20210322 03:26:49.039"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:48.742" endtime="20210322 03:26:49.039"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 03:26:49.040" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:26:49.040" endtime="20210322 03:26:49.040"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>RG_FRENTE</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:26:49.042" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 03:26:49.041" endtime="20210322 03:26:49.042"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 03:26:49.043" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 03:26:49.044" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 03:26:49.042" endtime="20210322 03:26:49.044"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:26:49.045" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/e8e4838aaa0e44f59be536c2ef41bd7f/documents?type=RG_FRENTE, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 03:26:49.294" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:26:49.045" endtime="20210322 03:26:49.294"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:26:49.295" level="INFO">{'id': 'eaae8530e0bd41e9a29f44e5972d2c89', 'document_type': 'rg_frente', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/e8e4838aaa0e44f59be536c2ef41bd7f/documents/eaae8530e0bd41e9a29f44e5972d2c89', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/e8e4838aaa0e44f59be536c2ef41bd7f', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/e8e4838aaa0e44f59be536c2ef41bd7f/documents/eaae8530e0bd41e9a29f44e5972d2c89/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 03:26:49.294" endtime="20210322 03:26:49.295"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:26:49.296" level="INFO">fc13556ce0d71874</msg>
<status status="PASS" starttime="20210322 03:26:49.295" endtime="20210322 03:26:49.296"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:26:49.296" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:26:49.296" endtime="20210322 03:26:49.296"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 03:26:49.297" level="INFO">${document_external_key} = eaae8530e0bd41e9a29f44e5972d2c89</msg>
<status status="PASS" starttime="20210322 03:26:49.297" endtime="20210322 03:26:49.298"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 03:26:49.298" level="INFO">${document_external_key} = eaae8530e0bd41e9a29f44e5972d2c89</msg>
<status status="PASS" starttime="20210322 03:26:49.298" endtime="20210322 03:26:49.298"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:49.041" endtime="20210322 03:26:49.299"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 03:26:49.299" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:26:49.299" endtime="20210322 03:26:49.299"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>RG_VERSO</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:26:49.301" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 03:26:49.300" endtime="20210322 03:26:49.301"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 03:26:49.301" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 03:26:49.303" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 03:26:49.301" endtime="20210322 03:26:49.304"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:26:49.306" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/e8e4838aaa0e44f59be536c2ef41bd7f/documents?type=RG_VERSO, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 03:26:49.559" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:26:49.305" endtime="20210322 03:26:49.559"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:26:49.561" level="INFO">{'id': 'c008d711b8db4d4ca65720a099126579', 'document_type': 'rg_verso', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/e8e4838aaa0e44f59be536c2ef41bd7f/documents/c008d711b8db4d4ca65720a099126579', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/e8e4838aaa0e44f59be536c2ef41bd7f', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/e8e4838aaa0e44f59be536c2ef41bd7f/documents/c008d711b8db4d4ca65720a099126579/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 03:26:49.560" endtime="20210322 03:26:49.561"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:26:49.563" level="INFO">756add8dafb8a7c3</msg>
<status status="PASS" starttime="20210322 03:26:49.562" endtime="20210322 03:26:49.563"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:26:49.565" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:26:49.564" endtime="20210322 03:26:49.565"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 03:26:49.567" level="INFO">${document_external_key} = c008d711b8db4d4ca65720a099126579</msg>
<status status="PASS" starttime="20210322 03:26:49.566" endtime="20210322 03:26:49.568"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 03:26:49.569" level="INFO">${document_external_key} = c008d711b8db4d4ca65720a099126579</msg>
<status status="PASS" starttime="20210322 03:26:49.568" endtime="20210322 03:26:49.569"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:49.300" endtime="20210322 03:26:49.569"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 03:26:49.570" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:26:49.570" endtime="20210322 03:26:49.571"></status>
</kw>
<kw name="solicitar aprovação do holder" library="accreditation_request_approval">
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:26:49.573" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 03:26:49.572" endtime="20210322 03:26:49.573"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/approval</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:26:49.574" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/e8e4838aaa0e44f59be536c2ef41bd7f/approval, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data=None 
json=None</msg>
<msg timestamp="20210322 03:26:49.841" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:26:49.573" endtime="20210322 03:26:49.842"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:26:49.844" level="INFO">{'message': 'Approval request accepted successfully. Processing analysis'}</msg>
<status status="PASS" starttime="20210322 03:26:49.843" endtime="20210322 03:26:49.844"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:26:49.846" level="INFO">525718b5f4dd1fda</msg>
<status status="PASS" starttime="20210322 03:26:49.845" endtime="20210322 03:26:49.846"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:26:49.847" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:26:49.846" endtime="20210322 03:26:49.847"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:49.571" endtime="20210322 03:26:49.847"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 03:26:49.849" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:26:49.848" endtime="20210322 03:26:49.849"></status>
</kw>
<kw name="recebendo notificação de aprovação" library="accreditation_risk_notification">
<kw name="Uuid 4" library="FakerLibrary">
<doc>Generates a random UUID4 string.
:param cast_to: Specify what type the UUID should be cast to. Default is `str`
:type cast_to: callable</doc>
<assign>
<var>${assessment_id}</var>
</assign>
<msg timestamp="20210322 03:26:49.851" level="INFO">${assessment_id} = 57ac755d-b69c-447a-addd-87f0b97f234f</msg>
<status status="PASS" starttime="20210322 03:26:49.850" endtime="20210322 03:26:49.851"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>year</arg>
</arguments>
<assign>
<var>${year}</var>
</assign>
<msg timestamp="20210322 03:26:49.852" level="INFO">${year} = 2021</msg>
<status status="PASS" starttime="20210322 03:26:49.852" endtime="20210322 03:26:49.852"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>month</arg>
</arguments>
<assign>
<var>${month}</var>
</assign>
<msg timestamp="20210322 03:26:49.853" level="INFO">${month} = 03</msg>
<status status="PASS" starttime="20210322 03:26:49.853" endtime="20210322 03:26:49.854"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>day</arg>
</arguments>
<assign>
<var>${day}</var>
</assign>
<msg timestamp="20210322 03:26:49.855" level="INFO">${day} = 22</msg>
<status status="PASS" starttime="20210322 03:26:49.854" endtime="20210322 03:26:49.855"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:26:49.856" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 03:26:49.855" endtime="20210322 03:26:49.856"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "risk.assessment.result",</arg>
<arg>"resource": "business.holder",</arg>
<arg>"created_at": "${year}-${month}-${day} 15:28:56.747Z",</arg>
<arg>"marketplace_id": "${marketplace_external_key}",</arg>
<arg>"object": {</arg>
<arg>"result": "APPROVED",</arg>
<arg>"holder_id": "${holder_external_key}",</arg>
<arg>"applicant_id": "${application_external_key}",</arg>
<arg>"assessment_id": "${assessment_id}"</arg>
<arg>}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 03:26:49.857" level="INFO">${body} = { "type": "risk.assessment.result", "resource": "business.holder", "created_at": "2021-03-22 15:28:56.747Z", "marketplace_id": "f71a8951368a4cc085cf7875ff44e61c", "object": { "result": "APPROVED", "ho...</msg>
<status status="PASS" starttime="20210322 03:26:49.856" endtime="20210322 03:26:49.858"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/admin/internal_operation/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/registration/approval</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:26:49.859" level="INFO">POST Request using : uri=/admin/internal_operation/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/e8e4838aaa0e44f59be536c2ef41bd7f/registration/approval, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "risk.assessment.result", "resource": "business.holder", "created_at": "2021-03-22 15:28:56.747Z", "marketplace_id": "f71a8951368a4cc085cf7875ff44e61c", "object": { "result": "APPROVED", "holder_id": "e8e4838aaa0e44f59be536c2ef41bd7f", "applicant_id": "bcc25a6751c14b52af1340d40dba78c5", "assessment_id": "57ac755d-b69c-447a-addd-87f0b97f234f" } } 
json=None</msg>
<msg timestamp="20210322 03:26:50.057" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:26:49.858" endtime="20210322 03:26:50.057"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:26:50.058" level="INFO">{'message': 'Holder approved successfully'}</msg>
<status status="PASS" starttime="20210322 03:26:50.057" endtime="20210322 03:26:50.058"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:26:50.059" level="INFO">b808fc2b458fe96b</msg>
<status status="PASS" starttime="20210322 03:26:50.058" endtime="20210322 03:26:50.059"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:26:50.061" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:26:50.060" endtime="20210322 03:26:50.061"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 03:26:50.061" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:26:50.061" endtime="20210322 03:26:50.061"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:49.849" endtime="20210322 03:26:50.062"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 03:26:50.063" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:26:50.062" endtime="20210322 03:26:50.063"></status>
</kw>
<kw name="buscar account por holder" library="accounts_get_accounts_by_holder">
<kw name="conectar accounts" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accounts</arg>
<arg>url=${account_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 03:26:50.065" level="INFO">Creating Session using : alias=accounts, url=https://banking-accounts-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 03:26:50.065" endtime="20210322 03:26:50.066"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:50.064" endtime="20210322 03:26:50.066"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accounts</arg>
<arg>/marketplaces/${marketplace_external_key}/holders/${holder_external_key}/accounts</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:26:50.067" level="INFO">GET Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/holders/e8e4838aaa0e44f59be536c2ef41bd7f/accounts, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 03:26:50.689" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:26:50.066" endtime="20210322 03:26:50.689"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:26:50.690" level="INFO">{'items': [{'id': '708ef418a1774cc39460d334f8eb7816', 'holder': 'e8e4838aaa0e44f59be536c2ef41bd7f', 'balance': '0.00', 'currency': 'BRL', 'routing_number': '001', 'number': '3366417400', 'status': 'active', 'metadata': {}, 'created_at': '2021-03-22T06:26:50.909758', 'updated_at': '2021-03-22T06:26:50.909758', 'primary': True, 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'uri': '/v2/marketplaces/f71a8951368a4cc085cf7875ff44e61c/accounts/708ef418a1774cc39460d334f8eb7816', 'resource': 'payment_account'}], 'has_more': False, 'limit': 100, 'total_pages': 1, 'page': 1, 'offset': 0, 'total': '1', 'query_count': '1'}</msg>
<status status="PASS" starttime="20210322 03:26:50.690" endtime="20210322 03:26:50.690"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:26:50.691" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:26:50.690" endtime="20210322 03:26:50.691"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["id"]}</arg>
</arguments>
<assign>
<var>${account_external_key}</var>
</assign>
<msg timestamp="20210322 03:26:50.692" level="INFO">${account_external_key} = 708ef418a1774cc39460d334f8eb7816</msg>
<status status="PASS" starttime="20210322 03:26:50.691" endtime="20210322 03:26:50.692"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_external_key}</arg>
</arguments>
<msg timestamp="20210322 03:26:50.692" level="INFO">${account_external_key} = 708ef418a1774cc39460d334f8eb7816</msg>
<status status="PASS" starttime="20210322 03:26:50.692" endtime="20210322 03:26:50.692"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["number"]}</arg>
</arguments>
<assign>
<var>${account_number}</var>
</assign>
<msg timestamp="20210322 03:26:50.693" level="INFO">${account_number} = 3366417400</msg>
<status status="PASS" starttime="20210322 03:26:50.692" endtime="20210322 03:26:50.693"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_number}</arg>
</arguments>
<msg timestamp="20210322 03:26:50.693" level="INFO">${account_number} = 3366417400</msg>
<status status="PASS" starttime="20210322 03:26:50.693" endtime="20210322 03:26:50.693"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["routing_number"]}</arg>
</arguments>
<assign>
<var>${account_routing_number}</var>
</assign>
<msg timestamp="20210322 03:26:50.694" level="INFO">${account_routing_number} = 001</msg>
<status status="PASS" starttime="20210322 03:26:50.693" endtime="20210322 03:26:50.694"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_routing_number}</arg>
</arguments>
<msg timestamp="20210322 03:26:50.694" level="INFO">${account_routing_number} = 001</msg>
<status status="PASS" starttime="20210322 03:26:50.694" endtime="20210322 03:26:50.694"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:50.064" endtime="20210322 03:26:50.694"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 03:26:50.695" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:26:50.694" endtime="20210322 03:26:50.695"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:47.639" endtime="20210322 03:26:50.695"></status>
</kw>
<kw name="criar chave pix" library="pix_dict_create_entry">
<arguments>
<arg>email</arg>
<arg>${email_pix}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 03:26:50.696" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 03:26:50.696" endtime="20210322 03:26:50.697"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:50.696" endtime="20210322 03:26:50.697"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${type}</arg>
</arguments>
<msg timestamp="20210322 03:26:50.698" level="INFO">${type} = email</msg>
<status status="PASS" starttime="20210322 03:26:50.697" endtime="20210322 03:26:50.698"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210322 03:26:50.699" level="INFO">${value} = lopesalice@sales.br</msg>
<status status="PASS" starttime="20210322 03:26:50.699" endtime="20210322 03:26:50.700"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:26:50.700" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 03:26:50.700" endtime="20210322 03:26:50.700"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "${type}",</arg>
<arg>"value": "${value}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 03:26:50.702" level="INFO">${body} = { "type": "email", "value": "lopesalice@sales.br" }</msg>
<status status="PASS" starttime="20210322 03:26:50.700" endtime="20210322 03:26:50.702"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:26:50.703" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/e8e4838aaa0e44f59be536c2ef41bd7f/accounts/708ef418a1774cc39460d334f8eb7816/entries, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "email", "value": "lopesalice@sales.br" } 
json=None</msg>
<msg timestamp="20210322 03:26:51.371" level="INFO">${response} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20210322 03:26:50.702" endtime="20210322 03:26:51.371"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:26:51.372" level="INFO">{'id': '543c7ab4d3ec457daba43def5a02f79c', 'status': 'waiting_ownership_verification', 'created_at': '2021-03-22T03:26:52.235', 'updated_at': '2021-03-22T03:26:52.235', 'key': {'value': 'lopesalice@sales.br', 'type': 'email'}, 'account': {'id': '708ef418a1774cc39460d334f8eb7816', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': 'e8e4838aaa0e44f59be536c2ef41bd7f', 'owner': {'name': 'Holder de teste', 'national_registration': '80735416966', 'type': 'individual'}, 'routing_number': '001', 'number': '3366417400', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}, 'resource': 'pix.entry'}</msg>
<status status="PASS" starttime="20210322 03:26:51.372" endtime="20210322 03:26:51.372"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:26:51.373" level="INFO">cbe509e813336563</msg>
<status status="PASS" starttime="20210322 03:26:51.373" endtime="20210322 03:26:51.373"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 03:26:51.374" level="INFO">202</msg>
<status status="PASS" starttime="20210322 03:26:51.373" endtime="20210322 03:26:51.374"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:26:51.375" level="INFO">${response} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20210322 03:26:51.374" endtime="20210322 03:26:51.375"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${entry_external_key}</var>
</assign>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:26:51.376" endtime="20210322 03:26:51.376"></status>
</kw>
<msg timestamp="20210322 03:26:51.376" level="INFO">${entry_external_key} = 543c7ab4d3ec457daba43def5a02f79c</msg>
<status status="PASS" starttime="20210322 03:26:51.375" endtime="20210322 03:26:51.376"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${entry_external_key}</arg>
</arguments>
<msg timestamp="20210322 03:26:51.377" level="INFO">${entry_external_key} = 543c7ab4d3ec457daba43def5a02f79c</msg>
<status status="PASS" starttime="20210322 03:26:51.377" endtime="20210322 03:26:51.377"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["key"]["value"]}</arg>
</arguments>
<assign>
<var>${entry_key_value}</var>
</assign>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["key"]["value"]}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:26:51.378" endtime="20210322 03:26:51.379"></status>
</kw>
<msg timestamp="20210322 03:26:51.379" level="INFO">${entry_key_value} = lopesalice@sales.br</msg>
<status status="PASS" starttime="20210322 03:26:51.378" endtime="20210322 03:26:51.379"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${entry_key_value}</arg>
</arguments>
<msg timestamp="20210322 03:26:51.380" level="INFO">${entry_key_value} = lopesalice@sales.br</msg>
<status status="PASS" starttime="20210322 03:26:51.379" endtime="20210322 03:26:51.380"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:50.695" endtime="20210322 03:26:51.380"></status>
</kw>
<kw name="validar criação da chave pix" library="asserts">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando status_code</arg>
</arguments>
<msg timestamp="20210322 03:26:51.381" level="INFO">Validando status_code</msg>
<status status="PASS" starttime="20210322 03:26:51.380" endtime="20210322 03:26:51.381"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${type}' == 'evp'</arg>
<arg>Should Be Equal As Integers</arg>
<arg>${response.status_code}</arg>
<arg>201</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'phone'</arg>
<arg>Should Be Equal As Integers</arg>
<arg>${response.status_code}</arg>
<arg>202</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'email'</arg>
<arg>Should Be Equal As Integers</arg>
<arg>${response.status_code}</arg>
<arg>202</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'national_registration'</arg>
<arg>Should Be Equal As Integers</arg>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>202</arg>
</arguments>
<msg timestamp="20210322 03:26:51.382" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:26:51.382" endtime="20210322 03:26:51.382"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:51.381" endtime="20210322 03:26:51.382"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar status da chave</arg>
</arguments>
<msg timestamp="20210322 03:26:51.383" level="INFO">Validar status da chave</msg>
<status status="PASS" starttime="20210322 03:26:51.383" endtime="20210322 03:26:51.383"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${type}' == 'evp'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["status"]}</arg>
<arg>active</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'phone'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["status"]}</arg>
<arg>waiting_ownership_verification</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'email'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["status"]}</arg>
<arg>waiting_ownership_verification</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'national_registration'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["status"]}</arg>
<arg>active</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["status"]}</arg>
<arg>waiting_ownership_verification</arg>
</arguments>
<status status="PASS" starttime="20210322 03:26:51.384" endtime="20210322 03:26:51.384"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:51.383" endtime="20210322 03:26:51.384"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando Tipo da chave PIX</arg>
</arguments>
<msg timestamp="20210322 03:26:51.385" level="INFO">Validando Tipo da chave PIX</msg>
<status status="PASS" starttime="20210322 03:26:51.385" endtime="20210322 03:26:51.385"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${type}' == 'evp'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["type"]}</arg>
<arg>${type}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'phone'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["type"]}</arg>
<arg>${type}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'email'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["type"]}</arg>
<arg>${type}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'national_registration'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["type"]}</arg>
<arg>${type}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["key"]["type"]}</arg>
<arg>${type}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:26:51.386" endtime="20210322 03:26:51.388"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:51.385" endtime="20210322 03:26:51.388"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando Valor da chave PIX</arg>
</arguments>
<msg timestamp="20210322 03:26:51.388" level="INFO">Validando Valor da chave PIX</msg>
<status status="PASS" starttime="20210322 03:26:51.388" endtime="20210322 03:26:51.388"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${type}' == 'evp'</arg>
<arg>Should Not Be Empty</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'phone'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${phone_pix}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'email'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${email_pix}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'national_registration'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${national_registration}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${email_pix}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:26:51.389" endtime="20210322 03:26:51.389"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:51.388" endtime="20210322 03:26:51.389"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando dados da conta</arg>
</arguments>
<msg timestamp="20210322 03:26:51.390" level="INFO">Validando dados da conta</msg>
<status status="PASS" starttime="20210322 03:26:51.390" endtime="20210322 03:26:51.390"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["id"]}</arg>
<arg>${account_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:26:51.390" endtime="20210322 03:26:51.390"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["marketplace"]}</arg>
<arg>${marketplace_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:26:51.391" endtime="20210322 03:26:51.391"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["holder"]}</arg>
<arg>${holder_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:26:51.391" endtime="20210322 03:26:51.392"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["number"]}</arg>
<arg>${account_number}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:26:51.392" endtime="20210322 03:26:51.392"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["routing_number"]}</arg>
<arg>${account_routing_number}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:26:51.392" endtime="20210322 03:26:51.407"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["type"]}</arg>
<arg>CACC</arg>
</arguments>
<status status="PASS" starttime="20210322 03:26:51.408" endtime="20210322 03:26:51.408"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar Proprietário da Account Owner</arg>
</arguments>
<msg timestamp="20210322 03:26:51.408" level="INFO">Validar Proprietário da Account Owner</msg>
<status status="PASS" starttime="20210322 03:26:51.408" endtime="20210322 03:26:51.408"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${holder_type}' == 'individual'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["account"]["owner"]["name"]}</arg>
<arg>${holder_name}</arg>
<arg>ELSE IF</arg>
<arg>'${holder_type}' == 'business'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["account"]["owner"]["name"]}</arg>
<arg>${legal_name}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["account"]["owner"]["name"]}</arg>
<arg>${holder_name}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:26:51.409" endtime="20210322 03:26:51.409"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:51.408" endtime="20210322 03:26:51.409"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar national_registration da Account Owner</arg>
</arguments>
<msg timestamp="20210322 03:26:51.410" level="INFO">Validar national_registration da Account Owner</msg>
<status status="PASS" starttime="20210322 03:26:51.410" endtime="20210322 03:26:51.410"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${holder_type}' == 'individual'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["account"]["owner"]["national_registration"]}</arg>
<arg>${national_registration}</arg>
<arg>ELSE IF</arg>
<arg>'${holder_type}' == 'business'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["account"]["owner"]["national_registration"]}</arg>
<arg>${national_registration}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["account"]["owner"]["national_registration"]}</arg>
<arg>${national_registration}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:26:51.411" endtime="20210322 03:26:51.411"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:51.410" endtime="20210322 03:26:51.411"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar Holder Type do Account Owner</arg>
</arguments>
<msg timestamp="20210322 03:26:51.411" level="INFO">Validar Holder Type do Account Owner</msg>
<status status="PASS" starttime="20210322 03:26:51.411" endtime="20210322 03:26:51.411"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${holder_type}' == 'individual'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["account"]["owner"]["type"]}</arg>
<arg>${holder_type}</arg>
<arg>ELSE IF</arg>
<arg>'${holder_type}' == 'business'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["account"]["owner"]["type"]}</arg>
<arg>${holder_type}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["account"]["owner"]["type"]}</arg>
<arg>${holder_type}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:26:51.412" endtime="20210322 03:26:51.412"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:51.412" endtime="20210322 03:26:51.412"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar PSP</arg>
</arguments>
<msg timestamp="20210322 03:26:51.413" level="INFO">Validar PSP</msg>
<status status="PASS" starttime="20210322 03:26:51.413" endtime="20210322 03:26:51.413"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["psp"]["code"]}</arg>
<arg>19468242</arg>
</arguments>
<status status="PASS" starttime="20210322 03:26:51.413" endtime="20210322 03:26:51.413"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["psp"]["name"]}</arg>
<arg>Zoop Tecnologia e Meios de Pagamento S.A.</arg>
</arguments>
<status status="PASS" starttime="20210322 03:26:51.414" endtime="20210322 03:26:51.414"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:51.380" endtime="20210322 03:26:51.414"></status>
</kw>
<kw name="excluir chave pix" library="pix_dict_delete_entry">
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 03:26:51.415" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 03:26:51.415" endtime="20210322 03:26:51.415"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:51.414" endtime="20210322 03:26:51.415"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:26:51.416" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 03:26:51.416" endtime="20210322 03:26:51.416"></status>
</kw>
<kw name="Delete Request" library="RequestsLibrary">
<doc>Send a DELETE request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries/${entry_external_key}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:26:51.417" level="INFO">DELETE Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/e8e4838aaa0e44f59be536c2ef41bd7f/accounts/708ef418a1774cc39460d334f8eb7816/entries/543c7ab4d3ec457daba43def5a02f79c, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data=None 
json=None</msg>
<msg timestamp="20210322 03:26:52.023" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:26:51.416" endtime="20210322 03:26:52.023"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:26:52.024" level="INFO">{'message': 'Entry removed successfully'}</msg>
<status status="PASS" starttime="20210322 03:26:52.024" endtime="20210322 03:26:52.024"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:26:52.025" level="INFO">8091583cdcddebda</msg>
<status status="PASS" starttime="20210322 03:26:52.025" endtime="20210322 03:26:52.025"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 03:26:52.026" level="INFO">200</msg>
<status status="PASS" starttime="20210322 03:26:52.026" endtime="20210322 03:26:52.026"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:26:52.027" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:26:52.026" endtime="20210322 03:26:52.027"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:51.414" endtime="20210322 03:26:52.027"></status>
</kw>
<kw name="validar exclusão da chave pix" library="asserts">
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 03:26:52.028" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:26:52.028" endtime="20210322 03:26:52.029"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["message"]}</arg>
<arg>Entry removed successfully</arg>
</arguments>
<status status="PASS" starttime="20210322 03:26:52.029" endtime="20210322 03:26:52.029"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:52.028" endtime="20210322 03:26:52.030"></status>
</kw>
<doc>Fluxo Básico</doc>
<tags>
<tag>regression_test</tag>
<tag>smoke_test</tag>
</tags>
<status status="PASS" starttime="20210322 03:26:47.635" endtime="20210322 03:26:52.030" critical="yes"></status>
</test>
<test id="s1-s1-s4-t4" name="Cenário: Excluir Chave de Endereçamento do tipo CPF">
<kw name="criar holder individual ativo" library="accreditation_create_holder_active">
<kw name="conectar accreditation" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accreditation</arg>
<arg>url=${accreditation_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 03:26:52.032" level="INFO">Creating Session using : alias=accreditation, url=https://banking-accreditation-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 03:26:52.032" endtime="20210322 03:26:52.033"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:52.031" endtime="20210322 03:26:52.033"></status>
</kw>
<kw name="Cpf" library="FakerLibrary">
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 03:26:52.033" level="INFO">${national_registration} = 274.038.695-83</msg>
<status status="PASS" starttime="20210322 03:26:52.033" endtime="20210322 03:26:52.033"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${national_registration}</arg>
<arg>.</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 03:26:52.035" level="INFO">${national_registration} = 274038695-83</msg>
<status status="PASS" starttime="20210322 03:26:52.034" endtime="20210322 03:26:52.035"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${national_registration}</arg>
<arg>-</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 03:26:52.036" level="INFO">${national_registration} = 27403869583</msg>
<status status="PASS" starttime="20210322 03:26:52.035" endtime="20210322 03:26:52.036"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${national_registration}</arg>
</arguments>
<msg timestamp="20210322 03:26:52.038" level="INFO">${national_registration} = 27403869583</msg>
<status status="PASS" starttime="20210322 03:26:52.037" endtime="20210322 03:26:52.038"></status>
</kw>
<kw name="Rg" library="FakerLibrary">
<doc>Brazilian RG, return plain numbers.
Check:  https://www.ngmatematica.com/2014/02/como-determinar-o-digito-verificador-do.html</doc>
<assign>
<var>${identity_card}</var>
</assign>
<msg timestamp="20210322 03:26:52.039" level="INFO">${identity_card} = 278046514</msg>
<status status="PASS" starttime="20210322 03:26:52.038" endtime="20210322 03:26:52.039"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${identity_card}</arg>
</arguments>
<msg timestamp="20210322 03:26:52.039" level="INFO">${identity_card} = 278046514</msg>
<status status="PASS" starttime="20210322 03:26:52.039" endtime="20210322 03:26:52.039"></status>
</kw>
<kw name="criar holder individual" library="accreditation_post_holder_individual">
<arguments>
<arg>holder_type=individual</arg>
<arg>holder_name=${holder_name}</arg>
<arg>email=${email}</arg>
<arg>national_registration=${national_registration}</arg>
<arg>revenue=${revenue}</arg>
<arg>birthday=${birthday}</arg>
<arg>mothers_name=${mothers_name}</arg>
<arg>identity_card=${identity_card}</arg>
<arg>pep=false</arg>
<arg>cbo=${cbo}</arg>
</arguments>
<kw name="conectar accreditation" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accreditation</arg>
<arg>url=${accreditation_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 03:26:52.042" level="INFO">Creating Session using : alias=accreditation, url=https://banking-accreditation-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 03:26:52.042" endtime="20210322 03:26:52.042"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:52.041" endtime="20210322 03:26:52.042"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_type}</arg>
</arguments>
<msg timestamp="20210322 03:26:52.042" level="INFO">${holder_type} = individual</msg>
<status status="PASS" starttime="20210322 03:26:52.042" endtime="20210322 03:26:52.042"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_name}</arg>
</arguments>
<msg timestamp="20210322 03:26:52.043" level="INFO">${holder_name} = Holder de teste</msg>
<status status="PASS" starttime="20210322 03:26:52.043" endtime="20210322 03:26:52.043"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:26:52.044" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 03:26:52.043" endtime="20210322 03:26:52.044"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "${holder_type}",</arg>
<arg>"name": "${holder_name}",</arg>
<arg>"email": "${email}",</arg>
<arg>"national_registration": "${national_registration}",</arg>
<arg>"revenue": ${revenue},</arg>
<arg>"birthday": "${birthday}",</arg>
<arg>"mothers_name": "${mothers_name}",</arg>
<arg>"identity_card": "${identity_card}",</arg>
<arg>"pep": false,</arg>
<arg>"cbo": ${cbo}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 03:26:52.044" level="INFO">${body} = { "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "27403869583", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder",...</msg>
<status status="PASS" starttime="20210322 03:26:52.044" endtime="20210322 03:26:52.045"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:26:52.045" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "27403869583", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder", "identity_card": "278046514", "pep": false, "cbo": 821450 } 
json=None</msg>
<msg timestamp="20210322 03:26:52.723" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:26:52.045" endtime="20210322 03:26:52.723"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:26:52.723" level="INFO">{'id': 'ed075bc67a224d9982d70829c3d93089', 'name': 'Holder de teste', 'revenue': 5500.0, 'email': 'teste@teste.com.br', 'status': 'waiting_info_and_documents', 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'marketplace_name': 'Marketplace de Teste', 'created_at': '2021-03-22T03:26:53.54605', 'updated_at': '2021-03-22T03:26:53.546052', 'type': 'individual', 'national_registration': '27403869583', 'birthday': '1988-04-23', 'mothers_name': 'Mãe do Holder', 'identity_card': '278046514', 'pep': False, 'cbo': '821450', '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/ed075bc67a224d9982d70829c3d93089', 'type': 'GET'}, 'phones': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/ed075bc67a224d9982d70829c3d93089/phones', 'type': 'GET'}, 'addresses': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/ed075bc67a224d9982d70829c3d93089/addresses', 'type': 'GET'}, 'documents': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/ed075bc67a224d9982d70829c3d93089/documents', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 03:26:52.723" endtime="20210322 03:26:52.724"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:26:52.724" level="INFO">0308270607d7cafe</msg>
<status status="PASS" starttime="20210322 03:26:52.724" endtime="20210322 03:26:52.724"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${body}</arg>
</arguments>
<msg timestamp="20210322 03:26:52.725" level="INFO">{ "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "27403869583", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder", "identity_card": "278046514", "pep": false, "cbo": 821450 }</msg>
<status status="PASS" starttime="20210322 03:26:52.724" endtime="20210322 03:26:52.725"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:26:52.725" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:26:52.725" endtime="20210322 03:26:52.725"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${holder_external_key}</var>
</assign>
<msg timestamp="20210322 03:26:52.726" level="INFO">${holder_external_key} = ed075bc67a224d9982d70829c3d93089</msg>
<status status="PASS" starttime="20210322 03:26:52.725" endtime="20210322 03:26:52.726"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_external_key}</arg>
</arguments>
<msg timestamp="20210322 03:26:52.726" level="INFO">${holder_external_key} = ed075bc67a224d9982d70829c3d93089</msg>
<status status="PASS" starttime="20210322 03:26:52.726" endtime="20210322 03:26:52.727"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:52.040" endtime="20210322 03:26:52.727"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_name}</arg>
</arguments>
<msg timestamp="20210322 03:26:52.727" level="INFO">${holder_name} = Holder de teste</msg>
<status status="PASS" starttime="20210322 03:26:52.727" endtime="20210322 03:26:52.727"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 03:26:52.728" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:26:52.727" endtime="20210322 03:26:52.728"></status>
</kw>
<kw name="criar holder phone" library="accreditation_post_holder_phone">
<arguments>
<arg>21</arg>
<arg>51</arg>
<arg>996221236</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:26:52.728" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 03:26:52.728" endtime="20210322 03:26:52.728"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"area_code": "${phone_area_code}",</arg>
<arg>"country_code": "${phone_country_code}",</arg>
<arg>"number": "${phone_number}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 03:26:52.729" level="INFO">${body} = { "area_code": "21", "country_code": "51", "number": "996221236" }</msg>
<status status="PASS" starttime="20210322 03:26:52.729" endtime="20210322 03:26:52.729"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/phones</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:26:52.730" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/ed075bc67a224d9982d70829c3d93089/phones, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "area_code": "21", "country_code": "51", "number": "996221236" } 
json=None</msg>
<msg timestamp="20210322 03:26:52.945" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:26:52.729" endtime="20210322 03:26:52.945"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:26:52.946" level="INFO">{'id': '60575ee37375441d9026a68a72c6d8d6', 'area_code': '21', 'country_code': '51', 'number': '996221236', 'main': True, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/ed075bc67a224d9982d70829c3d93089/phones/60575ee37375441d9026a68a72c6d8d6', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/ed075bc67a224d9982d70829c3d93089', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 03:26:52.945" endtime="20210322 03:26:52.946"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:26:52.946" level="INFO">d4d55c4ffd70dcf3</msg>
<status status="PASS" starttime="20210322 03:26:52.946" endtime="20210322 03:26:52.946"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:26:52.947" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:26:52.947" endtime="20210322 03:26:52.947"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${phone_external_key}</var>
</assign>
<msg timestamp="20210322 03:26:52.948" level="INFO">${phone_external_key} = 60575ee37375441d9026a68a72c6d8d6</msg>
<status status="PASS" starttime="20210322 03:26:52.947" endtime="20210322 03:26:52.948"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${phone_external_key}</arg>
</arguments>
<msg timestamp="20210322 03:26:52.948" level="INFO">${phone_external_key} = 60575ee37375441d9026a68a72c6d8d6</msg>
<status status="PASS" starttime="20210322 03:26:52.948" endtime="20210322 03:26:52.948"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:52.728" endtime="20210322 03:26:52.949"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 03:26:52.949" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:26:52.949" endtime="20210322 03:26:52.949"></status>
</kw>
<kw name="criar holder address" library="accreditation_post_holder_address">
<arguments>
<arg>Rio de Janeiro</arg>
<arg>Rio de Janeiro</arg>
<arg>Brasil</arg>
<arg>Bairro de Testes</arg>
<arg>Rua de Testes</arg>
<arg>90</arg>
<arg>apto 200</arg>
<arg>21550987</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:26:52.950" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 03:26:52.950" endtime="20210322 03:26:52.950"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"city": "${city}",</arg>
<arg>"state": "${state}",</arg>
<arg>"country": "${country}",</arg>
<arg>"neighborhood": "${neighborhood}",</arg>
<arg>"street": "${street}",</arg>
<arg>"number": "${number}",</arg>
<arg>"complement": "${complement}",</arg>
<arg>"postal_code": "${postal_code}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 03:26:52.951" level="INFO">${body} = { "city": "Rio de Janeiro", "state": "Rio de Janeiro", "country": "Brasil", "neighborhood": "Bairro de Testes", "street": "Rua de Testes", "number": "90", "complement": "apto 200", "postal_code": "215...</msg>
<status status="PASS" starttime="20210322 03:26:52.951" endtime="20210322 03:26:52.951"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/addresses</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:26:52.953" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/ed075bc67a224d9982d70829c3d93089/addresses, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "city": "Rio de Janeiro", "state": "Rio de Janeiro", "country": "Brasil", "neighborhood": "Bairro de Testes", "street": "Rua de Testes", "number": "90", "complement": "apto 200", "postal_code": "21550987" } 
json=None</msg>
<msg timestamp="20210322 03:26:53.208" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:26:52.952" endtime="20210322 03:26:53.208"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:26:53.208" level="INFO">{'id': 'ad05e5946c2a4625a8ed48b355595309', 'street': 'Rua de Testes', 'number': '90', 'city': 'Rio de Janeiro', 'complement': 'apto 200', 'state': 'Rio de Janeiro', 'neighborhood': 'Bairro de Testes', 'postal_code': '21550987', 'country': 'Brasil', 'main': True, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/ed075bc67a224d9982d70829c3d93089/addresses/ad05e5946c2a4625a8ed48b355595309', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/ed075bc67a224d9982d70829c3d93089', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 03:26:53.208" endtime="20210322 03:26:53.208"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:26:53.209" level="INFO">ef31e7386e5ff3c1</msg>
<status status="PASS" starttime="20210322 03:26:53.209" endtime="20210322 03:26:53.210"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:26:53.210" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:26:53.210" endtime="20210322 03:26:53.210"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${address_external_key}</var>
</assign>
<msg timestamp="20210322 03:26:53.211" level="INFO">${address_external_key} = ad05e5946c2a4625a8ed48b355595309</msg>
<status status="PASS" starttime="20210322 03:26:53.210" endtime="20210322 03:26:53.211"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${address_external_key}</arg>
</arguments>
<msg timestamp="20210322 03:26:53.211" level="INFO">${address_external_key} = ad05e5946c2a4625a8ed48b355595309</msg>
<status status="PASS" starttime="20210322 03:26:53.211" endtime="20210322 03:26:53.211"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:52.949" endtime="20210322 03:26:53.211"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 03:26:53.212" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:26:53.212" endtime="20210322 03:26:53.212"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>SELFIE</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:26:53.213" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 03:26:53.213" endtime="20210322 03:26:53.213"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 03:26:53.213" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 03:26:53.214" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 03:26:53.213" endtime="20210322 03:26:53.214"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:26:53.215" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/ed075bc67a224d9982d70829c3d93089/documents?type=SELFIE, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 03:26:53.490" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:26:53.214" endtime="20210322 03:26:53.490"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:26:53.492" level="INFO">{'id': 'c1d4c4f3cf7d44afa8d8e497243174fd', 'document_type': 'selfie', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/ed075bc67a224d9982d70829c3d93089/documents/c1d4c4f3cf7d44afa8d8e497243174fd', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/ed075bc67a224d9982d70829c3d93089', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/ed075bc67a224d9982d70829c3d93089/documents/c1d4c4f3cf7d44afa8d8e497243174fd/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 03:26:53.491" endtime="20210322 03:26:53.492"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:26:53.492" level="INFO">70f0e70472384dde</msg>
<status status="PASS" starttime="20210322 03:26:53.492" endtime="20210322 03:26:53.492"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:26:53.493" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:26:53.493" endtime="20210322 03:26:53.493"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 03:26:53.494" level="INFO">${document_external_key} = c1d4c4f3cf7d44afa8d8e497243174fd</msg>
<status status="PASS" starttime="20210322 03:26:53.493" endtime="20210322 03:26:53.494"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 03:26:53.495" level="INFO">${document_external_key} = c1d4c4f3cf7d44afa8d8e497243174fd</msg>
<status status="PASS" starttime="20210322 03:26:53.494" endtime="20210322 03:26:53.495"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:53.212" endtime="20210322 03:26:53.495"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 03:26:53.495" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:26:53.495" endtime="20210322 03:26:53.495"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>RG_FRENTE</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:26:53.496" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 03:26:53.496" endtime="20210322 03:26:53.496"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 03:26:53.497" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 03:26:53.498" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 03:26:53.497" endtime="20210322 03:26:53.500"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:26:53.500" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/ed075bc67a224d9982d70829c3d93089/documents?type=RG_FRENTE, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 03:26:53.757" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:26:53.500" endtime="20210322 03:26:53.757"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:26:53.758" level="INFO">{'id': '6dfb6b07ba924534908556668e0b2f67', 'document_type': 'rg_frente', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/ed075bc67a224d9982d70829c3d93089/documents/6dfb6b07ba924534908556668e0b2f67', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/ed075bc67a224d9982d70829c3d93089', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/ed075bc67a224d9982d70829c3d93089/documents/6dfb6b07ba924534908556668e0b2f67/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 03:26:53.758" endtime="20210322 03:26:53.758"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:26:53.758" level="INFO">a220248c49a00b66</msg>
<status status="PASS" starttime="20210322 03:26:53.758" endtime="20210322 03:26:53.758"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:26:53.759" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:26:53.759" endtime="20210322 03:26:53.759"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 03:26:53.760" level="INFO">${document_external_key} = 6dfb6b07ba924534908556668e0b2f67</msg>
<status status="PASS" starttime="20210322 03:26:53.759" endtime="20210322 03:26:53.760"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 03:26:53.760" level="INFO">${document_external_key} = 6dfb6b07ba924534908556668e0b2f67</msg>
<status status="PASS" starttime="20210322 03:26:53.760" endtime="20210322 03:26:53.760"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:53.496" endtime="20210322 03:26:53.760"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 03:26:53.761" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:26:53.761" endtime="20210322 03:26:53.761"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>RG_VERSO</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:26:53.762" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 03:26:53.761" endtime="20210322 03:26:53.762"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 03:26:53.762" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 03:26:53.763" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 03:26:53.762" endtime="20210322 03:26:53.764"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:26:53.764" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/ed075bc67a224d9982d70829c3d93089/documents?type=RG_VERSO, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 03:26:54.029" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:26:53.764" endtime="20210322 03:26:54.029"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:26:54.030" level="INFO">{'id': 'b60617fae5ba4cb2a4c2f82baba3c500', 'document_type': 'rg_verso', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/ed075bc67a224d9982d70829c3d93089/documents/b60617fae5ba4cb2a4c2f82baba3c500', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/ed075bc67a224d9982d70829c3d93089', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/ed075bc67a224d9982d70829c3d93089/documents/b60617fae5ba4cb2a4c2f82baba3c500/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 03:26:54.029" endtime="20210322 03:26:54.030"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:26:54.031" level="INFO">f9acbdad371b75cb</msg>
<status status="PASS" starttime="20210322 03:26:54.030" endtime="20210322 03:26:54.031"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:26:54.032" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:26:54.031" endtime="20210322 03:26:54.032"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 03:26:54.033" level="INFO">${document_external_key} = b60617fae5ba4cb2a4c2f82baba3c500</msg>
<status status="PASS" starttime="20210322 03:26:54.032" endtime="20210322 03:26:54.033"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 03:26:54.034" level="INFO">${document_external_key} = b60617fae5ba4cb2a4c2f82baba3c500</msg>
<status status="PASS" starttime="20210322 03:26:54.033" endtime="20210322 03:26:54.034"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:53.761" endtime="20210322 03:26:54.034"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 03:26:54.035" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:26:54.034" endtime="20210322 03:26:54.036"></status>
</kw>
<kw name="solicitar aprovação do holder" library="accreditation_request_approval">
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:26:54.039" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 03:26:54.038" endtime="20210322 03:26:54.039"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/approval</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:26:54.040" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/ed075bc67a224d9982d70829c3d93089/approval, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data=None 
json=None</msg>
<msg timestamp="20210322 03:26:54.309" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:26:54.039" endtime="20210322 03:26:54.309"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:26:54.310" level="INFO">{'message': 'Approval request accepted successfully. Processing analysis'}</msg>
<status status="PASS" starttime="20210322 03:26:54.309" endtime="20210322 03:26:54.310"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:26:54.311" level="INFO">0556564f02358639</msg>
<status status="PASS" starttime="20210322 03:26:54.310" endtime="20210322 03:26:54.311"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:26:54.312" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:26:54.312" endtime="20210322 03:26:54.312"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:54.036" endtime="20210322 03:26:54.312"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 03:26:54.313" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:26:54.313" endtime="20210322 03:26:54.314"></status>
</kw>
<kw name="recebendo notificação de aprovação" library="accreditation_risk_notification">
<kw name="Uuid 4" library="FakerLibrary">
<doc>Generates a random UUID4 string.
:param cast_to: Specify what type the UUID should be cast to. Default is `str`
:type cast_to: callable</doc>
<assign>
<var>${assessment_id}</var>
</assign>
<msg timestamp="20210322 03:26:54.315" level="INFO">${assessment_id} = 41f5ec5d-8818-4268-8fd5-924a36923e2a</msg>
<status status="PASS" starttime="20210322 03:26:54.314" endtime="20210322 03:26:54.315"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>year</arg>
</arguments>
<assign>
<var>${year}</var>
</assign>
<msg timestamp="20210322 03:26:54.316" level="INFO">${year} = 2021</msg>
<status status="PASS" starttime="20210322 03:26:54.316" endtime="20210322 03:26:54.316"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>month</arg>
</arguments>
<assign>
<var>${month}</var>
</assign>
<msg timestamp="20210322 03:26:54.317" level="INFO">${month} = 03</msg>
<status status="PASS" starttime="20210322 03:26:54.316" endtime="20210322 03:26:54.317"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>day</arg>
</arguments>
<assign>
<var>${day}</var>
</assign>
<msg timestamp="20210322 03:26:54.317" level="INFO">${day} = 22</msg>
<status status="PASS" starttime="20210322 03:26:54.317" endtime="20210322 03:26:54.317"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:26:54.318" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 03:26:54.318" endtime="20210322 03:26:54.318"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "risk.assessment.result",</arg>
<arg>"resource": "business.holder",</arg>
<arg>"created_at": "${year}-${month}-${day} 15:28:56.747Z",</arg>
<arg>"marketplace_id": "${marketplace_external_key}",</arg>
<arg>"object": {</arg>
<arg>"result": "APPROVED",</arg>
<arg>"holder_id": "${holder_external_key}",</arg>
<arg>"applicant_id": "${application_external_key}",</arg>
<arg>"assessment_id": "${assessment_id}"</arg>
<arg>}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 03:26:54.321" level="INFO">${body} = { "type": "risk.assessment.result", "resource": "business.holder", "created_at": "2021-03-22 15:28:56.747Z", "marketplace_id": "f71a8951368a4cc085cf7875ff44e61c", "object": { "result": "APPROVED", "ho...</msg>
<status status="PASS" starttime="20210322 03:26:54.319" endtime="20210322 03:26:54.321"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/admin/internal_operation/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/registration/approval</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:26:54.322" level="INFO">POST Request using : uri=/admin/internal_operation/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/ed075bc67a224d9982d70829c3d93089/registration/approval, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "risk.assessment.result", "resource": "business.holder", "created_at": "2021-03-22 15:28:56.747Z", "marketplace_id": "f71a8951368a4cc085cf7875ff44e61c", "object": { "result": "APPROVED", "holder_id": "ed075bc67a224d9982d70829c3d93089", "applicant_id": "bcc25a6751c14b52af1340d40dba78c5", "assessment_id": "41f5ec5d-8818-4268-8fd5-924a36923e2a" } } 
json=None</msg>
<msg timestamp="20210322 03:26:54.512" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:26:54.321" endtime="20210322 03:26:54.512"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:26:54.512" level="INFO">{'message': 'Holder approved successfully'}</msg>
<status status="PASS" starttime="20210322 03:26:54.512" endtime="20210322 03:26:54.512"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:26:54.513" level="INFO">140bfe9324e1ead6</msg>
<status status="PASS" starttime="20210322 03:26:54.513" endtime="20210322 03:26:54.513"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:26:54.513" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:26:54.513" endtime="20210322 03:26:54.513"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 03:26:54.514" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:26:54.514" endtime="20210322 03:26:54.514"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:54.314" endtime="20210322 03:26:54.514"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 03:26:54.514" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:26:54.514" endtime="20210322 03:26:54.515"></status>
</kw>
<kw name="buscar account por holder" library="accounts_get_accounts_by_holder">
<kw name="conectar accounts" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accounts</arg>
<arg>url=${account_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 03:26:54.516" level="INFO">Creating Session using : alias=accounts, url=https://banking-accounts-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 03:26:54.515" endtime="20210322 03:26:54.516"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:54.515" endtime="20210322 03:26:54.516"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accounts</arg>
<arg>/marketplaces/${marketplace_external_key}/holders/${holder_external_key}/accounts</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:26:54.517" level="INFO">GET Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/holders/ed075bc67a224d9982d70829c3d93089/accounts, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 03:26:55.139" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:26:54.516" endtime="20210322 03:26:55.139"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:26:55.140" level="INFO">{'items': [{'id': '6af5d83686c14fc8b85f0caff4243324', 'holder': 'ed075bc67a224d9982d70829c3d93089', 'balance': '0.00', 'currency': 'BRL', 'routing_number': '001', 'number': '4018780654', 'status': 'active', 'metadata': {}, 'created_at': '2021-03-22T06:26:55.3679', 'updated_at': '2021-03-22T06:26:55.3679', 'primary': True, 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'uri': '/v2/marketplaces/f71a8951368a4cc085cf7875ff44e61c/accounts/6af5d83686c14fc8b85f0caff4243324', 'resource': 'payment_account'}], 'has_more': False, 'limit': 100, 'total_pages': 1, 'page': 1, 'offset': 0, 'total': '1', 'query_count': '1'}</msg>
<status status="PASS" starttime="20210322 03:26:55.140" endtime="20210322 03:26:55.141"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:26:55.142" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:26:55.141" endtime="20210322 03:26:55.142"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["id"]}</arg>
</arguments>
<assign>
<var>${account_external_key}</var>
</assign>
<msg timestamp="20210322 03:26:55.144" level="INFO">${account_external_key} = 6af5d83686c14fc8b85f0caff4243324</msg>
<status status="PASS" starttime="20210322 03:26:55.142" endtime="20210322 03:26:55.144"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_external_key}</arg>
</arguments>
<msg timestamp="20210322 03:26:55.145" level="INFO">${account_external_key} = 6af5d83686c14fc8b85f0caff4243324</msg>
<status status="PASS" starttime="20210322 03:26:55.144" endtime="20210322 03:26:55.145"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["number"]}</arg>
</arguments>
<assign>
<var>${account_number}</var>
</assign>
<msg timestamp="20210322 03:26:55.147" level="INFO">${account_number} = 4018780654</msg>
<status status="PASS" starttime="20210322 03:26:55.145" endtime="20210322 03:26:55.147"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_number}</arg>
</arguments>
<msg timestamp="20210322 03:26:55.148" level="INFO">${account_number} = 4018780654</msg>
<status status="PASS" starttime="20210322 03:26:55.147" endtime="20210322 03:26:55.148"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["routing_number"]}</arg>
</arguments>
<assign>
<var>${account_routing_number}</var>
</assign>
<msg timestamp="20210322 03:26:55.150" level="INFO">${account_routing_number} = 001</msg>
<status status="PASS" starttime="20210322 03:26:55.149" endtime="20210322 03:26:55.150"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_routing_number}</arg>
</arguments>
<msg timestamp="20210322 03:26:55.151" level="INFO">${account_routing_number} = 001</msg>
<status status="PASS" starttime="20210322 03:26:55.150" endtime="20210322 03:26:55.151"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:54.515" endtime="20210322 03:26:55.151"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 03:26:55.152" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:26:55.152" endtime="20210322 03:26:55.153"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:52.031" endtime="20210322 03:26:55.153"></status>
</kw>
<kw name="criar chave pix" library="pix_dict_create_entry">
<arguments>
<arg>national_registration</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 03:26:55.155" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 03:26:55.155" endtime="20210322 03:26:55.156"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:55.154" endtime="20210322 03:26:55.156"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${type}</arg>
</arguments>
<msg timestamp="20210322 03:26:55.157" level="INFO">${type} = national_registration</msg>
<status status="PASS" starttime="20210322 03:26:55.156" endtime="20210322 03:26:55.157"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210322 03:26:55.158" level="INFO">${value} = </msg>
<status status="PASS" starttime="20210322 03:26:55.157" endtime="20210322 03:26:55.158"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:26:55.159" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 03:26:55.158" endtime="20210322 03:26:55.159"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "${type}",</arg>
<arg>"value": "${value}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 03:26:55.159" level="INFO">${body} = { "type": "national_registration", "value": "" }</msg>
<status status="PASS" starttime="20210322 03:26:55.159" endtime="20210322 03:26:55.159"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:26:55.160" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/ed075bc67a224d9982d70829c3d93089/accounts/6af5d83686c14fc8b85f0caff4243324/entries, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "national_registration", "value": "" } 
json=None</msg>
<msg timestamp="20210322 03:26:56.720" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:26:55.160" endtime="20210322 03:26:56.720"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:26:56.721" level="INFO">{'id': 'f5c9f56007f041d889f6a0bbbbb39266', 'status': 'active', 'created_at': '2021-03-22T03:26:56.667', 'updated_at': '2021-03-22T03:26:56.667', 'key': {'value': '27403869583', 'type': 'national_registration'}, 'account': {'id': '6af5d83686c14fc8b85f0caff4243324', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': 'ed075bc67a224d9982d70829c3d93089', 'owner': {'name': 'Holder de teste', 'national_registration': '27403869583', 'type': 'individual'}, 'routing_number': '001', 'number': '4018780654', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}, 'resource': 'pix.entry'}</msg>
<status status="PASS" starttime="20210322 03:26:56.721" endtime="20210322 03:26:56.722"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:26:56.723" level="INFO">55ec2924dcefbc01</msg>
<status status="PASS" starttime="20210322 03:26:56.723" endtime="20210322 03:26:56.723"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 03:26:56.724" level="INFO">201</msg>
<status status="PASS" starttime="20210322 03:26:56.723" endtime="20210322 03:26:56.724"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:26:56.725" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:26:56.724" endtime="20210322 03:26:56.725"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${entry_external_key}</var>
</assign>
<msg timestamp="20210322 03:26:56.727" level="INFO">${entry_external_key} = f5c9f56007f041d889f6a0bbbbb39266</msg>
<status status="PASS" starttime="20210322 03:26:56.725" endtime="20210322 03:26:56.727"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${entry_external_key}</arg>
</arguments>
<msg timestamp="20210322 03:26:56.727" level="INFO">${entry_external_key} = f5c9f56007f041d889f6a0bbbbb39266</msg>
<status status="PASS" starttime="20210322 03:26:56.727" endtime="20210322 03:26:56.727"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["key"]["value"]}</arg>
</arguments>
<assign>
<var>${entry_key_value}</var>
</assign>
<msg timestamp="20210322 03:26:56.729" level="INFO">${entry_key_value} = 27403869583</msg>
<status status="PASS" starttime="20210322 03:26:56.728" endtime="20210322 03:26:56.729"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${entry_key_value}</arg>
</arguments>
<msg timestamp="20210322 03:26:56.729" level="INFO">${entry_key_value} = 27403869583</msg>
<status status="PASS" starttime="20210322 03:26:56.729" endtime="20210322 03:26:56.729"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:55.153" endtime="20210322 03:26:56.730"></status>
</kw>
<kw name="validar criação da chave pix" library="asserts">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando status_code</arg>
</arguments>
<msg timestamp="20210322 03:26:56.730" level="INFO">Validando status_code</msg>
<status status="PASS" starttime="20210322 03:26:56.730" endtime="20210322 03:26:56.731"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${type}' == 'evp'</arg>
<arg>Should Be Equal As Integers</arg>
<arg>${response.status_code}</arg>
<arg>201</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'phone'</arg>
<arg>Should Be Equal As Integers</arg>
<arg>${response.status_code}</arg>
<arg>202</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'email'</arg>
<arg>Should Be Equal As Integers</arg>
<arg>${response.status_code}</arg>
<arg>202</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'national_registration'</arg>
<arg>Should Be Equal As Integers</arg>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 03:26:56.732" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:26:56.732" endtime="20210322 03:26:56.733"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:56.731" endtime="20210322 03:26:56.733"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar status da chave</arg>
</arguments>
<msg timestamp="20210322 03:26:56.733" level="INFO">Validar status da chave</msg>
<status status="PASS" starttime="20210322 03:26:56.733" endtime="20210322 03:26:56.733"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${type}' == 'evp'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["status"]}</arg>
<arg>active</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'phone'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["status"]}</arg>
<arg>waiting_ownership_verification</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'email'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["status"]}</arg>
<arg>waiting_ownership_verification</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'national_registration'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["status"]}</arg>
<arg>active</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["status"]}</arg>
<arg>active</arg>
</arguments>
<status status="PASS" starttime="20210322 03:26:56.735" endtime="20210322 03:26:56.735"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:56.733" endtime="20210322 03:26:56.735"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando Tipo da chave PIX</arg>
</arguments>
<msg timestamp="20210322 03:26:56.736" level="INFO">Validando Tipo da chave PIX</msg>
<status status="PASS" starttime="20210322 03:26:56.735" endtime="20210322 03:26:56.736"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${type}' == 'evp'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["type"]}</arg>
<arg>${type}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'phone'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["type"]}</arg>
<arg>${type}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'email'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["type"]}</arg>
<arg>${type}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'national_registration'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["type"]}</arg>
<arg>${type}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["key"]["type"]}</arg>
<arg>${type}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:26:56.737" endtime="20210322 03:26:56.738"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:56.736" endtime="20210322 03:26:56.738"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando Valor da chave PIX</arg>
</arguments>
<msg timestamp="20210322 03:26:56.738" level="INFO">Validando Valor da chave PIX</msg>
<status status="PASS" starttime="20210322 03:26:56.738" endtime="20210322 03:26:56.738"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${type}' == 'evp'</arg>
<arg>Should Not Be Empty</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'phone'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${phone_pix}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'email'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${email_pix}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'national_registration'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${national_registration}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${national_registration}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:26:56.739" endtime="20210322 03:26:56.739"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:56.738" endtime="20210322 03:26:56.740"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando dados da conta</arg>
</arguments>
<msg timestamp="20210322 03:26:56.740" level="INFO">Validando dados da conta</msg>
<status status="PASS" starttime="20210322 03:26:56.740" endtime="20210322 03:26:56.740"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["id"]}</arg>
<arg>${account_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:26:56.740" endtime="20210322 03:26:56.741"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["marketplace"]}</arg>
<arg>${marketplace_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:26:56.741" endtime="20210322 03:26:56.741"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["holder"]}</arg>
<arg>${holder_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:26:56.741" endtime="20210322 03:26:56.742"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["number"]}</arg>
<arg>${account_number}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:26:56.742" endtime="20210322 03:26:56.742"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["routing_number"]}</arg>
<arg>${account_routing_number}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:26:56.743" endtime="20210322 03:26:56.743"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["type"]}</arg>
<arg>CACC</arg>
</arguments>
<status status="PASS" starttime="20210322 03:26:56.743" endtime="20210322 03:26:56.743"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar Proprietário da Account Owner</arg>
</arguments>
<msg timestamp="20210322 03:26:56.744" level="INFO">Validar Proprietário da Account Owner</msg>
<status status="PASS" starttime="20210322 03:26:56.744" endtime="20210322 03:26:56.744"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${holder_type}' == 'individual'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["account"]["owner"]["name"]}</arg>
<arg>${holder_name}</arg>
<arg>ELSE IF</arg>
<arg>'${holder_type}' == 'business'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["account"]["owner"]["name"]}</arg>
<arg>${legal_name}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["account"]["owner"]["name"]}</arg>
<arg>${holder_name}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:26:56.744" endtime="20210322 03:26:56.745"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:56.744" endtime="20210322 03:26:56.745"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar national_registration da Account Owner</arg>
</arguments>
<msg timestamp="20210322 03:26:56.745" level="INFO">Validar national_registration da Account Owner</msg>
<status status="PASS" starttime="20210322 03:26:56.745" endtime="20210322 03:26:56.745"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${holder_type}' == 'individual'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["account"]["owner"]["national_registration"]}</arg>
<arg>${national_registration}</arg>
<arg>ELSE IF</arg>
<arg>'${holder_type}' == 'business'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["account"]["owner"]["national_registration"]}</arg>
<arg>${national_registration}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["account"]["owner"]["national_registration"]}</arg>
<arg>${national_registration}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:26:56.746" endtime="20210322 03:26:56.746"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:56.745" endtime="20210322 03:26:56.746"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar Holder Type do Account Owner</arg>
</arguments>
<msg timestamp="20210322 03:26:56.747" level="INFO">Validar Holder Type do Account Owner</msg>
<status status="PASS" starttime="20210322 03:26:56.746" endtime="20210322 03:26:56.747"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${holder_type}' == 'individual'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["account"]["owner"]["type"]}</arg>
<arg>${holder_type}</arg>
<arg>ELSE IF</arg>
<arg>'${holder_type}' == 'business'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["account"]["owner"]["type"]}</arg>
<arg>${holder_type}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["account"]["owner"]["type"]}</arg>
<arg>${holder_type}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:26:56.747" endtime="20210322 03:26:56.748"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:56.747" endtime="20210322 03:26:56.748"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar PSP</arg>
</arguments>
<msg timestamp="20210322 03:26:56.748" level="INFO">Validar PSP</msg>
<status status="PASS" starttime="20210322 03:26:56.748" endtime="20210322 03:26:56.748"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["psp"]["code"]}</arg>
<arg>19468242</arg>
</arguments>
<status status="PASS" starttime="20210322 03:26:56.748" endtime="20210322 03:26:56.748"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["psp"]["name"]}</arg>
<arg>Zoop Tecnologia e Meios de Pagamento S.A.</arg>
</arguments>
<status status="PASS" starttime="20210322 03:26:56.749" endtime="20210322 03:26:56.749"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:56.730" endtime="20210322 03:26:56.749"></status>
</kw>
<kw name="excluir chave pix" library="pix_dict_delete_entry">
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 03:26:56.750" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 03:26:56.750" endtime="20210322 03:26:56.750"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:56.749" endtime="20210322 03:26:56.750"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:26:56.751" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 03:26:56.751" endtime="20210322 03:26:56.751"></status>
</kw>
<kw name="Delete Request" library="RequestsLibrary">
<doc>Send a DELETE request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries/${entry_external_key}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:26:56.751" level="INFO">DELETE Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/ed075bc67a224d9982d70829c3d93089/accounts/6af5d83686c14fc8b85f0caff4243324/entries/f5c9f56007f041d889f6a0bbbbb39266, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data=None 
json=None</msg>
<msg timestamp="20210322 03:26:58.087" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:26:56.751" endtime="20210322 03:26:58.087"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:26:58.088" level="INFO">{'message': 'Entry removed successfully'}</msg>
<status status="PASS" starttime="20210322 03:26:58.087" endtime="20210322 03:26:58.088"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:26:58.090" level="INFO">cc30fa697cfb44b5</msg>
<status status="PASS" starttime="20210322 03:26:58.089" endtime="20210322 03:26:58.090"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 03:26:58.091" level="INFO">200</msg>
<status status="PASS" starttime="20210322 03:26:58.090" endtime="20210322 03:26:58.091"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:26:58.092" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:26:58.092" endtime="20210322 03:26:58.093"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:56.749" endtime="20210322 03:26:58.093"></status>
</kw>
<kw name="validar exclusão da chave pix" library="asserts">
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 03:26:58.094" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:26:58.094" endtime="20210322 03:26:58.095"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["message"]}</arg>
<arg>Entry removed successfully</arg>
</arguments>
<status status="PASS" starttime="20210322 03:26:58.095" endtime="20210322 03:26:58.096"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:58.093" endtime="20210322 03:26:58.096"></status>
</kw>
<doc>Fluxo Básico</doc>
<tags>
<tag>regression_test</tag>
<tag>smoke_test</tag>
</tags>
<status status="PASS" starttime="20210322 03:26:52.030" endtime="20210322 03:26:58.096" critical="yes"></status>
</test>
<test id="s1-s1-s4-t5" name="Cenário: Excluir Chave de Endereçamento do tipo CNPJ">
<kw name="criar holder business ativo" library="accreditation_create_holder_active">
<kw name="conectar accreditation" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accreditation</arg>
<arg>url=${accreditation_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 03:26:58.100" level="INFO">Creating Session using : alias=accreditation, url=https://banking-accreditation-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 03:26:58.099" endtime="20210322 03:26:58.100"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:58.099" endtime="20210322 03:26:58.101"></status>
</kw>
<kw name="Cnpj" library="FakerLibrary">
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 03:26:58.101" level="INFO">${national_registration} = 96.802.315/0001-21</msg>
<status status="PASS" starttime="20210322 03:26:58.101" endtime="20210322 03:26:58.102"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${national_registration}</arg>
<arg>.</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 03:26:58.102" level="INFO">${national_registration} = 96802315/0001-21</msg>
<status status="PASS" starttime="20210322 03:26:58.102" endtime="20210322 03:26:58.102"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${national_registration}</arg>
<arg>-</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 03:26:58.103" level="INFO">${national_registration} = 96802315/000121</msg>
<status status="PASS" starttime="20210322 03:26:58.103" endtime="20210322 03:26:58.103"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${national_registration}</arg>
<arg>/</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 03:26:58.104" level="INFO">${national_registration} = 96802315000121</msg>
<status status="PASS" starttime="20210322 03:26:58.104" endtime="20210322 03:26:58.104"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${national_registration}</arg>
</arguments>
<msg timestamp="20210322 03:26:58.105" level="INFO">${national_registration} = 96802315000121</msg>
<status status="PASS" starttime="20210322 03:26:58.104" endtime="20210322 03:26:58.105"></status>
</kw>
<kw name="Rg" library="FakerLibrary">
<doc>Brazilian RG, return plain numbers.
Check:  https://www.ngmatematica.com/2014/02/como-determinar-o-digito-verificador-do.html</doc>
<assign>
<var>${identity_card}</var>
</assign>
<msg timestamp="20210322 03:26:58.105" level="INFO">${identity_card} = 468250372</msg>
<status status="PASS" starttime="20210322 03:26:58.105" endtime="20210322 03:26:58.106"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${identity_card}</arg>
</arguments>
<msg timestamp="20210322 03:26:58.106" level="INFO">${identity_card} = 468250372</msg>
<status status="PASS" starttime="20210322 03:26:58.106" endtime="20210322 03:26:58.107"></status>
</kw>
<kw name="criar holder business" library="accreditation_post_holder_business">
<arguments>
<arg>holder_type=business</arg>
<arg>holder_name=${holder_name}</arg>
<arg>email_business=${email_business}</arg>
<arg>national_registration=${national_registration}</arg>
<arg>revenue_business=${revenue_business}</arg>
<arg>cnae=${cnae}</arg>
<arg>legal_name=${legal_name}</arg>
<arg>establishment_format=mei</arg>
<arg>establishment_date=${establishment_date}</arg>
</arguments>
<kw name="conectar accreditation" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accreditation</arg>
<arg>url=${accreditation_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 03:26:58.109" level="INFO">Creating Session using : alias=accreditation, url=https://banking-accreditation-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 03:26:58.108" endtime="20210322 03:26:58.109"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:58.108" endtime="20210322 03:26:58.109"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_type}</arg>
</arguments>
<msg timestamp="20210322 03:26:58.110" level="INFO">${holder_type} = business</msg>
<status status="PASS" starttime="20210322 03:26:58.110" endtime="20210322 03:26:58.110"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_name}</arg>
</arguments>
<msg timestamp="20210322 03:26:58.111" level="INFO">${holder_name} = Holder de teste</msg>
<status status="PASS" starttime="20210322 03:26:58.110" endtime="20210322 03:26:58.111"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${legal_name}</arg>
</arguments>
<msg timestamp="20210322 03:26:58.111" level="INFO">${legal_name} = Nome Legal da Empresa</msg>
<status status="PASS" starttime="20210322 03:26:58.111" endtime="20210322 03:26:58.111"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:26:58.112" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 03:26:58.112" endtime="20210322 03:26:58.112"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "${holder_type}",</arg>
<arg>"name": "${holder_name}",</arg>
<arg>"email": "${email_business}",</arg>
<arg>"national_registration": "${national_registration}",</arg>
<arg>"revenue": ${revenue_business},</arg>
<arg>"cnae": "${cnae}",</arg>
<arg>"legal_name": "${legal_name}",</arg>
<arg>"establishment": {</arg>
<arg>"format":"${establishment_format}",</arg>
<arg>"date":"${establishment_date}"</arg>
<arg>}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 03:26:58.113" level="INFO">${body} = { "type": "business", "name": "Holder de teste", "email": "contato@teste.com.br", "national_registration": "96802315000121", "revenue": 1005500.00, "cnae": "0111301", "legal_name": "Nome Legal da Empr...</msg>
<status status="PASS" starttime="20210322 03:26:58.112" endtime="20210322 03:26:58.113"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:26:58.114" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "business", "name": "Holder de teste", "email": "contato@teste.com.br", "national_registration": "96802315000121", "revenue": 1005500.00, "cnae": "0111301", "legal_name": "Nome Legal da Empresa", "establishment": { "format":"mei", "date":"2012-04-25" } } 
json=None</msg>
<msg timestamp="20210322 03:26:58.791" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:26:58.113" endtime="20210322 03:26:58.791"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:26:58.792" level="INFO">{'id': 'af0fcefe5ac04f4aa66107cf145c6979', 'name': 'Holder de teste', 'revenue': 1005500.0, 'email': 'contato@teste.com.br', 'status': 'waiting_info_and_documents', 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'marketplace_name': 'Marketplace de Teste', 'created_at': '2021-03-22T03:26:59.618948', 'updated_at': '2021-03-22T03:26:59.61895', 'type': 'business', 'national_registration': '96802315000121', 'legal_name': 'Nome Legal da Empresa', 'establishment': {'format': 'mei', 'date': '2012-04-25'}, 'cnae': '0111301', '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/af0fcefe5ac04f4aa66107cf145c6979', 'type': 'GET'}, 'phones': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/af0fcefe5ac04f4aa66107cf145c6979/phones', 'type': 'GET'}, 'addresses': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/af0fcefe5ac04f4aa66107cf145c6979/addresses', 'type': 'GET'}, 'documents': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/af0fcefe5ac04f4aa66107cf145c6979/documents', 'type': 'GET'}, 'partners': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/af0fcefe5ac04f4aa66107cf145c6979/partners', 'type': 'GET'}, 'associates': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/af0fcefe5ac04f4aa66107cf145c6979/associates', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 03:26:58.791" endtime="20210322 03:26:58.792"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:26:58.792" level="INFO">41e6fdcd9c29dc3e</msg>
<status status="PASS" starttime="20210322 03:26:58.792" endtime="20210322 03:26:58.792"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${body}</arg>
</arguments>
<msg timestamp="20210322 03:26:58.792" level="INFO">{ "type": "business", "name": "Holder de teste", "email": "contato@teste.com.br", "national_registration": "96802315000121", "revenue": 1005500.00, "cnae": "0111301", "legal_name": "Nome Legal da Empresa", "establishment": { "format":"mei", "date":"2012-04-25" } }</msg>
<status status="PASS" starttime="20210322 03:26:58.792" endtime="20210322 03:26:58.793"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:26:58.793" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:26:58.793" endtime="20210322 03:26:58.793"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${holder_external_key}</var>
</assign>
<msg timestamp="20210322 03:26:58.795" level="INFO">${holder_external_key} = af0fcefe5ac04f4aa66107cf145c6979</msg>
<status status="PASS" starttime="20210322 03:26:58.795" endtime="20210322 03:26:58.795"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_external_key}</arg>
</arguments>
<msg timestamp="20210322 03:26:58.795" level="INFO">${holder_external_key} = af0fcefe5ac04f4aa66107cf145c6979</msg>
<status status="PASS" starttime="20210322 03:26:58.795" endtime="20210322 03:26:58.795"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:58.107" endtime="20210322 03:26:58.795"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 03:26:58.796" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:26:58.795" endtime="20210322 03:26:58.796"></status>
</kw>
<kw name="criar holder phone" library="accreditation_post_holder_phone">
<arguments>
<arg>21</arg>
<arg>51</arg>
<arg>996221236</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:26:58.797" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 03:26:58.797" endtime="20210322 03:26:58.797"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"area_code": "${phone_area_code}",</arg>
<arg>"country_code": "${phone_country_code}",</arg>
<arg>"number": "${phone_number}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 03:26:58.798" level="INFO">${body} = { "area_code": "21", "country_code": "51", "number": "996221236" }</msg>
<status status="PASS" starttime="20210322 03:26:58.797" endtime="20210322 03:26:58.798"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/phones</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:26:58.799" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/af0fcefe5ac04f4aa66107cf145c6979/phones, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "area_code": "21", "country_code": "51", "number": "996221236" } 
json=None</msg>
<msg timestamp="20210322 03:26:59.028" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:26:58.798" endtime="20210322 03:26:59.029"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:26:59.029" level="INFO">{'id': '11b1c39ce0724dce911d3d46cd2c5a3a', 'area_code': '21', 'country_code': '51', 'number': '996221236', 'main': True, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/af0fcefe5ac04f4aa66107cf145c6979/phones/11b1c39ce0724dce911d3d46cd2c5a3a', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/af0fcefe5ac04f4aa66107cf145c6979', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 03:26:59.029" endtime="20210322 03:26:59.029"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:26:59.029" level="INFO">72963e6ae47e96ee</msg>
<status status="PASS" starttime="20210322 03:26:59.029" endtime="20210322 03:26:59.029"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:26:59.030" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:26:59.030" endtime="20210322 03:26:59.030"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${phone_external_key}</var>
</assign>
<msg timestamp="20210322 03:26:59.030" level="INFO">${phone_external_key} = 11b1c39ce0724dce911d3d46cd2c5a3a</msg>
<status status="PASS" starttime="20210322 03:26:59.030" endtime="20210322 03:26:59.030"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${phone_external_key}</arg>
</arguments>
<msg timestamp="20210322 03:26:59.031" level="INFO">${phone_external_key} = 11b1c39ce0724dce911d3d46cd2c5a3a</msg>
<status status="PASS" starttime="20210322 03:26:59.031" endtime="20210322 03:26:59.031"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:58.796" endtime="20210322 03:26:59.031"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 03:26:59.031" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:26:59.031" endtime="20210322 03:26:59.031"></status>
</kw>
<kw name="criar holder address" library="accreditation_post_holder_address">
<arguments>
<arg>Rio de Janeiro</arg>
<arg>Rio de Janeiro</arg>
<arg>Brasil</arg>
<arg>Bairro de Testes</arg>
<arg>Rua de Testes</arg>
<arg>90</arg>
<arg>apto 200</arg>
<arg>21550987</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:26:59.032" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 03:26:59.032" endtime="20210322 03:26:59.033"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"city": "${city}",</arg>
<arg>"state": "${state}",</arg>
<arg>"country": "${country}",</arg>
<arg>"neighborhood": "${neighborhood}",</arg>
<arg>"street": "${street}",</arg>
<arg>"number": "${number}",</arg>
<arg>"complement": "${complement}",</arg>
<arg>"postal_code": "${postal_code}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 03:26:59.033" level="INFO">${body} = { "city": "Rio de Janeiro", "state": "Rio de Janeiro", "country": "Brasil", "neighborhood": "Bairro de Testes", "street": "Rua de Testes", "number": "90", "complement": "apto 200", "postal_code": "215...</msg>
<status status="PASS" starttime="20210322 03:26:59.033" endtime="20210322 03:26:59.033"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/addresses</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:26:59.033" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/af0fcefe5ac04f4aa66107cf145c6979/addresses, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "city": "Rio de Janeiro", "state": "Rio de Janeiro", "country": "Brasil", "neighborhood": "Bairro de Testes", "street": "Rua de Testes", "number": "90", "complement": "apto 200", "postal_code": "21550987" } 
json=None</msg>
<msg timestamp="20210322 03:26:59.260" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:26:59.033" endtime="20210322 03:26:59.260"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:26:59.261" level="INFO">{'id': '0c2c2ff2ee0e44c28c69e31afabc7cd2', 'street': 'Rua de Testes', 'number': '90', 'city': 'Rio de Janeiro', 'complement': 'apto 200', 'state': 'Rio de Janeiro', 'neighborhood': 'Bairro de Testes', 'postal_code': '21550987', 'country': 'Brasil', 'main': True, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/af0fcefe5ac04f4aa66107cf145c6979/addresses/0c2c2ff2ee0e44c28c69e31afabc7cd2', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/af0fcefe5ac04f4aa66107cf145c6979', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 03:26:59.261" endtime="20210322 03:26:59.261"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:26:59.262" level="INFO">36cf7475f9ed2f53</msg>
<status status="PASS" starttime="20210322 03:26:59.261" endtime="20210322 03:26:59.262"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:26:59.262" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:26:59.262" endtime="20210322 03:26:59.262"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${address_external_key}</var>
</assign>
<msg timestamp="20210322 03:26:59.263" level="INFO">${address_external_key} = 0c2c2ff2ee0e44c28c69e31afabc7cd2</msg>
<status status="PASS" starttime="20210322 03:26:59.263" endtime="20210322 03:26:59.263"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${address_external_key}</arg>
</arguments>
<msg timestamp="20210322 03:26:59.264" level="INFO">${address_external_key} = 0c2c2ff2ee0e44c28c69e31afabc7cd2</msg>
<status status="PASS" starttime="20210322 03:26:59.263" endtime="20210322 03:26:59.264"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:59.031" endtime="20210322 03:26:59.264"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 03:26:59.264" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:26:59.264" endtime="20210322 03:26:59.264"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>CCMEI</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:26:59.265" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 03:26:59.265" endtime="20210322 03:26:59.265"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 03:26:59.266" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 03:26:59.267" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 03:26:59.266" endtime="20210322 03:26:59.267"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:26:59.268" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/af0fcefe5ac04f4aa66107cf145c6979/documents?type=CCMEI, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 03:26:59.524" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:26:59.267" endtime="20210322 03:26:59.524"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:26:59.524" level="INFO">{'id': '090ac7c0648e4cc192b11113e5e72916', 'document_type': 'ccmei', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/af0fcefe5ac04f4aa66107cf145c6979/documents/090ac7c0648e4cc192b11113e5e72916', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/af0fcefe5ac04f4aa66107cf145c6979', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/af0fcefe5ac04f4aa66107cf145c6979/documents/090ac7c0648e4cc192b11113e5e72916/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 03:26:59.524" endtime="20210322 03:26:59.525"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:26:59.525" level="INFO">7e3613330eb4cd9e</msg>
<status status="PASS" starttime="20210322 03:26:59.525" endtime="20210322 03:26:59.526"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:26:59.526" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:26:59.526" endtime="20210322 03:26:59.526"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 03:26:59.527" level="INFO">${document_external_key} = 090ac7c0648e4cc192b11113e5e72916</msg>
<status status="PASS" starttime="20210322 03:26:59.526" endtime="20210322 03:26:59.527"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 03:26:59.527" level="INFO">${document_external_key} = 090ac7c0648e4cc192b11113e5e72916</msg>
<status status="PASS" starttime="20210322 03:26:59.527" endtime="20210322 03:26:59.527"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:59.265" endtime="20210322 03:26:59.527"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 03:26:59.528" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:26:59.527" endtime="20210322 03:26:59.528"></status>
</kw>
<kw name="Cpf" library="FakerLibrary">
<assign>
<var>${partner_individual_national_registration}</var>
</assign>
<msg timestamp="20210322 03:26:59.528" level="INFO">${partner_individual_national_registration} = 317.692.540-99</msg>
<status status="PASS" starttime="20210322 03:26:59.528" endtime="20210322 03:26:59.528"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${partner_individual_national_registration}</arg>
<arg>.</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${partner_individual_national_registration}</var>
</assign>
<msg timestamp="20210322 03:26:59.529" level="INFO">${partner_individual_national_registration} = 317692540-99</msg>
<status status="PASS" starttime="20210322 03:26:59.528" endtime="20210322 03:26:59.529"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${partner_individual_national_registration}</arg>
<arg>-</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${partner_individual_national_registration}</var>
</assign>
<msg timestamp="20210322 03:26:59.529" level="INFO">${partner_individual_national_registration} = 31769254099</msg>
<status status="PASS" starttime="20210322 03:26:59.529" endtime="20210322 03:26:59.529"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${partner_individual_national_registration}</arg>
</arguments>
<msg timestamp="20210322 03:26:59.530" level="INFO">${partner_individual_national_registration} = 31769254099</msg>
<status status="PASS" starttime="20210322 03:26:59.529" endtime="20210322 03:26:59.530"></status>
</kw>
<kw name="Rg" library="FakerLibrary">
<doc>Brazilian RG, return plain numbers.
Check:  https://www.ngmatematica.com/2014/02/como-determinar-o-digito-verificador-do.html</doc>
<assign>
<var>${partner_individual_identity_card}</var>
</assign>
<msg timestamp="20210322 03:26:59.530" level="INFO">${partner_individual_identity_card} = 701654831</msg>
<status status="PASS" starttime="20210322 03:26:59.530" endtime="20210322 03:26:59.530"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${partner_individual_identity_card}</arg>
</arguments>
<msg timestamp="20210322 03:26:59.530" level="INFO">${partner_individual_identity_card} = 701654831</msg>
<status status="PASS" starttime="20210322 03:26:59.530" endtime="20210322 03:26:59.530"></status>
</kw>
<kw name="criar partner individual" library="accreditation_post_partner_individual">
<arguments>
<arg>partner_individual_type=individual</arg>
<arg>partner_individual_name=${partner_individual_name}</arg>
<arg>partner_individual_email=${partner_individual_email}</arg>
<arg>partner_individual_national_registration=${partner_individual_national_registration}</arg>
<arg>partner_individual_revenue=${partner_individual_revenue}</arg>
<arg>partner_individual_birthday=${partner_individual_birthday}</arg>
<arg>partner_individual_mothers_name=${partner_individual_mothers_name}</arg>
<arg>partner_individual_identity_card=${partner_individual_identity_card}</arg>
<arg>partner_individual_pep=false</arg>
<arg>partner_individual_percentage=100</arg>
<arg>partner_individual_adm=true</arg>
<arg>partner_individual_cbo=${partner_individual_cbo}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:26:59.532" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 03:26:59.531" endtime="20210322 03:26:59.532"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "${partner_individual_type}",</arg>
<arg>"name": "${partner_individual_name}",</arg>
<arg>"email": "${partner_individual_email}",</arg>
<arg>"national_registration": "${partner_individual_national_registration}",</arg>
<arg>"revenue": ${partner_individual_revenue},</arg>
<arg>"birthday": "${partner_individual_birthday}",</arg>
<arg>"mothers_name": "${partner_individual_mothers_name}",</arg>
<arg>"identity_card": "${partner_individual_identity_card}",</arg>
<arg>"pep": false,</arg>
<arg>"percentage": ${partner_individual_percentage},</arg>
<arg>"adm": ${partner_individual_adm},</arg>
<arg>"cbo": ${partner_individual_cbo}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 03:26:59.532" level="INFO">${body} = { "type": "individual", "name": "Individual Partner de teste", "email": "teste@teste.com.br", "national_registration": "31769254099", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe...</msg>
<status status="PASS" starttime="20210322 03:26:59.532" endtime="20210322 03:26:59.532"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/partners</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:26:59.533" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/af0fcefe5ac04f4aa66107cf145c6979/partners, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "individual", "name": "Individual Partner de teste", "email": "teste@teste.com.br", "national_registration": "31769254099", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Individual Partner", "identity_card": "701654831", "pep": false, "percentage": 100, "adm": true, "cbo": 821450 } 
json=None</msg>
<msg timestamp="20210322 03:26:59.782" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:26:59.533" endtime="20210322 03:26:59.782"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:26:59.783" level="INFO">{'id': '941e6dbef33a4a9595404f0e41997b63', 'name': 'Individual Partner de teste', 'revenue': 5500.0, 'email': 'teste@teste.com.br', 'created_at': '2021-03-22T03:27:00.588084', 'updated_at': '2021-03-22T03:27:00.588086', 'main': True, 'adm': True, 'percentage': 100.0, 'type': 'individual', 'national_registration': '31769254099', 'birthday': '1988-04-23', 'mothers_name': 'Mãe do Individual Partner', 'identity_card': '701654831', 'pep': False, 'cbo': '821450', '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/af0fcefe5ac04f4aa66107cf145c6979/partners/941e6dbef33a4a9595404f0e41997b63', 'type': 'GET'}, 'phones': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/af0fcefe5ac04f4aa66107cf145c6979/partners/941e6dbef33a4a9595404f0e41997b63/phones', 'type': 'GET'}, 'addresses': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/af0fcefe5ac04f4aa66107cf145c6979/partners/941e6dbef33a4a9595404f0e41997b63/addresses', 'type': 'GET'}, 'documents': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/af0fcefe5ac04f4aa66107cf145c6979/partners/941e6dbef33a4a9595404f0e41997b63/documents', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/af0fcefe5ac04f4aa66107cf145c6979', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 03:26:59.782" endtime="20210322 03:26:59.783"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:26:59.783" level="INFO">c3ed1638f2b2f85c</msg>
<status status="PASS" starttime="20210322 03:26:59.783" endtime="20210322 03:26:59.783"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:26:59.784" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:26:59.783" endtime="20210322 03:26:59.784"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${partner_external_key}</var>
</assign>
<msg timestamp="20210322 03:26:59.784" level="INFO">${partner_external_key} = 941e6dbef33a4a9595404f0e41997b63</msg>
<status status="PASS" starttime="20210322 03:26:59.784" endtime="20210322 03:26:59.784"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${partner_external_key}</arg>
</arguments>
<msg timestamp="20210322 03:26:59.785" level="INFO">${partner_external_key} = 941e6dbef33a4a9595404f0e41997b63</msg>
<status status="PASS" starttime="20210322 03:26:59.784" endtime="20210322 03:26:59.785"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:59.531" endtime="20210322 03:26:59.785"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 03:26:59.786" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:26:59.785" endtime="20210322 03:26:59.786"></status>
</kw>
<kw name="criar partner phone" library="accreditation_post_partner_phone">
<arguments>
<arg>21</arg>
<arg>51</arg>
<arg>996554785</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:26:59.789" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 03:26:59.787" endtime="20210322 03:26:59.789"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"area_code": "${phone_area_code}",</arg>
<arg>"country_code": "${phone_country_code}",</arg>
<arg>"number": "${phone_number}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 03:26:59.792" level="INFO">${body} = { "area_code": "21", "country_code": "51", "number": "996554785" }</msg>
<status status="PASS" starttime="20210322 03:26:59.790" endtime="20210322 03:26:59.792"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/partners/${partner_external_key}/phones/</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:26:59.794" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/af0fcefe5ac04f4aa66107cf145c6979/partners/941e6dbef33a4a9595404f0e41997b63/phones/, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "area_code": "21", "country_code": "51", "number": "996554785" } 
json=None</msg>
<msg timestamp="20210322 03:27:00.011" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:26:59.793" endtime="20210322 03:27:00.011"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:27:00.012" level="INFO">{'id': '827c6c48b016478a9195cec744dc398f', 'area_code': '21', 'country_code': '51', 'number': '996554785', 'main': True, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/af0fcefe5ac04f4aa66107cf145c6979/partners/941e6dbef33a4a9595404f0e41997b63/phones/827c6c48b016478a9195cec744dc398f', 'type': 'GET'}, 'partner': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/af0fcefe5ac04f4aa66107cf145c6979/partners/941e6dbef33a4a9595404f0e41997b63', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/af0fcefe5ac04f4aa66107cf145c6979', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 03:27:00.012" endtime="20210322 03:27:00.012"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:27:00.013" level="INFO">63735f043e29027c</msg>
<status status="PASS" starttime="20210322 03:27:00.012" endtime="20210322 03:27:00.013"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:27:00.013" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:27:00.013" endtime="20210322 03:27:00.013"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${holder_external_key}</var>
</assign>
<msg timestamp="20210322 03:27:00.014" level="INFO">${holder_external_key} = 827c6c48b016478a9195cec744dc398f</msg>
<status status="PASS" starttime="20210322 03:27:00.014" endtime="20210322 03:27:00.014"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${phone_external_key}</arg>
</arguments>
<msg timestamp="20210322 03:27:00.015" level="INFO">${phone_external_key} = 11b1c39ce0724dce911d3d46cd2c5a3a</msg>
<status status="PASS" starttime="20210322 03:27:00.014" endtime="20210322 03:27:00.015"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:59.786" endtime="20210322 03:27:00.015"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 03:27:00.016" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:27:00.015" endtime="20210322 03:27:00.016"></status>
</kw>
<kw name="criar partner address" library="accreditation_post_partner_address">
<arguments>
<arg>Rio de Janeiro</arg>
<arg>Rio de Janeiro</arg>
<arg>Brasil</arg>
<arg>Bairro de Testes</arg>
<arg>Rua de Testes</arg>
<arg>61</arg>
<arg>apto 201</arg>
<arg>21550478</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:27:00.017" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 03:27:00.017" endtime="20210322 03:27:00.017"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"city": "${city}",</arg>
<arg>"state": "${state}",</arg>
<arg>"country": "${country}",</arg>
<arg>"neighborhood": "${neighborhood}",</arg>
<arg>"street": "${street}",</arg>
<arg>"number": "${number}",</arg>
<arg>"complement": "${complement}",</arg>
<arg>"postal_code": "${postal_code}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 03:27:00.018" level="INFO">${body} = { "city": "Rio de Janeiro", "state": "Rio de Janeiro", "country": "Brasil", "neighborhood": "Bairro de Testes", "street": "Rua de Testes", "number": "61", "complement": "apto 201", "postal_code": "215...</msg>
<status status="PASS" starttime="20210322 03:27:00.017" endtime="20210322 03:27:00.018"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/partners/${partner_external_key}/addresses</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:27:00.019" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/af0fcefe5ac04f4aa66107cf145c6979/partners/941e6dbef33a4a9595404f0e41997b63/addresses, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "city": "Rio de Janeiro", "state": "Rio de Janeiro", "country": "Brasil", "neighborhood": "Bairro de Testes", "street": "Rua de Testes", "number": "61", "complement": "apto 201", "postal_code": "21550478" } 
json=None</msg>
<msg timestamp="20210322 03:27:00.250" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:27:00.019" endtime="20210322 03:27:00.250"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:27:00.251" level="INFO">{'id': '63e9e7aba4324121942c7c3e8602cb26', 'street': 'Rua de Testes', 'number': '61', 'city': 'Rio de Janeiro', 'complement': 'apto 201', 'state': 'Rio de Janeiro', 'neighborhood': 'Bairro de Testes', 'postal_code': '21550478', 'country': 'Brasil', 'main': True, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/af0fcefe5ac04f4aa66107cf145c6979/partners/941e6dbef33a4a9595404f0e41997b63/addresses/63e9e7aba4324121942c7c3e8602cb26', 'type': 'GET'}, 'partner': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/af0fcefe5ac04f4aa66107cf145c6979/partners/941e6dbef33a4a9595404f0e41997b63', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/af0fcefe5ac04f4aa66107cf145c6979', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 03:27:00.250" endtime="20210322 03:27:00.251"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:27:00.251" level="INFO">fea34da1f47215fc</msg>
<status status="PASS" starttime="20210322 03:27:00.251" endtime="20210322 03:27:00.251"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:27:00.251" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:27:00.251" endtime="20210322 03:27:00.252"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${address_external_key}</var>
</assign>
<msg timestamp="20210322 03:27:00.252" level="INFO">${address_external_key} = 63e9e7aba4324121942c7c3e8602cb26</msg>
<status status="PASS" starttime="20210322 03:27:00.252" endtime="20210322 03:27:00.252"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${address_external_key}</arg>
</arguments>
<msg timestamp="20210322 03:27:00.253" level="INFO">${address_external_key} = 63e9e7aba4324121942c7c3e8602cb26</msg>
<status status="PASS" starttime="20210322 03:27:00.253" endtime="20210322 03:27:00.253"></status>
</kw>
<status status="PASS" starttime="20210322 03:27:00.016" endtime="20210322 03:27:00.253"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 03:27:00.253" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:27:00.253" endtime="20210322 03:27:00.253"></status>
</kw>
<kw name="criar partner document" library="accreditation_post_partner_document">
<arguments>
<arg>SELFIE</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:27:00.254" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 03:27:00.254" endtime="20210322 03:27:00.254"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 03:27:00.254" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 03:27:00.255" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 03:27:00.254" endtime="20210322 03:27:00.255"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/partners/${partner_externaL_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:27:00.256" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/af0fcefe5ac04f4aa66107cf145c6979/partners/941e6dbef33a4a9595404f0e41997b63/documents?type=SELFIE, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 03:27:00.507" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:27:00.256" endtime="20210322 03:27:00.507"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:27:00.508" level="INFO">{'id': 'b2a3df4f970f4080aaab5ae6e3d7f75b', 'document_type': 'selfie', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/af0fcefe5ac04f4aa66107cf145c6979/partners/941e6dbef33a4a9595404f0e41997b63/documents/b2a3df4f970f4080aaab5ae6e3d7f75b', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/af0fcefe5ac04f4aa66107cf145c6979', 'type': 'GET'}, 'partner': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/af0fcefe5ac04f4aa66107cf145c6979/partners/941e6dbef33a4a9595404f0e41997b63', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/af0fcefe5ac04f4aa66107cf145c6979/partners/941e6dbef33a4a9595404f0e41997b63/documents/b2a3df4f970f4080aaab5ae6e3d7f75b/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 03:27:00.508" endtime="20210322 03:27:00.508"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:27:00.509" level="INFO">90bac8b4ff4bbb6a</msg>
<status status="PASS" starttime="20210322 03:27:00.509" endtime="20210322 03:27:00.509"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:27:00.509" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:27:00.509" endtime="20210322 03:27:00.509"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 03:27:00.510" level="INFO">${document_external_key} = b2a3df4f970f4080aaab5ae6e3d7f75b</msg>
<status status="PASS" starttime="20210322 03:27:00.510" endtime="20210322 03:27:00.510"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 03:27:00.511" level="INFO">${document_external_key} = b2a3df4f970f4080aaab5ae6e3d7f75b</msg>
<status status="PASS" starttime="20210322 03:27:00.510" endtime="20210322 03:27:00.511"></status>
</kw>
<status status="PASS" starttime="20210322 03:27:00.254" endtime="20210322 03:27:00.511"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 03:27:00.511" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:27:00.511" endtime="20210322 03:27:00.511"></status>
</kw>
<kw name="criar partner document" library="accreditation_post_partner_document">
<arguments>
<arg>RG_FRENTE</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:27:00.512" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 03:27:00.512" endtime="20210322 03:27:00.512"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 03:27:00.513" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 03:27:00.514" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 03:27:00.513" endtime="20210322 03:27:00.514"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/partners/${partner_externaL_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:27:00.515" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/af0fcefe5ac04f4aa66107cf145c6979/partners/941e6dbef33a4a9595404f0e41997b63/documents?type=RG_FRENTE, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 03:27:00.782" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:27:00.514" endtime="20210322 03:27:00.782"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:27:00.784" level="INFO">{'id': '9df57bda4e4849a3a1a2fb93b3b0df99', 'document_type': 'rg_frente', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/af0fcefe5ac04f4aa66107cf145c6979/partners/941e6dbef33a4a9595404f0e41997b63/documents/9df57bda4e4849a3a1a2fb93b3b0df99', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/af0fcefe5ac04f4aa66107cf145c6979', 'type': 'GET'}, 'partner': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/af0fcefe5ac04f4aa66107cf145c6979/partners/941e6dbef33a4a9595404f0e41997b63', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/af0fcefe5ac04f4aa66107cf145c6979/partners/941e6dbef33a4a9595404f0e41997b63/documents/9df57bda4e4849a3a1a2fb93b3b0df99/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 03:27:00.783" endtime="20210322 03:27:00.784"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:27:00.785" level="INFO">ffe416052e7cf12d</msg>
<status status="PASS" starttime="20210322 03:27:00.784" endtime="20210322 03:27:00.785"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:27:00.786" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:27:00.786" endtime="20210322 03:27:00.786"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 03:27:00.788" level="INFO">${document_external_key} = 9df57bda4e4849a3a1a2fb93b3b0df99</msg>
<status status="PASS" starttime="20210322 03:27:00.787" endtime="20210322 03:27:00.788"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 03:27:00.789" level="INFO">${document_external_key} = 9df57bda4e4849a3a1a2fb93b3b0df99</msg>
<status status="PASS" starttime="20210322 03:27:00.789" endtime="20210322 03:27:00.790"></status>
</kw>
<status status="PASS" starttime="20210322 03:27:00.512" endtime="20210322 03:27:00.790"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 03:27:00.791" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:27:00.790" endtime="20210322 03:27:00.791"></status>
</kw>
<kw name="criar partner document" library="accreditation_post_partner_document">
<arguments>
<arg>RG_VERSO</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:27:00.793" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 03:27:00.792" endtime="20210322 03:27:00.793"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 03:27:00.793" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 03:27:00.795" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 03:27:00.793" endtime="20210322 03:27:00.796"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/partners/${partner_externaL_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:27:00.797" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/af0fcefe5ac04f4aa66107cf145c6979/partners/941e6dbef33a4a9595404f0e41997b63/documents?type=RG_VERSO, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 03:27:01.062" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:27:00.796" endtime="20210322 03:27:01.062"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:27:01.064" level="INFO">{'id': '0a1e4e4397d24501824f6279d17cf272', 'document_type': 'rg_verso', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/af0fcefe5ac04f4aa66107cf145c6979/partners/941e6dbef33a4a9595404f0e41997b63/documents/0a1e4e4397d24501824f6279d17cf272', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/af0fcefe5ac04f4aa66107cf145c6979', 'type': 'GET'}, 'partner': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/af0fcefe5ac04f4aa66107cf145c6979/partners/941e6dbef33a4a9595404f0e41997b63', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/af0fcefe5ac04f4aa66107cf145c6979/partners/941e6dbef33a4a9595404f0e41997b63/documents/0a1e4e4397d24501824f6279d17cf272/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 03:27:01.063" endtime="20210322 03:27:01.064"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:27:01.065" level="INFO">81dbd48a9be4ac34</msg>
<status status="PASS" starttime="20210322 03:27:01.065" endtime="20210322 03:27:01.066"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:27:01.067" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:27:01.066" endtime="20210322 03:27:01.067"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 03:27:01.069" level="INFO">${document_external_key} = 0a1e4e4397d24501824f6279d17cf272</msg>
<status status="PASS" starttime="20210322 03:27:01.068" endtime="20210322 03:27:01.069"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 03:27:01.071" level="INFO">${document_external_key} = 0a1e4e4397d24501824f6279d17cf272</msg>
<status status="PASS" starttime="20210322 03:27:01.070" endtime="20210322 03:27:01.071"></status>
</kw>
<status status="PASS" starttime="20210322 03:27:00.791" endtime="20210322 03:27:01.071"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 03:27:01.073" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:27:01.072" endtime="20210322 03:27:01.073"></status>
</kw>
<kw name="solicitar aprovação do holder" library="accreditation_request_approval">
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:27:01.075" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 03:27:01.074" endtime="20210322 03:27:01.075"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/approval</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:27:01.078" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/af0fcefe5ac04f4aa66107cf145c6979/approval, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data=None 
json=None</msg>
<msg timestamp="20210322 03:27:01.367" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:27:01.076" endtime="20210322 03:27:01.367"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:27:01.370" level="INFO">{'message': 'Approval request accepted successfully. Processing analysis'}</msg>
<status status="PASS" starttime="20210322 03:27:01.368" endtime="20210322 03:27:01.370"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:27:01.371" level="INFO">eff27a50a035477d</msg>
<status status="PASS" starttime="20210322 03:27:01.370" endtime="20210322 03:27:01.372"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:27:01.374" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:27:01.373" endtime="20210322 03:27:01.374"></status>
</kw>
<status status="PASS" starttime="20210322 03:27:01.073" endtime="20210322 03:27:01.374"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 03:27:01.376" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:27:01.375" endtime="20210322 03:27:01.377"></status>
</kw>
<kw name="recebendo notificação de aprovação" library="accreditation_risk_notification">
<kw name="Uuid 4" library="FakerLibrary">
<doc>Generates a random UUID4 string.
:param cast_to: Specify what type the UUID should be cast to. Default is `str`
:type cast_to: callable</doc>
<assign>
<var>${assessment_id}</var>
</assign>
<msg timestamp="20210322 03:27:01.380" level="INFO">${assessment_id} = 21f67525-db46-472f-99f3-38ac4b0d1114</msg>
<status status="PASS" starttime="20210322 03:27:01.379" endtime="20210322 03:27:01.380"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>year</arg>
</arguments>
<assign>
<var>${year}</var>
</assign>
<msg timestamp="20210322 03:27:01.381" level="INFO">${year} = 2021</msg>
<status status="PASS" starttime="20210322 03:27:01.381" endtime="20210322 03:27:01.382"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>month</arg>
</arguments>
<assign>
<var>${month}</var>
</assign>
<msg timestamp="20210322 03:27:01.384" level="INFO">${month} = 03</msg>
<status status="PASS" starttime="20210322 03:27:01.382" endtime="20210322 03:27:01.384"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>day</arg>
</arguments>
<assign>
<var>${day}</var>
</assign>
<msg timestamp="20210322 03:27:01.385" level="INFO">${day} = 22</msg>
<status status="PASS" starttime="20210322 03:27:01.385" endtime="20210322 03:27:01.386"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:27:01.387" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 03:27:01.386" endtime="20210322 03:27:01.387"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "risk.assessment.result",</arg>
<arg>"resource": "business.holder",</arg>
<arg>"created_at": "${year}-${month}-${day} 15:28:56.747Z",</arg>
<arg>"marketplace_id": "${marketplace_external_key}",</arg>
<arg>"object": {</arg>
<arg>"result": "APPROVED",</arg>
<arg>"holder_id": "${holder_external_key}",</arg>
<arg>"applicant_id": "${application_external_key}",</arg>
<arg>"assessment_id": "${assessment_id}"</arg>
<arg>}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 03:27:01.389" level="INFO">${body} = { "type": "risk.assessment.result", "resource": "business.holder", "created_at": "2021-03-22 15:28:56.747Z", "marketplace_id": "f71a8951368a4cc085cf7875ff44e61c", "object": { "result": "APPROVED", "ho...</msg>
<status status="PASS" starttime="20210322 03:27:01.387" endtime="20210322 03:27:01.389"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/admin/internal_operation/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/registration/approval</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:27:01.391" level="INFO">POST Request using : uri=/admin/internal_operation/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/af0fcefe5ac04f4aa66107cf145c6979/registration/approval, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "risk.assessment.result", "resource": "business.holder", "created_at": "2021-03-22 15:28:56.747Z", "marketplace_id": "f71a8951368a4cc085cf7875ff44e61c", "object": { "result": "APPROVED", "holder_id": "af0fcefe5ac04f4aa66107cf145c6979", "applicant_id": "bcc25a6751c14b52af1340d40dba78c5", "assessment_id": "21f67525-db46-472f-99f3-38ac4b0d1114" } } 
json=None</msg>
<msg timestamp="20210322 03:27:01.611" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:27:01.390" endtime="20210322 03:27:01.612"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:27:01.614" level="INFO">{'message': 'Holder approved successfully'}</msg>
<status status="PASS" starttime="20210322 03:27:01.613" endtime="20210322 03:27:01.614"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:27:01.616" level="INFO">766abbaec0c85660</msg>
<status status="PASS" starttime="20210322 03:27:01.615" endtime="20210322 03:27:01.616"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:27:01.618" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:27:01.617" endtime="20210322 03:27:01.619"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 03:27:01.620" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:27:01.619" endtime="20210322 03:27:01.621"></status>
</kw>
<status status="PASS" starttime="20210322 03:27:01.377" endtime="20210322 03:27:01.621"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 03:27:01.623" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:27:01.622" endtime="20210322 03:27:01.623"></status>
</kw>
<kw name="buscar account por holder" library="accounts_get_accounts_by_holder">
<kw name="conectar accounts" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accounts</arg>
<arg>url=${account_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 03:27:01.627" level="INFO">Creating Session using : alias=accounts, url=https://banking-accounts-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 03:27:01.626" endtime="20210322 03:27:01.627"></status>
</kw>
<status status="PASS" starttime="20210322 03:27:01.625" endtime="20210322 03:27:01.628"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accounts</arg>
<arg>/marketplaces/${marketplace_external_key}/holders/${holder_external_key}/accounts</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:27:01.629" level="INFO">GET Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/holders/af0fcefe5ac04f4aa66107cf145c6979/accounts, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 03:27:02.224" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:27:01.628" endtime="20210322 03:27:02.224"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:27:02.225" level="INFO">{'items': [{'id': 'a9a5a58b49a8400d91c01020f6e1df09', 'holder': 'af0fcefe5ac04f4aa66107cf145c6979', 'balance': '0.00', 'currency': 'BRL', 'routing_number': '001', 'number': '2801407298', 'status': 'active', 'metadata': {}, 'created_at': '2021-03-22T06:27:02.440891', 'updated_at': '2021-03-22T06:27:02.440891', 'primary': True, 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'uri': '/v2/marketplaces/f71a8951368a4cc085cf7875ff44e61c/accounts/a9a5a58b49a8400d91c01020f6e1df09', 'resource': 'payment_account'}], 'has_more': False, 'limit': 100, 'total_pages': 1, 'page': 1, 'offset': 0, 'total': '1', 'query_count': '1'}</msg>
<status status="PASS" starttime="20210322 03:27:02.224" endtime="20210322 03:27:02.225"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:27:02.226" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:27:02.226" endtime="20210322 03:27:02.227"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["id"]}</arg>
</arguments>
<assign>
<var>${account_external_key}</var>
</assign>
<msg timestamp="20210322 03:27:02.228" level="INFO">${account_external_key} = a9a5a58b49a8400d91c01020f6e1df09</msg>
<status status="PASS" starttime="20210322 03:27:02.227" endtime="20210322 03:27:02.228"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_external_key}</arg>
</arguments>
<msg timestamp="20210322 03:27:02.229" level="INFO">${account_external_key} = a9a5a58b49a8400d91c01020f6e1df09</msg>
<status status="PASS" starttime="20210322 03:27:02.229" endtime="20210322 03:27:02.230"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["number"]}</arg>
</arguments>
<assign>
<var>${account_number}</var>
</assign>
<msg timestamp="20210322 03:27:02.231" level="INFO">${account_number} = 2801407298</msg>
<status status="PASS" starttime="20210322 03:27:02.230" endtime="20210322 03:27:02.231"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_number}</arg>
</arguments>
<msg timestamp="20210322 03:27:02.232" level="INFO">${account_number} = 2801407298</msg>
<status status="PASS" starttime="20210322 03:27:02.231" endtime="20210322 03:27:02.232"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["routing_number"]}</arg>
</arguments>
<assign>
<var>${account_routing_number}</var>
</assign>
<msg timestamp="20210322 03:27:02.233" level="INFO">${account_routing_number} = 001</msg>
<status status="PASS" starttime="20210322 03:27:02.232" endtime="20210322 03:27:02.233"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_routing_number}</arg>
</arguments>
<msg timestamp="20210322 03:27:02.234" level="INFO">${account_routing_number} = 001</msg>
<status status="PASS" starttime="20210322 03:27:02.234" endtime="20210322 03:27:02.235"></status>
</kw>
<status status="PASS" starttime="20210322 03:27:01.624" endtime="20210322 03:27:02.235"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 03:27:02.235" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:27:02.235" endtime="20210322 03:27:02.235"></status>
</kw>
<status status="PASS" starttime="20210322 03:26:58.098" endtime="20210322 03:27:02.236"></status>
</kw>
<kw name="criar chave pix" library="pix_dict_create_entry">
<arguments>
<arg>national_registration</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 03:27:02.238" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 03:27:02.237" endtime="20210322 03:27:02.238"></status>
</kw>
<status status="PASS" starttime="20210322 03:27:02.237" endtime="20210322 03:27:02.238"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${type}</arg>
</arguments>
<msg timestamp="20210322 03:27:02.239" level="INFO">${type} = national_registration</msg>
<status status="PASS" starttime="20210322 03:27:02.239" endtime="20210322 03:27:02.239"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210322 03:27:02.240" level="INFO">${value} = </msg>
<status status="PASS" starttime="20210322 03:27:02.239" endtime="20210322 03:27:02.240"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:27:02.240" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 03:27:02.240" endtime="20210322 03:27:02.241"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "${type}",</arg>
<arg>"value": "${value}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 03:27:02.241" level="INFO">${body} = { "type": "national_registration", "value": "" }</msg>
<status status="PASS" starttime="20210322 03:27:02.241" endtime="20210322 03:27:02.241"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:27:02.242" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/af0fcefe5ac04f4aa66107cf145c6979/accounts/a9a5a58b49a8400d91c01020f6e1df09/entries, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "national_registration", "value": "" } 
json=None</msg>
<msg timestamp="20210322 03:27:03.778" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:27:02.242" endtime="20210322 03:27:03.778"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:27:03.779" level="INFO">{'id': '37f0442d720e4efb8af0d075b078a338', 'status': 'active', 'created_at': '2021-03-22T03:27:03.787', 'updated_at': '2021-03-22T03:27:03.787', 'key': {'value': '96802315000121', 'type': 'national_registration'}, 'account': {'id': 'a9a5a58b49a8400d91c01020f6e1df09', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': 'af0fcefe5ac04f4aa66107cf145c6979', 'owner': {'name': 'Nome Legal da Empresa', 'national_registration': '96802315000121', 'type': 'business'}, 'routing_number': '001', 'number': '2801407298', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}, 'resource': 'pix.entry'}</msg>
<status status="PASS" starttime="20210322 03:27:03.779" endtime="20210322 03:27:03.779"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:27:03.779" level="INFO">0a96b6372306a6cf</msg>
<status status="PASS" starttime="20210322 03:27:03.779" endtime="20210322 03:27:03.779"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 03:27:03.780" level="INFO">201</msg>
<status status="PASS" starttime="20210322 03:27:03.779" endtime="20210322 03:27:03.780"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:27:03.780" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:27:03.780" endtime="20210322 03:27:03.780"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${entry_external_key}</var>
</assign>
<msg timestamp="20210322 03:27:03.781" level="INFO">${entry_external_key} = 37f0442d720e4efb8af0d075b078a338</msg>
<status status="PASS" starttime="20210322 03:27:03.780" endtime="20210322 03:27:03.781"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${entry_external_key}</arg>
</arguments>
<msg timestamp="20210322 03:27:03.781" level="INFO">${entry_external_key} = 37f0442d720e4efb8af0d075b078a338</msg>
<status status="PASS" starttime="20210322 03:27:03.781" endtime="20210322 03:27:03.781"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["key"]["value"]}</arg>
</arguments>
<assign>
<var>${entry_key_value}</var>
</assign>
<msg timestamp="20210322 03:27:03.782" level="INFO">${entry_key_value} = 96802315000121</msg>
<status status="PASS" starttime="20210322 03:27:03.781" endtime="20210322 03:27:03.782"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${entry_key_value}</arg>
</arguments>
<msg timestamp="20210322 03:27:03.782" level="INFO">${entry_key_value} = 96802315000121</msg>
<status status="PASS" starttime="20210322 03:27:03.782" endtime="20210322 03:27:03.782"></status>
</kw>
<status status="PASS" starttime="20210322 03:27:02.236" endtime="20210322 03:27:03.782"></status>
</kw>
<kw name="validar criação da chave pix" library="asserts">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando status_code</arg>
</arguments>
<msg timestamp="20210322 03:27:03.783" level="INFO">Validando status_code</msg>
<status status="PASS" starttime="20210322 03:27:03.783" endtime="20210322 03:27:03.783"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${type}' == 'evp'</arg>
<arg>Should Be Equal As Integers</arg>
<arg>${response.status_code}</arg>
<arg>201</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'phone'</arg>
<arg>Should Be Equal As Integers</arg>
<arg>${response.status_code}</arg>
<arg>202</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'email'</arg>
<arg>Should Be Equal As Integers</arg>
<arg>${response.status_code}</arg>
<arg>202</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'national_registration'</arg>
<arg>Should Be Equal As Integers</arg>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 03:27:03.784" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:27:03.783" endtime="20210322 03:27:03.784"></status>
</kw>
<status status="PASS" starttime="20210322 03:27:03.783" endtime="20210322 03:27:03.784"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar status da chave</arg>
</arguments>
<msg timestamp="20210322 03:27:03.785" level="INFO">Validar status da chave</msg>
<status status="PASS" starttime="20210322 03:27:03.784" endtime="20210322 03:27:03.785"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${type}' == 'evp'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["status"]}</arg>
<arg>active</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'phone'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["status"]}</arg>
<arg>waiting_ownership_verification</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'email'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["status"]}</arg>
<arg>waiting_ownership_verification</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'national_registration'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["status"]}</arg>
<arg>active</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["status"]}</arg>
<arg>active</arg>
</arguments>
<status status="PASS" starttime="20210322 03:27:03.785" endtime="20210322 03:27:03.785"></status>
</kw>
<status status="PASS" starttime="20210322 03:27:03.785" endtime="20210322 03:27:03.786"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando Tipo da chave PIX</arg>
</arguments>
<msg timestamp="20210322 03:27:03.786" level="INFO">Validando Tipo da chave PIX</msg>
<status status="PASS" starttime="20210322 03:27:03.786" endtime="20210322 03:27:03.786"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${type}' == 'evp'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["type"]}</arg>
<arg>${type}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'phone'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["type"]}</arg>
<arg>${type}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'email'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["type"]}</arg>
<arg>${type}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'national_registration'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["type"]}</arg>
<arg>${type}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["key"]["type"]}</arg>
<arg>${type}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:27:03.787" endtime="20210322 03:27:03.787"></status>
</kw>
<status status="PASS" starttime="20210322 03:27:03.786" endtime="20210322 03:27:03.787"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando Valor da chave PIX</arg>
</arguments>
<msg timestamp="20210322 03:27:03.787" level="INFO">Validando Valor da chave PIX</msg>
<status status="PASS" starttime="20210322 03:27:03.787" endtime="20210322 03:27:03.787"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${type}' == 'evp'</arg>
<arg>Should Not Be Empty</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'phone'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${phone_pix}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'email'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${email_pix}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'national_registration'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${national_registration}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${national_registration}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:27:03.788" endtime="20210322 03:27:03.789"></status>
</kw>
<status status="PASS" starttime="20210322 03:27:03.788" endtime="20210322 03:27:03.789"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando dados da conta</arg>
</arguments>
<msg timestamp="20210322 03:27:03.789" level="INFO">Validando dados da conta</msg>
<status status="PASS" starttime="20210322 03:27:03.789" endtime="20210322 03:27:03.789"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["id"]}</arg>
<arg>${account_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:27:03.789" endtime="20210322 03:27:03.790"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["marketplace"]}</arg>
<arg>${marketplace_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:27:03.790" endtime="20210322 03:27:03.790"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["holder"]}</arg>
<arg>${holder_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:27:03.790" endtime="20210322 03:27:03.790"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["number"]}</arg>
<arg>${account_number}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:27:03.791" endtime="20210322 03:27:03.791"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["routing_number"]}</arg>
<arg>${account_routing_number}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:27:03.791" endtime="20210322 03:27:03.791"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["type"]}</arg>
<arg>CACC</arg>
</arguments>
<status status="PASS" starttime="20210322 03:27:03.791" endtime="20210322 03:27:03.792"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar Proprietário da Account Owner</arg>
</arguments>
<msg timestamp="20210322 03:27:03.792" level="INFO">Validar Proprietário da Account Owner</msg>
<status status="PASS" starttime="20210322 03:27:03.792" endtime="20210322 03:27:03.792"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${holder_type}' == 'individual'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["account"]["owner"]["name"]}</arg>
<arg>${holder_name}</arg>
<arg>ELSE IF</arg>
<arg>'${holder_type}' == 'business'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["account"]["owner"]["name"]}</arg>
<arg>${legal_name}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["account"]["owner"]["name"]}</arg>
<arg>${legal_name}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:27:03.793" endtime="20210322 03:27:03.793"></status>
</kw>
<status status="PASS" starttime="20210322 03:27:03.792" endtime="20210322 03:27:03.793"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar national_registration da Account Owner</arg>
</arguments>
<msg timestamp="20210322 03:27:03.793" level="INFO">Validar national_registration da Account Owner</msg>
<status status="PASS" starttime="20210322 03:27:03.793" endtime="20210322 03:27:03.793"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${holder_type}' == 'individual'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["account"]["owner"]["national_registration"]}</arg>
<arg>${national_registration}</arg>
<arg>ELSE IF</arg>
<arg>'${holder_type}' == 'business'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["account"]["owner"]["national_registration"]}</arg>
<arg>${national_registration}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["account"]["owner"]["national_registration"]}</arg>
<arg>${national_registration}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:27:03.794" endtime="20210322 03:27:03.794"></status>
</kw>
<status status="PASS" starttime="20210322 03:27:03.793" endtime="20210322 03:27:03.794"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar Holder Type do Account Owner</arg>
</arguments>
<msg timestamp="20210322 03:27:03.794" level="INFO">Validar Holder Type do Account Owner</msg>
<status status="PASS" starttime="20210322 03:27:03.794" endtime="20210322 03:27:03.794"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${holder_type}' == 'individual'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["account"]["owner"]["type"]}</arg>
<arg>${holder_type}</arg>
<arg>ELSE IF</arg>
<arg>'${holder_type}' == 'business'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["account"]["owner"]["type"]}</arg>
<arg>${holder_type}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["account"]["owner"]["type"]}</arg>
<arg>${holder_type}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:27:03.795" endtime="20210322 03:27:03.795"></status>
</kw>
<status status="PASS" starttime="20210322 03:27:03.794" endtime="20210322 03:27:03.795"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar PSP</arg>
</arguments>
<msg timestamp="20210322 03:27:03.795" level="INFO">Validar PSP</msg>
<status status="PASS" starttime="20210322 03:27:03.795" endtime="20210322 03:27:03.796"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["psp"]["code"]}</arg>
<arg>19468242</arg>
</arguments>
<status status="PASS" starttime="20210322 03:27:03.796" endtime="20210322 03:27:03.796"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["psp"]["name"]}</arg>
<arg>Zoop Tecnologia e Meios de Pagamento S.A.</arg>
</arguments>
<status status="PASS" starttime="20210322 03:27:03.796" endtime="20210322 03:27:03.796"></status>
</kw>
<status status="PASS" starttime="20210322 03:27:03.782" endtime="20210322 03:27:03.797"></status>
</kw>
<kw name="excluir chave pix" library="pix_dict_delete_entry">
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 03:27:03.797" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 03:27:03.797" endtime="20210322 03:27:03.798"></status>
</kw>
<status status="PASS" starttime="20210322 03:27:03.797" endtime="20210322 03:27:03.798"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:27:03.798" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 03:27:03.798" endtime="20210322 03:27:03.798"></status>
</kw>
<kw name="Delete Request" library="RequestsLibrary">
<doc>Send a DELETE request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries/${entry_external_key}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:27:03.799" level="INFO">DELETE Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/af0fcefe5ac04f4aa66107cf145c6979/accounts/a9a5a58b49a8400d91c01020f6e1df09/entries/37f0442d720e4efb8af0d075b078a338, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data=None 
json=None</msg>
<msg timestamp="20210322 03:27:05.174" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:27:03.798" endtime="20210322 03:27:05.174"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:27:05.175" level="INFO">{'message': 'Entry removed successfully'}</msg>
<status status="PASS" starttime="20210322 03:27:05.175" endtime="20210322 03:27:05.176"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:27:05.177" level="INFO">8e008364e8a4c492</msg>
<status status="PASS" starttime="20210322 03:27:05.176" endtime="20210322 03:27:05.177"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 03:27:05.178" level="INFO">200</msg>
<status status="PASS" starttime="20210322 03:27:05.177" endtime="20210322 03:27:05.178"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:27:05.179" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:27:05.179" endtime="20210322 03:27:05.179"></status>
</kw>
<status status="PASS" starttime="20210322 03:27:03.797" endtime="20210322 03:27:05.179"></status>
</kw>
<kw name="validar exclusão da chave pix" library="asserts">
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 03:27:05.181" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:27:05.180" endtime="20210322 03:27:05.181"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["message"]}</arg>
<arg>Entry removed successfully</arg>
</arguments>
<status status="PASS" starttime="20210322 03:27:05.182" endtime="20210322 03:27:05.182"></status>
</kw>
<status status="PASS" starttime="20210322 03:27:05.180" endtime="20210322 03:27:05.182"></status>
</kw>
<doc>Fluxo Básico</doc>
<tags>
<tag>regression_test</tag>
<tag>smoke_test</tag>
</tags>
<status status="PASS" starttime="20210322 03:26:58.097" endtime="20210322 03:27:05.183" critical="yes"></status>
</test>
<doc>Funcionalidade: Confirmação de Propriedade de Chave de Endereçamento
Eu, como um Holder, portador de uma conta ativa em Banking
E portador de uma chave de endereçamento
Desejo excluir uma chave de endereçamento</doc>
<status status="PASS" starttime="20210322 03:26:37.039" endtime="20210322 03:27:05.184"></status>
</suite>
<status status="PASS" starttime="20210322 03:25:16.234" endtime="20210322 03:27:05.191"></status>
</suite>
<suite id="s1-s2" name="Reivindicacao" source="C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\tests\pix-dict\reivindicacao">
<suite id="s1-s2-s1" name="Cancelar Reivindicação de Posse" source="C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\tests\pix-dict\reivindicacao\Cancelar Reivindicação de Posse.robot">
<test id="s1-s2-s1-t1" name="Cenário: Cancelamento de Reivindiação pelo Reivindicador">
<kw name="Random Number" library="FakerLibrary">
<doc>Returns a random number with 1 digit (default, when digits==None),
a random number with 0 to given number of digits, or a random number
with given number to given number of digits (when ``fix_len==True``).</doc>
<arguments>
<arg>digits=8</arg>
<arg>fix_len=True</arg>
</arguments>
<assign>
<var>${phone}</var>
</assign>
<msg timestamp="20210322 03:27:05.251" level="INFO">${phone} = 59856976</msg>
<status status="PASS" starttime="20210322 03:27:05.251" endtime="20210322 03:27:05.251"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>+55219${phone}</arg>
</arguments>
<assign>
<var>${phone_pix}</var>
</assign>
<msg timestamp="20210322 03:27:05.251" level="INFO">${phone_pix} = +5521959856976</msg>
<status status="PASS" starttime="20210322 03:27:05.251" endtime="20210322 03:27:05.251"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${phone_pix}</arg>
</arguments>
<msg timestamp="20210322 03:27:05.252" level="INFO">${phone_pix} = +5521959856976</msg>
<status status="PASS" starttime="20210322 03:27:05.252" endtime="20210322 03:27:05.252"></status>
</kw>
<kw name="criar holder individual ativo" library="accreditation_create_holder_active">
<kw name="conectar accreditation" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accreditation</arg>
<arg>url=${accreditation_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 03:27:05.253" level="INFO">Creating Session using : alias=accreditation, url=https://banking-accreditation-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 03:27:05.253" endtime="20210322 03:27:05.253"></status>
</kw>
<status status="PASS" starttime="20210322 03:27:05.252" endtime="20210322 03:27:05.253"></status>
</kw>
<kw name="Cpf" library="FakerLibrary">
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 03:27:05.254" level="INFO">${national_registration} = 235.081.746-62</msg>
<status status="PASS" starttime="20210322 03:27:05.253" endtime="20210322 03:27:05.254"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${national_registration}</arg>
<arg>.</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 03:27:05.254" level="INFO">${national_registration} = 235081746-62</msg>
<status status="PASS" starttime="20210322 03:27:05.254" endtime="20210322 03:27:05.254"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${national_registration}</arg>
<arg>-</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 03:27:05.255" level="INFO">${national_registration} = 23508174662</msg>
<status status="PASS" starttime="20210322 03:27:05.254" endtime="20210322 03:27:05.255"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${national_registration}</arg>
</arguments>
<msg timestamp="20210322 03:27:05.255" level="INFO">${national_registration} = 23508174662</msg>
<status status="PASS" starttime="20210322 03:27:05.255" endtime="20210322 03:27:05.255"></status>
</kw>
<kw name="Rg" library="FakerLibrary">
<doc>Brazilian RG, return plain numbers.
Check:  https://www.ngmatematica.com/2014/02/como-determinar-o-digito-verificador-do.html</doc>
<assign>
<var>${identity_card}</var>
</assign>
<msg timestamp="20210322 03:27:05.255" level="INFO">${identity_card} = 785123404</msg>
<status status="PASS" starttime="20210322 03:27:05.255" endtime="20210322 03:27:05.255"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${identity_card}</arg>
</arguments>
<msg timestamp="20210322 03:27:05.256" level="INFO">${identity_card} = 785123404</msg>
<status status="PASS" starttime="20210322 03:27:05.256" endtime="20210322 03:27:05.256"></status>
</kw>
<kw name="criar holder individual" library="accreditation_post_holder_individual">
<arguments>
<arg>holder_type=individual</arg>
<arg>holder_name=${holder_name}</arg>
<arg>email=${email}</arg>
<arg>national_registration=${national_registration}</arg>
<arg>revenue=${revenue}</arg>
<arg>birthday=${birthday}</arg>
<arg>mothers_name=${mothers_name}</arg>
<arg>identity_card=${identity_card}</arg>
<arg>pep=false</arg>
<arg>cbo=${cbo}</arg>
</arguments>
<kw name="conectar accreditation" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accreditation</arg>
<arg>url=${accreditation_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 03:27:05.257" level="INFO">Creating Session using : alias=accreditation, url=https://banking-accreditation-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 03:27:05.257" endtime="20210322 03:27:05.258"></status>
</kw>
<status status="PASS" starttime="20210322 03:27:05.257" endtime="20210322 03:27:05.258"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_type}</arg>
</arguments>
<msg timestamp="20210322 03:27:05.258" level="INFO">${holder_type} = individual</msg>
<status status="PASS" starttime="20210322 03:27:05.258" endtime="20210322 03:27:05.258"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_name}</arg>
</arguments>
<msg timestamp="20210322 03:27:05.258" level="INFO">${holder_name} = Holder de teste</msg>
<status status="PASS" starttime="20210322 03:27:05.258" endtime="20210322 03:27:05.259"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:27:05.259" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 03:27:05.259" endtime="20210322 03:27:05.259"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "${holder_type}",</arg>
<arg>"name": "${holder_name}",</arg>
<arg>"email": "${email}",</arg>
<arg>"national_registration": "${national_registration}",</arg>
<arg>"revenue": ${revenue},</arg>
<arg>"birthday": "${birthday}",</arg>
<arg>"mothers_name": "${mothers_name}",</arg>
<arg>"identity_card": "${identity_card}",</arg>
<arg>"pep": false,</arg>
<arg>"cbo": ${cbo}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 03:27:05.259" level="INFO">${body} = { "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "23508174662", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder",...</msg>
<status status="PASS" starttime="20210322 03:27:05.259" endtime="20210322 03:27:05.260"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:27:05.260" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "23508174662", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder", "identity_card": "785123404", "pep": false, "cbo": 821450 } 
json=None</msg>
<msg timestamp="20210322 03:27:05.935" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:27:05.260" endtime="20210322 03:27:05.935"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:27:05.936" level="INFO">{'id': '18ca6bdf47c44326947d7e701fd1a533', 'name': 'Holder de teste', 'revenue': 5500.0, 'email': 'teste@teste.com.br', 'status': 'waiting_info_and_documents', 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'marketplace_name': 'Marketplace de Teste', 'created_at': '2021-03-22T03:27:06.787532', 'updated_at': '2021-03-22T03:27:06.787534', 'type': 'individual', 'national_registration': '23508174662', 'birthday': '1988-04-23', 'mothers_name': 'Mãe do Holder', 'identity_card': '785123404', 'pep': False, 'cbo': '821450', '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/18ca6bdf47c44326947d7e701fd1a533', 'type': 'GET'}, 'phones': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/18ca6bdf47c44326947d7e701fd1a533/phones', 'type': 'GET'}, 'addresses': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/18ca6bdf47c44326947d7e701fd1a533/addresses', 'type': 'GET'}, 'documents': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/18ca6bdf47c44326947d7e701fd1a533/documents', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 03:27:05.935" endtime="20210322 03:27:05.936"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:27:05.937" level="INFO">ed8467586dab1d44</msg>
<status status="PASS" starttime="20210322 03:27:05.937" endtime="20210322 03:27:05.937"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${body}</arg>
</arguments>
<msg timestamp="20210322 03:27:05.938" level="INFO">{ "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "23508174662", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder", "identity_card": "785123404", "pep": false, "cbo": 821450 }</msg>
<status status="PASS" starttime="20210322 03:27:05.938" endtime="20210322 03:27:05.938"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:27:05.939" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:27:05.939" endtime="20210322 03:27:05.939"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${holder_external_key}</var>
</assign>
<msg timestamp="20210322 03:27:05.941" level="INFO">${holder_external_key} = 18ca6bdf47c44326947d7e701fd1a533</msg>
<status status="PASS" starttime="20210322 03:27:05.940" endtime="20210322 03:27:05.941"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_external_key}</arg>
</arguments>
<msg timestamp="20210322 03:27:05.942" level="INFO">${holder_external_key} = 18ca6bdf47c44326947d7e701fd1a533</msg>
<status status="PASS" starttime="20210322 03:27:05.941" endtime="20210322 03:27:05.942"></status>
</kw>
<status status="PASS" starttime="20210322 03:27:05.257" endtime="20210322 03:27:05.942"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_name}</arg>
</arguments>
<msg timestamp="20210322 03:27:05.943" level="INFO">${holder_name} = Holder de teste</msg>
<status status="PASS" starttime="20210322 03:27:05.942" endtime="20210322 03:27:05.943"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 03:27:05.944" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:27:05.943" endtime="20210322 03:27:05.944"></status>
</kw>
<kw name="criar holder phone" library="accreditation_post_holder_phone">
<arguments>
<arg>21</arg>
<arg>51</arg>
<arg>996221236</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:27:05.946" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 03:27:05.945" endtime="20210322 03:27:05.946"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"area_code": "${phone_area_code}",</arg>
<arg>"country_code": "${phone_country_code}",</arg>
<arg>"number": "${phone_number}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 03:27:05.947" level="INFO">${body} = { "area_code": "21", "country_code": "51", "number": "996221236" }</msg>
<status status="PASS" starttime="20210322 03:27:05.947" endtime="20210322 03:27:05.947"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/phones</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:27:05.949" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/18ca6bdf47c44326947d7e701fd1a533/phones, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "area_code": "21", "country_code": "51", "number": "996221236" } 
json=None</msg>
<msg timestamp="20210322 03:27:06.180" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:27:05.948" endtime="20210322 03:27:06.180"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:27:06.181" level="INFO">{'id': 'af4e6fa200e743c08b94269693b36b94', 'area_code': '21', 'country_code': '51', 'number': '996221236', 'main': True, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/18ca6bdf47c44326947d7e701fd1a533/phones/af4e6fa200e743c08b94269693b36b94', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/18ca6bdf47c44326947d7e701fd1a533', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 03:27:06.180" endtime="20210322 03:27:06.181"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:27:06.182" level="INFO">dbb2350247f94e50</msg>
<status status="PASS" starttime="20210322 03:27:06.181" endtime="20210322 03:27:06.182"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:27:06.183" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:27:06.182" endtime="20210322 03:27:06.183"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${phone_external_key}</var>
</assign>
<msg timestamp="20210322 03:27:06.184" level="INFO">${phone_external_key} = af4e6fa200e743c08b94269693b36b94</msg>
<status status="PASS" starttime="20210322 03:27:06.183" endtime="20210322 03:27:06.184"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${phone_external_key}</arg>
</arguments>
<msg timestamp="20210322 03:27:06.185" level="INFO">${phone_external_key} = af4e6fa200e743c08b94269693b36b94</msg>
<status status="PASS" starttime="20210322 03:27:06.184" endtime="20210322 03:27:06.185"></status>
</kw>
<status status="PASS" starttime="20210322 03:27:05.944" endtime="20210322 03:27:06.185"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 03:27:06.186" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:27:06.185" endtime="20210322 03:27:06.186"></status>
</kw>
<kw name="criar holder address" library="accreditation_post_holder_address">
<arguments>
<arg>Rio de Janeiro</arg>
<arg>Rio de Janeiro</arg>
<arg>Brasil</arg>
<arg>Bairro de Testes</arg>
<arg>Rua de Testes</arg>
<arg>90</arg>
<arg>apto 200</arg>
<arg>21550987</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:27:06.187" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 03:27:06.187" endtime="20210322 03:27:06.187"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"city": "${city}",</arg>
<arg>"state": "${state}",</arg>
<arg>"country": "${country}",</arg>
<arg>"neighborhood": "${neighborhood}",</arg>
<arg>"street": "${street}",</arg>
<arg>"number": "${number}",</arg>
<arg>"complement": "${complement}",</arg>
<arg>"postal_code": "${postal_code}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 03:27:06.188" level="INFO">${body} = { "city": "Rio de Janeiro", "state": "Rio de Janeiro", "country": "Brasil", "neighborhood": "Bairro de Testes", "street": "Rua de Testes", "number": "90", "complement": "apto 200", "postal_code": "215...</msg>
<status status="PASS" starttime="20210322 03:27:06.188" endtime="20210322 03:27:06.188"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/addresses</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:27:06.189" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/18ca6bdf47c44326947d7e701fd1a533/addresses, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "city": "Rio de Janeiro", "state": "Rio de Janeiro", "country": "Brasil", "neighborhood": "Bairro de Testes", "street": "Rua de Testes", "number": "90", "complement": "apto 200", "postal_code": "21550987" } 
json=None</msg>
<msg timestamp="20210322 03:27:06.451" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:27:06.189" endtime="20210322 03:27:06.451"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:27:06.452" level="INFO">{'id': '9ced80eb01304bafa5f58dce64cbd927', 'street': 'Rua de Testes', 'number': '90', 'city': 'Rio de Janeiro', 'complement': 'apto 200', 'state': 'Rio de Janeiro', 'neighborhood': 'Bairro de Testes', 'postal_code': '21550987', 'country': 'Brasil', 'main': True, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/18ca6bdf47c44326947d7e701fd1a533/addresses/9ced80eb01304bafa5f58dce64cbd927', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/18ca6bdf47c44326947d7e701fd1a533', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 03:27:06.451" endtime="20210322 03:27:06.452"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:27:06.452" level="INFO">b5d506841fe93efe</msg>
<status status="PASS" starttime="20210322 03:27:06.452" endtime="20210322 03:27:06.452"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:27:06.453" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:27:06.453" endtime="20210322 03:27:06.453"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${address_external_key}</var>
</assign>
<msg timestamp="20210322 03:27:06.453" level="INFO">${address_external_key} = 9ced80eb01304bafa5f58dce64cbd927</msg>
<status status="PASS" starttime="20210322 03:27:06.453" endtime="20210322 03:27:06.453"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${address_external_key}</arg>
</arguments>
<msg timestamp="20210322 03:27:06.454" level="INFO">${address_external_key} = 9ced80eb01304bafa5f58dce64cbd927</msg>
<status status="PASS" starttime="20210322 03:27:06.454" endtime="20210322 03:27:06.454"></status>
</kw>
<status status="PASS" starttime="20210322 03:27:06.186" endtime="20210322 03:27:06.454"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 03:27:06.454" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:27:06.454" endtime="20210322 03:27:06.454"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>SELFIE</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:27:06.455" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 03:27:06.455" endtime="20210322 03:27:06.455"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 03:27:06.455" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 03:27:06.456" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 03:27:06.455" endtime="20210322 03:27:06.457"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:27:06.457" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/18ca6bdf47c44326947d7e701fd1a533/documents?type=SELFIE, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 03:27:06.790" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:27:06.457" endtime="20210322 03:27:06.790"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:27:06.791" level="INFO">{'id': 'b84a17dce05f4431b589d731c60f101d', 'document_type': 'selfie', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/18ca6bdf47c44326947d7e701fd1a533/documents/b84a17dce05f4431b589d731c60f101d', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/18ca6bdf47c44326947d7e701fd1a533', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/18ca6bdf47c44326947d7e701fd1a533/documents/b84a17dce05f4431b589d731c60f101d/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 03:27:06.790" endtime="20210322 03:27:06.791"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:27:06.792" level="INFO">423d444ebdea034b</msg>
<status status="PASS" starttime="20210322 03:27:06.791" endtime="20210322 03:27:06.792"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:27:06.793" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:27:06.792" endtime="20210322 03:27:06.793"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 03:27:06.795" level="INFO">${document_external_key} = b84a17dce05f4431b589d731c60f101d</msg>
<status status="PASS" starttime="20210322 03:27:06.794" endtime="20210322 03:27:06.795"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 03:27:06.797" level="INFO">${document_external_key} = b84a17dce05f4431b589d731c60f101d</msg>
<status status="PASS" starttime="20210322 03:27:06.796" endtime="20210322 03:27:06.797"></status>
</kw>
<status status="PASS" starttime="20210322 03:27:06.455" endtime="20210322 03:27:06.797"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 03:27:06.798" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:27:06.798" endtime="20210322 03:27:06.798"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>RG_FRENTE</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:27:06.800" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 03:27:06.799" endtime="20210322 03:27:06.800"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 03:27:06.801" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 03:27:06.803" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 03:27:06.801" endtime="20210322 03:27:06.803"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:27:06.804" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/18ca6bdf47c44326947d7e701fd1a533/documents?type=RG_FRENTE, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 03:27:07.164" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:27:06.803" endtime="20210322 03:27:07.164"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:27:07.167" level="INFO">{'id': '1bf6cd51064f459fa8ae66865e4e74fc', 'document_type': 'rg_frente', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/18ca6bdf47c44326947d7e701fd1a533/documents/1bf6cd51064f459fa8ae66865e4e74fc', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/18ca6bdf47c44326947d7e701fd1a533', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/18ca6bdf47c44326947d7e701fd1a533/documents/1bf6cd51064f459fa8ae66865e4e74fc/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 03:27:07.165" endtime="20210322 03:27:07.167"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:27:07.170" level="INFO">a04ee881b16a5304</msg>
<status status="PASS" starttime="20210322 03:27:07.168" endtime="20210322 03:27:07.170"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:27:07.173" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:27:07.171" endtime="20210322 03:27:07.173"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 03:27:07.176" level="INFO">${document_external_key} = 1bf6cd51064f459fa8ae66865e4e74fc</msg>
<status status="PASS" starttime="20210322 03:27:07.174" endtime="20210322 03:27:07.176"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 03:27:07.178" level="INFO">${document_external_key} = 1bf6cd51064f459fa8ae66865e4e74fc</msg>
<status status="PASS" starttime="20210322 03:27:07.177" endtime="20210322 03:27:07.178"></status>
</kw>
<status status="PASS" starttime="20210322 03:27:06.799" endtime="20210322 03:27:07.178"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 03:27:07.180" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:27:07.179" endtime="20210322 03:27:07.180"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>RG_VERSO</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:27:07.182" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 03:27:07.181" endtime="20210322 03:27:07.182"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 03:27:07.183" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 03:27:07.186" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 03:27:07.183" endtime="20210322 03:27:07.186"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:27:07.188" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/18ca6bdf47c44326947d7e701fd1a533/documents?type=RG_VERSO, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 03:27:07.446" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:27:07.187" endtime="20210322 03:27:07.447"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:27:07.449" level="INFO">{'id': '996a8a8aab3e4f89b82bd8e9282aeff7', 'document_type': 'rg_verso', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/18ca6bdf47c44326947d7e701fd1a533/documents/996a8a8aab3e4f89b82bd8e9282aeff7', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/18ca6bdf47c44326947d7e701fd1a533', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/18ca6bdf47c44326947d7e701fd1a533/documents/996a8a8aab3e4f89b82bd8e9282aeff7/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 03:27:07.448" endtime="20210322 03:27:07.449"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:27:07.451" level="INFO">5f4f48d6ca8cdf98</msg>
<status status="PASS" starttime="20210322 03:27:07.450" endtime="20210322 03:27:07.452"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:27:07.453" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:27:07.452" endtime="20210322 03:27:07.454"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 03:27:07.456" level="INFO">${document_external_key} = 996a8a8aab3e4f89b82bd8e9282aeff7</msg>
<status status="PASS" starttime="20210322 03:27:07.455" endtime="20210322 03:27:07.456"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 03:27:07.457" level="INFO">${document_external_key} = 996a8a8aab3e4f89b82bd8e9282aeff7</msg>
<status status="PASS" starttime="20210322 03:27:07.456" endtime="20210322 03:27:07.457"></status>
</kw>
<status status="PASS" starttime="20210322 03:27:07.180" endtime="20210322 03:27:07.458"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 03:27:07.459" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:27:07.458" endtime="20210322 03:27:07.459"></status>
</kw>
<kw name="solicitar aprovação do holder" library="accreditation_request_approval">
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:27:07.461" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 03:27:07.460" endtime="20210322 03:27:07.461"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/approval</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:27:07.463" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/18ca6bdf47c44326947d7e701fd1a533/approval, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data=None 
json=None</msg>
<msg timestamp="20210322 03:27:07.744" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:27:07.462" endtime="20210322 03:27:07.744"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:27:07.745" level="INFO">{'message': 'Approval request accepted successfully. Processing analysis'}</msg>
<status status="PASS" starttime="20210322 03:27:07.744" endtime="20210322 03:27:07.745"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:27:07.747" level="INFO">bc4bb07ac46a3bfc</msg>
<status status="PASS" starttime="20210322 03:27:07.745" endtime="20210322 03:27:07.747"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:27:07.747" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:27:07.747" endtime="20210322 03:27:07.748"></status>
</kw>
<status status="PASS" starttime="20210322 03:27:07.460" endtime="20210322 03:27:07.749"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 03:27:07.750" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:27:07.749" endtime="20210322 03:27:07.750"></status>
</kw>
<kw name="recebendo notificação de aprovação" library="accreditation_risk_notification">
<kw name="Uuid 4" library="FakerLibrary">
<doc>Generates a random UUID4 string.
:param cast_to: Specify what type the UUID should be cast to. Default is `str`
:type cast_to: callable</doc>
<assign>
<var>${assessment_id}</var>
</assign>
<msg timestamp="20210322 03:27:07.751" level="INFO">${assessment_id} = 3b87a832-a102-410b-abbf-3d4e66b560a8</msg>
<status status="PASS" starttime="20210322 03:27:07.751" endtime="20210322 03:27:07.751"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>year</arg>
</arguments>
<assign>
<var>${year}</var>
</assign>
<msg timestamp="20210322 03:27:07.753" level="INFO">${year} = 2021</msg>
<status status="PASS" starttime="20210322 03:27:07.751" endtime="20210322 03:27:07.753"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>month</arg>
</arguments>
<assign>
<var>${month}</var>
</assign>
<msg timestamp="20210322 03:27:07.753" level="INFO">${month} = 03</msg>
<status status="PASS" starttime="20210322 03:27:07.753" endtime="20210322 03:27:07.753"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>day</arg>
</arguments>
<assign>
<var>${day}</var>
</assign>
<msg timestamp="20210322 03:27:07.754" level="INFO">${day} = 22</msg>
<status status="PASS" starttime="20210322 03:27:07.753" endtime="20210322 03:27:07.754"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:27:07.756" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 03:27:07.755" endtime="20210322 03:27:07.756"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "risk.assessment.result",</arg>
<arg>"resource": "business.holder",</arg>
<arg>"created_at": "${year}-${month}-${day} 15:28:56.747Z",</arg>
<arg>"marketplace_id": "${marketplace_external_key}",</arg>
<arg>"object": {</arg>
<arg>"result": "APPROVED",</arg>
<arg>"holder_id": "${holder_external_key}",</arg>
<arg>"applicant_id": "${application_external_key}",</arg>
<arg>"assessment_id": "${assessment_id}"</arg>
<arg>}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 03:27:07.758" level="INFO">${body} = { "type": "risk.assessment.result", "resource": "business.holder", "created_at": "2021-03-22 15:28:56.747Z", "marketplace_id": "f71a8951368a4cc085cf7875ff44e61c", "object": { "result": "APPROVED", "ho...</msg>
<status status="PASS" starttime="20210322 03:27:07.756" endtime="20210322 03:27:07.758"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/admin/internal_operation/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/registration/approval</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:27:07.759" level="INFO">POST Request using : uri=/admin/internal_operation/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/18ca6bdf47c44326947d7e701fd1a533/registration/approval, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "risk.assessment.result", "resource": "business.holder", "created_at": "2021-03-22 15:28:56.747Z", "marketplace_id": "f71a8951368a4cc085cf7875ff44e61c", "object": { "result": "APPROVED", "holder_id": "18ca6bdf47c44326947d7e701fd1a533", "applicant_id": "bcc25a6751c14b52af1340d40dba78c5", "assessment_id": "3b87a832-a102-410b-abbf-3d4e66b560a8" } } 
json=None</msg>
<msg timestamp="20210322 03:27:07.956" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:27:07.758" endtime="20210322 03:27:07.957"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:27:07.959" level="INFO">{'message': 'Holder approved successfully'}</msg>
<status status="PASS" starttime="20210322 03:27:07.958" endtime="20210322 03:27:07.959"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:27:07.961" level="INFO">5d733efebfeb796a</msg>
<status status="PASS" starttime="20210322 03:27:07.960" endtime="20210322 03:27:07.962"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:27:07.964" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:27:07.964" endtime="20210322 03:27:07.964"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 03:27:07.966" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:27:07.965" endtime="20210322 03:27:07.966"></status>
</kw>
<status status="PASS" starttime="20210322 03:27:07.750" endtime="20210322 03:27:07.967"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 03:27:07.968" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:27:07.967" endtime="20210322 03:27:07.968"></status>
</kw>
<kw name="buscar account por holder" library="accounts_get_accounts_by_holder">
<kw name="conectar accounts" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accounts</arg>
<arg>url=${account_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 03:27:07.971" level="INFO">Creating Session using : alias=accounts, url=https://banking-accounts-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 03:27:07.970" endtime="20210322 03:27:07.972"></status>
</kw>
<status status="PASS" starttime="20210322 03:27:07.970" endtime="20210322 03:27:07.972"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accounts</arg>
<arg>/marketplaces/${marketplace_external_key}/holders/${holder_external_key}/accounts</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:27:07.973" level="INFO">GET Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/holders/18ca6bdf47c44326947d7e701fd1a533/accounts, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 03:27:08.577" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:27:07.972" endtime="20210322 03:27:08.577"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:27:08.579" level="INFO">{'items': [{'id': '358e871f400b43fa9f2d7f3db6c71841', 'holder': '18ca6bdf47c44326947d7e701fd1a533', 'balance': '0.00', 'currency': 'BRL', 'routing_number': '001', 'number': '1575415462', 'status': 'active', 'metadata': {}, 'created_at': '2021-03-22T06:27:08.80917', 'updated_at': '2021-03-22T06:27:08.80917', 'primary': True, 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'uri': '/v2/marketplaces/f71a8951368a4cc085cf7875ff44e61c/accounts/358e871f400b43fa9f2d7f3db6c71841', 'resource': 'payment_account'}], 'has_more': False, 'limit': 100, 'total_pages': 1, 'page': 1, 'offset': 0, 'total': '1', 'query_count': '1'}</msg>
<status status="PASS" starttime="20210322 03:27:08.578" endtime="20210322 03:27:08.580"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:27:08.582" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:27:08.581" endtime="20210322 03:27:08.582"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["id"]}</arg>
</arguments>
<assign>
<var>${account_external_key}</var>
</assign>
<msg timestamp="20210322 03:27:08.584" level="INFO">${account_external_key} = 358e871f400b43fa9f2d7f3db6c71841</msg>
<status status="PASS" starttime="20210322 03:27:08.583" endtime="20210322 03:27:08.584"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_external_key}</arg>
</arguments>
<msg timestamp="20210322 03:27:08.585" level="INFO">${account_external_key} = 358e871f400b43fa9f2d7f3db6c71841</msg>
<status status="PASS" starttime="20210322 03:27:08.585" endtime="20210322 03:27:08.586"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["number"]}</arg>
</arguments>
<assign>
<var>${account_number}</var>
</assign>
<msg timestamp="20210322 03:27:08.587" level="INFO">${account_number} = 1575415462</msg>
<status status="PASS" starttime="20210322 03:27:08.586" endtime="20210322 03:27:08.587"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_number}</arg>
</arguments>
<msg timestamp="20210322 03:27:08.589" level="INFO">${account_number} = 1575415462</msg>
<status status="PASS" starttime="20210322 03:27:08.588" endtime="20210322 03:27:08.589"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["routing_number"]}</arg>
</arguments>
<assign>
<var>${account_routing_number}</var>
</assign>
<msg timestamp="20210322 03:27:08.591" level="INFO">${account_routing_number} = 001</msg>
<status status="PASS" starttime="20210322 03:27:08.589" endtime="20210322 03:27:08.591"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_routing_number}</arg>
</arguments>
<msg timestamp="20210322 03:27:08.592" level="INFO">${account_routing_number} = 001</msg>
<status status="PASS" starttime="20210322 03:27:08.591" endtime="20210322 03:27:08.592"></status>
</kw>
<status status="PASS" starttime="20210322 03:27:07.970" endtime="20210322 03:27:08.592"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 03:27:08.593" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:27:08.592" endtime="20210322 03:27:08.593"></status>
</kw>
<status status="PASS" starttime="20210322 03:27:05.252" endtime="20210322 03:27:08.593"></status>
</kw>
<kw name="criar chave pix" library="pix_dict_create_entry">
<arguments>
<arg>phone</arg>
<arg>${phone_pix}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 03:27:08.596" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 03:27:08.595" endtime="20210322 03:27:08.596"></status>
</kw>
<status status="PASS" starttime="20210322 03:27:08.594" endtime="20210322 03:27:08.596"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${type}</arg>
</arguments>
<msg timestamp="20210322 03:27:08.597" level="INFO">${type} = phone</msg>
<status status="PASS" starttime="20210322 03:27:08.597" endtime="20210322 03:27:08.598"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210322 03:27:08.598" level="INFO">${value} = +5521959856976</msg>
<status status="PASS" starttime="20210322 03:27:08.598" endtime="20210322 03:27:08.599"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:27:08.599" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 03:27:08.599" endtime="20210322 03:27:08.600"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "${type}",</arg>
<arg>"value": "${value}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 03:27:08.600" level="INFO">${body} = { "type": "phone", "value": "+5521959856976" }</msg>
<status status="PASS" starttime="20210322 03:27:08.600" endtime="20210322 03:27:08.600"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:27:08.602" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/18ca6bdf47c44326947d7e701fd1a533/accounts/358e871f400b43fa9f2d7f3db6c71841/entries, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "phone", "value": "+5521959856976" } 
json=None</msg>
<msg timestamp="20210322 03:27:09.289" level="INFO">${response} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20210322 03:27:08.601" endtime="20210322 03:27:09.289"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:27:09.291" level="INFO">{'id': 'b2e5370cf877400d9f8c7482105b263b', 'status': 'waiting_ownership_verification', 'created_at': '2021-03-22T03:27:10.150', 'updated_at': '2021-03-22T03:27:10.150', 'key': {'value': '+5521959856976', 'type': 'phone'}, 'account': {'id': '358e871f400b43fa9f2d7f3db6c71841', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': '18ca6bdf47c44326947d7e701fd1a533', 'owner': {'name': 'Holder de teste', 'national_registration': '23508174662', 'type': 'individual'}, 'routing_number': '001', 'number': '1575415462', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}, 'resource': 'pix.entry'}</msg>
<status status="PASS" starttime="20210322 03:27:09.290" endtime="20210322 03:27:09.291"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:27:09.292" level="INFO">ac589e12fa6ff854</msg>
<status status="PASS" starttime="20210322 03:27:09.291" endtime="20210322 03:27:09.292"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 03:27:09.293" level="INFO">202</msg>
<status status="PASS" starttime="20210322 03:27:09.293" endtime="20210322 03:27:09.293"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:27:09.294" level="INFO">${response} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20210322 03:27:09.293" endtime="20210322 03:27:09.294"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${entry_external_key}</var>
</assign>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:27:09.295" endtime="20210322 03:27:09.296"></status>
</kw>
<msg timestamp="20210322 03:27:09.296" level="INFO">${entry_external_key} = b2e5370cf877400d9f8c7482105b263b</msg>
<status status="PASS" starttime="20210322 03:27:09.295" endtime="20210322 03:27:09.296"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${entry_external_key}</arg>
</arguments>
<msg timestamp="20210322 03:27:09.297" level="INFO">${entry_external_key} = b2e5370cf877400d9f8c7482105b263b</msg>
<status status="PASS" starttime="20210322 03:27:09.297" endtime="20210322 03:27:09.297"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["key"]["value"]}</arg>
</arguments>
<assign>
<var>${entry_key_value}</var>
</assign>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["key"]["value"]}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:27:09.298" endtime="20210322 03:27:09.299"></status>
</kw>
<msg timestamp="20210322 03:27:09.299" level="INFO">${entry_key_value} = +5521959856976</msg>
<status status="PASS" starttime="20210322 03:27:09.297" endtime="20210322 03:27:09.299"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${entry_key_value}</arg>
</arguments>
<msg timestamp="20210322 03:27:09.299" level="INFO">${entry_key_value} = +5521959856976</msg>
<status status="PASS" starttime="20210322 03:27:09.299" endtime="20210322 03:27:09.299"></status>
</kw>
<status status="PASS" starttime="20210322 03:27:08.594" endtime="20210322 03:27:09.300"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${holder_external_key}</arg>
</arguments>
<assign>
<var>${holder_owner}</var>
</assign>
<msg timestamp="20210322 03:27:09.300" level="INFO">${holder_owner} = 18ca6bdf47c44326947d7e701fd1a533</msg>
<status status="PASS" starttime="20210322 03:27:09.300" endtime="20210322 03:27:09.300"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${holder_name}</arg>
</arguments>
<assign>
<var>${holder_name_owner}</var>
</assign>
<msg timestamp="20210322 03:27:09.301" level="INFO">${holder_name_owner} = Holder de teste</msg>
<status status="PASS" starttime="20210322 03:27:09.300" endtime="20210322 03:27:09.301"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${national_registration}</arg>
</arguments>
<assign>
<var>${national_registration_owner}</var>
</assign>
<msg timestamp="20210322 03:27:09.302" level="INFO">${national_registration_owner} = 23508174662</msg>
<status status="PASS" starttime="20210322 03:27:09.301" endtime="20210322 03:27:09.302"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${account_external_key}</arg>
</arguments>
<assign>
<var>${account_owner}</var>
</assign>
<msg timestamp="20210322 03:27:09.302" level="INFO">${account_owner} = 358e871f400b43fa9f2d7f3db6c71841</msg>
<status status="PASS" starttime="20210322 03:27:09.302" endtime="20210322 03:27:09.302"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${account_number}</arg>
</arguments>
<assign>
<var>${account_number_owner}</var>
</assign>
<msg timestamp="20210322 03:27:09.303" level="INFO">${account_number_owner} = 1575415462</msg>
<status status="PASS" starttime="20210322 03:27:09.303" endtime="20210322 03:27:09.303"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${entry_external_key}</arg>
</arguments>
<assign>
<var>${entry_owner}</var>
</assign>
<msg timestamp="20210322 03:27:09.303" level="INFO">${entry_owner} = b2e5370cf877400d9f8c7482105b263b</msg>
<status status="PASS" starttime="20210322 03:27:09.303" endtime="20210322 03:27:09.304"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Holder Owner :: ${holder_owner}</arg>
</arguments>
<msg timestamp="20210322 03:27:09.304" level="INFO">Holder Owner :: 18ca6bdf47c44326947d7e701fd1a533</msg>
<status status="PASS" starttime="20210322 03:27:09.304" endtime="20210322 03:27:09.304"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Account Owner :: ${account_owner}</arg>
</arguments>
<msg timestamp="20210322 03:27:09.304" level="INFO">Account Owner :: 358e871f400b43fa9f2d7f3db6c71841</msg>
<status status="PASS" starttime="20210322 03:27:09.304" endtime="20210322 03:27:09.304"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Account Number Owner :: ${account_number_owner}</arg>
</arguments>
<msg timestamp="20210322 03:27:09.305" level="INFO">Account Number Owner :: 1575415462</msg>
<status status="PASS" starttime="20210322 03:27:09.305" endtime="20210322 03:27:09.305"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>National Registration Holder Owner :: ${national_registration_owner}</arg>
</arguments>
<msg timestamp="20210322 03:27:09.305" level="INFO">National Registration Holder Owner :: 23508174662</msg>
<status status="PASS" starttime="20210322 03:27:09.305" endtime="20210322 03:27:09.306"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Entry Owner :: ${entry_owner}</arg>
</arguments>
<msg timestamp="20210322 03:27:09.306" level="INFO">Entry Owner :: b2e5370cf877400d9f8c7482105b263b</msg>
<status status="PASS" starttime="20210322 03:27:09.306" endtime="20210322 03:27:09.306"></status>
</kw>
<kw name="buscar verification code" library="pix_dict_verification_code">
<arguments>
<arg>${holder_owner}</arg>
<arg>${account_owner}</arg>
<arg>${entry_owner}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 03:27:09.307" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 03:27:09.307" endtime="20210322 03:27:09.308"></status>
</kw>
<status status="PASS" starttime="20210322 03:27:09.307" endtime="20210322 03:27:09.308"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/admin/internal_operation/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries/${entry_external_key}/code</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:27:09.308" level="INFO">GET Request using : uri=/admin/internal_operation/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/18ca6bdf47c44326947d7e701fd1a533/accounts/358e871f400b43fa9f2d7f3db6c71841/entries/b2e5370cf877400d9f8c7482105b263b/code, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 03:27:09.907" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:27:09.308" endtime="20210322 03:27:09.907"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:27:09.907" level="INFO">{'code': '1148'}</msg>
<status status="PASS" starttime="20210322 03:27:09.907" endtime="20210322 03:27:09.907"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:27:09.908" level="INFO">100cef0883a9e675</msg>
<status status="PASS" starttime="20210322 03:27:09.907" endtime="20210322 03:27:09.908"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 03:27:09.908" level="INFO">200</msg>
<status status="PASS" starttime="20210322 03:27:09.908" endtime="20210322 03:27:09.908"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:27:09.909" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:27:09.908" endtime="20210322 03:27:09.909"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["code"]}</arg>
</arguments>
<assign>
<var>${verification_code}</var>
</assign>
<msg timestamp="20210322 03:27:09.909" level="INFO">${verification_code} = 1148</msg>
<status status="PASS" starttime="20210322 03:27:09.909" endtime="20210322 03:27:09.909"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${verification_code}</arg>
</arguments>
<msg timestamp="20210322 03:27:09.910" level="INFO">${verification_code} = 1148</msg>
<status status="PASS" starttime="20210322 03:27:09.910" endtime="20210322 03:27:09.910"></status>
</kw>
<status status="PASS" starttime="20210322 03:27:09.306" endtime="20210322 03:27:09.910"></status>
</kw>
<kw name="confirmar propriedade da chave pix" library="pix_dict_confirm_propriety">
<arguments>
<arg>${verification_code}</arg>
<arg>${holder_owner}</arg>
<arg>${account_owner}</arg>
<arg>${entry_owner}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 03:27:09.911" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 03:27:09.911" endtime="20210322 03:27:09.912"></status>
</kw>
<status status="PASS" starttime="20210322 03:27:09.911" endtime="20210322 03:27:09.912"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:27:09.912" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 03:27:09.912" endtime="20210322 03:27:09.912"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"code": "${verification_code}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 03:27:09.913" level="INFO">${body} = { "code": "1148" }</msg>
<status status="PASS" starttime="20210322 03:27:09.912" endtime="20210322 03:27:09.913"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries/${entry_external_key}/ownership</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:27:09.913" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/18ca6bdf47c44326947d7e701fd1a533/accounts/358e871f400b43fa9f2d7f3db6c71841/entries/b2e5370cf877400d9f8c7482105b263b/ownership, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "code": "1148" } 
json=None</msg>
<msg timestamp="20210322 03:27:11.456" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:27:09.913" endtime="20210322 03:27:11.456"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:27:11.456" level="INFO">{'id': 'b2e5370cf877400d9f8c7482105b263b', 'status': 'active', 'created_at': '2021-03-22T03:27:10.150', 'updated_at': '2021-03-22T03:27:12.335', 'key': {'value': '+5521959856976', 'type': 'phone'}, 'account': {'id': '358e871f400b43fa9f2d7f3db6c71841', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': '18ca6bdf47c44326947d7e701fd1a533', 'owner': {'name': 'Holder de teste', 'national_registration': '23508174662', 'type': 'individual'}, 'routing_number': '001', 'number': '1575415462', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}, 'resource': 'pix.entry'}</msg>
<status status="PASS" starttime="20210322 03:27:11.456" endtime="20210322 03:27:11.457"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:27:11.457" level="INFO">8ecf06b8cd52057a</msg>
<status status="PASS" starttime="20210322 03:27:11.457" endtime="20210322 03:27:11.457"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 03:27:11.457" level="INFO">201</msg>
<status status="PASS" starttime="20210322 03:27:11.457" endtime="20210322 03:27:11.457"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:27:11.458" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:27:11.458" endtime="20210322 03:27:11.458"></status>
</kw>
<status status="PASS" starttime="20210322 03:27:09.910" endtime="20210322 03:27:11.458"></status>
</kw>
<kw name="validar ativação da chave de endereçamento" library="asserts">
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["status"]}</arg>
<arg>active</arg>
</arguments>
<status status="PASS" starttime="20210322 03:27:11.458" endtime="20210322 03:27:11.459"></status>
</kw>
<status status="PASS" starttime="20210322 03:27:11.458" endtime="20210322 03:27:11.459"></status>
</kw>
<kw name="criar holder individual ativo" library="accreditation_create_holder_active">
<kw name="conectar accreditation" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accreditation</arg>
<arg>url=${accreditation_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 03:27:11.460" level="INFO">Creating Session using : alias=accreditation, url=https://banking-accreditation-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 03:27:11.459" endtime="20210322 03:27:11.460"></status>
</kw>
<status status="PASS" starttime="20210322 03:27:11.459" endtime="20210322 03:27:11.460"></status>
</kw>
<kw name="Cpf" library="FakerLibrary">
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 03:27:11.460" level="INFO">${national_registration} = 689.107.243-31</msg>
<status status="PASS" starttime="20210322 03:27:11.460" endtime="20210322 03:27:11.460"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${national_registration}</arg>
<arg>.</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 03:27:11.461" level="INFO">${national_registration} = 689107243-31</msg>
<status status="PASS" starttime="20210322 03:27:11.460" endtime="20210322 03:27:11.461"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${national_registration}</arg>
<arg>-</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 03:27:11.461" level="INFO">${national_registration} = 68910724331</msg>
<status status="PASS" starttime="20210322 03:27:11.461" endtime="20210322 03:27:11.461"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${national_registration}</arg>
</arguments>
<msg timestamp="20210322 03:27:11.462" level="INFO">${national_registration} = 68910724331</msg>
<status status="PASS" starttime="20210322 03:27:11.461" endtime="20210322 03:27:11.462"></status>
</kw>
<kw name="Rg" library="FakerLibrary">
<doc>Brazilian RG, return plain numbers.
Check:  https://www.ngmatematica.com/2014/02/como-determinar-o-digito-verificador-do.html</doc>
<assign>
<var>${identity_card}</var>
</assign>
<msg timestamp="20210322 03:27:11.462" level="INFO">${identity_card} = 872540637</msg>
<status status="PASS" starttime="20210322 03:27:11.462" endtime="20210322 03:27:11.462"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${identity_card}</arg>
</arguments>
<msg timestamp="20210322 03:27:11.463" level="INFO">${identity_card} = 872540637</msg>
<status status="PASS" starttime="20210322 03:27:11.462" endtime="20210322 03:27:11.463"></status>
</kw>
<kw name="criar holder individual" library="accreditation_post_holder_individual">
<arguments>
<arg>holder_type=individual</arg>
<arg>holder_name=${holder_name}</arg>
<arg>email=${email}</arg>
<arg>national_registration=${national_registration}</arg>
<arg>revenue=${revenue}</arg>
<arg>birthday=${birthday}</arg>
<arg>mothers_name=${mothers_name}</arg>
<arg>identity_card=${identity_card}</arg>
<arg>pep=false</arg>
<arg>cbo=${cbo}</arg>
</arguments>
<kw name="conectar accreditation" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accreditation</arg>
<arg>url=${accreditation_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 03:27:11.464" level="INFO">Creating Session using : alias=accreditation, url=https://banking-accreditation-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 03:27:11.464" endtime="20210322 03:27:11.464"></status>
</kw>
<status status="PASS" starttime="20210322 03:27:11.463" endtime="20210322 03:27:11.464"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_type}</arg>
</arguments>
<msg timestamp="20210322 03:27:11.465" level="INFO">${holder_type} = individual</msg>
<status status="PASS" starttime="20210322 03:27:11.464" endtime="20210322 03:27:11.465"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_name}</arg>
</arguments>
<msg timestamp="20210322 03:27:11.465" level="INFO">${holder_name} = Holder de teste</msg>
<status status="PASS" starttime="20210322 03:27:11.465" endtime="20210322 03:27:11.465"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:27:11.465" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 03:27:11.465" endtime="20210322 03:27:11.466"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "${holder_type}",</arg>
<arg>"name": "${holder_name}",</arg>
<arg>"email": "${email}",</arg>
<arg>"national_registration": "${national_registration}",</arg>
<arg>"revenue": ${revenue},</arg>
<arg>"birthday": "${birthday}",</arg>
<arg>"mothers_name": "${mothers_name}",</arg>
<arg>"identity_card": "${identity_card}",</arg>
<arg>"pep": false,</arg>
<arg>"cbo": ${cbo}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 03:27:11.466" level="INFO">${body} = { "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "68910724331", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder",...</msg>
<status status="PASS" starttime="20210322 03:27:11.466" endtime="20210322 03:27:11.466"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:27:11.467" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "68910724331", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder", "identity_card": "872540637", "pep": false, "cbo": 821450 } 
json=None</msg>
<msg timestamp="20210322 03:27:12.105" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:27:11.466" endtime="20210322 03:27:12.105"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:27:12.106" level="INFO">{'id': '28edbcd15a3f488d8549258656303f6e', 'name': 'Holder de teste', 'revenue': 5500.0, 'email': 'teste@teste.com.br', 'status': 'waiting_info_and_documents', 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'marketplace_name': 'Marketplace de Teste', 'created_at': '2021-03-22T03:27:12.959221', 'updated_at': '2021-03-22T03:27:12.959222', 'type': 'individual', 'national_registration': '68910724331', 'birthday': '1988-04-23', 'mothers_name': 'Mãe do Holder', 'identity_card': '872540637', 'pep': False, 'cbo': '821450', '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/28edbcd15a3f488d8549258656303f6e', 'type': 'GET'}, 'phones': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/28edbcd15a3f488d8549258656303f6e/phones', 'type': 'GET'}, 'addresses': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/28edbcd15a3f488d8549258656303f6e/addresses', 'type': 'GET'}, 'documents': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/28edbcd15a3f488d8549258656303f6e/documents', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 03:27:12.106" endtime="20210322 03:27:12.106"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:27:12.106" level="INFO">2d05e50155d8eb0f</msg>
<status status="PASS" starttime="20210322 03:27:12.106" endtime="20210322 03:27:12.106"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${body}</arg>
</arguments>
<msg timestamp="20210322 03:27:12.107" level="INFO">{ "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "68910724331", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder", "identity_card": "872540637", "pep": false, "cbo": 821450 }</msg>
<status status="PASS" starttime="20210322 03:27:12.107" endtime="20210322 03:27:12.107"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:27:12.107" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:27:12.107" endtime="20210322 03:27:12.107"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${holder_external_key}</var>
</assign>
<msg timestamp="20210322 03:27:12.108" level="INFO">${holder_external_key} = 28edbcd15a3f488d8549258656303f6e</msg>
<status status="PASS" starttime="20210322 03:27:12.108" endtime="20210322 03:27:12.108"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_external_key}</arg>
</arguments>
<msg timestamp="20210322 03:27:12.108" level="INFO">${holder_external_key} = 28edbcd15a3f488d8549258656303f6e</msg>
<status status="PASS" starttime="20210322 03:27:12.108" endtime="20210322 03:27:12.108"></status>
</kw>
<status status="PASS" starttime="20210322 03:27:11.463" endtime="20210322 03:27:12.108"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_name}</arg>
</arguments>
<msg timestamp="20210322 03:27:12.109" level="INFO">${holder_name} = Holder de teste</msg>
<status status="PASS" starttime="20210322 03:27:12.109" endtime="20210322 03:27:12.109"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 03:27:12.109" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:27:12.109" endtime="20210322 03:27:12.109"></status>
</kw>
<kw name="criar holder phone" library="accreditation_post_holder_phone">
<arguments>
<arg>21</arg>
<arg>51</arg>
<arg>996221236</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:27:12.110" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 03:27:12.110" endtime="20210322 03:27:12.110"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"area_code": "${phone_area_code}",</arg>
<arg>"country_code": "${phone_country_code}",</arg>
<arg>"number": "${phone_number}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 03:27:12.110" level="INFO">${body} = { "area_code": "21", "country_code": "51", "number": "996221236" }</msg>
<status status="PASS" starttime="20210322 03:27:12.110" endtime="20210322 03:27:12.111"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/phones</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:27:12.111" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/28edbcd15a3f488d8549258656303f6e/phones, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "area_code": "21", "country_code": "51", "number": "996221236" } 
json=None</msg>
<msg timestamp="20210322 03:27:12.349" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:27:12.111" endtime="20210322 03:27:12.349"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:27:12.350" level="INFO">{'id': 'e1aad17a438f4fc2a95589f83c860e35', 'area_code': '21', 'country_code': '51', 'number': '996221236', 'main': True, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/28edbcd15a3f488d8549258656303f6e/phones/e1aad17a438f4fc2a95589f83c860e35', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/28edbcd15a3f488d8549258656303f6e', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 03:27:12.350" endtime="20210322 03:27:12.350"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:27:12.351" level="INFO">a5d491e4b4f5550c</msg>
<status status="PASS" starttime="20210322 03:27:12.351" endtime="20210322 03:27:12.351"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:27:12.352" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:27:12.351" endtime="20210322 03:27:12.352"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${phone_external_key}</var>
</assign>
<msg timestamp="20210322 03:27:12.354" level="INFO">${phone_external_key} = e1aad17a438f4fc2a95589f83c860e35</msg>
<status status="PASS" starttime="20210322 03:27:12.352" endtime="20210322 03:27:12.354"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${phone_external_key}</arg>
</arguments>
<msg timestamp="20210322 03:27:12.354" level="INFO">${phone_external_key} = e1aad17a438f4fc2a95589f83c860e35</msg>
<status status="PASS" starttime="20210322 03:27:12.354" endtime="20210322 03:27:12.354"></status>
</kw>
<status status="PASS" starttime="20210322 03:27:12.109" endtime="20210322 03:27:12.354"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 03:27:12.355" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:27:12.355" endtime="20210322 03:27:12.355"></status>
</kw>
<kw name="criar holder address" library="accreditation_post_holder_address">
<arguments>
<arg>Rio de Janeiro</arg>
<arg>Rio de Janeiro</arg>
<arg>Brasil</arg>
<arg>Bairro de Testes</arg>
<arg>Rua de Testes</arg>
<arg>90</arg>
<arg>apto 200</arg>
<arg>21550987</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:27:12.357" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 03:27:12.356" endtime="20210322 03:27:12.357"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"city": "${city}",</arg>
<arg>"state": "${state}",</arg>
<arg>"country": "${country}",</arg>
<arg>"neighborhood": "${neighborhood}",</arg>
<arg>"street": "${street}",</arg>
<arg>"number": "${number}",</arg>
<arg>"complement": "${complement}",</arg>
<arg>"postal_code": "${postal_code}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 03:27:12.357" level="INFO">${body} = { "city": "Rio de Janeiro", "state": "Rio de Janeiro", "country": "Brasil", "neighborhood": "Bairro de Testes", "street": "Rua de Testes", "number": "90", "complement": "apto 200", "postal_code": "215...</msg>
<status status="PASS" starttime="20210322 03:27:12.357" endtime="20210322 03:27:12.357"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/addresses</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:27:12.358" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/28edbcd15a3f488d8549258656303f6e/addresses, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "city": "Rio de Janeiro", "state": "Rio de Janeiro", "country": "Brasil", "neighborhood": "Bairro de Testes", "street": "Rua de Testes", "number": "90", "complement": "apto 200", "postal_code": "21550987" } 
json=None</msg>
<msg timestamp="20210322 03:27:12.591" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:27:12.358" endtime="20210322 03:27:12.591"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:27:12.591" level="INFO">{'id': '37912774777b4a8b96f3b8570d0aee04', 'street': 'Rua de Testes', 'number': '90', 'city': 'Rio de Janeiro', 'complement': 'apto 200', 'state': 'Rio de Janeiro', 'neighborhood': 'Bairro de Testes', 'postal_code': '21550987', 'country': 'Brasil', 'main': True, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/28edbcd15a3f488d8549258656303f6e/addresses/37912774777b4a8b96f3b8570d0aee04', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/28edbcd15a3f488d8549258656303f6e', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 03:27:12.591" endtime="20210322 03:27:12.591"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:27:12.592" level="INFO">e252e5e30502c8da</msg>
<status status="PASS" starttime="20210322 03:27:12.591" endtime="20210322 03:27:12.592"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:27:12.592" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:27:12.592" endtime="20210322 03:27:12.592"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${address_external_key}</var>
</assign>
<msg timestamp="20210322 03:27:12.593" level="INFO">${address_external_key} = 37912774777b4a8b96f3b8570d0aee04</msg>
<status status="PASS" starttime="20210322 03:27:12.592" endtime="20210322 03:27:12.593"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${address_external_key}</arg>
</arguments>
<msg timestamp="20210322 03:27:12.593" level="INFO">${address_external_key} = 37912774777b4a8b96f3b8570d0aee04</msg>
<status status="PASS" starttime="20210322 03:27:12.593" endtime="20210322 03:27:12.593"></status>
</kw>
<status status="PASS" starttime="20210322 03:27:12.355" endtime="20210322 03:27:12.593"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 03:27:12.594" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:27:12.593" endtime="20210322 03:27:12.594"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>SELFIE</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:27:12.594" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 03:27:12.594" endtime="20210322 03:27:12.594"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 03:27:12.595" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 03:27:12.595" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 03:27:12.594" endtime="20210322 03:27:12.596"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:27:12.596" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/28edbcd15a3f488d8549258656303f6e/documents?type=SELFIE, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 03:27:12.938" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:27:12.596" endtime="20210322 03:27:12.938"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:27:12.939" level="INFO">{'id': 'a83576c7fd42413d892278eb19883c82', 'document_type': 'selfie', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/28edbcd15a3f488d8549258656303f6e/documents/a83576c7fd42413d892278eb19883c82', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/28edbcd15a3f488d8549258656303f6e', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/28edbcd15a3f488d8549258656303f6e/documents/a83576c7fd42413d892278eb19883c82/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 03:27:12.938" endtime="20210322 03:27:12.939"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:27:12.939" level="INFO">80edb46cb24779d1</msg>
<status status="PASS" starttime="20210322 03:27:12.939" endtime="20210322 03:27:12.939"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:27:12.939" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:27:12.939" endtime="20210322 03:27:12.939"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 03:27:12.940" level="INFO">${document_external_key} = a83576c7fd42413d892278eb19883c82</msg>
<status status="PASS" starttime="20210322 03:27:12.940" endtime="20210322 03:27:12.940"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 03:27:12.940" level="INFO">${document_external_key} = a83576c7fd42413d892278eb19883c82</msg>
<status status="PASS" starttime="20210322 03:27:12.940" endtime="20210322 03:27:12.940"></status>
</kw>
<status status="PASS" starttime="20210322 03:27:12.594" endtime="20210322 03:27:12.941"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 03:27:12.941" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:27:12.941" endtime="20210322 03:27:12.941"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>RG_FRENTE</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:27:12.942" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 03:27:12.941" endtime="20210322 03:27:12.942"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 03:27:12.942" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 03:27:12.943" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 03:27:12.942" endtime="20210322 03:27:12.943"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:27:12.943" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/28edbcd15a3f488d8549258656303f6e/documents?type=RG_FRENTE, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 03:27:13.264" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:27:12.943" endtime="20210322 03:27:13.264"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:27:13.264" level="INFO">{'id': 'ef6713e1892b4024a162696a1afc1dae', 'document_type': 'rg_frente', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/28edbcd15a3f488d8549258656303f6e/documents/ef6713e1892b4024a162696a1afc1dae', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/28edbcd15a3f488d8549258656303f6e', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/28edbcd15a3f488d8549258656303f6e/documents/ef6713e1892b4024a162696a1afc1dae/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 03:27:13.264" endtime="20210322 03:27:13.264"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:27:13.265" level="INFO">ddac93927fc240fa</msg>
<status status="PASS" starttime="20210322 03:27:13.265" endtime="20210322 03:27:13.265"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:27:13.265" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:27:13.265" endtime="20210322 03:27:13.265"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 03:27:13.266" level="INFO">${document_external_key} = ef6713e1892b4024a162696a1afc1dae</msg>
<status status="PASS" starttime="20210322 03:27:13.266" endtime="20210322 03:27:13.266"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 03:27:13.266" level="INFO">${document_external_key} = ef6713e1892b4024a162696a1afc1dae</msg>
<status status="PASS" starttime="20210322 03:27:13.266" endtime="20210322 03:27:13.267"></status>
</kw>
<status status="PASS" starttime="20210322 03:27:12.941" endtime="20210322 03:27:13.267"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 03:27:13.267" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:27:13.267" endtime="20210322 03:27:13.267"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>RG_VERSO</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:27:13.268" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 03:27:13.268" endtime="20210322 03:27:13.268"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 03:27:13.269" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 03:27:13.270" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 03:27:13.268" endtime="20210322 03:27:13.270"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:27:13.270" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/28edbcd15a3f488d8549258656303f6e/documents?type=RG_VERSO, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 03:27:13.523" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:27:13.270" endtime="20210322 03:27:13.523"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:27:13.524" level="INFO">{'id': 'a1e9448389084c82b8d091e44458e4c0', 'document_type': 'rg_verso', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/28edbcd15a3f488d8549258656303f6e/documents/a1e9448389084c82b8d091e44458e4c0', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/28edbcd15a3f488d8549258656303f6e', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/28edbcd15a3f488d8549258656303f6e/documents/a1e9448389084c82b8d091e44458e4c0/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 03:27:13.524" endtime="20210322 03:27:13.524"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:27:13.525" level="INFO">8ec197b895f3dffa</msg>
<status status="PASS" starttime="20210322 03:27:13.524" endtime="20210322 03:27:13.525"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:27:13.525" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:27:13.525" endtime="20210322 03:27:13.525"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 03:27:13.526" level="INFO">${document_external_key} = a1e9448389084c82b8d091e44458e4c0</msg>
<status status="PASS" starttime="20210322 03:27:13.525" endtime="20210322 03:27:13.526"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 03:27:13.527" level="INFO">${document_external_key} = a1e9448389084c82b8d091e44458e4c0</msg>
<status status="PASS" starttime="20210322 03:27:13.526" endtime="20210322 03:27:13.527"></status>
</kw>
<status status="PASS" starttime="20210322 03:27:13.268" endtime="20210322 03:27:13.527"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 03:27:13.527" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:27:13.527" endtime="20210322 03:27:13.527"></status>
</kw>
<kw name="solicitar aprovação do holder" library="accreditation_request_approval">
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:27:13.528" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 03:27:13.528" endtime="20210322 03:27:13.528"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/approval</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:27:13.529" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/28edbcd15a3f488d8549258656303f6e/approval, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data=None 
json=None</msg>
<msg timestamp="20210322 03:27:13.801" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:27:13.528" endtime="20210322 03:27:13.802"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:27:13.802" level="INFO">{'message': 'Approval request accepted successfully. Processing analysis'}</msg>
<status status="PASS" starttime="20210322 03:27:13.802" endtime="20210322 03:27:13.802"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:27:13.803" level="INFO">d82920d729f9128b</msg>
<status status="PASS" starttime="20210322 03:27:13.803" endtime="20210322 03:27:13.803"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:27:13.804" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:27:13.803" endtime="20210322 03:27:13.804"></status>
</kw>
<status status="PASS" starttime="20210322 03:27:13.528" endtime="20210322 03:27:13.804"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 03:27:13.804" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:27:13.804" endtime="20210322 03:27:13.804"></status>
</kw>
<kw name="recebendo notificação de aprovação" library="accreditation_risk_notification">
<kw name="Uuid 4" library="FakerLibrary">
<doc>Generates a random UUID4 string.
:param cast_to: Specify what type the UUID should be cast to. Default is `str`
:type cast_to: callable</doc>
<assign>
<var>${assessment_id}</var>
</assign>
<msg timestamp="20210322 03:27:13.805" level="INFO">${assessment_id} = e8207ac2-010b-4da9-b7bf-9c2ceb926256</msg>
<status status="PASS" starttime="20210322 03:27:13.805" endtime="20210322 03:27:13.805"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>year</arg>
</arguments>
<assign>
<var>${year}</var>
</assign>
<msg timestamp="20210322 03:27:13.805" level="INFO">${year} = 2021</msg>
<status status="PASS" starttime="20210322 03:27:13.805" endtime="20210322 03:27:13.806"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>month</arg>
</arguments>
<assign>
<var>${month}</var>
</assign>
<msg timestamp="20210322 03:27:13.806" level="INFO">${month} = 03</msg>
<status status="PASS" starttime="20210322 03:27:13.806" endtime="20210322 03:27:13.806"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>day</arg>
</arguments>
<assign>
<var>${day}</var>
</assign>
<msg timestamp="20210322 03:27:13.806" level="INFO">${day} = 22</msg>
<status status="PASS" starttime="20210322 03:27:13.806" endtime="20210322 03:27:13.806"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:27:13.807" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 03:27:13.807" endtime="20210322 03:27:13.807"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "risk.assessment.result",</arg>
<arg>"resource": "business.holder",</arg>
<arg>"created_at": "${year}-${month}-${day} 15:28:56.747Z",</arg>
<arg>"marketplace_id": "${marketplace_external_key}",</arg>
<arg>"object": {</arg>
<arg>"result": "APPROVED",</arg>
<arg>"holder_id": "${holder_external_key}",</arg>
<arg>"applicant_id": "${application_external_key}",</arg>
<arg>"assessment_id": "${assessment_id}"</arg>
<arg>}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 03:27:13.808" level="INFO">${body} = { "type": "risk.assessment.result", "resource": "business.holder", "created_at": "2021-03-22 15:28:56.747Z", "marketplace_id": "f71a8951368a4cc085cf7875ff44e61c", "object": { "result": "APPROVED", "ho...</msg>
<status status="PASS" starttime="20210322 03:27:13.807" endtime="20210322 03:27:13.808"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/admin/internal_operation/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/registration/approval</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:27:13.809" level="INFO">POST Request using : uri=/admin/internal_operation/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/28edbcd15a3f488d8549258656303f6e/registration/approval, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "risk.assessment.result", "resource": "business.holder", "created_at": "2021-03-22 15:28:56.747Z", "marketplace_id": "f71a8951368a4cc085cf7875ff44e61c", "object": { "result": "APPROVED", "holder_id": "28edbcd15a3f488d8549258656303f6e", "applicant_id": "bcc25a6751c14b52af1340d40dba78c5", "assessment_id": "e8207ac2-010b-4da9-b7bf-9c2ceb926256" } } 
json=None</msg>
<msg timestamp="20210322 03:27:14.009" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:27:13.808" endtime="20210322 03:27:14.009"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:27:14.011" level="INFO">{'message': 'Holder approved successfully'}</msg>
<status status="PASS" starttime="20210322 03:27:14.010" endtime="20210322 03:27:14.011"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:27:14.013" level="INFO">57bcbc0b06e67f1e</msg>
<status status="PASS" starttime="20210322 03:27:14.012" endtime="20210322 03:27:14.013"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:27:14.015" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:27:14.014" endtime="20210322 03:27:14.015"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 03:27:14.017" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:27:14.016" endtime="20210322 03:27:14.017"></status>
</kw>
<status status="PASS" starttime="20210322 03:27:13.805" endtime="20210322 03:27:14.018"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 03:27:14.020" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:27:14.019" endtime="20210322 03:27:14.020"></status>
</kw>
<kw name="buscar account por holder" library="accounts_get_accounts_by_holder">
<kw name="conectar accounts" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accounts</arg>
<arg>url=${account_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 03:27:14.023" level="INFO">Creating Session using : alias=accounts, url=https://banking-accounts-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 03:27:14.023" endtime="20210322 03:27:14.024"></status>
</kw>
<status status="PASS" starttime="20210322 03:27:14.022" endtime="20210322 03:27:14.024"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accounts</arg>
<arg>/marketplaces/${marketplace_external_key}/holders/${holder_external_key}/accounts</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:27:14.025" level="INFO">GET Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/holders/28edbcd15a3f488d8549258656303f6e/accounts, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 03:27:14.647" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:27:14.025" endtime="20210322 03:27:14.647"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:27:14.647" level="INFO">{'items': [{'id': '534429dc522d4e66926cc3cfa352c9ed', 'holder': '28edbcd15a3f488d8549258656303f6e', 'balance': '0.00', 'currency': 'BRL', 'routing_number': '001', 'number': '3728512665', 'status': 'active', 'metadata': {}, 'created_at': '2021-03-22T06:27:14.85975', 'updated_at': '2021-03-22T06:27:14.85975', 'primary': True, 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'uri': '/v2/marketplaces/f71a8951368a4cc085cf7875ff44e61c/accounts/534429dc522d4e66926cc3cfa352c9ed', 'resource': 'payment_account'}], 'has_more': False, 'limit': 100, 'total_pages': 1, 'page': 1, 'offset': 0, 'total': '1', 'query_count': '1'}</msg>
<status status="PASS" starttime="20210322 03:27:14.647" endtime="20210322 03:27:14.647"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:27:14.648" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:27:14.647" endtime="20210322 03:27:14.648"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["id"]}</arg>
</arguments>
<assign>
<var>${account_external_key}</var>
</assign>
<msg timestamp="20210322 03:27:14.648" level="INFO">${account_external_key} = 534429dc522d4e66926cc3cfa352c9ed</msg>
<status status="PASS" starttime="20210322 03:27:14.648" endtime="20210322 03:27:14.648"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_external_key}</arg>
</arguments>
<msg timestamp="20210322 03:27:14.649" level="INFO">${account_external_key} = 534429dc522d4e66926cc3cfa352c9ed</msg>
<status status="PASS" starttime="20210322 03:27:14.649" endtime="20210322 03:27:14.649"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["number"]}</arg>
</arguments>
<assign>
<var>${account_number}</var>
</assign>
<msg timestamp="20210322 03:27:14.649" level="INFO">${account_number} = 3728512665</msg>
<status status="PASS" starttime="20210322 03:27:14.649" endtime="20210322 03:27:14.650"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_number}</arg>
</arguments>
<msg timestamp="20210322 03:27:14.650" level="INFO">${account_number} = 3728512665</msg>
<status status="PASS" starttime="20210322 03:27:14.650" endtime="20210322 03:27:14.650"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["routing_number"]}</arg>
</arguments>
<assign>
<var>${account_routing_number}</var>
</assign>
<msg timestamp="20210322 03:27:14.651" level="INFO">${account_routing_number} = 001</msg>
<status status="PASS" starttime="20210322 03:27:14.650" endtime="20210322 03:27:14.651"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_routing_number}</arg>
</arguments>
<msg timestamp="20210322 03:27:14.651" level="INFO">${account_routing_number} = 001</msg>
<status status="PASS" starttime="20210322 03:27:14.651" endtime="20210322 03:27:14.651"></status>
</kw>
<status status="PASS" starttime="20210322 03:27:14.021" endtime="20210322 03:27:14.651"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 03:27:14.652" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:27:14.652" endtime="20210322 03:27:14.652"></status>
</kw>
<status status="PASS" starttime="20210322 03:27:11.459" endtime="20210322 03:27:14.652"></status>
</kw>
<kw name="criar chave pix" library="pix_dict_create_entry">
<arguments>
<arg>phone</arg>
<arg>${phone_pix}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 03:27:14.654" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 03:27:14.654" endtime="20210322 03:27:14.654"></status>
</kw>
<status status="PASS" starttime="20210322 03:27:14.653" endtime="20210322 03:27:14.654"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${type}</arg>
</arguments>
<msg timestamp="20210322 03:27:14.654" level="INFO">${type} = phone</msg>
<status status="PASS" starttime="20210322 03:27:14.654" endtime="20210322 03:27:14.655"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210322 03:27:14.656" level="INFO">${value} = +5521959856976</msg>
<status status="PASS" starttime="20210322 03:27:14.656" endtime="20210322 03:27:14.656"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:27:14.656" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 03:27:14.656" endtime="20210322 03:27:14.656"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "${type}",</arg>
<arg>"value": "${value}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 03:27:14.656" level="INFO">${body} = { "type": "phone", "value": "+5521959856976" }</msg>
<status status="PASS" starttime="20210322 03:27:14.656" endtime="20210322 03:27:14.656"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:27:14.657" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/28edbcd15a3f488d8549258656303f6e/accounts/534429dc522d4e66926cc3cfa352c9ed/entries, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "phone", "value": "+5521959856976" } 
json=None</msg>
<msg timestamp="20210322 03:27:15.318" level="INFO">${response} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20210322 03:27:14.656" endtime="20210322 03:27:15.318"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:27:15.319" level="INFO">{'id': 'e264ead7f133458286221c469eaa721b', 'status': 'waiting_ownership_verification', 'created_at': '2021-03-22T03:27:16.182', 'updated_at': '2021-03-22T03:27:16.182', 'key': {'value': '+5521959856976', 'type': 'phone'}, 'account': {'id': '534429dc522d4e66926cc3cfa352c9ed', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': '28edbcd15a3f488d8549258656303f6e', 'owner': {'name': 'Holder de teste', 'national_registration': '68910724331', 'type': 'individual'}, 'routing_number': '001', 'number': '3728512665', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}, 'resource': 'pix.entry'}</msg>
<status status="PASS" starttime="20210322 03:27:15.318" endtime="20210322 03:27:15.319"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:27:15.320" level="INFO">74a03c6df4f8083a</msg>
<status status="PASS" starttime="20210322 03:27:15.320" endtime="20210322 03:27:15.320"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 03:27:15.321" level="INFO">202</msg>
<status status="PASS" starttime="20210322 03:27:15.320" endtime="20210322 03:27:15.321"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:27:15.321" level="INFO">${response} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20210322 03:27:15.321" endtime="20210322 03:27:15.321"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${entry_external_key}</var>
</assign>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:27:15.322" endtime="20210322 03:27:15.322"></status>
</kw>
<msg timestamp="20210322 03:27:15.322" level="INFO">${entry_external_key} = e264ead7f133458286221c469eaa721b</msg>
<status status="PASS" starttime="20210322 03:27:15.322" endtime="20210322 03:27:15.322"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${entry_external_key}</arg>
</arguments>
<msg timestamp="20210322 03:27:15.323" level="INFO">${entry_external_key} = e264ead7f133458286221c469eaa721b</msg>
<status status="PASS" starttime="20210322 03:27:15.323" endtime="20210322 03:27:15.323"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["key"]["value"]}</arg>
</arguments>
<assign>
<var>${entry_key_value}</var>
</assign>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["key"]["value"]}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:27:15.324" endtime="20210322 03:27:15.325"></status>
</kw>
<msg timestamp="20210322 03:27:15.325" level="INFO">${entry_key_value} = +5521959856976</msg>
<status status="PASS" starttime="20210322 03:27:15.323" endtime="20210322 03:27:15.325"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${entry_key_value}</arg>
</arguments>
<msg timestamp="20210322 03:27:15.325" level="INFO">${entry_key_value} = +5521959856976</msg>
<status status="PASS" starttime="20210322 03:27:15.325" endtime="20210322 03:27:15.325"></status>
</kw>
<status status="PASS" starttime="20210322 03:27:14.653" endtime="20210322 03:27:15.325"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${holder_external_key}</arg>
</arguments>
<assign>
<var>${holder_claimer}</var>
</assign>
<msg timestamp="20210322 03:27:15.326" level="INFO">${holder_claimer} = 28edbcd15a3f488d8549258656303f6e</msg>
<status status="PASS" starttime="20210322 03:27:15.326" endtime="20210322 03:27:15.326"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${account_external_key}</arg>
</arguments>
<assign>
<var>${account_claimer}</var>
</assign>
<msg timestamp="20210322 03:27:15.326" level="INFO">${account_claimer} = 534429dc522d4e66926cc3cfa352c9ed</msg>
<status status="PASS" starttime="20210322 03:27:15.326" endtime="20210322 03:27:15.326"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${entry_external_key}</arg>
</arguments>
<assign>
<var>${entry_claimer}</var>
</assign>
<msg timestamp="20210322 03:27:15.327" level="INFO">${entry_claimer} = e264ead7f133458286221c469eaa721b</msg>
<status status="PASS" starttime="20210322 03:27:15.326" endtime="20210322 03:27:15.327"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Holder Claimer :: ${holder_claimer}</arg>
</arguments>
<msg timestamp="20210322 03:27:15.327" level="INFO">Holder Claimer :: 28edbcd15a3f488d8549258656303f6e</msg>
<status status="PASS" starttime="20210322 03:27:15.327" endtime="20210322 03:27:15.327"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Account Claimer :: ${account_claimer}</arg>
</arguments>
<msg timestamp="20210322 03:27:15.327" level="INFO">Account Claimer :: 534429dc522d4e66926cc3cfa352c9ed</msg>
<status status="PASS" starttime="20210322 03:27:15.327" endtime="20210322 03:27:15.327"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Entry Claimer :: ${entry_claimer}</arg>
</arguments>
<msg timestamp="20210322 03:27:15.328" level="INFO">Entry Claimer :: e264ead7f133458286221c469eaa721b</msg>
<status status="PASS" starttime="20210322 03:27:15.328" endtime="20210322 03:27:15.328"></status>
</kw>
<kw name="buscar verification code" library="pix_dict_verification_code">
<arguments>
<arg>${holder_claimer}</arg>
<arg>${account_claimer}</arg>
<arg>${entry_claimer}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 03:27:15.329" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 03:27:15.329" endtime="20210322 03:27:15.329"></status>
</kw>
<status status="PASS" starttime="20210322 03:27:15.328" endtime="20210322 03:27:15.329"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/admin/internal_operation/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries/${entry_external_key}/code</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:27:15.330" level="INFO">GET Request using : uri=/admin/internal_operation/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/28edbcd15a3f488d8549258656303f6e/accounts/534429dc522d4e66926cc3cfa352c9ed/entries/e264ead7f133458286221c469eaa721b/code, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 03:27:15.952" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:27:15.329" endtime="20210322 03:27:15.952"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:27:15.954" level="INFO">{'code': '4633'}</msg>
<status status="PASS" starttime="20210322 03:27:15.953" endtime="20210322 03:27:15.954"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:27:15.955" level="INFO">f5b58ca074c5037e</msg>
<status status="PASS" starttime="20210322 03:27:15.954" endtime="20210322 03:27:15.955"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 03:27:15.956" level="INFO">200</msg>
<status status="PASS" starttime="20210322 03:27:15.956" endtime="20210322 03:27:15.956"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:27:15.958" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:27:15.957" endtime="20210322 03:27:15.958"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["code"]}</arg>
</arguments>
<assign>
<var>${verification_code}</var>
</assign>
<msg timestamp="20210322 03:27:15.960" level="INFO">${verification_code} = 4633</msg>
<status status="PASS" starttime="20210322 03:27:15.959" endtime="20210322 03:27:15.960"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${verification_code}</arg>
</arguments>
<msg timestamp="20210322 03:27:15.961" level="INFO">${verification_code} = 4633</msg>
<status status="PASS" starttime="20210322 03:27:15.960" endtime="20210322 03:27:15.961"></status>
</kw>
<status status="PASS" starttime="20210322 03:27:15.328" endtime="20210322 03:27:15.961"></status>
</kw>
<kw name="confirmar propriedade da chave pix" library="pix_dict_confirm_propriety">
<arguments>
<arg>${verification_code}</arg>
<arg>${holder_claimer}</arg>
<arg>${account_claimer}</arg>
<arg>${entry_claimer}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 03:27:15.965" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 03:27:15.964" endtime="20210322 03:27:15.965"></status>
</kw>
<status status="PASS" starttime="20210322 03:27:15.963" endtime="20210322 03:27:15.965"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:27:15.966" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 03:27:15.966" endtime="20210322 03:27:15.966"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"code": "${verification_code}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 03:27:15.967" level="INFO">${body} = { "code": "4633" }</msg>
<status status="PASS" starttime="20210322 03:27:15.967" endtime="20210322 03:27:15.967"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries/${entry_external_key}/ownership</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:27:15.969" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/28edbcd15a3f488d8549258656303f6e/accounts/534429dc522d4e66926cc3cfa352c9ed/entries/e264ead7f133458286221c469eaa721b/ownership, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "code": "4633" } 
json=None</msg>
<msg timestamp="20210322 03:27:17.338" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:27:15.968" endtime="20210322 03:27:17.338"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:27:17.339" level="INFO">{'id': 'e264ead7f133458286221c469eaa721b', 'status': 'waiting_ownership_claiming', 'created_at': '2021-03-22T03:27:16.182', 'updated_at': '2021-03-22T03:27:18.218', 'key': {'value': '+5521959856976', 'type': 'phone'}, 'account': {'id': '534429dc522d4e66926cc3cfa352c9ed', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': '28edbcd15a3f488d8549258656303f6e', 'owner': {'name': 'Holder de teste', 'national_registration': '68910724331', 'type': 'individual'}, 'routing_number': '001', 'number': '3728512665', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}, 'resource': 'pix.entry'}</msg>
<status status="PASS" starttime="20210322 03:27:17.338" endtime="20210322 03:27:17.339"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:27:17.340" level="INFO">0d3cb7ad9d2a5e1f</msg>
<status status="PASS" starttime="20210322 03:27:17.339" endtime="20210322 03:27:17.340"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 03:27:17.341" level="INFO">201</msg>
<status status="PASS" starttime="20210322 03:27:17.341" endtime="20210322 03:27:17.342"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:27:17.343" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:27:17.342" endtime="20210322 03:27:17.343"></status>
</kw>
<status status="PASS" starttime="20210322 03:27:15.962" endtime="20210322 03:27:17.343"></status>
</kw>
<kw name="validar status da chave após criação da reivindicação" library="asserts">
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["status"]}</arg>
<arg>waiting_ownership_claiming</arg>
</arguments>
<status status="PASS" starttime="20210322 03:27:17.344" endtime="20210322 03:27:17.345"></status>
</kw>
<status status="PASS" starttime="20210322 03:27:17.343" endtime="20210322 03:27:17.345"></status>
</kw>
<kw name="criar reivindicação de posse" library="pix_dict_create_claims">
<arguments>
<arg>${holder_claimer}</arg>
<arg>${account_claimer}</arg>
<arg>${entry_claimer}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 03:27:17.347" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 03:27:17.347" endtime="20210322 03:27:17.348"></status>
</kw>
<status status="PASS" starttime="20210322 03:27:17.347" endtime="20210322 03:27:17.348"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries/${entry_external_key}/claims</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:27:17.349" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/28edbcd15a3f488d8549258656303f6e/accounts/534429dc522d4e66926cc3cfa352c9ed/entries/e264ead7f133458286221c469eaa721b/claims, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 03:27:19.070" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:27:17.349" endtime="20210322 03:27:19.070"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:27:19.073" level="INFO">{'id': '06127af2eaf944759621f88b4eed1f58', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'created_at': '2021-03-22T03:27:19.941', 'updated_at': '2021-03-22T03:27:19.941', 'type': 'OWNERSHIP', 'status': 'open', 'key': {'value': '+5521959856976', 'type': 'phone'}, 'claimer': {'name': 'Holder de teste', 'national_registration': '68910724331', 'type': 'individual', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': '28edbcd15a3f488d8549258656303f6e', 'account': {'digital_account_id': '534429dc522d4e66926cc3cfa352c9ed', 'routing_number': '001', 'number': '3728512665', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}}, 'donor': {'name': 'Holder de teste', 'national_registration': '23508174662', 'type': 'individual', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': '18ca6bdf47c44326947d7e701fd1a533', 'account': {'digital_account_id': '358e871f400b43fa9f2d7f3db6c71841', 'routing_number': '001', 'number': '1575415462', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}}, 'completion_period_end': '2021-04-05T06:27:19.000', 'resolution_period_end': '2021-03-29T06:27:19.000', 'resource': 'pix.claim'}</msg>
<status status="PASS" starttime="20210322 03:27:19.071" endtime="20210322 03:27:19.073"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:27:19.075" level="INFO">3d529bed5528d344</msg>
<status status="PASS" starttime="20210322 03:27:19.074" endtime="20210322 03:27:19.076"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 03:27:19.077" level="INFO">201</msg>
<status status="PASS" starttime="20210322 03:27:19.076" endtime="20210322 03:27:19.077"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:27:19.078" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:27:19.078" endtime="20210322 03:27:19.079"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${claim_external_key}</var>
</assign>
<msg timestamp="20210322 03:27:19.080" level="INFO">${claim_external_key} = 06127af2eaf944759621f88b4eed1f58</msg>
<status status="PASS" starttime="20210322 03:27:19.079" endtime="20210322 03:27:19.080"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${claim_external_key}</arg>
</arguments>
<msg timestamp="20210322 03:27:19.081" level="INFO">${claim_external_key} = 06127af2eaf944759621f88b4eed1f58</msg>
<status status="PASS" starttime="20210322 03:27:19.081" endtime="20210322 03:27:19.082"></status>
</kw>
<status status="PASS" starttime="20210322 03:27:17.345" endtime="20210322 03:27:19.082"></status>
</kw>
<kw name="buscar reivindicação de posse" library="pix_dict_get_claims">
<arguments>
<arg>${holder_claimer}</arg>
<arg>${account_claimer}</arg>
<arg>${claim_external_key}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 03:27:19.085" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 03:27:19.084" endtime="20210322 03:27:19.085"></status>
</kw>
<status status="PASS" starttime="20210322 03:27:19.084" endtime="20210322 03:27:19.086"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/claims/${claim_external_key}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:27:19.087" level="INFO">GET Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/28edbcd15a3f488d8549258656303f6e/accounts/534429dc522d4e66926cc3cfa352c9ed/claims/06127af2eaf944759621f88b4eed1f58, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 03:27:19.747" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:27:19.086" endtime="20210322 03:27:19.747"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:27:19.748" level="INFO">{'id': '06127af2eaf944759621f88b4eed1f58', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'created_at': '2021-03-22T03:27:19.941', 'updated_at': '2021-03-22T03:27:19.941', 'type': 'OWNERSHIP', 'status': 'open', 'key': {'value': '+5521959856976', 'type': 'phone'}, 'claimer': {'name': 'Holder de teste', 'national_registration': '68910724331', 'type': 'individual', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': '28edbcd15a3f488d8549258656303f6e', 'account': {'digital_account_id': '534429dc522d4e66926cc3cfa352c9ed', 'routing_number': '001', 'number': '3728512665', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}}, 'donor': {'name': 'Holder de teste', 'national_registration': '23508174662', 'type': 'individual', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': '18ca6bdf47c44326947d7e701fd1a533', 'account': {'digital_account_id': '358e871f400b43fa9f2d7f3db6c71841', 'routing_number': '001', 'number': '1575415462', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}}, 'completion_period_end': '2021-04-05T06:27:19.000', 'resolution_period_end': '2021-03-29T06:27:19.000', 'resource': 'pix.claim'}</msg>
<status status="PASS" starttime="20210322 03:27:19.747" endtime="20210322 03:27:19.748"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:27:19.749" level="INFO">64102adb0f778a03</msg>
<status status="PASS" starttime="20210322 03:27:19.748" endtime="20210322 03:27:19.749"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 03:27:19.750" level="INFO">200</msg>
<status status="PASS" starttime="20210322 03:27:19.749" endtime="20210322 03:27:19.750"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:27:19.750" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:27:19.750" endtime="20210322 03:27:19.751"></status>
</kw>
<status status="PASS" starttime="20210322 03:27:19.082" endtime="20210322 03:27:19.751"></status>
</kw>
<kw name="validar status da reivindicação" library="asserts">
<arguments>
<arg>open</arg>
</arguments>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["status"]}</arg>
<arg>${claim_status}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:27:19.752" endtime="20210322 03:27:19.753"></status>
</kw>
<status status="PASS" starttime="20210322 03:27:19.751" endtime="20210322 03:27:19.753"></status>
</kw>
<kw name="receber notificação de reivindicação" library="pix_dict_receive_claim_notification">
<arguments>
<arg>${phone_pix}</arg>
<arg>${account_number_owner}</arg>
<arg>${national_registration_owner}</arg>
<arg>${holder_name_owner}</arg>
<arg>${claim_external_key}</arg>
<arg>WAITING_RESOLUTION</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 03:27:19.756" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 03:27:19.755" endtime="20210322 03:27:19.756"></status>
</kw>
<status status="PASS" starttime="20210322 03:27:19.755" endtime="20210322 03:27:19.756"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:27:19.757" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 03:27:19.757" endtime="20210322 03:27:19.757"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"data": {</arg>
<arg>"claim": {</arg>
<arg>"type": "OWNERSHIP",</arg>
<arg>"key": "${key_pix}",</arg>
<arg>"key_type": "PHONE",</arg>
<arg>"claimer_account": {</arg>
<arg>"participant": "19468242",</arg>
<arg>"branch": "0001",</arg>
<arg>"account_number": "${account_number}",</arg>
<arg>"account_type": "CACC"</arg>
<arg>},</arg>
<arg>"claimer": {</arg>
<arg>"type": "NATURAL_PERSON",</arg>
<arg>"tax_id_number": "${claimer_tax_id}",</arg>
<arg>"name": "${claimer_name}"</arg>
<arg>},</arg>
<arg>"donor_participant": "19468242",</arg>
<arg>"id": "${claim_external_key}",</arg>
<arg>"status": "${claim_notification_status}",</arg>
<arg>"resolution_period_end": "2020-10-18T10:00:00.000Z",</arg>
<arg>"completion_period_end": "2020-10-25T10:00:00.000Z",</arg>
<arg>"last_modified": "2020-10-17T10:00:00.000Z"</arg>
<arg>}</arg>
<arg>}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 03:27:19.758" level="INFO">${body} = { "data": { "claim": { "type": "OWNERSHIP", "key": "+5521959856976", "key_type": "PHONE", "claimer_account": { "participant": "19468242", "branch": "0001", "account_number": "1575415462", "account_typ...</msg>
<status status="PASS" starttime="20210322 03:27:19.757" endtime="20210322 03:27:19.758"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/banking/internal/dict/claims</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:27:19.759" level="INFO">POST Request using : uri=/banking/internal/dict/claims, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "data": { "claim": { "type": "OWNERSHIP", "key": "+5521959856976", "key_type": "PHONE", "claimer_account": { "participant": "19468242", "branch": "0001", "account_number": "1575415462", "account_type": "CACC" }, "claimer": { "type": "NATURAL_PERSON", "tax_id_number": "23508174662", "name": "Holder de teste" }, "donor_participant": "19468242", "id": "06127af2eaf944759621f88b4eed1f58", "status": "WAITING_RESOLUTION", "resolution_period_end": "2020-10-18T10:00:00.000Z", "completion_period_end": "2020-10-25T10:00:00.000Z", "last_modified": "2020-10-17T10:00:00.000Z" } } } 
json=None</msg>
<msg timestamp="20210322 03:27:20.410" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:27:19.759" endtime="20210322 03:27:20.410"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 03:27:20.412" level="INFO">200</msg>
<status status="PASS" starttime="20210322 03:27:20.411" endtime="20210322 03:27:20.413"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:27:20.414" level="INFO">b542b0c1d8984331</msg>
<status status="PASS" starttime="20210322 03:27:20.413" endtime="20210322 03:27:20.415"></status>
</kw>
<status status="PASS" starttime="20210322 03:27:19.754" endtime="20210322 03:27:20.416"></status>
</kw>
<kw name="buscar reivindicação de posse" library="pix_dict_get_claims">
<arguments>
<arg>${holder_claimer}</arg>
<arg>${account_claimer}</arg>
<arg>${claim_external_key}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 03:27:20.420" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 03:27:20.419" endtime="20210322 03:27:20.420"></status>
</kw>
<status status="PASS" starttime="20210322 03:27:20.418" endtime="20210322 03:27:20.421"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/claims/${claim_external_key}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:27:20.422" level="INFO">GET Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/28edbcd15a3f488d8549258656303f6e/accounts/534429dc522d4e66926cc3cfa352c9ed/claims/06127af2eaf944759621f88b4eed1f58, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 03:27:21.039" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:27:20.421" endtime="20210322 03:27:21.039"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:27:21.039" level="INFO">{'id': '06127af2eaf944759621f88b4eed1f58', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'created_at': '2021-03-22T03:27:19.941', 'updated_at': '2021-03-22T03:27:21.276', 'type': 'OWNERSHIP', 'status': 'waiting_resolution', 'key': {'value': '+5521959856976', 'type': 'phone'}, 'claimer': {'name': 'Holder de teste', 'national_registration': '68910724331', 'type': 'individual', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': '28edbcd15a3f488d8549258656303f6e', 'account': {'digital_account_id': '534429dc522d4e66926cc3cfa352c9ed', 'routing_number': '001', 'number': '3728512665', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}}, 'donor': {'name': 'Holder de teste', 'national_registration': '23508174662', 'type': 'individual', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': '18ca6bdf47c44326947d7e701fd1a533', 'account': {'digital_account_id': '358e871f400b43fa9f2d7f3db6c71841', 'routing_number': '001', 'number': '1575415462', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}}, 'completion_period_end': '2021-04-05T06:27:19.000', 'resolution_period_end': '2021-03-29T06:27:19.000', 'resource': 'pix.claim'}</msg>
<status status="PASS" starttime="20210322 03:27:21.039" endtime="20210322 03:27:21.039"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:27:21.040" level="INFO">9b79df88e61ec700</msg>
<status status="PASS" starttime="20210322 03:27:21.040" endtime="20210322 03:27:21.040"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 03:27:21.041" level="INFO">200</msg>
<status status="PASS" starttime="20210322 03:27:21.040" endtime="20210322 03:27:21.041"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:27:21.041" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:27:21.041" endtime="20210322 03:27:21.041"></status>
</kw>
<status status="PASS" starttime="20210322 03:27:20.417" endtime="20210322 03:27:21.041"></status>
</kw>
<kw name="validar status da reivindicação" library="asserts">
<arguments>
<arg>waiting_resolution</arg>
</arguments>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["status"]}</arg>
<arg>${claim_status}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:27:21.042" endtime="20210322 03:27:21.042"></status>
</kw>
<status status="PASS" starttime="20210322 03:27:21.042" endtime="20210322 03:27:21.042"></status>
</kw>
<kw name="${index} IN RANGE [ 20 ]" type="for">
<kw name="${index} = 0" type="foritem">
<kw name="cancelar reivindicação de posse" library="pix_dict_cancel_claims">
<arguments>
<arg>${holder_owner}</arg>
<arg>${account_owner}</arg>
<arg>${claim_external_key}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 03:27:21.044" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 03:27:21.044" endtime="20210322 03:27:21.044"></status>
</kw>
<status status="PASS" starttime="20210322 03:27:21.043" endtime="20210322 03:27:21.044"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/claims/${claim_external_key}/cancel</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:27:21.045" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/18ca6bdf47c44326947d7e701fd1a533/accounts/358e871f400b43fa9f2d7f3db6c71841/claims/06127af2eaf944759621f88b4eed1f58/cancel, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 03:27:21.674" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:27:21.045" endtime="20210322 03:27:21.674"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:27:21.675" level="INFO">{'message': 'Claim cancelled successfully'}</msg>
<status status="PASS" starttime="20210322 03:27:21.675" endtime="20210322 03:27:21.675"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:27:21.676" level="INFO">29bc284555f6595e</msg>
<status status="PASS" starttime="20210322 03:27:21.675" endtime="20210322 03:27:21.676"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 03:27:21.676" level="INFO">200</msg>
<status status="PASS" starttime="20210322 03:27:21.676" endtime="20210322 03:27:21.676"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:27:21.677" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:27:21.676" endtime="20210322 03:27:21.677"></status>
</kw>
<status status="PASS" starttime="20210322 03:27:21.043" endtime="20210322 03:27:21.677"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${response.json()["message"]}' == 'Claim cancelled successfully'</arg>
</arguments>
<msg timestamp="20210322 03:27:21.677" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20210322 03:27:21.677" endtime="20210322 03:27:21.677"></status>
</kw>
<status status="PASS" starttime="20210322 03:27:21.043" endtime="20210322 03:27:21.677"></status>
</kw>
<status status="PASS" starttime="20210322 03:27:21.042" endtime="20210322 03:27:21.677"></status>
</kw>
<kw name="buscar reivindicação de posse" library="pix_dict_get_claims">
<arguments>
<arg>${holder_claimer}</arg>
<arg>${account_claimer}</arg>
<arg>${claim_external_key}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 03:27:21.678" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 03:27:21.678" endtime="20210322 03:27:21.679"></status>
</kw>
<status status="PASS" starttime="20210322 03:27:21.678" endtime="20210322 03:27:21.679"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/claims/${claim_external_key}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:27:21.679" level="INFO">GET Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/28edbcd15a3f488d8549258656303f6e/accounts/534429dc522d4e66926cc3cfa352c9ed/claims/06127af2eaf944759621f88b4eed1f58, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 03:27:22.300" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:27:21.679" endtime="20210322 03:27:22.300"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:27:22.300" level="INFO">{'id': '06127af2eaf944759621f88b4eed1f58', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'created_at': '2021-03-22T03:27:19.941', 'updated_at': '2021-03-22T03:27:22.555', 'type': 'OWNERSHIP', 'status': 'waiting_entry_ownership_confirm_to_cancel', 'cancel_reason': 'FRAUD', 'key': {'value': '+5521959856976', 'type': 'phone'}, 'claimer': {'name': 'Holder de teste', 'national_registration': '68910724331', 'type': 'individual', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': '28edbcd15a3f488d8549258656303f6e', 'account': {'digital_account_id': '534429dc522d4e66926cc3cfa352c9ed', 'routing_number': '001', 'number': '3728512665', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}}, 'donor': {'name': 'Holder de teste', 'national_registration': '23508174662', 'type': 'individual', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': '18ca6bdf47c44326947d7e701fd1a533', 'account': {'digital_account_id': '358e871f400b43fa9f2d7f3db6c71841', 'routing_number': '001', 'number': '1575415462', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}}, 'completion_period_end': '2021-04-05T06:27:19.000', 'resolution_period_end': '2021-03-29T06:27:19.000', 'resource': 'pix.claim'}</msg>
<status status="PASS" starttime="20210322 03:27:22.300" endtime="20210322 03:27:22.300"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:27:22.301" level="INFO">5d75d88e3268c153</msg>
<status status="PASS" starttime="20210322 03:27:22.300" endtime="20210322 03:27:22.301"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 03:27:22.301" level="INFO">200</msg>
<status status="PASS" starttime="20210322 03:27:22.301" endtime="20210322 03:27:22.301"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:27:22.302" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:27:22.302" endtime="20210322 03:27:22.302"></status>
</kw>
<status status="PASS" starttime="20210322 03:27:21.678" endtime="20210322 03:27:22.302"></status>
</kw>
<kw name="validar status da reivindicação" library="asserts">
<arguments>
<arg>waiting_entry_ownership_confirm_to_cancel</arg>
</arguments>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["status"]}</arg>
<arg>${claim_status}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:27:22.303" endtime="20210322 03:27:22.303"></status>
</kw>
<status status="PASS" starttime="20210322 03:27:22.302" endtime="20210322 03:27:22.303"></status>
</kw>
<doc>Fluxo Básico</doc>
<tags>
<tag>regression_test</tag>
<tag>smoke_test</tag>
</tags>
<status status="PASS" starttime="20210322 03:27:05.250" endtime="20210322 03:27:22.303" critical="yes"></status>
</test>
<doc>Funcionalidade: Cancelar Reivindicação de Posse
Eu, como um Holder, portador de uma conta ativa em Banking
Desejo cancelar a reivindicação de posse de uma chave de endereçamento</doc>
<status status="PASS" starttime="20210322 03:27:05.200" endtime="20210322 03:27:22.304"></status>
</suite>
<suite id="s1-s2-s2" name="Criar Reivindicação de Posse" source="C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\tests\pix-dict\reivindicacao\Criar Reivindicação de Posse.robot">
<test id="s1-s2-s2-t1" name="Cenário: Criar Reivindicação de Posse para chave do tipo telefone">
<kw name="Random Number" library="FakerLibrary">
<doc>Returns a random number with 1 digit (default, when digits==None),
a random number with 0 to given number of digits, or a random number
with given number to given number of digits (when ``fix_len==True``).</doc>
<arguments>
<arg>digits=8</arg>
<arg>fix_len=True</arg>
</arguments>
<assign>
<var>${phone}</var>
</assign>
<msg timestamp="20210322 03:27:22.363" level="INFO">${phone} = 46629897</msg>
<status status="PASS" starttime="20210322 03:27:22.363" endtime="20210322 03:27:22.363"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>+55219${phone}</arg>
</arguments>
<assign>
<var>${phone_pix}</var>
</assign>
<msg timestamp="20210322 03:27:22.364" level="INFO">${phone_pix} = +5521946629897</msg>
<status status="PASS" starttime="20210322 03:27:22.364" endtime="20210322 03:27:22.364"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${phone_pix}</arg>
</arguments>
<msg timestamp="20210322 03:27:22.364" level="INFO">${phone_pix} = +5521946629897</msg>
<status status="PASS" starttime="20210322 03:27:22.364" endtime="20210322 03:27:22.365"></status>
</kw>
<kw name="criar holder individual ativo" library="accreditation_create_holder_active">
<kw name="conectar accreditation" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accreditation</arg>
<arg>url=${accreditation_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 03:27:22.366" level="INFO">Creating Session using : alias=accreditation, url=https://banking-accreditation-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 03:27:22.366" endtime="20210322 03:27:22.366"></status>
</kw>
<status status="PASS" starttime="20210322 03:27:22.365" endtime="20210322 03:27:22.366"></status>
</kw>
<kw name="Cpf" library="FakerLibrary">
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 03:27:22.367" level="INFO">${national_registration} = 254.903.817-79</msg>
<status status="PASS" starttime="20210322 03:27:22.367" endtime="20210322 03:27:22.367"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${national_registration}</arg>
<arg>.</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 03:27:22.368" level="INFO">${national_registration} = 254903817-79</msg>
<status status="PASS" starttime="20210322 03:27:22.367" endtime="20210322 03:27:22.368"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${national_registration}</arg>
<arg>-</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 03:27:22.369" level="INFO">${national_registration} = 25490381779</msg>
<status status="PASS" starttime="20210322 03:27:22.368" endtime="20210322 03:27:22.369"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${national_registration}</arg>
</arguments>
<msg timestamp="20210322 03:27:22.370" level="INFO">${national_registration} = 25490381779</msg>
<status status="PASS" starttime="20210322 03:27:22.369" endtime="20210322 03:27:22.370"></status>
</kw>
<kw name="Rg" library="FakerLibrary">
<doc>Brazilian RG, return plain numbers.
Check:  https://www.ngmatematica.com/2014/02/como-determinar-o-digito-verificador-do.html</doc>
<assign>
<var>${identity_card}</var>
</assign>
<msg timestamp="20210322 03:27:22.370" level="INFO">${identity_card} = 31870562X</msg>
<status status="PASS" starttime="20210322 03:27:22.370" endtime="20210322 03:27:22.371"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${identity_card}</arg>
</arguments>
<msg timestamp="20210322 03:27:22.371" level="INFO">${identity_card} = 31870562X</msg>
<status status="PASS" starttime="20210322 03:27:22.371" endtime="20210322 03:27:22.371"></status>
</kw>
<kw name="criar holder individual" library="accreditation_post_holder_individual">
<arguments>
<arg>holder_type=individual</arg>
<arg>holder_name=${holder_name}</arg>
<arg>email=${email}</arg>
<arg>national_registration=${national_registration}</arg>
<arg>revenue=${revenue}</arg>
<arg>birthday=${birthday}</arg>
<arg>mothers_name=${mothers_name}</arg>
<arg>identity_card=${identity_card}</arg>
<arg>pep=false</arg>
<arg>cbo=${cbo}</arg>
</arguments>
<kw name="conectar accreditation" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accreditation</arg>
<arg>url=${accreditation_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 03:27:22.373" level="INFO">Creating Session using : alias=accreditation, url=https://banking-accreditation-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 03:27:22.373" endtime="20210322 03:27:22.374"></status>
</kw>
<status status="PASS" starttime="20210322 03:27:22.373" endtime="20210322 03:27:22.374"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_type}</arg>
</arguments>
<msg timestamp="20210322 03:27:22.375" level="INFO">${holder_type} = individual</msg>
<status status="PASS" starttime="20210322 03:27:22.374" endtime="20210322 03:27:22.375"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_name}</arg>
</arguments>
<msg timestamp="20210322 03:27:22.375" level="INFO">${holder_name} = Holder de teste</msg>
<status status="PASS" starttime="20210322 03:27:22.375" endtime="20210322 03:27:22.376"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:27:22.376" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 03:27:22.376" endtime="20210322 03:27:22.376"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "${holder_type}",</arg>
<arg>"name": "${holder_name}",</arg>
<arg>"email": "${email}",</arg>
<arg>"national_registration": "${national_registration}",</arg>
<arg>"revenue": ${revenue},</arg>
<arg>"birthday": "${birthday}",</arg>
<arg>"mothers_name": "${mothers_name}",</arg>
<arg>"identity_card": "${identity_card}",</arg>
<arg>"pep": false,</arg>
<arg>"cbo": ${cbo}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 03:27:22.377" level="INFO">${body} = { "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "25490381779", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder",...</msg>
<status status="PASS" starttime="20210322 03:27:22.376" endtime="20210322 03:27:22.377"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:27:22.378" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "25490381779", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder", "identity_card": "31870562X", "pep": false, "cbo": 821450 } 
json=None</msg>
<msg timestamp="20210322 03:27:23.080" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:27:22.377" endtime="20210322 03:27:23.080"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:27:23.082" level="INFO">{'id': '81b5d5dd49104dbc9f2c9340e736d171', 'name': 'Holder de teste', 'revenue': 5500.0, 'email': 'teste@teste.com.br', 'status': 'waiting_info_and_documents', 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'marketplace_name': 'Marketplace de Teste', 'created_at': '2021-03-22T03:27:23.90593', 'updated_at': '2021-03-22T03:27:23.905932', 'type': 'individual', 'national_registration': '25490381779', 'birthday': '1988-04-23', 'mothers_name': 'Mãe do Holder', 'identity_card': '31870562X', 'pep': False, 'cbo': '821450', '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/81b5d5dd49104dbc9f2c9340e736d171', 'type': 'GET'}, 'phones': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/81b5d5dd49104dbc9f2c9340e736d171/phones', 'type': 'GET'}, 'addresses': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/81b5d5dd49104dbc9f2c9340e736d171/addresses', 'type': 'GET'}, 'documents': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/81b5d5dd49104dbc9f2c9340e736d171/documents', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 03:27:23.081" endtime="20210322 03:27:23.083"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:27:23.084" level="INFO">8202c2670af6afc9</msg>
<status status="PASS" starttime="20210322 03:27:23.083" endtime="20210322 03:27:23.084"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${body}</arg>
</arguments>
<msg timestamp="20210322 03:27:23.087" level="INFO">{ "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "25490381779", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder", "identity_card": "31870562X", "pep": false, "cbo": 821450 }</msg>
<status status="PASS" starttime="20210322 03:27:23.085" endtime="20210322 03:27:23.087"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:27:23.089" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:27:23.088" endtime="20210322 03:27:23.090"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${holder_external_key}</var>
</assign>
<msg timestamp="20210322 03:27:23.093" level="INFO">${holder_external_key} = 81b5d5dd49104dbc9f2c9340e736d171</msg>
<status status="PASS" starttime="20210322 03:27:23.090" endtime="20210322 03:27:23.093"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_external_key}</arg>
</arguments>
<msg timestamp="20210322 03:27:23.095" level="INFO">${holder_external_key} = 81b5d5dd49104dbc9f2c9340e736d171</msg>
<status status="PASS" starttime="20210322 03:27:23.094" endtime="20210322 03:27:23.095"></status>
</kw>
<status status="PASS" starttime="20210322 03:27:22.371" endtime="20210322 03:27:23.096"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_name}</arg>
</arguments>
<msg timestamp="20210322 03:27:23.097" level="INFO">${holder_name} = Holder de teste</msg>
<status status="PASS" starttime="20210322 03:27:23.096" endtime="20210322 03:27:23.097"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 03:27:23.098" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:27:23.098" endtime="20210322 03:27:23.098"></status>
</kw>
<kw name="criar holder phone" library="accreditation_post_holder_phone">
<arguments>
<arg>21</arg>
<arg>51</arg>
<arg>996221236</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:27:23.101" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 03:27:23.100" endtime="20210322 03:27:23.101"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"area_code": "${phone_area_code}",</arg>
<arg>"country_code": "${phone_country_code}",</arg>
<arg>"number": "${phone_number}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 03:27:23.102" level="INFO">${body} = { "area_code": "21", "country_code": "51", "number": "996221236" }</msg>
<status status="PASS" starttime="20210322 03:27:23.101" endtime="20210322 03:27:23.102"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/phones</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:27:23.103" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/81b5d5dd49104dbc9f2c9340e736d171/phones, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "area_code": "21", "country_code": "51", "number": "996221236" } 
json=None</msg>
<msg timestamp="20210322 03:27:23.347" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:27:23.103" endtime="20210322 03:27:23.347"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:27:23.348" level="INFO">{'id': '30d1202b642347b998e233626317b215', 'area_code': '21', 'country_code': '51', 'number': '996221236', 'main': True, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/81b5d5dd49104dbc9f2c9340e736d171/phones/30d1202b642347b998e233626317b215', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/81b5d5dd49104dbc9f2c9340e736d171', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 03:27:23.348" endtime="20210322 03:27:23.348"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:27:23.349" level="INFO">b8d544fa82580a18</msg>
<status status="PASS" starttime="20210322 03:27:23.349" endtime="20210322 03:27:23.349"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:27:23.351" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:27:23.350" endtime="20210322 03:27:23.351"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${phone_external_key}</var>
</assign>
<msg timestamp="20210322 03:27:23.354" level="INFO">${phone_external_key} = 30d1202b642347b998e233626317b215</msg>
<status status="PASS" starttime="20210322 03:27:23.352" endtime="20210322 03:27:23.354"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${phone_external_key}</arg>
</arguments>
<msg timestamp="20210322 03:27:23.354" level="INFO">${phone_external_key} = 30d1202b642347b998e233626317b215</msg>
<status status="PASS" starttime="20210322 03:27:23.354" endtime="20210322 03:27:23.354"></status>
</kw>
<status status="PASS" starttime="20210322 03:27:23.099" endtime="20210322 03:27:23.354"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 03:27:23.355" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:27:23.355" endtime="20210322 03:27:23.355"></status>
</kw>
<kw name="criar holder address" library="accreditation_post_holder_address">
<arguments>
<arg>Rio de Janeiro</arg>
<arg>Rio de Janeiro</arg>
<arg>Brasil</arg>
<arg>Bairro de Testes</arg>
<arg>Rua de Testes</arg>
<arg>90</arg>
<arg>apto 200</arg>
<arg>21550987</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:27:23.357" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 03:27:23.357" endtime="20210322 03:27:23.357"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"city": "${city}",</arg>
<arg>"state": "${state}",</arg>
<arg>"country": "${country}",</arg>
<arg>"neighborhood": "${neighborhood}",</arg>
<arg>"street": "${street}",</arg>
<arg>"number": "${number}",</arg>
<arg>"complement": "${complement}",</arg>
<arg>"postal_code": "${postal_code}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 03:27:23.359" level="INFO">${body} = { "city": "Rio de Janeiro", "state": "Rio de Janeiro", "country": "Brasil", "neighborhood": "Bairro de Testes", "street": "Rua de Testes", "number": "90", "complement": "apto 200", "postal_code": "215...</msg>
<status status="PASS" starttime="20210322 03:27:23.358" endtime="20210322 03:27:23.359"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/addresses</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:27:23.360" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/81b5d5dd49104dbc9f2c9340e736d171/addresses, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "city": "Rio de Janeiro", "state": "Rio de Janeiro", "country": "Brasil", "neighborhood": "Bairro de Testes", "street": "Rua de Testes", "number": "90", "complement": "apto 200", "postal_code": "21550987" } 
json=None</msg>
<msg timestamp="20210322 03:27:23.586" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:27:23.359" endtime="20210322 03:27:23.587"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:27:23.587" level="INFO">{'id': 'cf6c8e95a81b43e591cf62ec4a72c355', 'street': 'Rua de Testes', 'number': '90', 'city': 'Rio de Janeiro', 'complement': 'apto 200', 'state': 'Rio de Janeiro', 'neighborhood': 'Bairro de Testes', 'postal_code': '21550987', 'country': 'Brasil', 'main': True, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/81b5d5dd49104dbc9f2c9340e736d171/addresses/cf6c8e95a81b43e591cf62ec4a72c355', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/81b5d5dd49104dbc9f2c9340e736d171', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 03:27:23.587" endtime="20210322 03:27:23.587"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:27:23.588" level="INFO">e544dbe77e21805e</msg>
<status status="PASS" starttime="20210322 03:27:23.587" endtime="20210322 03:27:23.588"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:27:23.588" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:27:23.588" endtime="20210322 03:27:23.588"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${address_external_key}</var>
</assign>
<msg timestamp="20210322 03:27:23.589" level="INFO">${address_external_key} = cf6c8e95a81b43e591cf62ec4a72c355</msg>
<status status="PASS" starttime="20210322 03:27:23.588" endtime="20210322 03:27:23.589"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${address_external_key}</arg>
</arguments>
<msg timestamp="20210322 03:27:23.589" level="INFO">${address_external_key} = cf6c8e95a81b43e591cf62ec4a72c355</msg>
<status status="PASS" starttime="20210322 03:27:23.589" endtime="20210322 03:27:23.589"></status>
</kw>
<status status="PASS" starttime="20210322 03:27:23.356" endtime="20210322 03:27:23.589"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 03:27:23.590" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:27:23.589" endtime="20210322 03:27:23.590"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>SELFIE</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:27:23.591" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 03:27:23.590" endtime="20210322 03:27:23.591"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 03:27:23.591" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 03:27:23.592" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 03:27:23.591" endtime="20210322 03:27:23.593"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:27:23.593" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/81b5d5dd49104dbc9f2c9340e736d171/documents?type=SELFIE, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 03:27:23.891" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:27:23.593" endtime="20210322 03:27:23.891"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:27:23.892" level="INFO">{'id': 'e5c668531caa4622a7567dc89af2a77f', 'document_type': 'selfie', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/81b5d5dd49104dbc9f2c9340e736d171/documents/e5c668531caa4622a7567dc89af2a77f', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/81b5d5dd49104dbc9f2c9340e736d171', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/81b5d5dd49104dbc9f2c9340e736d171/documents/e5c668531caa4622a7567dc89af2a77f/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 03:27:23.892" endtime="20210322 03:27:23.892"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:27:23.892" level="INFO">4a9f849206164448</msg>
<status status="PASS" starttime="20210322 03:27:23.892" endtime="20210322 03:27:23.893"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:27:23.893" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:27:23.893" endtime="20210322 03:27:23.893"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 03:27:23.893" level="INFO">${document_external_key} = e5c668531caa4622a7567dc89af2a77f</msg>
<status status="PASS" starttime="20210322 03:27:23.893" endtime="20210322 03:27:23.893"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 03:27:23.894" level="INFO">${document_external_key} = e5c668531caa4622a7567dc89af2a77f</msg>
<status status="PASS" starttime="20210322 03:27:23.894" endtime="20210322 03:27:23.894"></status>
</kw>
<status status="PASS" starttime="20210322 03:27:23.590" endtime="20210322 03:27:23.894"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 03:27:23.895" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:27:23.894" endtime="20210322 03:27:23.896"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>RG_FRENTE</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:27:23.896" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 03:27:23.896" endtime="20210322 03:27:23.896"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 03:27:23.896" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 03:27:23.897" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 03:27:23.896" endtime="20210322 03:27:23.897"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:27:23.897" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/81b5d5dd49104dbc9f2c9340e736d171/documents?type=RG_FRENTE, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 03:27:24.197" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:27:23.897" endtime="20210322 03:27:24.197"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:27:24.197" level="INFO">{'id': '8cb10b7418d14a63a512f5c57e2f3193', 'document_type': 'rg_frente', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/81b5d5dd49104dbc9f2c9340e736d171/documents/8cb10b7418d14a63a512f5c57e2f3193', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/81b5d5dd49104dbc9f2c9340e736d171', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/81b5d5dd49104dbc9f2c9340e736d171/documents/8cb10b7418d14a63a512f5c57e2f3193/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 03:27:24.197" endtime="20210322 03:27:24.197"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:27:24.198" level="INFO">6bbd5af3b528b0a6</msg>
<status status="PASS" starttime="20210322 03:27:24.198" endtime="20210322 03:27:24.198"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:27:24.198" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:27:24.198" endtime="20210322 03:27:24.198"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 03:27:24.199" level="INFO">${document_external_key} = 8cb10b7418d14a63a512f5c57e2f3193</msg>
<status status="PASS" starttime="20210322 03:27:24.199" endtime="20210322 03:27:24.199"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 03:27:24.199" level="INFO">${document_external_key} = 8cb10b7418d14a63a512f5c57e2f3193</msg>
<status status="PASS" starttime="20210322 03:27:24.199" endtime="20210322 03:27:24.199"></status>
</kw>
<status status="PASS" starttime="20210322 03:27:23.896" endtime="20210322 03:27:24.200"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 03:27:24.200" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:27:24.200" endtime="20210322 03:27:24.200"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>RG_VERSO</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:27:24.202" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 03:27:24.200" endtime="20210322 03:27:24.202"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 03:27:24.202" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 03:27:24.203" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 03:27:24.202" endtime="20210322 03:27:24.203"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:27:24.204" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/81b5d5dd49104dbc9f2c9340e736d171/documents?type=RG_VERSO, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 03:27:24.465" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:27:24.204" endtime="20210322 03:27:24.465"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:27:24.466" level="INFO">{'id': '1a325b0b621747bea9e1e51d7fff537a', 'document_type': 'rg_verso', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/81b5d5dd49104dbc9f2c9340e736d171/documents/1a325b0b621747bea9e1e51d7fff537a', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/81b5d5dd49104dbc9f2c9340e736d171', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/81b5d5dd49104dbc9f2c9340e736d171/documents/1a325b0b621747bea9e1e51d7fff537a/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 03:27:24.465" endtime="20210322 03:27:24.467"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:27:24.470" level="INFO">59437d73c4f77418</msg>
<status status="PASS" starttime="20210322 03:27:24.469" endtime="20210322 03:27:24.470"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:27:24.473" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:27:24.471" endtime="20210322 03:27:24.473"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 03:27:24.475" level="INFO">${document_external_key} = 1a325b0b621747bea9e1e51d7fff537a</msg>
<status status="PASS" starttime="20210322 03:27:24.473" endtime="20210322 03:27:24.475"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 03:27:24.477" level="INFO">${document_external_key} = 1a325b0b621747bea9e1e51d7fff537a</msg>
<status status="PASS" starttime="20210322 03:27:24.477" endtime="20210322 03:27:24.478"></status>
</kw>
<status status="PASS" starttime="20210322 03:27:24.200" endtime="20210322 03:27:24.478"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 03:27:24.478" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:27:24.478" endtime="20210322 03:27:24.478"></status>
</kw>
<kw name="solicitar aprovação do holder" library="accreditation_request_approval">
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:27:24.480" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 03:27:24.480" endtime="20210322 03:27:24.481"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/approval</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:27:24.482" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/81b5d5dd49104dbc9f2c9340e736d171/approval, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data=None 
json=None</msg>
<msg timestamp="20210322 03:27:24.760" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:27:24.482" endtime="20210322 03:27:24.760"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:27:24.761" level="INFO">{'message': 'Approval request accepted successfully. Processing analysis'}</msg>
<status status="PASS" starttime="20210322 03:27:24.760" endtime="20210322 03:27:24.761"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:27:24.761" level="INFO">1a15bcc1b383499b</msg>
<status status="PASS" starttime="20210322 03:27:24.761" endtime="20210322 03:27:24.762"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:27:24.762" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:27:24.762" endtime="20210322 03:27:24.762"></status>
</kw>
<status status="PASS" starttime="20210322 03:27:24.479" endtime="20210322 03:27:24.762"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 03:27:24.764" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:27:24.763" endtime="20210322 03:27:24.764"></status>
</kw>
<kw name="recebendo notificação de aprovação" library="accreditation_risk_notification">
<kw name="Uuid 4" library="FakerLibrary">
<doc>Generates a random UUID4 string.
:param cast_to: Specify what type the UUID should be cast to. Default is `str`
:type cast_to: callable</doc>
<assign>
<var>${assessment_id}</var>
</assign>
<msg timestamp="20210322 03:27:24.766" level="INFO">${assessment_id} = 6c8cb54f-83d9-42d4-9258-7fcdbffaacaf</msg>
<status status="PASS" starttime="20210322 03:27:24.766" endtime="20210322 03:27:24.766"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>year</arg>
</arguments>
<assign>
<var>${year}</var>
</assign>
<msg timestamp="20210322 03:27:24.767" level="INFO">${year} = 2021</msg>
<status status="PASS" starttime="20210322 03:27:24.767" endtime="20210322 03:27:24.767"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>month</arg>
</arguments>
<assign>
<var>${month}</var>
</assign>
<msg timestamp="20210322 03:27:24.768" level="INFO">${month} = 03</msg>
<status status="PASS" starttime="20210322 03:27:24.767" endtime="20210322 03:27:24.769"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>day</arg>
</arguments>
<assign>
<var>${day}</var>
</assign>
<msg timestamp="20210322 03:27:24.771" level="INFO">${day} = 22</msg>
<status status="PASS" starttime="20210322 03:27:24.769" endtime="20210322 03:27:24.771"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:27:24.772" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 03:27:24.771" endtime="20210322 03:27:24.772"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "risk.assessment.result",</arg>
<arg>"resource": "business.holder",</arg>
<arg>"created_at": "${year}-${month}-${day} 15:28:56.747Z",</arg>
<arg>"marketplace_id": "${marketplace_external_key}",</arg>
<arg>"object": {</arg>
<arg>"result": "APPROVED",</arg>
<arg>"holder_id": "${holder_external_key}",</arg>
<arg>"applicant_id": "${application_external_key}",</arg>
<arg>"assessment_id": "${assessment_id}"</arg>
<arg>}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 03:27:24.773" level="INFO">${body} = { "type": "risk.assessment.result", "resource": "business.holder", "created_at": "2021-03-22 15:28:56.747Z", "marketplace_id": "f71a8951368a4cc085cf7875ff44e61c", "object": { "result": "APPROVED", "ho...</msg>
<status status="PASS" starttime="20210322 03:27:24.772" endtime="20210322 03:27:24.773"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/admin/internal_operation/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/registration/approval</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:27:24.774" level="INFO">POST Request using : uri=/admin/internal_operation/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/81b5d5dd49104dbc9f2c9340e736d171/registration/approval, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "risk.assessment.result", "resource": "business.holder", "created_at": "2021-03-22 15:28:56.747Z", "marketplace_id": "f71a8951368a4cc085cf7875ff44e61c", "object": { "result": "APPROVED", "holder_id": "81b5d5dd49104dbc9f2c9340e736d171", "applicant_id": "bcc25a6751c14b52af1340d40dba78c5", "assessment_id": "6c8cb54f-83d9-42d4-9258-7fcdbffaacaf" } } 
json=None</msg>
<msg timestamp="20210322 03:27:24.986" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:27:24.773" endtime="20210322 03:27:24.986"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:27:24.987" level="INFO">{'message': 'Holder approved successfully'}</msg>
<status status="PASS" starttime="20210322 03:27:24.986" endtime="20210322 03:27:24.987"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:27:24.987" level="INFO">8d82944998a90325</msg>
<status status="PASS" starttime="20210322 03:27:24.987" endtime="20210322 03:27:24.987"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:27:24.988" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:27:24.987" endtime="20210322 03:27:24.988"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 03:27:24.988" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:27:24.988" endtime="20210322 03:27:24.989"></status>
</kw>
<status status="PASS" starttime="20210322 03:27:24.764" endtime="20210322 03:27:24.989"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 03:27:24.989" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:27:24.989" endtime="20210322 03:27:24.989"></status>
</kw>
<kw name="buscar account por holder" library="accounts_get_accounts_by_holder">
<kw name="conectar accounts" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accounts</arg>
<arg>url=${account_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 03:27:24.991" level="INFO">Creating Session using : alias=accounts, url=https://banking-accounts-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 03:27:24.990" endtime="20210322 03:27:24.991"></status>
</kw>
<status status="PASS" starttime="20210322 03:27:24.990" endtime="20210322 03:27:24.991"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accounts</arg>
<arg>/marketplaces/${marketplace_external_key}/holders/${holder_external_key}/accounts</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:27:24.992" level="INFO">GET Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/holders/81b5d5dd49104dbc9f2c9340e736d171/accounts, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 03:27:25.625" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:27:24.991" endtime="20210322 03:27:25.625"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:27:25.627" level="INFO">{'items': [{'id': '89018cf68b954ef0b0efd3c2f7039028', 'holder': '81b5d5dd49104dbc9f2c9340e736d171', 'balance': '0.00', 'currency': 'BRL', 'routing_number': '001', 'number': '4023433116', 'status': 'active', 'metadata': {}, 'created_at': '2021-03-22T06:27:25.827068', 'updated_at': '2021-03-22T06:27:25.827068', 'primary': True, 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'uri': '/v2/marketplaces/f71a8951368a4cc085cf7875ff44e61c/accounts/89018cf68b954ef0b0efd3c2f7039028', 'resource': 'payment_account'}], 'has_more': False, 'limit': 100, 'total_pages': 1, 'page': 1, 'offset': 0, 'total': '1', 'query_count': '1'}</msg>
<status status="PASS" starttime="20210322 03:27:25.625" endtime="20210322 03:27:25.627"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:27:25.628" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:27:25.628" endtime="20210322 03:27:25.628"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["id"]}</arg>
</arguments>
<assign>
<var>${account_external_key}</var>
</assign>
<msg timestamp="20210322 03:27:25.629" level="INFO">${account_external_key} = 89018cf68b954ef0b0efd3c2f7039028</msg>
<status status="PASS" starttime="20210322 03:27:25.629" endtime="20210322 03:27:25.630"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_external_key}</arg>
</arguments>
<msg timestamp="20210322 03:27:25.630" level="INFO">${account_external_key} = 89018cf68b954ef0b0efd3c2f7039028</msg>
<status status="PASS" starttime="20210322 03:27:25.630" endtime="20210322 03:27:25.630"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["number"]}</arg>
</arguments>
<assign>
<var>${account_number}</var>
</assign>
<msg timestamp="20210322 03:27:25.631" level="INFO">${account_number} = 4023433116</msg>
<status status="PASS" starttime="20210322 03:27:25.630" endtime="20210322 03:27:25.631"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_number}</arg>
</arguments>
<msg timestamp="20210322 03:27:25.631" level="INFO">${account_number} = 4023433116</msg>
<status status="PASS" starttime="20210322 03:27:25.631" endtime="20210322 03:27:25.632"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["routing_number"]}</arg>
</arguments>
<assign>
<var>${account_routing_number}</var>
</assign>
<msg timestamp="20210322 03:27:25.632" level="INFO">${account_routing_number} = 001</msg>
<status status="PASS" starttime="20210322 03:27:25.632" endtime="20210322 03:27:25.632"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_routing_number}</arg>
</arguments>
<msg timestamp="20210322 03:27:25.633" level="INFO">${account_routing_number} = 001</msg>
<status status="PASS" starttime="20210322 03:27:25.632" endtime="20210322 03:27:25.633"></status>
</kw>
<status status="PASS" starttime="20210322 03:27:24.990" endtime="20210322 03:27:25.633"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 03:27:25.633" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:27:25.633" endtime="20210322 03:27:25.633"></status>
</kw>
<status status="PASS" starttime="20210322 03:27:22.365" endtime="20210322 03:27:25.633"></status>
</kw>
<kw name="criar chave pix" library="pix_dict_create_entry">
<arguments>
<arg>phone</arg>
<arg>${phone_pix}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 03:27:25.635" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 03:27:25.634" endtime="20210322 03:27:25.635"></status>
</kw>
<status status="PASS" starttime="20210322 03:27:25.634" endtime="20210322 03:27:25.635"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${type}</arg>
</arguments>
<msg timestamp="20210322 03:27:25.636" level="INFO">${type} = phone</msg>
<status status="PASS" starttime="20210322 03:27:25.636" endtime="20210322 03:27:25.636"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210322 03:27:25.637" level="INFO">${value} = +5521946629897</msg>
<status status="PASS" starttime="20210322 03:27:25.637" endtime="20210322 03:27:25.637"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:27:25.638" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 03:27:25.637" endtime="20210322 03:27:25.638"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "${type}",</arg>
<arg>"value": "${value}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 03:27:25.638" level="INFO">${body} = { "type": "phone", "value": "+5521946629897" }</msg>
<status status="PASS" starttime="20210322 03:27:25.638" endtime="20210322 03:27:25.638"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:27:25.639" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/81b5d5dd49104dbc9f2c9340e736d171/accounts/89018cf68b954ef0b0efd3c2f7039028/entries, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "phone", "value": "+5521946629897" } 
json=None</msg>
<msg timestamp="20210322 03:27:26.265" level="INFO">${response} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20210322 03:27:25.638" endtime="20210322 03:27:26.266"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:27:26.266" level="INFO">{'id': '26e75deb09014df49e0ffb679daf0146', 'status': 'waiting_ownership_verification', 'created_at': '2021-03-22T03:27:27.135', 'updated_at': '2021-03-22T03:27:27.135', 'key': {'value': '+5521946629897', 'type': 'phone'}, 'account': {'id': '89018cf68b954ef0b0efd3c2f7039028', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': '81b5d5dd49104dbc9f2c9340e736d171', 'owner': {'name': 'Holder de teste', 'national_registration': '25490381779', 'type': 'individual'}, 'routing_number': '001', 'number': '4023433116', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}, 'resource': 'pix.entry'}</msg>
<status status="PASS" starttime="20210322 03:27:26.266" endtime="20210322 03:27:26.266"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:27:26.267" level="INFO">afd4d144a9baf760</msg>
<status status="PASS" starttime="20210322 03:27:26.267" endtime="20210322 03:27:26.267"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 03:27:26.267" level="INFO">202</msg>
<status status="PASS" starttime="20210322 03:27:26.267" endtime="20210322 03:27:26.267"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:27:26.268" level="INFO">${response} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20210322 03:27:26.268" endtime="20210322 03:27:26.268"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${entry_external_key}</var>
</assign>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:27:26.269" endtime="20210322 03:27:26.270"></status>
</kw>
<msg timestamp="20210322 03:27:26.270" level="INFO">${entry_external_key} = 26e75deb09014df49e0ffb679daf0146</msg>
<status status="PASS" starttime="20210322 03:27:26.268" endtime="20210322 03:27:26.270"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${entry_external_key}</arg>
</arguments>
<msg timestamp="20210322 03:27:26.270" level="INFO">${entry_external_key} = 26e75deb09014df49e0ffb679daf0146</msg>
<status status="PASS" starttime="20210322 03:27:26.270" endtime="20210322 03:27:26.270"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["key"]["value"]}</arg>
</arguments>
<assign>
<var>${entry_key_value}</var>
</assign>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["key"]["value"]}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:27:26.271" endtime="20210322 03:27:26.272"></status>
</kw>
<msg timestamp="20210322 03:27:26.272" level="INFO">${entry_key_value} = +5521946629897</msg>
<status status="PASS" starttime="20210322 03:27:26.271" endtime="20210322 03:27:26.272"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${entry_key_value}</arg>
</arguments>
<msg timestamp="20210322 03:27:26.272" level="INFO">${entry_key_value} = +5521946629897</msg>
<status status="PASS" starttime="20210322 03:27:26.272" endtime="20210322 03:27:26.272"></status>
</kw>
<status status="PASS" starttime="20210322 03:27:25.634" endtime="20210322 03:27:26.272"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${holder_external_key}</arg>
</arguments>
<assign>
<var>${holder_owner}</var>
</assign>
<msg timestamp="20210322 03:27:26.273" level="INFO">${holder_owner} = 81b5d5dd49104dbc9f2c9340e736d171</msg>
<status status="PASS" starttime="20210322 03:27:26.272" endtime="20210322 03:27:26.273"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${holder_name}</arg>
</arguments>
<assign>
<var>${holder_name_owner}</var>
</assign>
<msg timestamp="20210322 03:27:26.273" level="INFO">${holder_name_owner} = Holder de teste</msg>
<status status="PASS" starttime="20210322 03:27:26.273" endtime="20210322 03:27:26.273"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${national_registration}</arg>
</arguments>
<assign>
<var>${national_registration_owner}</var>
</assign>
<msg timestamp="20210322 03:27:26.273" level="INFO">${national_registration_owner} = 25490381779</msg>
<status status="PASS" starttime="20210322 03:27:26.273" endtime="20210322 03:27:26.273"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${account_external_key}</arg>
</arguments>
<assign>
<var>${account_owner}</var>
</assign>
<msg timestamp="20210322 03:27:26.274" level="INFO">${account_owner} = 89018cf68b954ef0b0efd3c2f7039028</msg>
<status status="PASS" starttime="20210322 03:27:26.273" endtime="20210322 03:27:26.274"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${account_number}</arg>
</arguments>
<assign>
<var>${account_number_owner}</var>
</assign>
<msg timestamp="20210322 03:27:26.274" level="INFO">${account_number_owner} = 4023433116</msg>
<status status="PASS" starttime="20210322 03:27:26.274" endtime="20210322 03:27:26.274"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${entry_external_key}</arg>
</arguments>
<assign>
<var>${entry_owner}</var>
</assign>
<msg timestamp="20210322 03:27:26.275" level="INFO">${entry_owner} = 26e75deb09014df49e0ffb679daf0146</msg>
<status status="PASS" starttime="20210322 03:27:26.274" endtime="20210322 03:27:26.275"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Holder Owner :: ${holder_owner}</arg>
</arguments>
<msg timestamp="20210322 03:27:26.275" level="INFO">Holder Owner :: 81b5d5dd49104dbc9f2c9340e736d171</msg>
<status status="PASS" starttime="20210322 03:27:26.275" endtime="20210322 03:27:26.275"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Account Owner :: ${account_owner}</arg>
</arguments>
<msg timestamp="20210322 03:27:26.276" level="INFO">Account Owner :: 89018cf68b954ef0b0efd3c2f7039028</msg>
<status status="PASS" starttime="20210322 03:27:26.275" endtime="20210322 03:27:26.276"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Account Number Owner :: ${account_number_owner}</arg>
</arguments>
<msg timestamp="20210322 03:27:26.276" level="INFO">Account Number Owner :: 4023433116</msg>
<status status="PASS" starttime="20210322 03:27:26.276" endtime="20210322 03:27:26.276"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>National Registration Holder Owner :: ${national_registration_owner}</arg>
</arguments>
<msg timestamp="20210322 03:27:26.277" level="INFO">National Registration Holder Owner :: 25490381779</msg>
<status status="PASS" starttime="20210322 03:27:26.276" endtime="20210322 03:27:26.277"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Entry Owner :: ${entry_owner}</arg>
</arguments>
<msg timestamp="20210322 03:27:26.277" level="INFO">Entry Owner :: 26e75deb09014df49e0ffb679daf0146</msg>
<status status="PASS" starttime="20210322 03:27:26.277" endtime="20210322 03:27:26.277"></status>
</kw>
<kw name="buscar verification code" library="pix_dict_verification_code">
<arguments>
<arg>${holder_owner}</arg>
<arg>${account_owner}</arg>
<arg>${entry_owner}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 03:27:26.279" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 03:27:26.278" endtime="20210322 03:27:26.279"></status>
</kw>
<status status="PASS" starttime="20210322 03:27:26.278" endtime="20210322 03:27:26.279"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/admin/internal_operation/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries/${entry_external_key}/code</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:27:26.279" level="INFO">GET Request using : uri=/admin/internal_operation/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/81b5d5dd49104dbc9f2c9340e736d171/accounts/89018cf68b954ef0b0efd3c2f7039028/entries/26e75deb09014df49e0ffb679daf0146/code, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 03:27:26.902" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:27:26.279" endtime="20210322 03:27:26.902"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:27:26.903" level="INFO">{'code': '8526'}</msg>
<status status="PASS" starttime="20210322 03:27:26.903" endtime="20210322 03:27:26.903"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:27:26.903" level="INFO">00c1a68747593ed1</msg>
<status status="PASS" starttime="20210322 03:27:26.903" endtime="20210322 03:27:26.903"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 03:27:26.904" level="INFO">200</msg>
<status status="PASS" starttime="20210322 03:27:26.904" endtime="20210322 03:27:26.904"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:27:26.904" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:27:26.904" endtime="20210322 03:27:26.904"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["code"]}</arg>
</arguments>
<assign>
<var>${verification_code}</var>
</assign>
<msg timestamp="20210322 03:27:26.905" level="INFO">${verification_code} = 8526</msg>
<status status="PASS" starttime="20210322 03:27:26.905" endtime="20210322 03:27:26.905"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${verification_code}</arg>
</arguments>
<msg timestamp="20210322 03:27:26.905" level="INFO">${verification_code} = 8526</msg>
<status status="PASS" starttime="20210322 03:27:26.905" endtime="20210322 03:27:26.905"></status>
</kw>
<status status="PASS" starttime="20210322 03:27:26.277" endtime="20210322 03:27:26.906"></status>
</kw>
<kw name="confirmar propriedade da chave pix" library="pix_dict_confirm_propriety">
<arguments>
<arg>${verification_code}</arg>
<arg>${holder_owner}</arg>
<arg>${account_owner}</arg>
<arg>${entry_owner}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 03:27:26.907" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 03:27:26.907" endtime="20210322 03:27:26.907"></status>
</kw>
<status status="PASS" starttime="20210322 03:27:26.906" endtime="20210322 03:27:26.907"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:27:26.908" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 03:27:26.908" endtime="20210322 03:27:26.908"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"code": "${verification_code}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 03:27:26.908" level="INFO">${body} = { "code": "8526" }</msg>
<status status="PASS" starttime="20210322 03:27:26.908" endtime="20210322 03:27:26.908"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries/${entry_external_key}/ownership</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:27:26.909" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/81b5d5dd49104dbc9f2c9340e736d171/accounts/89018cf68b954ef0b0efd3c2f7039028/entries/26e75deb09014df49e0ffb679daf0146/ownership, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "code": "8526" } 
json=None</msg>
<msg timestamp="20210322 03:27:28.433" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:27:26.908" endtime="20210322 03:27:28.433"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:27:28.434" level="INFO">{'id': '26e75deb09014df49e0ffb679daf0146', 'status': 'active', 'created_at': '2021-03-22T03:27:27.135', 'updated_at': '2021-03-22T03:27:29.314', 'key': {'value': '+5521946629897', 'type': 'phone'}, 'account': {'id': '89018cf68b954ef0b0efd3c2f7039028', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': '81b5d5dd49104dbc9f2c9340e736d171', 'owner': {'name': 'Holder de teste', 'national_registration': '25490381779', 'type': 'individual'}, 'routing_number': '001', 'number': '4023433116', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}, 'resource': 'pix.entry'}</msg>
<status status="PASS" starttime="20210322 03:27:28.433" endtime="20210322 03:27:28.434"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:27:28.435" level="INFO">52eb9d9354b41117</msg>
<status status="PASS" starttime="20210322 03:27:28.434" endtime="20210322 03:27:28.435"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 03:27:28.435" level="INFO">201</msg>
<status status="PASS" starttime="20210322 03:27:28.435" endtime="20210322 03:27:28.435"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:27:28.436" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:27:28.435" endtime="20210322 03:27:28.436"></status>
</kw>
<status status="PASS" starttime="20210322 03:27:26.906" endtime="20210322 03:27:28.436"></status>
</kw>
<kw name="validar ativação da chave de endereçamento" library="asserts">
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["status"]}</arg>
<arg>active</arg>
</arguments>
<status status="PASS" starttime="20210322 03:27:28.436" endtime="20210322 03:27:28.437"></status>
</kw>
<status status="PASS" starttime="20210322 03:27:28.436" endtime="20210322 03:27:28.437"></status>
</kw>
<kw name="criar holder individual ativo" library="accreditation_create_holder_active">
<kw name="conectar accreditation" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accreditation</arg>
<arg>url=${accreditation_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 03:27:28.437" level="INFO">Creating Session using : alias=accreditation, url=https://banking-accreditation-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 03:27:28.437" endtime="20210322 03:27:28.438"></status>
</kw>
<status status="PASS" starttime="20210322 03:27:28.437" endtime="20210322 03:27:28.438"></status>
</kw>
<kw name="Cpf" library="FakerLibrary">
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 03:27:28.438" level="INFO">${national_registration} = 291.805.746-02</msg>
<status status="PASS" starttime="20210322 03:27:28.438" endtime="20210322 03:27:28.438"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${national_registration}</arg>
<arg>.</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 03:27:28.439" level="INFO">${national_registration} = 291805746-02</msg>
<status status="PASS" starttime="20210322 03:27:28.438" endtime="20210322 03:27:28.439"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${national_registration}</arg>
<arg>-</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 03:27:28.439" level="INFO">${national_registration} = 29180574602</msg>
<status status="PASS" starttime="20210322 03:27:28.439" endtime="20210322 03:27:28.439"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${national_registration}</arg>
</arguments>
<msg timestamp="20210322 03:27:28.440" level="INFO">${national_registration} = 29180574602</msg>
<status status="PASS" starttime="20210322 03:27:28.440" endtime="20210322 03:27:28.440"></status>
</kw>
<kw name="Rg" library="FakerLibrary">
<doc>Brazilian RG, return plain numbers.
Check:  https://www.ngmatematica.com/2014/02/como-determinar-o-digito-verificador-do.html</doc>
<assign>
<var>${identity_card}</var>
</assign>
<msg timestamp="20210322 03:27:28.440" level="INFO">${identity_card} = 814237605</msg>
<status status="PASS" starttime="20210322 03:27:28.440" endtime="20210322 03:27:28.440"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${identity_card}</arg>
</arguments>
<msg timestamp="20210322 03:27:28.440" level="INFO">${identity_card} = 814237605</msg>
<status status="PASS" starttime="20210322 03:27:28.440" endtime="20210322 03:27:28.440"></status>
</kw>
<kw name="criar holder individual" library="accreditation_post_holder_individual">
<arguments>
<arg>holder_type=individual</arg>
<arg>holder_name=${holder_name}</arg>
<arg>email=${email}</arg>
<arg>national_registration=${national_registration}</arg>
<arg>revenue=${revenue}</arg>
<arg>birthday=${birthday}</arg>
<arg>mothers_name=${mothers_name}</arg>
<arg>identity_card=${identity_card}</arg>
<arg>pep=false</arg>
<arg>cbo=${cbo}</arg>
</arguments>
<kw name="conectar accreditation" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accreditation</arg>
<arg>url=${accreditation_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 03:27:28.442" level="INFO">Creating Session using : alias=accreditation, url=https://banking-accreditation-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 03:27:28.441" endtime="20210322 03:27:28.442"></status>
</kw>
<status status="PASS" starttime="20210322 03:27:28.441" endtime="20210322 03:27:28.442"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_type}</arg>
</arguments>
<msg timestamp="20210322 03:27:28.443" level="INFO">${holder_type} = individual</msg>
<status status="PASS" starttime="20210322 03:27:28.442" endtime="20210322 03:27:28.443"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_name}</arg>
</arguments>
<msg timestamp="20210322 03:27:28.443" level="INFO">${holder_name} = Holder de teste</msg>
<status status="PASS" starttime="20210322 03:27:28.443" endtime="20210322 03:27:28.443"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:27:28.444" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 03:27:28.443" endtime="20210322 03:27:28.444"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "${holder_type}",</arg>
<arg>"name": "${holder_name}",</arg>
<arg>"email": "${email}",</arg>
<arg>"national_registration": "${national_registration}",</arg>
<arg>"revenue": ${revenue},</arg>
<arg>"birthday": "${birthday}",</arg>
<arg>"mothers_name": "${mothers_name}",</arg>
<arg>"identity_card": "${identity_card}",</arg>
<arg>"pep": false,</arg>
<arg>"cbo": ${cbo}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 03:27:28.444" level="INFO">${body} = { "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "29180574602", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder",...</msg>
<status status="PASS" starttime="20210322 03:27:28.444" endtime="20210322 03:27:28.444"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:27:28.445" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "29180574602", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder", "identity_card": "814237605", "pep": false, "cbo": 821450 } 
json=None</msg>
<msg timestamp="20210322 03:27:29.111" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:27:28.445" endtime="20210322 03:27:29.111"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:27:29.113" level="INFO">{'id': 'c3831963c3f64668a5f293235838f30b', 'name': 'Holder de teste', 'revenue': 5500.0, 'email': 'teste@teste.com.br', 'status': 'waiting_info_and_documents', 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'marketplace_name': 'Marketplace de Teste', 'created_at': '2021-03-22T03:27:29.963021', 'updated_at': '2021-03-22T03:27:29.963023', 'type': 'individual', 'national_registration': '29180574602', 'birthday': '1988-04-23', 'mothers_name': 'Mãe do Holder', 'identity_card': '814237605', 'pep': False, 'cbo': '821450', '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/c3831963c3f64668a5f293235838f30b', 'type': 'GET'}, 'phones': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/c3831963c3f64668a5f293235838f30b/phones', 'type': 'GET'}, 'addresses': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/c3831963c3f64668a5f293235838f30b/addresses', 'type': 'GET'}, 'documents': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/c3831963c3f64668a5f293235838f30b/documents', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 03:27:29.112" endtime="20210322 03:27:29.113"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:27:29.115" level="INFO">2ef91a28a674d2bf</msg>
<status status="PASS" starttime="20210322 03:27:29.114" endtime="20210322 03:27:29.115"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${body}</arg>
</arguments>
<msg timestamp="20210322 03:27:29.116" level="INFO">{ "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "29180574602", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder", "identity_card": "814237605", "pep": false, "cbo": 821450 }</msg>
<status status="PASS" starttime="20210322 03:27:29.115" endtime="20210322 03:27:29.116"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:27:29.118" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:27:29.117" endtime="20210322 03:27:29.118"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${holder_external_key}</var>
</assign>
<msg timestamp="20210322 03:27:29.119" level="INFO">${holder_external_key} = c3831963c3f64668a5f293235838f30b</msg>
<status status="PASS" starttime="20210322 03:27:29.119" endtime="20210322 03:27:29.119"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_external_key}</arg>
</arguments>
<msg timestamp="20210322 03:27:29.120" level="INFO">${holder_external_key} = c3831963c3f64668a5f293235838f30b</msg>
<status status="PASS" starttime="20210322 03:27:29.120" endtime="20210322 03:27:29.120"></status>
</kw>
<status status="PASS" starttime="20210322 03:27:28.441" endtime="20210322 03:27:29.121"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_name}</arg>
</arguments>
<msg timestamp="20210322 03:27:29.121" level="INFO">${holder_name} = Holder de teste</msg>
<status status="PASS" starttime="20210322 03:27:29.121" endtime="20210322 03:27:29.121"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 03:27:29.122" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:27:29.122" endtime="20210322 03:27:29.122"></status>
</kw>
<kw name="criar holder phone" library="accreditation_post_holder_phone">
<arguments>
<arg>21</arg>
<arg>51</arg>
<arg>996221236</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:27:29.123" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 03:27:29.123" endtime="20210322 03:27:29.124"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"area_code": "${phone_area_code}",</arg>
<arg>"country_code": "${phone_country_code}",</arg>
<arg>"number": "${phone_number}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 03:27:29.124" level="INFO">${body} = { "area_code": "21", "country_code": "51", "number": "996221236" }</msg>
<status status="PASS" starttime="20210322 03:27:29.124" endtime="20210322 03:27:29.124"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/phones</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:27:29.125" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/c3831963c3f64668a5f293235838f30b/phones, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "area_code": "21", "country_code": "51", "number": "996221236" } 
json=None</msg>
<msg timestamp="20210322 03:27:29.396" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:27:29.125" endtime="20210322 03:27:29.396"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:27:29.397" level="INFO">{'id': '7e1ba69fc427405caec396c446654f65', 'area_code': '21', 'country_code': '51', 'number': '996221236', 'main': True, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/c3831963c3f64668a5f293235838f30b/phones/7e1ba69fc427405caec396c446654f65', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/c3831963c3f64668a5f293235838f30b', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 03:27:29.397" endtime="20210322 03:27:29.397"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:27:29.398" level="INFO">da69c81408f9bd82</msg>
<status status="PASS" starttime="20210322 03:27:29.398" endtime="20210322 03:27:29.398"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:27:29.399" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:27:29.399" endtime="20210322 03:27:29.399"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${phone_external_key}</var>
</assign>
<msg timestamp="20210322 03:27:29.400" level="INFO">${phone_external_key} = 7e1ba69fc427405caec396c446654f65</msg>
<status status="PASS" starttime="20210322 03:27:29.400" endtime="20210322 03:27:29.400"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${phone_external_key}</arg>
</arguments>
<msg timestamp="20210322 03:27:29.401" level="INFO">${phone_external_key} = 7e1ba69fc427405caec396c446654f65</msg>
<status status="PASS" starttime="20210322 03:27:29.401" endtime="20210322 03:27:29.401"></status>
</kw>
<status status="PASS" starttime="20210322 03:27:29.122" endtime="20210322 03:27:29.401"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 03:27:29.402" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:27:29.402" endtime="20210322 03:27:29.402"></status>
</kw>
<kw name="criar holder address" library="accreditation_post_holder_address">
<arguments>
<arg>Rio de Janeiro</arg>
<arg>Rio de Janeiro</arg>
<arg>Brasil</arg>
<arg>Bairro de Testes</arg>
<arg>Rua de Testes</arg>
<arg>90</arg>
<arg>apto 200</arg>
<arg>21550987</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:27:29.403" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 03:27:29.402" endtime="20210322 03:27:29.403"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"city": "${city}",</arg>
<arg>"state": "${state}",</arg>
<arg>"country": "${country}",</arg>
<arg>"neighborhood": "${neighborhood}",</arg>
<arg>"street": "${street}",</arg>
<arg>"number": "${number}",</arg>
<arg>"complement": "${complement}",</arg>
<arg>"postal_code": "${postal_code}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 03:27:29.403" level="INFO">${body} = { "city": "Rio de Janeiro", "state": "Rio de Janeiro", "country": "Brasil", "neighborhood": "Bairro de Testes", "street": "Rua de Testes", "number": "90", "complement": "apto 200", "postal_code": "215...</msg>
<status status="PASS" starttime="20210322 03:27:29.403" endtime="20210322 03:27:29.403"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/addresses</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:27:29.403" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/c3831963c3f64668a5f293235838f30b/addresses, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "city": "Rio de Janeiro", "state": "Rio de Janeiro", "country": "Brasil", "neighborhood": "Bairro de Testes", "street": "Rua de Testes", "number": "90", "complement": "apto 200", "postal_code": "21550987" } 
json=None</msg>
<msg timestamp="20210322 03:27:29.621" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:27:29.403" endtime="20210322 03:27:29.621"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:27:29.621" level="INFO">{'id': '3835e0ceb09a41a0ab09820d0046095e', 'street': 'Rua de Testes', 'number': '90', 'city': 'Rio de Janeiro', 'complement': 'apto 200', 'state': 'Rio de Janeiro', 'neighborhood': 'Bairro de Testes', 'postal_code': '21550987', 'country': 'Brasil', 'main': True, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/c3831963c3f64668a5f293235838f30b/addresses/3835e0ceb09a41a0ab09820d0046095e', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/c3831963c3f64668a5f293235838f30b', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 03:27:29.621" endtime="20210322 03:27:29.621"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:27:29.622" level="INFO">f5e93fe0cb68fb63</msg>
<status status="PASS" starttime="20210322 03:27:29.622" endtime="20210322 03:27:29.622"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:27:29.622" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:27:29.622" endtime="20210322 03:27:29.623"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${address_external_key}</var>
</assign>
<msg timestamp="20210322 03:27:29.623" level="INFO">${address_external_key} = 3835e0ceb09a41a0ab09820d0046095e</msg>
<status status="PASS" starttime="20210322 03:27:29.623" endtime="20210322 03:27:29.623"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${address_external_key}</arg>
</arguments>
<msg timestamp="20210322 03:27:29.624" level="INFO">${address_external_key} = 3835e0ceb09a41a0ab09820d0046095e</msg>
<status status="PASS" starttime="20210322 03:27:29.624" endtime="20210322 03:27:29.624"></status>
</kw>
<status status="PASS" starttime="20210322 03:27:29.402" endtime="20210322 03:27:29.624"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 03:27:29.625" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:27:29.624" endtime="20210322 03:27:29.625"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>SELFIE</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:27:29.626" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 03:27:29.625" endtime="20210322 03:27:29.626"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 03:27:29.626" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 03:27:29.628" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 03:27:29.626" endtime="20210322 03:27:29.628"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:27:29.629" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/c3831963c3f64668a5f293235838f30b/documents?type=SELFIE, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 03:27:29.974" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:27:29.628" endtime="20210322 03:27:29.974"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:27:29.975" level="INFO">{'id': 'a6408c6d00f04f84a8132cac9f5ab25c', 'document_type': 'selfie', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/c3831963c3f64668a5f293235838f30b/documents/a6408c6d00f04f84a8132cac9f5ab25c', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/c3831963c3f64668a5f293235838f30b', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/c3831963c3f64668a5f293235838f30b/documents/a6408c6d00f04f84a8132cac9f5ab25c/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 03:27:29.974" endtime="20210322 03:27:29.975"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:27:29.975" level="INFO">46cef5deec7ec49f</msg>
<status status="PASS" starttime="20210322 03:27:29.975" endtime="20210322 03:27:29.975"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:27:29.976" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:27:29.976" endtime="20210322 03:27:29.976"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 03:27:29.977" level="INFO">${document_external_key} = a6408c6d00f04f84a8132cac9f5ab25c</msg>
<status status="PASS" starttime="20210322 03:27:29.976" endtime="20210322 03:27:29.977"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 03:27:29.977" level="INFO">${document_external_key} = a6408c6d00f04f84a8132cac9f5ab25c</msg>
<status status="PASS" starttime="20210322 03:27:29.977" endtime="20210322 03:27:29.977"></status>
</kw>
<status status="PASS" starttime="20210322 03:27:29.625" endtime="20210322 03:27:29.977"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 03:27:29.978" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:27:29.978" endtime="20210322 03:27:29.978"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>RG_FRENTE</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:27:29.979" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 03:27:29.979" endtime="20210322 03:27:29.979"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 03:27:29.980" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 03:27:29.981" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 03:27:29.980" endtime="20210322 03:27:29.981"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:27:29.982" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/c3831963c3f64668a5f293235838f30b/documents?type=RG_FRENTE, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 03:27:30.261" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:27:29.981" endtime="20210322 03:27:30.261"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:27:30.262" level="INFO">{'id': '687f8cbb93a442f0b698b25fe1bd3de9', 'document_type': 'rg_frente', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/c3831963c3f64668a5f293235838f30b/documents/687f8cbb93a442f0b698b25fe1bd3de9', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/c3831963c3f64668a5f293235838f30b', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/c3831963c3f64668a5f293235838f30b/documents/687f8cbb93a442f0b698b25fe1bd3de9/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 03:27:30.261" endtime="20210322 03:27:30.262"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:27:30.262" level="INFO">1c35b88c1aa31c03</msg>
<status status="PASS" starttime="20210322 03:27:30.262" endtime="20210322 03:27:30.262"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:27:30.263" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:27:30.262" endtime="20210322 03:27:30.263"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 03:27:30.263" level="INFO">${document_external_key} = 687f8cbb93a442f0b698b25fe1bd3de9</msg>
<status status="PASS" starttime="20210322 03:27:30.263" endtime="20210322 03:27:30.263"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 03:27:30.264" level="INFO">${document_external_key} = 687f8cbb93a442f0b698b25fe1bd3de9</msg>
<status status="PASS" starttime="20210322 03:27:30.263" endtime="20210322 03:27:30.264"></status>
</kw>
<status status="PASS" starttime="20210322 03:27:29.978" endtime="20210322 03:27:30.264"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 03:27:30.264" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:27:30.264" endtime="20210322 03:27:30.264"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>RG_VERSO</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:27:30.265" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 03:27:30.265" endtime="20210322 03:27:30.265"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 03:27:30.265" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 03:27:30.267" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 03:27:30.265" endtime="20210322 03:27:30.267"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:27:30.267" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/c3831963c3f64668a5f293235838f30b/documents?type=RG_VERSO, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 03:27:30.590" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:27:30.267" endtime="20210322 03:27:30.590"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:27:30.590" level="INFO">{'id': '1db2d16846874eaf8732b4827d49a67f', 'document_type': 'rg_verso', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/c3831963c3f64668a5f293235838f30b/documents/1db2d16846874eaf8732b4827d49a67f', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/c3831963c3f64668a5f293235838f30b', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/c3831963c3f64668a5f293235838f30b/documents/1db2d16846874eaf8732b4827d49a67f/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 03:27:30.590" endtime="20210322 03:27:30.590"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:27:30.591" level="INFO">f3922ca9a4709177</msg>
<status status="PASS" starttime="20210322 03:27:30.591" endtime="20210322 03:27:30.591"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:27:30.591" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:27:30.591" endtime="20210322 03:27:30.591"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 03:27:30.592" level="INFO">${document_external_key} = 1db2d16846874eaf8732b4827d49a67f</msg>
<status status="PASS" starttime="20210322 03:27:30.591" endtime="20210322 03:27:30.592"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 03:27:30.592" level="INFO">${document_external_key} = 1db2d16846874eaf8732b4827d49a67f</msg>
<status status="PASS" starttime="20210322 03:27:30.592" endtime="20210322 03:27:30.592"></status>
</kw>
<status status="PASS" starttime="20210322 03:27:30.265" endtime="20210322 03:27:30.592"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 03:27:30.593" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:27:30.592" endtime="20210322 03:27:30.593"></status>
</kw>
<kw name="solicitar aprovação do holder" library="accreditation_request_approval">
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:27:30.593" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 03:27:30.593" endtime="20210322 03:27:30.593"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/approval</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:27:30.594" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/c3831963c3f64668a5f293235838f30b/approval, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data=None 
json=None</msg>
<msg timestamp="20210322 03:27:30.875" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:27:30.594" endtime="20210322 03:27:30.875"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:27:30.875" level="INFO">{'message': 'Approval request accepted successfully. Processing analysis'}</msg>
<status status="PASS" starttime="20210322 03:27:30.875" endtime="20210322 03:27:30.875"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:27:30.876" level="INFO">af273a0b019a2888</msg>
<status status="PASS" starttime="20210322 03:27:30.876" endtime="20210322 03:27:30.876"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:27:30.876" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:27:30.876" endtime="20210322 03:27:30.877"></status>
</kw>
<status status="PASS" starttime="20210322 03:27:30.593" endtime="20210322 03:27:30.877"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 03:27:30.877" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:27:30.877" endtime="20210322 03:27:30.877"></status>
</kw>
<kw name="recebendo notificação de aprovação" library="accreditation_risk_notification">
<kw name="Uuid 4" library="FakerLibrary">
<doc>Generates a random UUID4 string.
:param cast_to: Specify what type the UUID should be cast to. Default is `str`
:type cast_to: callable</doc>
<assign>
<var>${assessment_id}</var>
</assign>
<msg timestamp="20210322 03:27:30.878" level="INFO">${assessment_id} = e884b759-1877-4607-90f7-79fb3b91d720</msg>
<status status="PASS" starttime="20210322 03:27:30.878" endtime="20210322 03:27:30.878"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>year</arg>
</arguments>
<assign>
<var>${year}</var>
</assign>
<msg timestamp="20210322 03:27:30.878" level="INFO">${year} = 2021</msg>
<status status="PASS" starttime="20210322 03:27:30.878" endtime="20210322 03:27:30.878"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>month</arg>
</arguments>
<assign>
<var>${month}</var>
</assign>
<msg timestamp="20210322 03:27:30.879" level="INFO">${month} = 03</msg>
<status status="PASS" starttime="20210322 03:27:30.878" endtime="20210322 03:27:30.879"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>day</arg>
</arguments>
<assign>
<var>${day}</var>
</assign>
<msg timestamp="20210322 03:27:30.879" level="INFO">${day} = 22</msg>
<status status="PASS" starttime="20210322 03:27:30.879" endtime="20210322 03:27:30.879"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:27:30.879" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 03:27:30.879" endtime="20210322 03:27:30.879"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "risk.assessment.result",</arg>
<arg>"resource": "business.holder",</arg>
<arg>"created_at": "${year}-${month}-${day} 15:28:56.747Z",</arg>
<arg>"marketplace_id": "${marketplace_external_key}",</arg>
<arg>"object": {</arg>
<arg>"result": "APPROVED",</arg>
<arg>"holder_id": "${holder_external_key}",</arg>
<arg>"applicant_id": "${application_external_key}",</arg>
<arg>"assessment_id": "${assessment_id}"</arg>
<arg>}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 03:27:30.880" level="INFO">${body} = { "type": "risk.assessment.result", "resource": "business.holder", "created_at": "2021-03-22 15:28:56.747Z", "marketplace_id": "f71a8951368a4cc085cf7875ff44e61c", "object": { "result": "APPROVED", "ho...</msg>
<status status="PASS" starttime="20210322 03:27:30.880" endtime="20210322 03:27:30.880"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/admin/internal_operation/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/registration/approval</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:27:30.881" level="INFO">POST Request using : uri=/admin/internal_operation/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/c3831963c3f64668a5f293235838f30b/registration/approval, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "risk.assessment.result", "resource": "business.holder", "created_at": "2021-03-22 15:28:56.747Z", "marketplace_id": "f71a8951368a4cc085cf7875ff44e61c", "object": { "result": "APPROVED", "holder_id": "c3831963c3f64668a5f293235838f30b", "applicant_id": "bcc25a6751c14b52af1340d40dba78c5", "assessment_id": "e884b759-1877-4607-90f7-79fb3b91d720" } } 
json=None</msg>
<msg timestamp="20210322 03:27:31.076" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:27:30.880" endtime="20210322 03:27:31.076"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:27:31.077" level="INFO">{'message': 'Holder approved successfully'}</msg>
<status status="PASS" starttime="20210322 03:27:31.076" endtime="20210322 03:27:31.077"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:27:31.078" level="INFO">84b7208193bd9886</msg>
<status status="PASS" starttime="20210322 03:27:31.077" endtime="20210322 03:27:31.078"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:27:31.079" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:27:31.078" endtime="20210322 03:27:31.079"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 03:27:31.080" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:27:31.079" endtime="20210322 03:27:31.080"></status>
</kw>
<status status="PASS" starttime="20210322 03:27:30.877" endtime="20210322 03:27:31.080"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 03:27:31.081" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:27:31.081" endtime="20210322 03:27:31.081"></status>
</kw>
<kw name="buscar account por holder" library="accounts_get_accounts_by_holder">
<kw name="conectar accounts" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accounts</arg>
<arg>url=${account_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 03:27:31.082" level="INFO">Creating Session using : alias=accounts, url=https://banking-accounts-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 03:27:31.082" endtime="20210322 03:27:31.083"></status>
</kw>
<status status="PASS" starttime="20210322 03:27:31.082" endtime="20210322 03:27:31.083"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accounts</arg>
<arg>/marketplaces/${marketplace_external_key}/holders/${holder_external_key}/accounts</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:27:31.084" level="INFO">GET Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/holders/c3831963c3f64668a5f293235838f30b/accounts, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 03:27:31.681" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:27:31.084" endtime="20210322 03:27:31.681"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:27:31.683" level="INFO">{'items': [{'id': '1893d94598354a5f83638113bd4d3d64', 'holder': 'c3831963c3f64668a5f293235838f30b', 'balance': '0.00', 'currency': 'BRL', 'routing_number': '001', 'number': '2504173704', 'status': 'active', 'metadata': {}, 'created_at': '2021-03-22T06:27:31.926887', 'updated_at': '2021-03-22T06:27:31.926887', 'primary': True, 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'uri': '/v2/marketplaces/f71a8951368a4cc085cf7875ff44e61c/accounts/1893d94598354a5f83638113bd4d3d64', 'resource': 'payment_account'}], 'has_more': False, 'limit': 100, 'total_pages': 1, 'page': 1, 'offset': 0, 'total': '1', 'query_count': '1'}</msg>
<status status="PASS" starttime="20210322 03:27:31.682" endtime="20210322 03:27:31.683"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:27:31.684" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:27:31.683" endtime="20210322 03:27:31.684"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["id"]}</arg>
</arguments>
<assign>
<var>${account_external_key}</var>
</assign>
<msg timestamp="20210322 03:27:31.686" level="INFO">${account_external_key} = 1893d94598354a5f83638113bd4d3d64</msg>
<status status="PASS" starttime="20210322 03:27:31.685" endtime="20210322 03:27:31.686"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_external_key}</arg>
</arguments>
<msg timestamp="20210322 03:27:31.688" level="INFO">${account_external_key} = 1893d94598354a5f83638113bd4d3d64</msg>
<status status="PASS" starttime="20210322 03:27:31.687" endtime="20210322 03:27:31.688"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["number"]}</arg>
</arguments>
<assign>
<var>${account_number}</var>
</assign>
<msg timestamp="20210322 03:27:31.690" level="INFO">${account_number} = 2504173704</msg>
<status status="PASS" starttime="20210322 03:27:31.689" endtime="20210322 03:27:31.690"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_number}</arg>
</arguments>
<msg timestamp="20210322 03:27:31.691" level="INFO">${account_number} = 2504173704</msg>
<status status="PASS" starttime="20210322 03:27:31.690" endtime="20210322 03:27:31.691"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["routing_number"]}</arg>
</arguments>
<assign>
<var>${account_routing_number}</var>
</assign>
<msg timestamp="20210322 03:27:31.692" level="INFO">${account_routing_number} = 001</msg>
<status status="PASS" starttime="20210322 03:27:31.691" endtime="20210322 03:27:31.692"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_routing_number}</arg>
</arguments>
<msg timestamp="20210322 03:27:31.693" level="INFO">${account_routing_number} = 001</msg>
<status status="PASS" starttime="20210322 03:27:31.692" endtime="20210322 03:27:31.693"></status>
</kw>
<status status="PASS" starttime="20210322 03:27:31.081" endtime="20210322 03:27:31.693"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 03:27:31.694" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:27:31.693" endtime="20210322 03:27:31.694"></status>
</kw>
<status status="PASS" starttime="20210322 03:27:28.437" endtime="20210322 03:27:31.694"></status>
</kw>
<kw name="criar chave pix" library="pix_dict_create_entry">
<arguments>
<arg>phone</arg>
<arg>${phone_pix}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 03:27:31.696" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 03:27:31.695" endtime="20210322 03:27:31.696"></status>
</kw>
<status status="PASS" starttime="20210322 03:27:31.695" endtime="20210322 03:27:31.696"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${type}</arg>
</arguments>
<msg timestamp="20210322 03:27:31.697" level="INFO">${type} = phone</msg>
<status status="PASS" starttime="20210322 03:27:31.697" endtime="20210322 03:27:31.697"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210322 03:27:31.698" level="INFO">${value} = +5521946629897</msg>
<status status="PASS" starttime="20210322 03:27:31.698" endtime="20210322 03:27:31.698"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:27:31.699" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 03:27:31.698" endtime="20210322 03:27:31.699"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "${type}",</arg>
<arg>"value": "${value}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 03:27:31.699" level="INFO">${body} = { "type": "phone", "value": "+5521946629897" }</msg>
<status status="PASS" starttime="20210322 03:27:31.699" endtime="20210322 03:27:31.699"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:27:31.700" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/c3831963c3f64668a5f293235838f30b/accounts/1893d94598354a5f83638113bd4d3d64/entries, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "phone", "value": "+5521946629897" } 
json=None</msg>
<msg timestamp="20210322 03:27:32.349" level="INFO">${response} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20210322 03:27:31.700" endtime="20210322 03:27:32.349"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:27:32.350" level="INFO">{'id': '67b9ebbed91f48b299d61c2ce8ff403f', 'status': 'waiting_ownership_verification', 'created_at': '2021-03-22T03:27:33.218', 'updated_at': '2021-03-22T03:27:33.218', 'key': {'value': '+5521946629897', 'type': 'phone'}, 'account': {'id': '1893d94598354a5f83638113bd4d3d64', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': 'c3831963c3f64668a5f293235838f30b', 'owner': {'name': 'Holder de teste', 'national_registration': '29180574602', 'type': 'individual'}, 'routing_number': '001', 'number': '2504173704', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}, 'resource': 'pix.entry'}</msg>
<status status="PASS" starttime="20210322 03:27:32.349" endtime="20210322 03:27:32.350"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:27:32.351" level="INFO">89750833dba7f05e</msg>
<status status="PASS" starttime="20210322 03:27:32.350" endtime="20210322 03:27:32.351"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 03:27:32.351" level="INFO">202</msg>
<status status="PASS" starttime="20210322 03:27:32.351" endtime="20210322 03:27:32.351"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:27:32.352" level="INFO">${response} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20210322 03:27:32.352" endtime="20210322 03:27:32.353"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${entry_external_key}</var>
</assign>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:27:32.354" endtime="20210322 03:27:32.355"></status>
</kw>
<msg timestamp="20210322 03:27:32.355" level="INFO">${entry_external_key} = 67b9ebbed91f48b299d61c2ce8ff403f</msg>
<status status="PASS" starttime="20210322 03:27:32.353" endtime="20210322 03:27:32.355"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${entry_external_key}</arg>
</arguments>
<msg timestamp="20210322 03:27:32.356" level="INFO">${entry_external_key} = 67b9ebbed91f48b299d61c2ce8ff403f</msg>
<status status="PASS" starttime="20210322 03:27:32.355" endtime="20210322 03:27:32.356"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["key"]["value"]}</arg>
</arguments>
<assign>
<var>${entry_key_value}</var>
</assign>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["key"]["value"]}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:27:32.357" endtime="20210322 03:27:32.357"></status>
</kw>
<msg timestamp="20210322 03:27:32.357" level="INFO">${entry_key_value} = +5521946629897</msg>
<status status="PASS" starttime="20210322 03:27:32.356" endtime="20210322 03:27:32.358"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${entry_key_value}</arg>
</arguments>
<msg timestamp="20210322 03:27:32.358" level="INFO">${entry_key_value} = +5521946629897</msg>
<status status="PASS" starttime="20210322 03:27:32.358" endtime="20210322 03:27:32.358"></status>
</kw>
<status status="PASS" starttime="20210322 03:27:31.694" endtime="20210322 03:27:32.359"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${holder_external_key}</arg>
</arguments>
<assign>
<var>${holder_claimer}</var>
</assign>
<msg timestamp="20210322 03:27:32.359" level="INFO">${holder_claimer} = c3831963c3f64668a5f293235838f30b</msg>
<status status="PASS" starttime="20210322 03:27:32.359" endtime="20210322 03:27:32.359"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${account_external_key}</arg>
</arguments>
<assign>
<var>${account_claimer}</var>
</assign>
<msg timestamp="20210322 03:27:32.360" level="INFO">${account_claimer} = 1893d94598354a5f83638113bd4d3d64</msg>
<status status="PASS" starttime="20210322 03:27:32.360" endtime="20210322 03:27:32.360"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${entry_external_key}</arg>
</arguments>
<assign>
<var>${entry_claimer}</var>
</assign>
<msg timestamp="20210322 03:27:32.360" level="INFO">${entry_claimer} = 67b9ebbed91f48b299d61c2ce8ff403f</msg>
<status status="PASS" starttime="20210322 03:27:32.360" endtime="20210322 03:27:32.360"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Holder Claimer :: ${holder_claimer}</arg>
</arguments>
<msg timestamp="20210322 03:27:32.361" level="INFO">Holder Claimer :: c3831963c3f64668a5f293235838f30b</msg>
<status status="PASS" starttime="20210322 03:27:32.360" endtime="20210322 03:27:32.361"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Account Claimer :: ${account_claimer}</arg>
</arguments>
<msg timestamp="20210322 03:27:32.361" level="INFO">Account Claimer :: 1893d94598354a5f83638113bd4d3d64</msg>
<status status="PASS" starttime="20210322 03:27:32.361" endtime="20210322 03:27:32.361"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Entry Claimer :: ${entry_claimer}</arg>
</arguments>
<msg timestamp="20210322 03:27:32.362" level="INFO">Entry Claimer :: 67b9ebbed91f48b299d61c2ce8ff403f</msg>
<status status="PASS" starttime="20210322 03:27:32.361" endtime="20210322 03:27:32.362"></status>
</kw>
<kw name="buscar verification code" library="pix_dict_verification_code">
<arguments>
<arg>${holder_claimer}</arg>
<arg>${account_claimer}</arg>
<arg>${entry_claimer}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 03:27:32.363" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 03:27:32.362" endtime="20210322 03:27:32.363"></status>
</kw>
<status status="PASS" starttime="20210322 03:27:32.362" endtime="20210322 03:27:32.363"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/admin/internal_operation/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries/${entry_external_key}/code</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:27:32.363" level="INFO">GET Request using : uri=/admin/internal_operation/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/c3831963c3f64668a5f293235838f30b/accounts/1893d94598354a5f83638113bd4d3d64/entries/67b9ebbed91f48b299d61c2ce8ff403f/code, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 03:27:32.983" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:27:32.363" endtime="20210322 03:27:32.983"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:27:32.984" level="INFO">{'code': '8760'}</msg>
<status status="PASS" starttime="20210322 03:27:32.983" endtime="20210322 03:27:32.984"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:27:32.984" level="INFO">487727cd6618b07c</msg>
<status status="PASS" starttime="20210322 03:27:32.984" endtime="20210322 03:27:32.984"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 03:27:32.985" level="INFO">200</msg>
<status status="PASS" starttime="20210322 03:27:32.985" endtime="20210322 03:27:32.985"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:27:32.986" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:27:32.985" endtime="20210322 03:27:32.986"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["code"]}</arg>
</arguments>
<assign>
<var>${verification_code}</var>
</assign>
<msg timestamp="20210322 03:27:32.987" level="INFO">${verification_code} = 8760</msg>
<status status="PASS" starttime="20210322 03:27:32.986" endtime="20210322 03:27:32.987"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${verification_code}</arg>
</arguments>
<msg timestamp="20210322 03:27:32.987" level="INFO">${verification_code} = 8760</msg>
<status status="PASS" starttime="20210322 03:27:32.987" endtime="20210322 03:27:32.987"></status>
</kw>
<status status="PASS" starttime="20210322 03:27:32.362" endtime="20210322 03:27:32.987"></status>
</kw>
<kw name="confirmar propriedade da chave pix" library="pix_dict_confirm_propriety">
<arguments>
<arg>${verification_code}</arg>
<arg>${holder_claimer}</arg>
<arg>${account_claimer}</arg>
<arg>${entry_claimer}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 03:27:32.989" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 03:27:32.989" endtime="20210322 03:27:32.989"></status>
</kw>
<status status="PASS" starttime="20210322 03:27:32.988" endtime="20210322 03:27:32.989"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:27:32.989" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 03:27:32.989" endtime="20210322 03:27:32.989"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"code": "${verification_code}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 03:27:32.990" level="INFO">${body} = { "code": "8760" }</msg>
<status status="PASS" starttime="20210322 03:27:32.990" endtime="20210322 03:27:32.990"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries/${entry_external_key}/ownership</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:27:32.990" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/c3831963c3f64668a5f293235838f30b/accounts/1893d94598354a5f83638113bd4d3d64/entries/67b9ebbed91f48b299d61c2ce8ff403f/ownership, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "code": "8760" } 
json=None</msg>
<msg timestamp="20210322 03:27:34.501" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:27:32.990" endtime="20210322 03:27:34.501"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:27:34.502" level="INFO">{'id': '67b9ebbed91f48b299d61c2ce8ff403f', 'status': 'waiting_ownership_claiming', 'created_at': '2021-03-22T03:27:33.218', 'updated_at': '2021-03-22T03:27:35.382', 'key': {'value': '+5521946629897', 'type': 'phone'}, 'account': {'id': '1893d94598354a5f83638113bd4d3d64', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': 'c3831963c3f64668a5f293235838f30b', 'owner': {'name': 'Holder de teste', 'national_registration': '29180574602', 'type': 'individual'}, 'routing_number': '001', 'number': '2504173704', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}, 'resource': 'pix.entry'}</msg>
<status status="PASS" starttime="20210322 03:27:34.501" endtime="20210322 03:27:34.502"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:27:34.503" level="INFO">fd92c3243717cdb5</msg>
<status status="PASS" starttime="20210322 03:27:34.503" endtime="20210322 03:27:34.503"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 03:27:34.505" level="INFO">201</msg>
<status status="PASS" starttime="20210322 03:27:34.504" endtime="20210322 03:27:34.505"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:27:34.507" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:27:34.506" endtime="20210322 03:27:34.507"></status>
</kw>
<status status="PASS" starttime="20210322 03:27:32.988" endtime="20210322 03:27:34.507"></status>
</kw>
<kw name="validar status da chave após criação da reivindicação" library="asserts">
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["status"]}</arg>
<arg>waiting_ownership_claiming</arg>
</arguments>
<status status="PASS" starttime="20210322 03:27:34.509" endtime="20210322 03:27:34.510"></status>
</kw>
<status status="PASS" starttime="20210322 03:27:34.508" endtime="20210322 03:27:34.510"></status>
</kw>
<kw name="criar reivindicação de posse" library="pix_dict_create_claims">
<arguments>
<arg>${holder_claimer}</arg>
<arg>${account_claimer}</arg>
<arg>${entry_claimer}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 03:27:34.512" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 03:27:34.512" endtime="20210322 03:27:34.513"></status>
</kw>
<status status="PASS" starttime="20210322 03:27:34.512" endtime="20210322 03:27:34.513"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries/${entry_external_key}/claims</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:27:34.513" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/c3831963c3f64668a5f293235838f30b/accounts/1893d94598354a5f83638113bd4d3d64/entries/67b9ebbed91f48b299d61c2ce8ff403f/claims, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 03:27:36.420" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:27:34.513" endtime="20210322 03:27:36.420"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:27:36.424" level="INFO">{'id': '881d50b707c64910901940d76e2a4910', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'created_at': '2021-03-22T03:27:37.295', 'updated_at': '2021-03-22T03:27:37.295', 'type': 'OWNERSHIP', 'status': 'open', 'key': {'value': '+5521946629897', 'type': 'phone'}, 'claimer': {'name': 'Holder de teste', 'national_registration': '29180574602', 'type': 'individual', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': 'c3831963c3f64668a5f293235838f30b', 'account': {'digital_account_id': '1893d94598354a5f83638113bd4d3d64', 'routing_number': '001', 'number': '2504173704', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}}, 'donor': {'name': 'Holder de teste', 'national_registration': '25490381779', 'type': 'individual', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': '81b5d5dd49104dbc9f2c9340e736d171', 'account': {'digital_account_id': '89018cf68b954ef0b0efd3c2f7039028', 'routing_number': '001', 'number': '4023433116', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}}, 'completion_period_end': '2021-04-05T06:27:36.000', 'resolution_period_end': '2021-03-29T06:27:36.000', 'resource': 'pix.claim'}</msg>
<status status="PASS" starttime="20210322 03:27:36.421" endtime="20210322 03:27:36.424"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:27:36.426" level="INFO">9504b50ca1a619de</msg>
<status status="PASS" starttime="20210322 03:27:36.425" endtime="20210322 03:27:36.427"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 03:27:36.428" level="INFO">201</msg>
<status status="PASS" starttime="20210322 03:27:36.427" endtime="20210322 03:27:36.428"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:27:36.429" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:27:36.429" endtime="20210322 03:27:36.430"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${claim_external_key}</var>
</assign>
<msg timestamp="20210322 03:27:36.432" level="INFO">${claim_external_key} = 881d50b707c64910901940d76e2a4910</msg>
<status status="PASS" starttime="20210322 03:27:36.430" endtime="20210322 03:27:36.432"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${claim_external_key}</arg>
</arguments>
<msg timestamp="20210322 03:27:36.433" level="INFO">${claim_external_key} = 881d50b707c64910901940d76e2a4910</msg>
<status status="PASS" starttime="20210322 03:27:36.432" endtime="20210322 03:27:36.433"></status>
</kw>
<status status="PASS" starttime="20210322 03:27:34.511" endtime="20210322 03:27:36.433"></status>
</kw>
<kw name="buscar reivindicação de posse" library="pix_dict_get_claims">
<arguments>
<arg>${holder_claimer}</arg>
<arg>${account_claimer}</arg>
<arg>${claim_external_key}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 03:27:36.435" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 03:27:36.435" endtime="20210322 03:27:36.436"></status>
</kw>
<status status="PASS" starttime="20210322 03:27:36.434" endtime="20210322 03:27:36.436"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/claims/${claim_external_key}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:27:36.439" level="INFO">GET Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/c3831963c3f64668a5f293235838f30b/accounts/1893d94598354a5f83638113bd4d3d64/claims/881d50b707c64910901940d76e2a4910, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 03:27:37.056" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:27:36.437" endtime="20210322 03:27:37.056"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:27:37.058" level="INFO">{'id': '881d50b707c64910901940d76e2a4910', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'created_at': '2021-03-22T03:27:37.295', 'updated_at': '2021-03-22T03:27:37.295', 'type': 'OWNERSHIP', 'status': 'open', 'key': {'value': '+5521946629897', 'type': 'phone'}, 'claimer': {'name': 'Holder de teste', 'national_registration': '29180574602', 'type': 'individual', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': 'c3831963c3f64668a5f293235838f30b', 'account': {'digital_account_id': '1893d94598354a5f83638113bd4d3d64', 'routing_number': '001', 'number': '2504173704', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}}, 'donor': {'name': 'Holder de teste', 'national_registration': '25490381779', 'type': 'individual', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': '81b5d5dd49104dbc9f2c9340e736d171', 'account': {'digital_account_id': '89018cf68b954ef0b0efd3c2f7039028', 'routing_number': '001', 'number': '4023433116', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}}, 'completion_period_end': '2021-04-05T06:27:36.000', 'resolution_period_end': '2021-03-29T06:27:36.000', 'resource': 'pix.claim'}</msg>
<status status="PASS" starttime="20210322 03:27:37.057" endtime="20210322 03:27:37.058"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:27:37.059" level="INFO">b6e4989686293b60</msg>
<status status="PASS" starttime="20210322 03:27:37.059" endtime="20210322 03:27:37.060"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 03:27:37.061" level="INFO">200</msg>
<status status="PASS" starttime="20210322 03:27:37.061" endtime="20210322 03:27:37.062"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:27:37.063" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:27:37.062" endtime="20210322 03:27:37.063"></status>
</kw>
<status status="PASS" starttime="20210322 03:27:36.433" endtime="20210322 03:27:37.064"></status>
</kw>
<kw name="validar status da reivindicação" library="asserts">
<arguments>
<arg>open</arg>
</arguments>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["status"]}</arg>
<arg>${claim_status}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:27:37.066" endtime="20210322 03:27:37.067"></status>
</kw>
<status status="PASS" starttime="20210322 03:27:37.064" endtime="20210322 03:27:37.067"></status>
</kw>
<kw name="receber notificação de reivindicação" library="pix_dict_receive_claim_notification">
<arguments>
<arg>${phone_pix}</arg>
<arg>${account_number_owner}</arg>
<arg>${national_registration_owner}</arg>
<arg>${holder_name_owner}</arg>
<arg>${claim_external_key}</arg>
<arg>WAITING_RESOLUTION</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 03:27:37.072" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 03:27:37.071" endtime="20210322 03:27:37.072"></status>
</kw>
<status status="PASS" starttime="20210322 03:27:37.070" endtime="20210322 03:27:37.073"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:27:37.074" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 03:27:37.073" endtime="20210322 03:27:37.074"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"data": {</arg>
<arg>"claim": {</arg>
<arg>"type": "OWNERSHIP",</arg>
<arg>"key": "${key_pix}",</arg>
<arg>"key_type": "PHONE",</arg>
<arg>"claimer_account": {</arg>
<arg>"participant": "19468242",</arg>
<arg>"branch": "0001",</arg>
<arg>"account_number": "${account_number}",</arg>
<arg>"account_type": "CACC"</arg>
<arg>},</arg>
<arg>"claimer": {</arg>
<arg>"type": "NATURAL_PERSON",</arg>
<arg>"tax_id_number": "${claimer_tax_id}",</arg>
<arg>"name": "${claimer_name}"</arg>
<arg>},</arg>
<arg>"donor_participant": "19468242",</arg>
<arg>"id": "${claim_external_key}",</arg>
<arg>"status": "${claim_notification_status}",</arg>
<arg>"resolution_period_end": "2020-10-18T10:00:00.000Z",</arg>
<arg>"completion_period_end": "2020-10-25T10:00:00.000Z",</arg>
<arg>"last_modified": "2020-10-17T10:00:00.000Z"</arg>
<arg>}</arg>
<arg>}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 03:27:37.076" level="INFO">${body} = { "data": { "claim": { "type": "OWNERSHIP", "key": "+5521946629897", "key_type": "PHONE", "claimer_account": { "participant": "19468242", "branch": "0001", "account_number": "4023433116", "account_typ...</msg>
<status status="PASS" starttime="20210322 03:27:37.074" endtime="20210322 03:27:37.076"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/banking/internal/dict/claims</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:27:37.077" level="INFO">POST Request using : uri=/banking/internal/dict/claims, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "data": { "claim": { "type": "OWNERSHIP", "key": "+5521946629897", "key_type": "PHONE", "claimer_account": { "participant": "19468242", "branch": "0001", "account_number": "4023433116", "account_type": "CACC" }, "claimer": { "type": "NATURAL_PERSON", "tax_id_number": "25490381779", "name": "Holder de teste" }, "donor_participant": "19468242", "id": "881d50b707c64910901940d76e2a4910", "status": "WAITING_RESOLUTION", "resolution_period_end": "2020-10-18T10:00:00.000Z", "completion_period_end": "2020-10-25T10:00:00.000Z", "last_modified": "2020-10-17T10:00:00.000Z" } } } 
json=None</msg>
<msg timestamp="20210322 03:27:37.690" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:27:37.076" endtime="20210322 03:27:37.690"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 03:27:37.692" level="INFO">200</msg>
<status status="PASS" starttime="20210322 03:27:37.691" endtime="20210322 03:27:37.693"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:27:37.694" level="INFO">035e308c925e4b4f</msg>
<status status="PASS" starttime="20210322 03:27:37.693" endtime="20210322 03:27:37.695"></status>
</kw>
<status status="PASS" starttime="20210322 03:27:37.068" endtime="20210322 03:27:37.695"></status>
</kw>
<kw name="buscar reivindicação de posse" library="pix_dict_get_claims">
<arguments>
<arg>${holder_claimer}</arg>
<arg>${account_claimer}</arg>
<arg>${claim_external_key}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 03:27:37.700" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 03:27:37.699" endtime="20210322 03:27:37.701"></status>
</kw>
<status status="PASS" starttime="20210322 03:27:37.698" endtime="20210322 03:27:37.701"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/claims/${claim_external_key}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:27:37.703" level="INFO">GET Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/c3831963c3f64668a5f293235838f30b/accounts/1893d94598354a5f83638113bd4d3d64/claims/881d50b707c64910901940d76e2a4910, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 03:27:38.327" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:27:37.702" endtime="20210322 03:27:38.327"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:27:38.328" level="INFO">{'id': '881d50b707c64910901940d76e2a4910', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'created_at': '2021-03-22T03:27:37.295', 'updated_at': '2021-03-22T03:27:38.573', 'type': 'OWNERSHIP', 'status': 'waiting_resolution', 'key': {'value': '+5521946629897', 'type': 'phone'}, 'claimer': {'name': 'Holder de teste', 'national_registration': '29180574602', 'type': 'individual', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': 'c3831963c3f64668a5f293235838f30b', 'account': {'digital_account_id': '1893d94598354a5f83638113bd4d3d64', 'routing_number': '001', 'number': '2504173704', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}}, 'donor': {'name': 'Holder de teste', 'national_registration': '25490381779', 'type': 'individual', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': '81b5d5dd49104dbc9f2c9340e736d171', 'account': {'digital_account_id': '89018cf68b954ef0b0efd3c2f7039028', 'routing_number': '001', 'number': '4023433116', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}}, 'completion_period_end': '2021-04-05T06:27:36.000', 'resolution_period_end': '2021-03-29T06:27:36.000', 'resource': 'pix.claim'}</msg>
<status status="PASS" starttime="20210322 03:27:38.328" endtime="20210322 03:27:38.328"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:27:38.328" level="INFO">64e869ee64366e2c</msg>
<status status="PASS" starttime="20210322 03:27:38.328" endtime="20210322 03:27:38.328"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 03:27:38.329" level="INFO">200</msg>
<status status="PASS" starttime="20210322 03:27:38.329" endtime="20210322 03:27:38.329"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:27:38.329" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:27:38.329" endtime="20210322 03:27:38.329"></status>
</kw>
<status status="PASS" starttime="20210322 03:27:37.696" endtime="20210322 03:27:38.329"></status>
</kw>
<kw name="validar status da reivindicação" library="asserts">
<arguments>
<arg>waiting_resolution</arg>
</arguments>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["status"]}</arg>
<arg>${claim_status}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:27:38.330" endtime="20210322 03:27:38.330"></status>
</kw>
<status status="PASS" starttime="20210322 03:27:38.329" endtime="20210322 03:27:38.330"></status>
</kw>
<kw name="${index} IN RANGE [ 20 ]" type="for">
<kw name="${index} = 0" type="foritem">
<kw name="confirmar reivindicação de posse" library="pix_dict_confirm_claims">
<arguments>
<arg>${holder_owner}</arg>
<arg>${account_owner}</arg>
<arg>${claim_external_key}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 03:27:38.331" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 03:27:38.331" endtime="20210322 03:27:38.331"></status>
</kw>
<status status="PASS" starttime="20210322 03:27:38.331" endtime="20210322 03:27:38.332"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/claims/${claim_external_key}/confirm</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:27:38.332" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/81b5d5dd49104dbc9f2c9340e736d171/accounts/89018cf68b954ef0b0efd3c2f7039028/claims/881d50b707c64910901940d76e2a4910/confirm, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 03:27:39.920" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20210322 03:27:38.332" endtime="20210322 03:27:39.921"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:27:39.923" level="INFO">{'code': 9997, 'status': 'bad_request', 'type': 'integration_error', 'message': 'Claim operation invalid', 'category': 'unexpected', 'status_code': 400}</msg>
<status status="PASS" starttime="20210322 03:27:39.923" endtime="20210322 03:27:39.923"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:27:39.923" level="INFO">b23ea98d62ff7b1b</msg>
<status status="PASS" starttime="20210322 03:27:39.923" endtime="20210322 03:27:39.924"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 03:27:39.924" level="INFO">400</msg>
<status status="PASS" starttime="20210322 03:27:39.924" endtime="20210322 03:27:39.924"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:27:39.925" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20210322 03:27:39.925" endtime="20210322 03:27:39.925"></status>
</kw>
<status status="PASS" starttime="20210322 03:27:38.330" endtime="20210322 03:27:39.925"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${response.json()["message"]}' == 'Claim confirmed successfully'</arg>
</arguments>
<status status="PASS" starttime="20210322 03:27:39.926" endtime="20210322 03:27:39.926"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10</arg>
</arguments>
<msg timestamp="20210322 03:27:49.928" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20210322 03:27:39.926" endtime="20210322 03:27:49.929"></status>
</kw>
<status status="PASS" starttime="20210322 03:27:38.330" endtime="20210322 03:27:49.929"></status>
</kw>
<kw name="${index} = 1" type="foritem">
<kw name="confirmar reivindicação de posse" library="pix_dict_confirm_claims">
<arguments>
<arg>${holder_owner}</arg>
<arg>${account_owner}</arg>
<arg>${claim_external_key}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 03:27:49.935" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 03:27:49.934" endtime="20210322 03:27:49.939"></status>
</kw>
<status status="PASS" starttime="20210322 03:27:49.932" endtime="20210322 03:27:49.939"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/claims/${claim_external_key}/confirm</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:27:49.941" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/81b5d5dd49104dbc9f2c9340e736d171/accounts/89018cf68b954ef0b0efd3c2f7039028/claims/881d50b707c64910901940d76e2a4910/confirm, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 03:27:51.537" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20210322 03:27:49.940" endtime="20210322 03:27:51.537"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:27:51.540" level="INFO">{'code': 9997, 'status': 'bad_request', 'type': 'integration_error', 'message': 'Claim operation invalid', 'category': 'unexpected', 'status_code': 400}</msg>
<status status="PASS" starttime="20210322 03:27:51.539" endtime="20210322 03:27:51.540"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:27:51.540" level="INFO">ed84b3391215d65a</msg>
<status status="PASS" starttime="20210322 03:27:51.540" endtime="20210322 03:27:51.541"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 03:27:51.541" level="INFO">400</msg>
<status status="PASS" starttime="20210322 03:27:51.541" endtime="20210322 03:27:51.541"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:27:51.542" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20210322 03:27:51.541" endtime="20210322 03:27:51.542"></status>
</kw>
<status status="PASS" starttime="20210322 03:27:49.930" endtime="20210322 03:27:51.542"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${response.json()["message"]}' == 'Claim confirmed successfully'</arg>
</arguments>
<status status="PASS" starttime="20210322 03:27:51.542" endtime="20210322 03:27:51.543"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10</arg>
</arguments>
<msg timestamp="20210322 03:28:01.544" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20210322 03:27:51.543" endtime="20210322 03:28:01.545"></status>
</kw>
<status status="PASS" starttime="20210322 03:27:49.929" endtime="20210322 03:28:01.545"></status>
</kw>
<kw name="${index} = 2" type="foritem">
<kw name="confirmar reivindicação de posse" library="pix_dict_confirm_claims">
<arguments>
<arg>${holder_owner}</arg>
<arg>${account_owner}</arg>
<arg>${claim_external_key}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 03:28:01.552" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 03:28:01.551" endtime="20210322 03:28:01.554"></status>
</kw>
<status status="PASS" starttime="20210322 03:28:01.549" endtime="20210322 03:28:01.554"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/claims/${claim_external_key}/confirm</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:28:01.557" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/81b5d5dd49104dbc9f2c9340e736d171/accounts/89018cf68b954ef0b0efd3c2f7039028/claims/881d50b707c64910901940d76e2a4910/confirm, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 03:28:03.167" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20210322 03:28:01.555" endtime="20210322 03:28:03.167"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:28:03.169" level="INFO">{'code': 9997, 'status': 'bad_request', 'type': 'integration_error', 'message': 'Claim operation invalid', 'category': 'unexpected', 'status_code': 400}</msg>
<status status="PASS" starttime="20210322 03:28:03.168" endtime="20210322 03:28:03.169"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:28:03.170" level="INFO">a5b3bb5f515a3490</msg>
<status status="PASS" starttime="20210322 03:28:03.169" endtime="20210322 03:28:03.170"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 03:28:03.170" level="INFO">400</msg>
<status status="PASS" starttime="20210322 03:28:03.170" endtime="20210322 03:28:03.171"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:28:03.171" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20210322 03:28:03.171" endtime="20210322 03:28:03.172"></status>
</kw>
<status status="PASS" starttime="20210322 03:28:01.547" endtime="20210322 03:28:03.172"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${response.json()["message"]}' == 'Claim confirmed successfully'</arg>
</arguments>
<status status="PASS" starttime="20210322 03:28:03.172" endtime="20210322 03:28:03.173"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10</arg>
</arguments>
<msg timestamp="20210322 03:28:13.175" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20210322 03:28:03.174" endtime="20210322 03:28:13.175"></status>
</kw>
<status status="PASS" starttime="20210322 03:28:01.545" endtime="20210322 03:28:13.175"></status>
</kw>
<kw name="${index} = 3" type="foritem">
<kw name="confirmar reivindicação de posse" library="pix_dict_confirm_claims">
<arguments>
<arg>${holder_owner}</arg>
<arg>${account_owner}</arg>
<arg>${claim_external_key}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 03:28:13.177" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 03:28:13.176" endtime="20210322 03:28:13.177"></status>
</kw>
<status status="PASS" starttime="20210322 03:28:13.176" endtime="20210322 03:28:13.177"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/claims/${claim_external_key}/confirm</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:28:13.178" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/81b5d5dd49104dbc9f2c9340e736d171/accounts/89018cf68b954ef0b0efd3c2f7039028/claims/881d50b707c64910901940d76e2a4910/confirm, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 03:28:14.862" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20210322 03:28:13.177" endtime="20210322 03:28:14.863"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:28:14.865" level="INFO">{'code': 9997, 'status': 'bad_request', 'type': 'integration_error', 'message': 'Claim operation invalid', 'category': 'unexpected', 'status_code': 400}</msg>
<status status="PASS" starttime="20210322 03:28:14.864" endtime="20210322 03:28:14.865"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:28:14.867" level="INFO">36211a8564303f1a</msg>
<status status="PASS" starttime="20210322 03:28:14.866" endtime="20210322 03:28:14.868"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 03:28:14.870" level="INFO">400</msg>
<status status="PASS" starttime="20210322 03:28:14.868" endtime="20210322 03:28:14.870"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:28:14.872" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20210322 03:28:14.871" endtime="20210322 03:28:14.872"></status>
</kw>
<status status="PASS" starttime="20210322 03:28:13.175" endtime="20210322 03:28:14.873"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${response.json()["message"]}' == 'Claim confirmed successfully'</arg>
</arguments>
<status status="PASS" starttime="20210322 03:28:14.873" endtime="20210322 03:28:14.875"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10</arg>
</arguments>
<msg timestamp="20210322 03:28:24.877" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20210322 03:28:14.875" endtime="20210322 03:28:24.877"></status>
</kw>
<status status="PASS" starttime="20210322 03:28:13.175" endtime="20210322 03:28:24.877"></status>
</kw>
<kw name="${index} = 4" type="foritem">
<kw name="confirmar reivindicação de posse" library="pix_dict_confirm_claims">
<arguments>
<arg>${holder_owner}</arg>
<arg>${account_owner}</arg>
<arg>${claim_external_key}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 03:28:24.880" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 03:28:24.880" endtime="20210322 03:28:24.881"></status>
</kw>
<status status="PASS" starttime="20210322 03:28:24.879" endtime="20210322 03:28:24.881"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/claims/${claim_external_key}/confirm</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:28:24.883" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/81b5d5dd49104dbc9f2c9340e736d171/accounts/89018cf68b954ef0b0efd3c2f7039028/claims/881d50b707c64910901940d76e2a4910/confirm, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 03:28:26.490" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20210322 03:28:24.882" endtime="20210322 03:28:26.490"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:28:26.491" level="INFO">{'code': 9997, 'status': 'bad_request', 'type': 'integration_error', 'message': 'Claim operation invalid', 'category': 'unexpected', 'status_code': 400}</msg>
<status status="PASS" starttime="20210322 03:28:26.491" endtime="20210322 03:28:26.492"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:28:26.493" level="INFO">baa0f324173e54d6</msg>
<status status="PASS" starttime="20210322 03:28:26.492" endtime="20210322 03:28:26.493"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 03:28:26.494" level="INFO">400</msg>
<status status="PASS" starttime="20210322 03:28:26.493" endtime="20210322 03:28:26.494"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:28:26.495" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20210322 03:28:26.495" endtime="20210322 03:28:26.495"></status>
</kw>
<status status="PASS" starttime="20210322 03:28:24.878" endtime="20210322 03:28:26.495"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${response.json()["message"]}' == 'Claim confirmed successfully'</arg>
</arguments>
<status status="PASS" starttime="20210322 03:28:26.495" endtime="20210322 03:28:26.496"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10</arg>
</arguments>
<msg timestamp="20210322 03:28:36.497" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20210322 03:28:26.496" endtime="20210322 03:28:36.497"></status>
</kw>
<status status="PASS" starttime="20210322 03:28:24.877" endtime="20210322 03:28:36.498"></status>
</kw>
<kw name="${index} = 5" type="foritem">
<kw name="confirmar reivindicação de posse" library="pix_dict_confirm_claims">
<arguments>
<arg>${holder_owner}</arg>
<arg>${account_owner}</arg>
<arg>${claim_external_key}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 03:28:36.503" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 03:28:36.502" endtime="20210322 03:28:36.504"></status>
</kw>
<status status="PASS" starttime="20210322 03:28:36.500" endtime="20210322 03:28:36.504"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/claims/${claim_external_key}/confirm</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:28:36.506" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/81b5d5dd49104dbc9f2c9340e736d171/accounts/89018cf68b954ef0b0efd3c2f7039028/claims/881d50b707c64910901940d76e2a4910/confirm, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 03:28:38.141" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:28:36.505" endtime="20210322 03:28:38.141"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:28:38.144" level="INFO">{'message': 'Claim confirmed successfully'}</msg>
<status status="PASS" starttime="20210322 03:28:38.142" endtime="20210322 03:28:38.144"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:28:38.146" level="INFO">2cd359676caf56ef</msg>
<status status="PASS" starttime="20210322 03:28:38.145" endtime="20210322 03:28:38.146"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 03:28:38.147" level="INFO">200</msg>
<status status="PASS" starttime="20210322 03:28:38.146" endtime="20210322 03:28:38.147"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:28:38.148" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:28:38.148" endtime="20210322 03:28:38.149"></status>
</kw>
<status status="PASS" starttime="20210322 03:28:36.499" endtime="20210322 03:28:38.149"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${response.json()["message"]}' == 'Claim confirmed successfully'</arg>
</arguments>
<msg timestamp="20210322 03:28:38.151" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20210322 03:28:38.150" endtime="20210322 03:28:38.151"></status>
</kw>
<status status="PASS" starttime="20210322 03:28:36.498" endtime="20210322 03:28:38.151"></status>
</kw>
<status status="PASS" starttime="20210322 03:27:38.330" endtime="20210322 03:28:38.151"></status>
</kw>
<kw name="buscar reivindicação de posse" library="pix_dict_get_claims">
<arguments>
<arg>${holder_claimer}</arg>
<arg>${account_claimer}</arg>
<arg>${claim_external_key}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 03:28:38.155" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 03:28:38.154" endtime="20210322 03:28:38.155"></status>
</kw>
<status status="PASS" starttime="20210322 03:28:38.153" endtime="20210322 03:28:38.156"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/claims/${claim_external_key}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:28:38.157" level="INFO">GET Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/c3831963c3f64668a5f293235838f30b/accounts/1893d94598354a5f83638113bd4d3d64/claims/881d50b707c64910901940d76e2a4910, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 03:28:38.791" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:28:38.156" endtime="20210322 03:28:38.792"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:28:38.795" level="INFO">{'id': '881d50b707c64910901940d76e2a4910', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'created_at': '2021-03-22T03:27:37.295', 'updated_at': '2021-03-22T03:28:39.010', 'type': 'OWNERSHIP', 'status': 'confirmed', 'confirm_reason': 'USER_REQUESTED', 'key': {'value': '+5521946629897', 'type': 'phone'}, 'claimer': {'name': 'Holder de teste', 'national_registration': '29180574602', 'type': 'individual', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': 'c3831963c3f64668a5f293235838f30b', 'account': {'digital_account_id': '1893d94598354a5f83638113bd4d3d64', 'routing_number': '001', 'number': '2504173704', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}}, 'donor': {'name': 'Holder de teste', 'national_registration': '25490381779', 'type': 'individual', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': '81b5d5dd49104dbc9f2c9340e736d171', 'account': {'digital_account_id': '89018cf68b954ef0b0efd3c2f7039028', 'routing_number': '001', 'number': '4023433116', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}}, 'completion_period_end': '2021-03-22T06:28:00.000', 'resolution_period_end': '2021-03-29T06:27:36.000', 'resource': 'pix.claim'}</msg>
<status status="PASS" starttime="20210322 03:28:38.793" endtime="20210322 03:28:38.795"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:28:38.798" level="INFO">c30ecd82cbd3f029</msg>
<status status="PASS" starttime="20210322 03:28:38.796" endtime="20210322 03:28:38.798"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 03:28:38.801" level="INFO">200</msg>
<status status="PASS" starttime="20210322 03:28:38.799" endtime="20210322 03:28:38.801"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:28:38.803" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:28:38.801" endtime="20210322 03:28:38.803"></status>
</kw>
<status status="PASS" starttime="20210322 03:28:38.152" endtime="20210322 03:28:38.803"></status>
</kw>
<kw name="validar status da reivindicação" library="asserts">
<arguments>
<arg>confirmed</arg>
</arguments>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["status"]}</arg>
<arg>${claim_status}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:28:38.805" endtime="20210322 03:28:38.807"></status>
</kw>
<status status="PASS" starttime="20210322 03:28:38.804" endtime="20210322 03:28:38.807"></status>
</kw>
<kw name="receber notificação de reivindicação" library="pix_dict_receive_claim_notification">
<arguments>
<arg>${phone_pix}</arg>
<arg>${account_number_owner}</arg>
<arg>${national_registration_owner}</arg>
<arg>${holder_name_owner}</arg>
<arg>${claim_external_key}</arg>
<arg>CONFIRMED</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 03:28:38.812" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 03:28:38.810" endtime="20210322 03:28:38.812"></status>
</kw>
<status status="PASS" starttime="20210322 03:28:38.809" endtime="20210322 03:28:38.812"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:28:38.813" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 03:28:38.812" endtime="20210322 03:28:38.813"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"data": {</arg>
<arg>"claim": {</arg>
<arg>"type": "OWNERSHIP",</arg>
<arg>"key": "${key_pix}",</arg>
<arg>"key_type": "PHONE",</arg>
<arg>"claimer_account": {</arg>
<arg>"participant": "19468242",</arg>
<arg>"branch": "0001",</arg>
<arg>"account_number": "${account_number}",</arg>
<arg>"account_type": "CACC"</arg>
<arg>},</arg>
<arg>"claimer": {</arg>
<arg>"type": "NATURAL_PERSON",</arg>
<arg>"tax_id_number": "${claimer_tax_id}",</arg>
<arg>"name": "${claimer_name}"</arg>
<arg>},</arg>
<arg>"donor_participant": "19468242",</arg>
<arg>"id": "${claim_external_key}",</arg>
<arg>"status": "${claim_notification_status}",</arg>
<arg>"resolution_period_end": "2020-10-18T10:00:00.000Z",</arg>
<arg>"completion_period_end": "2020-10-25T10:00:00.000Z",</arg>
<arg>"last_modified": "2020-10-17T10:00:00.000Z"</arg>
<arg>}</arg>
<arg>}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 03:28:38.814" level="INFO">${body} = { "data": { "claim": { "type": "OWNERSHIP", "key": "+5521946629897", "key_type": "PHONE", "claimer_account": { "participant": "19468242", "branch": "0001", "account_number": "4023433116", "account_typ...</msg>
<status status="PASS" starttime="20210322 03:28:38.813" endtime="20210322 03:28:38.815"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/banking/internal/dict/claims</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:28:38.817" level="INFO">POST Request using : uri=/banking/internal/dict/claims, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "data": { "claim": { "type": "OWNERSHIP", "key": "+5521946629897", "key_type": "PHONE", "claimer_account": { "participant": "19468242", "branch": "0001", "account_number": "4023433116", "account_type": "CACC" }, "claimer": { "type": "NATURAL_PERSON", "tax_id_number": "25490381779", "name": "Holder de teste" }, "donor_participant": "19468242", "id": "881d50b707c64910901940d76e2a4910", "status": "CONFIRMED", "resolution_period_end": "2020-10-18T10:00:00.000Z", "completion_period_end": "2020-10-25T10:00:00.000Z", "last_modified": "2020-10-17T10:00:00.000Z" } } } 
json=None</msg>
<msg timestamp="20210322 03:28:39.533" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:28:38.815" endtime="20210322 03:28:39.533"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 03:28:39.534" level="INFO">200</msg>
<status status="PASS" starttime="20210322 03:28:39.533" endtime="20210322 03:28:39.534"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:28:39.536" level="INFO">063973e508c2d5ec</msg>
<status status="PASS" starttime="20210322 03:28:39.535" endtime="20210322 03:28:39.536"></status>
</kw>
<status status="PASS" starttime="20210322 03:28:38.807" endtime="20210322 03:28:39.537"></status>
</kw>
<kw name="buscar reivindicação de posse" library="pix_dict_get_claims">
<arguments>
<arg>${holder_claimer}</arg>
<arg>${account_claimer}</arg>
<arg>${claim_external_key}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 03:28:39.541" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 03:28:39.540" endtime="20210322 03:28:39.541"></status>
</kw>
<status status="PASS" starttime="20210322 03:28:39.539" endtime="20210322 03:28:39.542"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/claims/${claim_external_key}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:28:39.543" level="INFO">GET Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/c3831963c3f64668a5f293235838f30b/accounts/1893d94598354a5f83638113bd4d3d64/claims/881d50b707c64910901940d76e2a4910, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 03:28:40.270" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:28:39.542" endtime="20210322 03:28:40.270"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:28:40.272" level="INFO">{'id': '881d50b707c64910901940d76e2a4910', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'created_at': '2021-03-22T03:27:37.295', 'updated_at': '2021-03-22T03:28:40.385', 'type': 'OWNERSHIP', 'status': 'waiting_entry_ownership_confirm_to_complete', 'confirm_reason': 'USER_REQUESTED', 'key': {'value': '+5521946629897', 'type': 'phone'}, 'claimer': {'name': 'Holder de teste', 'national_registration': '29180574602', 'type': 'individual', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': 'c3831963c3f64668a5f293235838f30b', 'account': {'digital_account_id': '1893d94598354a5f83638113bd4d3d64', 'routing_number': '001', 'number': '2504173704', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}}, 'donor': {'name': 'Holder de teste', 'national_registration': '25490381779', 'type': 'individual', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': '81b5d5dd49104dbc9f2c9340e736d171', 'account': {'digital_account_id': '89018cf68b954ef0b0efd3c2f7039028', 'routing_number': '001', 'number': '4023433116', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}}, 'completion_period_end': '2021-03-22T06:28:00.000', 'resolution_period_end': '2021-03-29T06:27:36.000', 'resource': 'pix.claim'}</msg>
<status status="PASS" starttime="20210322 03:28:40.271" endtime="20210322 03:28:40.272"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:28:40.273" level="INFO">609d464d617991cc</msg>
<status status="PASS" starttime="20210322 03:28:40.273" endtime="20210322 03:28:40.274"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 03:28:40.275" level="INFO">200</msg>
<status status="PASS" starttime="20210322 03:28:40.274" endtime="20210322 03:28:40.275"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:28:40.276" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:28:40.276" endtime="20210322 03:28:40.277"></status>
</kw>
<status status="PASS" starttime="20210322 03:28:39.538" endtime="20210322 03:28:40.277"></status>
</kw>
<kw name="validar status da reivindicação" library="asserts">
<arguments>
<arg>waiting_entry_ownership_confirm_to_complete</arg>
</arguments>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["status"]}</arg>
<arg>${claim_status}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:28:40.278" endtime="20210322 03:28:40.279"></status>
</kw>
<status status="PASS" starttime="20210322 03:28:40.277" endtime="20210322 03:28:40.279"></status>
</kw>
<kw name="buscar verification code" library="pix_dict_verification_code">
<arguments>
<arg>${holder_claimer}</arg>
<arg>${account_claimer}</arg>
<arg>${entry_claimer}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 03:28:40.282" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 03:28:40.282" endtime="20210322 03:28:40.283"></status>
</kw>
<status status="PASS" starttime="20210322 03:28:40.280" endtime="20210322 03:28:40.283"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/admin/internal_operation/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries/${entry_external_key}/code</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:28:40.284" level="INFO">GET Request using : uri=/admin/internal_operation/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/c3831963c3f64668a5f293235838f30b/accounts/1893d94598354a5f83638113bd4d3d64/entries/67b9ebbed91f48b299d61c2ce8ff403f/code, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 03:28:40.918" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:28:40.283" endtime="20210322 03:28:40.918"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:28:40.920" level="INFO">{'code': '6343'}</msg>
<status status="PASS" starttime="20210322 03:28:40.919" endtime="20210322 03:28:40.920"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:28:40.921" level="INFO">f817455c0e21ac5f</msg>
<status status="PASS" starttime="20210322 03:28:40.920" endtime="20210322 03:28:40.921"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 03:28:40.922" level="INFO">200</msg>
<status status="PASS" starttime="20210322 03:28:40.922" endtime="20210322 03:28:40.922"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:28:40.924" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:28:40.923" endtime="20210322 03:28:40.924"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["code"]}</arg>
</arguments>
<assign>
<var>${verification_code}</var>
</assign>
<msg timestamp="20210322 03:28:40.925" level="INFO">${verification_code} = 6343</msg>
<status status="PASS" starttime="20210322 03:28:40.924" endtime="20210322 03:28:40.925"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${verification_code}</arg>
</arguments>
<msg timestamp="20210322 03:28:40.927" level="INFO">${verification_code} = 6343</msg>
<status status="PASS" starttime="20210322 03:28:40.926" endtime="20210322 03:28:40.927"></status>
</kw>
<status status="PASS" starttime="20210322 03:28:40.280" endtime="20210322 03:28:40.927"></status>
</kw>
<kw name="confirmar propriedade da chave pix" library="pix_dict_confirm_propriety">
<arguments>
<arg>${verification_code}</arg>
<arg>${holder_claimer}</arg>
<arg>${account_claimer}</arg>
<arg>${entry_claimer}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 03:28:40.930" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 03:28:40.930" endtime="20210322 03:28:40.931"></status>
</kw>
<status status="PASS" starttime="20210322 03:28:40.929" endtime="20210322 03:28:40.931"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:28:40.932" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 03:28:40.932" endtime="20210322 03:28:40.932"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"code": "${verification_code}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 03:28:40.933" level="INFO">${body} = { "code": "6343" }</msg>
<status status="PASS" starttime="20210322 03:28:40.933" endtime="20210322 03:28:40.933"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries/${entry_external_key}/ownership</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:28:40.935" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/c3831963c3f64668a5f293235838f30b/accounts/1893d94598354a5f83638113bd4d3d64/entries/67b9ebbed91f48b299d61c2ce8ff403f/ownership, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "code": "6343" } 
json=None</msg>
<msg timestamp="20210322 03:28:42.615" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:28:40.934" endtime="20210322 03:28:42.615"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:28:42.618" level="INFO">{'id': '67b9ebbed91f48b299d61c2ce8ff403f', 'status': 'active', 'created_at': '2021-03-22T03:27:33.218', 'updated_at': '2021-03-22T03:28:43.494', 'key': {'value': '+5521946629897', 'type': 'phone'}, 'account': {'id': '1893d94598354a5f83638113bd4d3d64', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': 'c3831963c3f64668a5f293235838f30b', 'owner': {'name': 'Holder de teste', 'national_registration': '29180574602', 'type': 'individual'}, 'routing_number': '001', 'number': '2504173704', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}, 'resource': 'pix.entry'}</msg>
<status status="PASS" starttime="20210322 03:28:42.617" endtime="20210322 03:28:42.619"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:28:42.621" level="INFO">f612639460ec04e3</msg>
<status status="PASS" starttime="20210322 03:28:42.620" endtime="20210322 03:28:42.621"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 03:28:42.624" level="INFO">201</msg>
<status status="PASS" starttime="20210322 03:28:42.622" endtime="20210322 03:28:42.624"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:28:42.626" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:28:42.625" endtime="20210322 03:28:42.626"></status>
</kw>
<status status="PASS" starttime="20210322 03:28:40.928" endtime="20210322 03:28:42.626"></status>
</kw>
<kw name="buscar reivindicação de posse" library="pix_dict_get_claims">
<arguments>
<arg>${holder_claimer}</arg>
<arg>${account_claimer}</arg>
<arg>${claim_external_key}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 03:28:42.631" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 03:28:42.630" endtime="20210322 03:28:42.631"></status>
</kw>
<status status="PASS" starttime="20210322 03:28:42.628" endtime="20210322 03:28:42.631"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/claims/${claim_external_key}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:28:42.633" level="INFO">GET Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/c3831963c3f64668a5f293235838f30b/accounts/1893d94598354a5f83638113bd4d3d64/claims/881d50b707c64910901940d76e2a4910, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 03:28:43.252" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:28:42.632" endtime="20210322 03:28:43.253"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:28:43.255" level="INFO">{'id': '881d50b707c64910901940d76e2a4910', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'created_at': '2021-03-22T03:27:37.295', 'updated_at': '2021-03-22T03:28:43.494', 'type': 'OWNERSHIP', 'status': 'completed', 'confirm_reason': 'USER_REQUESTED', 'key': {'value': '+5521946629897', 'type': 'phone'}, 'claimer': {'name': 'Holder de teste', 'national_registration': '29180574602', 'type': 'individual', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': 'c3831963c3f64668a5f293235838f30b', 'account': {'digital_account_id': '1893d94598354a5f83638113bd4d3d64', 'routing_number': '001', 'number': '2504173704', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}}, 'donor': {'name': 'Holder de teste', 'national_registration': '25490381779', 'type': 'individual', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': '81b5d5dd49104dbc9f2c9340e736d171', 'account': {'digital_account_id': '89018cf68b954ef0b0efd3c2f7039028', 'routing_number': '001', 'number': '4023433116', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}}, 'completion_period_end': '2021-03-22T06:28:00.000', 'resolution_period_end': '2021-03-29T06:27:36.000', 'resource': 'pix.claim'}</msg>
<status status="PASS" starttime="20210322 03:28:43.254" endtime="20210322 03:28:43.256"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:28:43.258" level="INFO">c2ae4782fd202e74</msg>
<status status="PASS" starttime="20210322 03:28:43.257" endtime="20210322 03:28:43.258"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 03:28:43.259" level="INFO">200</msg>
<status status="PASS" starttime="20210322 03:28:43.259" endtime="20210322 03:28:43.259"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:28:43.261" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:28:43.260" endtime="20210322 03:28:43.261"></status>
</kw>
<status status="PASS" starttime="20210322 03:28:42.627" endtime="20210322 03:28:43.261"></status>
</kw>
<kw name="validar status da reivindicação" library="asserts">
<arguments>
<arg>completed</arg>
</arguments>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["status"]}</arg>
<arg>${claim_status}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:28:43.263" endtime="20210322 03:28:43.263"></status>
</kw>
<status status="PASS" starttime="20210322 03:28:43.262" endtime="20210322 03:28:43.264"></status>
</kw>
<doc>Fluxo Básico</doc>
<tags>
<tag>regression_test</tag>
<tag>smoke_test</tag>
</tags>
<status status="PASS" starttime="20210322 03:27:22.362" endtime="20210322 03:28:43.264" critical="yes"></status>
</test>
<test id="s1-s2-s2-t2" name="Cenário: Criar Reivindicação de Posse para chave do tipo email">
<kw name="Email" library="FakerLibrary">
<assign>
<var>${email_pix}</var>
</assign>
<msg timestamp="20210322 03:28:43.267" level="INFO">${email_pix} = hcardoso@ferreira.org</msg>
<status status="PASS" starttime="20210322 03:28:43.266" endtime="20210322 03:28:43.267"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${email_pix}</arg>
</arguments>
<msg timestamp="20210322 03:28:43.268" level="INFO">${email_pix} = hcardoso@ferreira.org</msg>
<status status="PASS" starttime="20210322 03:28:43.267" endtime="20210322 03:28:43.268"></status>
</kw>
<kw name="criar holder individual ativo" library="accreditation_create_holder_active">
<kw name="conectar accreditation" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accreditation</arg>
<arg>url=${accreditation_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 03:28:43.270" level="INFO">Creating Session using : alias=accreditation, url=https://banking-accreditation-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 03:28:43.269" endtime="20210322 03:28:43.271"></status>
</kw>
<status status="PASS" starttime="20210322 03:28:43.269" endtime="20210322 03:28:43.271"></status>
</kw>
<kw name="Cpf" library="FakerLibrary">
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 03:28:43.272" level="INFO">${national_registration} = 091.784.325-88</msg>
<status status="PASS" starttime="20210322 03:28:43.271" endtime="20210322 03:28:43.272"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${national_registration}</arg>
<arg>.</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 03:28:43.273" level="INFO">${national_registration} = 091784325-88</msg>
<status status="PASS" starttime="20210322 03:28:43.272" endtime="20210322 03:28:43.273"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${national_registration}</arg>
<arg>-</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 03:28:43.274" level="INFO">${national_registration} = 09178432588</msg>
<status status="PASS" starttime="20210322 03:28:43.273" endtime="20210322 03:28:43.274"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${national_registration}</arg>
</arguments>
<msg timestamp="20210322 03:28:43.274" level="INFO">${national_registration} = 09178432588</msg>
<status status="PASS" starttime="20210322 03:28:43.274" endtime="20210322 03:28:43.275"></status>
</kw>
<kw name="Rg" library="FakerLibrary">
<doc>Brazilian RG, return plain numbers.
Check:  https://www.ngmatematica.com/2014/02/como-determinar-o-digito-verificador-do.html</doc>
<assign>
<var>${identity_card}</var>
</assign>
<msg timestamp="20210322 03:28:43.275" level="INFO">${identity_card} = 70428165X</msg>
<status status="PASS" starttime="20210322 03:28:43.275" endtime="20210322 03:28:43.275"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${identity_card}</arg>
</arguments>
<msg timestamp="20210322 03:28:43.276" level="INFO">${identity_card} = 70428165X</msg>
<status status="PASS" starttime="20210322 03:28:43.276" endtime="20210322 03:28:43.276"></status>
</kw>
<kw name="criar holder individual" library="accreditation_post_holder_individual">
<arguments>
<arg>holder_type=individual</arg>
<arg>holder_name=${holder_name}</arg>
<arg>email=${email}</arg>
<arg>national_registration=${national_registration}</arg>
<arg>revenue=${revenue}</arg>
<arg>birthday=${birthday}</arg>
<arg>mothers_name=${mothers_name}</arg>
<arg>identity_card=${identity_card}</arg>
<arg>pep=false</arg>
<arg>cbo=${cbo}</arg>
</arguments>
<kw name="conectar accreditation" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accreditation</arg>
<arg>url=${accreditation_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 03:28:43.279" level="INFO">Creating Session using : alias=accreditation, url=https://banking-accreditation-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 03:28:43.279" endtime="20210322 03:28:43.279"></status>
</kw>
<status status="PASS" starttime="20210322 03:28:43.277" endtime="20210322 03:28:43.279"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_type}</arg>
</arguments>
<msg timestamp="20210322 03:28:43.280" level="INFO">${holder_type} = individual</msg>
<status status="PASS" starttime="20210322 03:28:43.280" endtime="20210322 03:28:43.280"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_name}</arg>
</arguments>
<msg timestamp="20210322 03:28:43.281" level="INFO">${holder_name} = Holder de teste</msg>
<status status="PASS" starttime="20210322 03:28:43.280" endtime="20210322 03:28:43.281"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:28:43.282" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 03:28:43.281" endtime="20210322 03:28:43.282"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "${holder_type}",</arg>
<arg>"name": "${holder_name}",</arg>
<arg>"email": "${email}",</arg>
<arg>"national_registration": "${national_registration}",</arg>
<arg>"revenue": ${revenue},</arg>
<arg>"birthday": "${birthday}",</arg>
<arg>"mothers_name": "${mothers_name}",</arg>
<arg>"identity_card": "${identity_card}",</arg>
<arg>"pep": false,</arg>
<arg>"cbo": ${cbo}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 03:28:43.283" level="INFO">${body} = { "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "09178432588", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder",...</msg>
<status status="PASS" starttime="20210322 03:28:43.282" endtime="20210322 03:28:43.283"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:28:43.284" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "09178432588", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder", "identity_card": "70428165X", "pep": false, "cbo": 821450 } 
json=None</msg>
<msg timestamp="20210322 03:28:43.985" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:28:43.283" endtime="20210322 03:28:43.986"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:28:43.989" level="INFO">{'id': '6aa6f9835dbf463d8b97c18e26ea4aac', 'name': 'Holder de teste', 'revenue': 5500.0, 'email': 'teste@teste.com.br', 'status': 'waiting_info_and_documents', 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'marketplace_name': 'Marketplace de Teste', 'created_at': '2021-03-22T03:28:44.789824', 'updated_at': '2021-03-22T03:28:44.789826', 'type': 'individual', 'national_registration': '09178432588', 'birthday': '1988-04-23', 'mothers_name': 'Mãe do Holder', 'identity_card': '70428165X', 'pep': False, 'cbo': '821450', '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/6aa6f9835dbf463d8b97c18e26ea4aac', 'type': 'GET'}, 'phones': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/6aa6f9835dbf463d8b97c18e26ea4aac/phones', 'type': 'GET'}, 'addresses': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/6aa6f9835dbf463d8b97c18e26ea4aac/addresses', 'type': 'GET'}, 'documents': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/6aa6f9835dbf463d8b97c18e26ea4aac/documents', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 03:28:43.987" endtime="20210322 03:28:43.989"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:28:43.991" level="INFO">2c921c02d1db7d1a</msg>
<status status="PASS" starttime="20210322 03:28:43.990" endtime="20210322 03:28:43.991"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${body}</arg>
</arguments>
<msg timestamp="20210322 03:28:43.993" level="INFO">{ "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "09178432588", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder", "identity_card": "70428165X", "pep": false, "cbo": 821450 }</msg>
<status status="PASS" starttime="20210322 03:28:43.992" endtime="20210322 03:28:43.993"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:28:43.995" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:28:43.994" endtime="20210322 03:28:43.995"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${holder_external_key}</var>
</assign>
<msg timestamp="20210322 03:28:43.999" level="INFO">${holder_external_key} = 6aa6f9835dbf463d8b97c18e26ea4aac</msg>
<status status="PASS" starttime="20210322 03:28:43.996" endtime="20210322 03:28:43.999"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_external_key}</arg>
</arguments>
<msg timestamp="20210322 03:28:44.001" level="INFO">${holder_external_key} = 6aa6f9835dbf463d8b97c18e26ea4aac</msg>
<status status="PASS" starttime="20210322 03:28:44.000" endtime="20210322 03:28:44.001"></status>
</kw>
<status status="PASS" starttime="20210322 03:28:43.276" endtime="20210322 03:28:44.001"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_name}</arg>
</arguments>
<msg timestamp="20210322 03:28:44.004" level="INFO">${holder_name} = Holder de teste</msg>
<status status="PASS" starttime="20210322 03:28:44.003" endtime="20210322 03:28:44.005"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 03:28:44.007" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:28:44.005" endtime="20210322 03:28:44.007"></status>
</kw>
<kw name="criar holder phone" library="accreditation_post_holder_phone">
<arguments>
<arg>21</arg>
<arg>51</arg>
<arg>996221236</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:28:44.011" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 03:28:44.010" endtime="20210322 03:28:44.011"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"area_code": "${phone_area_code}",</arg>
<arg>"country_code": "${phone_country_code}",</arg>
<arg>"number": "${phone_number}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 03:28:44.013" level="INFO">${body} = { "area_code": "21", "country_code": "51", "number": "996221236" }</msg>
<status status="PASS" starttime="20210322 03:28:44.012" endtime="20210322 03:28:44.013"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/phones</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:28:44.017" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/6aa6f9835dbf463d8b97c18e26ea4aac/phones, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "area_code": "21", "country_code": "51", "number": "996221236" } 
json=None</msg>
<msg timestamp="20210322 03:28:44.371" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:28:44.015" endtime="20210322 03:28:44.373"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:28:44.375" level="INFO">{'id': '42dd5881943f43d996da601fd018fdb5', 'area_code': '21', 'country_code': '51', 'number': '996221236', 'main': True, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/6aa6f9835dbf463d8b97c18e26ea4aac/phones/42dd5881943f43d996da601fd018fdb5', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/6aa6f9835dbf463d8b97c18e26ea4aac', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 03:28:44.373" endtime="20210322 03:28:44.375"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:28:44.377" level="INFO">a35c747f1e71ba9c</msg>
<status status="PASS" starttime="20210322 03:28:44.377" endtime="20210322 03:28:44.378"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:28:44.379" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:28:44.379" endtime="20210322 03:28:44.380"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${phone_external_key}</var>
</assign>
<msg timestamp="20210322 03:28:44.382" level="INFO">${phone_external_key} = 42dd5881943f43d996da601fd018fdb5</msg>
<status status="PASS" starttime="20210322 03:28:44.380" endtime="20210322 03:28:44.382"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${phone_external_key}</arg>
</arguments>
<msg timestamp="20210322 03:28:44.383" level="INFO">${phone_external_key} = 42dd5881943f43d996da601fd018fdb5</msg>
<status status="PASS" starttime="20210322 03:28:44.382" endtime="20210322 03:28:44.383"></status>
</kw>
<status status="PASS" starttime="20210322 03:28:44.008" endtime="20210322 03:28:44.383"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 03:28:44.385" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:28:44.384" endtime="20210322 03:28:44.385"></status>
</kw>
<kw name="criar holder address" library="accreditation_post_holder_address">
<arguments>
<arg>Rio de Janeiro</arg>
<arg>Rio de Janeiro</arg>
<arg>Brasil</arg>
<arg>Bairro de Testes</arg>
<arg>Rua de Testes</arg>
<arg>90</arg>
<arg>apto 200</arg>
<arg>21550987</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:28:44.388" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 03:28:44.388" endtime="20210322 03:28:44.388"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"city": "${city}",</arg>
<arg>"state": "${state}",</arg>
<arg>"country": "${country}",</arg>
<arg>"neighborhood": "${neighborhood}",</arg>
<arg>"street": "${street}",</arg>
<arg>"number": "${number}",</arg>
<arg>"complement": "${complement}",</arg>
<arg>"postal_code": "${postal_code}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 03:28:44.390" level="INFO">${body} = { "city": "Rio de Janeiro", "state": "Rio de Janeiro", "country": "Brasil", "neighborhood": "Bairro de Testes", "street": "Rua de Testes", "number": "90", "complement": "apto 200", "postal_code": "215...</msg>
<status status="PASS" starttime="20210322 03:28:44.389" endtime="20210322 03:28:44.390"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/addresses</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:28:44.391" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/6aa6f9835dbf463d8b97c18e26ea4aac/addresses, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "city": "Rio de Janeiro", "state": "Rio de Janeiro", "country": "Brasil", "neighborhood": "Bairro de Testes", "street": "Rua de Testes", "number": "90", "complement": "apto 200", "postal_code": "21550987" } 
json=None</msg>
<msg timestamp="20210322 03:28:44.613" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:28:44.390" endtime="20210322 03:28:44.613"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:28:44.614" level="INFO">{'id': 'b5e0472744964a18a97fb466c0b9fbfc', 'street': 'Rua de Testes', 'number': '90', 'city': 'Rio de Janeiro', 'complement': 'apto 200', 'state': 'Rio de Janeiro', 'neighborhood': 'Bairro de Testes', 'postal_code': '21550987', 'country': 'Brasil', 'main': True, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/6aa6f9835dbf463d8b97c18e26ea4aac/addresses/b5e0472744964a18a97fb466c0b9fbfc', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/6aa6f9835dbf463d8b97c18e26ea4aac', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 03:28:44.613" endtime="20210322 03:28:44.614"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:28:44.614" level="INFO">4f0c371bf29dda18</msg>
<status status="PASS" starttime="20210322 03:28:44.614" endtime="20210322 03:28:44.614"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:28:44.615" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:28:44.614" endtime="20210322 03:28:44.615"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${address_external_key}</var>
</assign>
<msg timestamp="20210322 03:28:44.615" level="INFO">${address_external_key} = b5e0472744964a18a97fb466c0b9fbfc</msg>
<status status="PASS" starttime="20210322 03:28:44.615" endtime="20210322 03:28:44.615"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${address_external_key}</arg>
</arguments>
<msg timestamp="20210322 03:28:44.616" level="INFO">${address_external_key} = b5e0472744964a18a97fb466c0b9fbfc</msg>
<status status="PASS" starttime="20210322 03:28:44.615" endtime="20210322 03:28:44.616"></status>
</kw>
<status status="PASS" starttime="20210322 03:28:44.386" endtime="20210322 03:28:44.616"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 03:28:44.616" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:28:44.616" endtime="20210322 03:28:44.616"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>SELFIE</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:28:44.617" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 03:28:44.617" endtime="20210322 03:28:44.617"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 03:28:44.617" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 03:28:44.618" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 03:28:44.617" endtime="20210322 03:28:44.618"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:28:44.619" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/6aa6f9835dbf463d8b97c18e26ea4aac/documents?type=SELFIE, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 03:28:44.996" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:28:44.619" endtime="20210322 03:28:44.997"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:28:44.997" level="INFO">{'id': 'b5bbb084f2e847ae82bc1aac30861076', 'document_type': 'selfie', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/6aa6f9835dbf463d8b97c18e26ea4aac/documents/b5bbb084f2e847ae82bc1aac30861076', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/6aa6f9835dbf463d8b97c18e26ea4aac', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/6aa6f9835dbf463d8b97c18e26ea4aac/documents/b5bbb084f2e847ae82bc1aac30861076/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 03:28:44.997" endtime="20210322 03:28:44.998"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:28:44.998" level="INFO">0cfbbbdb99625d42</msg>
<status status="PASS" starttime="20210322 03:28:44.998" endtime="20210322 03:28:44.998"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:28:44.998" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:28:44.998" endtime="20210322 03:28:44.999"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 03:28:44.999" level="INFO">${document_external_key} = b5bbb084f2e847ae82bc1aac30861076</msg>
<status status="PASS" starttime="20210322 03:28:44.999" endtime="20210322 03:28:44.999"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 03:28:45.000" level="INFO">${document_external_key} = b5bbb084f2e847ae82bc1aac30861076</msg>
<status status="PASS" starttime="20210322 03:28:44.999" endtime="20210322 03:28:45.000"></status>
</kw>
<status status="PASS" starttime="20210322 03:28:44.617" endtime="20210322 03:28:45.000"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 03:28:45.000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:28:45.000" endtime="20210322 03:28:45.001"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>RG_FRENTE</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:28:45.001" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 03:28:45.001" endtime="20210322 03:28:45.001"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 03:28:45.002" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 03:28:45.004" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 03:28:45.002" endtime="20210322 03:28:45.004"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:28:45.005" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/6aa6f9835dbf463d8b97c18e26ea4aac/documents?type=RG_FRENTE, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 03:28:45.352" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:28:45.004" endtime="20210322 03:28:45.352"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:28:45.355" level="INFO">{'id': '084c0c6e1d224dea9aff1413b02bbf55', 'document_type': 'rg_frente', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/6aa6f9835dbf463d8b97c18e26ea4aac/documents/084c0c6e1d224dea9aff1413b02bbf55', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/6aa6f9835dbf463d8b97c18e26ea4aac', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/6aa6f9835dbf463d8b97c18e26ea4aac/documents/084c0c6e1d224dea9aff1413b02bbf55/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 03:28:45.353" endtime="20210322 03:28:45.355"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:28:45.356" level="INFO">146211ceb8b97d7c</msg>
<status status="PASS" starttime="20210322 03:28:45.355" endtime="20210322 03:28:45.357"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:28:45.358" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:28:45.357" endtime="20210322 03:28:45.358"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 03:28:45.359" level="INFO">${document_external_key} = 084c0c6e1d224dea9aff1413b02bbf55</msg>
<status status="PASS" starttime="20210322 03:28:45.358" endtime="20210322 03:28:45.359"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 03:28:45.361" level="INFO">${document_external_key} = 084c0c6e1d224dea9aff1413b02bbf55</msg>
<status status="PASS" starttime="20210322 03:28:45.360" endtime="20210322 03:28:45.361"></status>
</kw>
<status status="PASS" starttime="20210322 03:28:45.001" endtime="20210322 03:28:45.361"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 03:28:45.362" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:28:45.361" endtime="20210322 03:28:45.362"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>RG_VERSO</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:28:45.363" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 03:28:45.363" endtime="20210322 03:28:45.363"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 03:28:45.364" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 03:28:45.366" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 03:28:45.364" endtime="20210322 03:28:45.366"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:28:45.368" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/6aa6f9835dbf463d8b97c18e26ea4aac/documents?type=RG_VERSO, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 03:28:45.630" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:28:45.366" endtime="20210322 03:28:45.631"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:28:45.634" level="INFO">{'id': 'f167a4f185e04bd2a3964d93c2c515b9', 'document_type': 'rg_verso', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/6aa6f9835dbf463d8b97c18e26ea4aac/documents/f167a4f185e04bd2a3964d93c2c515b9', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/6aa6f9835dbf463d8b97c18e26ea4aac', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/6aa6f9835dbf463d8b97c18e26ea4aac/documents/f167a4f185e04bd2a3964d93c2c515b9/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 03:28:45.633" endtime="20210322 03:28:45.635"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:28:45.636" level="INFO">d1efe3b24d48c0bc</msg>
<status status="PASS" starttime="20210322 03:28:45.636" endtime="20210322 03:28:45.637"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:28:45.638" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:28:45.637" endtime="20210322 03:28:45.638"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 03:28:45.640" level="INFO">${document_external_key} = f167a4f185e04bd2a3964d93c2c515b9</msg>
<status status="PASS" starttime="20210322 03:28:45.639" endtime="20210322 03:28:45.640"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 03:28:45.641" level="INFO">${document_external_key} = f167a4f185e04bd2a3964d93c2c515b9</msg>
<status status="PASS" starttime="20210322 03:28:45.641" endtime="20210322 03:28:45.641"></status>
</kw>
<status status="PASS" starttime="20210322 03:28:45.362" endtime="20210322 03:28:45.642"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 03:28:45.643" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:28:45.642" endtime="20210322 03:28:45.643"></status>
</kw>
<kw name="solicitar aprovação do holder" library="accreditation_request_approval">
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:28:45.645" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 03:28:45.644" endtime="20210322 03:28:45.645"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/approval</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:28:45.646" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/6aa6f9835dbf463d8b97c18e26ea4aac/approval, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data=None 
json=None</msg>
<msg timestamp="20210322 03:28:45.935" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:28:45.645" endtime="20210322 03:28:45.935"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:28:45.938" level="INFO">{'message': 'Approval request accepted successfully. Processing analysis'}</msg>
<status status="PASS" starttime="20210322 03:28:45.936" endtime="20210322 03:28:45.938"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:28:45.941" level="INFO">217b4da999bcab46</msg>
<status status="PASS" starttime="20210322 03:28:45.939" endtime="20210322 03:28:45.941"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:28:45.942" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:28:45.941" endtime="20210322 03:28:45.943"></status>
</kw>
<status status="PASS" starttime="20210322 03:28:45.643" endtime="20210322 03:28:45.943"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 03:28:45.945" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:28:45.944" endtime="20210322 03:28:45.945"></status>
</kw>
<kw name="recebendo notificação de aprovação" library="accreditation_risk_notification">
<kw name="Uuid 4" library="FakerLibrary">
<doc>Generates a random UUID4 string.
:param cast_to: Specify what type the UUID should be cast to. Default is `str`
:type cast_to: callable</doc>
<assign>
<var>${assessment_id}</var>
</assign>
<msg timestamp="20210322 03:28:45.948" level="INFO">${assessment_id} = 5f0bbbdf-4739-4ea6-9867-de4fad8c9e8f</msg>
<status status="PASS" starttime="20210322 03:28:45.948" endtime="20210322 03:28:45.948"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>year</arg>
</arguments>
<assign>
<var>${year}</var>
</assign>
<msg timestamp="20210322 03:28:45.950" level="INFO">${year} = 2021</msg>
<status status="PASS" starttime="20210322 03:28:45.949" endtime="20210322 03:28:45.950"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>month</arg>
</arguments>
<assign>
<var>${month}</var>
</assign>
<msg timestamp="20210322 03:28:45.951" level="INFO">${month} = 03</msg>
<status status="PASS" starttime="20210322 03:28:45.950" endtime="20210322 03:28:45.951"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>day</arg>
</arguments>
<assign>
<var>${day}</var>
</assign>
<msg timestamp="20210322 03:28:45.952" level="INFO">${day} = 22</msg>
<status status="PASS" starttime="20210322 03:28:45.951" endtime="20210322 03:28:45.953"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:28:45.954" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 03:28:45.953" endtime="20210322 03:28:45.954"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "risk.assessment.result",</arg>
<arg>"resource": "business.holder",</arg>
<arg>"created_at": "${year}-${month}-${day} 15:28:56.747Z",</arg>
<arg>"marketplace_id": "${marketplace_external_key}",</arg>
<arg>"object": {</arg>
<arg>"result": "APPROVED",</arg>
<arg>"holder_id": "${holder_external_key}",</arg>
<arg>"applicant_id": "${application_external_key}",</arg>
<arg>"assessment_id": "${assessment_id}"</arg>
<arg>}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 03:28:45.955" level="INFO">${body} = { "type": "risk.assessment.result", "resource": "business.holder", "created_at": "2021-03-22 15:28:56.747Z", "marketplace_id": "f71a8951368a4cc085cf7875ff44e61c", "object": { "result": "APPROVED", "ho...</msg>
<status status="PASS" starttime="20210322 03:28:45.954" endtime="20210322 03:28:45.955"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/admin/internal_operation/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/registration/approval</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:28:45.957" level="INFO">POST Request using : uri=/admin/internal_operation/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/6aa6f9835dbf463d8b97c18e26ea4aac/registration/approval, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "risk.assessment.result", "resource": "business.holder", "created_at": "2021-03-22 15:28:56.747Z", "marketplace_id": "f71a8951368a4cc085cf7875ff44e61c", "object": { "result": "APPROVED", "holder_id": "6aa6f9835dbf463d8b97c18e26ea4aac", "applicant_id": "bcc25a6751c14b52af1340d40dba78c5", "assessment_id": "5f0bbbdf-4739-4ea6-9867-de4fad8c9e8f" } } 
json=None</msg>
<msg timestamp="20210322 03:28:46.177" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:28:45.956" endtime="20210322 03:28:46.177"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:28:46.177" level="INFO">{'message': 'Holder approved successfully'}</msg>
<status status="PASS" starttime="20210322 03:28:46.177" endtime="20210322 03:28:46.178"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:28:46.178" level="INFO">548e9deab3d6d745</msg>
<status status="PASS" starttime="20210322 03:28:46.178" endtime="20210322 03:28:46.178"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:28:46.180" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:28:46.179" endtime="20210322 03:28:46.180"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 03:28:46.180" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:28:46.180" endtime="20210322 03:28:46.180"></status>
</kw>
<status status="PASS" starttime="20210322 03:28:45.946" endtime="20210322 03:28:46.180"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 03:28:46.181" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:28:46.180" endtime="20210322 03:28:46.181"></status>
</kw>
<kw name="buscar account por holder" library="accounts_get_accounts_by_holder">
<kw name="conectar accounts" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accounts</arg>
<arg>url=${account_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 03:28:46.182" level="INFO">Creating Session using : alias=accounts, url=https://banking-accounts-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 03:28:46.182" endtime="20210322 03:28:46.183"></status>
</kw>
<status status="PASS" starttime="20210322 03:28:46.181" endtime="20210322 03:28:46.183"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accounts</arg>
<arg>/marketplaces/${marketplace_external_key}/holders/${holder_external_key}/accounts</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:28:46.184" level="INFO">GET Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/holders/6aa6f9835dbf463d8b97c18e26ea4aac/accounts, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 03:28:46.790" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:28:46.183" endtime="20210322 03:28:46.791"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:28:46.793" level="INFO">{'items': [{'id': '8cac0d77b3a840a08db589b0c0f23910', 'holder': '6aa6f9835dbf463d8b97c18e26ea4aac', 'balance': '0.00', 'currency': 'BRL', 'routing_number': '001', 'number': '95835209', 'status': 'active', 'metadata': {}, 'created_at': '2021-03-22T06:28:47.008755', 'updated_at': '2021-03-22T06:28:47.008755', 'primary': True, 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'uri': '/v2/marketplaces/f71a8951368a4cc085cf7875ff44e61c/accounts/8cac0d77b3a840a08db589b0c0f23910', 'resource': 'payment_account'}], 'has_more': False, 'limit': 100, 'total_pages': 1, 'page': 1, 'offset': 0, 'total': '1', 'query_count': '1'}</msg>
<status status="PASS" starttime="20210322 03:28:46.792" endtime="20210322 03:28:46.794"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:28:46.796" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:28:46.795" endtime="20210322 03:28:46.797"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["id"]}</arg>
</arguments>
<assign>
<var>${account_external_key}</var>
</assign>
<msg timestamp="20210322 03:28:46.800" level="INFO">${account_external_key} = 8cac0d77b3a840a08db589b0c0f23910</msg>
<status status="PASS" starttime="20210322 03:28:46.798" endtime="20210322 03:28:46.800"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_external_key}</arg>
</arguments>
<msg timestamp="20210322 03:28:46.802" level="INFO">${account_external_key} = 8cac0d77b3a840a08db589b0c0f23910</msg>
<status status="PASS" starttime="20210322 03:28:46.801" endtime="20210322 03:28:46.802"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["number"]}</arg>
</arguments>
<assign>
<var>${account_number}</var>
</assign>
<msg timestamp="20210322 03:28:46.805" level="INFO">${account_number} = 95835209</msg>
<status status="PASS" starttime="20210322 03:28:46.803" endtime="20210322 03:28:46.805"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_number}</arg>
</arguments>
<msg timestamp="20210322 03:28:46.806" level="INFO">${account_number} = 95835209</msg>
<status status="PASS" starttime="20210322 03:28:46.805" endtime="20210322 03:28:46.807"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["routing_number"]}</arg>
</arguments>
<assign>
<var>${account_routing_number}</var>
</assign>
<msg timestamp="20210322 03:28:46.809" level="INFO">${account_routing_number} = 001</msg>
<status status="PASS" starttime="20210322 03:28:46.807" endtime="20210322 03:28:46.809"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_routing_number}</arg>
</arguments>
<msg timestamp="20210322 03:28:46.810" level="INFO">${account_routing_number} = 001</msg>
<status status="PASS" starttime="20210322 03:28:46.809" endtime="20210322 03:28:46.810"></status>
</kw>
<status status="PASS" starttime="20210322 03:28:46.181" endtime="20210322 03:28:46.810"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 03:28:46.811" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:28:46.810" endtime="20210322 03:28:46.811"></status>
</kw>
<status status="PASS" starttime="20210322 03:28:43.268" endtime="20210322 03:28:46.812"></status>
</kw>
<kw name="criar chave pix" library="pix_dict_create_entry">
<arguments>
<arg>email</arg>
<arg>${email_pix}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 03:28:46.814" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 03:28:46.813" endtime="20210322 03:28:46.814"></status>
</kw>
<status status="PASS" starttime="20210322 03:28:46.813" endtime="20210322 03:28:46.815"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${type}</arg>
</arguments>
<msg timestamp="20210322 03:28:46.815" level="INFO">${type} = email</msg>
<status status="PASS" starttime="20210322 03:28:46.815" endtime="20210322 03:28:46.815"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210322 03:28:46.816" level="INFO">${value} = hcardoso@ferreira.org</msg>
<status status="PASS" starttime="20210322 03:28:46.816" endtime="20210322 03:28:46.816"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:28:46.817" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 03:28:46.817" endtime="20210322 03:28:46.817"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "${type}",</arg>
<arg>"value": "${value}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 03:28:46.818" level="INFO">${body} = { "type": "email", "value": "hcardoso@ferreira.org" }</msg>
<status status="PASS" starttime="20210322 03:28:46.817" endtime="20210322 03:28:46.818"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:28:46.820" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/6aa6f9835dbf463d8b97c18e26ea4aac/accounts/8cac0d77b3a840a08db589b0c0f23910/entries, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "email", "value": "hcardoso@ferreira.org" } 
json=None</msg>
<msg timestamp="20210322 03:28:47.492" level="INFO">${response} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20210322 03:28:46.818" endtime="20210322 03:28:47.492"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:28:47.495" level="INFO">{'id': 'cb861cc28f3d400f80b7424308dbd514', 'status': 'waiting_ownership_verification', 'created_at': '2021-03-22T03:28:48.358', 'updated_at': '2021-03-22T03:28:48.358', 'key': {'value': 'hcardoso@ferreira.org', 'type': 'email'}, 'account': {'id': '8cac0d77b3a840a08db589b0c0f23910', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': '6aa6f9835dbf463d8b97c18e26ea4aac', 'owner': {'name': 'Holder de teste', 'national_registration': '09178432588', 'type': 'individual'}, 'routing_number': '001', 'number': '95835209', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}, 'resource': 'pix.entry'}</msg>
<status status="PASS" starttime="20210322 03:28:47.493" endtime="20210322 03:28:47.495"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:28:47.497" level="INFO">d2c7bac7ffdd1ef4</msg>
<status status="PASS" starttime="20210322 03:28:47.496" endtime="20210322 03:28:47.498"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 03:28:47.500" level="INFO">202</msg>
<status status="PASS" starttime="20210322 03:28:47.499" endtime="20210322 03:28:47.500"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:28:47.502" level="INFO">${response} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20210322 03:28:47.501" endtime="20210322 03:28:47.502"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${entry_external_key}</var>
</assign>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:28:47.505" endtime="20210322 03:28:47.506"></status>
</kw>
<msg timestamp="20210322 03:28:47.506" level="INFO">${entry_external_key} = cb861cc28f3d400f80b7424308dbd514</msg>
<status status="PASS" starttime="20210322 03:28:47.503" endtime="20210322 03:28:47.506"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${entry_external_key}</arg>
</arguments>
<msg timestamp="20210322 03:28:47.507" level="INFO">${entry_external_key} = cb861cc28f3d400f80b7424308dbd514</msg>
<status status="PASS" starttime="20210322 03:28:47.506" endtime="20210322 03:28:47.507"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["key"]["value"]}</arg>
</arguments>
<assign>
<var>${entry_key_value}</var>
</assign>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["key"]["value"]}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:28:47.509" endtime="20210322 03:28:47.509"></status>
</kw>
<msg timestamp="20210322 03:28:47.510" level="INFO">${entry_key_value} = hcardoso@ferreira.org</msg>
<status status="PASS" starttime="20210322 03:28:47.508" endtime="20210322 03:28:47.510"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${entry_key_value}</arg>
</arguments>
<msg timestamp="20210322 03:28:47.511" level="INFO">${entry_key_value} = hcardoso@ferreira.org</msg>
<status status="PASS" starttime="20210322 03:28:47.510" endtime="20210322 03:28:47.511"></status>
</kw>
<status status="PASS" starttime="20210322 03:28:46.812" endtime="20210322 03:28:47.511"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${holder_external_key}</arg>
</arguments>
<assign>
<var>${holder_owner}</var>
</assign>
<msg timestamp="20210322 03:28:47.512" level="INFO">${holder_owner} = 6aa6f9835dbf463d8b97c18e26ea4aac</msg>
<status status="PASS" starttime="20210322 03:28:47.511" endtime="20210322 03:28:47.512"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${holder_name}</arg>
</arguments>
<assign>
<var>${holder_name_owner}</var>
</assign>
<msg timestamp="20210322 03:28:47.513" level="INFO">${holder_name_owner} = Holder de teste</msg>
<status status="PASS" starttime="20210322 03:28:47.512" endtime="20210322 03:28:47.513"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${national_registration}</arg>
</arguments>
<assign>
<var>${national_registration_owner}</var>
</assign>
<msg timestamp="20210322 03:28:47.514" level="INFO">${national_registration_owner} = 09178432588</msg>
<status status="PASS" starttime="20210322 03:28:47.513" endtime="20210322 03:28:47.514"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${account_external_key}</arg>
</arguments>
<assign>
<var>${account_owner}</var>
</assign>
<msg timestamp="20210322 03:28:47.514" level="INFO">${account_owner} = 8cac0d77b3a840a08db589b0c0f23910</msg>
<status status="PASS" starttime="20210322 03:28:47.514" endtime="20210322 03:28:47.515"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${account_number}</arg>
</arguments>
<assign>
<var>${account_number_owner}</var>
</assign>
<msg timestamp="20210322 03:28:47.515" level="INFO">${account_number_owner} = 95835209</msg>
<status status="PASS" starttime="20210322 03:28:47.515" endtime="20210322 03:28:47.515"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${entry_external_key}</arg>
</arguments>
<assign>
<var>${entry_owner}</var>
</assign>
<msg timestamp="20210322 03:28:47.516" level="INFO">${entry_owner} = cb861cc28f3d400f80b7424308dbd514</msg>
<status status="PASS" starttime="20210322 03:28:47.516" endtime="20210322 03:28:47.516"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Holder Owner :: ${holder_owner}</arg>
</arguments>
<msg timestamp="20210322 03:28:47.517" level="INFO">Holder Owner :: 6aa6f9835dbf463d8b97c18e26ea4aac</msg>
<status status="PASS" starttime="20210322 03:28:47.516" endtime="20210322 03:28:47.517"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Account Owner :: ${account_owner}</arg>
</arguments>
<msg timestamp="20210322 03:28:47.517" level="INFO">Account Owner :: 8cac0d77b3a840a08db589b0c0f23910</msg>
<status status="PASS" starttime="20210322 03:28:47.517" endtime="20210322 03:28:47.517"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Account Number Owner :: ${account_number_owner}</arg>
</arguments>
<msg timestamp="20210322 03:28:47.518" level="INFO">Account Number Owner :: 95835209</msg>
<status status="PASS" starttime="20210322 03:28:47.518" endtime="20210322 03:28:47.518"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>National Registration Holder Owner :: ${national_registration_owner}</arg>
</arguments>
<msg timestamp="20210322 03:28:47.519" level="INFO">National Registration Holder Owner :: 09178432588</msg>
<status status="PASS" starttime="20210322 03:28:47.519" endtime="20210322 03:28:47.519"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Entry Owner :: ${entry_owner}</arg>
</arguments>
<msg timestamp="20210322 03:28:47.519" level="INFO">Entry Owner :: cb861cc28f3d400f80b7424308dbd514</msg>
<status status="PASS" starttime="20210322 03:28:47.519" endtime="20210322 03:28:47.520"></status>
</kw>
<kw name="buscar verification code" library="pix_dict_verification_code">
<arguments>
<arg>${holder_owner}</arg>
<arg>${account_owner}</arg>
<arg>${entry_owner}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 03:28:47.522" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 03:28:47.521" endtime="20210322 03:28:47.522"></status>
</kw>
<status status="PASS" starttime="20210322 03:28:47.521" endtime="20210322 03:28:47.523"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/admin/internal_operation/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries/${entry_external_key}/code</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:28:47.523" level="INFO">GET Request using : uri=/admin/internal_operation/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/6aa6f9835dbf463d8b97c18e26ea4aac/accounts/8cac0d77b3a840a08db589b0c0f23910/entries/cb861cc28f3d400f80b7424308dbd514/code, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 03:28:48.173" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:28:47.523" endtime="20210322 03:28:48.173"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:28:48.176" level="INFO">{'code': '3083'}</msg>
<status status="PASS" starttime="20210322 03:28:48.175" endtime="20210322 03:28:48.176"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:28:48.179" level="INFO">f285f484e1a5784c</msg>
<status status="PASS" starttime="20210322 03:28:48.177" endtime="20210322 03:28:48.179"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 03:28:48.181" level="INFO">200</msg>
<status status="PASS" starttime="20210322 03:28:48.180" endtime="20210322 03:28:48.181"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:28:48.183" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:28:48.182" endtime="20210322 03:28:48.183"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["code"]}</arg>
</arguments>
<assign>
<var>${verification_code}</var>
</assign>
<msg timestamp="20210322 03:28:48.185" level="INFO">${verification_code} = 3083</msg>
<status status="PASS" starttime="20210322 03:28:48.183" endtime="20210322 03:28:48.185"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${verification_code}</arg>
</arguments>
<msg timestamp="20210322 03:28:48.186" level="INFO">${verification_code} = 3083</msg>
<status status="PASS" starttime="20210322 03:28:48.186" endtime="20210322 03:28:48.187"></status>
</kw>
<status status="PASS" starttime="20210322 03:28:47.520" endtime="20210322 03:28:48.187"></status>
</kw>
<kw name="confirmar propriedade da chave pix" library="pix_dict_confirm_propriety">
<arguments>
<arg>${verification_code}</arg>
<arg>${holder_owner}</arg>
<arg>${account_owner}</arg>
<arg>${entry_owner}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 03:28:48.191" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 03:28:48.190" endtime="20210322 03:28:48.192"></status>
</kw>
<status status="PASS" starttime="20210322 03:28:48.189" endtime="20210322 03:28:48.192"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:28:48.193" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 03:28:48.193" endtime="20210322 03:28:48.193"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"code": "${verification_code}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 03:28:48.194" level="INFO">${body} = { "code": "3083" }</msg>
<status status="PASS" starttime="20210322 03:28:48.194" endtime="20210322 03:28:48.195"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries/${entry_external_key}/ownership</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:28:48.196" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/6aa6f9835dbf463d8b97c18e26ea4aac/accounts/8cac0d77b3a840a08db589b0c0f23910/entries/cb861cc28f3d400f80b7424308dbd514/ownership, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "code": "3083" } 
json=None</msg>
<msg timestamp="20210322 03:28:49.857" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:28:48.195" endtime="20210322 03:28:49.857"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:28:49.860" level="INFO">{'id': 'cb861cc28f3d400f80b7424308dbd514', 'status': 'active', 'created_at': '2021-03-22T03:28:48.358', 'updated_at': '2021-03-22T03:28:50.736', 'key': {'value': 'hcardoso@ferreira.org', 'type': 'email'}, 'account': {'id': '8cac0d77b3a840a08db589b0c0f23910', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': '6aa6f9835dbf463d8b97c18e26ea4aac', 'owner': {'name': 'Holder de teste', 'national_registration': '09178432588', 'type': 'individual'}, 'routing_number': '001', 'number': '95835209', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}, 'resource': 'pix.entry'}</msg>
<status status="PASS" starttime="20210322 03:28:49.858" endtime="20210322 03:28:49.861"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:28:49.863" level="INFO">6999241e5fd96a26</msg>
<status status="PASS" starttime="20210322 03:28:49.862" endtime="20210322 03:28:49.863"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 03:28:49.865" level="INFO">201</msg>
<status status="PASS" starttime="20210322 03:28:49.864" endtime="20210322 03:28:49.865"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:28:49.866" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:28:49.866" endtime="20210322 03:28:49.866"></status>
</kw>
<status status="PASS" starttime="20210322 03:28:48.188" endtime="20210322 03:28:49.867"></status>
</kw>
<kw name="validar ativação da chave de endereçamento" library="asserts">
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["status"]}</arg>
<arg>active</arg>
</arguments>
<status status="PASS" starttime="20210322 03:28:49.868" endtime="20210322 03:28:49.869"></status>
</kw>
<status status="PASS" starttime="20210322 03:28:49.867" endtime="20210322 03:28:49.870"></status>
</kw>
<kw name="criar holder individual ativo" library="accreditation_create_holder_active">
<kw name="conectar accreditation" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accreditation</arg>
<arg>url=${accreditation_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 03:28:49.873" level="INFO">Creating Session using : alias=accreditation, url=https://banking-accreditation-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 03:28:49.872" endtime="20210322 03:28:49.873"></status>
</kw>
<status status="PASS" starttime="20210322 03:28:49.871" endtime="20210322 03:28:49.874"></status>
</kw>
<kw name="Cpf" library="FakerLibrary">
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 03:28:49.875" level="INFO">${national_registration} = 865.741.203-90</msg>
<status status="PASS" starttime="20210322 03:28:49.874" endtime="20210322 03:28:49.875"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${national_registration}</arg>
<arg>.</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 03:28:49.876" level="INFO">${national_registration} = 865741203-90</msg>
<status status="PASS" starttime="20210322 03:28:49.875" endtime="20210322 03:28:49.876"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${national_registration}</arg>
<arg>-</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 03:28:49.877" level="INFO">${national_registration} = 86574120390</msg>
<status status="PASS" starttime="20210322 03:28:49.876" endtime="20210322 03:28:49.877"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${national_registration}</arg>
</arguments>
<msg timestamp="20210322 03:28:49.878" level="INFO">${national_registration} = 86574120390</msg>
<status status="PASS" starttime="20210322 03:28:49.877" endtime="20210322 03:28:49.878"></status>
</kw>
<kw name="Rg" library="FakerLibrary">
<doc>Brazilian RG, return plain numbers.
Check:  https://www.ngmatematica.com/2014/02/como-determinar-o-digito-verificador-do.html</doc>
<assign>
<var>${identity_card}</var>
</assign>
<msg timestamp="20210322 03:28:49.879" level="INFO">${identity_card} = 283650175</msg>
<status status="PASS" starttime="20210322 03:28:49.878" endtime="20210322 03:28:49.879"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${identity_card}</arg>
</arguments>
<msg timestamp="20210322 03:28:49.880" level="INFO">${identity_card} = 283650175</msg>
<status status="PASS" starttime="20210322 03:28:49.879" endtime="20210322 03:28:49.880"></status>
</kw>
<kw name="criar holder individual" library="accreditation_post_holder_individual">
<arguments>
<arg>holder_type=individual</arg>
<arg>holder_name=${holder_name}</arg>
<arg>email=${email}</arg>
<arg>national_registration=${national_registration}</arg>
<arg>revenue=${revenue}</arg>
<arg>birthday=${birthday}</arg>
<arg>mothers_name=${mothers_name}</arg>
<arg>identity_card=${identity_card}</arg>
<arg>pep=false</arg>
<arg>cbo=${cbo}</arg>
</arguments>
<kw name="conectar accreditation" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accreditation</arg>
<arg>url=${accreditation_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 03:28:49.883" level="INFO">Creating Session using : alias=accreditation, url=https://banking-accreditation-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 03:28:49.882" endtime="20210322 03:28:49.883"></status>
</kw>
<status status="PASS" starttime="20210322 03:28:49.882" endtime="20210322 03:28:49.884"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_type}</arg>
</arguments>
<msg timestamp="20210322 03:28:49.884" level="INFO">${holder_type} = individual</msg>
<status status="PASS" starttime="20210322 03:28:49.884" endtime="20210322 03:28:49.884"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_name}</arg>
</arguments>
<msg timestamp="20210322 03:28:49.886" level="INFO">${holder_name} = Holder de teste</msg>
<status status="PASS" starttime="20210322 03:28:49.885" endtime="20210322 03:28:49.886"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:28:49.886" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 03:28:49.886" endtime="20210322 03:28:49.887"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "${holder_type}",</arg>
<arg>"name": "${holder_name}",</arg>
<arg>"email": "${email}",</arg>
<arg>"national_registration": "${national_registration}",</arg>
<arg>"revenue": ${revenue},</arg>
<arg>"birthday": "${birthday}",</arg>
<arg>"mothers_name": "${mothers_name}",</arg>
<arg>"identity_card": "${identity_card}",</arg>
<arg>"pep": false,</arg>
<arg>"cbo": ${cbo}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 03:28:49.888" level="INFO">${body} = { "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "86574120390", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder",...</msg>
<status status="PASS" starttime="20210322 03:28:49.887" endtime="20210322 03:28:49.888"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:28:49.889" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "86574120390", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder", "identity_card": "283650175", "pep": false, "cbo": 821450 } 
json=None</msg>
<msg timestamp="20210322 03:28:50.541" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:28:49.888" endtime="20210322 03:28:50.541"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:28:50.544" level="INFO">{'id': '0563bd20fd5a4fabab3a1104a4991b72', 'name': 'Holder de teste', 'revenue': 5500.0, 'email': 'teste@teste.com.br', 'status': 'waiting_info_and_documents', 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'marketplace_name': 'Marketplace de Teste', 'created_at': '2021-03-22T03:28:51.394248', 'updated_at': '2021-03-22T03:28:51.39425', 'type': 'individual', 'national_registration': '86574120390', 'birthday': '1988-04-23', 'mothers_name': 'Mãe do Holder', 'identity_card': '283650175', 'pep': False, 'cbo': '821450', '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/0563bd20fd5a4fabab3a1104a4991b72', 'type': 'GET'}, 'phones': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/0563bd20fd5a4fabab3a1104a4991b72/phones', 'type': 'GET'}, 'addresses': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/0563bd20fd5a4fabab3a1104a4991b72/addresses', 'type': 'GET'}, 'documents': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/0563bd20fd5a4fabab3a1104a4991b72/documents', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 03:28:50.542" endtime="20210322 03:28:50.545"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:28:50.547" level="INFO">0280872aaa8fa10a</msg>
<status status="PASS" starttime="20210322 03:28:50.546" endtime="20210322 03:28:50.547"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${body}</arg>
</arguments>
<msg timestamp="20210322 03:28:50.549" level="INFO">{ "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "86574120390", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder", "identity_card": "283650175", "pep": false, "cbo": 821450 }</msg>
<status status="PASS" starttime="20210322 03:28:50.548" endtime="20210322 03:28:50.550"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:28:50.552" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:28:50.551" endtime="20210322 03:28:50.553"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${holder_external_key}</var>
</assign>
<msg timestamp="20210322 03:28:50.555" level="INFO">${holder_external_key} = 0563bd20fd5a4fabab3a1104a4991b72</msg>
<status status="PASS" starttime="20210322 03:28:50.554" endtime="20210322 03:28:50.555"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_external_key}</arg>
</arguments>
<msg timestamp="20210322 03:28:50.557" level="INFO">${holder_external_key} = 0563bd20fd5a4fabab3a1104a4991b72</msg>
<status status="PASS" starttime="20210322 03:28:50.556" endtime="20210322 03:28:50.557"></status>
</kw>
<status status="PASS" starttime="20210322 03:28:49.880" endtime="20210322 03:28:50.557"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_name}</arg>
</arguments>
<msg timestamp="20210322 03:28:50.558" level="INFO">${holder_name} = Holder de teste</msg>
<status status="PASS" starttime="20210322 03:28:50.558" endtime="20210322 03:28:50.559"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 03:28:50.560" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:28:50.559" endtime="20210322 03:28:50.560"></status>
</kw>
<kw name="criar holder phone" library="accreditation_post_holder_phone">
<arguments>
<arg>21</arg>
<arg>51</arg>
<arg>996221236</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:28:50.562" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 03:28:50.562" endtime="20210322 03:28:50.562"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"area_code": "${phone_area_code}",</arg>
<arg>"country_code": "${phone_country_code}",</arg>
<arg>"number": "${phone_number}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 03:28:50.564" level="INFO">${body} = { "area_code": "21", "country_code": "51", "number": "996221236" }</msg>
<status status="PASS" starttime="20210322 03:28:50.563" endtime="20210322 03:28:50.564"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/phones</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:28:50.565" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/0563bd20fd5a4fabab3a1104a4991b72/phones, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "area_code": "21", "country_code": "51", "number": "996221236" } 
json=None</msg>
<msg timestamp="20210322 03:28:50.781" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:28:50.564" endtime="20210322 03:28:50.781"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:28:50.784" level="INFO">{'id': '06b616402b8a4fbd8b67224a38a75446', 'area_code': '21', 'country_code': '51', 'number': '996221236', 'main': True, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/0563bd20fd5a4fabab3a1104a4991b72/phones/06b616402b8a4fbd8b67224a38a75446', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/0563bd20fd5a4fabab3a1104a4991b72', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 03:28:50.782" endtime="20210322 03:28:50.784"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:28:50.786" level="INFO">fe6e95ecc03f4ae4</msg>
<status status="PASS" starttime="20210322 03:28:50.785" endtime="20210322 03:28:50.787"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:28:50.789" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:28:50.788" endtime="20210322 03:28:50.789"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${phone_external_key}</var>
</assign>
<msg timestamp="20210322 03:28:50.790" level="INFO">${phone_external_key} = 06b616402b8a4fbd8b67224a38a75446</msg>
<status status="PASS" starttime="20210322 03:28:50.790" endtime="20210322 03:28:50.792"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${phone_external_key}</arg>
</arguments>
<msg timestamp="20210322 03:28:50.793" level="INFO">${phone_external_key} = 06b616402b8a4fbd8b67224a38a75446</msg>
<status status="PASS" starttime="20210322 03:28:50.792" endtime="20210322 03:28:50.793"></status>
</kw>
<status status="PASS" starttime="20210322 03:28:50.560" endtime="20210322 03:28:50.793"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 03:28:50.794" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:28:50.794" endtime="20210322 03:28:50.794"></status>
</kw>
<kw name="criar holder address" library="accreditation_post_holder_address">
<arguments>
<arg>Rio de Janeiro</arg>
<arg>Rio de Janeiro</arg>
<arg>Brasil</arg>
<arg>Bairro de Testes</arg>
<arg>Rua de Testes</arg>
<arg>90</arg>
<arg>apto 200</arg>
<arg>21550987</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:28:50.796" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 03:28:50.796" endtime="20210322 03:28:50.796"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"city": "${city}",</arg>
<arg>"state": "${state}",</arg>
<arg>"country": "${country}",</arg>
<arg>"neighborhood": "${neighborhood}",</arg>
<arg>"street": "${street}",</arg>
<arg>"number": "${number}",</arg>
<arg>"complement": "${complement}",</arg>
<arg>"postal_code": "${postal_code}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 03:28:50.798" level="INFO">${body} = { "city": "Rio de Janeiro", "state": "Rio de Janeiro", "country": "Brasil", "neighborhood": "Bairro de Testes", "street": "Rua de Testes", "number": "90", "complement": "apto 200", "postal_code": "215...</msg>
<status status="PASS" starttime="20210322 03:28:50.797" endtime="20210322 03:28:50.798"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/addresses</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:28:50.799" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/0563bd20fd5a4fabab3a1104a4991b72/addresses, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "city": "Rio de Janeiro", "state": "Rio de Janeiro", "country": "Brasil", "neighborhood": "Bairro de Testes", "street": "Rua de Testes", "number": "90", "complement": "apto 200", "postal_code": "21550987" } 
json=None</msg>
<msg timestamp="20210322 03:28:51.063" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:28:50.798" endtime="20210322 03:28:51.064"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:28:51.066" level="INFO">{'id': '64777110027e4c7fbee9432e2d8e2828', 'street': 'Rua de Testes', 'number': '90', 'city': 'Rio de Janeiro', 'complement': 'apto 200', 'state': 'Rio de Janeiro', 'neighborhood': 'Bairro de Testes', 'postal_code': '21550987', 'country': 'Brasil', 'main': True, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/0563bd20fd5a4fabab3a1104a4991b72/addresses/64777110027e4c7fbee9432e2d8e2828', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/0563bd20fd5a4fabab3a1104a4991b72', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 03:28:51.065" endtime="20210322 03:28:51.067"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:28:51.069" level="INFO">2d2a109e64b57dd2</msg>
<status status="PASS" starttime="20210322 03:28:51.068" endtime="20210322 03:28:51.069"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:28:51.073" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:28:51.071" endtime="20210322 03:28:51.074"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${address_external_key}</var>
</assign>
<msg timestamp="20210322 03:28:51.077" level="INFO">${address_external_key} = 64777110027e4c7fbee9432e2d8e2828</msg>
<status status="PASS" starttime="20210322 03:28:51.075" endtime="20210322 03:28:51.077"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${address_external_key}</arg>
</arguments>
<msg timestamp="20210322 03:28:51.078" level="INFO">${address_external_key} = 64777110027e4c7fbee9432e2d8e2828</msg>
<status status="PASS" starttime="20210322 03:28:51.077" endtime="20210322 03:28:51.078"></status>
</kw>
<status status="PASS" starttime="20210322 03:28:50.795" endtime="20210322 03:28:51.079"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 03:28:51.080" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:28:51.079" endtime="20210322 03:28:51.080"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>SELFIE</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:28:51.081" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 03:28:51.081" endtime="20210322 03:28:51.082"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 03:28:51.082" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 03:28:51.085" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 03:28:51.082" endtime="20210322 03:28:51.085"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:28:51.087" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/0563bd20fd5a4fabab3a1104a4991b72/documents?type=SELFIE, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 03:28:51.338" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:28:51.085" endtime="20210322 03:28:51.339"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:28:51.341" level="INFO">{'id': 'c234d34eaec946bba721c1923dea9536', 'document_type': 'selfie', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/0563bd20fd5a4fabab3a1104a4991b72/documents/c234d34eaec946bba721c1923dea9536', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/0563bd20fd5a4fabab3a1104a4991b72', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/0563bd20fd5a4fabab3a1104a4991b72/documents/c234d34eaec946bba721c1923dea9536/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 03:28:51.340" endtime="20210322 03:28:51.341"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:28:51.343" level="INFO">455fa92eaae66082</msg>
<status status="PASS" starttime="20210322 03:28:51.342" endtime="20210322 03:28:51.343"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:28:51.344" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:28:51.343" endtime="20210322 03:28:51.345"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 03:28:51.346" level="INFO">${document_external_key} = c234d34eaec946bba721c1923dea9536</msg>
<status status="PASS" starttime="20210322 03:28:51.345" endtime="20210322 03:28:51.347"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 03:28:51.348" level="INFO">${document_external_key} = c234d34eaec946bba721c1923dea9536</msg>
<status status="PASS" starttime="20210322 03:28:51.347" endtime="20210322 03:28:51.348"></status>
</kw>
<status status="PASS" starttime="20210322 03:28:51.080" endtime="20210322 03:28:51.348"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 03:28:51.350" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:28:51.349" endtime="20210322 03:28:51.350"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>RG_FRENTE</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:28:51.352" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 03:28:51.351" endtime="20210322 03:28:51.352"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 03:28:51.353" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 03:28:51.355" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 03:28:51.352" endtime="20210322 03:28:51.355"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:28:51.356" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/0563bd20fd5a4fabab3a1104a4991b72/documents?type=RG_FRENTE, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 03:28:51.635" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:28:51.355" endtime="20210322 03:28:51.635"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:28:51.636" level="INFO">{'id': '23408702c07b48dbaf304a9f08c54ed9', 'document_type': 'rg_frente', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/0563bd20fd5a4fabab3a1104a4991b72/documents/23408702c07b48dbaf304a9f08c54ed9', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/0563bd20fd5a4fabab3a1104a4991b72', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/0563bd20fd5a4fabab3a1104a4991b72/documents/23408702c07b48dbaf304a9f08c54ed9/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 03:28:51.635" endtime="20210322 03:28:51.636"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:28:51.637" level="INFO">5e7f6c42c5e43862</msg>
<status status="PASS" starttime="20210322 03:28:51.636" endtime="20210322 03:28:51.637"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:28:51.637" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:28:51.637" endtime="20210322 03:28:51.637"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 03:28:51.638" level="INFO">${document_external_key} = 23408702c07b48dbaf304a9f08c54ed9</msg>
<status status="PASS" starttime="20210322 03:28:51.638" endtime="20210322 03:28:51.638"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 03:28:51.639" level="INFO">${document_external_key} = 23408702c07b48dbaf304a9f08c54ed9</msg>
<status status="PASS" starttime="20210322 03:28:51.639" endtime="20210322 03:28:51.639"></status>
</kw>
<status status="PASS" starttime="20210322 03:28:51.350" endtime="20210322 03:28:51.639"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 03:28:51.640" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:28:51.639" endtime="20210322 03:28:51.640"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>RG_VERSO</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:28:51.641" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 03:28:51.641" endtime="20210322 03:28:51.641"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 03:28:51.642" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 03:28:51.643" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 03:28:51.641" endtime="20210322 03:28:51.643"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:28:51.644" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/0563bd20fd5a4fabab3a1104a4991b72/documents?type=RG_VERSO, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 03:28:51.919" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:28:51.643" endtime="20210322 03:28:51.919"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:28:51.920" level="INFO">{'id': 'ae4c1f58c2a546b3b6d945bed8e6a17f', 'document_type': 'rg_verso', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/0563bd20fd5a4fabab3a1104a4991b72/documents/ae4c1f58c2a546b3b6d945bed8e6a17f', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/0563bd20fd5a4fabab3a1104a4991b72', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/0563bd20fd5a4fabab3a1104a4991b72/documents/ae4c1f58c2a546b3b6d945bed8e6a17f/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 03:28:51.920" endtime="20210322 03:28:51.921"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:28:51.922" level="INFO">ec48a950c014b2e9</msg>
<status status="PASS" starttime="20210322 03:28:51.922" endtime="20210322 03:28:51.922"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:28:51.923" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:28:51.923" endtime="20210322 03:28:51.923"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 03:28:51.924" level="INFO">${document_external_key} = ae4c1f58c2a546b3b6d945bed8e6a17f</msg>
<status status="PASS" starttime="20210322 03:28:51.924" endtime="20210322 03:28:51.924"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 03:28:51.925" level="INFO">${document_external_key} = ae4c1f58c2a546b3b6d945bed8e6a17f</msg>
<status status="PASS" starttime="20210322 03:28:51.925" endtime="20210322 03:28:51.925"></status>
</kw>
<status status="PASS" starttime="20210322 03:28:51.640" endtime="20210322 03:28:51.926"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 03:28:51.927" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:28:51.926" endtime="20210322 03:28:51.927"></status>
</kw>
<kw name="solicitar aprovação do holder" library="accreditation_request_approval">
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:28:51.928" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 03:28:51.928" endtime="20210322 03:28:51.928"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/approval</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:28:51.930" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/0563bd20fd5a4fabab3a1104a4991b72/approval, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data=None 
json=None</msg>
<msg timestamp="20210322 03:28:52.201" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:28:51.929" endtime="20210322 03:28:52.201"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:28:52.204" level="INFO">{'message': 'Approval request accepted successfully. Processing analysis'}</msg>
<status status="PASS" starttime="20210322 03:28:52.202" endtime="20210322 03:28:52.204"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:28:52.206" level="INFO">391e96a4523718c8</msg>
<status status="PASS" starttime="20210322 03:28:52.205" endtime="20210322 03:28:52.206"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:28:52.208" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:28:52.207" endtime="20210322 03:28:52.209"></status>
</kw>
<status status="PASS" starttime="20210322 03:28:51.927" endtime="20210322 03:28:52.209"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 03:28:52.211" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:28:52.210" endtime="20210322 03:28:52.211"></status>
</kw>
<kw name="recebendo notificação de aprovação" library="accreditation_risk_notification">
<kw name="Uuid 4" library="FakerLibrary">
<doc>Generates a random UUID4 string.
:param cast_to: Specify what type the UUID should be cast to. Default is `str`
:type cast_to: callable</doc>
<assign>
<var>${assessment_id}</var>
</assign>
<msg timestamp="20210322 03:28:52.214" level="INFO">${assessment_id} = 8c95443f-cbd6-4bbd-8968-36b88a857e48</msg>
<status status="PASS" starttime="20210322 03:28:52.213" endtime="20210322 03:28:52.214"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>year</arg>
</arguments>
<assign>
<var>${year}</var>
</assign>
<msg timestamp="20210322 03:28:52.216" level="INFO">${year} = 2021</msg>
<status status="PASS" starttime="20210322 03:28:52.215" endtime="20210322 03:28:52.216"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>month</arg>
</arguments>
<assign>
<var>${month}</var>
</assign>
<msg timestamp="20210322 03:28:52.218" level="INFO">${month} = 03</msg>
<status status="PASS" starttime="20210322 03:28:52.217" endtime="20210322 03:28:52.218"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>day</arg>
</arguments>
<assign>
<var>${day}</var>
</assign>
<msg timestamp="20210322 03:28:52.220" level="INFO">${day} = 22</msg>
<status status="PASS" starttime="20210322 03:28:52.219" endtime="20210322 03:28:52.220"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:28:52.222" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 03:28:52.221" endtime="20210322 03:28:52.222"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "risk.assessment.result",</arg>
<arg>"resource": "business.holder",</arg>
<arg>"created_at": "${year}-${month}-${day} 15:28:56.747Z",</arg>
<arg>"marketplace_id": "${marketplace_external_key}",</arg>
<arg>"object": {</arg>
<arg>"result": "APPROVED",</arg>
<arg>"holder_id": "${holder_external_key}",</arg>
<arg>"applicant_id": "${application_external_key}",</arg>
<arg>"assessment_id": "${assessment_id}"</arg>
<arg>}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 03:28:52.224" level="INFO">${body} = { "type": "risk.assessment.result", "resource": "business.holder", "created_at": "2021-03-22 15:28:56.747Z", "marketplace_id": "f71a8951368a4cc085cf7875ff44e61c", "object": { "result": "APPROVED", "ho...</msg>
<status status="PASS" starttime="20210322 03:28:52.223" endtime="20210322 03:28:52.224"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/admin/internal_operation/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/registration/approval</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:28:52.226" level="INFO">POST Request using : uri=/admin/internal_operation/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/0563bd20fd5a4fabab3a1104a4991b72/registration/approval, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "risk.assessment.result", "resource": "business.holder", "created_at": "2021-03-22 15:28:56.747Z", "marketplace_id": "f71a8951368a4cc085cf7875ff44e61c", "object": { "result": "APPROVED", "holder_id": "0563bd20fd5a4fabab3a1104a4991b72", "applicant_id": "bcc25a6751c14b52af1340d40dba78c5", "assessment_id": "8c95443f-cbd6-4bbd-8968-36b88a857e48" } } 
json=None</msg>
<msg timestamp="20210322 03:28:52.420" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:28:52.225" endtime="20210322 03:28:52.420"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:28:52.422" level="INFO">{'message': 'Holder approved successfully'}</msg>
<status status="PASS" starttime="20210322 03:28:52.421" endtime="20210322 03:28:52.422"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:28:52.424" level="INFO">66985732633e2843</msg>
<status status="PASS" starttime="20210322 03:28:52.423" endtime="20210322 03:28:52.424"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:28:52.425" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:28:52.424" endtime="20210322 03:28:52.426"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 03:28:52.427" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:28:52.426" endtime="20210322 03:28:52.427"></status>
</kw>
<status status="PASS" starttime="20210322 03:28:52.212" endtime="20210322 03:28:52.427"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 03:28:52.429" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:28:52.428" endtime="20210322 03:28:52.429"></status>
</kw>
<kw name="buscar account por holder" library="accounts_get_accounts_by_holder">
<kw name="conectar accounts" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accounts</arg>
<arg>url=${account_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 03:28:52.434" level="INFO">Creating Session using : alias=accounts, url=https://banking-accounts-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 03:28:52.433" endtime="20210322 03:28:52.435"></status>
</kw>
<status status="PASS" starttime="20210322 03:28:52.432" endtime="20210322 03:28:52.435"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accounts</arg>
<arg>/marketplaces/${marketplace_external_key}/holders/${holder_external_key}/accounts</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:28:52.436" level="INFO">GET Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/holders/0563bd20fd5a4fabab3a1104a4991b72/accounts, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 03:28:53.090" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:28:52.435" endtime="20210322 03:28:53.090"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:28:53.093" level="INFO">{'items': [{'id': '1f0a101c502640aa831829309965fe96', 'holder': '0563bd20fd5a4fabab3a1104a4991b72', 'balance': '0.00', 'currency': 'BRL', 'routing_number': '001', 'number': '205009696', 'status': 'active', 'metadata': {}, 'created_at': '2021-03-22T06:28:53.271452', 'updated_at': '2021-03-22T06:28:53.271452', 'primary': True, 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'uri': '/v2/marketplaces/f71a8951368a4cc085cf7875ff44e61c/accounts/1f0a101c502640aa831829309965fe96', 'resource': 'payment_account'}], 'has_more': False, 'limit': 100, 'total_pages': 1, 'page': 1, 'offset': 0, 'total': '1', 'query_count': '1'}</msg>
<status status="PASS" starttime="20210322 03:28:53.091" endtime="20210322 03:28:53.093"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:28:53.095" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:28:53.094" endtime="20210322 03:28:53.096"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["id"]}</arg>
</arguments>
<assign>
<var>${account_external_key}</var>
</assign>
<msg timestamp="20210322 03:28:53.098" level="INFO">${account_external_key} = 1f0a101c502640aa831829309965fe96</msg>
<status status="PASS" starttime="20210322 03:28:53.096" endtime="20210322 03:28:53.098"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_external_key}</arg>
</arguments>
<msg timestamp="20210322 03:28:53.099" level="INFO">${account_external_key} = 1f0a101c502640aa831829309965fe96</msg>
<status status="PASS" starttime="20210322 03:28:53.098" endtime="20210322 03:28:53.099"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["number"]}</arg>
</arguments>
<assign>
<var>${account_number}</var>
</assign>
<msg timestamp="20210322 03:28:53.101" level="INFO">${account_number} = 205009696</msg>
<status status="PASS" starttime="20210322 03:28:53.100" endtime="20210322 03:28:53.101"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_number}</arg>
</arguments>
<msg timestamp="20210322 03:28:53.103" level="INFO">${account_number} = 205009696</msg>
<status status="PASS" starttime="20210322 03:28:53.102" endtime="20210322 03:28:53.103"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["routing_number"]}</arg>
</arguments>
<assign>
<var>${account_routing_number}</var>
</assign>
<msg timestamp="20210322 03:28:53.104" level="INFO">${account_routing_number} = 001</msg>
<status status="PASS" starttime="20210322 03:28:53.103" endtime="20210322 03:28:53.104"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_routing_number}</arg>
</arguments>
<msg timestamp="20210322 03:28:53.105" level="INFO">${account_routing_number} = 001</msg>
<status status="PASS" starttime="20210322 03:28:53.105" endtime="20210322 03:28:53.106"></status>
</kw>
<status status="PASS" starttime="20210322 03:28:52.431" endtime="20210322 03:28:53.106"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 03:28:53.107" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:28:53.106" endtime="20210322 03:28:53.107"></status>
</kw>
<status status="PASS" starttime="20210322 03:28:49.870" endtime="20210322 03:28:53.107"></status>
</kw>
<kw name="criar chave pix" library="pix_dict_create_entry">
<arguments>
<arg>email</arg>
<arg>${email_pix}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 03:28:53.110" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 03:28:53.109" endtime="20210322 03:28:53.110"></status>
</kw>
<status status="PASS" starttime="20210322 03:28:53.108" endtime="20210322 03:28:53.110"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${type}</arg>
</arguments>
<msg timestamp="20210322 03:28:53.111" level="INFO">${type} = email</msg>
<status status="PASS" starttime="20210322 03:28:53.111" endtime="20210322 03:28:53.111"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210322 03:28:53.112" level="INFO">${value} = hcardoso@ferreira.org</msg>
<status status="PASS" starttime="20210322 03:28:53.112" endtime="20210322 03:28:53.112"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:28:53.113" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 03:28:53.112" endtime="20210322 03:28:53.113"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "${type}",</arg>
<arg>"value": "${value}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 03:28:53.114" level="INFO">${body} = { "type": "email", "value": "hcardoso@ferreira.org" }</msg>
<status status="PASS" starttime="20210322 03:28:53.113" endtime="20210322 03:28:53.114"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:28:53.115" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/0563bd20fd5a4fabab3a1104a4991b72/accounts/1f0a101c502640aa831829309965fe96/entries, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "email", "value": "hcardoso@ferreira.org" } 
json=None</msg>
<msg timestamp="20210322 03:28:53.756" level="INFO">${response} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20210322 03:28:53.114" endtime="20210322 03:28:53.757"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:28:53.759" level="INFO">{'id': 'a5d0b285bd7a43e5829f97e235e29c14', 'status': 'waiting_ownership_verification', 'created_at': '2021-03-22T03:28:54.626', 'updated_at': '2021-03-22T03:28:54.626', 'key': {'value': 'hcardoso@ferreira.org', 'type': 'email'}, 'account': {'id': '1f0a101c502640aa831829309965fe96', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': '0563bd20fd5a4fabab3a1104a4991b72', 'owner': {'name': 'Holder de teste', 'national_registration': '86574120390', 'type': 'individual'}, 'routing_number': '001', 'number': '205009696', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}, 'resource': 'pix.entry'}</msg>
<status status="PASS" starttime="20210322 03:28:53.758" endtime="20210322 03:28:53.760"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:28:53.762" level="INFO">73f0c23c14af8e31</msg>
<status status="PASS" starttime="20210322 03:28:53.761" endtime="20210322 03:28:53.762"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 03:28:53.764" level="INFO">202</msg>
<status status="PASS" starttime="20210322 03:28:53.763" endtime="20210322 03:28:53.764"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:28:53.765" level="INFO">${response} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20210322 03:28:53.765" endtime="20210322 03:28:53.766"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${entry_external_key}</var>
</assign>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:28:53.768" endtime="20210322 03:28:53.770"></status>
</kw>
<msg timestamp="20210322 03:28:53.770" level="INFO">${entry_external_key} = a5d0b285bd7a43e5829f97e235e29c14</msg>
<status status="PASS" starttime="20210322 03:28:53.766" endtime="20210322 03:28:53.770"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${entry_external_key}</arg>
</arguments>
<msg timestamp="20210322 03:28:53.770" level="INFO">${entry_external_key} = a5d0b285bd7a43e5829f97e235e29c14</msg>
<status status="PASS" starttime="20210322 03:28:53.770" endtime="20210322 03:28:53.770"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["key"]["value"]}</arg>
</arguments>
<assign>
<var>${entry_key_value}</var>
</assign>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["key"]["value"]}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:28:53.772" endtime="20210322 03:28:53.773"></status>
</kw>
<msg timestamp="20210322 03:28:53.773" level="INFO">${entry_key_value} = hcardoso@ferreira.org</msg>
<status status="PASS" starttime="20210322 03:28:53.771" endtime="20210322 03:28:53.773"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${entry_key_value}</arg>
</arguments>
<msg timestamp="20210322 03:28:53.774" level="INFO">${entry_key_value} = hcardoso@ferreira.org</msg>
<status status="PASS" starttime="20210322 03:28:53.774" endtime="20210322 03:28:53.774"></status>
</kw>
<status status="PASS" starttime="20210322 03:28:53.108" endtime="20210322 03:28:53.774"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${holder_external_key}</arg>
</arguments>
<assign>
<var>${holder_claimer}</var>
</assign>
<msg timestamp="20210322 03:28:53.775" level="INFO">${holder_claimer} = 0563bd20fd5a4fabab3a1104a4991b72</msg>
<status status="PASS" starttime="20210322 03:28:53.775" endtime="20210322 03:28:53.775"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${account_external_key}</arg>
</arguments>
<assign>
<var>${account_claimer}</var>
</assign>
<msg timestamp="20210322 03:28:53.776" level="INFO">${account_claimer} = 1f0a101c502640aa831829309965fe96</msg>
<status status="PASS" starttime="20210322 03:28:53.775" endtime="20210322 03:28:53.776"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${entry_external_key}</arg>
</arguments>
<assign>
<var>${entry_claimer}</var>
</assign>
<msg timestamp="20210322 03:28:53.777" level="INFO">${entry_claimer} = a5d0b285bd7a43e5829f97e235e29c14</msg>
<status status="PASS" starttime="20210322 03:28:53.776" endtime="20210322 03:28:53.777"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Holder Claimer :: ${holder_claimer}</arg>
</arguments>
<msg timestamp="20210322 03:28:53.777" level="INFO">Holder Claimer :: 0563bd20fd5a4fabab3a1104a4991b72</msg>
<status status="PASS" starttime="20210322 03:28:53.777" endtime="20210322 03:28:53.778"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Account Claimer :: ${account_claimer}</arg>
</arguments>
<msg timestamp="20210322 03:28:53.778" level="INFO">Account Claimer :: 1f0a101c502640aa831829309965fe96</msg>
<status status="PASS" starttime="20210322 03:28:53.778" endtime="20210322 03:28:53.778"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Entry Claimer :: ${entry_claimer}</arg>
</arguments>
<msg timestamp="20210322 03:28:53.779" level="INFO">Entry Claimer :: a5d0b285bd7a43e5829f97e235e29c14</msg>
<status status="PASS" starttime="20210322 03:28:53.779" endtime="20210322 03:28:53.779"></status>
</kw>
<kw name="buscar verification code" library="pix_dict_verification_code">
<arguments>
<arg>${holder_claimer}</arg>
<arg>${account_claimer}</arg>
<arg>${entry_claimer}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 03:28:53.781" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 03:28:53.780" endtime="20210322 03:28:53.781"></status>
</kw>
<status status="PASS" starttime="20210322 03:28:53.780" endtime="20210322 03:28:53.781"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/admin/internal_operation/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries/${entry_external_key}/code</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:28:53.782" level="INFO">GET Request using : uri=/admin/internal_operation/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/0563bd20fd5a4fabab3a1104a4991b72/accounts/1f0a101c502640aa831829309965fe96/entries/a5d0b285bd7a43e5829f97e235e29c14/code, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 03:28:54.417" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:28:53.781" endtime="20210322 03:28:54.417"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:28:54.421" level="INFO">{'code': '0770'}</msg>
<status status="PASS" starttime="20210322 03:28:54.418" endtime="20210322 03:28:54.421"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:28:54.423" level="INFO">7b2fdef35093dec9</msg>
<status status="PASS" starttime="20210322 03:28:54.422" endtime="20210322 03:28:54.423"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 03:28:54.425" level="INFO">200</msg>
<status status="PASS" starttime="20210322 03:28:54.424" endtime="20210322 03:28:54.426"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:28:54.427" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:28:54.426" endtime="20210322 03:28:54.427"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["code"]}</arg>
</arguments>
<assign>
<var>${verification_code}</var>
</assign>
<msg timestamp="20210322 03:28:54.430" level="INFO">${verification_code} = 0770</msg>
<status status="PASS" starttime="20210322 03:28:54.428" endtime="20210322 03:28:54.430"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${verification_code}</arg>
</arguments>
<msg timestamp="20210322 03:28:54.431" level="INFO">${verification_code} = 0770</msg>
<status status="PASS" starttime="20210322 03:28:54.431" endtime="20210322 03:28:54.431"></status>
</kw>
<status status="PASS" starttime="20210322 03:28:53.779" endtime="20210322 03:28:54.431"></status>
</kw>
<kw name="confirmar propriedade da chave pix" library="pix_dict_confirm_propriety">
<arguments>
<arg>${verification_code}</arg>
<arg>${holder_claimer}</arg>
<arg>${account_claimer}</arg>
<arg>${entry_claimer}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 03:28:54.434" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 03:28:54.434" endtime="20210322 03:28:54.435"></status>
</kw>
<status status="PASS" starttime="20210322 03:28:54.433" endtime="20210322 03:28:54.435"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:28:54.436" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 03:28:54.436" endtime="20210322 03:28:54.436"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"code": "${verification_code}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 03:28:54.437" level="INFO">${body} = { "code": "0770" }</msg>
<status status="PASS" starttime="20210322 03:28:54.436" endtime="20210322 03:28:54.437"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries/${entry_external_key}/ownership</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:28:54.438" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/0563bd20fd5a4fabab3a1104a4991b72/accounts/1f0a101c502640aa831829309965fe96/entries/a5d0b285bd7a43e5829f97e235e29c14/ownership, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "code": "0770" } 
json=None</msg>
<msg timestamp="20210322 03:28:55.877" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:28:54.437" endtime="20210322 03:28:55.877"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:28:55.880" level="INFO">{'id': 'a5d0b285bd7a43e5829f97e235e29c14', 'status': 'waiting_ownership_claiming', 'created_at': '2021-03-22T03:28:54.626', 'updated_at': '2021-03-22T03:28:56.753', 'key': {'value': 'hcardoso@ferreira.org', 'type': 'email'}, 'account': {'id': '1f0a101c502640aa831829309965fe96', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': '0563bd20fd5a4fabab3a1104a4991b72', 'owner': {'name': 'Holder de teste', 'national_registration': '86574120390', 'type': 'individual'}, 'routing_number': '001', 'number': '205009696', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}, 'resource': 'pix.entry'}</msg>
<status status="PASS" starttime="20210322 03:28:55.879" endtime="20210322 03:28:55.880"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:28:55.881" level="INFO">8e09cb8599893388</msg>
<status status="PASS" starttime="20210322 03:28:55.880" endtime="20210322 03:28:55.881"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 03:28:55.882" level="INFO">201</msg>
<status status="PASS" starttime="20210322 03:28:55.882" endtime="20210322 03:28:55.883"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:28:55.884" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:28:55.883" endtime="20210322 03:28:55.884"></status>
</kw>
<status status="PASS" starttime="20210322 03:28:54.432" endtime="20210322 03:28:55.884"></status>
</kw>
<kw name="validar status da chave após criação da reivindicação" library="asserts">
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["status"]}</arg>
<arg>waiting_ownership_claiming</arg>
</arguments>
<status status="PASS" starttime="20210322 03:28:55.886" endtime="20210322 03:28:55.886"></status>
</kw>
<status status="PASS" starttime="20210322 03:28:55.885" endtime="20210322 03:28:55.886"></status>
</kw>
<kw name="criar reivindicação de posse" library="pix_dict_create_claims">
<arguments>
<arg>${holder_claimer}</arg>
<arg>${account_claimer}</arg>
<arg>${entry_claimer}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 03:28:55.889" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 03:28:55.889" endtime="20210322 03:28:55.889"></status>
</kw>
<status status="PASS" starttime="20210322 03:28:55.888" endtime="20210322 03:28:55.890"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries/${entry_external_key}/claims</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:28:55.891" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/0563bd20fd5a4fabab3a1104a4991b72/accounts/1f0a101c502640aa831829309965fe96/entries/a5d0b285bd7a43e5829f97e235e29c14/claims, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 03:28:57.524" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:28:55.890" endtime="20210322 03:28:57.524"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:28:57.526" level="INFO">{'id': '1b378292af8142b78c6865af551c2ff3', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'created_at': '2021-03-22T03:28:58.401', 'updated_at': '2021-03-22T03:28:58.401', 'type': 'OWNERSHIP', 'status': 'open', 'key': {'value': 'hcardoso@ferreira.org', 'type': 'email'}, 'claimer': {'name': 'Holder de teste', 'national_registration': '86574120390', 'type': 'individual', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': '0563bd20fd5a4fabab3a1104a4991b72', 'account': {'digital_account_id': '1f0a101c502640aa831829309965fe96', 'routing_number': '001', 'number': '205009696', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}}, 'donor': {'name': 'Holder de teste', 'national_registration': '09178432588', 'type': 'individual', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': '6aa6f9835dbf463d8b97c18e26ea4aac', 'account': {'digital_account_id': '8cac0d77b3a840a08db589b0c0f23910', 'routing_number': '001', 'number': '95835209', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}}, 'completion_period_end': '2021-04-05T06:28:58.000', 'resolution_period_end': '2021-03-29T06:28:58.000', 'resource': 'pix.claim'}</msg>
<status status="PASS" starttime="20210322 03:28:57.525" endtime="20210322 03:28:57.527"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:28:57.528" level="INFO">e205e71b530be8e9</msg>
<status status="PASS" starttime="20210322 03:28:57.527" endtime="20210322 03:28:57.529"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 03:28:57.530" level="INFO">201</msg>
<status status="PASS" starttime="20210322 03:28:57.529" endtime="20210322 03:28:57.530"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:28:57.532" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:28:57.531" endtime="20210322 03:28:57.532"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${claim_external_key}</var>
</assign>
<msg timestamp="20210322 03:28:57.535" level="INFO">${claim_external_key} = 1b378292af8142b78c6865af551c2ff3</msg>
<status status="PASS" starttime="20210322 03:28:57.533" endtime="20210322 03:28:57.535"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${claim_external_key}</arg>
</arguments>
<msg timestamp="20210322 03:28:57.537" level="INFO">${claim_external_key} = 1b378292af8142b78c6865af551c2ff3</msg>
<status status="PASS" starttime="20210322 03:28:57.536" endtime="20210322 03:28:57.537"></status>
</kw>
<status status="PASS" starttime="20210322 03:28:55.887" endtime="20210322 03:28:57.537"></status>
</kw>
<kw name="buscar reivindicação de posse" library="pix_dict_get_claims">
<arguments>
<arg>${holder_claimer}</arg>
<arg>${account_claimer}</arg>
<arg>${claim_external_key}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 03:28:57.541" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 03:28:57.540" endtime="20210322 03:28:57.541"></status>
</kw>
<status status="PASS" starttime="20210322 03:28:57.539" endtime="20210322 03:28:57.541"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/claims/${claim_external_key}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:28:57.542" level="INFO">GET Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/0563bd20fd5a4fabab3a1104a4991b72/accounts/1f0a101c502640aa831829309965fe96/claims/1b378292af8142b78c6865af551c2ff3, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 03:28:58.175" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:28:57.542" endtime="20210322 03:28:58.175"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:28:58.177" level="INFO">{'id': '1b378292af8142b78c6865af551c2ff3', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'created_at': '2021-03-22T03:28:58.401', 'updated_at': '2021-03-22T03:28:58.401', 'type': 'OWNERSHIP', 'status': 'open', 'key': {'value': 'hcardoso@ferreira.org', 'type': 'email'}, 'claimer': {'name': 'Holder de teste', 'national_registration': '86574120390', 'type': 'individual', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': '0563bd20fd5a4fabab3a1104a4991b72', 'account': {'digital_account_id': '1f0a101c502640aa831829309965fe96', 'routing_number': '001', 'number': '205009696', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}}, 'donor': {'name': 'Holder de teste', 'national_registration': '09178432588', 'type': 'individual', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': '6aa6f9835dbf463d8b97c18e26ea4aac', 'account': {'digital_account_id': '8cac0d77b3a840a08db589b0c0f23910', 'routing_number': '001', 'number': '95835209', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}}, 'completion_period_end': '2021-04-05T06:28:58.000', 'resolution_period_end': '2021-03-29T06:28:58.000', 'resource': 'pix.claim'}</msg>
<status status="PASS" starttime="20210322 03:28:58.176" endtime="20210322 03:28:58.177"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:28:58.178" level="INFO">8066ab7e3d5bd694</msg>
<status status="PASS" starttime="20210322 03:28:58.177" endtime="20210322 03:28:58.178"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 03:28:58.179" level="INFO">200</msg>
<status status="PASS" starttime="20210322 03:28:58.179" endtime="20210322 03:28:58.180"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:28:58.181" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:28:58.180" endtime="20210322 03:28:58.181"></status>
</kw>
<status status="PASS" starttime="20210322 03:28:57.538" endtime="20210322 03:28:58.181"></status>
</kw>
<kw name="validar status da reivindicação" library="asserts">
<arguments>
<arg>open</arg>
</arguments>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["status"]}</arg>
<arg>${claim_status}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:28:58.182" endtime="20210322 03:28:58.183"></status>
</kw>
<status status="PASS" starttime="20210322 03:28:58.182" endtime="20210322 03:28:58.184"></status>
</kw>
<kw name="receber notificação de reivindicação" library="pix_dict_receive_claim_notification">
<arguments>
<arg>${email_pix}</arg>
<arg>${account_number_owner}</arg>
<arg>${national_registration_owner}</arg>
<arg>${holder_name_owner}</arg>
<arg>${claim_external_key}</arg>
<arg>WAITING_RESOLUTION</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 03:28:58.187" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 03:28:58.186" endtime="20210322 03:28:58.188"></status>
</kw>
<status status="PASS" starttime="20210322 03:28:58.186" endtime="20210322 03:28:58.188"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:28:58.189" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 03:28:58.189" endtime="20210322 03:28:58.189"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"data": {</arg>
<arg>"claim": {</arg>
<arg>"type": "OWNERSHIP",</arg>
<arg>"key": "${key_pix}",</arg>
<arg>"key_type": "PHONE",</arg>
<arg>"claimer_account": {</arg>
<arg>"participant": "19468242",</arg>
<arg>"branch": "0001",</arg>
<arg>"account_number": "${account_number}",</arg>
<arg>"account_type": "CACC"</arg>
<arg>},</arg>
<arg>"claimer": {</arg>
<arg>"type": "NATURAL_PERSON",</arg>
<arg>"tax_id_number": "${claimer_tax_id}",</arg>
<arg>"name": "${claimer_name}"</arg>
<arg>},</arg>
<arg>"donor_participant": "19468242",</arg>
<arg>"id": "${claim_external_key}",</arg>
<arg>"status": "${claim_notification_status}",</arg>
<arg>"resolution_period_end": "2020-10-18T10:00:00.000Z",</arg>
<arg>"completion_period_end": "2020-10-25T10:00:00.000Z",</arg>
<arg>"last_modified": "2020-10-17T10:00:00.000Z"</arg>
<arg>}</arg>
<arg>}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 03:28:58.191" level="INFO">${body} = { "data": { "claim": { "type": "OWNERSHIP", "key": "hcardoso@ferreira.org", "key_type": "PHONE", "claimer_account": { "participant": "19468242", "branch": "0001", "account_number": "95835209", "accoun...</msg>
<status status="PASS" starttime="20210322 03:28:58.190" endtime="20210322 03:28:58.191"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/banking/internal/dict/claims</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:28:58.192" level="INFO">POST Request using : uri=/banking/internal/dict/claims, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "data": { "claim": { "type": "OWNERSHIP", "key": "hcardoso@ferreira.org", "key_type": "PHONE", "claimer_account": { "participant": "19468242", "branch": "0001", "account_number": "95835209", "account_type": "CACC" }, "claimer": { "type": "NATURAL_PERSON", "tax_id_number": "09178432588", "name": "Holder de teste" }, "donor_participant": "19468242", "id": "1b378292af8142b78c6865af551c2ff3", "status": "WAITING_RESOLUTION", "resolution_period_end": "2020-10-18T10:00:00.000Z", "completion_period_end": "2020-10-25T10:00:00.000Z", "last_modified": "2020-10-17T10:00:00.000Z" } } } 
json=None</msg>
<msg timestamp="20210322 03:28:58.824" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:28:58.191" endtime="20210322 03:28:58.825"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 03:28:58.827" level="INFO">200</msg>
<status status="PASS" starttime="20210322 03:28:58.826" endtime="20210322 03:28:58.828"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:28:58.830" level="INFO">1653a40df4894ec8</msg>
<status status="PASS" starttime="20210322 03:28:58.829" endtime="20210322 03:28:58.830"></status>
</kw>
<status status="PASS" starttime="20210322 03:28:58.184" endtime="20210322 03:28:58.831"></status>
</kw>
<kw name="buscar reivindicação de posse" library="pix_dict_get_claims">
<arguments>
<arg>${holder_claimer}</arg>
<arg>${account_claimer}</arg>
<arg>${claim_external_key}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 03:28:58.838" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 03:28:58.836" endtime="20210322 03:28:58.840"></status>
</kw>
<status status="PASS" starttime="20210322 03:28:58.835" endtime="20210322 03:28:58.840"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/claims/${claim_external_key}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:28:58.842" level="INFO">GET Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/0563bd20fd5a4fabab3a1104a4991b72/accounts/1f0a101c502640aa831829309965fe96/claims/1b378292af8142b78c6865af551c2ff3, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 03:28:59.480" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:28:58.841" endtime="20210322 03:28:59.480"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:28:59.483" level="INFO">{'id': '1b378292af8142b78c6865af551c2ff3', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'created_at': '2021-03-22T03:28:58.401', 'updated_at': '2021-03-22T03:28:59.704', 'type': 'OWNERSHIP', 'status': 'waiting_resolution', 'key': {'value': 'hcardoso@ferreira.org', 'type': 'email'}, 'claimer': {'name': 'Holder de teste', 'national_registration': '86574120390', 'type': 'individual', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': '0563bd20fd5a4fabab3a1104a4991b72', 'account': {'digital_account_id': '1f0a101c502640aa831829309965fe96', 'routing_number': '001', 'number': '205009696', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}}, 'donor': {'name': 'Holder de teste', 'national_registration': '09178432588', 'type': 'individual', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': '6aa6f9835dbf463d8b97c18e26ea4aac', 'account': {'digital_account_id': '8cac0d77b3a840a08db589b0c0f23910', 'routing_number': '001', 'number': '95835209', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}}, 'completion_period_end': '2021-04-05T06:28:58.000', 'resolution_period_end': '2021-03-29T06:28:58.000', 'resource': 'pix.claim'}</msg>
<status status="PASS" starttime="20210322 03:28:59.481" endtime="20210322 03:28:59.483"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:28:59.486" level="INFO">693f14c59840019a</msg>
<status status="PASS" starttime="20210322 03:28:59.484" endtime="20210322 03:28:59.486"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 03:28:59.489" level="INFO">200</msg>
<status status="PASS" starttime="20210322 03:28:59.488" endtime="20210322 03:28:59.489"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:28:59.491" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:28:59.490" endtime="20210322 03:28:59.491"></status>
</kw>
<status status="PASS" starttime="20210322 03:28:58.832" endtime="20210322 03:28:59.491"></status>
</kw>
<kw name="validar status da reivindicação" library="asserts">
<arguments>
<arg>waiting_resolution</arg>
</arguments>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["status"]}</arg>
<arg>${claim_status}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:28:59.493" endtime="20210322 03:28:59.494"></status>
</kw>
<status status="PASS" starttime="20210322 03:28:59.492" endtime="20210322 03:28:59.495"></status>
</kw>
<kw name="${index} IN RANGE [ 20 ]" type="for">
<kw name="${index} = 0" type="foritem">
<kw name="confirmar reivindicação de posse" library="pix_dict_confirm_claims">
<arguments>
<arg>${holder_owner}</arg>
<arg>${account_owner}</arg>
<arg>${claim_external_key}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 03:28:59.497" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 03:28:59.497" endtime="20210322 03:28:59.498"></status>
</kw>
<status status="PASS" starttime="20210322 03:28:59.496" endtime="20210322 03:28:59.498"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/claims/${claim_external_key}/confirm</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:28:59.500" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/6aa6f9835dbf463d8b97c18e26ea4aac/accounts/8cac0d77b3a840a08db589b0c0f23910/claims/1b378292af8142b78c6865af551c2ff3/confirm, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 03:29:01.134" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20210322 03:28:59.499" endtime="20210322 03:29:01.134"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:29:01.135" level="INFO">{'code': 9997, 'status': 'bad_request', 'type': 'integration_error', 'message': 'Claim operation invalid', 'category': 'unexpected', 'status_code': 400}</msg>
<status status="PASS" starttime="20210322 03:29:01.135" endtime="20210322 03:29:01.136"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:29:01.137" level="INFO">175d73dead5cdf85</msg>
<status status="PASS" starttime="20210322 03:29:01.136" endtime="20210322 03:29:01.137"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 03:29:01.138" level="INFO">400</msg>
<status status="PASS" starttime="20210322 03:29:01.137" endtime="20210322 03:29:01.138"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:29:01.139" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20210322 03:29:01.139" endtime="20210322 03:29:01.139"></status>
</kw>
<status status="PASS" starttime="20210322 03:28:59.495" endtime="20210322 03:29:01.139"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${response.json()["message"]}' == 'Claim confirmed successfully'</arg>
</arguments>
<status status="PASS" starttime="20210322 03:29:01.140" endtime="20210322 03:29:01.141"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10</arg>
</arguments>
<msg timestamp="20210322 03:29:11.143" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20210322 03:29:01.141" endtime="20210322 03:29:11.143"></status>
</kw>
<status status="PASS" starttime="20210322 03:28:59.495" endtime="20210322 03:29:11.143"></status>
</kw>
<kw name="${index} = 1" type="foritem">
<kw name="confirmar reivindicação de posse" library="pix_dict_confirm_claims">
<arguments>
<arg>${holder_owner}</arg>
<arg>${account_owner}</arg>
<arg>${claim_external_key}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 03:29:11.145" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 03:29:11.145" endtime="20210322 03:29:11.146"></status>
</kw>
<status status="PASS" starttime="20210322 03:29:11.144" endtime="20210322 03:29:11.147"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/claims/${claim_external_key}/confirm</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:29:11.147" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/6aa6f9835dbf463d8b97c18e26ea4aac/accounts/8cac0d77b3a840a08db589b0c0f23910/claims/1b378292af8142b78c6865af551c2ff3/confirm, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 03:29:12.743" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20210322 03:29:11.147" endtime="20210322 03:29:12.743"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:29:12.745" level="INFO">{'code': 9997, 'status': 'bad_request', 'type': 'integration_error', 'message': 'Claim operation invalid', 'category': 'unexpected', 'status_code': 400}</msg>
<status status="PASS" starttime="20210322 03:29:12.745" endtime="20210322 03:29:12.745"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:29:12.746" level="INFO">33c22406150d130c</msg>
<status status="PASS" starttime="20210322 03:29:12.745" endtime="20210322 03:29:12.746"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 03:29:12.748" level="INFO">400</msg>
<status status="PASS" starttime="20210322 03:29:12.748" endtime="20210322 03:29:12.748"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:29:12.750" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20210322 03:29:12.748" endtime="20210322 03:29:12.750"></status>
</kw>
<status status="PASS" starttime="20210322 03:29:11.144" endtime="20210322 03:29:12.750"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${response.json()["message"]}' == 'Claim confirmed successfully'</arg>
</arguments>
<status status="PASS" starttime="20210322 03:29:12.750" endtime="20210322 03:29:12.751"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10</arg>
</arguments>
<msg timestamp="20210322 03:29:22.754" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20210322 03:29:12.751" endtime="20210322 03:29:22.755"></status>
</kw>
<status status="PASS" starttime="20210322 03:29:11.143" endtime="20210322 03:29:22.755"></status>
</kw>
<kw name="${index} = 2" type="foritem">
<kw name="confirmar reivindicação de posse" library="pix_dict_confirm_claims">
<arguments>
<arg>${holder_owner}</arg>
<arg>${account_owner}</arg>
<arg>${claim_external_key}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 03:29:22.761" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 03:29:22.759" endtime="20210322 03:29:22.762"></status>
</kw>
<status status="PASS" starttime="20210322 03:29:22.758" endtime="20210322 03:29:22.763"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/claims/${claim_external_key}/confirm</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:29:22.765" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/6aa6f9835dbf463d8b97c18e26ea4aac/accounts/8cac0d77b3a840a08db589b0c0f23910/claims/1b378292af8142b78c6865af551c2ff3/confirm, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 03:29:24.407" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20210322 03:29:22.764" endtime="20210322 03:29:24.407"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:29:24.408" level="INFO">{'code': 9997, 'status': 'bad_request', 'type': 'integration_error', 'message': 'Claim operation invalid', 'category': 'unexpected', 'status_code': 400}</msg>
<status status="PASS" starttime="20210322 03:29:24.408" endtime="20210322 03:29:24.409"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:29:24.409" level="INFO">36a6bc6f0fe4618e</msg>
<status status="PASS" starttime="20210322 03:29:24.409" endtime="20210322 03:29:24.409"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 03:29:24.410" level="INFO">400</msg>
<status status="PASS" starttime="20210322 03:29:24.410" endtime="20210322 03:29:24.410"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:29:24.411" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20210322 03:29:24.411" endtime="20210322 03:29:24.411"></status>
</kw>
<status status="PASS" starttime="20210322 03:29:22.756" endtime="20210322 03:29:24.411"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${response.json()["message"]}' == 'Claim confirmed successfully'</arg>
</arguments>
<status status="PASS" starttime="20210322 03:29:24.411" endtime="20210322 03:29:24.412"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10</arg>
</arguments>
<msg timestamp="20210322 03:29:34.414" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20210322 03:29:24.413" endtime="20210322 03:29:34.414"></status>
</kw>
<status status="PASS" starttime="20210322 03:29:22.755" endtime="20210322 03:29:34.414"></status>
</kw>
<kw name="${index} = 3" type="foritem">
<kw name="confirmar reivindicação de posse" library="pix_dict_confirm_claims">
<arguments>
<arg>${holder_owner}</arg>
<arg>${account_owner}</arg>
<arg>${claim_external_key}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 03:29:34.416" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 03:29:34.415" endtime="20210322 03:29:34.416"></status>
</kw>
<status status="PASS" starttime="20210322 03:29:34.415" endtime="20210322 03:29:34.416"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/claims/${claim_external_key}/confirm</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:29:34.417" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/6aa6f9835dbf463d8b97c18e26ea4aac/accounts/8cac0d77b3a840a08db589b0c0f23910/claims/1b378292af8142b78c6865af551c2ff3/confirm, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 03:29:36.145" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:29:34.416" endtime="20210322 03:29:36.145"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:29:36.145" level="INFO">{'message': 'Claim confirmed successfully'}</msg>
<status status="PASS" starttime="20210322 03:29:36.145" endtime="20210322 03:29:36.145"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:29:36.146" level="INFO">22f47d8d1a39cfeb</msg>
<status status="PASS" starttime="20210322 03:29:36.146" endtime="20210322 03:29:36.146"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 03:29:36.146" level="INFO">200</msg>
<status status="PASS" starttime="20210322 03:29:36.146" endtime="20210322 03:29:36.146"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:29:36.147" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:29:36.146" endtime="20210322 03:29:36.147"></status>
</kw>
<status status="PASS" starttime="20210322 03:29:34.414" endtime="20210322 03:29:36.147"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${response.json()["message"]}' == 'Claim confirmed successfully'</arg>
</arguments>
<msg timestamp="20210322 03:29:36.147" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20210322 03:29:36.147" endtime="20210322 03:29:36.147"></status>
</kw>
<status status="PASS" starttime="20210322 03:29:34.414" endtime="20210322 03:29:36.147"></status>
</kw>
<status status="PASS" starttime="20210322 03:28:59.495" endtime="20210322 03:29:36.147"></status>
</kw>
<kw name="buscar reivindicação de posse" library="pix_dict_get_claims">
<arguments>
<arg>${holder_claimer}</arg>
<arg>${account_claimer}</arg>
<arg>${claim_external_key}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 03:29:36.148" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 03:29:36.148" endtime="20210322 03:29:36.149"></status>
</kw>
<status status="PASS" starttime="20210322 03:29:36.148" endtime="20210322 03:29:36.149"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/claims/${claim_external_key}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:29:36.149" level="INFO">GET Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/0563bd20fd5a4fabab3a1104a4991b72/accounts/1f0a101c502640aa831829309965fe96/claims/1b378292af8142b78c6865af551c2ff3, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 03:29:36.761" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:29:36.149" endtime="20210322 03:29:36.761"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:29:36.761" level="INFO">{'id': '1b378292af8142b78c6865af551c2ff3', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'created_at': '2021-03-22T03:28:58.401', 'updated_at': '2021-03-22T03:29:36.981', 'type': 'OWNERSHIP', 'status': 'confirmed', 'confirm_reason': 'USER_REQUESTED', 'key': {'value': 'hcardoso@ferreira.org', 'type': 'email'}, 'claimer': {'name': 'Holder de teste', 'national_registration': '86574120390', 'type': 'individual', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': '0563bd20fd5a4fabab3a1104a4991b72', 'account': {'digital_account_id': '1f0a101c502640aa831829309965fe96', 'routing_number': '001', 'number': '205009696', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}}, 'donor': {'name': 'Holder de teste', 'national_registration': '09178432588', 'type': 'individual', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': '6aa6f9835dbf463d8b97c18e26ea4aac', 'account': {'digital_account_id': '8cac0d77b3a840a08db589b0c0f23910', 'routing_number': '001', 'number': '95835209', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}}, 'completion_period_end': '2021-03-22T06:29:00.000', 'resolution_period_end': '2021-03-29T06:28:58.000', 'resource': 'pix.claim'}</msg>
<status status="PASS" starttime="20210322 03:29:36.761" endtime="20210322 03:29:36.761"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:29:36.762" level="INFO">b202068b9e678b70</msg>
<status status="PASS" starttime="20210322 03:29:36.762" endtime="20210322 03:29:36.762"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 03:29:36.762" level="INFO">200</msg>
<status status="PASS" starttime="20210322 03:29:36.762" endtime="20210322 03:29:36.762"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:29:36.763" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:29:36.763" endtime="20210322 03:29:36.763"></status>
</kw>
<status status="PASS" starttime="20210322 03:29:36.147" endtime="20210322 03:29:36.763"></status>
</kw>
<kw name="validar status da reivindicação" library="asserts">
<arguments>
<arg>confirmed</arg>
</arguments>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["status"]}</arg>
<arg>${claim_status}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:29:36.764" endtime="20210322 03:29:36.764"></status>
</kw>
<status status="PASS" starttime="20210322 03:29:36.763" endtime="20210322 03:29:36.764"></status>
</kw>
<kw name="receber notificação de reivindicação" library="pix_dict_receive_claim_notification">
<arguments>
<arg>${email_pix}</arg>
<arg>${account_number_owner}</arg>
<arg>${national_registration_owner}</arg>
<arg>${holder_name_owner}</arg>
<arg>${claim_external_key}</arg>
<arg>CONFIRMED</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 03:29:36.766" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 03:29:36.765" endtime="20210322 03:29:36.766"></status>
</kw>
<status status="PASS" starttime="20210322 03:29:36.765" endtime="20210322 03:29:36.766"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:29:36.767" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 03:29:36.766" endtime="20210322 03:29:36.767"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"data": {</arg>
<arg>"claim": {</arg>
<arg>"type": "OWNERSHIP",</arg>
<arg>"key": "${key_pix}",</arg>
<arg>"key_type": "PHONE",</arg>
<arg>"claimer_account": {</arg>
<arg>"participant": "19468242",</arg>
<arg>"branch": "0001",</arg>
<arg>"account_number": "${account_number}",</arg>
<arg>"account_type": "CACC"</arg>
<arg>},</arg>
<arg>"claimer": {</arg>
<arg>"type": "NATURAL_PERSON",</arg>
<arg>"tax_id_number": "${claimer_tax_id}",</arg>
<arg>"name": "${claimer_name}"</arg>
<arg>},</arg>
<arg>"donor_participant": "19468242",</arg>
<arg>"id": "${claim_external_key}",</arg>
<arg>"status": "${claim_notification_status}",</arg>
<arg>"resolution_period_end": "2020-10-18T10:00:00.000Z",</arg>
<arg>"completion_period_end": "2020-10-25T10:00:00.000Z",</arg>
<arg>"last_modified": "2020-10-17T10:00:00.000Z"</arg>
<arg>}</arg>
<arg>}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 03:29:36.768" level="INFO">${body} = { "data": { "claim": { "type": "OWNERSHIP", "key": "hcardoso@ferreira.org", "key_type": "PHONE", "claimer_account": { "participant": "19468242", "branch": "0001", "account_number": "95835209", "accoun...</msg>
<status status="PASS" starttime="20210322 03:29:36.767" endtime="20210322 03:29:36.768"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/banking/internal/dict/claims</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:29:36.769" level="INFO">POST Request using : uri=/banking/internal/dict/claims, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "data": { "claim": { "type": "OWNERSHIP", "key": "hcardoso@ferreira.org", "key_type": "PHONE", "claimer_account": { "participant": "19468242", "branch": "0001", "account_number": "95835209", "account_type": "CACC" }, "claimer": { "type": "NATURAL_PERSON", "tax_id_number": "09178432588", "name": "Holder de teste" }, "donor_participant": "19468242", "id": "1b378292af8142b78c6865af551c2ff3", "status": "CONFIRMED", "resolution_period_end": "2020-10-18T10:00:00.000Z", "completion_period_end": "2020-10-25T10:00:00.000Z", "last_modified": "2020-10-17T10:00:00.000Z" } } } 
json=None</msg>
<msg timestamp="20210322 03:29:37.377" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:29:36.768" endtime="20210322 03:29:37.377"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 03:29:37.378" level="INFO">200</msg>
<status status="PASS" starttime="20210322 03:29:37.378" endtime="20210322 03:29:37.379"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:29:37.380" level="INFO">c9be93a7551c80a2</msg>
<status status="PASS" starttime="20210322 03:29:37.379" endtime="20210322 03:29:37.380"></status>
</kw>
<status status="PASS" starttime="20210322 03:29:36.764" endtime="20210322 03:29:37.380"></status>
</kw>
<kw name="buscar reivindicação de posse" library="pix_dict_get_claims">
<arguments>
<arg>${holder_claimer}</arg>
<arg>${account_claimer}</arg>
<arg>${claim_external_key}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 03:29:37.384" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 03:29:37.383" endtime="20210322 03:29:37.385"></status>
</kw>
<status status="PASS" starttime="20210322 03:29:37.382" endtime="20210322 03:29:37.385"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/claims/${claim_external_key}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:29:37.387" level="INFO">GET Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/0563bd20fd5a4fabab3a1104a4991b72/accounts/1f0a101c502640aa831829309965fe96/claims/1b378292af8142b78c6865af551c2ff3, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 03:29:37.987" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:29:37.386" endtime="20210322 03:29:37.987"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:29:37.988" level="INFO">{'id': '1b378292af8142b78c6865af551c2ff3', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'created_at': '2021-03-22T03:28:58.401', 'updated_at': '2021-03-22T03:29:38.255', 'type': 'OWNERSHIP', 'status': 'waiting_entry_ownership_confirm_to_complete', 'confirm_reason': 'USER_REQUESTED', 'key': {'value': 'hcardoso@ferreira.org', 'type': 'email'}, 'claimer': {'name': 'Holder de teste', 'national_registration': '86574120390', 'type': 'individual', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': '0563bd20fd5a4fabab3a1104a4991b72', 'account': {'digital_account_id': '1f0a101c502640aa831829309965fe96', 'routing_number': '001', 'number': '205009696', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}}, 'donor': {'name': 'Holder de teste', 'national_registration': '09178432588', 'type': 'individual', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': '6aa6f9835dbf463d8b97c18e26ea4aac', 'account': {'digital_account_id': '8cac0d77b3a840a08db589b0c0f23910', 'routing_number': '001', 'number': '95835209', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}}, 'completion_period_end': '2021-03-22T06:29:00.000', 'resolution_period_end': '2021-03-29T06:28:58.000', 'resource': 'pix.claim'}</msg>
<status status="PASS" starttime="20210322 03:29:37.987" endtime="20210322 03:29:37.988"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:29:37.989" level="INFO">db1b815a899e05af</msg>
<status status="PASS" starttime="20210322 03:29:37.988" endtime="20210322 03:29:37.989"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 03:29:37.990" level="INFO">200</msg>
<status status="PASS" starttime="20210322 03:29:37.989" endtime="20210322 03:29:37.990"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:29:37.990" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:29:37.990" endtime="20210322 03:29:37.990"></status>
</kw>
<status status="PASS" starttime="20210322 03:29:37.381" endtime="20210322 03:29:37.991"></status>
</kw>
<kw name="validar status da reivindicação" library="asserts">
<arguments>
<arg>waiting_entry_ownership_confirm_to_complete</arg>
</arguments>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["status"]}</arg>
<arg>${claim_status}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:29:37.991" endtime="20210322 03:29:37.992"></status>
</kw>
<status status="PASS" starttime="20210322 03:29:37.991" endtime="20210322 03:29:37.992"></status>
</kw>
<kw name="buscar verification code" library="pix_dict_verification_code">
<arguments>
<arg>${holder_claimer}</arg>
<arg>${account_claimer}</arg>
<arg>${entry_claimer}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 03:29:37.994" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 03:29:37.994" endtime="20210322 03:29:37.994"></status>
</kw>
<status status="PASS" starttime="20210322 03:29:37.994" endtime="20210322 03:29:37.994"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/admin/internal_operation/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries/${entry_external_key}/code</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:29:37.995" level="INFO">GET Request using : uri=/admin/internal_operation/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/0563bd20fd5a4fabab3a1104a4991b72/accounts/1f0a101c502640aa831829309965fe96/entries/a5d0b285bd7a43e5829f97e235e29c14/code, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 03:29:38.591" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:29:37.995" endtime="20210322 03:29:38.591"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:29:38.592" level="INFO">{'code': '6281'}</msg>
<status status="PASS" starttime="20210322 03:29:38.592" endtime="20210322 03:29:38.592"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:29:38.592" level="INFO">69e88f093e89fbbe</msg>
<status status="PASS" starttime="20210322 03:29:38.592" endtime="20210322 03:29:38.593"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 03:29:38.593" level="INFO">200</msg>
<status status="PASS" starttime="20210322 03:29:38.593" endtime="20210322 03:29:38.593"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:29:38.593" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:29:38.593" endtime="20210322 03:29:38.594"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["code"]}</arg>
</arguments>
<assign>
<var>${verification_code}</var>
</assign>
<msg timestamp="20210322 03:29:38.594" level="INFO">${verification_code} = 6281</msg>
<status status="PASS" starttime="20210322 03:29:38.594" endtime="20210322 03:29:38.594"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${verification_code}</arg>
</arguments>
<msg timestamp="20210322 03:29:38.595" level="INFO">${verification_code} = 6281</msg>
<status status="PASS" starttime="20210322 03:29:38.594" endtime="20210322 03:29:38.595"></status>
</kw>
<status status="PASS" starttime="20210322 03:29:37.993" endtime="20210322 03:29:38.595"></status>
</kw>
<kw name="confirmar propriedade da chave pix" library="pix_dict_confirm_propriety">
<arguments>
<arg>${verification_code}</arg>
<arg>${holder_claimer}</arg>
<arg>${account_claimer}</arg>
<arg>${entry_claimer}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 03:29:38.596" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 03:29:38.596" endtime="20210322 03:29:38.596"></status>
</kw>
<status status="PASS" starttime="20210322 03:29:38.595" endtime="20210322 03:29:38.596"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:29:38.597" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 03:29:38.596" endtime="20210322 03:29:38.597"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"code": "${verification_code}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 03:29:38.597" level="INFO">${body} = { "code": "6281" }</msg>
<status status="PASS" starttime="20210322 03:29:38.597" endtime="20210322 03:29:38.597"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries/${entry_external_key}/ownership</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:29:38.598" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/0563bd20fd5a4fabab3a1104a4991b72/accounts/1f0a101c502640aa831829309965fe96/entries/a5d0b285bd7a43e5829f97e235e29c14/ownership, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "code": "6281" } 
json=None</msg>
<msg timestamp="20210322 03:29:40.237" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:29:38.597" endtime="20210322 03:29:40.237"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:29:40.238" level="INFO">{'id': 'a5d0b285bd7a43e5829f97e235e29c14', 'status': 'active', 'created_at': '2021-03-22T03:28:54.626', 'updated_at': '2021-03-22T03:29:41.118', 'key': {'value': 'hcardoso@ferreira.org', 'type': 'email'}, 'account': {'id': '1f0a101c502640aa831829309965fe96', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': '0563bd20fd5a4fabab3a1104a4991b72', 'owner': {'name': 'Holder de teste', 'national_registration': '86574120390', 'type': 'individual'}, 'routing_number': '001', 'number': '205009696', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}, 'resource': 'pix.entry'}</msg>
<status status="PASS" starttime="20210322 03:29:40.237" endtime="20210322 03:29:40.238"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:29:40.240" level="INFO">88b7eeb864945ce5</msg>
<status status="PASS" starttime="20210322 03:29:40.239" endtime="20210322 03:29:40.240"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 03:29:40.241" level="INFO">201</msg>
<status status="PASS" starttime="20210322 03:29:40.240" endtime="20210322 03:29:40.241"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:29:40.241" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:29:40.241" endtime="20210322 03:29:40.241"></status>
</kw>
<status status="PASS" starttime="20210322 03:29:38.595" endtime="20210322 03:29:40.242"></status>
</kw>
<kw name="buscar reivindicação de posse" library="pix_dict_get_claims">
<arguments>
<arg>${holder_claimer}</arg>
<arg>${account_claimer}</arg>
<arg>${claim_external_key}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 03:29:40.243" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 03:29:40.243" endtime="20210322 03:29:40.244"></status>
</kw>
<status status="PASS" starttime="20210322 03:29:40.242" endtime="20210322 03:29:40.244"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/claims/${claim_external_key}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:29:40.244" level="INFO">GET Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/0563bd20fd5a4fabab3a1104a4991b72/accounts/1f0a101c502640aa831829309965fe96/claims/1b378292af8142b78c6865af551c2ff3, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 03:29:40.868" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:29:40.244" endtime="20210322 03:29:40.869"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:29:40.869" level="INFO">{'id': '1b378292af8142b78c6865af551c2ff3', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'created_at': '2021-03-22T03:28:58.401', 'updated_at': '2021-03-22T03:29:41.118', 'type': 'OWNERSHIP', 'status': 'completed', 'confirm_reason': 'USER_REQUESTED', 'key': {'value': 'hcardoso@ferreira.org', 'type': 'email'}, 'claimer': {'name': 'Holder de teste', 'national_registration': '86574120390', 'type': 'individual', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': '0563bd20fd5a4fabab3a1104a4991b72', 'account': {'digital_account_id': '1f0a101c502640aa831829309965fe96', 'routing_number': '001', 'number': '205009696', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}}, 'donor': {'name': 'Holder de teste', 'national_registration': '09178432588', 'type': 'individual', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': '6aa6f9835dbf463d8b97c18e26ea4aac', 'account': {'digital_account_id': '8cac0d77b3a840a08db589b0c0f23910', 'routing_number': '001', 'number': '95835209', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}}, 'completion_period_end': '2021-03-22T06:29:00.000', 'resolution_period_end': '2021-03-29T06:28:58.000', 'resource': 'pix.claim'}</msg>
<status status="PASS" starttime="20210322 03:29:40.869" endtime="20210322 03:29:40.870"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:29:40.870" level="INFO">e6d58a54f747f835</msg>
<status status="PASS" starttime="20210322 03:29:40.870" endtime="20210322 03:29:40.871"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 03:29:40.871" level="INFO">200</msg>
<status status="PASS" starttime="20210322 03:29:40.871" endtime="20210322 03:29:40.872"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:29:40.872" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:29:40.872" endtime="20210322 03:29:40.872"></status>
</kw>
<status status="PASS" starttime="20210322 03:29:40.242" endtime="20210322 03:29:40.873"></status>
</kw>
<kw name="validar status da reivindicação" library="asserts">
<arguments>
<arg>completed</arg>
</arguments>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["status"]}</arg>
<arg>${claim_status}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:29:40.873" endtime="20210322 03:29:40.874"></status>
</kw>
<status status="PASS" starttime="20210322 03:29:40.873" endtime="20210322 03:29:40.874"></status>
</kw>
<doc>Fluxo Básico</doc>
<tags>
<tag>regression_test</tag>
<tag>smoke_test</tag>
</tags>
<status status="PASS" starttime="20210322 03:28:43.264" endtime="20210322 03:29:40.874" critical="yes"></status>
</test>
<doc>Funcionalidade: Criar Reivindicação de Posse
Eu, como um Holder, portador de uma conta ativa em Banking
Desejo aceitar uma reivindicação de posse de uma chave de endereçamento</doc>
<status status="PASS" starttime="20210322 03:27:22.305" endtime="20210322 03:29:40.875"></status>
</suite>
<status status="PASS" starttime="20210322 03:27:05.198" endtime="20210322 03:29:40.877"></status>
</suite>
<status status="PASS" starttime="20210322 03:25:16.203" endtime="20210322 03:29:40.881"></status>
</suite>
<statistics>
<total>
<stat pass="23" fail="0">Critical Tests</stat>
<stat pass="23" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="16" fail="0">regression_test</stat>
<stat pass="23" fail="0">smoke_test</stat>
</tag>
<suite>
<stat pass="23" fail="0" id="s1" name="Pix-Dict">Pix-Dict</stat>
<stat pass="20" fail="0" id="s1-s1" name="Diretorio">Pix-Dict.Diretorio</stat>
<stat pass="5" fail="0" id="s1-s1-s1" name="Buscar Chave de Endereçamento">Pix-Dict.Diretorio.Buscar Chave de Endereçamento</stat>
<stat pass="5" fail="0" id="s1-s1-s2" name="Confirmação de Propriedade">Pix-Dict.Diretorio.Confirmação de Propriedade</stat>
<stat pass="5" fail="0" id="s1-s1-s3" name="Criar Chave de Endereçamento">Pix-Dict.Diretorio.Criar Chave de Endereçamento</stat>
<stat pass="5" fail="0" id="s1-s1-s4" name="Excluir Chave de Endereçamento">Pix-Dict.Diretorio.Excluir Chave de Endereçamento</stat>
<stat pass="3" fail="0" id="s1-s2" name="Reivindicacao">Pix-Dict.Reivindicacao</stat>
<stat pass="1" fail="0" id="s1-s2-s1" name="Cancelar Reivindicação de Posse">Pix-Dict.Reivindicacao.Cancelar Reivindicação de Posse</stat>
<stat pass="2" fail="0" id="s1-s2-s2" name="Criar Reivindicação de Posse">Pix-Dict.Reivindicacao.Criar Reivindicação de Posse</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>

<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.8.1 on win32)" generated="20210322 07:13:24.088" rpa="false">
<suite id="s1" name="Cancelar Reivindicação de Posse" source="C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\tests\pix-dict\reivindicacao\Cancelar Reivindicação de Posse.robot">
<test id="s1-t1" name="Cenário: Cancelamento de Reivindiação pelo Reivindicador">
<kw name="Random Number" library="FakerLibrary">
<doc>Returns a random number with 1 digit (default, when digits==None),
a random number with 0 to given number of digits, or a random number
with given number to given number of digits (when ``fix_len==True``).</doc>
<arguments>
<arg>digits=8</arg>
<arg>fix_len=True</arg>
</arguments>
<assign>
<var>${phone}</var>
</assign>
<msg timestamp="20210322 07:13:24.647" level="INFO">${phone} = 16959976</msg>
<status status="PASS" starttime="20210322 07:13:24.647" endtime="20210322 07:13:24.647"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>+55219${phone}</arg>
</arguments>
<assign>
<var>${phone_pix}</var>
</assign>
<msg timestamp="20210322 07:13:24.648" level="INFO">${phone_pix} = +5521916959976</msg>
<status status="PASS" starttime="20210322 07:13:24.648" endtime="20210322 07:13:24.648"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${phone_pix}</arg>
</arguments>
<msg timestamp="20210322 07:13:24.648" level="INFO">${phone_pix} = +5521916959976</msg>
<status status="PASS" starttime="20210322 07:13:24.648" endtime="20210322 07:13:24.649"></status>
</kw>
<kw name="criar holder individual ativo" library="accreditation_create_holder_active">
<kw name="conectar accreditation" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accreditation</arg>
<arg>url=${accreditation_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 07:13:24.649" level="INFO">Creating Session using : alias=accreditation, url=https://banking-accreditation-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 07:13:24.649" endtime="20210322 07:13:24.650"></status>
</kw>
<status status="PASS" starttime="20210322 07:13:24.649" endtime="20210322 07:13:24.650"></status>
</kw>
<kw name="Cpf" library="FakerLibrary">
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 07:13:24.650" level="INFO">${national_registration} = 519.603.428-51</msg>
<status status="PASS" starttime="20210322 07:13:24.650" endtime="20210322 07:13:24.650"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${national_registration}</arg>
<arg>.</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 07:13:24.651" level="INFO">${national_registration} = 519603428-51</msg>
<status status="PASS" starttime="20210322 07:13:24.650" endtime="20210322 07:13:24.651"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${national_registration}</arg>
<arg>-</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 07:13:24.651" level="INFO">${national_registration} = 51960342851</msg>
<status status="PASS" starttime="20210322 07:13:24.651" endtime="20210322 07:13:24.651"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${national_registration}</arg>
</arguments>
<msg timestamp="20210322 07:13:24.651" level="INFO">${national_registration} = 51960342851</msg>
<status status="PASS" starttime="20210322 07:13:24.651" endtime="20210322 07:13:24.652"></status>
</kw>
<kw name="Rg" library="FakerLibrary">
<doc>Brazilian RG, return plain numbers.
Check:  https://www.ngmatematica.com/2014/02/como-determinar-o-digito-verificador-do.html</doc>
<assign>
<var>${identity_card}</var>
</assign>
<msg timestamp="20210322 07:13:24.652" level="INFO">${identity_card} = 563270846</msg>
<status status="PASS" starttime="20210322 07:13:24.652" endtime="20210322 07:13:24.652"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${identity_card}</arg>
</arguments>
<msg timestamp="20210322 07:13:24.653" level="INFO">${identity_card} = 563270846</msg>
<status status="PASS" starttime="20210322 07:13:24.652" endtime="20210322 07:13:24.653"></status>
</kw>
<kw name="criar holder individual" library="accreditation_post_holder_individual">
<arguments>
<arg>holder_type=individual</arg>
<arg>holder_name=${holder_name}</arg>
<arg>email=${email}</arg>
<arg>national_registration=${national_registration}</arg>
<arg>revenue=${revenue}</arg>
<arg>birthday=${birthday}</arg>
<arg>mothers_name=${mothers_name}</arg>
<arg>identity_card=${identity_card}</arg>
<arg>pep=false</arg>
<arg>cbo=${cbo}</arg>
</arguments>
<kw name="conectar accreditation" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accreditation</arg>
<arg>url=${accreditation_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 07:13:24.654" level="INFO">Creating Session using : alias=accreditation, url=https://banking-accreditation-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 07:13:24.654" endtime="20210322 07:13:24.654"></status>
</kw>
<status status="PASS" starttime="20210322 07:13:24.654" endtime="20210322 07:13:24.654"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_type}</arg>
</arguments>
<msg timestamp="20210322 07:13:24.655" level="INFO">${holder_type} = individual</msg>
<status status="PASS" starttime="20210322 07:13:24.654" endtime="20210322 07:13:24.655"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_name}</arg>
</arguments>
<msg timestamp="20210322 07:13:24.655" level="INFO">${holder_name} = Holder de teste</msg>
<status status="PASS" starttime="20210322 07:13:24.655" endtime="20210322 07:13:24.655"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 07:13:24.656" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 07:13:24.655" endtime="20210322 07:13:24.656"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "${holder_type}",</arg>
<arg>"name": "${holder_name}",</arg>
<arg>"email": "${email}",</arg>
<arg>"national_registration": "${national_registration}",</arg>
<arg>"revenue": ${revenue},</arg>
<arg>"birthday": "${birthday}",</arg>
<arg>"mothers_name": "${mothers_name}",</arg>
<arg>"identity_card": "${identity_card}",</arg>
<arg>"pep": false,</arg>
<arg>"cbo": ${cbo}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 07:13:24.656" level="INFO">${body} = { "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "51960342851", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder",...</msg>
<status status="PASS" starttime="20210322 07:13:24.656" endtime="20210322 07:13:24.656"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 07:13:24.657" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "51960342851", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder", "identity_card": "563270846", "pep": false, "cbo": 821450 } 
json=None</msg>
<msg timestamp="20210322 07:13:25.330" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 07:13:24.657" endtime="20210322 07:13:25.330"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 07:13:25.331" level="INFO">{'id': 'd9ada9409149465bbc0a2ee97a932cdd', 'name': 'Holder de teste', 'revenue': 5500.0, 'email': 'teste@teste.com.br', 'status': 'waiting_info_and_documents', 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'marketplace_name': 'Marketplace de Teste', 'created_at': '2021-03-22T07:13:26.250513', 'updated_at': '2021-03-22T07:13:26.250515', 'type': 'individual', 'national_registration': '51960342851', 'birthday': '1988-04-23', 'mothers_name': 'Mãe do Holder', 'identity_card': '563270846', 'pep': False, 'cbo': '821450', '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/d9ada9409149465bbc0a2ee97a932cdd', 'type': 'GET'}, 'phones': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/d9ada9409149465bbc0a2ee97a932cdd/phones', 'type': 'GET'}, 'addresses': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/d9ada9409149465bbc0a2ee97a932cdd/addresses', 'type': 'GET'}, 'documents': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/d9ada9409149465bbc0a2ee97a932cdd/documents', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 07:13:25.331" endtime="20210322 07:13:25.331"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 07:13:25.332" level="INFO">2bc69862e4c33b7a</msg>
<status status="PASS" starttime="20210322 07:13:25.331" endtime="20210322 07:13:25.332"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${body}</arg>
</arguments>
<msg timestamp="20210322 07:13:25.332" level="INFO">{ "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "51960342851", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder", "identity_card": "563270846", "pep": false, "cbo": 821450 }</msg>
<status status="PASS" starttime="20210322 07:13:25.332" endtime="20210322 07:13:25.332"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 07:13:25.333" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 07:13:25.333" endtime="20210322 07:13:25.333"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${holder_external_key}</var>
</assign>
<msg timestamp="20210322 07:13:25.334" level="INFO">${holder_external_key} = d9ada9409149465bbc0a2ee97a932cdd</msg>
<status status="PASS" starttime="20210322 07:13:25.333" endtime="20210322 07:13:25.334"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_external_key}</arg>
</arguments>
<msg timestamp="20210322 07:13:25.334" level="INFO">${holder_external_key} = d9ada9409149465bbc0a2ee97a932cdd</msg>
<status status="PASS" starttime="20210322 07:13:25.334" endtime="20210322 07:13:25.334"></status>
</kw>
<status status="PASS" starttime="20210322 07:13:24.653" endtime="20210322 07:13:25.334"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_name}</arg>
</arguments>
<msg timestamp="20210322 07:13:25.335" level="INFO">${holder_name} = Holder de teste</msg>
<status status="PASS" starttime="20210322 07:13:25.335" endtime="20210322 07:13:25.336"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 07:13:25.336" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 07:13:25.336" endtime="20210322 07:13:25.336"></status>
</kw>
<kw name="criar holder phone" library="accreditation_post_holder_phone">
<arguments>
<arg>21</arg>
<arg>51</arg>
<arg>996221236</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 07:13:25.336" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 07:13:25.336" endtime="20210322 07:13:25.336"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"area_code": "${phone_area_code}",</arg>
<arg>"country_code": "${phone_country_code}",</arg>
<arg>"number": "${phone_number}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 07:13:25.337" level="INFO">${body} = { "area_code": "21", "country_code": "51", "number": "996221236" }</msg>
<status status="PASS" starttime="20210322 07:13:25.337" endtime="20210322 07:13:25.337"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/phones</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 07:13:25.338" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/d9ada9409149465bbc0a2ee97a932cdd/phones, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "area_code": "21", "country_code": "51", "number": "996221236" } 
json=None</msg>
<msg timestamp="20210322 07:13:25.581" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 07:13:25.337" endtime="20210322 07:13:25.581"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 07:13:25.583" level="INFO">{'id': 'be0ffdc69f1944048f5dba85736213af', 'area_code': '21', 'country_code': '51', 'number': '996221236', 'main': True, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/d9ada9409149465bbc0a2ee97a932cdd/phones/be0ffdc69f1944048f5dba85736213af', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/d9ada9409149465bbc0a2ee97a932cdd', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 07:13:25.582" endtime="20210322 07:13:25.584"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 07:13:25.585" level="INFO">3ac045948a267435</msg>
<status status="PASS" starttime="20210322 07:13:25.584" endtime="20210322 07:13:25.585"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 07:13:25.587" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 07:13:25.586" endtime="20210322 07:13:25.587"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${phone_external_key}</var>
</assign>
<msg timestamp="20210322 07:13:25.588" level="INFO">${phone_external_key} = be0ffdc69f1944048f5dba85736213af</msg>
<status status="PASS" starttime="20210322 07:13:25.587" endtime="20210322 07:13:25.588"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${phone_external_key}</arg>
</arguments>
<msg timestamp="20210322 07:13:25.588" level="INFO">${phone_external_key} = be0ffdc69f1944048f5dba85736213af</msg>
<status status="PASS" starttime="20210322 07:13:25.588" endtime="20210322 07:13:25.588"></status>
</kw>
<status status="PASS" starttime="20210322 07:13:25.336" endtime="20210322 07:13:25.588"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 07:13:25.588" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 07:13:25.588" endtime="20210322 07:13:25.589"></status>
</kw>
<kw name="criar holder address" library="accreditation_post_holder_address">
<arguments>
<arg>Rio de Janeiro</arg>
<arg>Rio de Janeiro</arg>
<arg>Brasil</arg>
<arg>Bairro de Testes</arg>
<arg>Rua de Testes</arg>
<arg>90</arg>
<arg>apto 200</arg>
<arg>21550987</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 07:13:25.589" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 07:13:25.589" endtime="20210322 07:13:25.589"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"city": "${city}",</arg>
<arg>"state": "${state}",</arg>
<arg>"country": "${country}",</arg>
<arg>"neighborhood": "${neighborhood}",</arg>
<arg>"street": "${street}",</arg>
<arg>"number": "${number}",</arg>
<arg>"complement": "${complement}",</arg>
<arg>"postal_code": "${postal_code}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 07:13:25.590" level="INFO">${body} = { "city": "Rio de Janeiro", "state": "Rio de Janeiro", "country": "Brasil", "neighborhood": "Bairro de Testes", "street": "Rua de Testes", "number": "90", "complement": "apto 200", "postal_code": "215...</msg>
<status status="PASS" starttime="20210322 07:13:25.589" endtime="20210322 07:13:25.590"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/addresses</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 07:13:25.590" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/d9ada9409149465bbc0a2ee97a932cdd/addresses, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "city": "Rio de Janeiro", "state": "Rio de Janeiro", "country": "Brasil", "neighborhood": "Bairro de Testes", "street": "Rua de Testes", "number": "90", "complement": "apto 200", "postal_code": "21550987" } 
json=None</msg>
<msg timestamp="20210322 07:13:25.818" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 07:13:25.590" endtime="20210322 07:13:25.819"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 07:13:25.821" level="INFO">{'id': 'e6b54f9050ed407a97ffaee908fe821c', 'street': 'Rua de Testes', 'number': '90', 'city': 'Rio de Janeiro', 'complement': 'apto 200', 'state': 'Rio de Janeiro', 'neighborhood': 'Bairro de Testes', 'postal_code': '21550987', 'country': 'Brasil', 'main': True, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/d9ada9409149465bbc0a2ee97a932cdd/addresses/e6b54f9050ed407a97ffaee908fe821c', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/d9ada9409149465bbc0a2ee97a932cdd', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 07:13:25.820" endtime="20210322 07:13:25.821"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 07:13:25.823" level="INFO">c21089d4663b2743</msg>
<status status="PASS" starttime="20210322 07:13:25.822" endtime="20210322 07:13:25.823"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 07:13:25.826" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 07:13:25.824" endtime="20210322 07:13:25.826"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${address_external_key}</var>
</assign>
<msg timestamp="20210322 07:13:25.828" level="INFO">${address_external_key} = e6b54f9050ed407a97ffaee908fe821c</msg>
<status status="PASS" starttime="20210322 07:13:25.827" endtime="20210322 07:13:25.828"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${address_external_key}</arg>
</arguments>
<msg timestamp="20210322 07:13:25.829" level="INFO">${address_external_key} = e6b54f9050ed407a97ffaee908fe821c</msg>
<status status="PASS" starttime="20210322 07:13:25.829" endtime="20210322 07:13:25.830"></status>
</kw>
<status status="PASS" starttime="20210322 07:13:25.589" endtime="20210322 07:13:25.830"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 07:13:25.831" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 07:13:25.830" endtime="20210322 07:13:25.831"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>SELFIE</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 07:13:25.833" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 07:13:25.833" endtime="20210322 07:13:25.834"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 07:13:25.835" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 07:13:25.837" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 07:13:25.834" endtime="20210322 07:13:25.837"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 07:13:25.837" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/d9ada9409149465bbc0a2ee97a932cdd/documents?type=SELFIE, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 07:13:26.152" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 07:13:25.837" endtime="20210322 07:13:26.152"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 07:13:26.154" level="INFO">{'id': 'cb35539c75a3454a8fb80180c0bc4a07', 'document_type': 'selfie', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/d9ada9409149465bbc0a2ee97a932cdd/documents/cb35539c75a3454a8fb80180c0bc4a07', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/d9ada9409149465bbc0a2ee97a932cdd', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/d9ada9409149465bbc0a2ee97a932cdd/documents/cb35539c75a3454a8fb80180c0bc4a07/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 07:13:26.153" endtime="20210322 07:13:26.155"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 07:13:26.157" level="INFO">e904d6310da9c2c9</msg>
<status status="PASS" starttime="20210322 07:13:26.156" endtime="20210322 07:13:26.157"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 07:13:26.159" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 07:13:26.158" endtime="20210322 07:13:26.160"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 07:13:26.162" level="INFO">${document_external_key} = cb35539c75a3454a8fb80180c0bc4a07</msg>
<status status="PASS" starttime="20210322 07:13:26.161" endtime="20210322 07:13:26.162"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 07:13:26.164" level="INFO">${document_external_key} = cb35539c75a3454a8fb80180c0bc4a07</msg>
<status status="PASS" starttime="20210322 07:13:26.163" endtime="20210322 07:13:26.164"></status>
</kw>
<status status="PASS" starttime="20210322 07:13:25.832" endtime="20210322 07:13:26.164"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 07:13:26.165" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 07:13:26.165" endtime="20210322 07:13:26.166"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>RG_FRENTE</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 07:13:26.168" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 07:13:26.167" endtime="20210322 07:13:26.168"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 07:13:26.169" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 07:13:26.169" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 07:13:26.168" endtime="20210322 07:13:26.170"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 07:13:26.170" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/d9ada9409149465bbc0a2ee97a932cdd/documents?type=RG_FRENTE, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 07:13:26.487" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 07:13:26.170" endtime="20210322 07:13:26.487"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 07:13:26.488" level="INFO">{'id': '49fb8999532e454e9970a8481603199a', 'document_type': 'rg_frente', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/d9ada9409149465bbc0a2ee97a932cdd/documents/49fb8999532e454e9970a8481603199a', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/d9ada9409149465bbc0a2ee97a932cdd', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/d9ada9409149465bbc0a2ee97a932cdd/documents/49fb8999532e454e9970a8481603199a/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 07:13:26.487" endtime="20210322 07:13:26.488"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 07:13:26.488" level="INFO">4b5724ab4b76c7c4</msg>
<status status="PASS" starttime="20210322 07:13:26.488" endtime="20210322 07:13:26.488"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 07:13:26.489" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 07:13:26.488" endtime="20210322 07:13:26.489"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 07:13:26.489" level="INFO">${document_external_key} = 49fb8999532e454e9970a8481603199a</msg>
<status status="PASS" starttime="20210322 07:13:26.489" endtime="20210322 07:13:26.489"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 07:13:26.490" level="INFO">${document_external_key} = 49fb8999532e454e9970a8481603199a</msg>
<status status="PASS" starttime="20210322 07:13:26.490" endtime="20210322 07:13:26.490"></status>
</kw>
<status status="PASS" starttime="20210322 07:13:26.166" endtime="20210322 07:13:26.490"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 07:13:26.490" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 07:13:26.490" endtime="20210322 07:13:26.490"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>RG_VERSO</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 07:13:26.491" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 07:13:26.491" endtime="20210322 07:13:26.491"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 07:13:26.492" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 07:13:26.493" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 07:13:26.491" endtime="20210322 07:13:26.493"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 07:13:26.493" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/d9ada9409149465bbc0a2ee97a932cdd/documents?type=RG_VERSO, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 07:13:26.777" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 07:13:26.493" endtime="20210322 07:13:26.777"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 07:13:26.780" level="INFO">{'id': '69f0db89f4254c83b4b9368ebcb07e9c', 'document_type': 'rg_verso', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/d9ada9409149465bbc0a2ee97a932cdd/documents/69f0db89f4254c83b4b9368ebcb07e9c', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/d9ada9409149465bbc0a2ee97a932cdd', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/d9ada9409149465bbc0a2ee97a932cdd/documents/69f0db89f4254c83b4b9368ebcb07e9c/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 07:13:26.778" endtime="20210322 07:13:26.780"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 07:13:26.783" level="INFO">c7b0c94973bf14fb</msg>
<status status="PASS" starttime="20210322 07:13:26.781" endtime="20210322 07:13:26.783"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 07:13:26.785" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 07:13:26.784" endtime="20210322 07:13:26.785"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 07:13:26.788" level="INFO">${document_external_key} = 69f0db89f4254c83b4b9368ebcb07e9c</msg>
<status status="PASS" starttime="20210322 07:13:26.786" endtime="20210322 07:13:26.788"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 07:13:26.790" level="INFO">${document_external_key} = 69f0db89f4254c83b4b9368ebcb07e9c</msg>
<status status="PASS" starttime="20210322 07:13:26.789" endtime="20210322 07:13:26.790"></status>
</kw>
<status status="PASS" starttime="20210322 07:13:26.491" endtime="20210322 07:13:26.790"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 07:13:26.792" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 07:13:26.791" endtime="20210322 07:13:26.793"></status>
</kw>
<kw name="solicitar aprovação do holder" library="accreditation_request_approval">
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 07:13:26.795" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 07:13:26.794" endtime="20210322 07:13:26.795"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/approval</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 07:13:26.797" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/d9ada9409149465bbc0a2ee97a932cdd/approval, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data=None 
json=None</msg>
<msg timestamp="20210322 07:13:27.089" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 07:13:26.796" endtime="20210322 07:13:27.090"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 07:13:27.090" level="INFO">{'message': 'Approval request accepted successfully. Processing analysis'}</msg>
<status status="PASS" starttime="20210322 07:13:27.090" endtime="20210322 07:13:27.090"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 07:13:27.091" level="INFO">b913961f35a1cfee</msg>
<status status="PASS" starttime="20210322 07:13:27.090" endtime="20210322 07:13:27.091"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 07:13:27.091" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 07:13:27.091" endtime="20210322 07:13:27.091"></status>
</kw>
<status status="PASS" starttime="20210322 07:13:26.793" endtime="20210322 07:13:27.091"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 07:13:27.092" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 07:13:27.091" endtime="20210322 07:13:27.092"></status>
</kw>
<kw name="recebendo notificação de aprovação" library="accreditation_risk_notification">
<kw name="Uuid 4" library="FakerLibrary">
<doc>Generates a random UUID4 string.
:param cast_to: Specify what type the UUID should be cast to. Default is `str`
:type cast_to: callable</doc>
<assign>
<var>${assessment_id}</var>
</assign>
<msg timestamp="20210322 07:13:27.093" level="INFO">${assessment_id} = 66d45a02-3f4f-4209-80f4-0c1fd2902a40</msg>
<status status="PASS" starttime="20210322 07:13:27.092" endtime="20210322 07:13:27.093"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>year</arg>
</arguments>
<assign>
<var>${year}</var>
</assign>
<msg timestamp="20210322 07:13:27.093" level="INFO">${year} = 2021</msg>
<status status="PASS" starttime="20210322 07:13:27.093" endtime="20210322 07:13:27.093"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>month</arg>
</arguments>
<assign>
<var>${month}</var>
</assign>
<msg timestamp="20210322 07:13:27.093" level="INFO">${month} = 03</msg>
<status status="PASS" starttime="20210322 07:13:27.093" endtime="20210322 07:13:27.093"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>day</arg>
</arguments>
<assign>
<var>${day}</var>
</assign>
<msg timestamp="20210322 07:13:27.094" level="INFO">${day} = 22</msg>
<status status="PASS" starttime="20210322 07:13:27.094" endtime="20210322 07:13:27.094"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 07:13:27.094" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 07:13:27.094" endtime="20210322 07:13:27.094"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "risk.assessment.result",</arg>
<arg>"resource": "business.holder",</arg>
<arg>"created_at": "${year}-${month}-${day} 15:28:56.747Z",</arg>
<arg>"marketplace_id": "${marketplace_external_key}",</arg>
<arg>"object": {</arg>
<arg>"result": "APPROVED",</arg>
<arg>"holder_id": "${holder_external_key}",</arg>
<arg>"applicant_id": "${application_external_key}",</arg>
<arg>"assessment_id": "${assessment_id}"</arg>
<arg>}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 07:13:27.095" level="INFO">${body} = { "type": "risk.assessment.result", "resource": "business.holder", "created_at": "2021-03-22 15:28:56.747Z", "marketplace_id": "f71a8951368a4cc085cf7875ff44e61c", "object": { "result": "APPROVED", "ho...</msg>
<status status="PASS" starttime="20210322 07:13:27.095" endtime="20210322 07:13:27.095"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/admin/internal_operation/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/registration/approval</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 07:13:27.096" level="INFO">POST Request using : uri=/admin/internal_operation/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/d9ada9409149465bbc0a2ee97a932cdd/registration/approval, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "risk.assessment.result", "resource": "business.holder", "created_at": "2021-03-22 15:28:56.747Z", "marketplace_id": "f71a8951368a4cc085cf7875ff44e61c", "object": { "result": "APPROVED", "holder_id": "d9ada9409149465bbc0a2ee97a932cdd", "applicant_id": "bcc25a6751c14b52af1340d40dba78c5", "assessment_id": "66d45a02-3f4f-4209-80f4-0c1fd2902a40" } } 
json=None</msg>
<msg timestamp="20210322 07:13:27.291" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 07:13:27.095" endtime="20210322 07:13:27.291"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 07:13:27.291" level="INFO">{'message': 'Holder approved successfully'}</msg>
<status status="PASS" starttime="20210322 07:13:27.291" endtime="20210322 07:13:27.291"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 07:13:27.292" level="INFO">6ab7c4a2922cea76</msg>
<status status="PASS" starttime="20210322 07:13:27.291" endtime="20210322 07:13:27.293"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 07:13:27.293" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 07:13:27.293" endtime="20210322 07:13:27.293"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 07:13:27.293" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 07:13:27.293" endtime="20210322 07:13:27.293"></status>
</kw>
<status status="PASS" starttime="20210322 07:13:27.092" endtime="20210322 07:13:27.293"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 07:13:27.294" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 07:13:27.294" endtime="20210322 07:13:27.294"></status>
</kw>
<kw name="buscar account por holder" library="accounts_get_accounts_by_holder">
<kw name="conectar accounts" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accounts</arg>
<arg>url=${account_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 07:13:27.295" level="INFO">Creating Session using : alias=accounts, url=https://banking-accounts-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 07:13:27.295" endtime="20210322 07:13:27.296"></status>
</kw>
<status status="PASS" starttime="20210322 07:13:27.295" endtime="20210322 07:13:27.296"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accounts</arg>
<arg>/marketplaces/${marketplace_external_key}/holders/${holder_external_key}/accounts</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 07:13:27.296" level="INFO">GET Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/holders/d9ada9409149465bbc0a2ee97a932cdd/accounts, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 07:13:27.907" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 07:13:27.296" endtime="20210322 07:13:27.907"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 07:13:27.909" level="INFO">{'items': [{'id': '8f9db01f2d7e466d8714973c190ee7ca', 'holder': 'd9ada9409149465bbc0a2ee97a932cdd', 'balance': '0.00', 'currency': 'BRL', 'routing_number': '001', 'number': '7014332803', 'status': 'active', 'metadata': {}, 'created_at': '2021-03-22T10:13:28.23107', 'updated_at': '2021-03-22T10:13:28.23107', 'primary': True, 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'uri': '/v2/marketplaces/f71a8951368a4cc085cf7875ff44e61c/accounts/8f9db01f2d7e466d8714973c190ee7ca', 'resource': 'payment_account'}], 'has_more': False, 'limit': 100, 'total_pages': 1, 'page': 1, 'offset': 0, 'total': '1', 'query_count': '1'}</msg>
<status status="PASS" starttime="20210322 07:13:27.908" endtime="20210322 07:13:27.909"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 07:13:27.910" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 07:13:27.909" endtime="20210322 07:13:27.910"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["id"]}</arg>
</arguments>
<assign>
<var>${account_external_key}</var>
</assign>
<msg timestamp="20210322 07:13:27.911" level="INFO">${account_external_key} = 8f9db01f2d7e466d8714973c190ee7ca</msg>
<status status="PASS" starttime="20210322 07:13:27.910" endtime="20210322 07:13:27.911"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_external_key}</arg>
</arguments>
<msg timestamp="20210322 07:13:27.912" level="INFO">${account_external_key} = 8f9db01f2d7e466d8714973c190ee7ca</msg>
<status status="PASS" starttime="20210322 07:13:27.912" endtime="20210322 07:13:27.912"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["number"]}</arg>
</arguments>
<assign>
<var>${account_number}</var>
</assign>
<msg timestamp="20210322 07:13:27.914" level="INFO">${account_number} = 7014332803</msg>
<status status="PASS" starttime="20210322 07:13:27.913" endtime="20210322 07:13:27.914"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_number}</arg>
</arguments>
<msg timestamp="20210322 07:13:27.915" level="INFO">${account_number} = 7014332803</msg>
<status status="PASS" starttime="20210322 07:13:27.914" endtime="20210322 07:13:27.915"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["routing_number"]}</arg>
</arguments>
<assign>
<var>${account_routing_number}</var>
</assign>
<msg timestamp="20210322 07:13:27.916" level="INFO">${account_routing_number} = 001</msg>
<status status="PASS" starttime="20210322 07:13:27.915" endtime="20210322 07:13:27.916"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_routing_number}</arg>
</arguments>
<msg timestamp="20210322 07:13:27.917" level="INFO">${account_routing_number} = 001</msg>
<status status="PASS" starttime="20210322 07:13:27.917" endtime="20210322 07:13:27.917"></status>
</kw>
<status status="PASS" starttime="20210322 07:13:27.294" endtime="20210322 07:13:27.917"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 07:13:27.918" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 07:13:27.918" endtime="20210322 07:13:27.918"></status>
</kw>
<status status="PASS" starttime="20210322 07:13:24.649" endtime="20210322 07:13:27.918"></status>
</kw>
<kw name="criar chave pix" library="pix_dict_create_entry">
<arguments>
<arg>type=phone</arg>
<arg>value=${phone_pix}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 07:13:27.919" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 07:13:27.919" endtime="20210322 07:13:27.920"></status>
</kw>
<status status="PASS" starttime="20210322 07:13:27.919" endtime="20210322 07:13:27.920"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${type}</arg>
</arguments>
<msg timestamp="20210322 07:13:27.920" level="INFO">${type} = phone</msg>
<status status="PASS" starttime="20210322 07:13:27.920" endtime="20210322 07:13:27.920"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210322 07:13:27.921" level="INFO">${value} = +5521916959976</msg>
<status status="PASS" starttime="20210322 07:13:27.920" endtime="20210322 07:13:27.921"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 07:13:27.921" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 07:13:27.921" endtime="20210322 07:13:27.921"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "${type}",</arg>
<arg>"value": "${value}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 07:13:27.921" level="INFO">${body} = { "type": "phone", "value": "+5521916959976" }</msg>
<status status="PASS" starttime="20210322 07:13:27.921" endtime="20210322 07:13:27.922"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 07:13:27.922" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/d9ada9409149465bbc0a2ee97a932cdd/accounts/8f9db01f2d7e466d8714973c190ee7ca/entries, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "phone", "value": "+5521916959976" } 
json=None</msg>
<msg timestamp="20210322 07:13:28.564" level="INFO">${response} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20210322 07:13:27.922" endtime="20210322 07:13:28.564"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 07:13:28.564" level="INFO">{'id': '9c5eef1755b9402aac06d0a212e0e133', 'status': 'waiting_ownership_verification', 'created_at': '2021-03-22T07:13:29.514', 'updated_at': '2021-03-22T07:13:29.514', 'key': {'value': '+5521916959976', 'type': 'phone'}, 'account': {'id': '8f9db01f2d7e466d8714973c190ee7ca', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': 'd9ada9409149465bbc0a2ee97a932cdd', 'owner': {'name': 'Holder de teste', 'national_registration': '51960342851', 'type': 'individual'}, 'routing_number': '001', 'number': '7014332803', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}, 'resource': 'pix.entry'}</msg>
<status status="PASS" starttime="20210322 07:13:28.564" endtime="20210322 07:13:28.564"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 07:13:28.565" level="INFO">e93414974410c49e</msg>
<status status="PASS" starttime="20210322 07:13:28.564" endtime="20210322 07:13:28.565"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 07:13:28.565" level="INFO">202</msg>
<status status="PASS" starttime="20210322 07:13:28.565" endtime="20210322 07:13:28.565"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 07:13:28.566" level="INFO">${response} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20210322 07:13:28.565" endtime="20210322 07:13:28.566"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${entry_external_key}</var>
</assign>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<status status="PASS" starttime="20210322 07:13:28.567" endtime="20210322 07:13:28.567"></status>
</kw>
<msg timestamp="20210322 07:13:28.567" level="INFO">${entry_external_key} = 9c5eef1755b9402aac06d0a212e0e133</msg>
<status status="PASS" starttime="20210322 07:13:28.566" endtime="20210322 07:13:28.567"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${entry_external_key}</arg>
</arguments>
<msg timestamp="20210322 07:13:28.568" level="INFO">${entry_external_key} = 9c5eef1755b9402aac06d0a212e0e133</msg>
<status status="PASS" starttime="20210322 07:13:28.568" endtime="20210322 07:13:28.568"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["key"]["value"]}</arg>
</arguments>
<assign>
<var>${entry_key_value}</var>
</assign>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["key"]["value"]}</arg>
</arguments>
<status status="PASS" starttime="20210322 07:13:28.569" endtime="20210322 07:13:28.569"></status>
</kw>
<msg timestamp="20210322 07:13:28.569" level="INFO">${entry_key_value} = +5521916959976</msg>
<status status="PASS" starttime="20210322 07:13:28.568" endtime="20210322 07:13:28.569"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${entry_key_value}</arg>
</arguments>
<msg timestamp="20210322 07:13:28.570" level="INFO">${entry_key_value} = +5521916959976</msg>
<status status="PASS" starttime="20210322 07:13:28.570" endtime="20210322 07:13:28.570"></status>
</kw>
<status status="PASS" starttime="20210322 07:13:27.919" endtime="20210322 07:13:28.570"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${holder_external_key}</arg>
</arguments>
<assign>
<var>${holder_owner}</var>
</assign>
<msg timestamp="20210322 07:13:28.571" level="INFO">${holder_owner} = d9ada9409149465bbc0a2ee97a932cdd</msg>
<status status="PASS" starttime="20210322 07:13:28.571" endtime="20210322 07:13:28.571"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${holder_name}</arg>
</arguments>
<assign>
<var>${holder_name_owner}</var>
</assign>
<msg timestamp="20210322 07:13:28.572" level="INFO">${holder_name_owner} = Holder de teste</msg>
<status status="PASS" starttime="20210322 07:13:28.572" endtime="20210322 07:13:28.572"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${national_registration}</arg>
</arguments>
<assign>
<var>${national_registration_owner}</var>
</assign>
<msg timestamp="20210322 07:13:28.573" level="INFO">${national_registration_owner} = 51960342851</msg>
<status status="PASS" starttime="20210322 07:13:28.573" endtime="20210322 07:13:28.573"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${account_external_key}</arg>
</arguments>
<assign>
<var>${account_owner}</var>
</assign>
<msg timestamp="20210322 07:13:28.574" level="INFO">${account_owner} = 8f9db01f2d7e466d8714973c190ee7ca</msg>
<status status="PASS" starttime="20210322 07:13:28.574" endtime="20210322 07:13:28.574"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${account_number}</arg>
</arguments>
<assign>
<var>${account_number_owner}</var>
</assign>
<msg timestamp="20210322 07:13:28.575" level="INFO">${account_number_owner} = 7014332803</msg>
<status status="PASS" starttime="20210322 07:13:28.575" endtime="20210322 07:13:28.575"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${account_routing_number}</arg>
</arguments>
<assign>
<var>${account_routing_number_owner}</var>
</assign>
<msg timestamp="20210322 07:13:28.576" level="INFO">${account_routing_number_owner} = 001</msg>
<status status="PASS" starttime="20210322 07:13:28.576" endtime="20210322 07:13:28.576"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${entry_external_key}</arg>
</arguments>
<assign>
<var>${entry_owner}</var>
</assign>
<msg timestamp="20210322 07:13:28.577" level="INFO">${entry_owner} = 9c5eef1755b9402aac06d0a212e0e133</msg>
<status status="PASS" starttime="20210322 07:13:28.577" endtime="20210322 07:13:28.577"></status>
</kw>
<kw name="buscar verification code" library="pix_dict_verification_code">
<arguments>
<arg>holder_external_key=${holder_owner}</arg>
<arg>account_external_key=${account_owner}</arg>
<arg>entry_external_key=${entry_owner}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 07:13:28.578" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 07:13:28.578" endtime="20210322 07:13:28.578"></status>
</kw>
<status status="PASS" starttime="20210322 07:13:28.577" endtime="20210322 07:13:28.578"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/admin/internal_operation/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries/${entry_external_key}/code</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 07:13:28.579" level="INFO">GET Request using : uri=/admin/internal_operation/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/d9ada9409149465bbc0a2ee97a932cdd/accounts/8f9db01f2d7e466d8714973c190ee7ca/entries/9c5eef1755b9402aac06d0a212e0e133/code, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 07:13:29.194" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 07:13:28.579" endtime="20210322 07:13:29.195"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 07:13:29.196" level="INFO">{'code': '8038'}</msg>
<status status="PASS" starttime="20210322 07:13:29.195" endtime="20210322 07:13:29.196"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 07:13:29.198" level="INFO">0acf581fd2d43583</msg>
<status status="PASS" starttime="20210322 07:13:29.197" endtime="20210322 07:13:29.198"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 07:13:29.200" level="INFO">200</msg>
<status status="PASS" starttime="20210322 07:13:29.199" endtime="20210322 07:13:29.200"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 07:13:29.200" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 07:13:29.200" endtime="20210322 07:13:29.200"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["code"]}</arg>
</arguments>
<assign>
<var>${verification_code}</var>
</assign>
<msg timestamp="20210322 07:13:29.202" level="INFO">${verification_code} = 8038</msg>
<status status="PASS" starttime="20210322 07:13:29.201" endtime="20210322 07:13:29.202"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${verification_code}</arg>
</arguments>
<msg timestamp="20210322 07:13:29.202" level="INFO">${verification_code} = 8038</msg>
<status status="PASS" starttime="20210322 07:13:29.202" endtime="20210322 07:13:29.202"></status>
</kw>
<status status="PASS" starttime="20210322 07:13:28.577" endtime="20210322 07:13:29.202"></status>
</kw>
<kw name="confirmar propriedade da chave pix" library="pix_dict_confirm_propriety">
<arguments>
<arg>verification_code=${verification_code}</arg>
<arg>holder_external_key=${holder_owner}</arg>
<arg>account_external_key=${account_owner}</arg>
<arg>entry_external_key=${entry_owner}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 07:13:29.204" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 07:13:29.204" endtime="20210322 07:13:29.204"></status>
</kw>
<status status="PASS" starttime="20210322 07:13:29.203" endtime="20210322 07:13:29.204"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 07:13:29.205" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 07:13:29.204" endtime="20210322 07:13:29.205"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"code": "${verification_code}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 07:13:29.205" level="INFO">${body} = { "code": "8038" }</msg>
<status status="PASS" starttime="20210322 07:13:29.205" endtime="20210322 07:13:29.205"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries/${entry_external_key}/ownership</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 07:13:29.206" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/d9ada9409149465bbc0a2ee97a932cdd/accounts/8f9db01f2d7e466d8714973c190ee7ca/entries/9c5eef1755b9402aac06d0a212e0e133/ownership, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "code": "8038" } 
json=None</msg>
<msg timestamp="20210322 07:13:31.260" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 07:13:29.205" endtime="20210322 07:13:31.260"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 07:13:31.262" level="INFO">{'id': '9c5eef1755b9402aac06d0a212e0e133', 'status': 'active', 'created_at': '2021-03-22T07:13:29.514', 'updated_at': '2021-03-22T07:13:32.225', 'key': {'value': '+5521916959976', 'type': 'phone'}, 'account': {'id': '8f9db01f2d7e466d8714973c190ee7ca', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': 'd9ada9409149465bbc0a2ee97a932cdd', 'owner': {'name': 'Holder de teste', 'national_registration': '51960342851', 'type': 'individual'}, 'routing_number': '001', 'number': '7014332803', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}, 'resource': 'pix.entry'}</msg>
<status status="PASS" starttime="20210322 07:13:31.261" endtime="20210322 07:13:31.263"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 07:13:31.264" level="INFO">07b0eb8a6c7cca48</msg>
<status status="PASS" starttime="20210322 07:13:31.263" endtime="20210322 07:13:31.264"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 07:13:31.265" level="INFO">201</msg>
<status status="PASS" starttime="20210322 07:13:31.264" endtime="20210322 07:13:31.265"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 07:13:31.266" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 07:13:31.266" endtime="20210322 07:13:31.266"></status>
</kw>
<status status="PASS" starttime="20210322 07:13:29.203" endtime="20210322 07:13:31.266"></status>
</kw>
<kw name="validar chave pix" library="asserts">
<arguments>
<arg>key_status=active</arg>
<arg>key_type=${type}</arg>
<arg>key_value=${value}</arg>
<arg>account_external_key=${account_owner}</arg>
<arg>marketplace_external_key=${marketplace_external_key}</arg>
<arg>holder_external_key=${holder_owner}</arg>
<arg>account_number=${account_number_owner}</arg>
<arg>account_routing_number=${account_routing_number_owner}</arg>
<arg>account_type=CACC</arg>
<arg>owner_key_name=${holder_name_owner}</arg>
<arg>national_registration=${national_registration_owner}</arg>
<arg>holder_type=${holder_type}</arg>
<arg>psp_code=19468242</arg>
<arg>psp_name=Zoop Tecnologia e Meios de Pagamento S.A.</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar status da chave</arg>
</arguments>
<msg timestamp="20210322 07:13:31.268" level="INFO">Validar status da chave</msg>
<status status="PASS" starttime="20210322 07:13:31.268" endtime="20210322 07:13:31.268"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["status"]}</arg>
<arg>${key_status}</arg>
</arguments>
<status status="PASS" starttime="20210322 07:13:31.268" endtime="20210322 07:13:31.268"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando Tipo da chave PIX</arg>
</arguments>
<msg timestamp="20210322 07:13:31.269" level="INFO">Validando Tipo da chave PIX</msg>
<status status="PASS" starttime="20210322 07:13:31.268" endtime="20210322 07:13:31.269"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["key"]["type"]}</arg>
<arg>${key_type}</arg>
</arguments>
<status status="PASS" starttime="20210322 07:13:31.269" endtime="20210322 07:13:31.269"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando Valor da chave PIX</arg>
</arguments>
<msg timestamp="20210322 07:13:31.269" level="INFO">Validando Valor da chave PIX</msg>
<status status="PASS" starttime="20210322 07:13:31.269" endtime="20210322 07:13:31.269"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${type}' == 'evp'</arg>
<arg>Should Not Be Empty</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' != 'evp'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${key_value}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${key_value}</arg>
</arguments>
<status status="PASS" starttime="20210322 07:13:31.270" endtime="20210322 07:13:31.270"></status>
</kw>
<status status="PASS" starttime="20210322 07:13:31.270" endtime="20210322 07:13:31.270"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando dados da conta</arg>
</arguments>
<msg timestamp="20210322 07:13:31.271" level="INFO">Validando dados da conta</msg>
<status status="PASS" starttime="20210322 07:13:31.271" endtime="20210322 07:13:31.271"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["id"]}</arg>
<arg>${account_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210322 07:13:31.271" endtime="20210322 07:13:31.271"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["marketplace"]}</arg>
<arg>${marketplace_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210322 07:13:31.271" endtime="20210322 07:13:31.272"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["holder"]}</arg>
<arg>${holder_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210322 07:13:31.272" endtime="20210322 07:13:31.272"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["number"]}</arg>
<arg>${account_number}</arg>
</arguments>
<status status="PASS" starttime="20210322 07:13:31.272" endtime="20210322 07:13:31.273"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["routing_number"]}</arg>
<arg>${account_routing_number}</arg>
</arguments>
<status status="PASS" starttime="20210322 07:13:31.273" endtime="20210322 07:13:31.273"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["type"]}</arg>
<arg>${account_type}</arg>
</arguments>
<status status="PASS" starttime="20210322 07:13:31.273" endtime="20210322 07:13:31.274"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar Proprietário da Account Owner</arg>
</arguments>
<msg timestamp="20210322 07:13:31.274" level="INFO">Validar Proprietário da Account Owner</msg>
<status status="PASS" starttime="20210322 07:13:31.274" endtime="20210322 07:13:31.274"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["account"]["owner"]["name"]}</arg>
<arg>${owner_key_name}</arg>
</arguments>
<status status="PASS" starttime="20210322 07:13:31.274" endtime="20210322 07:13:31.275"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar national_registration da Account Owner</arg>
</arguments>
<msg timestamp="20210322 07:13:31.275" level="INFO">Validar national_registration da Account Owner</msg>
<status status="PASS" starttime="20210322 07:13:31.275" endtime="20210322 07:13:31.275"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["account"]["owner"]["national_registration"]}</arg>
<arg>${national_registration}</arg>
</arguments>
<status status="PASS" starttime="20210322 07:13:31.275" endtime="20210322 07:13:31.275"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar Holder Type do Account Owner</arg>
</arguments>
<msg timestamp="20210322 07:13:31.276" level="INFO">Validar Holder Type do Account Owner</msg>
<status status="PASS" starttime="20210322 07:13:31.276" endtime="20210322 07:13:31.276"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["account"]["owner"]["type"]}</arg>
<arg>${holder_type}</arg>
</arguments>
<status status="PASS" starttime="20210322 07:13:31.276" endtime="20210322 07:13:31.276"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar PSP</arg>
</arguments>
<msg timestamp="20210322 07:13:31.276" level="INFO">Validar PSP</msg>
<status status="PASS" starttime="20210322 07:13:31.276" endtime="20210322 07:13:31.276"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["psp"]["code"]}</arg>
<arg>${psp_code}</arg>
</arguments>
<status status="PASS" starttime="20210322 07:13:31.277" endtime="20210322 07:13:31.277"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["psp"]["name"]}</arg>
<arg>${psp_name}</arg>
</arguments>
<status status="PASS" starttime="20210322 07:13:31.277" endtime="20210322 07:13:31.277"></status>
</kw>
<status status="PASS" starttime="20210322 07:13:31.267" endtime="20210322 07:13:31.277"></status>
</kw>
<kw name="criar holder individual ativo" library="accreditation_create_holder_active">
<kw name="conectar accreditation" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accreditation</arg>
<arg>url=${accreditation_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 07:13:31.279" level="INFO">Creating Session using : alias=accreditation, url=https://banking-accreditation-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 07:13:31.278" endtime="20210322 07:13:31.279"></status>
</kw>
<status status="PASS" starttime="20210322 07:13:31.278" endtime="20210322 07:13:31.279"></status>
</kw>
<kw name="Cpf" library="FakerLibrary">
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 07:13:31.279" level="INFO">${national_registration} = 702.384.519-41</msg>
<status status="PASS" starttime="20210322 07:13:31.279" endtime="20210322 07:13:31.279"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${national_registration}</arg>
<arg>.</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 07:13:31.280" level="INFO">${national_registration} = 702384519-41</msg>
<status status="PASS" starttime="20210322 07:13:31.279" endtime="20210322 07:13:31.280"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${national_registration}</arg>
<arg>-</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 07:13:31.280" level="INFO">${national_registration} = 70238451941</msg>
<status status="PASS" starttime="20210322 07:13:31.280" endtime="20210322 07:13:31.280"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${national_registration}</arg>
</arguments>
<msg timestamp="20210322 07:13:31.280" level="INFO">${national_registration} = 70238451941</msg>
<status status="PASS" starttime="20210322 07:13:31.280" endtime="20210322 07:13:31.280"></status>
</kw>
<kw name="Rg" library="FakerLibrary">
<doc>Brazilian RG, return plain numbers.
Check:  https://www.ngmatematica.com/2014/02/como-determinar-o-digito-verificador-do.html</doc>
<assign>
<var>${identity_card}</var>
</assign>
<msg timestamp="20210322 07:13:31.281" level="INFO">${identity_card} = 48703126X</msg>
<status status="PASS" starttime="20210322 07:13:31.281" endtime="20210322 07:13:31.281"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${identity_card}</arg>
</arguments>
<msg timestamp="20210322 07:13:31.281" level="INFO">${identity_card} = 48703126X</msg>
<status status="PASS" starttime="20210322 07:13:31.281" endtime="20210322 07:13:31.281"></status>
</kw>
<kw name="criar holder individual" library="accreditation_post_holder_individual">
<arguments>
<arg>holder_type=individual</arg>
<arg>holder_name=${holder_name}</arg>
<arg>email=${email}</arg>
<arg>national_registration=${national_registration}</arg>
<arg>revenue=${revenue}</arg>
<arg>birthday=${birthday}</arg>
<arg>mothers_name=${mothers_name}</arg>
<arg>identity_card=${identity_card}</arg>
<arg>pep=false</arg>
<arg>cbo=${cbo}</arg>
</arguments>
<kw name="conectar accreditation" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accreditation</arg>
<arg>url=${accreditation_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 07:13:31.282" level="INFO">Creating Session using : alias=accreditation, url=https://banking-accreditation-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 07:13:31.282" endtime="20210322 07:13:31.283"></status>
</kw>
<status status="PASS" starttime="20210322 07:13:31.282" endtime="20210322 07:13:31.283"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_type}</arg>
</arguments>
<msg timestamp="20210322 07:13:31.283" level="INFO">${holder_type} = individual</msg>
<status status="PASS" starttime="20210322 07:13:31.283" endtime="20210322 07:13:31.283"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_name}</arg>
</arguments>
<msg timestamp="20210322 07:13:31.284" level="INFO">${holder_name} = Holder de teste</msg>
<status status="PASS" starttime="20210322 07:13:31.283" endtime="20210322 07:13:31.284"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 07:13:31.284" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 07:13:31.284" endtime="20210322 07:13:31.284"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "${holder_type}",</arg>
<arg>"name": "${holder_name}",</arg>
<arg>"email": "${email}",</arg>
<arg>"national_registration": "${national_registration}",</arg>
<arg>"revenue": ${revenue},</arg>
<arg>"birthday": "${birthday}",</arg>
<arg>"mothers_name": "${mothers_name}",</arg>
<arg>"identity_card": "${identity_card}",</arg>
<arg>"pep": false,</arg>
<arg>"cbo": ${cbo}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 07:13:31.285" level="INFO">${body} = { "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "70238451941", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder",...</msg>
<status status="PASS" starttime="20210322 07:13:31.284" endtime="20210322 07:13:31.285"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 07:13:31.285" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "70238451941", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder", "identity_card": "48703126X", "pep": false, "cbo": 821450 } 
json=None</msg>
<msg timestamp="20210322 07:13:31.907" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 07:13:31.285" endtime="20210322 07:13:31.907"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 07:13:31.908" level="INFO">{'id': 'acc2833c30cb49ea9cbeea88e451f6d3', 'name': 'Holder de teste', 'revenue': 5500.0, 'email': 'teste@teste.com.br', 'status': 'waiting_info_and_documents', 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'marketplace_name': 'Marketplace de Teste', 'created_at': '2021-03-22T07:13:32.853185', 'updated_at': '2021-03-22T07:13:32.853187', 'type': 'individual', 'national_registration': '70238451941', 'birthday': '1988-04-23', 'mothers_name': 'Mãe do Holder', 'identity_card': '48703126X', 'pep': False, 'cbo': '821450', '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/acc2833c30cb49ea9cbeea88e451f6d3', 'type': 'GET'}, 'phones': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/acc2833c30cb49ea9cbeea88e451f6d3/phones', 'type': 'GET'}, 'addresses': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/acc2833c30cb49ea9cbeea88e451f6d3/addresses', 'type': 'GET'}, 'documents': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/acc2833c30cb49ea9cbeea88e451f6d3/documents', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 07:13:31.908" endtime="20210322 07:13:31.908"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 07:13:31.909" level="INFO">d8f261ab446012f8</msg>
<status status="PASS" starttime="20210322 07:13:31.908" endtime="20210322 07:13:31.909"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${body}</arg>
</arguments>
<msg timestamp="20210322 07:13:31.909" level="INFO">{ "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "70238451941", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder", "identity_card": "48703126X", "pep": false, "cbo": 821450 }</msg>
<status status="PASS" starttime="20210322 07:13:31.909" endtime="20210322 07:13:31.909"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 07:13:31.910" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 07:13:31.910" endtime="20210322 07:13:31.910"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${holder_external_key}</var>
</assign>
<msg timestamp="20210322 07:13:31.911" level="INFO">${holder_external_key} = acc2833c30cb49ea9cbeea88e451f6d3</msg>
<status status="PASS" starttime="20210322 07:13:31.910" endtime="20210322 07:13:31.911"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_external_key}</arg>
</arguments>
<msg timestamp="20210322 07:13:31.911" level="INFO">${holder_external_key} = acc2833c30cb49ea9cbeea88e451f6d3</msg>
<status status="PASS" starttime="20210322 07:13:31.911" endtime="20210322 07:13:31.911"></status>
</kw>
<status status="PASS" starttime="20210322 07:13:31.281" endtime="20210322 07:13:31.911"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_name}</arg>
</arguments>
<msg timestamp="20210322 07:13:31.912" level="INFO">${holder_name} = Holder de teste</msg>
<status status="PASS" starttime="20210322 07:13:31.912" endtime="20210322 07:13:31.912"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 07:13:31.912" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 07:13:31.912" endtime="20210322 07:13:31.912"></status>
</kw>
<kw name="criar holder phone" library="accreditation_post_holder_phone">
<arguments>
<arg>21</arg>
<arg>51</arg>
<arg>996221236</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 07:13:31.913" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 07:13:31.913" endtime="20210322 07:13:31.913"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"area_code": "${phone_area_code}",</arg>
<arg>"country_code": "${phone_country_code}",</arg>
<arg>"number": "${phone_number}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 07:13:31.914" level="INFO">${body} = { "area_code": "21", "country_code": "51", "number": "996221236" }</msg>
<status status="PASS" starttime="20210322 07:13:31.914" endtime="20210322 07:13:31.914"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/phones</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 07:13:31.915" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/acc2833c30cb49ea9cbeea88e451f6d3/phones, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "area_code": "21", "country_code": "51", "number": "996221236" } 
json=None</msg>
<msg timestamp="20210322 07:13:32.151" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 07:13:31.914" endtime="20210322 07:13:32.151"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 07:13:32.151" level="INFO">{'id': '5e621cad46d34e4a887f59a32cfe7752', 'area_code': '21', 'country_code': '51', 'number': '996221236', 'main': True, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/acc2833c30cb49ea9cbeea88e451f6d3/phones/5e621cad46d34e4a887f59a32cfe7752', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/acc2833c30cb49ea9cbeea88e451f6d3', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 07:13:32.151" endtime="20210322 07:13:32.152"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 07:13:32.152" level="INFO">33e0bca55500fc1d</msg>
<status status="PASS" starttime="20210322 07:13:32.152" endtime="20210322 07:13:32.152"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 07:13:32.153" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 07:13:32.152" endtime="20210322 07:13:32.153"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${phone_external_key}</var>
</assign>
<msg timestamp="20210322 07:13:32.153" level="INFO">${phone_external_key} = 5e621cad46d34e4a887f59a32cfe7752</msg>
<status status="PASS" starttime="20210322 07:13:32.153" endtime="20210322 07:13:32.153"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${phone_external_key}</arg>
</arguments>
<msg timestamp="20210322 07:13:32.154" level="INFO">${phone_external_key} = 5e621cad46d34e4a887f59a32cfe7752</msg>
<status status="PASS" starttime="20210322 07:13:32.154" endtime="20210322 07:13:32.154"></status>
</kw>
<status status="PASS" starttime="20210322 07:13:31.913" endtime="20210322 07:13:32.154"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 07:13:32.155" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 07:13:32.154" endtime="20210322 07:13:32.155"></status>
</kw>
<kw name="criar holder address" library="accreditation_post_holder_address">
<arguments>
<arg>Rio de Janeiro</arg>
<arg>Rio de Janeiro</arg>
<arg>Brasil</arg>
<arg>Bairro de Testes</arg>
<arg>Rua de Testes</arg>
<arg>90</arg>
<arg>apto 200</arg>
<arg>21550987</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 07:13:32.156" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 07:13:32.155" endtime="20210322 07:13:32.156"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"city": "${city}",</arg>
<arg>"state": "${state}",</arg>
<arg>"country": "${country}",</arg>
<arg>"neighborhood": "${neighborhood}",</arg>
<arg>"street": "${street}",</arg>
<arg>"number": "${number}",</arg>
<arg>"complement": "${complement}",</arg>
<arg>"postal_code": "${postal_code}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 07:13:32.157" level="INFO">${body} = { "city": "Rio de Janeiro", "state": "Rio de Janeiro", "country": "Brasil", "neighborhood": "Bairro de Testes", "street": "Rua de Testes", "number": "90", "complement": "apto 200", "postal_code": "215...</msg>
<status status="PASS" starttime="20210322 07:13:32.156" endtime="20210322 07:13:32.157"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/addresses</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 07:13:32.157" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/acc2833c30cb49ea9cbeea88e451f6d3/addresses, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "city": "Rio de Janeiro", "state": "Rio de Janeiro", "country": "Brasil", "neighborhood": "Bairro de Testes", "street": "Rua de Testes", "number": "90", "complement": "apto 200", "postal_code": "21550987" } 
json=None</msg>
<msg timestamp="20210322 07:13:32.375" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 07:13:32.157" endtime="20210322 07:13:32.375"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 07:13:32.377" level="INFO">{'id': 'd093ffcdb26d4726953a620bcc60be58', 'street': 'Rua de Testes', 'number': '90', 'city': 'Rio de Janeiro', 'complement': 'apto 200', 'state': 'Rio de Janeiro', 'neighborhood': 'Bairro de Testes', 'postal_code': '21550987', 'country': 'Brasil', 'main': True, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/acc2833c30cb49ea9cbeea88e451f6d3/addresses/d093ffcdb26d4726953a620bcc60be58', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/acc2833c30cb49ea9cbeea88e451f6d3', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 07:13:32.377" endtime="20210322 07:13:32.377"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 07:13:32.379" level="INFO">73c75b33648ea0d1</msg>
<status status="PASS" starttime="20210322 07:13:32.378" endtime="20210322 07:13:32.379"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 07:13:32.380" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 07:13:32.380" endtime="20210322 07:13:32.381"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${address_external_key}</var>
</assign>
<msg timestamp="20210322 07:13:32.382" level="INFO">${address_external_key} = d093ffcdb26d4726953a620bcc60be58</msg>
<status status="PASS" starttime="20210322 07:13:32.381" endtime="20210322 07:13:32.382"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${address_external_key}</arg>
</arguments>
<msg timestamp="20210322 07:13:32.384" level="INFO">${address_external_key} = d093ffcdb26d4726953a620bcc60be58</msg>
<status status="PASS" starttime="20210322 07:13:32.383" endtime="20210322 07:13:32.384"></status>
</kw>
<status status="PASS" starttime="20210322 07:13:32.155" endtime="20210322 07:13:32.384"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 07:13:32.385" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 07:13:32.385" endtime="20210322 07:13:32.386"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>SELFIE</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 07:13:32.388" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 07:13:32.387" endtime="20210322 07:13:32.388"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 07:13:32.389" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 07:13:32.391" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 07:13:32.389" endtime="20210322 07:13:32.391"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 07:13:32.392" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/acc2833c30cb49ea9cbeea88e451f6d3/documents?type=SELFIE, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 07:13:32.650" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 07:13:32.391" endtime="20210322 07:13:32.650"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 07:13:32.651" level="INFO">{'id': '01ce879862e344ba8e746dccf7c07ead', 'document_type': 'selfie', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/acc2833c30cb49ea9cbeea88e451f6d3/documents/01ce879862e344ba8e746dccf7c07ead', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/acc2833c30cb49ea9cbeea88e451f6d3', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/acc2833c30cb49ea9cbeea88e451f6d3/documents/01ce879862e344ba8e746dccf7c07ead/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 07:13:32.650" endtime="20210322 07:13:32.651"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 07:13:32.651" level="INFO">7ac694dd8fd4ab4c</msg>
<status status="PASS" starttime="20210322 07:13:32.651" endtime="20210322 07:13:32.651"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 07:13:32.652" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 07:13:32.652" endtime="20210322 07:13:32.652"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 07:13:32.652" level="INFO">${document_external_key} = 01ce879862e344ba8e746dccf7c07ead</msg>
<status status="PASS" starttime="20210322 07:13:32.652" endtime="20210322 07:13:32.653"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 07:13:32.653" level="INFO">${document_external_key} = 01ce879862e344ba8e746dccf7c07ead</msg>
<status status="PASS" starttime="20210322 07:13:32.653" endtime="20210322 07:13:32.653"></status>
</kw>
<status status="PASS" starttime="20210322 07:13:32.387" endtime="20210322 07:13:32.653"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 07:13:32.654" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 07:13:32.653" endtime="20210322 07:13:32.654"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>RG_FRENTE</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 07:13:32.655" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 07:13:32.654" endtime="20210322 07:13:32.655"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 07:13:32.655" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 07:13:32.656" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 07:13:32.655" endtime="20210322 07:13:32.656"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 07:13:32.657" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/acc2833c30cb49ea9cbeea88e451f6d3/documents?type=RG_FRENTE, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 07:13:32.962" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 07:13:32.656" endtime="20210322 07:13:32.962"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 07:13:32.963" level="INFO">{'id': 'd2ba12e613694511a2b72daa4146c4c7', 'document_type': 'rg_frente', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/acc2833c30cb49ea9cbeea88e451f6d3/documents/d2ba12e613694511a2b72daa4146c4c7', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/acc2833c30cb49ea9cbeea88e451f6d3', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/acc2833c30cb49ea9cbeea88e451f6d3/documents/d2ba12e613694511a2b72daa4146c4c7/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 07:13:32.962" endtime="20210322 07:13:32.963"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 07:13:32.963" level="INFO">bf084891258d51d2</msg>
<status status="PASS" starttime="20210322 07:13:32.963" endtime="20210322 07:13:32.963"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 07:13:32.964" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 07:13:32.963" endtime="20210322 07:13:32.964"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 07:13:32.964" level="INFO">${document_external_key} = d2ba12e613694511a2b72daa4146c4c7</msg>
<status status="PASS" starttime="20210322 07:13:32.964" endtime="20210322 07:13:32.965"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 07:13:32.965" level="INFO">${document_external_key} = d2ba12e613694511a2b72daa4146c4c7</msg>
<status status="PASS" starttime="20210322 07:13:32.965" endtime="20210322 07:13:32.965"></status>
</kw>
<status status="PASS" starttime="20210322 07:13:32.654" endtime="20210322 07:13:32.965"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 07:13:32.966" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 07:13:32.965" endtime="20210322 07:13:32.966"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>RG_VERSO</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 07:13:32.967" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 07:13:32.966" endtime="20210322 07:13:32.967"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 07:13:32.967" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 07:13:32.968" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 07:13:32.967" endtime="20210322 07:13:32.968"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 07:13:32.969" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/acc2833c30cb49ea9cbeea88e451f6d3/documents?type=RG_VERSO, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 07:13:33.239" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 07:13:32.968" endtime="20210322 07:13:33.239"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 07:13:33.242" level="INFO">{'id': 'c450b454c2d24d988698cf0eb424fe25', 'document_type': 'rg_verso', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/acc2833c30cb49ea9cbeea88e451f6d3/documents/c450b454c2d24d988698cf0eb424fe25', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/acc2833c30cb49ea9cbeea88e451f6d3', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/acc2833c30cb49ea9cbeea88e451f6d3/documents/c450b454c2d24d988698cf0eb424fe25/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 07:13:33.240" endtime="20210322 07:13:33.242"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 07:13:33.245" level="INFO">f9ac7c5b6b7bb30a</msg>
<status status="PASS" starttime="20210322 07:13:33.243" endtime="20210322 07:13:33.245"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 07:13:33.247" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 07:13:33.247" endtime="20210322 07:13:33.247"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 07:13:33.248" level="INFO">${document_external_key} = c450b454c2d24d988698cf0eb424fe25</msg>
<status status="PASS" starttime="20210322 07:13:33.248" endtime="20210322 07:13:33.249"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 07:13:33.250" level="INFO">${document_external_key} = c450b454c2d24d988698cf0eb424fe25</msg>
<status status="PASS" starttime="20210322 07:13:33.249" endtime="20210322 07:13:33.250"></status>
</kw>
<status status="PASS" starttime="20210322 07:13:32.966" endtime="20210322 07:13:33.250"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 07:13:33.251" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 07:13:33.251" endtime="20210322 07:13:33.252"></status>
</kw>
<kw name="solicitar aprovação do holder" library="accreditation_request_approval">
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 07:13:33.254" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 07:13:33.253" endtime="20210322 07:13:33.254"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/approval</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 07:13:33.255" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/acc2833c30cb49ea9cbeea88e451f6d3/approval, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data=None 
json=None</msg>
<msg timestamp="20210322 07:13:33.534" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 07:13:33.254" endtime="20210322 07:13:33.534"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 07:13:33.536" level="INFO">{'message': 'Approval request accepted successfully. Processing analysis'}</msg>
<status status="PASS" starttime="20210322 07:13:33.535" endtime="20210322 07:13:33.536"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 07:13:33.538" level="INFO">fff4ceb69ba63e29</msg>
<status status="PASS" starttime="20210322 07:13:33.537" endtime="20210322 07:13:33.539"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 07:13:33.541" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 07:13:33.540" endtime="20210322 07:13:33.541"></status>
</kw>
<status status="PASS" starttime="20210322 07:13:33.252" endtime="20210322 07:13:33.541"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 07:13:33.543" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 07:13:33.542" endtime="20210322 07:13:33.543"></status>
</kw>
<kw name="recebendo notificação de aprovação" library="accreditation_risk_notification">
<kw name="Uuid 4" library="FakerLibrary">
<doc>Generates a random UUID4 string.
:param cast_to: Specify what type the UUID should be cast to. Default is `str`
:type cast_to: callable</doc>
<assign>
<var>${assessment_id}</var>
</assign>
<msg timestamp="20210322 07:13:33.545" level="INFO">${assessment_id} = 57147df2-96c1-4ed4-8442-7bb53e345a25</msg>
<status status="PASS" starttime="20210322 07:13:33.545" endtime="20210322 07:13:33.546"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>year</arg>
</arguments>
<assign>
<var>${year}</var>
</assign>
<msg timestamp="20210322 07:13:33.547" level="INFO">${year} = 2021</msg>
<status status="PASS" starttime="20210322 07:13:33.546" endtime="20210322 07:13:33.547"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>month</arg>
</arguments>
<assign>
<var>${month}</var>
</assign>
<msg timestamp="20210322 07:13:33.548" level="INFO">${month} = 03</msg>
<status status="PASS" starttime="20210322 07:13:33.547" endtime="20210322 07:13:33.548"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>day</arg>
</arguments>
<assign>
<var>${day}</var>
</assign>
<msg timestamp="20210322 07:13:33.549" level="INFO">${day} = 22</msg>
<status status="PASS" starttime="20210322 07:13:33.548" endtime="20210322 07:13:33.549"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 07:13:33.550" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 07:13:33.549" endtime="20210322 07:13:33.550"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "risk.assessment.result",</arg>
<arg>"resource": "business.holder",</arg>
<arg>"created_at": "${year}-${month}-${day} 15:28:56.747Z",</arg>
<arg>"marketplace_id": "${marketplace_external_key}",</arg>
<arg>"object": {</arg>
<arg>"result": "APPROVED",</arg>
<arg>"holder_id": "${holder_external_key}",</arg>
<arg>"applicant_id": "${application_external_key}",</arg>
<arg>"assessment_id": "${assessment_id}"</arg>
<arg>}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 07:13:33.551" level="INFO">${body} = { "type": "risk.assessment.result", "resource": "business.holder", "created_at": "2021-03-22 15:28:56.747Z", "marketplace_id": "f71a8951368a4cc085cf7875ff44e61c", "object": { "result": "APPROVED", "ho...</msg>
<status status="PASS" starttime="20210322 07:13:33.550" endtime="20210322 07:13:33.551"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/admin/internal_operation/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/registration/approval</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 07:13:33.553" level="INFO">POST Request using : uri=/admin/internal_operation/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/acc2833c30cb49ea9cbeea88e451f6d3/registration/approval, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "risk.assessment.result", "resource": "business.holder", "created_at": "2021-03-22 15:28:56.747Z", "marketplace_id": "f71a8951368a4cc085cf7875ff44e61c", "object": { "result": "APPROVED", "holder_id": "acc2833c30cb49ea9cbeea88e451f6d3", "applicant_id": "bcc25a6751c14b52af1340d40dba78c5", "assessment_id": "57147df2-96c1-4ed4-8442-7bb53e345a25" } } 
json=None</msg>
<msg timestamp="20210322 07:13:33.747" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 07:13:33.552" endtime="20210322 07:13:33.747"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 07:13:33.748" level="INFO">{'message': 'Holder approved successfully'}</msg>
<status status="PASS" starttime="20210322 07:13:33.748" endtime="20210322 07:13:33.748"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 07:13:33.748" level="INFO">af41cd3daadf7033</msg>
<status status="PASS" starttime="20210322 07:13:33.748" endtime="20210322 07:13:33.748"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 07:13:33.749" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 07:13:33.749" endtime="20210322 07:13:33.749"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 07:13:33.750" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 07:13:33.749" endtime="20210322 07:13:33.750"></status>
</kw>
<status status="PASS" starttime="20210322 07:13:33.544" endtime="20210322 07:13:33.750"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 07:13:33.750" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 07:13:33.750" endtime="20210322 07:13:33.750"></status>
</kw>
<kw name="buscar account por holder" library="accounts_get_accounts_by_holder">
<kw name="conectar accounts" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accounts</arg>
<arg>url=${account_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 07:13:33.751" level="INFO">Creating Session using : alias=accounts, url=https://banking-accounts-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 07:13:33.751" endtime="20210322 07:13:33.752"></status>
</kw>
<status status="PASS" starttime="20210322 07:13:33.751" endtime="20210322 07:13:33.752"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accounts</arg>
<arg>/marketplaces/${marketplace_external_key}/holders/${holder_external_key}/accounts</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 07:13:33.752" level="INFO">GET Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/holders/acc2833c30cb49ea9cbeea88e451f6d3/accounts, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 07:13:34.339" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 07:13:33.752" endtime="20210322 07:13:34.339"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 07:13:34.341" level="INFO">{'items': [{'id': '770801e1764747f8b2b5a5eab586c4f3', 'holder': 'acc2833c30cb49ea9cbeea88e451f6d3', 'balance': '0.00', 'currency': 'BRL', 'routing_number': '001', 'number': '5890813965', 'status': 'active', 'metadata': {}, 'created_at': '2021-03-22T10:13:34.687094', 'updated_at': '2021-03-22T10:13:34.687094', 'primary': True, 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'uri': '/v2/marketplaces/f71a8951368a4cc085cf7875ff44e61c/accounts/770801e1764747f8b2b5a5eab586c4f3', 'resource': 'payment_account'}], 'has_more': False, 'limit': 100, 'total_pages': 1, 'page': 1, 'offset': 0, 'total': '1', 'query_count': '1'}</msg>
<status status="PASS" starttime="20210322 07:13:34.340" endtime="20210322 07:13:34.342"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 07:13:34.343" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 07:13:34.342" endtime="20210322 07:13:34.343"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["id"]}</arg>
</arguments>
<assign>
<var>${account_external_key}</var>
</assign>
<msg timestamp="20210322 07:13:34.345" level="INFO">${account_external_key} = 770801e1764747f8b2b5a5eab586c4f3</msg>
<status status="PASS" starttime="20210322 07:13:34.344" endtime="20210322 07:13:34.345"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_external_key}</arg>
</arguments>
<msg timestamp="20210322 07:13:34.346" level="INFO">${account_external_key} = 770801e1764747f8b2b5a5eab586c4f3</msg>
<status status="PASS" starttime="20210322 07:13:34.346" endtime="20210322 07:13:34.347"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["number"]}</arg>
</arguments>
<assign>
<var>${account_number}</var>
</assign>
<msg timestamp="20210322 07:13:34.348" level="INFO">${account_number} = 5890813965</msg>
<status status="PASS" starttime="20210322 07:13:34.347" endtime="20210322 07:13:34.348"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_number}</arg>
</arguments>
<msg timestamp="20210322 07:13:34.349" level="INFO">${account_number} = 5890813965</msg>
<status status="PASS" starttime="20210322 07:13:34.349" endtime="20210322 07:13:34.349"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["routing_number"]}</arg>
</arguments>
<assign>
<var>${account_routing_number}</var>
</assign>
<msg timestamp="20210322 07:13:34.351" level="INFO">${account_routing_number} = 001</msg>
<status status="PASS" starttime="20210322 07:13:34.350" endtime="20210322 07:13:34.351"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_routing_number}</arg>
</arguments>
<msg timestamp="20210322 07:13:34.352" level="INFO">${account_routing_number} = 001</msg>
<status status="PASS" starttime="20210322 07:13:34.351" endtime="20210322 07:13:34.352"></status>
</kw>
<status status="PASS" starttime="20210322 07:13:33.750" endtime="20210322 07:13:34.352"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 07:13:34.353" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 07:13:34.352" endtime="20210322 07:13:34.353"></status>
</kw>
<status status="PASS" starttime="20210322 07:13:31.278" endtime="20210322 07:13:34.353"></status>
</kw>
<kw name="criar chave pix" library="pix_dict_create_entry">
<arguments>
<arg>type=phone</arg>
<arg>value=${phone_pix}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 07:13:34.356" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 07:13:34.355" endtime="20210322 07:13:34.357"></status>
</kw>
<status status="PASS" starttime="20210322 07:13:34.355" endtime="20210322 07:13:34.357"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${type}</arg>
</arguments>
<msg timestamp="20210322 07:13:34.357" level="INFO">${type} = phone</msg>
<status status="PASS" starttime="20210322 07:13:34.357" endtime="20210322 07:13:34.357"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210322 07:13:34.358" level="INFO">${value} = +5521916959976</msg>
<status status="PASS" starttime="20210322 07:13:34.357" endtime="20210322 07:13:34.358"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 07:13:34.358" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 07:13:34.358" endtime="20210322 07:13:34.358"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "${type}",</arg>
<arg>"value": "${value}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 07:13:34.358" level="INFO">${body} = { "type": "phone", "value": "+5521916959976" }</msg>
<status status="PASS" starttime="20210322 07:13:34.358" endtime="20210322 07:13:34.358"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 07:13:34.359" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/acc2833c30cb49ea9cbeea88e451f6d3/accounts/770801e1764747f8b2b5a5eab586c4f3/entries, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "phone", "value": "+5521916959976" } 
json=None</msg>
<msg timestamp="20210322 07:13:35.004" level="INFO">${response} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20210322 07:13:34.359" endtime="20210322 07:13:35.004"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 07:13:35.004" level="INFO">{'id': '9bb06f8001a04b0e876b68e892e8abc0', 'status': 'waiting_ownership_verification', 'created_at': '2021-03-22T07:13:35.962', 'updated_at': '2021-03-22T07:13:35.962', 'key': {'value': '+5521916959976', 'type': 'phone'}, 'account': {'id': '770801e1764747f8b2b5a5eab586c4f3', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': 'acc2833c30cb49ea9cbeea88e451f6d3', 'owner': {'name': 'Holder de teste', 'national_registration': '70238451941', 'type': 'individual'}, 'routing_number': '001', 'number': '5890813965', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}, 'resource': 'pix.entry'}</msg>
<status status="PASS" starttime="20210322 07:13:35.004" endtime="20210322 07:13:35.004"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 07:13:35.005" level="INFO">0de1952cc15b04c8</msg>
<status status="PASS" starttime="20210322 07:13:35.005" endtime="20210322 07:13:35.005"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 07:13:35.005" level="INFO">202</msg>
<status status="PASS" starttime="20210322 07:13:35.005" endtime="20210322 07:13:35.005"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 07:13:35.006" level="INFO">${response} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20210322 07:13:35.005" endtime="20210322 07:13:35.006"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${entry_external_key}</var>
</assign>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<status status="PASS" starttime="20210322 07:13:35.006" endtime="20210322 07:13:35.007"></status>
</kw>
<msg timestamp="20210322 07:13:35.007" level="INFO">${entry_external_key} = 9bb06f8001a04b0e876b68e892e8abc0</msg>
<status status="PASS" starttime="20210322 07:13:35.006" endtime="20210322 07:13:35.007"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${entry_external_key}</arg>
</arguments>
<msg timestamp="20210322 07:13:35.007" level="INFO">${entry_external_key} = 9bb06f8001a04b0e876b68e892e8abc0</msg>
<status status="PASS" starttime="20210322 07:13:35.007" endtime="20210322 07:13:35.007"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["key"]["value"]}</arg>
</arguments>
<assign>
<var>${entry_key_value}</var>
</assign>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["key"]["value"]}</arg>
</arguments>
<status status="PASS" starttime="20210322 07:13:35.007" endtime="20210322 07:13:35.007"></status>
</kw>
<msg timestamp="20210322 07:13:35.007" level="INFO">${entry_key_value} = +5521916959976</msg>
<status status="PASS" starttime="20210322 07:13:35.007" endtime="20210322 07:13:35.007"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${entry_key_value}</arg>
</arguments>
<msg timestamp="20210322 07:13:35.008" level="INFO">${entry_key_value} = +5521916959976</msg>
<status status="PASS" starttime="20210322 07:13:35.008" endtime="20210322 07:13:35.008"></status>
</kw>
<status status="PASS" starttime="20210322 07:13:34.354" endtime="20210322 07:13:35.008"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${holder_external_key}</arg>
</arguments>
<assign>
<var>${holder_claimer}</var>
</assign>
<msg timestamp="20210322 07:13:35.009" level="INFO">${holder_claimer} = acc2833c30cb49ea9cbeea88e451f6d3</msg>
<status status="PASS" starttime="20210322 07:13:35.009" endtime="20210322 07:13:35.009"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${holder_name}</arg>
</arguments>
<assign>
<var>${holder_name_claimer}</var>
</assign>
<msg timestamp="20210322 07:13:35.010" level="INFO">${holder_name_claimer} = Holder de teste</msg>
<status status="PASS" starttime="20210322 07:13:35.010" endtime="20210322 07:13:35.010"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${national_registration}</arg>
</arguments>
<assign>
<var>${national_registration_claimer}</var>
</assign>
<msg timestamp="20210322 07:13:35.011" level="INFO">${national_registration_claimer} = 70238451941</msg>
<status status="PASS" starttime="20210322 07:13:35.011" endtime="20210322 07:13:35.011"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${account_external_key}</arg>
</arguments>
<assign>
<var>${account_claimer}</var>
</assign>
<msg timestamp="20210322 07:13:35.011" level="INFO">${account_claimer} = 770801e1764747f8b2b5a5eab586c4f3</msg>
<status status="PASS" starttime="20210322 07:13:35.011" endtime="20210322 07:13:35.011"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${account_number}</arg>
</arguments>
<assign>
<var>${account_number_claimer}</var>
</assign>
<msg timestamp="20210322 07:13:35.012" level="INFO">${account_number_claimer} = 5890813965</msg>
<status status="PASS" starttime="20210322 07:13:35.012" endtime="20210322 07:13:35.012"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${account_routing_number}</arg>
</arguments>
<assign>
<var>${account_routing_number_claimer}</var>
</assign>
<msg timestamp="20210322 07:13:35.013" level="INFO">${account_routing_number_claimer} = 001</msg>
<status status="PASS" starttime="20210322 07:13:35.013" endtime="20210322 07:13:35.013"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${entry_external_key}</arg>
</arguments>
<assign>
<var>${entry_claimer}</var>
</assign>
<msg timestamp="20210322 07:13:35.014" level="INFO">${entry_claimer} = 9bb06f8001a04b0e876b68e892e8abc0</msg>
<status status="PASS" starttime="20210322 07:13:35.014" endtime="20210322 07:13:35.014"></status>
</kw>
<kw name="buscar verification code" library="pix_dict_verification_code">
<arguments>
<arg>holder_external_key=${holder_claimer}</arg>
<arg>account_external_key=${account_claimer}</arg>
<arg>entry_external_key=${entry_claimer}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 07:13:35.015" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 07:13:35.015" endtime="20210322 07:13:35.016"></status>
</kw>
<status status="PASS" starttime="20210322 07:13:35.015" endtime="20210322 07:13:35.016"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/admin/internal_operation/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries/${entry_external_key}/code</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 07:13:35.016" level="INFO">GET Request using : uri=/admin/internal_operation/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/acc2833c30cb49ea9cbeea88e451f6d3/accounts/770801e1764747f8b2b5a5eab586c4f3/entries/9bb06f8001a04b0e876b68e892e8abc0/code, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 07:13:35.608" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 07:13:35.016" endtime="20210322 07:13:35.608"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 07:13:35.610" level="INFO">{'code': '6078'}</msg>
<status status="PASS" starttime="20210322 07:13:35.609" endtime="20210322 07:13:35.610"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 07:13:35.611" level="INFO">b38849d973faad38</msg>
<status status="PASS" starttime="20210322 07:13:35.610" endtime="20210322 07:13:35.611"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 07:13:35.612" level="INFO">200</msg>
<status status="PASS" starttime="20210322 07:13:35.612" endtime="20210322 07:13:35.613"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 07:13:35.614" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 07:13:35.613" endtime="20210322 07:13:35.614"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["code"]}</arg>
</arguments>
<assign>
<var>${verification_code}</var>
</assign>
<msg timestamp="20210322 07:13:35.615" level="INFO">${verification_code} = 6078</msg>
<status status="PASS" starttime="20210322 07:13:35.614" endtime="20210322 07:13:35.615"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${verification_code}</arg>
</arguments>
<msg timestamp="20210322 07:13:35.616" level="INFO">${verification_code} = 6078</msg>
<status status="PASS" starttime="20210322 07:13:35.616" endtime="20210322 07:13:35.616"></status>
</kw>
<status status="PASS" starttime="20210322 07:13:35.014" endtime="20210322 07:13:35.617"></status>
</kw>
<kw name="confirmar propriedade da chave pix" library="pix_dict_confirm_propriety">
<arguments>
<arg>verification_code=${verification_code}</arg>
<arg>holder_external_key=${holder_claimer}</arg>
<arg>account_external_key=${account_claimer}</arg>
<arg>entry_external_key=${entry_claimer}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 07:13:35.621" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 07:13:35.621" endtime="20210322 07:13:35.622"></status>
</kw>
<status status="PASS" starttime="20210322 07:13:35.620" endtime="20210322 07:13:35.622"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 07:13:35.623" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 07:13:35.623" endtime="20210322 07:13:35.623"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"code": "${verification_code}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 07:13:35.623" level="INFO">${body} = { "code": "6078" }</msg>
<status status="PASS" starttime="20210322 07:13:35.623" endtime="20210322 07:13:35.623"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries/${entry_external_key}/ownership</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 07:13:35.624" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/acc2833c30cb49ea9cbeea88e451f6d3/accounts/770801e1764747f8b2b5a5eab586c4f3/entries/9bb06f8001a04b0e876b68e892e8abc0/ownership, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "code": "6078" } 
json=None</msg>
<msg timestamp="20210322 07:13:36.994" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 07:13:35.623" endtime="20210322 07:13:36.994"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 07:13:36.994" level="INFO">{'id': '9bb06f8001a04b0e876b68e892e8abc0', 'status': 'waiting_ownership_claiming', 'created_at': '2021-03-22T07:13:35.962', 'updated_at': '2021-03-22T07:13:37.961', 'key': {'value': '+5521916959976', 'type': 'phone'}, 'account': {'id': '770801e1764747f8b2b5a5eab586c4f3', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': 'acc2833c30cb49ea9cbeea88e451f6d3', 'owner': {'name': 'Holder de teste', 'national_registration': '70238451941', 'type': 'individual'}, 'routing_number': '001', 'number': '5890813965', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}, 'resource': 'pix.entry'}</msg>
<status status="PASS" starttime="20210322 07:13:36.994" endtime="20210322 07:13:36.994"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 07:13:36.995" level="INFO">a1f6e408a95d864f</msg>
<status status="PASS" starttime="20210322 07:13:36.995" endtime="20210322 07:13:36.995"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 07:13:36.995" level="INFO">201</msg>
<status status="PASS" starttime="20210322 07:13:36.995" endtime="20210322 07:13:36.995"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 07:13:36.996" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 07:13:36.996" endtime="20210322 07:13:36.996"></status>
</kw>
<status status="PASS" starttime="20210322 07:13:35.619" endtime="20210322 07:13:36.996"></status>
</kw>
<kw name="validar chave pix" library="asserts">
<arguments>
<arg>key_status=waiting_ownership_claiming</arg>
<arg>key_type=${type}</arg>
<arg>key_value=${value}</arg>
<arg>account_external_key=${account_claimer}</arg>
<arg>marketplace_external_key=${marketplace_external_key}</arg>
<arg>holder_external_key=${holder_claimer}</arg>
<arg>account_number=${account_number_claimer}</arg>
<arg>account_routing_number=${account_routing_number_claimer}</arg>
<arg>account_type=CACC</arg>
<arg>owner_key_name=${holder_name_claimer}</arg>
<arg>national_registration=${national_registration_claimer}</arg>
<arg>holder_type=${holder_type}</arg>
<arg>psp_code=19468242</arg>
<arg>psp_name=Zoop Tecnologia e Meios de Pagamento S.A.</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar status da chave</arg>
</arguments>
<msg timestamp="20210322 07:13:36.998" level="INFO">Validar status da chave</msg>
<status status="PASS" starttime="20210322 07:13:36.998" endtime="20210322 07:13:36.998"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["status"]}</arg>
<arg>${key_status}</arg>
</arguments>
<status status="PASS" starttime="20210322 07:13:36.998" endtime="20210322 07:13:36.998"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando Tipo da chave PIX</arg>
</arguments>
<msg timestamp="20210322 07:13:36.999" level="INFO">Validando Tipo da chave PIX</msg>
<status status="PASS" starttime="20210322 07:13:36.998" endtime="20210322 07:13:36.999"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["key"]["type"]}</arg>
<arg>${key_type}</arg>
</arguments>
<status status="PASS" starttime="20210322 07:13:36.999" endtime="20210322 07:13:36.999"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando Valor da chave PIX</arg>
</arguments>
<msg timestamp="20210322 07:13:36.999" level="INFO">Validando Valor da chave PIX</msg>
<status status="PASS" starttime="20210322 07:13:36.999" endtime="20210322 07:13:37.000"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${type}' == 'evp'</arg>
<arg>Should Not Be Empty</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' != 'evp'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${key_value}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${key_value}</arg>
</arguments>
<status status="PASS" starttime="20210322 07:13:37.000" endtime="20210322 07:13:37.001"></status>
</kw>
<status status="PASS" starttime="20210322 07:13:37.000" endtime="20210322 07:13:37.001"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando dados da conta</arg>
</arguments>
<msg timestamp="20210322 07:13:37.001" level="INFO">Validando dados da conta</msg>
<status status="PASS" starttime="20210322 07:13:37.001" endtime="20210322 07:13:37.001"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["id"]}</arg>
<arg>${account_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210322 07:13:37.002" endtime="20210322 07:13:37.002"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["marketplace"]}</arg>
<arg>${marketplace_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210322 07:13:37.002" endtime="20210322 07:13:37.002"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["holder"]}</arg>
<arg>${holder_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210322 07:13:37.003" endtime="20210322 07:13:37.003"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["number"]}</arg>
<arg>${account_number}</arg>
</arguments>
<status status="PASS" starttime="20210322 07:13:37.003" endtime="20210322 07:13:37.003"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["routing_number"]}</arg>
<arg>${account_routing_number}</arg>
</arguments>
<status status="PASS" starttime="20210322 07:13:37.004" endtime="20210322 07:13:37.004"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["type"]}</arg>
<arg>${account_type}</arg>
</arguments>
<status status="PASS" starttime="20210322 07:13:37.004" endtime="20210322 07:13:37.004"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar Proprietário da Account Owner</arg>
</arguments>
<msg timestamp="20210322 07:13:37.005" level="INFO">Validar Proprietário da Account Owner</msg>
<status status="PASS" starttime="20210322 07:13:37.005" endtime="20210322 07:13:37.005"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["account"]["owner"]["name"]}</arg>
<arg>${owner_key_name}</arg>
</arguments>
<status status="PASS" starttime="20210322 07:13:37.005" endtime="20210322 07:13:37.005"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar national_registration da Account Owner</arg>
</arguments>
<msg timestamp="20210322 07:13:37.005" level="INFO">Validar national_registration da Account Owner</msg>
<status status="PASS" starttime="20210322 07:13:37.005" endtime="20210322 07:13:37.006"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["account"]["owner"]["national_registration"]}</arg>
<arg>${national_registration}</arg>
</arguments>
<status status="PASS" starttime="20210322 07:13:37.006" endtime="20210322 07:13:37.006"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar Holder Type do Account Owner</arg>
</arguments>
<msg timestamp="20210322 07:13:37.006" level="INFO">Validar Holder Type do Account Owner</msg>
<status status="PASS" starttime="20210322 07:13:37.006" endtime="20210322 07:13:37.006"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["account"]["owner"]["type"]}</arg>
<arg>${holder_type}</arg>
</arguments>
<status status="PASS" starttime="20210322 07:13:37.006" endtime="20210322 07:13:37.007"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar PSP</arg>
</arguments>
<msg timestamp="20210322 07:13:37.008" level="INFO">Validar PSP</msg>
<status status="PASS" starttime="20210322 07:13:37.008" endtime="20210322 07:13:37.008"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["psp"]["code"]}</arg>
<arg>${psp_code}</arg>
</arguments>
<status status="PASS" starttime="20210322 07:13:37.008" endtime="20210322 07:13:37.008"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["psp"]["name"]}</arg>
<arg>${psp_name}</arg>
</arguments>
<status status="PASS" starttime="20210322 07:13:37.008" endtime="20210322 07:13:37.008"></status>
</kw>
<status status="PASS" starttime="20210322 07:13:36.997" endtime="20210322 07:13:37.008"></status>
</kw>
<kw name="criar reivindicação de posse" library="pix_dict_create_claims">
<arguments>
<arg>holder_external_key=${holder_claimer}</arg>
<arg>account_external_key=${account_claimer}</arg>
<arg>entry_external_key=${entry_claimer}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 07:13:37.010" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 07:13:37.009" endtime="20210322 07:13:37.010"></status>
</kw>
<status status="PASS" starttime="20210322 07:13:37.009" endtime="20210322 07:13:37.010"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries/${entry_external_key}/claims</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 07:13:37.011" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/acc2833c30cb49ea9cbeea88e451f6d3/accounts/770801e1764747f8b2b5a5eab586c4f3/entries/9bb06f8001a04b0e876b68e892e8abc0/claims, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 07:13:38.936" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 07:13:37.010" endtime="20210322 07:13:38.936"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 07:13:38.939" level="INFO">{'id': '2fb01a6ce8f5438db08af4f9629e5c01', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'created_at': '2021-03-22T07:13:39.896', 'updated_at': '2021-03-22T07:13:39.896', 'type': 'OWNERSHIP', 'status': 'open', 'key': {'value': '+5521916959976', 'type': 'phone'}, 'claimer': {'name': 'Holder de teste', 'national_registration': '70238451941', 'type': 'individual', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': 'acc2833c30cb49ea9cbeea88e451f6d3', 'account': {'digital_account_id': '770801e1764747f8b2b5a5eab586c4f3', 'routing_number': '001', 'number': '5890813965', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}}, 'donor': {'name': 'Holder de teste', 'national_registration': '51960342851', 'type': 'individual', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': 'd9ada9409149465bbc0a2ee97a932cdd', 'account': {'digital_account_id': '8f9db01f2d7e466d8714973c190ee7ca', 'routing_number': '001', 'number': '7014332803', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}}, 'completion_period_end': '2021-04-05T10:13:39.000', 'resolution_period_end': '2021-03-29T10:13:39.000', 'resource': 'pix.claim'}</msg>
<status status="PASS" starttime="20210322 07:13:38.937" endtime="20210322 07:13:38.939"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 07:13:38.941" level="INFO">4bce071f0fd7dbe1</msg>
<status status="PASS" starttime="20210322 07:13:38.940" endtime="20210322 07:13:38.941"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 07:13:38.943" level="INFO">201</msg>
<status status="PASS" starttime="20210322 07:13:38.942" endtime="20210322 07:13:38.943"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 07:13:38.945" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 07:13:38.944" endtime="20210322 07:13:38.946"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${claim_external_key}</var>
</assign>
<msg timestamp="20210322 07:13:38.948" level="INFO">${claim_external_key} = 2fb01a6ce8f5438db08af4f9629e5c01</msg>
<status status="PASS" starttime="20210322 07:13:38.947" endtime="20210322 07:13:38.949"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${claim_external_key}</arg>
</arguments>
<msg timestamp="20210322 07:13:38.951" level="INFO">${claim_external_key} = 2fb01a6ce8f5438db08af4f9629e5c01</msg>
<status status="PASS" starttime="20210322 07:13:38.950" endtime="20210322 07:13:38.951"></status>
</kw>
<status status="PASS" starttime="20210322 07:13:37.009" endtime="20210322 07:13:38.951"></status>
</kw>
<kw name="buscar reivindicação de posse" library="pix_dict_get_claims">
<arguments>
<arg>holder_external_key=${holder_claimer}</arg>
<arg>account_external_key=${account_claimer}</arg>
<arg>claim_external_key=${claim_external_key}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 07:13:38.957" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 07:13:38.956" endtime="20210322 07:13:38.957"></status>
</kw>
<status status="PASS" starttime="20210322 07:13:38.955" endtime="20210322 07:13:38.957"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/claims/${claim_external_key}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 07:13:38.959" level="INFO">GET Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/acc2833c30cb49ea9cbeea88e451f6d3/accounts/770801e1764747f8b2b5a5eab586c4f3/claims/2fb01a6ce8f5438db08af4f9629e5c01, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 07:13:39.571" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 07:13:38.958" endtime="20210322 07:13:39.571"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 07:13:39.573" level="INFO">{'id': '2fb01a6ce8f5438db08af4f9629e5c01', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'created_at': '2021-03-22T07:13:39.896', 'updated_at': '2021-03-22T07:13:39.896', 'type': 'OWNERSHIP', 'status': 'open', 'key': {'value': '+5521916959976', 'type': 'phone'}, 'claimer': {'name': 'Holder de teste', 'national_registration': '70238451941', 'type': 'individual', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': 'acc2833c30cb49ea9cbeea88e451f6d3', 'account': {'digital_account_id': '770801e1764747f8b2b5a5eab586c4f3', 'routing_number': '001', 'number': '5890813965', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}}, 'donor': {'name': 'Holder de teste', 'national_registration': '51960342851', 'type': 'individual', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': 'd9ada9409149465bbc0a2ee97a932cdd', 'account': {'digital_account_id': '8f9db01f2d7e466d8714973c190ee7ca', 'routing_number': '001', 'number': '7014332803', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}}, 'completion_period_end': '2021-04-05T10:13:39.000', 'resolution_period_end': '2021-03-29T10:13:39.000', 'resource': 'pix.claim'}</msg>
<status status="PASS" starttime="20210322 07:13:39.572" endtime="20210322 07:13:39.574"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 07:13:39.575" level="INFO">6db4afd0492bb03b</msg>
<status status="PASS" starttime="20210322 07:13:39.574" endtime="20210322 07:13:39.576"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 07:13:39.577" level="INFO">200</msg>
<status status="PASS" starttime="20210322 07:13:39.576" endtime="20210322 07:13:39.578"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 07:13:39.580" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 07:13:39.579" endtime="20210322 07:13:39.580"></status>
</kw>
<status status="PASS" starttime="20210322 07:13:38.953" endtime="20210322 07:13:39.581"></status>
</kw>
<kw name="validar status da reivindicação" library="asserts">
<arguments>
<arg>claim_status=open</arg>
</arguments>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["status"]}</arg>
<arg>${claim_status}</arg>
</arguments>
<status status="PASS" starttime="20210322 07:13:39.585" endtime="20210322 07:13:39.586"></status>
</kw>
<status status="PASS" starttime="20210322 07:13:39.583" endtime="20210322 07:13:39.587"></status>
</kw>
<kw name="receber notificação de reivindicação" library="pix_dict_receive_claim_notification">
<arguments>
<arg>key_pix=${value}</arg>
<arg>account_number=${account_number_owner}</arg>
<arg>claimer_tax_id=${national_registration_owner}</arg>
<arg>claimer_name=${holder_name_owner}</arg>
<arg>claim_external_key=${claim_external_key}</arg>
<arg>claim_notification_status=WAITING_RESOLUTION</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 07:13:39.592" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 07:13:39.592" endtime="20210322 07:13:39.593"></status>
</kw>
<status status="PASS" starttime="20210322 07:13:39.591" endtime="20210322 07:13:39.593"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 07:13:39.594" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 07:13:39.594" endtime="20210322 07:13:39.594"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"data": {</arg>
<arg>"claim": {</arg>
<arg>"type": "OWNERSHIP",</arg>
<arg>"key": "${key_pix}",</arg>
<arg>"key_type": "PHONE",</arg>
<arg>"claimer_account": {</arg>
<arg>"participant": "19468242",</arg>
<arg>"branch": "0001",</arg>
<arg>"account_number": "${account_number}",</arg>
<arg>"account_type": "CACC"</arg>
<arg>},</arg>
<arg>"claimer": {</arg>
<arg>"type": "NATURAL_PERSON",</arg>
<arg>"tax_id_number": "${claimer_tax_id}",</arg>
<arg>"name": "${claimer_name}"</arg>
<arg>},</arg>
<arg>"donor_participant": "19468242",</arg>
<arg>"id": "${claim_external_key}",</arg>
<arg>"status": "${claim_notification_status}",</arg>
<arg>"resolution_period_end": "2020-10-18T10:00:00.000Z",</arg>
<arg>"completion_period_end": "2020-10-25T10:00:00.000Z",</arg>
<arg>"last_modified": "2020-10-17T10:00:00.000Z"</arg>
<arg>}</arg>
<arg>}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 07:13:39.595" level="INFO">${body} = { "data": { "claim": { "type": "OWNERSHIP", "key": "+5521916959976", "key_type": "PHONE", "claimer_account": { "participant": "19468242", "branch": "0001", "account_number": "7014332803", "account_typ...</msg>
<status status="PASS" starttime="20210322 07:13:39.595" endtime="20210322 07:13:39.595"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/banking/internal/dict/claims</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 07:13:39.596" level="INFO">POST Request using : uri=/banking/internal/dict/claims, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "data": { "claim": { "type": "OWNERSHIP", "key": "+5521916959976", "key_type": "PHONE", "claimer_account": { "participant": "19468242", "branch": "0001", "account_number": "7014332803", "account_type": "CACC" }, "claimer": { "type": "NATURAL_PERSON", "tax_id_number": "51960342851", "name": "Holder de teste" }, "donor_participant": "19468242", "id": "2fb01a6ce8f5438db08af4f9629e5c01", "status": "WAITING_RESOLUTION", "resolution_period_end": "2020-10-18T10:00:00.000Z", "completion_period_end": "2020-10-25T10:00:00.000Z", "last_modified": "2020-10-17T10:00:00.000Z" } } } 
json=None</msg>
<msg timestamp="20210322 07:13:40.240" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 07:13:39.595" endtime="20210322 07:13:40.240"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 07:13:40.241" level="INFO">200</msg>
<status status="PASS" starttime="20210322 07:13:40.240" endtime="20210322 07:13:40.241"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 07:13:40.241" level="INFO">dc759ed5f133f740</msg>
<status status="PASS" starttime="20210322 07:13:40.241" endtime="20210322 07:13:40.241"></status>
</kw>
<status status="PASS" starttime="20210322 07:13:39.589" endtime="20210322 07:13:40.241"></status>
</kw>
<kw name="buscar reivindicação de posse" library="pix_dict_get_claims">
<arguments>
<arg>holder_external_key=${holder_claimer}</arg>
<arg>account_external_key=${account_claimer}</arg>
<arg>claim_external_key=${claim_external_key}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 07:13:40.244" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 07:13:40.243" endtime="20210322 07:13:40.244"></status>
</kw>
<status status="PASS" starttime="20210322 07:13:40.243" endtime="20210322 07:13:40.244"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/claims/${claim_external_key}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 07:13:40.245" level="INFO">GET Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/acc2833c30cb49ea9cbeea88e451f6d3/accounts/770801e1764747f8b2b5a5eab586c4f3/claims/2fb01a6ce8f5438db08af4f9629e5c01, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 07:13:40.851" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 07:13:40.244" endtime="20210322 07:13:40.851"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 07:13:40.852" level="INFO">{'id': '2fb01a6ce8f5438db08af4f9629e5c01', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'created_at': '2021-03-22T07:13:39.896', 'updated_at': '2021-03-22T07:13:41.206', 'type': 'OWNERSHIP', 'status': 'waiting_resolution', 'key': {'value': '+5521916959976', 'type': 'phone'}, 'claimer': {'name': 'Holder de teste', 'national_registration': '70238451941', 'type': 'individual', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': 'acc2833c30cb49ea9cbeea88e451f6d3', 'account': {'digital_account_id': '770801e1764747f8b2b5a5eab586c4f3', 'routing_number': '001', 'number': '5890813965', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}}, 'donor': {'name': 'Holder de teste', 'national_registration': '51960342851', 'type': 'individual', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': 'd9ada9409149465bbc0a2ee97a932cdd', 'account': {'digital_account_id': '8f9db01f2d7e466d8714973c190ee7ca', 'routing_number': '001', 'number': '7014332803', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}}, 'completion_period_end': '2021-04-05T10:13:39.000', 'resolution_period_end': '2021-03-29T10:13:39.000', 'resource': 'pix.claim'}</msg>
<status status="PASS" starttime="20210322 07:13:40.851" endtime="20210322 07:13:40.852"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 07:13:40.852" level="INFO">c27cbe44de9e1eba</msg>
<status status="PASS" starttime="20210322 07:13:40.852" endtime="20210322 07:13:40.853"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 07:13:40.853" level="INFO">200</msg>
<status status="PASS" starttime="20210322 07:13:40.853" endtime="20210322 07:13:40.853"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 07:13:40.854" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 07:13:40.853" endtime="20210322 07:13:40.854"></status>
</kw>
<status status="PASS" starttime="20210322 07:13:40.242" endtime="20210322 07:13:40.854"></status>
</kw>
<kw name="validar status da reivindicação" library="asserts">
<arguments>
<arg>claim_status=waiting_resolution</arg>
</arguments>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["status"]}</arg>
<arg>${claim_status}</arg>
</arguments>
<status status="PASS" starttime="20210322 07:13:40.855" endtime="20210322 07:13:40.856"></status>
</kw>
<status status="PASS" starttime="20210322 07:13:40.855" endtime="20210322 07:13:40.856"></status>
</kw>
<kw name="${index} IN RANGE [ 60 ]" type="for">
<kw name="${index} = 0" type="foritem">
<kw name="cancelar reivindicação de posse" library="pix_dict_cancel_claims">
<arguments>
<arg>holder_external_key=${holder_owner}</arg>
<arg>account_external_key=${account_owner}</arg>
<arg>claim_external_key=${claim_external_key}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 07:13:40.859" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 07:13:40.859" endtime="20210322 07:13:40.859"></status>
</kw>
<status status="PASS" starttime="20210322 07:13:40.858" endtime="20210322 07:13:40.859"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/claims/${claim_external_key}/cancel</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 07:13:40.860" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/d9ada9409149465bbc0a2ee97a932cdd/accounts/8f9db01f2d7e466d8714973c190ee7ca/claims/2fb01a6ce8f5438db08af4f9629e5c01/cancel, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 07:13:41.477" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 07:13:40.859" endtime="20210322 07:13:41.477"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 07:13:41.480" level="INFO">{'message': 'Claim cancelled successfully'}</msg>
<status status="PASS" starttime="20210322 07:13:41.478" endtime="20210322 07:13:41.480"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 07:13:41.482" level="INFO">d7b98737f211682e</msg>
<status status="PASS" starttime="20210322 07:13:41.481" endtime="20210322 07:13:41.482"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 07:13:41.483" level="INFO">200</msg>
<status status="PASS" starttime="20210322 07:13:41.483" endtime="20210322 07:13:41.484"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 07:13:41.485" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 07:13:41.484" endtime="20210322 07:13:41.485"></status>
</kw>
<status status="PASS" starttime="20210322 07:13:40.858" endtime="20210322 07:13:41.485"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${response.json()["message"]}' == 'Claim cancelled successfully'</arg>
</arguments>
<msg timestamp="20210322 07:13:41.487" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20210322 07:13:41.486" endtime="20210322 07:13:41.487"></status>
</kw>
<status status="PASS" starttime="20210322 07:13:40.857" endtime="20210322 07:13:41.487"></status>
</kw>
<status status="PASS" starttime="20210322 07:13:40.857" endtime="20210322 07:13:41.487"></status>
</kw>
<kw name="buscar reivindicação de posse" library="pix_dict_get_claims">
<arguments>
<arg>holder_external_key=${holder_claimer}</arg>
<arg>account_external_key=${account_claimer}</arg>
<arg>claim_external_key=${claim_external_key}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 07:13:41.491" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 07:13:41.490" endtime="20210322 07:13:41.491"></status>
</kw>
<status status="PASS" starttime="20210322 07:13:41.489" endtime="20210322 07:13:41.491"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/claims/${claim_external_key}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 07:13:41.493" level="INFO">GET Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/acc2833c30cb49ea9cbeea88e451f6d3/accounts/770801e1764747f8b2b5a5eab586c4f3/claims/2fb01a6ce8f5438db08af4f9629e5c01, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 07:13:42.076" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 07:13:41.493" endtime="20210322 07:13:42.076"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 07:13:42.077" level="INFO">{'id': '2fb01a6ce8f5438db08af4f9629e5c01', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'created_at': '2021-03-22T07:13:39.896', 'updated_at': '2021-03-22T07:13:42.445', 'type': 'OWNERSHIP', 'status': 'waiting_entry_ownership_confirm_to_cancel', 'cancel_reason': 'FRAUD', 'key': {'value': '+5521916959976', 'type': 'phone'}, 'claimer': {'name': 'Holder de teste', 'national_registration': '70238451941', 'type': 'individual', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': 'acc2833c30cb49ea9cbeea88e451f6d3', 'account': {'digital_account_id': '770801e1764747f8b2b5a5eab586c4f3', 'routing_number': '001', 'number': '5890813965', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}}, 'donor': {'name': 'Holder de teste', 'national_registration': '51960342851', 'type': 'individual', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': 'd9ada9409149465bbc0a2ee97a932cdd', 'account': {'digital_account_id': '8f9db01f2d7e466d8714973c190ee7ca', 'routing_number': '001', 'number': '7014332803', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}}, 'completion_period_end': '2021-04-05T10:13:39.000', 'resolution_period_end': '2021-03-29T10:13:39.000', 'resource': 'pix.claim'}</msg>
<status status="PASS" starttime="20210322 07:13:42.077" endtime="20210322 07:13:42.077"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 07:13:42.077" level="INFO">6f51272a279fc51a</msg>
<status status="PASS" starttime="20210322 07:13:42.077" endtime="20210322 07:13:42.077"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 07:13:42.078" level="INFO">200</msg>
<status status="PASS" starttime="20210322 07:13:42.078" endtime="20210322 07:13:42.078"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 07:13:42.078" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 07:13:42.078" endtime="20210322 07:13:42.078"></status>
</kw>
<status status="PASS" starttime="20210322 07:13:41.488" endtime="20210322 07:13:42.078"></status>
</kw>
<kw name="validar status da reivindicação" library="asserts">
<arguments>
<arg>claim_status=waiting_entry_ownership_confirm_to_cancel</arg>
</arguments>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["status"]}</arg>
<arg>${claim_status}</arg>
</arguments>
<status status="PASS" starttime="20210322 07:13:42.079" endtime="20210322 07:13:42.079"></status>
</kw>
<status status="PASS" starttime="20210322 07:13:42.079" endtime="20210322 07:13:42.080"></status>
</kw>
<doc>Fluxo Básico</doc>
<tags>
<tag>regression_test</tag>
<tag>smoke_test</tag>
</tags>
<status status="PASS" starttime="20210322 07:13:24.646" endtime="20210322 07:13:42.080" critical="yes"></status>
</test>
<doc>Funcionalidade: Cancelar Reivindicação de Posse
Eu, como um Holder, portador de uma conta ativa em Banking
Desejo cancelar a reivindicação de posse de uma chave de endereçamento</doc>
<status status="PASS" starttime="20210322 07:13:24.089" endtime="20210322 07:13:42.081"></status>
</suite>
<statistics>
<total>
<stat pass="1" fail="0">Critical Tests</stat>
<stat pass="1" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="1" fail="0">regression_test</stat>
<stat pass="1" fail="0">smoke_test</stat>
</tag>
<suite>
<stat pass="1" fail="0" id="s1" name="Cancelar Reivindicação de Posse">Cancelar Reivindicação de Posse</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>

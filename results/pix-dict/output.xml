<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.8.1 on win32)" generated="20210322 17:43:57.484" rpa="false">
<suite id="s1" name="Pix-Dict" source="C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\tests\pix-dict">
<suite id="s1-s1" name="Diretorio" source="C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\tests\pix-dict\diretorio">
<suite id="s1-s1-s1" name="Buscar Chave de Endereçamento" source="C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\tests\pix-dict\diretorio\Buscar Chave de Endereçamento.robot">
<test id="s1-s1-s1-t1" name="Cenário: Buscar chave de endereçamento do tipo EVP">
<kw name="criar holder individual ativo" library="accreditation_create_holder_active">
<kw name="conectar accreditation" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accreditation</arg>
<arg>url=${accreditation_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 17:43:58.204" level="INFO">Creating Session using : alias=accreditation, url=https://banking-accreditation-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 17:43:58.203" endtime="20210322 17:43:58.205"></status>
</kw>
<status status="PASS" starttime="20210322 17:43:58.202" endtime="20210322 17:43:58.205"></status>
</kw>
<kw name="Cpf" library="FakerLibrary">
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 17:43:58.206" level="INFO">${national_registration} = 042.617.359-70</msg>
<status status="PASS" starttime="20210322 17:43:58.205" endtime="20210322 17:43:58.206"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${national_registration}</arg>
<arg>.</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 17:43:58.207" level="INFO">${national_registration} = 042617359-70</msg>
<status status="PASS" starttime="20210322 17:43:58.206" endtime="20210322 17:43:58.207"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${national_registration}</arg>
<arg>-</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 17:43:58.208" level="INFO">${national_registration} = 04261735970</msg>
<status status="PASS" starttime="20210322 17:43:58.207" endtime="20210322 17:43:58.208"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${national_registration}</arg>
</arguments>
<msg timestamp="20210322 17:43:58.208" level="INFO">${national_registration} = 04261735970</msg>
<status status="PASS" starttime="20210322 17:43:58.208" endtime="20210322 17:43:58.208"></status>
</kw>
<kw name="Rg" library="FakerLibrary">
<doc>Brazilian RG, return plain numbers.
Check:  https://www.ngmatematica.com/2014/02/como-determinar-o-digito-verificador-do.html</doc>
<assign>
<var>${identity_card}</var>
</assign>
<msg timestamp="20210322 17:43:58.209" level="INFO">${identity_card} = 843576108</msg>
<status status="PASS" starttime="20210322 17:43:58.209" endtime="20210322 17:43:58.209"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${identity_card}</arg>
</arguments>
<msg timestamp="20210322 17:43:58.210" level="INFO">${identity_card} = 843576108</msg>
<status status="PASS" starttime="20210322 17:43:58.210" endtime="20210322 17:43:58.210"></status>
</kw>
<kw name="criar holder individual" library="accreditation_post_holder_individual">
<arguments>
<arg>holder_type=individual</arg>
<arg>holder_name=${holder_name}</arg>
<arg>email=${email}</arg>
<arg>national_registration=${national_registration}</arg>
<arg>revenue=${revenue}</arg>
<arg>birthday=${birthday}</arg>
<arg>mothers_name=${mothers_name}</arg>
<arg>identity_card=${identity_card}</arg>
<arg>pep=false</arg>
<arg>cbo=${cbo}</arg>
</arguments>
<kw name="conectar accreditation" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accreditation</arg>
<arg>url=${accreditation_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 17:43:58.213" level="INFO">Creating Session using : alias=accreditation, url=https://banking-accreditation-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 17:43:58.213" endtime="20210322 17:43:58.214"></status>
</kw>
<status status="PASS" starttime="20210322 17:43:58.212" endtime="20210322 17:43:58.214"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_type}</arg>
</arguments>
<msg timestamp="20210322 17:43:58.215" level="INFO">${holder_type} = individual</msg>
<status status="PASS" starttime="20210322 17:43:58.215" endtime="20210322 17:43:58.215"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_name}</arg>
</arguments>
<msg timestamp="20210322 17:43:58.216" level="INFO">${holder_name} = Holder de teste</msg>
<status status="PASS" starttime="20210322 17:43:58.216" endtime="20210322 17:43:58.216"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:43:58.218" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 17:43:58.217" endtime="20210322 17:43:58.218"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "${holder_type}",</arg>
<arg>"name": "${holder_name}",</arg>
<arg>"email": "${email}",</arg>
<arg>"national_registration": "${national_registration}",</arg>
<arg>"revenue": ${revenue},</arg>
<arg>"birthday": "${birthday}",</arg>
<arg>"mothers_name": "${mothers_name}",</arg>
<arg>"identity_card": "${identity_card}",</arg>
<arg>"pep": false,</arg>
<arg>"cbo": ${cbo}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 17:43:58.219" level="INFO">${body} = { "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "04261735970", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder",...</msg>
<status status="PASS" starttime="20210322 17:43:58.218" endtime="20210322 17:43:58.219"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:43:58.221" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "04261735970", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder", "identity_card": "843576108", "pep": false, "cbo": 821450 } 
json=None</msg>
<msg timestamp="20210322 17:43:58.902" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:43:58.220" endtime="20210322 17:43:58.902"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:43:58.902" level="INFO">{'id': '36fa89f88e904ea9b78d45a175039fe9', 'name': 'Holder de teste', 'revenue': 5500.0, 'email': 'teste@teste.com.br', 'status': 'waiting_info_and_documents', 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'marketplace_name': 'Marketplace de Teste', 'created_at': '2021-03-22T17:44:00.05068', 'updated_at': '2021-03-22T17:44:00.050682', 'type': 'individual', 'national_registration': '04261735970', 'birthday': '1988-04-23', 'mothers_name': 'Mãe do Holder', 'identity_card': '843576108', 'pep': False, 'cbo': '821450', '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/36fa89f88e904ea9b78d45a175039fe9', 'type': 'GET'}, 'phones': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/36fa89f88e904ea9b78d45a175039fe9/phones', 'type': 'GET'}, 'addresses': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/36fa89f88e904ea9b78d45a175039fe9/addresses', 'type': 'GET'}, 'documents': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/36fa89f88e904ea9b78d45a175039fe9/documents', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 17:43:58.902" endtime="20210322 17:43:58.902"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:43:58.903" level="INFO">57d9b8bbf6ed0360</msg>
<status status="PASS" starttime="20210322 17:43:58.902" endtime="20210322 17:43:58.903"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${body}</arg>
</arguments>
<msg timestamp="20210322 17:43:58.903" level="INFO">{ "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "04261735970", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder", "identity_card": "843576108", "pep": false, "cbo": 821450 }</msg>
<status status="PASS" starttime="20210322 17:43:58.903" endtime="20210322 17:43:58.903"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:43:58.903" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:43:58.903" endtime="20210322 17:43:58.904"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${holder_external_key}</var>
</assign>
<msg timestamp="20210322 17:43:58.905" level="INFO">${holder_external_key} = 36fa89f88e904ea9b78d45a175039fe9</msg>
<status status="PASS" starttime="20210322 17:43:58.904" endtime="20210322 17:43:58.905"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_external_key}</arg>
</arguments>
<msg timestamp="20210322 17:43:58.905" level="INFO">${holder_external_key} = 36fa89f88e904ea9b78d45a175039fe9</msg>
<status status="PASS" starttime="20210322 17:43:58.905" endtime="20210322 17:43:58.905"></status>
</kw>
<status status="PASS" starttime="20210322 17:43:58.211" endtime="20210322 17:43:58.905"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_name}</arg>
</arguments>
<msg timestamp="20210322 17:43:58.906" level="INFO">${holder_name} = Holder de teste</msg>
<status status="PASS" starttime="20210322 17:43:58.905" endtime="20210322 17:43:58.906"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 17:43:58.906" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:43:58.906" endtime="20210322 17:43:58.906"></status>
</kw>
<kw name="criar holder phone" library="accreditation_post_holder_phone">
<arguments>
<arg>21</arg>
<arg>51</arg>
<arg>996221236</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:43:58.907" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 17:43:58.907" endtime="20210322 17:43:58.907"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"area_code": "${phone_area_code}",</arg>
<arg>"country_code": "${phone_country_code}",</arg>
<arg>"number": "${phone_number}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 17:43:58.907" level="INFO">${body} = { "area_code": "21", "country_code": "51", "number": "996221236" }</msg>
<status status="PASS" starttime="20210322 17:43:58.907" endtime="20210322 17:43:58.907"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/phones</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:43:58.908" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/36fa89f88e904ea9b78d45a175039fe9/phones, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "area_code": "21", "country_code": "51", "number": "996221236" } 
json=None</msg>
<msg timestamp="20210322 17:43:59.145" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:43:58.908" endtime="20210322 17:43:59.145"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:43:59.146" level="INFO">{'id': 'e59a050ec1a94bc68ac0b499638fc486', 'area_code': '21', 'country_code': '51', 'number': '996221236', 'main': True, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/36fa89f88e904ea9b78d45a175039fe9/phones/e59a050ec1a94bc68ac0b499638fc486', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/36fa89f88e904ea9b78d45a175039fe9', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 17:43:59.146" endtime="20210322 17:43:59.146"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:43:59.147" level="INFO">54430de67a26a241</msg>
<status status="PASS" starttime="20210322 17:43:59.147" endtime="20210322 17:43:59.147"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:43:59.148" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:43:59.148" endtime="20210322 17:43:59.148"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${phone_external_key}</var>
</assign>
<msg timestamp="20210322 17:43:59.149" level="INFO">${phone_external_key} = e59a050ec1a94bc68ac0b499638fc486</msg>
<status status="PASS" starttime="20210322 17:43:59.148" endtime="20210322 17:43:59.149"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${phone_external_key}</arg>
</arguments>
<msg timestamp="20210322 17:43:59.150" level="INFO">${phone_external_key} = e59a050ec1a94bc68ac0b499638fc486</msg>
<status status="PASS" starttime="20210322 17:43:59.149" endtime="20210322 17:43:59.150"></status>
</kw>
<status status="PASS" starttime="20210322 17:43:58.907" endtime="20210322 17:43:59.150"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 17:43:59.151" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:43:59.150" endtime="20210322 17:43:59.151"></status>
</kw>
<kw name="criar holder address" library="accreditation_post_holder_address">
<arguments>
<arg>Rio de Janeiro</arg>
<arg>Rio de Janeiro</arg>
<arg>Brasil</arg>
<arg>Bairro de Testes</arg>
<arg>Rua de Testes</arg>
<arg>90</arg>
<arg>apto 200</arg>
<arg>21550987</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:43:59.152" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 17:43:59.152" endtime="20210322 17:43:59.152"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"city": "${city}",</arg>
<arg>"state": "${state}",</arg>
<arg>"country": "${country}",</arg>
<arg>"neighborhood": "${neighborhood}",</arg>
<arg>"street": "${street}",</arg>
<arg>"number": "${number}",</arg>
<arg>"complement": "${complement}",</arg>
<arg>"postal_code": "${postal_code}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 17:43:59.153" level="INFO">${body} = { "city": "Rio de Janeiro", "state": "Rio de Janeiro", "country": "Brasil", "neighborhood": "Bairro de Testes", "street": "Rua de Testes", "number": "90", "complement": "apto 200", "postal_code": "215...</msg>
<status status="PASS" starttime="20210322 17:43:59.152" endtime="20210322 17:43:59.153"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/addresses</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:43:59.154" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/36fa89f88e904ea9b78d45a175039fe9/addresses, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "city": "Rio de Janeiro", "state": "Rio de Janeiro", "country": "Brasil", "neighborhood": "Bairro de Testes", "street": "Rua de Testes", "number": "90", "complement": "apto 200", "postal_code": "21550987" } 
json=None</msg>
<msg timestamp="20210322 17:43:59.404" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:43:59.153" endtime="20210322 17:43:59.405"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:43:59.405" level="INFO">{'id': 'd27c5c12e7bd406b9b72117d95557d32', 'street': 'Rua de Testes', 'number': '90', 'city': 'Rio de Janeiro', 'complement': 'apto 200', 'state': 'Rio de Janeiro', 'neighborhood': 'Bairro de Testes', 'postal_code': '21550987', 'country': 'Brasil', 'main': True, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/36fa89f88e904ea9b78d45a175039fe9/addresses/d27c5c12e7bd406b9b72117d95557d32', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/36fa89f88e904ea9b78d45a175039fe9', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 17:43:59.405" endtime="20210322 17:43:59.406"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:43:59.406" level="INFO">9334217ec6f900fe</msg>
<status status="PASS" starttime="20210322 17:43:59.406" endtime="20210322 17:43:59.406"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:43:59.407" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:43:59.407" endtime="20210322 17:43:59.407"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${address_external_key}</var>
</assign>
<msg timestamp="20210322 17:43:59.408" level="INFO">${address_external_key} = d27c5c12e7bd406b9b72117d95557d32</msg>
<status status="PASS" starttime="20210322 17:43:59.408" endtime="20210322 17:43:59.408"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${address_external_key}</arg>
</arguments>
<msg timestamp="20210322 17:43:59.409" level="INFO">${address_external_key} = d27c5c12e7bd406b9b72117d95557d32</msg>
<status status="PASS" starttime="20210322 17:43:59.409" endtime="20210322 17:43:59.409"></status>
</kw>
<status status="PASS" starttime="20210322 17:43:59.151" endtime="20210322 17:43:59.409"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 17:43:59.410" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:43:59.409" endtime="20210322 17:43:59.410"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>SELFIE</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:43:59.411" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 17:43:59.411" endtime="20210322 17:43:59.411"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 17:43:59.412" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 17:43:59.413" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 17:43:59.411" endtime="20210322 17:43:59.413"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:43:59.414" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/36fa89f88e904ea9b78d45a175039fe9/documents?type=SELFIE, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 17:43:59.720" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:43:59.414" endtime="20210322 17:43:59.721"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:43:59.723" level="INFO">{'id': 'cc0db2ae07d34dcca3a44cb4ec5ffb4c', 'document_type': 'selfie', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/36fa89f88e904ea9b78d45a175039fe9/documents/cc0db2ae07d34dcca3a44cb4ec5ffb4c', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/36fa89f88e904ea9b78d45a175039fe9', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/36fa89f88e904ea9b78d45a175039fe9/documents/cc0db2ae07d34dcca3a44cb4ec5ffb4c/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 17:43:59.721" endtime="20210322 17:43:59.723"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:43:59.725" level="INFO">dc9091e82e38ed98</msg>
<status status="PASS" starttime="20210322 17:43:59.723" endtime="20210322 17:43:59.725"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:43:59.727" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:43:59.726" endtime="20210322 17:43:59.727"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 17:43:59.731" level="INFO">${document_external_key} = cc0db2ae07d34dcca3a44cb4ec5ffb4c</msg>
<status status="PASS" starttime="20210322 17:43:59.728" endtime="20210322 17:43:59.731"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 17:43:59.733" level="INFO">${document_external_key} = cc0db2ae07d34dcca3a44cb4ec5ffb4c</msg>
<status status="PASS" starttime="20210322 17:43:59.732" endtime="20210322 17:43:59.733"></status>
</kw>
<status status="PASS" starttime="20210322 17:43:59.410" endtime="20210322 17:43:59.733"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 17:43:59.734" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:43:59.734" endtime="20210322 17:43:59.734"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>RG_FRENTE</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:43:59.736" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 17:43:59.736" endtime="20210322 17:43:59.736"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 17:43:59.737" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 17:43:59.739" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 17:43:59.737" endtime="20210322 17:43:59.739"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:43:59.741" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/36fa89f88e904ea9b78d45a175039fe9/documents?type=RG_FRENTE, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 17:44:00.099" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:43:59.740" endtime="20210322 17:44:00.099"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:44:00.100" level="INFO">{'id': '5cde9bca63014708b973d276d52c2c78', 'document_type': 'rg_frente', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/36fa89f88e904ea9b78d45a175039fe9/documents/5cde9bca63014708b973d276d52c2c78', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/36fa89f88e904ea9b78d45a175039fe9', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/36fa89f88e904ea9b78d45a175039fe9/documents/5cde9bca63014708b973d276d52c2c78/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 17:44:00.099" endtime="20210322 17:44:00.100"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:44:00.100" level="INFO">e35d99f33074019c</msg>
<status status="PASS" starttime="20210322 17:44:00.100" endtime="20210322 17:44:00.100"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:44:00.101" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:44:00.101" endtime="20210322 17:44:00.101"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 17:44:00.102" level="INFO">${document_external_key} = 5cde9bca63014708b973d276d52c2c78</msg>
<status status="PASS" starttime="20210322 17:44:00.101" endtime="20210322 17:44:00.102"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 17:44:00.102" level="INFO">${document_external_key} = 5cde9bca63014708b973d276d52c2c78</msg>
<status status="PASS" starttime="20210322 17:44:00.102" endtime="20210322 17:44:00.102"></status>
</kw>
<status status="PASS" starttime="20210322 17:43:59.735" endtime="20210322 17:44:00.102"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 17:44:00.103" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:44:00.103" endtime="20210322 17:44:00.103"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>RG_VERSO</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:44:00.104" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 17:44:00.103" endtime="20210322 17:44:00.104"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 17:44:00.104" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 17:44:00.105" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 17:44:00.104" endtime="20210322 17:44:00.105"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:44:00.106" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/36fa89f88e904ea9b78d45a175039fe9/documents?type=RG_VERSO, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 17:44:00.403" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:44:00.105" endtime="20210322 17:44:00.403"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:44:00.404" level="INFO">{'id': '1ee3608593384c62b414501519cd7787', 'document_type': 'rg_verso', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/36fa89f88e904ea9b78d45a175039fe9/documents/1ee3608593384c62b414501519cd7787', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/36fa89f88e904ea9b78d45a175039fe9', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/36fa89f88e904ea9b78d45a175039fe9/documents/1ee3608593384c62b414501519cd7787/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 17:44:00.403" endtime="20210322 17:44:00.405"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:44:00.406" level="INFO">994366b083cba9c0</msg>
<status status="PASS" starttime="20210322 17:44:00.405" endtime="20210322 17:44:00.406"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:44:00.408" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:44:00.407" endtime="20210322 17:44:00.408"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 17:44:00.409" level="INFO">${document_external_key} = 1ee3608593384c62b414501519cd7787</msg>
<status status="PASS" starttime="20210322 17:44:00.408" endtime="20210322 17:44:00.409"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 17:44:00.410" level="INFO">${document_external_key} = 1ee3608593384c62b414501519cd7787</msg>
<status status="PASS" starttime="20210322 17:44:00.410" endtime="20210322 17:44:00.410"></status>
</kw>
<status status="PASS" starttime="20210322 17:44:00.103" endtime="20210322 17:44:00.411"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 17:44:00.411" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:44:00.411" endtime="20210322 17:44:00.412"></status>
</kw>
<kw name="solicitar aprovação do holder" library="accreditation_request_approval">
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:44:00.413" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 17:44:00.413" endtime="20210322 17:44:00.413"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/approval</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:44:00.415" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/36fa89f88e904ea9b78d45a175039fe9/approval, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data=None 
json=None</msg>
<msg timestamp="20210322 17:44:00.727" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 17:44:00.414" endtime="20210322 17:44:00.727"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:44:00.728" level="INFO">{'message': 'Approval request accepted successfully. Processing analysis'}</msg>
<status status="PASS" starttime="20210322 17:44:00.727" endtime="20210322 17:44:00.728"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:44:00.729" level="INFO">0e6430c9ef7a43f9</msg>
<status status="PASS" starttime="20210322 17:44:00.728" endtime="20210322 17:44:00.729"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:44:00.730" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 17:44:00.729" endtime="20210322 17:44:00.730"></status>
</kw>
<status status="PASS" starttime="20210322 17:44:00.412" endtime="20210322 17:44:00.730"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 17:44:00.731" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:44:00.730" endtime="20210322 17:44:00.731"></status>
</kw>
<kw name="recebendo notificação de aprovação" library="accreditation_risk_notification">
<kw name="Uuid 4" library="FakerLibrary">
<doc>Generates a random UUID4 string.
:param cast_to: Specify what type the UUID should be cast to. Default is `str`
:type cast_to: callable</doc>
<assign>
<var>${assessment_id}</var>
</assign>
<msg timestamp="20210322 17:44:00.732" level="INFO">${assessment_id} = 57a5e30b-6dd1-45ef-aaea-72ced11c9196</msg>
<status status="PASS" starttime="20210322 17:44:00.732" endtime="20210322 17:44:00.732"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>year</arg>
</arguments>
<assign>
<var>${year}</var>
</assign>
<msg timestamp="20210322 17:44:00.733" level="INFO">${year} = 2021</msg>
<status status="PASS" starttime="20210322 17:44:00.732" endtime="20210322 17:44:00.733"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>month</arg>
</arguments>
<assign>
<var>${month}</var>
</assign>
<msg timestamp="20210322 17:44:00.734" level="INFO">${month} = 03</msg>
<status status="PASS" starttime="20210322 17:44:00.733" endtime="20210322 17:44:00.734"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>day</arg>
</arguments>
<assign>
<var>${day}</var>
</assign>
<msg timestamp="20210322 17:44:00.734" level="INFO">${day} = 22</msg>
<status status="PASS" starttime="20210322 17:44:00.734" endtime="20210322 17:44:00.734"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:44:00.735" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 17:44:00.735" endtime="20210322 17:44:00.735"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "risk.assessment.result",</arg>
<arg>"resource": "business.holder",</arg>
<arg>"created_at": "${year}-${month}-${day} 15:28:56.747Z",</arg>
<arg>"marketplace_id": "${marketplace_external_key}",</arg>
<arg>"object": {</arg>
<arg>"result": "APPROVED",</arg>
<arg>"holder_id": "${holder_external_key}",</arg>
<arg>"applicant_id": "${application_external_key}",</arg>
<arg>"assessment_id": "${assessment_id}"</arg>
<arg>}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 17:44:00.736" level="INFO">${body} = { "type": "risk.assessment.result", "resource": "business.holder", "created_at": "2021-03-22 15:28:56.747Z", "marketplace_id": "f71a8951368a4cc085cf7875ff44e61c", "object": { "result": "APPROVED", "ho...</msg>
<status status="PASS" starttime="20210322 17:44:00.735" endtime="20210322 17:44:00.736"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/admin/internal_operation/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/registration/approval</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:44:00.737" level="INFO">POST Request using : uri=/admin/internal_operation/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/36fa89f88e904ea9b78d45a175039fe9/registration/approval, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "risk.assessment.result", "resource": "business.holder", "created_at": "2021-03-22 15:28:56.747Z", "marketplace_id": "f71a8951368a4cc085cf7875ff44e61c", "object": { "result": "APPROVED", "holder_id": "36fa89f88e904ea9b78d45a175039fe9", "applicant_id": "bcc25a6751c14b52af1340d40dba78c5", "assessment_id": "57a5e30b-6dd1-45ef-aaea-72ced11c9196" } } 
json=None</msg>
<msg timestamp="20210322 17:44:00.939" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 17:44:00.736" endtime="20210322 17:44:00.940"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:44:00.942" level="INFO">{'message': 'Holder approved successfully'}</msg>
<status status="PASS" starttime="20210322 17:44:00.941" endtime="20210322 17:44:00.942"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:44:00.944" level="INFO">f4ce854f73a67527</msg>
<status status="PASS" starttime="20210322 17:44:00.943" endtime="20210322 17:44:00.944"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:44:00.946" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 17:44:00.945" endtime="20210322 17:44:00.947"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 17:44:00.949" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:44:00.947" endtime="20210322 17:44:00.949"></status>
</kw>
<status status="PASS" starttime="20210322 17:44:00.731" endtime="20210322 17:44:00.949"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 17:44:00.951" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:44:00.950" endtime="20210322 17:44:00.952"></status>
</kw>
<kw name="buscar account por holder" library="accounts_get_accounts_by_holder">
<kw name="conectar accounts" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accounts</arg>
<arg>url=${account_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 17:44:00.955" level="INFO">Creating Session using : alias=accounts, url=https://banking-accounts-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 17:44:00.954" endtime="20210322 17:44:00.955"></status>
</kw>
<status status="PASS" starttime="20210322 17:44:00.953" endtime="20210322 17:44:00.956"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accounts</arg>
<arg>/marketplaces/${marketplace_external_key}/holders/${holder_external_key}/accounts</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:44:00.957" level="INFO">GET Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/holders/36fa89f88e904ea9b78d45a175039fe9/accounts, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 17:44:01.550" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 17:44:00.956" endtime="20210322 17:44:01.550"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:44:01.551" level="INFO">{'items': [{'id': '99691f7f6cd4423189150c6ac1ca0920', 'holder': '36fa89f88e904ea9b78d45a175039fe9', 'balance': '0.00', 'currency': 'BRL', 'routing_number': '001', 'number': '1079118984', 'status': 'active', 'metadata': {}, 'created_at': '2021-03-22T20:44:02.123239', 'updated_at': '2021-03-22T20:44:02.123239', 'primary': True, 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'uri': '/v2/marketplaces/f71a8951368a4cc085cf7875ff44e61c/accounts/99691f7f6cd4423189150c6ac1ca0920', 'resource': 'payment_account'}], 'has_more': False, 'limit': 100, 'total_pages': 1, 'page': 1, 'offset': 0, 'total': '1', 'query_count': '1'}</msg>
<status status="PASS" starttime="20210322 17:44:01.551" endtime="20210322 17:44:01.551"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:44:01.552" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 17:44:01.552" endtime="20210322 17:44:01.552"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["id"]}</arg>
</arguments>
<assign>
<var>${account_external_key}</var>
</assign>
<msg timestamp="20210322 17:44:01.553" level="INFO">${account_external_key} = 99691f7f6cd4423189150c6ac1ca0920</msg>
<status status="PASS" starttime="20210322 17:44:01.552" endtime="20210322 17:44:01.553"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_external_key}</arg>
</arguments>
<msg timestamp="20210322 17:44:01.553" level="INFO">${account_external_key} = 99691f7f6cd4423189150c6ac1ca0920</msg>
<status status="PASS" starttime="20210322 17:44:01.553" endtime="20210322 17:44:01.553"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["number"]}</arg>
</arguments>
<assign>
<var>${account_number}</var>
</assign>
<msg timestamp="20210322 17:44:01.554" level="INFO">${account_number} = 1079118984</msg>
<status status="PASS" starttime="20210322 17:44:01.553" endtime="20210322 17:44:01.554"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_number}</arg>
</arguments>
<msg timestamp="20210322 17:44:01.555" level="INFO">${account_number} = 1079118984</msg>
<status status="PASS" starttime="20210322 17:44:01.555" endtime="20210322 17:44:01.555"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["routing_number"]}</arg>
</arguments>
<assign>
<var>${account_routing_number}</var>
</assign>
<msg timestamp="20210322 17:44:01.556" level="INFO">${account_routing_number} = 001</msg>
<status status="PASS" starttime="20210322 17:44:01.555" endtime="20210322 17:44:01.556"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_routing_number}</arg>
</arguments>
<msg timestamp="20210322 17:44:01.556" level="INFO">${account_routing_number} = 001</msg>
<status status="PASS" starttime="20210322 17:44:01.556" endtime="20210322 17:44:01.556"></status>
</kw>
<status status="PASS" starttime="20210322 17:44:00.952" endtime="20210322 17:44:01.557"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 17:44:01.557" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:44:01.557" endtime="20210322 17:44:01.557"></status>
</kw>
<status status="PASS" starttime="20210322 17:43:58.202" endtime="20210322 17:44:01.557"></status>
</kw>
<kw name="criar chave pix" library="pix_dict_create_entry">
<arguments>
<arg>type=evp</arg>
<arg>value=${EMPTY}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 17:44:01.559" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 17:44:01.558" endtime="20210322 17:44:01.559"></status>
</kw>
<status status="PASS" starttime="20210322 17:44:01.558" endtime="20210322 17:44:01.560"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${type}</arg>
</arguments>
<msg timestamp="20210322 17:44:01.560" level="INFO">${type} = evp</msg>
<status status="PASS" starttime="20210322 17:44:01.560" endtime="20210322 17:44:01.560"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210322 17:44:01.561" level="INFO">${value} = </msg>
<status status="PASS" starttime="20210322 17:44:01.560" endtime="20210322 17:44:01.561"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:44:01.561" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 17:44:01.561" endtime="20210322 17:44:01.561"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "${type}",</arg>
<arg>"value": "${value}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 17:44:01.562" level="INFO">${body} = { "type": "evp", "value": "" }</msg>
<status status="PASS" starttime="20210322 17:44:01.561" endtime="20210322 17:44:01.562"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:44:01.562" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/36fa89f88e904ea9b78d45a175039fe9/accounts/99691f7f6cd4423189150c6ac1ca0920/entries, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "evp", "value": "" } 
json=None</msg>
<msg timestamp="20210322 17:44:03.484" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:44:01.562" endtime="20210322 17:44:03.484"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:44:03.485" level="INFO">{'id': '6b772f4ff5de49789941995559cfba05', 'status': 'active', 'created_at': '2021-03-22T05:44:03.402', 'updated_at': '2021-03-22T05:44:04.694', 'key': {'value': '5baa88f6-0ddf-4b13-9acf-4565800a2f16', 'type': 'evp'}, 'account': {'id': '99691f7f6cd4423189150c6ac1ca0920', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': '36fa89f88e904ea9b78d45a175039fe9', 'owner': {'name': 'Holder de teste', 'national_registration': '04261735970', 'type': 'individual'}, 'routing_number': '001', 'number': '1079118984', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}, 'resource': 'pix.entry'}</msg>
<status status="PASS" starttime="20210322 17:44:03.484" endtime="20210322 17:44:03.485"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:44:03.486" level="INFO">0580c5ecc0a117eb</msg>
<status status="PASS" starttime="20210322 17:44:03.485" endtime="20210322 17:44:03.486"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 17:44:03.486" level="INFO">201</msg>
<status status="PASS" starttime="20210322 17:44:03.486" endtime="20210322 17:44:03.486"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:44:03.487" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:44:03.487" endtime="20210322 17:44:03.487"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${entry_external_key}</var>
</assign>
<msg timestamp="20210322 17:44:03.488" level="INFO">${entry_external_key} = 6b772f4ff5de49789941995559cfba05</msg>
<status status="PASS" starttime="20210322 17:44:03.487" endtime="20210322 17:44:03.488"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${entry_external_key}</arg>
</arguments>
<msg timestamp="20210322 17:44:03.488" level="INFO">${entry_external_key} = 6b772f4ff5de49789941995559cfba05</msg>
<status status="PASS" starttime="20210322 17:44:03.488" endtime="20210322 17:44:03.488"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["key"]["value"]}</arg>
</arguments>
<assign>
<var>${entry_key_value}</var>
</assign>
<msg timestamp="20210322 17:44:03.489" level="INFO">${entry_key_value} = 5baa88f6-0ddf-4b13-9acf-4565800a2f16</msg>
<status status="PASS" starttime="20210322 17:44:03.488" endtime="20210322 17:44:03.489"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${entry_key_value}</arg>
</arguments>
<msg timestamp="20210322 17:44:03.489" level="INFO">${entry_key_value} = 5baa88f6-0ddf-4b13-9acf-4565800a2f16</msg>
<status status="PASS" starttime="20210322 17:44:03.489" endtime="20210322 17:44:03.489"></status>
</kw>
<status status="PASS" starttime="20210322 17:44:01.557" endtime="20210322 17:44:03.490"></status>
</kw>
<kw name="buscar chave pix" library="pix_dict_get_entry">
<arguments>
<arg>holder_external_key=${holder_external_key}</arg>
<arg>account_external_key=${account_external_key}</arg>
<arg>entry_external_key=${entry_external_key}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 17:44:03.491" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 17:44:03.491" endtime="20210322 17:44:03.491"></status>
</kw>
<status status="PASS" starttime="20210322 17:44:03.490" endtime="20210322 17:44:03.491"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries/${entry_external_key}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:44:03.492" level="INFO">GET Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/36fa89f88e904ea9b78d45a175039fe9/accounts/99691f7f6cd4423189150c6ac1ca0920/entries/6b772f4ff5de49789941995559cfba05, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 17:44:04.091" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 17:44:03.492" endtime="20210322 17:44:04.091"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:44:04.093" level="INFO">{'id': '6b772f4ff5de49789941995559cfba05', 'status': 'active', 'created_at': '2021-03-22T05:44:03.402', 'updated_at': '2021-03-22T05:44:04.694', 'key': {'value': '5baa88f6-0ddf-4b13-9acf-4565800a2f16', 'type': 'evp'}, 'account': {'id': '99691f7f6cd4423189150c6ac1ca0920', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': '36fa89f88e904ea9b78d45a175039fe9', 'owner': {'name': 'Holder de teste', 'national_registration': '04261735970', 'type': 'individual'}, 'routing_number': '001', 'number': '1079118984', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}, 'resource': 'pix.entry'}</msg>
<status status="PASS" starttime="20210322 17:44:04.092" endtime="20210322 17:44:04.093"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:44:04.094" level="INFO">c17a7b1bd82ebc03</msg>
<status status="PASS" starttime="20210322 17:44:04.093" endtime="20210322 17:44:04.094"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 17:44:04.095" level="INFO">200</msg>
<status status="PASS" starttime="20210322 17:44:04.094" endtime="20210322 17:44:04.095"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:44:04.096" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 17:44:04.095" endtime="20210322 17:44:04.096"></status>
</kw>
<status status="PASS" starttime="20210322 17:44:03.490" endtime="20210322 17:44:04.096"></status>
</kw>
<kw name="validar busca da chave pix" library="asserts">
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 17:44:04.098" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:44:04.098" endtime="20210322 17:44:04.098"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar status da chave</arg>
</arguments>
<msg timestamp="20210322 17:44:04.099" level="INFO">Validar status da chave</msg>
<status status="PASS" starttime="20210322 17:44:04.099" endtime="20210322 17:44:04.099"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${type}' == 'evp'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["status"]}</arg>
<arg>active</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'phone'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["status"]}</arg>
<arg>waiting_ownership_verification</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'email'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["status"]}</arg>
<arg>waiting_ownership_verification</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'national_registration'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["status"]}</arg>
<arg>active</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["status"]}</arg>
<arg>active</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:04.101" endtime="20210322 17:44:04.102"></status>
</kw>
<status status="PASS" starttime="20210322 17:44:04.100" endtime="20210322 17:44:04.103"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando Tipo da chave PIX</arg>
</arguments>
<msg timestamp="20210322 17:44:04.104" level="INFO">Validando Tipo da chave PIX</msg>
<status status="PASS" starttime="20210322 17:44:04.103" endtime="20210322 17:44:04.104"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${type}' == 'evp'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["type"]}</arg>
<arg>${type}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'phone'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["type"]}</arg>
<arg>${type}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'email'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["type"]}</arg>
<arg>${type}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'national_registration'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["type"]}</arg>
<arg>${type}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["key"]["type"]}</arg>
<arg>${type}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:04.106" endtime="20210322 17:44:04.107"></status>
</kw>
<status status="PASS" starttime="20210322 17:44:04.105" endtime="20210322 17:44:04.107"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando Valor da chave PIX</arg>
</arguments>
<msg timestamp="20210322 17:44:04.107" level="INFO">Validando Valor da chave PIX</msg>
<status status="PASS" starttime="20210322 17:44:04.107" endtime="20210322 17:44:04.108"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${type}' == 'evp'</arg>
<arg>Should Not Be Empty</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'phone'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${phone_pix}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'email'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${email_pix}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'national_registration'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${national_registration}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${response.json()["key"]["value"]}</arg>
</arguments>
<msg timestamp="20210322 17:44:04.109" level="INFO">Length is 36</msg>
<status status="PASS" starttime="20210322 17:44:04.109" endtime="20210322 17:44:04.109"></status>
</kw>
<status status="PASS" starttime="20210322 17:44:04.108" endtime="20210322 17:44:04.109"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando dados da conta</arg>
</arguments>
<msg timestamp="20210322 17:44:04.110" level="INFO">Validando dados da conta</msg>
<status status="PASS" starttime="20210322 17:44:04.110" endtime="20210322 17:44:04.110"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["id"]}</arg>
<arg>${account_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:04.110" endtime="20210322 17:44:04.111"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["marketplace"]}</arg>
<arg>${marketplace_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:04.111" endtime="20210322 17:44:04.112"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["holder"]}</arg>
<arg>${holder_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:04.112" endtime="20210322 17:44:04.113"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["number"]}</arg>
<arg>${account_number}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:04.113" endtime="20210322 17:44:04.113"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["routing_number"]}</arg>
<arg>${account_routing_number}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:04.114" endtime="20210322 17:44:04.114"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["type"]}</arg>
<arg>CACC</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:04.114" endtime="20210322 17:44:04.115"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar Proprietário da Account Owner</arg>
</arguments>
<msg timestamp="20210322 17:44:04.115" level="INFO">Validar Proprietário da Account Owner</msg>
<status status="PASS" starttime="20210322 17:44:04.115" endtime="20210322 17:44:04.116"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${holder_type}' == 'individual'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["account"]["owner"]["name"]}</arg>
<arg>${holder_name}</arg>
<arg>ELSE IF</arg>
<arg>'${holder_type}' == 'business'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["account"]["owner"]["name"]}</arg>
<arg>${legal_name}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["account"]["owner"]["name"]}</arg>
<arg>${holder_name}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:04.117" endtime="20210322 17:44:04.117"></status>
</kw>
<status status="PASS" starttime="20210322 17:44:04.116" endtime="20210322 17:44:04.117"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar national_registration da Account Owner</arg>
</arguments>
<msg timestamp="20210322 17:44:04.119" level="INFO">Validar national_registration da Account Owner</msg>
<status status="PASS" starttime="20210322 17:44:04.118" endtime="20210322 17:44:04.119"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${holder_type}' == 'individual'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["account"]["owner"]["national_registration"]}</arg>
<arg>${national_registration}</arg>
<arg>ELSE IF</arg>
<arg>'${holder_type}' == 'business'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["account"]["owner"]["national_registration"]}</arg>
<arg>${national_registration}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["account"]["owner"]["national_registration"]}</arg>
<arg>${national_registration}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:04.121" endtime="20210322 17:44:04.122"></status>
</kw>
<status status="PASS" starttime="20210322 17:44:04.120" endtime="20210322 17:44:04.122"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar Holder Type do Account Owner</arg>
</arguments>
<msg timestamp="20210322 17:44:04.123" level="INFO">Validar Holder Type do Account Owner</msg>
<status status="PASS" starttime="20210322 17:44:04.122" endtime="20210322 17:44:04.123"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${holder_type}' == 'individual'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["account"]["owner"]["type"]}</arg>
<arg>${holder_type}</arg>
<arg>ELSE IF</arg>
<arg>'${holder_type}' == 'business'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["account"]["owner"]["type"]}</arg>
<arg>${holder_type}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["account"]["owner"]["type"]}</arg>
<arg>${holder_type}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:04.123" endtime="20210322 17:44:04.124"></status>
</kw>
<status status="PASS" starttime="20210322 17:44:04.123" endtime="20210322 17:44:04.124"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar PSP</arg>
</arguments>
<msg timestamp="20210322 17:44:04.124" level="INFO">Validar PSP</msg>
<status status="PASS" starttime="20210322 17:44:04.124" endtime="20210322 17:44:04.125"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["psp"]["code"]}</arg>
<arg>19468242</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:04.125" endtime="20210322 17:44:04.125"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["psp"]["name"]}</arg>
<arg>Zoop Tecnologia e Meios de Pagamento S.A.</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:04.125" endtime="20210322 17:44:04.126"></status>
</kw>
<status status="PASS" starttime="20210322 17:44:04.097" endtime="20210322 17:44:04.126"></status>
</kw>
<kw name="validar chave pix" library="asserts">
<arguments>
<arg>key_status=active</arg>
<arg>key_type=${type}</arg>
<arg>key_value=${national_registration}</arg>
<arg>account_external_key=${account_external_key}</arg>
<arg>marketplace_external_key=${marketplace_external_key}</arg>
<arg>holder_external_key=${holder_external_key}</arg>
<arg>account_number=${account_number}</arg>
<arg>account_routing_number=${account_routing_number}</arg>
<arg>account_type=CACC</arg>
<arg>owner_key_name=${holder_name}</arg>
<arg>national_registration=${national_registration}</arg>
<arg>holder_type=${holder_type}</arg>
<arg>psp_code=19468242</arg>
<arg>psp_name=Zoop Tecnologia e Meios de Pagamento S.A.</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar status da chave</arg>
</arguments>
<msg timestamp="20210322 17:44:04.127" level="INFO">Validar status da chave</msg>
<status status="PASS" starttime="20210322 17:44:04.127" endtime="20210322 17:44:04.127"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["status"]}</arg>
<arg>${key_status}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:04.128" endtime="20210322 17:44:04.128"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando Tipo da chave PIX</arg>
</arguments>
<msg timestamp="20210322 17:44:04.128" level="INFO">Validando Tipo da chave PIX</msg>
<status status="PASS" starttime="20210322 17:44:04.128" endtime="20210322 17:44:04.129"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["key"]["type"]}</arg>
<arg>${key_type}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:04.129" endtime="20210322 17:44:04.129"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando Valor da chave PIX</arg>
</arguments>
<msg timestamp="20210322 17:44:04.130" level="INFO">Validando Valor da chave PIX</msg>
<status status="PASS" starttime="20210322 17:44:04.129" endtime="20210322 17:44:04.130"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${type}' == 'evp'</arg>
<arg>Should Not Be Empty</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' != 'evp'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${key_value}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${response.json()["key"]["value"]}</arg>
</arguments>
<msg timestamp="20210322 17:44:04.131" level="INFO">Length is 36</msg>
<status status="PASS" starttime="20210322 17:44:04.130" endtime="20210322 17:44:04.131"></status>
</kw>
<status status="PASS" starttime="20210322 17:44:04.130" endtime="20210322 17:44:04.131"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando dados da conta</arg>
</arguments>
<msg timestamp="20210322 17:44:04.131" level="INFO">Validando dados da conta</msg>
<status status="PASS" starttime="20210322 17:44:04.131" endtime="20210322 17:44:04.131"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["id"]}</arg>
<arg>${account_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:04.131" endtime="20210322 17:44:04.132"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["marketplace"]}</arg>
<arg>${marketplace_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:04.132" endtime="20210322 17:44:04.133"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["holder"]}</arg>
<arg>${holder_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:04.133" endtime="20210322 17:44:04.134"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["number"]}</arg>
<arg>${account_number}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:04.134" endtime="20210322 17:44:04.135"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["routing_number"]}</arg>
<arg>${account_routing_number}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:04.136" endtime="20210322 17:44:04.137"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["type"]}</arg>
<arg>${account_type}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:04.138" endtime="20210322 17:44:04.139"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar Proprietário da Account Owner</arg>
</arguments>
<msg timestamp="20210322 17:44:04.139" level="INFO">Validar Proprietário da Account Owner</msg>
<status status="PASS" starttime="20210322 17:44:04.139" endtime="20210322 17:44:04.139"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["account"]["owner"]["name"]}</arg>
<arg>${owner_key_name}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:04.139" endtime="20210322 17:44:04.140"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar national_registration da Account Owner</arg>
</arguments>
<msg timestamp="20210322 17:44:04.140" level="INFO">Validar national_registration da Account Owner</msg>
<status status="PASS" starttime="20210322 17:44:04.140" endtime="20210322 17:44:04.140"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["account"]["owner"]["national_registration"]}</arg>
<arg>${national_registration}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:04.140" endtime="20210322 17:44:04.141"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar Holder Type do Account Owner</arg>
</arguments>
<msg timestamp="20210322 17:44:04.141" level="INFO">Validar Holder Type do Account Owner</msg>
<status status="PASS" starttime="20210322 17:44:04.141" endtime="20210322 17:44:04.141"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["account"]["owner"]["type"]}</arg>
<arg>${holder_type}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:04.141" endtime="20210322 17:44:04.142"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar PSP</arg>
</arguments>
<msg timestamp="20210322 17:44:04.142" level="INFO">Validar PSP</msg>
<status status="PASS" starttime="20210322 17:44:04.142" endtime="20210322 17:44:04.142"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["psp"]["code"]}</arg>
<arg>${psp_code}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:04.143" endtime="20210322 17:44:04.143"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["psp"]["name"]}</arg>
<arg>${psp_name}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:04.143" endtime="20210322 17:44:04.144"></status>
</kw>
<status status="PASS" starttime="20210322 17:44:04.126" endtime="20210322 17:44:04.144"></status>
</kw>
<doc>Fluxo Básico</doc>
<tags>
<tag>smoke_test</tag>
</tags>
<status status="PASS" starttime="20210322 17:43:58.200" endtime="20210322 17:44:04.144" critical="yes"></status>
</test>
<test id="s1-s1-s1-t2" name="Cenário: Buscar chave de endereçamento do tipo Phone">
<kw name="Random Number" library="FakerLibrary">
<doc>Returns a random number with 1 digit (default, when digits==None),
a random number with 0 to given number of digits, or a random number
with given number to given number of digits (when ``fix_len==True``).</doc>
<arguments>
<arg>digits=8</arg>
<arg>fix_len=True</arg>
</arguments>
<assign>
<var>${phone}</var>
</assign>
<msg timestamp="20210322 17:44:04.146" level="INFO">${phone} = 83618928</msg>
<status status="PASS" starttime="20210322 17:44:04.145" endtime="20210322 17:44:04.146"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>+55219${phone}</arg>
</arguments>
<assign>
<var>${phone_pix}</var>
</assign>
<msg timestamp="20210322 17:44:04.146" level="INFO">${phone_pix} = +5521983618928</msg>
<status status="PASS" starttime="20210322 17:44:04.146" endtime="20210322 17:44:04.146"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${phone_pix}</arg>
</arguments>
<msg timestamp="20210322 17:44:04.147" level="INFO">${phone_pix} = +5521983618928</msg>
<status status="PASS" starttime="20210322 17:44:04.147" endtime="20210322 17:44:04.147"></status>
</kw>
<kw name="criar holder individual ativo" library="accreditation_create_holder_active">
<kw name="conectar accreditation" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accreditation</arg>
<arg>url=${accreditation_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 17:44:04.149" level="INFO">Creating Session using : alias=accreditation, url=https://banking-accreditation-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 17:44:04.148" endtime="20210322 17:44:04.149"></status>
</kw>
<status status="PASS" starttime="20210322 17:44:04.148" endtime="20210322 17:44:04.149"></status>
</kw>
<kw name="Cpf" library="FakerLibrary">
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 17:44:04.150" level="INFO">${national_registration} = 458.127.960-76</msg>
<status status="PASS" starttime="20210322 17:44:04.149" endtime="20210322 17:44:04.150"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${national_registration}</arg>
<arg>.</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 17:44:04.151" level="INFO">${national_registration} = 458127960-76</msg>
<status status="PASS" starttime="20210322 17:44:04.150" endtime="20210322 17:44:04.151"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${national_registration}</arg>
<arg>-</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 17:44:04.153" level="INFO">${national_registration} = 45812796076</msg>
<status status="PASS" starttime="20210322 17:44:04.153" endtime="20210322 17:44:04.153"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${national_registration}</arg>
</arguments>
<msg timestamp="20210322 17:44:04.155" level="INFO">${national_registration} = 45812796076</msg>
<status status="PASS" starttime="20210322 17:44:04.154" endtime="20210322 17:44:04.155"></status>
</kw>
<kw name="Rg" library="FakerLibrary">
<doc>Brazilian RG, return plain numbers.
Check:  https://www.ngmatematica.com/2014/02/como-determinar-o-digito-verificador-do.html</doc>
<assign>
<var>${identity_card}</var>
</assign>
<msg timestamp="20210322 17:44:04.155" level="INFO">${identity_card} = 503462810</msg>
<status status="PASS" starttime="20210322 17:44:04.155" endtime="20210322 17:44:04.155"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${identity_card}</arg>
</arguments>
<msg timestamp="20210322 17:44:04.156" level="INFO">${identity_card} = 503462810</msg>
<status status="PASS" starttime="20210322 17:44:04.156" endtime="20210322 17:44:04.156"></status>
</kw>
<kw name="criar holder individual" library="accreditation_post_holder_individual">
<arguments>
<arg>holder_type=individual</arg>
<arg>holder_name=${holder_name}</arg>
<arg>email=${email}</arg>
<arg>national_registration=${national_registration}</arg>
<arg>revenue=${revenue}</arg>
<arg>birthday=${birthday}</arg>
<arg>mothers_name=${mothers_name}</arg>
<arg>identity_card=${identity_card}</arg>
<arg>pep=false</arg>
<arg>cbo=${cbo}</arg>
</arguments>
<kw name="conectar accreditation" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accreditation</arg>
<arg>url=${accreditation_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 17:44:04.158" level="INFO">Creating Session using : alias=accreditation, url=https://banking-accreditation-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 17:44:04.158" endtime="20210322 17:44:04.159"></status>
</kw>
<status status="PASS" starttime="20210322 17:44:04.158" endtime="20210322 17:44:04.159"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_type}</arg>
</arguments>
<msg timestamp="20210322 17:44:04.159" level="INFO">${holder_type} = individual</msg>
<status status="PASS" starttime="20210322 17:44:04.159" endtime="20210322 17:44:04.160"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_name}</arg>
</arguments>
<msg timestamp="20210322 17:44:04.160" level="INFO">${holder_name} = Holder de teste</msg>
<status status="PASS" starttime="20210322 17:44:04.160" endtime="20210322 17:44:04.160"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:44:04.161" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 17:44:04.161" endtime="20210322 17:44:04.161"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "${holder_type}",</arg>
<arg>"name": "${holder_name}",</arg>
<arg>"email": "${email}",</arg>
<arg>"national_registration": "${national_registration}",</arg>
<arg>"revenue": ${revenue},</arg>
<arg>"birthday": "${birthday}",</arg>
<arg>"mothers_name": "${mothers_name}",</arg>
<arg>"identity_card": "${identity_card}",</arg>
<arg>"pep": false,</arg>
<arg>"cbo": ${cbo}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 17:44:04.162" level="INFO">${body} = { "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "45812796076", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder",...</msg>
<status status="PASS" starttime="20210322 17:44:04.162" endtime="20210322 17:44:04.162"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:44:04.163" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "45812796076", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder", "identity_card": "503462810", "pep": false, "cbo": 821450 } 
json=None</msg>
<msg timestamp="20210322 17:44:04.921" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:44:04.163" endtime="20210322 17:44:04.921"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:44:04.924" level="INFO">{'id': 'd9b15d5c95a241e597b4535d8c77e229', 'name': 'Holder de teste', 'revenue': 5500.0, 'email': 'teste@teste.com.br', 'status': 'waiting_info_and_documents', 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'marketplace_name': 'Marketplace de Teste', 'created_at': '2021-03-22T17:44:06.081959', 'updated_at': '2021-03-22T17:44:06.081962', 'type': 'individual', 'national_registration': '45812796076', 'birthday': '1988-04-23', 'mothers_name': 'Mãe do Holder', 'identity_card': '503462810', 'pep': False, 'cbo': '821450', '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/d9b15d5c95a241e597b4535d8c77e229', 'type': 'GET'}, 'phones': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/d9b15d5c95a241e597b4535d8c77e229/phones', 'type': 'GET'}, 'addresses': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/d9b15d5c95a241e597b4535d8c77e229/addresses', 'type': 'GET'}, 'documents': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/d9b15d5c95a241e597b4535d8c77e229/documents', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 17:44:04.922" endtime="20210322 17:44:04.924"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:44:04.926" level="INFO">195ec6d275df1f71</msg>
<status status="PASS" starttime="20210322 17:44:04.924" endtime="20210322 17:44:04.926"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${body}</arg>
</arguments>
<msg timestamp="20210322 17:44:04.927" level="INFO">{ "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "45812796076", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder", "identity_card": "503462810", "pep": false, "cbo": 821450 }</msg>
<status status="PASS" starttime="20210322 17:44:04.926" endtime="20210322 17:44:04.927"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:44:04.928" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:44:04.928" endtime="20210322 17:44:04.929"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${holder_external_key}</var>
</assign>
<msg timestamp="20210322 17:44:04.930" level="INFO">${holder_external_key} = d9b15d5c95a241e597b4535d8c77e229</msg>
<status status="PASS" starttime="20210322 17:44:04.929" endtime="20210322 17:44:04.930"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_external_key}</arg>
</arguments>
<msg timestamp="20210322 17:44:04.932" level="INFO">${holder_external_key} = d9b15d5c95a241e597b4535d8c77e229</msg>
<status status="PASS" starttime="20210322 17:44:04.931" endtime="20210322 17:44:04.932"></status>
</kw>
<status status="PASS" starttime="20210322 17:44:04.156" endtime="20210322 17:44:04.932"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_name}</arg>
</arguments>
<msg timestamp="20210322 17:44:04.933" level="INFO">${holder_name} = Holder de teste</msg>
<status status="PASS" starttime="20210322 17:44:04.933" endtime="20210322 17:44:04.933"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 17:44:04.934" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:44:04.934" endtime="20210322 17:44:04.935"></status>
</kw>
<kw name="criar holder phone" library="accreditation_post_holder_phone">
<arguments>
<arg>21</arg>
<arg>51</arg>
<arg>996221236</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:44:04.936" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 17:44:04.936" endtime="20210322 17:44:04.936"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"area_code": "${phone_area_code}",</arg>
<arg>"country_code": "${phone_country_code}",</arg>
<arg>"number": "${phone_number}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 17:44:04.938" level="INFO">${body} = { "area_code": "21", "country_code": "51", "number": "996221236" }</msg>
<status status="PASS" starttime="20210322 17:44:04.937" endtime="20210322 17:44:04.938"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/phones</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:44:04.939" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/d9b15d5c95a241e597b4535d8c77e229/phones, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "area_code": "21", "country_code": "51", "number": "996221236" } 
json=None</msg>
<msg timestamp="20210322 17:44:05.163" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:44:04.938" endtime="20210322 17:44:05.163"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:44:05.164" level="INFO">{'id': 'fdc0409e7bfe4034b797015bf40fb022', 'area_code': '21', 'country_code': '51', 'number': '996221236', 'main': True, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/d9b15d5c95a241e597b4535d8c77e229/phones/fdc0409e7bfe4034b797015bf40fb022', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/d9b15d5c95a241e597b4535d8c77e229', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 17:44:05.164" endtime="20210322 17:44:05.165"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:44:05.166" level="INFO">8fff13693559e610</msg>
<status status="PASS" starttime="20210322 17:44:05.165" endtime="20210322 17:44:05.166"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:44:05.168" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:44:05.166" endtime="20210322 17:44:05.168"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${phone_external_key}</var>
</assign>
<msg timestamp="20210322 17:44:05.169" level="INFO">${phone_external_key} = fdc0409e7bfe4034b797015bf40fb022</msg>
<status status="PASS" starttime="20210322 17:44:05.168" endtime="20210322 17:44:05.169"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${phone_external_key}</arg>
</arguments>
<msg timestamp="20210322 17:44:05.170" level="INFO">${phone_external_key} = fdc0409e7bfe4034b797015bf40fb022</msg>
<status status="PASS" starttime="20210322 17:44:05.170" endtime="20210322 17:44:05.171"></status>
</kw>
<status status="PASS" starttime="20210322 17:44:04.935" endtime="20210322 17:44:05.171"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 17:44:05.172" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:44:05.171" endtime="20210322 17:44:05.172"></status>
</kw>
<kw name="criar holder address" library="accreditation_post_holder_address">
<arguments>
<arg>Rio de Janeiro</arg>
<arg>Rio de Janeiro</arg>
<arg>Brasil</arg>
<arg>Bairro de Testes</arg>
<arg>Rua de Testes</arg>
<arg>90</arg>
<arg>apto 200</arg>
<arg>21550987</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:44:05.174" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 17:44:05.174" endtime="20210322 17:44:05.174"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"city": "${city}",</arg>
<arg>"state": "${state}",</arg>
<arg>"country": "${country}",</arg>
<arg>"neighborhood": "${neighborhood}",</arg>
<arg>"street": "${street}",</arg>
<arg>"number": "${number}",</arg>
<arg>"complement": "${complement}",</arg>
<arg>"postal_code": "${postal_code}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 17:44:05.175" level="INFO">${body} = { "city": "Rio de Janeiro", "state": "Rio de Janeiro", "country": "Brasil", "neighborhood": "Bairro de Testes", "street": "Rua de Testes", "number": "90", "complement": "apto 200", "postal_code": "215...</msg>
<status status="PASS" starttime="20210322 17:44:05.175" endtime="20210322 17:44:05.175"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/addresses</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:44:05.176" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/d9b15d5c95a241e597b4535d8c77e229/addresses, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "city": "Rio de Janeiro", "state": "Rio de Janeiro", "country": "Brasil", "neighborhood": "Bairro de Testes", "street": "Rua de Testes", "number": "90", "complement": "apto 200", "postal_code": "21550987" } 
json=None</msg>
<msg timestamp="20210322 17:44:05.420" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:44:05.175" endtime="20210322 17:44:05.420"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:44:05.420" level="INFO">{'id': 'ea4fe2f69148492cab720d689954a292', 'street': 'Rua de Testes', 'number': '90', 'city': 'Rio de Janeiro', 'complement': 'apto 200', 'state': 'Rio de Janeiro', 'neighborhood': 'Bairro de Testes', 'postal_code': '21550987', 'country': 'Brasil', 'main': True, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/d9b15d5c95a241e597b4535d8c77e229/addresses/ea4fe2f69148492cab720d689954a292', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/d9b15d5c95a241e597b4535d8c77e229', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 17:44:05.420" endtime="20210322 17:44:05.421"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:44:05.421" level="INFO">e8dc3e1acf959728</msg>
<status status="PASS" starttime="20210322 17:44:05.421" endtime="20210322 17:44:05.421"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:44:05.422" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:44:05.421" endtime="20210322 17:44:05.422"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${address_external_key}</var>
</assign>
<msg timestamp="20210322 17:44:05.422" level="INFO">${address_external_key} = ea4fe2f69148492cab720d689954a292</msg>
<status status="PASS" starttime="20210322 17:44:05.422" endtime="20210322 17:44:05.422"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${address_external_key}</arg>
</arguments>
<msg timestamp="20210322 17:44:05.423" level="INFO">${address_external_key} = ea4fe2f69148492cab720d689954a292</msg>
<status status="PASS" starttime="20210322 17:44:05.422" endtime="20210322 17:44:05.423"></status>
</kw>
<status status="PASS" starttime="20210322 17:44:05.173" endtime="20210322 17:44:05.423"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 17:44:05.423" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:44:05.423" endtime="20210322 17:44:05.423"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>SELFIE</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:44:05.424" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 17:44:05.424" endtime="20210322 17:44:05.424"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 17:44:05.425" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 17:44:05.426" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 17:44:05.424" endtime="20210322 17:44:05.426"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:44:05.427" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/d9b15d5c95a241e597b4535d8c77e229/documents?type=SELFIE, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 17:44:06.329" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:44:05.426" endtime="20210322 17:44:06.329"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:44:06.332" level="INFO">{'id': '805778e1dddb413f8195bdc9bc940e7c', 'document_type': 'selfie', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/d9b15d5c95a241e597b4535d8c77e229/documents/805778e1dddb413f8195bdc9bc940e7c', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/d9b15d5c95a241e597b4535d8c77e229', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/d9b15d5c95a241e597b4535d8c77e229/documents/805778e1dddb413f8195bdc9bc940e7c/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 17:44:06.330" endtime="20210322 17:44:06.332"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:44:06.334" level="INFO">aab9ad543ae9af51</msg>
<status status="PASS" starttime="20210322 17:44:06.333" endtime="20210322 17:44:06.335"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:44:06.338" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:44:06.336" endtime="20210322 17:44:06.338"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 17:44:06.340" level="INFO">${document_external_key} = 805778e1dddb413f8195bdc9bc940e7c</msg>
<status status="PASS" starttime="20210322 17:44:06.339" endtime="20210322 17:44:06.341"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 17:44:06.342" level="INFO">${document_external_key} = 805778e1dddb413f8195bdc9bc940e7c</msg>
<status status="PASS" starttime="20210322 17:44:06.341" endtime="20210322 17:44:06.342"></status>
</kw>
<status status="PASS" starttime="20210322 17:44:05.424" endtime="20210322 17:44:06.342"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 17:44:06.344" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:44:06.343" endtime="20210322 17:44:06.344"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>RG_FRENTE</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:44:06.346" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 17:44:06.345" endtime="20210322 17:44:06.346"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 17:44:06.347" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 17:44:06.349" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 17:44:06.346" endtime="20210322 17:44:06.349"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:44:06.351" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/d9b15d5c95a241e597b4535d8c77e229/documents?type=RG_FRENTE, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 17:44:06.663" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:44:06.349" endtime="20210322 17:44:06.664"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:44:06.665" level="INFO">{'id': '089fe6e2ffc54e618cd65fadb236f8bc', 'document_type': 'rg_frente', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/d9b15d5c95a241e597b4535d8c77e229/documents/089fe6e2ffc54e618cd65fadb236f8bc', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/d9b15d5c95a241e597b4535d8c77e229', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/d9b15d5c95a241e597b4535d8c77e229/documents/089fe6e2ffc54e618cd65fadb236f8bc/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 17:44:06.664" endtime="20210322 17:44:06.665"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:44:06.667" level="INFO">ab9082173679d967</msg>
<status status="PASS" starttime="20210322 17:44:06.666" endtime="20210322 17:44:06.668"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:44:06.669" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:44:06.668" endtime="20210322 17:44:06.669"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 17:44:06.671" level="INFO">${document_external_key} = 089fe6e2ffc54e618cd65fadb236f8bc</msg>
<status status="PASS" starttime="20210322 17:44:06.670" endtime="20210322 17:44:06.671"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 17:44:06.672" level="INFO">${document_external_key} = 089fe6e2ffc54e618cd65fadb236f8bc</msg>
<status status="PASS" starttime="20210322 17:44:06.671" endtime="20210322 17:44:06.672"></status>
</kw>
<status status="PASS" starttime="20210322 17:44:06.344" endtime="20210322 17:44:06.672"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 17:44:06.673" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:44:06.673" endtime="20210322 17:44:06.673"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>RG_VERSO</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:44:06.675" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 17:44:06.674" endtime="20210322 17:44:06.675"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 17:44:06.675" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 17:44:06.677" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 17:44:06.675" endtime="20210322 17:44:06.677"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:44:06.678" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/d9b15d5c95a241e597b4535d8c77e229/documents?type=RG_VERSO, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 17:44:06.978" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:44:06.678" endtime="20210322 17:44:06.978"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:44:06.979" level="INFO">{'id': 'c7cbdfe22c7a4f82a25a93f8d017cace', 'document_type': 'rg_verso', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/d9b15d5c95a241e597b4535d8c77e229/documents/c7cbdfe22c7a4f82a25a93f8d017cace', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/d9b15d5c95a241e597b4535d8c77e229', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/d9b15d5c95a241e597b4535d8c77e229/documents/c7cbdfe22c7a4f82a25a93f8d017cace/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 17:44:06.979" endtime="20210322 17:44:06.979"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:44:06.980" level="INFO">f1e15a3ede30b392</msg>
<status status="PASS" starttime="20210322 17:44:06.979" endtime="20210322 17:44:06.980"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:44:06.980" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:44:06.980" endtime="20210322 17:44:06.980"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 17:44:06.981" level="INFO">${document_external_key} = c7cbdfe22c7a4f82a25a93f8d017cace</msg>
<status status="PASS" starttime="20210322 17:44:06.981" endtime="20210322 17:44:06.981"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 17:44:06.982" level="INFO">${document_external_key} = c7cbdfe22c7a4f82a25a93f8d017cace</msg>
<status status="PASS" starttime="20210322 17:44:06.982" endtime="20210322 17:44:06.982"></status>
</kw>
<status status="PASS" starttime="20210322 17:44:06.674" endtime="20210322 17:44:06.982"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 17:44:06.983" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:44:06.982" endtime="20210322 17:44:06.983"></status>
</kw>
<kw name="solicitar aprovação do holder" library="accreditation_request_approval">
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:44:06.984" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 17:44:06.983" endtime="20210322 17:44:06.984"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/approval</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:44:06.985" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/d9b15d5c95a241e597b4535d8c77e229/approval, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data=None 
json=None</msg>
<msg timestamp="20210322 17:44:07.269" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 17:44:06.984" endtime="20210322 17:44:07.269"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:44:07.271" level="INFO">{'message': 'Approval request accepted successfully. Processing analysis'}</msg>
<status status="PASS" starttime="20210322 17:44:07.270" endtime="20210322 17:44:07.272"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:44:07.274" level="INFO">744235cb075d96e3</msg>
<status status="PASS" starttime="20210322 17:44:07.272" endtime="20210322 17:44:07.274"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:44:07.276" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 17:44:07.275" endtime="20210322 17:44:07.276"></status>
</kw>
<status status="PASS" starttime="20210322 17:44:06.983" endtime="20210322 17:44:07.277"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 17:44:07.279" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:44:07.278" endtime="20210322 17:44:07.280"></status>
</kw>
<kw name="recebendo notificação de aprovação" library="accreditation_risk_notification">
<kw name="Uuid 4" library="FakerLibrary">
<doc>Generates a random UUID4 string.
:param cast_to: Specify what type the UUID should be cast to. Default is `str`
:type cast_to: callable</doc>
<assign>
<var>${assessment_id}</var>
</assign>
<msg timestamp="20210322 17:44:07.282" level="INFO">${assessment_id} = 60473969-27eb-49c7-b5b9-13f7cec429d2</msg>
<status status="PASS" starttime="20210322 17:44:07.281" endtime="20210322 17:44:07.282"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>year</arg>
</arguments>
<assign>
<var>${year}</var>
</assign>
<msg timestamp="20210322 17:44:07.283" level="INFO">${year} = 2021</msg>
<status status="PASS" starttime="20210322 17:44:07.283" endtime="20210322 17:44:07.283"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>month</arg>
</arguments>
<assign>
<var>${month}</var>
</assign>
<msg timestamp="20210322 17:44:07.285" level="INFO">${month} = 03</msg>
<status status="PASS" starttime="20210322 17:44:07.284" endtime="20210322 17:44:07.285"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>day</arg>
</arguments>
<assign>
<var>${day}</var>
</assign>
<msg timestamp="20210322 17:44:07.286" level="INFO">${day} = 22</msg>
<status status="PASS" starttime="20210322 17:44:07.285" endtime="20210322 17:44:07.286"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:44:07.287" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 17:44:07.287" endtime="20210322 17:44:07.287"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "risk.assessment.result",</arg>
<arg>"resource": "business.holder",</arg>
<arg>"created_at": "${year}-${month}-${day} 15:28:56.747Z",</arg>
<arg>"marketplace_id": "${marketplace_external_key}",</arg>
<arg>"object": {</arg>
<arg>"result": "APPROVED",</arg>
<arg>"holder_id": "${holder_external_key}",</arg>
<arg>"applicant_id": "${application_external_key}",</arg>
<arg>"assessment_id": "${assessment_id}"</arg>
<arg>}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 17:44:07.289" level="INFO">${body} = { "type": "risk.assessment.result", "resource": "business.holder", "created_at": "2021-03-22 15:28:56.747Z", "marketplace_id": "f71a8951368a4cc085cf7875ff44e61c", "object": { "result": "APPROVED", "ho...</msg>
<status status="PASS" starttime="20210322 17:44:07.288" endtime="20210322 17:44:07.290"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/admin/internal_operation/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/registration/approval</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:44:07.291" level="INFO">POST Request using : uri=/admin/internal_operation/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/d9b15d5c95a241e597b4535d8c77e229/registration/approval, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "risk.assessment.result", "resource": "business.holder", "created_at": "2021-03-22 15:28:56.747Z", "marketplace_id": "f71a8951368a4cc085cf7875ff44e61c", "object": { "result": "APPROVED", "holder_id": "d9b15d5c95a241e597b4535d8c77e229", "applicant_id": "bcc25a6751c14b52af1340d40dba78c5", "assessment_id": "60473969-27eb-49c7-b5b9-13f7cec429d2" } } 
json=None</msg>
<msg timestamp="20210322 17:44:07.522" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 17:44:07.290" endtime="20210322 17:44:07.522"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:44:07.524" level="INFO">{'message': 'Holder approved successfully'}</msg>
<status status="PASS" starttime="20210322 17:44:07.523" endtime="20210322 17:44:07.524"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:44:07.527" level="INFO">270332be789fd087</msg>
<status status="PASS" starttime="20210322 17:44:07.526" endtime="20210322 17:44:07.528"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:44:07.529" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 17:44:07.528" endtime="20210322 17:44:07.530"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 17:44:07.531" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:44:07.530" endtime="20210322 17:44:07.532"></status>
</kw>
<status status="PASS" starttime="20210322 17:44:07.280" endtime="20210322 17:44:07.532"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 17:44:07.533" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:44:07.533" endtime="20210322 17:44:07.534"></status>
</kw>
<kw name="buscar account por holder" library="accounts_get_accounts_by_holder">
<kw name="conectar accounts" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accounts</arg>
<arg>url=${account_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 17:44:07.537" level="INFO">Creating Session using : alias=accounts, url=https://banking-accounts-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 17:44:07.536" endtime="20210322 17:44:07.537"></status>
</kw>
<status status="PASS" starttime="20210322 17:44:07.535" endtime="20210322 17:44:07.538"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accounts</arg>
<arg>/marketplaces/${marketplace_external_key}/holders/${holder_external_key}/accounts</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:44:07.539" level="INFO">GET Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/holders/d9b15d5c95a241e597b4535d8c77e229/accounts, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 17:44:08.194" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 17:44:07.538" endtime="20210322 17:44:08.194"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:44:08.197" level="INFO">{'items': [{'id': 'bb283d98587249d6b12130cc8eb16851', 'holder': 'd9b15d5c95a241e597b4535d8c77e229', 'balance': '0.00', 'currency': 'BRL', 'routing_number': '001', 'number': '4201515798', 'status': 'active', 'metadata': {}, 'created_at': '2021-03-22T20:44:08.681501', 'updated_at': '2021-03-22T20:44:08.681501', 'primary': True, 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'uri': '/v2/marketplaces/f71a8951368a4cc085cf7875ff44e61c/accounts/bb283d98587249d6b12130cc8eb16851', 'resource': 'payment_account'}], 'has_more': False, 'limit': 100, 'total_pages': 1, 'page': 1, 'offset': 0, 'total': '1', 'query_count': '1'}</msg>
<status status="PASS" starttime="20210322 17:44:08.195" endtime="20210322 17:44:08.197"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:44:08.200" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 17:44:08.198" endtime="20210322 17:44:08.200"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["id"]}</arg>
</arguments>
<assign>
<var>${account_external_key}</var>
</assign>
<msg timestamp="20210322 17:44:08.204" level="INFO">${account_external_key} = bb283d98587249d6b12130cc8eb16851</msg>
<status status="PASS" starttime="20210322 17:44:08.201" endtime="20210322 17:44:08.204"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_external_key}</arg>
</arguments>
<msg timestamp="20210322 17:44:08.205" level="INFO">${account_external_key} = bb283d98587249d6b12130cc8eb16851</msg>
<status status="PASS" starttime="20210322 17:44:08.205" endtime="20210322 17:44:08.205"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["number"]}</arg>
</arguments>
<assign>
<var>${account_number}</var>
</assign>
<msg timestamp="20210322 17:44:08.207" level="INFO">${account_number} = 4201515798</msg>
<status status="PASS" starttime="20210322 17:44:08.206" endtime="20210322 17:44:08.207"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_number}</arg>
</arguments>
<msg timestamp="20210322 17:44:08.209" level="INFO">${account_number} = 4201515798</msg>
<status status="PASS" starttime="20210322 17:44:08.208" endtime="20210322 17:44:08.209"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["routing_number"]}</arg>
</arguments>
<assign>
<var>${account_routing_number}</var>
</assign>
<msg timestamp="20210322 17:44:08.211" level="INFO">${account_routing_number} = 001</msg>
<status status="PASS" starttime="20210322 17:44:08.209" endtime="20210322 17:44:08.211"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_routing_number}</arg>
</arguments>
<msg timestamp="20210322 17:44:08.212" level="INFO">${account_routing_number} = 001</msg>
<status status="PASS" starttime="20210322 17:44:08.211" endtime="20210322 17:44:08.212"></status>
</kw>
<status status="PASS" starttime="20210322 17:44:07.534" endtime="20210322 17:44:08.212"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 17:44:08.214" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:44:08.213" endtime="20210322 17:44:08.214"></status>
</kw>
<status status="PASS" starttime="20210322 17:44:04.147" endtime="20210322 17:44:08.214"></status>
</kw>
<kw name="criar chave pix" library="pix_dict_create_entry">
<arguments>
<arg>type=phone</arg>
<arg>value=${phone_pix}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 17:44:08.217" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 17:44:08.216" endtime="20210322 17:44:08.217"></status>
</kw>
<status status="PASS" starttime="20210322 17:44:08.216" endtime="20210322 17:44:08.218"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${type}</arg>
</arguments>
<msg timestamp="20210322 17:44:08.218" level="INFO">${type} = phone</msg>
<status status="PASS" starttime="20210322 17:44:08.218" endtime="20210322 17:44:08.219"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210322 17:44:08.219" level="INFO">${value} = +5521983618928</msg>
<status status="PASS" starttime="20210322 17:44:08.219" endtime="20210322 17:44:08.220"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:44:08.221" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 17:44:08.220" endtime="20210322 17:44:08.221"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "${type}",</arg>
<arg>"value": "${value}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 17:44:08.222" level="INFO">${body} = { "type": "phone", "value": "+5521983618928" }</msg>
<status status="PASS" starttime="20210322 17:44:08.221" endtime="20210322 17:44:08.222"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:44:08.223" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/d9b15d5c95a241e597b4535d8c77e229/accounts/bb283d98587249d6b12130cc8eb16851/entries, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "phone", "value": "+5521983618928" } 
json=None</msg>
<msg timestamp="20210322 17:44:08.899" level="INFO">${response} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20210322 17:44:08.222" endtime="20210322 17:44:08.899"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:44:08.901" level="INFO">{'id': '61a75070e46847f6b577c93f917408d7', 'status': 'waiting_ownership_verification', 'created_at': '2021-03-22T05:44:10.075', 'updated_at': '2021-03-22T05:44:10.075', 'key': {'value': '+5521983618928', 'type': 'phone'}, 'account': {'id': 'bb283d98587249d6b12130cc8eb16851', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': 'd9b15d5c95a241e597b4535d8c77e229', 'owner': {'name': 'Holder de teste', 'national_registration': '45812796076', 'type': 'individual'}, 'routing_number': '001', 'number': '4201515798', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}, 'resource': 'pix.entry'}</msg>
<status status="PASS" starttime="20210322 17:44:08.900" endtime="20210322 17:44:08.901"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:44:08.903" level="INFO">67a03fb83f696679</msg>
<status status="PASS" starttime="20210322 17:44:08.902" endtime="20210322 17:44:08.904"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 17:44:08.906" level="INFO">202</msg>
<status status="PASS" starttime="20210322 17:44:08.905" endtime="20210322 17:44:08.906"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:44:08.908" level="INFO">${response} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20210322 17:44:08.906" endtime="20210322 17:44:08.908"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${entry_external_key}</var>
</assign>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:08.909" endtime="20210322 17:44:08.910"></status>
</kw>
<msg timestamp="20210322 17:44:08.910" level="INFO">${entry_external_key} = 61a75070e46847f6b577c93f917408d7</msg>
<status status="PASS" starttime="20210322 17:44:08.908" endtime="20210322 17:44:08.910"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${entry_external_key}</arg>
</arguments>
<msg timestamp="20210322 17:44:08.912" level="INFO">${entry_external_key} = 61a75070e46847f6b577c93f917408d7</msg>
<status status="PASS" starttime="20210322 17:44:08.911" endtime="20210322 17:44:08.912"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["key"]["value"]}</arg>
</arguments>
<assign>
<var>${entry_key_value}</var>
</assign>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["key"]["value"]}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:08.913" endtime="20210322 17:44:08.914"></status>
</kw>
<msg timestamp="20210322 17:44:08.914" level="INFO">${entry_key_value} = +5521983618928</msg>
<status status="PASS" starttime="20210322 17:44:08.912" endtime="20210322 17:44:08.914"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${entry_key_value}</arg>
</arguments>
<msg timestamp="20210322 17:44:08.914" level="INFO">${entry_key_value} = +5521983618928</msg>
<status status="PASS" starttime="20210322 17:44:08.914" endtime="20210322 17:44:08.915"></status>
</kw>
<status status="PASS" starttime="20210322 17:44:08.215" endtime="20210322 17:44:08.915"></status>
</kw>
<kw name="buscar chave pix" library="pix_dict_get_entry">
<arguments>
<arg>holder_external_key=${holder_external_key}</arg>
<arg>account_external_key=${account_external_key}</arg>
<arg>entry_external_key=${entry_external_key}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 17:44:08.916" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 17:44:08.916" endtime="20210322 17:44:08.916"></status>
</kw>
<status status="PASS" starttime="20210322 17:44:08.916" endtime="20210322 17:44:08.916"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries/${entry_external_key}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:44:08.917" level="INFO">GET Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/d9b15d5c95a241e597b4535d8c77e229/accounts/bb283d98587249d6b12130cc8eb16851/entries/61a75070e46847f6b577c93f917408d7, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 17:44:09.555" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 17:44:08.917" endtime="20210322 17:44:09.555"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:44:09.555" level="INFO">{'id': '61a75070e46847f6b577c93f917408d7', 'status': 'waiting_ownership_verification', 'created_at': '2021-03-22T05:44:10.075', 'updated_at': '2021-03-22T05:44:10.075', 'key': {'value': '+5521983618928', 'type': 'phone'}, 'account': {'id': 'bb283d98587249d6b12130cc8eb16851', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': 'd9b15d5c95a241e597b4535d8c77e229', 'owner': {'name': 'Holder de teste', 'national_registration': '45812796076', 'type': 'individual'}, 'routing_number': '001', 'number': '4201515798', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}, 'resource': 'pix.entry'}</msg>
<status status="PASS" starttime="20210322 17:44:09.555" endtime="20210322 17:44:09.555"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:44:09.556" level="INFO">256cc86221f2cf48</msg>
<status status="PASS" starttime="20210322 17:44:09.555" endtime="20210322 17:44:09.556"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 17:44:09.556" level="INFO">200</msg>
<status status="PASS" starttime="20210322 17:44:09.556" endtime="20210322 17:44:09.556"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:44:09.557" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 17:44:09.556" endtime="20210322 17:44:09.557"></status>
</kw>
<status status="PASS" starttime="20210322 17:44:08.915" endtime="20210322 17:44:09.557"></status>
</kw>
<kw name="validar busca da chave pix" library="asserts">
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 17:44:09.557" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:44:09.557" endtime="20210322 17:44:09.558"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar status da chave</arg>
</arguments>
<msg timestamp="20210322 17:44:09.558" level="INFO">Validar status da chave</msg>
<status status="PASS" starttime="20210322 17:44:09.558" endtime="20210322 17:44:09.558"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${type}' == 'evp'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["status"]}</arg>
<arg>active</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'phone'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["status"]}</arg>
<arg>waiting_ownership_verification</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'email'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["status"]}</arg>
<arg>waiting_ownership_verification</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'national_registration'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["status"]}</arg>
<arg>active</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["status"]}</arg>
<arg>waiting_ownership_verification</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:09.559" endtime="20210322 17:44:09.559"></status>
</kw>
<status status="PASS" starttime="20210322 17:44:09.558" endtime="20210322 17:44:09.559"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando Tipo da chave PIX</arg>
</arguments>
<msg timestamp="20210322 17:44:09.559" level="INFO">Validando Tipo da chave PIX</msg>
<status status="PASS" starttime="20210322 17:44:09.559" endtime="20210322 17:44:09.559"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${type}' == 'evp'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["type"]}</arg>
<arg>${type}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'phone'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["type"]}</arg>
<arg>${type}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'email'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["type"]}</arg>
<arg>${type}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'national_registration'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["type"]}</arg>
<arg>${type}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["key"]["type"]}</arg>
<arg>${type}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:09.560" endtime="20210322 17:44:09.560"></status>
</kw>
<status status="PASS" starttime="20210322 17:44:09.560" endtime="20210322 17:44:09.560"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando Valor da chave PIX</arg>
</arguments>
<msg timestamp="20210322 17:44:09.561" level="INFO">Validando Valor da chave PIX</msg>
<status status="PASS" starttime="20210322 17:44:09.560" endtime="20210322 17:44:09.561"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${type}' == 'evp'</arg>
<arg>Should Not Be Empty</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'phone'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${phone_pix}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'email'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${email_pix}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'national_registration'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${national_registration}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${phone_pix}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:09.561" endtime="20210322 17:44:09.562"></status>
</kw>
<status status="PASS" starttime="20210322 17:44:09.561" endtime="20210322 17:44:09.562"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando dados da conta</arg>
</arguments>
<msg timestamp="20210322 17:44:09.562" level="INFO">Validando dados da conta</msg>
<status status="PASS" starttime="20210322 17:44:09.562" endtime="20210322 17:44:09.562"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["id"]}</arg>
<arg>${account_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:09.562" endtime="20210322 17:44:09.562"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["marketplace"]}</arg>
<arg>${marketplace_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:09.563" endtime="20210322 17:44:09.563"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["holder"]}</arg>
<arg>${holder_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:09.563" endtime="20210322 17:44:09.563"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["number"]}</arg>
<arg>${account_number}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:09.564" endtime="20210322 17:44:09.564"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["routing_number"]}</arg>
<arg>${account_routing_number}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:09.564" endtime="20210322 17:44:09.564"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["type"]}</arg>
<arg>CACC</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:09.564" endtime="20210322 17:44:09.565"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar Proprietário da Account Owner</arg>
</arguments>
<msg timestamp="20210322 17:44:09.565" level="INFO">Validar Proprietário da Account Owner</msg>
<status status="PASS" starttime="20210322 17:44:09.565" endtime="20210322 17:44:09.565"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${holder_type}' == 'individual'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["account"]["owner"]["name"]}</arg>
<arg>${holder_name}</arg>
<arg>ELSE IF</arg>
<arg>'${holder_type}' == 'business'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["account"]["owner"]["name"]}</arg>
<arg>${legal_name}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["account"]["owner"]["name"]}</arg>
<arg>${holder_name}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:09.566" endtime="20210322 17:44:09.566"></status>
</kw>
<status status="PASS" starttime="20210322 17:44:09.565" endtime="20210322 17:44:09.566"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar national_registration da Account Owner</arg>
</arguments>
<msg timestamp="20210322 17:44:09.567" level="INFO">Validar national_registration da Account Owner</msg>
<status status="PASS" starttime="20210322 17:44:09.566" endtime="20210322 17:44:09.567"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${holder_type}' == 'individual'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["account"]["owner"]["national_registration"]}</arg>
<arg>${national_registration}</arg>
<arg>ELSE IF</arg>
<arg>'${holder_type}' == 'business'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["account"]["owner"]["national_registration"]}</arg>
<arg>${national_registration}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["account"]["owner"]["national_registration"]}</arg>
<arg>${national_registration}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:09.568" endtime="20210322 17:44:09.570"></status>
</kw>
<status status="PASS" starttime="20210322 17:44:09.568" endtime="20210322 17:44:09.570"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar Holder Type do Account Owner</arg>
</arguments>
<msg timestamp="20210322 17:44:09.570" level="INFO">Validar Holder Type do Account Owner</msg>
<status status="PASS" starttime="20210322 17:44:09.570" endtime="20210322 17:44:09.570"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${holder_type}' == 'individual'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["account"]["owner"]["type"]}</arg>
<arg>${holder_type}</arg>
<arg>ELSE IF</arg>
<arg>'${holder_type}' == 'business'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["account"]["owner"]["type"]}</arg>
<arg>${holder_type}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["account"]["owner"]["type"]}</arg>
<arg>${holder_type}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:09.570" endtime="20210322 17:44:09.570"></status>
</kw>
<status status="PASS" starttime="20210322 17:44:09.570" endtime="20210322 17:44:09.570"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar PSP</arg>
</arguments>
<msg timestamp="20210322 17:44:09.571" level="INFO">Validar PSP</msg>
<status status="PASS" starttime="20210322 17:44:09.571" endtime="20210322 17:44:09.571"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["psp"]["code"]}</arg>
<arg>19468242</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:09.571" endtime="20210322 17:44:09.571"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["psp"]["name"]}</arg>
<arg>Zoop Tecnologia e Meios de Pagamento S.A.</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:09.571" endtime="20210322 17:44:09.572"></status>
</kw>
<status status="PASS" starttime="20210322 17:44:09.557" endtime="20210322 17:44:09.572"></status>
</kw>
<kw name="validar chave pix" library="asserts">
<arguments>
<arg>key_status=waiting_ownership_verification</arg>
<arg>key_type=${type}</arg>
<arg>key_value=${value}</arg>
<arg>account_external_key=${account_external_key}</arg>
<arg>marketplace_external_key=${marketplace_external_key}</arg>
<arg>holder_external_key=${holder_external_key}</arg>
<arg>account_number=${account_number}</arg>
<arg>account_routing_number=${account_routing_number}</arg>
<arg>account_type=CACC</arg>
<arg>owner_key_name=${holder_name}</arg>
<arg>national_registration=${national_registration}</arg>
<arg>holder_type=${holder_type}</arg>
<arg>psp_code=19468242</arg>
<arg>psp_name=Zoop Tecnologia e Meios de Pagamento S.A.</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar status da chave</arg>
</arguments>
<msg timestamp="20210322 17:44:09.573" level="INFO">Validar status da chave</msg>
<status status="PASS" starttime="20210322 17:44:09.573" endtime="20210322 17:44:09.573"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["status"]}</arg>
<arg>${key_status}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:09.573" endtime="20210322 17:44:09.573"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando Tipo da chave PIX</arg>
</arguments>
<msg timestamp="20210322 17:44:09.575" level="INFO">Validando Tipo da chave PIX</msg>
<status status="PASS" starttime="20210322 17:44:09.573" endtime="20210322 17:44:09.575"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["key"]["type"]}</arg>
<arg>${key_type}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:09.575" endtime="20210322 17:44:09.575"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando Valor da chave PIX</arg>
</arguments>
<msg timestamp="20210322 17:44:09.575" level="INFO">Validando Valor da chave PIX</msg>
<status status="PASS" starttime="20210322 17:44:09.575" endtime="20210322 17:44:09.575"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${type}' == 'evp'</arg>
<arg>Should Not Be Empty</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' != 'evp'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${key_value}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${key_value}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:09.575" endtime="20210322 17:44:09.575"></status>
</kw>
<status status="PASS" starttime="20210322 17:44:09.575" endtime="20210322 17:44:09.575"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando dados da conta</arg>
</arguments>
<msg timestamp="20210322 17:44:09.576" level="INFO">Validando dados da conta</msg>
<status status="PASS" starttime="20210322 17:44:09.575" endtime="20210322 17:44:09.576"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["id"]}</arg>
<arg>${account_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:09.576" endtime="20210322 17:44:09.576"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["marketplace"]}</arg>
<arg>${marketplace_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:09.576" endtime="20210322 17:44:09.578"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["holder"]}</arg>
<arg>${holder_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:09.578" endtime="20210322 17:44:09.578"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["number"]}</arg>
<arg>${account_number}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:09.578" endtime="20210322 17:44:09.579"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["routing_number"]}</arg>
<arg>${account_routing_number}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:09.579" endtime="20210322 17:44:09.579"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["type"]}</arg>
<arg>${account_type}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:09.579" endtime="20210322 17:44:09.579"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar Proprietário da Account Owner</arg>
</arguments>
<msg timestamp="20210322 17:44:09.579" level="INFO">Validar Proprietário da Account Owner</msg>
<status status="PASS" starttime="20210322 17:44:09.579" endtime="20210322 17:44:09.579"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["account"]["owner"]["name"]}</arg>
<arg>${owner_key_name}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:09.579" endtime="20210322 17:44:09.579"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar national_registration da Account Owner</arg>
</arguments>
<msg timestamp="20210322 17:44:09.580" level="INFO">Validar national_registration da Account Owner</msg>
<status status="PASS" starttime="20210322 17:44:09.580" endtime="20210322 17:44:09.580"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["account"]["owner"]["national_registration"]}</arg>
<arg>${national_registration}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:09.580" endtime="20210322 17:44:09.580"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar Holder Type do Account Owner</arg>
</arguments>
<msg timestamp="20210322 17:44:09.582" level="INFO">Validar Holder Type do Account Owner</msg>
<status status="PASS" starttime="20210322 17:44:09.580" endtime="20210322 17:44:09.582"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["account"]["owner"]["type"]}</arg>
<arg>${holder_type}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:09.582" endtime="20210322 17:44:09.582"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar PSP</arg>
</arguments>
<msg timestamp="20210322 17:44:09.582" level="INFO">Validar PSP</msg>
<status status="PASS" starttime="20210322 17:44:09.582" endtime="20210322 17:44:09.582"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["psp"]["code"]}</arg>
<arg>${psp_code}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:09.583" endtime="20210322 17:44:09.583"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["psp"]["name"]}</arg>
<arg>${psp_name}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:09.583" endtime="20210322 17:44:09.583"></status>
</kw>
<status status="PASS" starttime="20210322 17:44:09.572" endtime="20210322 17:44:09.583"></status>
</kw>
<doc>Fluxo Básico</doc>
<tags>
<tag>smoke_test</tag>
</tags>
<status status="PASS" starttime="20210322 17:44:04.144" endtime="20210322 17:44:09.583" critical="yes"></status>
</test>
<test id="s1-s1-s1-t3" name="Cenário: Buscar chave de endereçamento do tipo Email">
<kw name="Email" library="FakerLibrary">
<assign>
<var>${email_pix}</var>
</assign>
<msg timestamp="20210322 17:44:09.584" level="INFO">${email_pix} = umoreira@ig.com.br</msg>
<status status="PASS" starttime="20210322 17:44:09.584" endtime="20210322 17:44:09.584"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${email_pix}</arg>
</arguments>
<msg timestamp="20210322 17:44:09.586" level="INFO">${email_pix} = umoreira@ig.com.br</msg>
<status status="PASS" starttime="20210322 17:44:09.585" endtime="20210322 17:44:09.586"></status>
</kw>
<kw name="criar holder individual ativo" library="accreditation_create_holder_active">
<kw name="conectar accreditation" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accreditation</arg>
<arg>url=${accreditation_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 17:44:09.586" level="INFO">Creating Session using : alias=accreditation, url=https://banking-accreditation-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 17:44:09.586" endtime="20210322 17:44:09.586"></status>
</kw>
<status status="PASS" starttime="20210322 17:44:09.586" endtime="20210322 17:44:09.586"></status>
</kw>
<kw name="Cpf" library="FakerLibrary">
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 17:44:09.587" level="INFO">${national_registration} = 169.435.087-84</msg>
<status status="PASS" starttime="20210322 17:44:09.587" endtime="20210322 17:44:09.587"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${national_registration}</arg>
<arg>.</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 17:44:09.588" level="INFO">${national_registration} = 169435087-84</msg>
<status status="PASS" starttime="20210322 17:44:09.587" endtime="20210322 17:44:09.588"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${national_registration}</arg>
<arg>-</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 17:44:09.588" level="INFO">${national_registration} = 16943508784</msg>
<status status="PASS" starttime="20210322 17:44:09.588" endtime="20210322 17:44:09.588"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${national_registration}</arg>
</arguments>
<msg timestamp="20210322 17:44:09.589" level="INFO">${national_registration} = 16943508784</msg>
<status status="PASS" starttime="20210322 17:44:09.588" endtime="20210322 17:44:09.589"></status>
</kw>
<kw name="Rg" library="FakerLibrary">
<doc>Brazilian RG, return plain numbers.
Check:  https://www.ngmatematica.com/2014/02/como-determinar-o-digito-verificador-do.html</doc>
<assign>
<var>${identity_card}</var>
</assign>
<msg timestamp="20210322 17:44:09.590" level="INFO">${identity_card} = 138572641</msg>
<status status="PASS" starttime="20210322 17:44:09.589" endtime="20210322 17:44:09.590"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${identity_card}</arg>
</arguments>
<msg timestamp="20210322 17:44:09.590" level="INFO">${identity_card} = 138572641</msg>
<status status="PASS" starttime="20210322 17:44:09.590" endtime="20210322 17:44:09.590"></status>
</kw>
<kw name="criar holder individual" library="accreditation_post_holder_individual">
<arguments>
<arg>holder_type=individual</arg>
<arg>holder_name=${holder_name}</arg>
<arg>email=${email}</arg>
<arg>national_registration=${national_registration}</arg>
<arg>revenue=${revenue}</arg>
<arg>birthday=${birthday}</arg>
<arg>mothers_name=${mothers_name}</arg>
<arg>identity_card=${identity_card}</arg>
<arg>pep=false</arg>
<arg>cbo=${cbo}</arg>
</arguments>
<kw name="conectar accreditation" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accreditation</arg>
<arg>url=${accreditation_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 17:44:09.592" level="INFO">Creating Session using : alias=accreditation, url=https://banking-accreditation-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 17:44:09.592" endtime="20210322 17:44:09.592"></status>
</kw>
<status status="PASS" starttime="20210322 17:44:09.592" endtime="20210322 17:44:09.592"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_type}</arg>
</arguments>
<msg timestamp="20210322 17:44:09.592" level="INFO">${holder_type} = individual</msg>
<status status="PASS" starttime="20210322 17:44:09.592" endtime="20210322 17:44:09.592"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_name}</arg>
</arguments>
<msg timestamp="20210322 17:44:09.592" level="INFO">${holder_name} = Holder de teste</msg>
<status status="PASS" starttime="20210322 17:44:09.592" endtime="20210322 17:44:09.592"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:44:09.594" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 17:44:09.594" endtime="20210322 17:44:09.594"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "${holder_type}",</arg>
<arg>"name": "${holder_name}",</arg>
<arg>"email": "${email}",</arg>
<arg>"national_registration": "${national_registration}",</arg>
<arg>"revenue": ${revenue},</arg>
<arg>"birthday": "${birthday}",</arg>
<arg>"mothers_name": "${mothers_name}",</arg>
<arg>"identity_card": "${identity_card}",</arg>
<arg>"pep": false,</arg>
<arg>"cbo": ${cbo}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 17:44:09.594" level="INFO">${body} = { "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "16943508784", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder",...</msg>
<status status="PASS" starttime="20210322 17:44:09.594" endtime="20210322 17:44:09.594"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:44:09.594" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "16943508784", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder", "identity_card": "138572641", "pep": false, "cbo": 821450 } 
json=None</msg>
<msg timestamp="20210322 17:44:10.212" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:44:09.594" endtime="20210322 17:44:10.212"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:44:10.213" level="INFO">{'id': '1f4d5e11c3d849be9db3db613dbc918c', 'name': 'Holder de teste', 'revenue': 5500.0, 'email': 'teste@teste.com.br', 'status': 'waiting_info_and_documents', 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'marketplace_name': 'Marketplace de Teste', 'created_at': '2021-03-22T17:44:11.401219', 'updated_at': '2021-03-22T17:44:11.40122', 'type': 'individual', 'national_registration': '16943508784', 'birthday': '1988-04-23', 'mothers_name': 'Mãe do Holder', 'identity_card': '138572641', 'pep': False, 'cbo': '821450', '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/1f4d5e11c3d849be9db3db613dbc918c', 'type': 'GET'}, 'phones': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/1f4d5e11c3d849be9db3db613dbc918c/phones', 'type': 'GET'}, 'addresses': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/1f4d5e11c3d849be9db3db613dbc918c/addresses', 'type': 'GET'}, 'documents': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/1f4d5e11c3d849be9db3db613dbc918c/documents', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 17:44:10.212" endtime="20210322 17:44:10.213"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:44:10.213" level="INFO">5e66dfd12b2a3ecc</msg>
<status status="PASS" starttime="20210322 17:44:10.213" endtime="20210322 17:44:10.213"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${body}</arg>
</arguments>
<msg timestamp="20210322 17:44:10.213" level="INFO">{ "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "16943508784", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder", "identity_card": "138572641", "pep": false, "cbo": 821450 }</msg>
<status status="PASS" starttime="20210322 17:44:10.213" endtime="20210322 17:44:10.214"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:44:10.214" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:44:10.214" endtime="20210322 17:44:10.214"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${holder_external_key}</var>
</assign>
<msg timestamp="20210322 17:44:10.215" level="INFO">${holder_external_key} = 1f4d5e11c3d849be9db3db613dbc918c</msg>
<status status="PASS" starttime="20210322 17:44:10.214" endtime="20210322 17:44:10.215"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_external_key}</arg>
</arguments>
<msg timestamp="20210322 17:44:10.215" level="INFO">${holder_external_key} = 1f4d5e11c3d849be9db3db613dbc918c</msg>
<status status="PASS" starttime="20210322 17:44:10.215" endtime="20210322 17:44:10.215"></status>
</kw>
<status status="PASS" starttime="20210322 17:44:09.590" endtime="20210322 17:44:10.215"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_name}</arg>
</arguments>
<msg timestamp="20210322 17:44:10.216" level="INFO">${holder_name} = Holder de teste</msg>
<status status="PASS" starttime="20210322 17:44:10.216" endtime="20210322 17:44:10.216"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 17:44:10.217" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:44:10.216" endtime="20210322 17:44:10.217"></status>
</kw>
<kw name="criar holder phone" library="accreditation_post_holder_phone">
<arguments>
<arg>21</arg>
<arg>51</arg>
<arg>996221236</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:44:10.218" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 17:44:10.218" endtime="20210322 17:44:10.218"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"area_code": "${phone_area_code}",</arg>
<arg>"country_code": "${phone_country_code}",</arg>
<arg>"number": "${phone_number}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 17:44:10.218" level="INFO">${body} = { "area_code": "21", "country_code": "51", "number": "996221236" }</msg>
<status status="PASS" starttime="20210322 17:44:10.218" endtime="20210322 17:44:10.218"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/phones</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:44:10.219" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/1f4d5e11c3d849be9db3db613dbc918c/phones, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "area_code": "21", "country_code": "51", "number": "996221236" } 
json=None</msg>
<msg timestamp="20210322 17:44:10.541" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:44:10.219" endtime="20210322 17:44:10.542"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:44:10.543" level="INFO">{'id': '0cc6f216a7ac4840b5284476ecbc1c4c', 'area_code': '21', 'country_code': '51', 'number': '996221236', 'main': True, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/1f4d5e11c3d849be9db3db613dbc918c/phones/0cc6f216a7ac4840b5284476ecbc1c4c', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/1f4d5e11c3d849be9db3db613dbc918c', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 17:44:10.542" endtime="20210322 17:44:10.544"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:44:10.545" level="INFO">01a56402ba8e2828</msg>
<status status="PASS" starttime="20210322 17:44:10.544" endtime="20210322 17:44:10.545"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:44:10.547" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:44:10.546" endtime="20210322 17:44:10.547"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${phone_external_key}</var>
</assign>
<msg timestamp="20210322 17:44:10.549" level="INFO">${phone_external_key} = 0cc6f216a7ac4840b5284476ecbc1c4c</msg>
<status status="PASS" starttime="20210322 17:44:10.548" endtime="20210322 17:44:10.549"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${phone_external_key}</arg>
</arguments>
<msg timestamp="20210322 17:44:10.550" level="INFO">${phone_external_key} = 0cc6f216a7ac4840b5284476ecbc1c4c</msg>
<status status="PASS" starttime="20210322 17:44:10.549" endtime="20210322 17:44:10.550"></status>
</kw>
<status status="PASS" starttime="20210322 17:44:10.217" endtime="20210322 17:44:10.551"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 17:44:10.552" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:44:10.551" endtime="20210322 17:44:10.552"></status>
</kw>
<kw name="criar holder address" library="accreditation_post_holder_address">
<arguments>
<arg>Rio de Janeiro</arg>
<arg>Rio de Janeiro</arg>
<arg>Brasil</arg>
<arg>Bairro de Testes</arg>
<arg>Rua de Testes</arg>
<arg>90</arg>
<arg>apto 200</arg>
<arg>21550987</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:44:10.554" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 17:44:10.553" endtime="20210322 17:44:10.554"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"city": "${city}",</arg>
<arg>"state": "${state}",</arg>
<arg>"country": "${country}",</arg>
<arg>"neighborhood": "${neighborhood}",</arg>
<arg>"street": "${street}",</arg>
<arg>"number": "${number}",</arg>
<arg>"complement": "${complement}",</arg>
<arg>"postal_code": "${postal_code}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 17:44:10.555" level="INFO">${body} = { "city": "Rio de Janeiro", "state": "Rio de Janeiro", "country": "Brasil", "neighborhood": "Bairro de Testes", "street": "Rua de Testes", "number": "90", "complement": "apto 200", "postal_code": "215...</msg>
<status status="PASS" starttime="20210322 17:44:10.554" endtime="20210322 17:44:10.555"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/addresses</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:44:10.557" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/1f4d5e11c3d849be9db3db613dbc918c/addresses, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "city": "Rio de Janeiro", "state": "Rio de Janeiro", "country": "Brasil", "neighborhood": "Bairro de Testes", "street": "Rua de Testes", "number": "90", "complement": "apto 200", "postal_code": "21550987" } 
json=None</msg>
<msg timestamp="20210322 17:44:10.797" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:44:10.556" endtime="20210322 17:44:10.798"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:44:10.800" level="INFO">{'id': 'e0366ebb23d042a0a0fe7dd1ee7ff3f1', 'street': 'Rua de Testes', 'number': '90', 'city': 'Rio de Janeiro', 'complement': 'apto 200', 'state': 'Rio de Janeiro', 'neighborhood': 'Bairro de Testes', 'postal_code': '21550987', 'country': 'Brasil', 'main': True, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/1f4d5e11c3d849be9db3db613dbc918c/addresses/e0366ebb23d042a0a0fe7dd1ee7ff3f1', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/1f4d5e11c3d849be9db3db613dbc918c', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 17:44:10.799" endtime="20210322 17:44:10.801"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:44:10.804" level="INFO">b6bcfefc830d6fbc</msg>
<status status="PASS" starttime="20210322 17:44:10.803" endtime="20210322 17:44:10.805"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:44:10.807" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:44:10.806" endtime="20210322 17:44:10.807"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${address_external_key}</var>
</assign>
<msg timestamp="20210322 17:44:10.810" level="INFO">${address_external_key} = e0366ebb23d042a0a0fe7dd1ee7ff3f1</msg>
<status status="PASS" starttime="20210322 17:44:10.808" endtime="20210322 17:44:10.810"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${address_external_key}</arg>
</arguments>
<msg timestamp="20210322 17:44:10.812" level="INFO">${address_external_key} = e0366ebb23d042a0a0fe7dd1ee7ff3f1</msg>
<status status="PASS" starttime="20210322 17:44:10.811" endtime="20210322 17:44:10.812"></status>
</kw>
<status status="PASS" starttime="20210322 17:44:10.552" endtime="20210322 17:44:10.813"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 17:44:10.814" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:44:10.813" endtime="20210322 17:44:10.814"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>SELFIE</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:44:10.816" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 17:44:10.815" endtime="20210322 17:44:10.816"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 17:44:10.817" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 17:44:10.820" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 17:44:10.816" endtime="20210322 17:44:10.820"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:44:10.821" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/1f4d5e11c3d849be9db3db613dbc918c/documents?type=SELFIE, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 17:44:11.089" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:44:10.820" endtime="20210322 17:44:11.089"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:44:11.090" level="INFO">{'id': '714129fd6a524f4b99d76b57d25b8ef9', 'document_type': 'selfie', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/1f4d5e11c3d849be9db3db613dbc918c/documents/714129fd6a524f4b99d76b57d25b8ef9', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/1f4d5e11c3d849be9db3db613dbc918c', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/1f4d5e11c3d849be9db3db613dbc918c/documents/714129fd6a524f4b99d76b57d25b8ef9/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 17:44:11.089" endtime="20210322 17:44:11.090"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:44:11.091" level="INFO">1a386db8494bcb98</msg>
<status status="PASS" starttime="20210322 17:44:11.090" endtime="20210322 17:44:11.091"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:44:11.091" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:44:11.091" endtime="20210322 17:44:11.091"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 17:44:11.092" level="INFO">${document_external_key} = 714129fd6a524f4b99d76b57d25b8ef9</msg>
<status status="PASS" starttime="20210322 17:44:11.091" endtime="20210322 17:44:11.092"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 17:44:11.092" level="INFO">${document_external_key} = 714129fd6a524f4b99d76b57d25b8ef9</msg>
<status status="PASS" starttime="20210322 17:44:11.092" endtime="20210322 17:44:11.092"></status>
</kw>
<status status="PASS" starttime="20210322 17:44:10.815" endtime="20210322 17:44:11.092"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 17:44:11.093" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:44:11.093" endtime="20210322 17:44:11.093"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>RG_FRENTE</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:44:11.094" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 17:44:11.094" endtime="20210322 17:44:11.094"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 17:44:11.094" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 17:44:11.095" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 17:44:11.094" endtime="20210322 17:44:11.095"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:44:11.096" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/1f4d5e11c3d849be9db3db613dbc918c/documents?type=RG_FRENTE, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 17:44:11.396" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:44:11.095" endtime="20210322 17:44:11.396"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:44:11.397" level="INFO">{'id': '7660b32e4cbe4c39a565cf2fd9fa00e8', 'document_type': 'rg_frente', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/1f4d5e11c3d849be9db3db613dbc918c/documents/7660b32e4cbe4c39a565cf2fd9fa00e8', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/1f4d5e11c3d849be9db3db613dbc918c', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/1f4d5e11c3d849be9db3db613dbc918c/documents/7660b32e4cbe4c39a565cf2fd9fa00e8/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 17:44:11.396" endtime="20210322 17:44:11.397"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:44:11.398" level="INFO">6ae35d245a707795</msg>
<status status="PASS" starttime="20210322 17:44:11.397" endtime="20210322 17:44:11.398"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:44:11.399" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:44:11.398" endtime="20210322 17:44:11.399"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 17:44:11.400" level="INFO">${document_external_key} = 7660b32e4cbe4c39a565cf2fd9fa00e8</msg>
<status status="PASS" starttime="20210322 17:44:11.399" endtime="20210322 17:44:11.400"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 17:44:11.400" level="INFO">${document_external_key} = 7660b32e4cbe4c39a565cf2fd9fa00e8</msg>
<status status="PASS" starttime="20210322 17:44:11.400" endtime="20210322 17:44:11.400"></status>
</kw>
<status status="PASS" starttime="20210322 17:44:11.093" endtime="20210322 17:44:11.401"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 17:44:11.401" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:44:11.401" endtime="20210322 17:44:11.401"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>RG_VERSO</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:44:11.403" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 17:44:11.402" endtime="20210322 17:44:11.403"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 17:44:11.403" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 17:44:11.405" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 17:44:11.403" endtime="20210322 17:44:11.405"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:44:11.406" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/1f4d5e11c3d849be9db3db613dbc918c/documents?type=RG_VERSO, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 17:44:11.765" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:44:11.405" endtime="20210322 17:44:11.765"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:44:11.768" level="INFO">{'id': 'ae4d62b017694cb1befdca9794ddca8c', 'document_type': 'rg_verso', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/1f4d5e11c3d849be9db3db613dbc918c/documents/ae4d62b017694cb1befdca9794ddca8c', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/1f4d5e11c3d849be9db3db613dbc918c', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/1f4d5e11c3d849be9db3db613dbc918c/documents/ae4d62b017694cb1befdca9794ddca8c/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 17:44:11.767" endtime="20210322 17:44:11.768"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:44:11.771" level="INFO">9633cd91af8a7014</msg>
<status status="PASS" starttime="20210322 17:44:11.769" endtime="20210322 17:44:11.771"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:44:11.773" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:44:11.773" endtime="20210322 17:44:11.773"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 17:44:11.775" level="INFO">${document_external_key} = ae4d62b017694cb1befdca9794ddca8c</msg>
<status status="PASS" starttime="20210322 17:44:11.773" endtime="20210322 17:44:11.775"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 17:44:11.776" level="INFO">${document_external_key} = ae4d62b017694cb1befdca9794ddca8c</msg>
<status status="PASS" starttime="20210322 17:44:11.775" endtime="20210322 17:44:11.776"></status>
</kw>
<status status="PASS" starttime="20210322 17:44:11.402" endtime="20210322 17:44:11.776"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 17:44:11.778" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:44:11.778" endtime="20210322 17:44:11.778"></status>
</kw>
<kw name="solicitar aprovação do holder" library="accreditation_request_approval">
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:44:11.780" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 17:44:11.780" endtime="20210322 17:44:11.780"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/approval</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:44:11.781" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/1f4d5e11c3d849be9db3db613dbc918c/approval, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data=None 
json=None</msg>
<msg timestamp="20210322 17:44:12.067" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 17:44:11.780" endtime="20210322 17:44:12.067"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:44:12.069" level="INFO">{'message': 'Approval request accepted successfully. Processing analysis'}</msg>
<status status="PASS" starttime="20210322 17:44:12.068" endtime="20210322 17:44:12.070"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:44:12.072" level="INFO">1b70be75542fcee5</msg>
<status status="PASS" starttime="20210322 17:44:12.070" endtime="20210322 17:44:12.072"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:44:12.075" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 17:44:12.073" endtime="20210322 17:44:12.075"></status>
</kw>
<status status="PASS" starttime="20210322 17:44:11.778" endtime="20210322 17:44:12.075"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 17:44:12.077" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:44:12.076" endtime="20210322 17:44:12.077"></status>
</kw>
<kw name="recebendo notificação de aprovação" library="accreditation_risk_notification">
<kw name="Uuid 4" library="FakerLibrary">
<doc>Generates a random UUID4 string.
:param cast_to: Specify what type the UUID should be cast to. Default is `str`
:type cast_to: callable</doc>
<assign>
<var>${assessment_id}</var>
</assign>
<msg timestamp="20210322 17:44:12.080" level="INFO">${assessment_id} = 2942fa5b-13fb-4855-a28c-2c395669fff0</msg>
<status status="PASS" starttime="20210322 17:44:12.079" endtime="20210322 17:44:12.081"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>year</arg>
</arguments>
<assign>
<var>${year}</var>
</assign>
<msg timestamp="20210322 17:44:12.082" level="INFO">${year} = 2021</msg>
<status status="PASS" starttime="20210322 17:44:12.081" endtime="20210322 17:44:12.082"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>month</arg>
</arguments>
<assign>
<var>${month}</var>
</assign>
<msg timestamp="20210322 17:44:12.084" level="INFO">${month} = 03</msg>
<status status="PASS" starttime="20210322 17:44:12.083" endtime="20210322 17:44:12.084"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>day</arg>
</arguments>
<assign>
<var>${day}</var>
</assign>
<msg timestamp="20210322 17:44:12.086" level="INFO">${day} = 22</msg>
<status status="PASS" starttime="20210322 17:44:12.085" endtime="20210322 17:44:12.086"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:44:12.087" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 17:44:12.086" endtime="20210322 17:44:12.087"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "risk.assessment.result",</arg>
<arg>"resource": "business.holder",</arg>
<arg>"created_at": "${year}-${month}-${day} 15:28:56.747Z",</arg>
<arg>"marketplace_id": "${marketplace_external_key}",</arg>
<arg>"object": {</arg>
<arg>"result": "APPROVED",</arg>
<arg>"holder_id": "${holder_external_key}",</arg>
<arg>"applicant_id": "${application_external_key}",</arg>
<arg>"assessment_id": "${assessment_id}"</arg>
<arg>}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 17:44:12.089" level="INFO">${body} = { "type": "risk.assessment.result", "resource": "business.holder", "created_at": "2021-03-22 15:28:56.747Z", "marketplace_id": "f71a8951368a4cc085cf7875ff44e61c", "object": { "result": "APPROVED", "ho...</msg>
<status status="PASS" starttime="20210322 17:44:12.088" endtime="20210322 17:44:12.089"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/admin/internal_operation/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/registration/approval</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:44:12.091" level="INFO">POST Request using : uri=/admin/internal_operation/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/1f4d5e11c3d849be9db3db613dbc918c/registration/approval, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "risk.assessment.result", "resource": "business.holder", "created_at": "2021-03-22 15:28:56.747Z", "marketplace_id": "f71a8951368a4cc085cf7875ff44e61c", "object": { "result": "APPROVED", "holder_id": "1f4d5e11c3d849be9db3db613dbc918c", "applicant_id": "bcc25a6751c14b52af1340d40dba78c5", "assessment_id": "2942fa5b-13fb-4855-a28c-2c395669fff0" } } 
json=None</msg>
<msg timestamp="20210322 17:44:12.297" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 17:44:12.090" endtime="20210322 17:44:12.297"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:44:12.300" level="INFO">{'message': 'Holder approved successfully'}</msg>
<status status="PASS" starttime="20210322 17:44:12.298" endtime="20210322 17:44:12.300"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:44:12.303" level="INFO">3b008815d040b9fa</msg>
<status status="PASS" starttime="20210322 17:44:12.301" endtime="20210322 17:44:12.303"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:44:12.306" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 17:44:12.304" endtime="20210322 17:44:12.306"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 17:44:12.308" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:44:12.307" endtime="20210322 17:44:12.308"></status>
</kw>
<status status="PASS" starttime="20210322 17:44:12.078" endtime="20210322 17:44:12.308"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 17:44:12.309" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:44:12.309" endtime="20210322 17:44:12.310"></status>
</kw>
<kw name="buscar account por holder" library="accounts_get_accounts_by_holder">
<kw name="conectar accounts" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accounts</arg>
<arg>url=${account_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 17:44:12.313" level="INFO">Creating Session using : alias=accounts, url=https://banking-accounts-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 17:44:12.312" endtime="20210322 17:44:12.314"></status>
</kw>
<status status="PASS" starttime="20210322 17:44:12.311" endtime="20210322 17:44:12.314"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accounts</arg>
<arg>/marketplaces/${marketplace_external_key}/holders/${holder_external_key}/accounts</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:44:12.315" level="INFO">GET Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/holders/1f4d5e11c3d849be9db3db613dbc918c/accounts, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 17:44:12.941" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 17:44:12.315" endtime="20210322 17:44:12.941"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:44:12.943" level="INFO">{'items': [{'id': '8b6ee7075f4c4f06aaef1f086c4da181', 'holder': '1f4d5e11c3d849be9db3db613dbc918c', 'balance': '0.00', 'currency': 'BRL', 'routing_number': '001', 'number': '8312994216', 'status': 'active', 'metadata': {}, 'created_at': '2021-03-22T20:44:13.480533', 'updated_at': '2021-03-22T20:44:13.480533', 'primary': True, 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'uri': '/v2/marketplaces/f71a8951368a4cc085cf7875ff44e61c/accounts/8b6ee7075f4c4f06aaef1f086c4da181', 'resource': 'payment_account'}], 'has_more': False, 'limit': 100, 'total_pages': 1, 'page': 1, 'offset': 0, 'total': '1', 'query_count': '1'}</msg>
<status status="PASS" starttime="20210322 17:44:12.942" endtime="20210322 17:44:12.943"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:44:12.944" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 17:44:12.943" endtime="20210322 17:44:12.944"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["id"]}</arg>
</arguments>
<assign>
<var>${account_external_key}</var>
</assign>
<msg timestamp="20210322 17:44:12.946" level="INFO">${account_external_key} = 8b6ee7075f4c4f06aaef1f086c4da181</msg>
<status status="PASS" starttime="20210322 17:44:12.945" endtime="20210322 17:44:12.946"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_external_key}</arg>
</arguments>
<msg timestamp="20210322 17:44:12.947" level="INFO">${account_external_key} = 8b6ee7075f4c4f06aaef1f086c4da181</msg>
<status status="PASS" starttime="20210322 17:44:12.947" endtime="20210322 17:44:12.947"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["number"]}</arg>
</arguments>
<assign>
<var>${account_number}</var>
</assign>
<msg timestamp="20210322 17:44:12.949" level="INFO">${account_number} = 8312994216</msg>
<status status="PASS" starttime="20210322 17:44:12.948" endtime="20210322 17:44:12.949"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_number}</arg>
</arguments>
<msg timestamp="20210322 17:44:12.950" level="INFO">${account_number} = 8312994216</msg>
<status status="PASS" starttime="20210322 17:44:12.949" endtime="20210322 17:44:12.950"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["routing_number"]}</arg>
</arguments>
<assign>
<var>${account_routing_number}</var>
</assign>
<msg timestamp="20210322 17:44:12.951" level="INFO">${account_routing_number} = 001</msg>
<status status="PASS" starttime="20210322 17:44:12.950" endtime="20210322 17:44:12.951"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_routing_number}</arg>
</arguments>
<msg timestamp="20210322 17:44:12.952" level="INFO">${account_routing_number} = 001</msg>
<status status="PASS" starttime="20210322 17:44:12.952" endtime="20210322 17:44:12.952"></status>
</kw>
<status status="PASS" starttime="20210322 17:44:12.310" endtime="20210322 17:44:12.953"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 17:44:12.953" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:44:12.953" endtime="20210322 17:44:12.953"></status>
</kw>
<status status="PASS" starttime="20210322 17:44:09.586" endtime="20210322 17:44:12.954"></status>
</kw>
<kw name="criar chave pix" library="pix_dict_create_entry">
<arguments>
<arg>type=email</arg>
<arg>value=${email_pix}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 17:44:12.956" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 17:44:12.955" endtime="20210322 17:44:12.956"></status>
</kw>
<status status="PASS" starttime="20210322 17:44:12.955" endtime="20210322 17:44:12.956"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${type}</arg>
</arguments>
<msg timestamp="20210322 17:44:12.957" level="INFO">${type} = email</msg>
<status status="PASS" starttime="20210322 17:44:12.956" endtime="20210322 17:44:12.957"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210322 17:44:12.957" level="INFO">${value} = umoreira@ig.com.br</msg>
<status status="PASS" starttime="20210322 17:44:12.957" endtime="20210322 17:44:12.958"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:44:12.958" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 17:44:12.958" endtime="20210322 17:44:12.959"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "${type}",</arg>
<arg>"value": "${value}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 17:44:12.959" level="INFO">${body} = { "type": "email", "value": "umoreira@ig.com.br" }</msg>
<status status="PASS" starttime="20210322 17:44:12.959" endtime="20210322 17:44:12.959"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:44:12.960" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/1f4d5e11c3d849be9db3db613dbc918c/accounts/8b6ee7075f4c4f06aaef1f086c4da181/entries, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "email", "value": "umoreira@ig.com.br" } 
json=None</msg>
<msg timestamp="20210322 17:44:13.640" level="INFO">${response} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20210322 17:44:12.960" endtime="20210322 17:44:13.641"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:44:13.643" level="INFO">{'id': '9587486f9ef94b73bbbc7818f6e0809b', 'status': 'waiting_ownership_verification', 'created_at': '2021-03-22T05:44:14.830', 'updated_at': '2021-03-22T05:44:14.830', 'key': {'value': 'umoreira@ig.com.br', 'type': 'email'}, 'account': {'id': '8b6ee7075f4c4f06aaef1f086c4da181', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': '1f4d5e11c3d849be9db3db613dbc918c', 'owner': {'name': 'Holder de teste', 'national_registration': '16943508784', 'type': 'individual'}, 'routing_number': '001', 'number': '8312994216', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}, 'resource': 'pix.entry'}</msg>
<status status="PASS" starttime="20210322 17:44:13.642" endtime="20210322 17:44:13.643"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:44:13.645" level="INFO">b6d664ce29635982</msg>
<status status="PASS" starttime="20210322 17:44:13.644" endtime="20210322 17:44:13.645"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 17:44:13.646" level="INFO">202</msg>
<status status="PASS" starttime="20210322 17:44:13.645" endtime="20210322 17:44:13.646"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:44:13.648" level="INFO">${response} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20210322 17:44:13.648" endtime="20210322 17:44:13.648"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${entry_external_key}</var>
</assign>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:13.650" endtime="20210322 17:44:13.651"></status>
</kw>
<msg timestamp="20210322 17:44:13.651" level="INFO">${entry_external_key} = 9587486f9ef94b73bbbc7818f6e0809b</msg>
<status status="PASS" starttime="20210322 17:44:13.648" endtime="20210322 17:44:13.651"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${entry_external_key}</arg>
</arguments>
<msg timestamp="20210322 17:44:13.652" level="INFO">${entry_external_key} = 9587486f9ef94b73bbbc7818f6e0809b</msg>
<status status="PASS" starttime="20210322 17:44:13.651" endtime="20210322 17:44:13.652"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["key"]["value"]}</arg>
</arguments>
<assign>
<var>${entry_key_value}</var>
</assign>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["key"]["value"]}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:13.653" endtime="20210322 17:44:13.654"></status>
</kw>
<msg timestamp="20210322 17:44:13.654" level="INFO">${entry_key_value} = umoreira@ig.com.br</msg>
<status status="PASS" starttime="20210322 17:44:13.652" endtime="20210322 17:44:13.654"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${entry_key_value}</arg>
</arguments>
<msg timestamp="20210322 17:44:13.655" level="INFO">${entry_key_value} = umoreira@ig.com.br</msg>
<status status="PASS" starttime="20210322 17:44:13.654" endtime="20210322 17:44:13.655"></status>
</kw>
<status status="PASS" starttime="20210322 17:44:12.954" endtime="20210322 17:44:13.655"></status>
</kw>
<kw name="buscar chave pix" library="pix_dict_get_entry">
<arguments>
<arg>holder_external_key=${holder_external_key}</arg>
<arg>account_external_key=${account_external_key}</arg>
<arg>entry_external_key=${entry_external_key}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 17:44:13.657" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 17:44:13.657" endtime="20210322 17:44:13.659"></status>
</kw>
<status status="PASS" starttime="20210322 17:44:13.656" endtime="20210322 17:44:13.659"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries/${entry_external_key}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:44:13.659" level="INFO">GET Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/1f4d5e11c3d849be9db3db613dbc918c/accounts/8b6ee7075f4c4f06aaef1f086c4da181/entries/9587486f9ef94b73bbbc7818f6e0809b, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 17:44:14.264" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 17:44:13.659" endtime="20210322 17:44:14.264"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:44:14.265" level="INFO">{'id': '9587486f9ef94b73bbbc7818f6e0809b', 'status': 'waiting_ownership_verification', 'created_at': '2021-03-22T05:44:14.830', 'updated_at': '2021-03-22T05:44:14.830', 'key': {'value': 'umoreira@ig.com.br', 'type': 'email'}, 'account': {'id': '8b6ee7075f4c4f06aaef1f086c4da181', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': '1f4d5e11c3d849be9db3db613dbc918c', 'owner': {'name': 'Holder de teste', 'national_registration': '16943508784', 'type': 'individual'}, 'routing_number': '001', 'number': '8312994216', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}, 'resource': 'pix.entry'}</msg>
<status status="PASS" starttime="20210322 17:44:14.264" endtime="20210322 17:44:14.265"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:44:14.265" level="INFO">46391e59bf74b17f</msg>
<status status="PASS" starttime="20210322 17:44:14.265" endtime="20210322 17:44:14.265"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 17:44:14.266" level="INFO">200</msg>
<status status="PASS" starttime="20210322 17:44:14.265" endtime="20210322 17:44:14.266"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:44:14.266" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 17:44:14.266" endtime="20210322 17:44:14.266"></status>
</kw>
<status status="PASS" starttime="20210322 17:44:13.656" endtime="20210322 17:44:14.266"></status>
</kw>
<kw name="validar busca da chave pix" library="asserts">
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 17:44:14.267" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:44:14.267" endtime="20210322 17:44:14.268"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar status da chave</arg>
</arguments>
<msg timestamp="20210322 17:44:14.268" level="INFO">Validar status da chave</msg>
<status status="PASS" starttime="20210322 17:44:14.268" endtime="20210322 17:44:14.268"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${type}' == 'evp'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["status"]}</arg>
<arg>active</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'phone'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["status"]}</arg>
<arg>waiting_ownership_verification</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'email'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["status"]}</arg>
<arg>waiting_ownership_verification</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'national_registration'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["status"]}</arg>
<arg>active</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["status"]}</arg>
<arg>waiting_ownership_verification</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:14.269" endtime="20210322 17:44:14.270"></status>
</kw>
<status status="PASS" starttime="20210322 17:44:14.268" endtime="20210322 17:44:14.270"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando Tipo da chave PIX</arg>
</arguments>
<msg timestamp="20210322 17:44:14.270" level="INFO">Validando Tipo da chave PIX</msg>
<status status="PASS" starttime="20210322 17:44:14.270" endtime="20210322 17:44:14.270"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${type}' == 'evp'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["type"]}</arg>
<arg>${type}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'phone'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["type"]}</arg>
<arg>${type}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'email'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["type"]}</arg>
<arg>${type}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'national_registration'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["type"]}</arg>
<arg>${type}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["key"]["type"]}</arg>
<arg>${type}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:14.271" endtime="20210322 17:44:14.271"></status>
</kw>
<status status="PASS" starttime="20210322 17:44:14.270" endtime="20210322 17:44:14.271"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando Valor da chave PIX</arg>
</arguments>
<msg timestamp="20210322 17:44:14.272" level="INFO">Validando Valor da chave PIX</msg>
<status status="PASS" starttime="20210322 17:44:14.272" endtime="20210322 17:44:14.272"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${type}' == 'evp'</arg>
<arg>Should Not Be Empty</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'phone'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${phone_pix}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'email'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${email_pix}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'national_registration'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${national_registration}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${email_pix}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:14.272" endtime="20210322 17:44:14.273"></status>
</kw>
<status status="PASS" starttime="20210322 17:44:14.272" endtime="20210322 17:44:14.273"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando dados da conta</arg>
</arguments>
<msg timestamp="20210322 17:44:14.273" level="INFO">Validando dados da conta</msg>
<status status="PASS" starttime="20210322 17:44:14.273" endtime="20210322 17:44:14.273"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["id"]}</arg>
<arg>${account_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:14.273" endtime="20210322 17:44:14.274"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["marketplace"]}</arg>
<arg>${marketplace_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:14.274" endtime="20210322 17:44:14.274"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["holder"]}</arg>
<arg>${holder_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:14.275" endtime="20210322 17:44:14.275"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["number"]}</arg>
<arg>${account_number}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:14.275" endtime="20210322 17:44:14.275"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["routing_number"]}</arg>
<arg>${account_routing_number}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:14.275" endtime="20210322 17:44:14.276"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["type"]}</arg>
<arg>CACC</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:14.276" endtime="20210322 17:44:14.276"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar Proprietário da Account Owner</arg>
</arguments>
<msg timestamp="20210322 17:44:14.276" level="INFO">Validar Proprietário da Account Owner</msg>
<status status="PASS" starttime="20210322 17:44:14.276" endtime="20210322 17:44:14.277"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${holder_type}' == 'individual'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["account"]["owner"]["name"]}</arg>
<arg>${holder_name}</arg>
<arg>ELSE IF</arg>
<arg>'${holder_type}' == 'business'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["account"]["owner"]["name"]}</arg>
<arg>${legal_name}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["account"]["owner"]["name"]}</arg>
<arg>${holder_name}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:14.277" endtime="20210322 17:44:14.277"></status>
</kw>
<status status="PASS" starttime="20210322 17:44:14.277" endtime="20210322 17:44:14.277"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar national_registration da Account Owner</arg>
</arguments>
<msg timestamp="20210322 17:44:14.278" level="INFO">Validar national_registration da Account Owner</msg>
<status status="PASS" starttime="20210322 17:44:14.278" endtime="20210322 17:44:14.278"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${holder_type}' == 'individual'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["account"]["owner"]["national_registration"]}</arg>
<arg>${national_registration}</arg>
<arg>ELSE IF</arg>
<arg>'${holder_type}' == 'business'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["account"]["owner"]["national_registration"]}</arg>
<arg>${national_registration}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["account"]["owner"]["national_registration"]}</arg>
<arg>${national_registration}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:14.278" endtime="20210322 17:44:14.279"></status>
</kw>
<status status="PASS" starttime="20210322 17:44:14.278" endtime="20210322 17:44:14.279"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar Holder Type do Account Owner</arg>
</arguments>
<msg timestamp="20210322 17:44:14.279" level="INFO">Validar Holder Type do Account Owner</msg>
<status status="PASS" starttime="20210322 17:44:14.279" endtime="20210322 17:44:14.279"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${holder_type}' == 'individual'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["account"]["owner"]["type"]}</arg>
<arg>${holder_type}</arg>
<arg>ELSE IF</arg>
<arg>'${holder_type}' == 'business'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["account"]["owner"]["type"]}</arg>
<arg>${holder_type}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["account"]["owner"]["type"]}</arg>
<arg>${holder_type}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:14.280" endtime="20210322 17:44:14.280"></status>
</kw>
<status status="PASS" starttime="20210322 17:44:14.279" endtime="20210322 17:44:14.280"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar PSP</arg>
</arguments>
<msg timestamp="20210322 17:44:14.280" level="INFO">Validar PSP</msg>
<status status="PASS" starttime="20210322 17:44:14.280" endtime="20210322 17:44:14.280"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["psp"]["code"]}</arg>
<arg>19468242</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:14.281" endtime="20210322 17:44:14.281"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["psp"]["name"]}</arg>
<arg>Zoop Tecnologia e Meios de Pagamento S.A.</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:14.281" endtime="20210322 17:44:14.281"></status>
</kw>
<status status="PASS" starttime="20210322 17:44:14.267" endtime="20210322 17:44:14.281"></status>
</kw>
<kw name="validar chave pix" library="asserts">
<arguments>
<arg>key_status=waiting_ownership_verification</arg>
<arg>key_type=${type}</arg>
<arg>key_value=${value}</arg>
<arg>account_external_key=${account_external_key}</arg>
<arg>marketplace_external_key=${marketplace_external_key}</arg>
<arg>holder_external_key=${holder_external_key}</arg>
<arg>account_number=${account_number}</arg>
<arg>account_routing_number=${account_routing_number}</arg>
<arg>account_type=CACC</arg>
<arg>owner_key_name=${holder_name}</arg>
<arg>national_registration=${national_registration}</arg>
<arg>holder_type=${holder_type}</arg>
<arg>psp_code=19468242</arg>
<arg>psp_name=Zoop Tecnologia e Meios de Pagamento S.A.</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar status da chave</arg>
</arguments>
<msg timestamp="20210322 17:44:14.283" level="INFO">Validar status da chave</msg>
<status status="PASS" starttime="20210322 17:44:14.282" endtime="20210322 17:44:14.283"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["status"]}</arg>
<arg>${key_status}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:14.283" endtime="20210322 17:44:14.283"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando Tipo da chave PIX</arg>
</arguments>
<msg timestamp="20210322 17:44:14.283" level="INFO">Validando Tipo da chave PIX</msg>
<status status="PASS" starttime="20210322 17:44:14.283" endtime="20210322 17:44:14.283"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["key"]["type"]}</arg>
<arg>${key_type}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:14.284" endtime="20210322 17:44:14.284"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando Valor da chave PIX</arg>
</arguments>
<msg timestamp="20210322 17:44:14.285" level="INFO">Validando Valor da chave PIX</msg>
<status status="PASS" starttime="20210322 17:44:14.284" endtime="20210322 17:44:14.285"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${type}' == 'evp'</arg>
<arg>Should Not Be Empty</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' != 'evp'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${key_value}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${key_value}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:14.285" endtime="20210322 17:44:14.286"></status>
</kw>
<status status="PASS" starttime="20210322 17:44:14.285" endtime="20210322 17:44:14.286"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando dados da conta</arg>
</arguments>
<msg timestamp="20210322 17:44:14.286" level="INFO">Validando dados da conta</msg>
<status status="PASS" starttime="20210322 17:44:14.286" endtime="20210322 17:44:14.286"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["id"]}</arg>
<arg>${account_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:14.286" endtime="20210322 17:44:14.287"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["marketplace"]}</arg>
<arg>${marketplace_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:14.287" endtime="20210322 17:44:14.287"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["holder"]}</arg>
<arg>${holder_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:14.287" endtime="20210322 17:44:14.288"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["number"]}</arg>
<arg>${account_number}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:14.289" endtime="20210322 17:44:14.289"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["routing_number"]}</arg>
<arg>${account_routing_number}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:14.289" endtime="20210322 17:44:14.289"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["type"]}</arg>
<arg>${account_type}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:14.289" endtime="20210322 17:44:14.289"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar Proprietário da Account Owner</arg>
</arguments>
<msg timestamp="20210322 17:44:14.290" level="INFO">Validar Proprietário da Account Owner</msg>
<status status="PASS" starttime="20210322 17:44:14.290" endtime="20210322 17:44:14.290"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["account"]["owner"]["name"]}</arg>
<arg>${owner_key_name}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:14.290" endtime="20210322 17:44:14.290"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar national_registration da Account Owner</arg>
</arguments>
<msg timestamp="20210322 17:44:14.291" level="INFO">Validar national_registration da Account Owner</msg>
<status status="PASS" starttime="20210322 17:44:14.291" endtime="20210322 17:44:14.291"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["account"]["owner"]["national_registration"]}</arg>
<arg>${national_registration}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:14.291" endtime="20210322 17:44:14.291"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar Holder Type do Account Owner</arg>
</arguments>
<msg timestamp="20210322 17:44:14.291" level="INFO">Validar Holder Type do Account Owner</msg>
<status status="PASS" starttime="20210322 17:44:14.291" endtime="20210322 17:44:14.291"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["account"]["owner"]["type"]}</arg>
<arg>${holder_type}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:14.292" endtime="20210322 17:44:14.292"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar PSP</arg>
</arguments>
<msg timestamp="20210322 17:44:14.292" level="INFO">Validar PSP</msg>
<status status="PASS" starttime="20210322 17:44:14.292" endtime="20210322 17:44:14.292"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["psp"]["code"]}</arg>
<arg>${psp_code}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:14.292" endtime="20210322 17:44:14.293"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["psp"]["name"]}</arg>
<arg>${psp_name}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:14.293" endtime="20210322 17:44:14.293"></status>
</kw>
<status status="PASS" starttime="20210322 17:44:14.281" endtime="20210322 17:44:14.293"></status>
</kw>
<doc>Fluxo Básico</doc>
<tags>
<tag>regression_test</tag>
<tag>smoke_test</tag>
</tags>
<status status="PASS" starttime="20210322 17:44:09.584" endtime="20210322 17:44:14.293" critical="yes"></status>
</test>
<test id="s1-s1-s1-t4" name="Cenário: Buscar chave de endereçamento do tipo CPF">
<kw name="criar holder individual ativo" library="accreditation_create_holder_active">
<kw name="conectar accreditation" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accreditation</arg>
<arg>url=${accreditation_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 17:44:14.295" level="INFO">Creating Session using : alias=accreditation, url=https://banking-accreditation-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 17:44:14.294" endtime="20210322 17:44:14.295"></status>
</kw>
<status status="PASS" starttime="20210322 17:44:14.294" endtime="20210322 17:44:14.295"></status>
</kw>
<kw name="Cpf" library="FakerLibrary">
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 17:44:14.296" level="INFO">${national_registration} = 321.789.645-91</msg>
<status status="PASS" starttime="20210322 17:44:14.296" endtime="20210322 17:44:14.296"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${national_registration}</arg>
<arg>.</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 17:44:14.297" level="INFO">${national_registration} = 321789645-91</msg>
<status status="PASS" starttime="20210322 17:44:14.296" endtime="20210322 17:44:14.297"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${national_registration}</arg>
<arg>-</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 17:44:14.298" level="INFO">${national_registration} = 32178964591</msg>
<status status="PASS" starttime="20210322 17:44:14.297" endtime="20210322 17:44:14.298"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${national_registration}</arg>
</arguments>
<msg timestamp="20210322 17:44:14.298" level="INFO">${national_registration} = 32178964591</msg>
<status status="PASS" starttime="20210322 17:44:14.298" endtime="20210322 17:44:14.299"></status>
</kw>
<kw name="Rg" library="FakerLibrary">
<doc>Brazilian RG, return plain numbers.
Check:  https://www.ngmatematica.com/2014/02/como-determinar-o-digito-verificador-do.html</doc>
<assign>
<var>${identity_card}</var>
</assign>
<msg timestamp="20210322 17:44:14.299" level="INFO">${identity_card} = 710438254</msg>
<status status="PASS" starttime="20210322 17:44:14.299" endtime="20210322 17:44:14.299"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${identity_card}</arg>
</arguments>
<msg timestamp="20210322 17:44:14.300" level="INFO">${identity_card} = 710438254</msg>
<status status="PASS" starttime="20210322 17:44:14.299" endtime="20210322 17:44:14.300"></status>
</kw>
<kw name="criar holder individual" library="accreditation_post_holder_individual">
<arguments>
<arg>holder_type=individual</arg>
<arg>holder_name=${holder_name}</arg>
<arg>email=${email}</arg>
<arg>national_registration=${national_registration}</arg>
<arg>revenue=${revenue}</arg>
<arg>birthday=${birthday}</arg>
<arg>mothers_name=${mothers_name}</arg>
<arg>identity_card=${identity_card}</arg>
<arg>pep=false</arg>
<arg>cbo=${cbo}</arg>
</arguments>
<kw name="conectar accreditation" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accreditation</arg>
<arg>url=${accreditation_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 17:44:14.302" level="INFO">Creating Session using : alias=accreditation, url=https://banking-accreditation-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 17:44:14.301" endtime="20210322 17:44:14.302"></status>
</kw>
<status status="PASS" starttime="20210322 17:44:14.301" endtime="20210322 17:44:14.302"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_type}</arg>
</arguments>
<msg timestamp="20210322 17:44:14.303" level="INFO">${holder_type} = individual</msg>
<status status="PASS" starttime="20210322 17:44:14.302" endtime="20210322 17:44:14.303"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_name}</arg>
</arguments>
<msg timestamp="20210322 17:44:14.303" level="INFO">${holder_name} = Holder de teste</msg>
<status status="PASS" starttime="20210322 17:44:14.303" endtime="20210322 17:44:14.303"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:44:14.303" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 17:44:14.303" endtime="20210322 17:44:14.304"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "${holder_type}",</arg>
<arg>"name": "${holder_name}",</arg>
<arg>"email": "${email}",</arg>
<arg>"national_registration": "${national_registration}",</arg>
<arg>"revenue": ${revenue},</arg>
<arg>"birthday": "${birthday}",</arg>
<arg>"mothers_name": "${mothers_name}",</arg>
<arg>"identity_card": "${identity_card}",</arg>
<arg>"pep": false,</arg>
<arg>"cbo": ${cbo}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 17:44:14.304" level="INFO">${body} = { "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "32178964591", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder",...</msg>
<status status="PASS" starttime="20210322 17:44:14.304" endtime="20210322 17:44:14.304"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:44:14.305" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "32178964591", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder", "identity_card": "710438254", "pep": false, "cbo": 821450 } 
json=None</msg>
<msg timestamp="20210322 17:44:14.947" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:44:14.304" endtime="20210322 17:44:14.947"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:44:14.947" level="INFO">{'id': '3fc93fe306bb4995aaaa14b95cadc112', 'name': 'Holder de teste', 'revenue': 5500.0, 'email': 'teste@teste.com.br', 'status': 'waiting_info_and_documents', 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'marketplace_name': 'Marketplace de Teste', 'created_at': '2021-03-22T17:44:16.1353', 'updated_at': '2021-03-22T17:44:16.135302', 'type': 'individual', 'national_registration': '32178964591', 'birthday': '1988-04-23', 'mothers_name': 'Mãe do Holder', 'identity_card': '710438254', 'pep': False, 'cbo': '821450', '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/3fc93fe306bb4995aaaa14b95cadc112', 'type': 'GET'}, 'phones': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/3fc93fe306bb4995aaaa14b95cadc112/phones', 'type': 'GET'}, 'addresses': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/3fc93fe306bb4995aaaa14b95cadc112/addresses', 'type': 'GET'}, 'documents': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/3fc93fe306bb4995aaaa14b95cadc112/documents', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 17:44:14.947" endtime="20210322 17:44:14.948"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:44:14.948" level="INFO">03a61db75aff0a5e</msg>
<status status="PASS" starttime="20210322 17:44:14.948" endtime="20210322 17:44:14.948"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${body}</arg>
</arguments>
<msg timestamp="20210322 17:44:14.948" level="INFO">{ "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "32178964591", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder", "identity_card": "710438254", "pep": false, "cbo": 821450 }</msg>
<status status="PASS" starttime="20210322 17:44:14.948" endtime="20210322 17:44:14.948"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:44:14.949" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:44:14.949" endtime="20210322 17:44:14.949"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${holder_external_key}</var>
</assign>
<msg timestamp="20210322 17:44:14.949" level="INFO">${holder_external_key} = 3fc93fe306bb4995aaaa14b95cadc112</msg>
<status status="PASS" starttime="20210322 17:44:14.949" endtime="20210322 17:44:14.950"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_external_key}</arg>
</arguments>
<msg timestamp="20210322 17:44:14.950" level="INFO">${holder_external_key} = 3fc93fe306bb4995aaaa14b95cadc112</msg>
<status status="PASS" starttime="20210322 17:44:14.950" endtime="20210322 17:44:14.950"></status>
</kw>
<status status="PASS" starttime="20210322 17:44:14.300" endtime="20210322 17:44:14.950"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_name}</arg>
</arguments>
<msg timestamp="20210322 17:44:14.951" level="INFO">${holder_name} = Holder de teste</msg>
<status status="PASS" starttime="20210322 17:44:14.950" endtime="20210322 17:44:14.951"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 17:44:14.951" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:44:14.951" endtime="20210322 17:44:14.952"></status>
</kw>
<kw name="criar holder phone" library="accreditation_post_holder_phone">
<arguments>
<arg>21</arg>
<arg>51</arg>
<arg>996221236</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:44:14.954" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 17:44:14.953" endtime="20210322 17:44:14.954"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"area_code": "${phone_area_code}",</arg>
<arg>"country_code": "${phone_country_code}",</arg>
<arg>"number": "${phone_number}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 17:44:14.954" level="INFO">${body} = { "area_code": "21", "country_code": "51", "number": "996221236" }</msg>
<status status="PASS" starttime="20210322 17:44:14.954" endtime="20210322 17:44:14.955"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/phones</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:44:14.955" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/3fc93fe306bb4995aaaa14b95cadc112/phones, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "area_code": "21", "country_code": "51", "number": "996221236" } 
json=None</msg>
<msg timestamp="20210322 17:44:15.177" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:44:14.955" endtime="20210322 17:44:15.177"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:44:15.177" level="INFO">{'id': '68966421e6124b7b80c3399212e2edbf', 'area_code': '21', 'country_code': '51', 'number': '996221236', 'main': True, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/3fc93fe306bb4995aaaa14b95cadc112/phones/68966421e6124b7b80c3399212e2edbf', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/3fc93fe306bb4995aaaa14b95cadc112', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 17:44:15.177" endtime="20210322 17:44:15.177"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:44:15.178" level="INFO">ec59d3e141bca60e</msg>
<status status="PASS" starttime="20210322 17:44:15.178" endtime="20210322 17:44:15.178"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:44:15.178" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:44:15.178" endtime="20210322 17:44:15.178"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${phone_external_key}</var>
</assign>
<msg timestamp="20210322 17:44:15.179" level="INFO">${phone_external_key} = 68966421e6124b7b80c3399212e2edbf</msg>
<status status="PASS" starttime="20210322 17:44:15.178" endtime="20210322 17:44:15.179"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${phone_external_key}</arg>
</arguments>
<msg timestamp="20210322 17:44:15.179" level="INFO">${phone_external_key} = 68966421e6124b7b80c3399212e2edbf</msg>
<status status="PASS" starttime="20210322 17:44:15.179" endtime="20210322 17:44:15.179"></status>
</kw>
<status status="PASS" starttime="20210322 17:44:14.952" endtime="20210322 17:44:15.179"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 17:44:15.180" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:44:15.179" endtime="20210322 17:44:15.180"></status>
</kw>
<kw name="criar holder address" library="accreditation_post_holder_address">
<arguments>
<arg>Rio de Janeiro</arg>
<arg>Rio de Janeiro</arg>
<arg>Brasil</arg>
<arg>Bairro de Testes</arg>
<arg>Rua de Testes</arg>
<arg>90</arg>
<arg>apto 200</arg>
<arg>21550987</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:44:15.181" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 17:44:15.181" endtime="20210322 17:44:15.181"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"city": "${city}",</arg>
<arg>"state": "${state}",</arg>
<arg>"country": "${country}",</arg>
<arg>"neighborhood": "${neighborhood}",</arg>
<arg>"street": "${street}",</arg>
<arg>"number": "${number}",</arg>
<arg>"complement": "${complement}",</arg>
<arg>"postal_code": "${postal_code}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 17:44:15.181" level="INFO">${body} = { "city": "Rio de Janeiro", "state": "Rio de Janeiro", "country": "Brasil", "neighborhood": "Bairro de Testes", "street": "Rua de Testes", "number": "90", "complement": "apto 200", "postal_code": "215...</msg>
<status status="PASS" starttime="20210322 17:44:15.181" endtime="20210322 17:44:15.181"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/addresses</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:44:15.182" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/3fc93fe306bb4995aaaa14b95cadc112/addresses, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "city": "Rio de Janeiro", "state": "Rio de Janeiro", "country": "Brasil", "neighborhood": "Bairro de Testes", "street": "Rua de Testes", "number": "90", "complement": "apto 200", "postal_code": "21550987" } 
json=None</msg>
<msg timestamp="20210322 17:44:15.398" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:44:15.182" endtime="20210322 17:44:15.398"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:44:15.399" level="INFO">{'id': '185155c8f2e84792975b30eb7a670de2', 'street': 'Rua de Testes', 'number': '90', 'city': 'Rio de Janeiro', 'complement': 'apto 200', 'state': 'Rio de Janeiro', 'neighborhood': 'Bairro de Testes', 'postal_code': '21550987', 'country': 'Brasil', 'main': True, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/3fc93fe306bb4995aaaa14b95cadc112/addresses/185155c8f2e84792975b30eb7a670de2', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/3fc93fe306bb4995aaaa14b95cadc112', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 17:44:15.399" endtime="20210322 17:44:15.399"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:44:15.400" level="INFO">dc48643b411b4644</msg>
<status status="PASS" starttime="20210322 17:44:15.400" endtime="20210322 17:44:15.400"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:44:15.401" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:44:15.400" endtime="20210322 17:44:15.401"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${address_external_key}</var>
</assign>
<msg timestamp="20210322 17:44:15.402" level="INFO">${address_external_key} = 185155c8f2e84792975b30eb7a670de2</msg>
<status status="PASS" starttime="20210322 17:44:15.401" endtime="20210322 17:44:15.402"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${address_external_key}</arg>
</arguments>
<msg timestamp="20210322 17:44:15.402" level="INFO">${address_external_key} = 185155c8f2e84792975b30eb7a670de2</msg>
<status status="PASS" starttime="20210322 17:44:15.402" endtime="20210322 17:44:15.403"></status>
</kw>
<status status="PASS" starttime="20210322 17:44:15.180" endtime="20210322 17:44:15.403"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 17:44:15.403" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:44:15.403" endtime="20210322 17:44:15.403"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>SELFIE</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:44:15.404" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 17:44:15.404" endtime="20210322 17:44:15.404"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 17:44:15.404" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 17:44:15.406" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 17:44:15.404" endtime="20210322 17:44:15.406"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:44:15.406" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/3fc93fe306bb4995aaaa14b95cadc112/documents?type=SELFIE, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 17:44:15.694" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:44:15.406" endtime="20210322 17:44:15.694"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:44:15.695" level="INFO">{'id': 'fc96c78796934ef19fc15c8f572340e1', 'document_type': 'selfie', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/3fc93fe306bb4995aaaa14b95cadc112/documents/fc96c78796934ef19fc15c8f572340e1', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/3fc93fe306bb4995aaaa14b95cadc112', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/3fc93fe306bb4995aaaa14b95cadc112/documents/fc96c78796934ef19fc15c8f572340e1/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 17:44:15.694" endtime="20210322 17:44:15.695"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:44:15.696" level="INFO">11d6a7359e95c461</msg>
<status status="PASS" starttime="20210322 17:44:15.696" endtime="20210322 17:44:15.696"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:44:15.697" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:44:15.697" endtime="20210322 17:44:15.698"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 17:44:15.699" level="INFO">${document_external_key} = fc96c78796934ef19fc15c8f572340e1</msg>
<status status="PASS" starttime="20210322 17:44:15.698" endtime="20210322 17:44:15.699"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 17:44:15.700" level="INFO">${document_external_key} = fc96c78796934ef19fc15c8f572340e1</msg>
<status status="PASS" starttime="20210322 17:44:15.700" endtime="20210322 17:44:15.700"></status>
</kw>
<status status="PASS" starttime="20210322 17:44:15.403" endtime="20210322 17:44:15.701"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 17:44:15.702" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:44:15.701" endtime="20210322 17:44:15.702"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>RG_FRENTE</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:44:15.704" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 17:44:15.703" endtime="20210322 17:44:15.704"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 17:44:15.704" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 17:44:15.706" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 17:44:15.704" endtime="20210322 17:44:15.706"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:44:15.707" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/3fc93fe306bb4995aaaa14b95cadc112/documents?type=RG_FRENTE, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 17:44:15.991" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:44:15.707" endtime="20210322 17:44:15.992"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:44:15.994" level="INFO">{'id': 'bcddb3c635444ecdb426e3b49cdf9b13', 'document_type': 'rg_frente', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/3fc93fe306bb4995aaaa14b95cadc112/documents/bcddb3c635444ecdb426e3b49cdf9b13', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/3fc93fe306bb4995aaaa14b95cadc112', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/3fc93fe306bb4995aaaa14b95cadc112/documents/bcddb3c635444ecdb426e3b49cdf9b13/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 17:44:15.992" endtime="20210322 17:44:15.994"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:44:15.996" level="INFO">8bc1984ec7e7c101</msg>
<status status="PASS" starttime="20210322 17:44:15.995" endtime="20210322 17:44:15.996"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:44:15.999" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:44:15.997" endtime="20210322 17:44:15.999"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 17:44:16.002" level="INFO">${document_external_key} = bcddb3c635444ecdb426e3b49cdf9b13</msg>
<status status="PASS" starttime="20210322 17:44:16.000" endtime="20210322 17:44:16.002"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 17:44:16.004" level="INFO">${document_external_key} = bcddb3c635444ecdb426e3b49cdf9b13</msg>
<status status="PASS" starttime="20210322 17:44:16.003" endtime="20210322 17:44:16.004"></status>
</kw>
<status status="PASS" starttime="20210322 17:44:15.702" endtime="20210322 17:44:16.004"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 17:44:16.005" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:44:16.005" endtime="20210322 17:44:16.006"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>RG_VERSO</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:44:16.008" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 17:44:16.008" endtime="20210322 17:44:16.008"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 17:44:16.009" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 17:44:16.011" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 17:44:16.009" endtime="20210322 17:44:16.012"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:44:16.013" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/3fc93fe306bb4995aaaa14b95cadc112/documents?type=RG_VERSO, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 17:44:16.279" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:44:16.012" endtime="20210322 17:44:16.279"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:44:16.282" level="INFO">{'id': '9abcdf926d0b42938c8204d37c12752b', 'document_type': 'rg_verso', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/3fc93fe306bb4995aaaa14b95cadc112/documents/9abcdf926d0b42938c8204d37c12752b', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/3fc93fe306bb4995aaaa14b95cadc112', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/3fc93fe306bb4995aaaa14b95cadc112/documents/9abcdf926d0b42938c8204d37c12752b/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 17:44:16.281" endtime="20210322 17:44:16.282"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:44:16.285" level="INFO">ad1526c853e45628</msg>
<status status="PASS" starttime="20210322 17:44:16.284" endtime="20210322 17:44:16.285"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:44:16.287" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:44:16.286" endtime="20210322 17:44:16.287"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 17:44:16.290" level="INFO">${document_external_key} = 9abcdf926d0b42938c8204d37c12752b</msg>
<status status="PASS" starttime="20210322 17:44:16.288" endtime="20210322 17:44:16.290"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 17:44:16.292" level="INFO">${document_external_key} = 9abcdf926d0b42938c8204d37c12752b</msg>
<status status="PASS" starttime="20210322 17:44:16.291" endtime="20210322 17:44:16.292"></status>
</kw>
<status status="PASS" starttime="20210322 17:44:16.006" endtime="20210322 17:44:16.293"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 17:44:16.294" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:44:16.293" endtime="20210322 17:44:16.294"></status>
</kw>
<kw name="solicitar aprovação do holder" library="accreditation_request_approval">
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:44:16.296" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 17:44:16.296" endtime="20210322 17:44:16.296"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/approval</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:44:16.298" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/3fc93fe306bb4995aaaa14b95cadc112/approval, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data=None 
json=None</msg>
<msg timestamp="20210322 17:44:16.635" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 17:44:16.297" endtime="20210322 17:44:16.635"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:44:16.637" level="INFO">{'message': 'Approval request accepted successfully. Processing analysis'}</msg>
<status status="PASS" starttime="20210322 17:44:16.636" endtime="20210322 17:44:16.637"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:44:16.639" level="INFO">674714cef904c074</msg>
<status status="PASS" starttime="20210322 17:44:16.638" endtime="20210322 17:44:16.639"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:44:16.641" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 17:44:16.640" endtime="20210322 17:44:16.642"></status>
</kw>
<status status="PASS" starttime="20210322 17:44:16.295" endtime="20210322 17:44:16.642"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 17:44:16.644" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:44:16.643" endtime="20210322 17:44:16.645"></status>
</kw>
<kw name="recebendo notificação de aprovação" library="accreditation_risk_notification">
<kw name="Uuid 4" library="FakerLibrary">
<doc>Generates a random UUID4 string.
:param cast_to: Specify what type the UUID should be cast to. Default is `str`
:type cast_to: callable</doc>
<assign>
<var>${assessment_id}</var>
</assign>
<msg timestamp="20210322 17:44:16.648" level="INFO">${assessment_id} = 043fec36-dbeb-4cbd-8602-2795a933e19c</msg>
<status status="PASS" starttime="20210322 17:44:16.647" endtime="20210322 17:44:16.648"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>year</arg>
</arguments>
<assign>
<var>${year}</var>
</assign>
<msg timestamp="20210322 17:44:16.650" level="INFO">${year} = 2021</msg>
<status status="PASS" starttime="20210322 17:44:16.649" endtime="20210322 17:44:16.650"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>month</arg>
</arguments>
<assign>
<var>${month}</var>
</assign>
<msg timestamp="20210322 17:44:16.652" level="INFO">${month} = 03</msg>
<status status="PASS" starttime="20210322 17:44:16.651" endtime="20210322 17:44:16.652"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>day</arg>
</arguments>
<assign>
<var>${day}</var>
</assign>
<msg timestamp="20210322 17:44:16.653" level="INFO">${day} = 22</msg>
<status status="PASS" starttime="20210322 17:44:16.652" endtime="20210322 17:44:16.653"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:44:16.654" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 17:44:16.653" endtime="20210322 17:44:16.654"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "risk.assessment.result",</arg>
<arg>"resource": "business.holder",</arg>
<arg>"created_at": "${year}-${month}-${day} 15:28:56.747Z",</arg>
<arg>"marketplace_id": "${marketplace_external_key}",</arg>
<arg>"object": {</arg>
<arg>"result": "APPROVED",</arg>
<arg>"holder_id": "${holder_external_key}",</arg>
<arg>"applicant_id": "${application_external_key}",</arg>
<arg>"assessment_id": "${assessment_id}"</arg>
<arg>}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 17:44:16.656" level="INFO">${body} = { "type": "risk.assessment.result", "resource": "business.holder", "created_at": "2021-03-22 15:28:56.747Z", "marketplace_id": "f71a8951368a4cc085cf7875ff44e61c", "object": { "result": "APPROVED", "ho...</msg>
<status status="PASS" starttime="20210322 17:44:16.655" endtime="20210322 17:44:16.656"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/admin/internal_operation/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/registration/approval</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:44:16.658" level="INFO">POST Request using : uri=/admin/internal_operation/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/3fc93fe306bb4995aaaa14b95cadc112/registration/approval, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "risk.assessment.result", "resource": "business.holder", "created_at": "2021-03-22 15:28:56.747Z", "marketplace_id": "f71a8951368a4cc085cf7875ff44e61c", "object": { "result": "APPROVED", "holder_id": "3fc93fe306bb4995aaaa14b95cadc112", "applicant_id": "bcc25a6751c14b52af1340d40dba78c5", "assessment_id": "043fec36-dbeb-4cbd-8602-2795a933e19c" } } 
json=None</msg>
<msg timestamp="20210322 17:44:16.875" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 17:44:16.657" endtime="20210322 17:44:16.875"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:44:16.875" level="INFO">{'message': 'Holder approved successfully'}</msg>
<status status="PASS" starttime="20210322 17:44:16.875" endtime="20210322 17:44:16.875"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:44:16.876" level="INFO">c434ddde6eb783a1</msg>
<status status="PASS" starttime="20210322 17:44:16.876" endtime="20210322 17:44:16.876"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:44:16.877" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 17:44:16.877" endtime="20210322 17:44:16.877"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 17:44:16.878" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:44:16.878" endtime="20210322 17:44:16.878"></status>
</kw>
<status status="PASS" starttime="20210322 17:44:16.645" endtime="20210322 17:44:16.879"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 17:44:16.879" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:44:16.879" endtime="20210322 17:44:16.879"></status>
</kw>
<kw name="buscar account por holder" library="accounts_get_accounts_by_holder">
<kw name="conectar accounts" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accounts</arg>
<arg>url=${account_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 17:44:16.881" level="INFO">Creating Session using : alias=accounts, url=https://banking-accounts-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 17:44:16.881" endtime="20210322 17:44:16.881"></status>
</kw>
<status status="PASS" starttime="20210322 17:44:16.880" endtime="20210322 17:44:16.881"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accounts</arg>
<arg>/marketplaces/${marketplace_external_key}/holders/${holder_external_key}/accounts</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:44:16.882" level="INFO">GET Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/holders/3fc93fe306bb4995aaaa14b95cadc112/accounts, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 17:44:17.568" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 17:44:16.882" endtime="20210322 17:44:17.568"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:44:17.571" level="INFO">{'items': [{'id': '8bbab34638564e7f8671145d1a743d94', 'holder': '3fc93fe306bb4995aaaa14b95cadc112', 'balance': '0.00', 'currency': 'BRL', 'routing_number': '001', 'number': '7619612986', 'status': 'active', 'metadata': {}, 'created_at': '2021-03-22T20:44:18.054333', 'updated_at': '2021-03-22T20:44:18.054333', 'primary': True, 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'uri': '/v2/marketplaces/f71a8951368a4cc085cf7875ff44e61c/accounts/8bbab34638564e7f8671145d1a743d94', 'resource': 'payment_account'}], 'has_more': False, 'limit': 100, 'total_pages': 1, 'page': 1, 'offset': 0, 'total': '1', 'query_count': '1'}</msg>
<status status="PASS" starttime="20210322 17:44:17.569" endtime="20210322 17:44:17.571"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:44:17.573" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 17:44:17.572" endtime="20210322 17:44:17.573"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["id"]}</arg>
</arguments>
<assign>
<var>${account_external_key}</var>
</assign>
<msg timestamp="20210322 17:44:17.576" level="INFO">${account_external_key} = 8bbab34638564e7f8671145d1a743d94</msg>
<status status="PASS" starttime="20210322 17:44:17.574" endtime="20210322 17:44:17.576"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_external_key}</arg>
</arguments>
<msg timestamp="20210322 17:44:17.579" level="INFO">${account_external_key} = 8bbab34638564e7f8671145d1a743d94</msg>
<status status="PASS" starttime="20210322 17:44:17.577" endtime="20210322 17:44:17.579"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["number"]}</arg>
</arguments>
<assign>
<var>${account_number}</var>
</assign>
<msg timestamp="20210322 17:44:17.582" level="INFO">${account_number} = 7619612986</msg>
<status status="PASS" starttime="20210322 17:44:17.580" endtime="20210322 17:44:17.582"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_number}</arg>
</arguments>
<msg timestamp="20210322 17:44:17.583" level="INFO">${account_number} = 7619612986</msg>
<status status="PASS" starttime="20210322 17:44:17.583" endtime="20210322 17:44:17.584"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["routing_number"]}</arg>
</arguments>
<assign>
<var>${account_routing_number}</var>
</assign>
<msg timestamp="20210322 17:44:17.585" level="INFO">${account_routing_number} = 001</msg>
<status status="PASS" starttime="20210322 17:44:17.584" endtime="20210322 17:44:17.586"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_routing_number}</arg>
</arguments>
<msg timestamp="20210322 17:44:17.587" level="INFO">${account_routing_number} = 001</msg>
<status status="PASS" starttime="20210322 17:44:17.586" endtime="20210322 17:44:17.587"></status>
</kw>
<status status="PASS" starttime="20210322 17:44:16.880" endtime="20210322 17:44:17.588"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 17:44:17.589" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:44:17.588" endtime="20210322 17:44:17.589"></status>
</kw>
<status status="PASS" starttime="20210322 17:44:14.294" endtime="20210322 17:44:17.589"></status>
</kw>
<kw name="criar chave pix" library="pix_dict_create_entry">
<arguments>
<arg>type=national_registration</arg>
<arg>value=${EMPTY}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 17:44:17.592" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 17:44:17.592" endtime="20210322 17:44:17.593"></status>
</kw>
<status status="PASS" starttime="20210322 17:44:17.591" endtime="20210322 17:44:17.593"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${type}</arg>
</arguments>
<msg timestamp="20210322 17:44:17.594" level="INFO">${type} = national_registration</msg>
<status status="PASS" starttime="20210322 17:44:17.594" endtime="20210322 17:44:17.594"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210322 17:44:17.595" level="INFO">${value} = </msg>
<status status="PASS" starttime="20210322 17:44:17.595" endtime="20210322 17:44:17.595"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:44:17.596" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 17:44:17.596" endtime="20210322 17:44:17.596"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "${type}",</arg>
<arg>"value": "${value}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 17:44:17.597" level="INFO">${body} = { "type": "national_registration", "value": "" }</msg>
<status status="PASS" starttime="20210322 17:44:17.597" endtime="20210322 17:44:17.598"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:44:17.599" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/3fc93fe306bb4995aaaa14b95cadc112/accounts/8bbab34638564e7f8671145d1a743d94/entries, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "national_registration", "value": "" } 
json=None</msg>
<msg timestamp="20210322 17:44:19.312" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:44:17.598" endtime="20210322 17:44:19.312"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:44:19.313" level="INFO">{'id': '45bf6dd76b624d338f5ed20b74750aca', 'status': 'active', 'created_at': '2021-03-22T05:44:19.451', 'updated_at': '2021-03-22T05:44:19.451', 'key': {'value': '32178964591', 'type': 'national_registration'}, 'account': {'id': '8bbab34638564e7f8671145d1a743d94', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': '3fc93fe306bb4995aaaa14b95cadc112', 'owner': {'name': 'Holder de teste', 'national_registration': '32178964591', 'type': 'individual'}, 'routing_number': '001', 'number': '7619612986', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}, 'resource': 'pix.entry'}</msg>
<status status="PASS" starttime="20210322 17:44:19.312" endtime="20210322 17:44:19.313"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:44:19.314" level="INFO">53b53061d0fd16cd</msg>
<status status="PASS" starttime="20210322 17:44:19.313" endtime="20210322 17:44:19.314"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 17:44:19.315" level="INFO">201</msg>
<status status="PASS" starttime="20210322 17:44:19.314" endtime="20210322 17:44:19.315"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:44:19.316" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:44:19.316" endtime="20210322 17:44:19.316"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${entry_external_key}</var>
</assign>
<msg timestamp="20210322 17:44:19.318" level="INFO">${entry_external_key} = 45bf6dd76b624d338f5ed20b74750aca</msg>
<status status="PASS" starttime="20210322 17:44:19.317" endtime="20210322 17:44:19.318"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${entry_external_key}</arg>
</arguments>
<msg timestamp="20210322 17:44:19.318" level="INFO">${entry_external_key} = 45bf6dd76b624d338f5ed20b74750aca</msg>
<status status="PASS" starttime="20210322 17:44:19.318" endtime="20210322 17:44:19.319"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["key"]["value"]}</arg>
</arguments>
<assign>
<var>${entry_key_value}</var>
</assign>
<msg timestamp="20210322 17:44:19.320" level="INFO">${entry_key_value} = 32178964591</msg>
<status status="PASS" starttime="20210322 17:44:19.319" endtime="20210322 17:44:19.320"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${entry_key_value}</arg>
</arguments>
<msg timestamp="20210322 17:44:19.321" level="INFO">${entry_key_value} = 32178964591</msg>
<status status="PASS" starttime="20210322 17:44:19.320" endtime="20210322 17:44:19.321"></status>
</kw>
<status status="PASS" starttime="20210322 17:44:17.590" endtime="20210322 17:44:19.321"></status>
</kw>
<kw name="buscar chave pix" library="pix_dict_get_entry">
<arguments>
<arg>holder_external_key=${holder_external_key}</arg>
<arg>account_external_key=${account_external_key}</arg>
<arg>entry_external_key=${entry_external_key}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 17:44:19.323" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 17:44:19.322" endtime="20210322 17:44:19.323"></status>
</kw>
<status status="PASS" starttime="20210322 17:44:19.322" endtime="20210322 17:44:19.323"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries/${entry_external_key}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:44:19.324" level="INFO">GET Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/3fc93fe306bb4995aaaa14b95cadc112/accounts/8bbab34638564e7f8671145d1a743d94/entries/45bf6dd76b624d338f5ed20b74750aca, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 17:44:19.936" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 17:44:19.324" endtime="20210322 17:44:19.936"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:44:19.939" level="INFO">{'id': '45bf6dd76b624d338f5ed20b74750aca', 'status': 'active', 'created_at': '2021-03-22T05:44:19.451', 'updated_at': '2021-03-22T05:44:19.451', 'key': {'value': '32178964591', 'type': 'national_registration'}, 'account': {'id': '8bbab34638564e7f8671145d1a743d94', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': '3fc93fe306bb4995aaaa14b95cadc112', 'owner': {'name': 'Holder de teste', 'national_registration': '32178964591', 'type': 'individual'}, 'routing_number': '001', 'number': '7619612986', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}, 'resource': 'pix.entry'}</msg>
<status status="PASS" starttime="20210322 17:44:19.937" endtime="20210322 17:44:19.939"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:44:19.941" level="INFO">a7a74d83e3e9ddc5</msg>
<status status="PASS" starttime="20210322 17:44:19.940" endtime="20210322 17:44:19.941"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 17:44:19.943" level="INFO">200</msg>
<status status="PASS" starttime="20210322 17:44:19.942" endtime="20210322 17:44:19.944"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:44:19.946" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 17:44:19.945" endtime="20210322 17:44:19.946"></status>
</kw>
<status status="PASS" starttime="20210322 17:44:19.321" endtime="20210322 17:44:19.946"></status>
</kw>
<kw name="validar busca da chave pix" library="asserts">
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 17:44:19.948" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:44:19.948" endtime="20210322 17:44:19.949"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar status da chave</arg>
</arguments>
<msg timestamp="20210322 17:44:19.950" level="INFO">Validar status da chave</msg>
<status status="PASS" starttime="20210322 17:44:19.949" endtime="20210322 17:44:19.950"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${type}' == 'evp'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["status"]}</arg>
<arg>active</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'phone'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["status"]}</arg>
<arg>waiting_ownership_verification</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'email'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["status"]}</arg>
<arg>waiting_ownership_verification</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'national_registration'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["status"]}</arg>
<arg>active</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["status"]}</arg>
<arg>active</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:19.952" endtime="20210322 17:44:19.952"></status>
</kw>
<status status="PASS" starttime="20210322 17:44:19.950" endtime="20210322 17:44:19.953"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando Tipo da chave PIX</arg>
</arguments>
<msg timestamp="20210322 17:44:19.953" level="INFO">Validando Tipo da chave PIX</msg>
<status status="PASS" starttime="20210322 17:44:19.953" endtime="20210322 17:44:19.954"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${type}' == 'evp'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["type"]}</arg>
<arg>${type}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'phone'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["type"]}</arg>
<arg>${type}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'email'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["type"]}</arg>
<arg>${type}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'national_registration'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["type"]}</arg>
<arg>${type}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["key"]["type"]}</arg>
<arg>${type}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:19.955" endtime="20210322 17:44:19.956"></status>
</kw>
<status status="PASS" starttime="20210322 17:44:19.954" endtime="20210322 17:44:19.956"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando Valor da chave PIX</arg>
</arguments>
<msg timestamp="20210322 17:44:19.957" level="INFO">Validando Valor da chave PIX</msg>
<status status="PASS" starttime="20210322 17:44:19.956" endtime="20210322 17:44:19.957"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${type}' == 'evp'</arg>
<arg>Should Not Be Empty</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'phone'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${phone_pix}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'email'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${email_pix}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'national_registration'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${national_registration}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${national_registration}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:19.958" endtime="20210322 17:44:19.959"></status>
</kw>
<status status="PASS" starttime="20210322 17:44:19.957" endtime="20210322 17:44:19.959"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando dados da conta</arg>
</arguments>
<msg timestamp="20210322 17:44:19.960" level="INFO">Validando dados da conta</msg>
<status status="PASS" starttime="20210322 17:44:19.959" endtime="20210322 17:44:19.960"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["id"]}</arg>
<arg>${account_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:19.960" endtime="20210322 17:44:19.961"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["marketplace"]}</arg>
<arg>${marketplace_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:19.961" endtime="20210322 17:44:19.962"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["holder"]}</arg>
<arg>${holder_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:19.962" endtime="20210322 17:44:19.962"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["number"]}</arg>
<arg>${account_number}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:19.963" endtime="20210322 17:44:19.963"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["routing_number"]}</arg>
<arg>${account_routing_number}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:19.963" endtime="20210322 17:44:19.964"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["type"]}</arg>
<arg>CACC</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:19.965" endtime="20210322 17:44:19.965"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar Proprietário da Account Owner</arg>
</arguments>
<msg timestamp="20210322 17:44:19.965" level="INFO">Validar Proprietário da Account Owner</msg>
<status status="PASS" starttime="20210322 17:44:19.965" endtime="20210322 17:44:19.965"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${holder_type}' == 'individual'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["account"]["owner"]["name"]}</arg>
<arg>${holder_name}</arg>
<arg>ELSE IF</arg>
<arg>'${holder_type}' == 'business'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["account"]["owner"]["name"]}</arg>
<arg>${legal_name}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["account"]["owner"]["name"]}</arg>
<arg>${holder_name}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:19.967" endtime="20210322 17:44:19.967"></status>
</kw>
<status status="PASS" starttime="20210322 17:44:19.966" endtime="20210322 17:44:19.967"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar national_registration da Account Owner</arg>
</arguments>
<msg timestamp="20210322 17:44:19.968" level="INFO">Validar national_registration da Account Owner</msg>
<status status="PASS" starttime="20210322 17:44:19.968" endtime="20210322 17:44:19.968"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${holder_type}' == 'individual'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["account"]["owner"]["national_registration"]}</arg>
<arg>${national_registration}</arg>
<arg>ELSE IF</arg>
<arg>'${holder_type}' == 'business'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["account"]["owner"]["national_registration"]}</arg>
<arg>${national_registration}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["account"]["owner"]["national_registration"]}</arg>
<arg>${national_registration}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:19.969" endtime="20210322 17:44:19.969"></status>
</kw>
<status status="PASS" starttime="20210322 17:44:19.968" endtime="20210322 17:44:19.970"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar Holder Type do Account Owner</arg>
</arguments>
<msg timestamp="20210322 17:44:19.970" level="INFO">Validar Holder Type do Account Owner</msg>
<status status="PASS" starttime="20210322 17:44:19.970" endtime="20210322 17:44:19.970"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${holder_type}' == 'individual'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["account"]["owner"]["type"]}</arg>
<arg>${holder_type}</arg>
<arg>ELSE IF</arg>
<arg>'${holder_type}' == 'business'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["account"]["owner"]["type"]}</arg>
<arg>${holder_type}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["account"]["owner"]["type"]}</arg>
<arg>${holder_type}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:19.971" endtime="20210322 17:44:19.971"></status>
</kw>
<status status="PASS" starttime="20210322 17:44:19.970" endtime="20210322 17:44:19.971"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar PSP</arg>
</arguments>
<msg timestamp="20210322 17:44:19.971" level="INFO">Validar PSP</msg>
<status status="PASS" starttime="20210322 17:44:19.971" endtime="20210322 17:44:19.971"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["psp"]["code"]}</arg>
<arg>19468242</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:19.972" endtime="20210322 17:44:19.972"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["psp"]["name"]}</arg>
<arg>Zoop Tecnologia e Meios de Pagamento S.A.</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:19.972" endtime="20210322 17:44:19.973"></status>
</kw>
<status status="PASS" starttime="20210322 17:44:19.947" endtime="20210322 17:44:19.973"></status>
</kw>
<kw name="validar chave pix" library="asserts">
<arguments>
<arg>key_status=active</arg>
<arg>key_type=${type}</arg>
<arg>key_value=${national_registration}</arg>
<arg>account_external_key=${account_external_key}</arg>
<arg>marketplace_external_key=${marketplace_external_key}</arg>
<arg>holder_external_key=${holder_external_key}</arg>
<arg>account_number=${account_number}</arg>
<arg>account_routing_number=${account_routing_number}</arg>
<arg>account_type=CACC</arg>
<arg>owner_key_name=${holder_name}</arg>
<arg>national_registration=${national_registration}</arg>
<arg>holder_type=${holder_type}</arg>
<arg>psp_code=19468242</arg>
<arg>psp_name=Zoop Tecnologia e Meios de Pagamento S.A.</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar status da chave</arg>
</arguments>
<msg timestamp="20210322 17:44:19.974" level="INFO">Validar status da chave</msg>
<status status="PASS" starttime="20210322 17:44:19.974" endtime="20210322 17:44:19.974"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["status"]}</arg>
<arg>${key_status}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:19.975" endtime="20210322 17:44:19.975"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando Tipo da chave PIX</arg>
</arguments>
<msg timestamp="20210322 17:44:19.975" level="INFO">Validando Tipo da chave PIX</msg>
<status status="PASS" starttime="20210322 17:44:19.975" endtime="20210322 17:44:19.976"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["key"]["type"]}</arg>
<arg>${key_type}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:19.976" endtime="20210322 17:44:19.976"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando Valor da chave PIX</arg>
</arguments>
<msg timestamp="20210322 17:44:19.976" level="INFO">Validando Valor da chave PIX</msg>
<status status="PASS" starttime="20210322 17:44:19.976" endtime="20210322 17:44:19.976"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${type}' == 'evp'</arg>
<arg>Should Not Be Empty</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' != 'evp'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${key_value}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${key_value}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:19.977" endtime="20210322 17:44:19.977"></status>
</kw>
<status status="PASS" starttime="20210322 17:44:19.976" endtime="20210322 17:44:19.977"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando dados da conta</arg>
</arguments>
<msg timestamp="20210322 17:44:19.977" level="INFO">Validando dados da conta</msg>
<status status="PASS" starttime="20210322 17:44:19.977" endtime="20210322 17:44:19.977"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["id"]}</arg>
<arg>${account_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:19.978" endtime="20210322 17:44:19.978"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["marketplace"]}</arg>
<arg>${marketplace_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:19.978" endtime="20210322 17:44:19.978"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["holder"]}</arg>
<arg>${holder_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:19.978" endtime="20210322 17:44:19.978"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["number"]}</arg>
<arg>${account_number}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:19.979" endtime="20210322 17:44:19.979"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["routing_number"]}</arg>
<arg>${account_routing_number}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:19.979" endtime="20210322 17:44:19.979"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["type"]}</arg>
<arg>${account_type}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:19.980" endtime="20210322 17:44:19.980"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar Proprietário da Account Owner</arg>
</arguments>
<msg timestamp="20210322 17:44:19.980" level="INFO">Validar Proprietário da Account Owner</msg>
<status status="PASS" starttime="20210322 17:44:19.980" endtime="20210322 17:44:19.980"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["account"]["owner"]["name"]}</arg>
<arg>${owner_key_name}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:19.980" endtime="20210322 17:44:19.982"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar national_registration da Account Owner</arg>
</arguments>
<msg timestamp="20210322 17:44:19.982" level="INFO">Validar national_registration da Account Owner</msg>
<status status="PASS" starttime="20210322 17:44:19.982" endtime="20210322 17:44:19.982"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["account"]["owner"]["national_registration"]}</arg>
<arg>${national_registration}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:19.982" endtime="20210322 17:44:19.983"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar Holder Type do Account Owner</arg>
</arguments>
<msg timestamp="20210322 17:44:19.983" level="INFO">Validar Holder Type do Account Owner</msg>
<status status="PASS" starttime="20210322 17:44:19.983" endtime="20210322 17:44:19.983"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["account"]["owner"]["type"]}</arg>
<arg>${holder_type}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:19.983" endtime="20210322 17:44:19.984"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar PSP</arg>
</arguments>
<msg timestamp="20210322 17:44:19.984" level="INFO">Validar PSP</msg>
<status status="PASS" starttime="20210322 17:44:19.984" endtime="20210322 17:44:19.984"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["psp"]["code"]}</arg>
<arg>${psp_code}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:19.984" endtime="20210322 17:44:19.984"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["psp"]["name"]}</arg>
<arg>${psp_name}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:19.985" endtime="20210322 17:44:19.985"></status>
</kw>
<status status="PASS" starttime="20210322 17:44:19.973" endtime="20210322 17:44:19.985"></status>
</kw>
<doc>Fluxo Básico</doc>
<tags>
<tag>regression_test</tag>
<tag>smoke_test</tag>
</tags>
<status status="PASS" starttime="20210322 17:44:14.293" endtime="20210322 17:44:19.985" critical="yes"></status>
</test>
<test id="s1-s1-s1-t5" name="Cenário: Buscar chave de endereçamento do tipo CNPJ">
<kw name="criar holder business ativo" library="accreditation_create_holder_active">
<kw name="conectar accreditation" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accreditation</arg>
<arg>url=${accreditation_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 17:44:19.987" level="INFO">Creating Session using : alias=accreditation, url=https://banking-accreditation-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 17:44:19.987" endtime="20210322 17:44:19.987"></status>
</kw>
<status status="PASS" starttime="20210322 17:44:19.986" endtime="20210322 17:44:19.987"></status>
</kw>
<kw name="Cnpj" library="FakerLibrary">
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 17:44:19.988" level="INFO">${national_registration} = 81.790.263/0001-43</msg>
<status status="PASS" starttime="20210322 17:44:19.987" endtime="20210322 17:44:19.988"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${national_registration}</arg>
<arg>.</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 17:44:19.988" level="INFO">${national_registration} = 81790263/0001-43</msg>
<status status="PASS" starttime="20210322 17:44:19.988" endtime="20210322 17:44:19.988"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${national_registration}</arg>
<arg>-</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 17:44:19.989" level="INFO">${national_registration} = 81790263/000143</msg>
<status status="PASS" starttime="20210322 17:44:19.988" endtime="20210322 17:44:19.989"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${national_registration}</arg>
<arg>/</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 17:44:19.989" level="INFO">${national_registration} = 81790263000143</msg>
<status status="PASS" starttime="20210322 17:44:19.989" endtime="20210322 17:44:19.989"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${national_registration}</arg>
</arguments>
<msg timestamp="20210322 17:44:19.989" level="INFO">${national_registration} = 81790263000143</msg>
<status status="PASS" starttime="20210322 17:44:19.989" endtime="20210322 17:44:19.990"></status>
</kw>
<kw name="Rg" library="FakerLibrary">
<doc>Brazilian RG, return plain numbers.
Check:  https://www.ngmatematica.com/2014/02/como-determinar-o-digito-verificador-do.html</doc>
<assign>
<var>${identity_card}</var>
</assign>
<msg timestamp="20210322 17:44:19.990" level="INFO">${identity_card} = 481532079</msg>
<status status="PASS" starttime="20210322 17:44:19.990" endtime="20210322 17:44:19.990"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${identity_card}</arg>
</arguments>
<msg timestamp="20210322 17:44:19.990" level="INFO">${identity_card} = 481532079</msg>
<status status="PASS" starttime="20210322 17:44:19.990" endtime="20210322 17:44:19.990"></status>
</kw>
<kw name="criar holder business" library="accreditation_post_holder_business">
<arguments>
<arg>holder_type=business</arg>
<arg>holder_name=${holder_name}</arg>
<arg>email_business=${email_business}</arg>
<arg>national_registration=${national_registration}</arg>
<arg>revenue_business=${revenue_business}</arg>
<arg>cnae=${cnae}</arg>
<arg>legal_name=${legal_name}</arg>
<arg>establishment_format=mei</arg>
<arg>establishment_date=${establishment_date}</arg>
</arguments>
<kw name="conectar accreditation" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accreditation</arg>
<arg>url=${accreditation_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 17:44:19.992" level="INFO">Creating Session using : alias=accreditation, url=https://banking-accreditation-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 17:44:19.991" endtime="20210322 17:44:19.992"></status>
</kw>
<status status="PASS" starttime="20210322 17:44:19.991" endtime="20210322 17:44:19.992"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_type}</arg>
</arguments>
<msg timestamp="20210322 17:44:19.993" level="INFO">${holder_type} = business</msg>
<status status="PASS" starttime="20210322 17:44:19.992" endtime="20210322 17:44:19.993"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_name}</arg>
</arguments>
<msg timestamp="20210322 17:44:19.993" level="INFO">${holder_name} = Holder de teste</msg>
<status status="PASS" starttime="20210322 17:44:19.993" endtime="20210322 17:44:19.993"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${legal_name}</arg>
</arguments>
<msg timestamp="20210322 17:44:19.994" level="INFO">${legal_name} = Nome Legal da Empresa</msg>
<status status="PASS" starttime="20210322 17:44:19.993" endtime="20210322 17:44:19.994"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:44:19.994" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 17:44:19.994" endtime="20210322 17:44:19.994"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "${holder_type}",</arg>
<arg>"name": "${holder_name}",</arg>
<arg>"email": "${email_business}",</arg>
<arg>"national_registration": "${national_registration}",</arg>
<arg>"revenue": ${revenue_business},</arg>
<arg>"cnae": "${cnae}",</arg>
<arg>"legal_name": "${legal_name}",</arg>
<arg>"establishment": {</arg>
<arg>"format":"${establishment_format}",</arg>
<arg>"date":"${establishment_date}"</arg>
<arg>}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 17:44:19.995" level="INFO">${body} = { "type": "business", "name": "Holder de teste", "email": "contato@teste.com.br", "national_registration": "81790263000143", "revenue": 1005500.00, "cnae": "0111301", "legal_name": "Nome Legal da Empr...</msg>
<status status="PASS" starttime="20210322 17:44:19.994" endtime="20210322 17:44:19.995"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:44:19.996" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "business", "name": "Holder de teste", "email": "contato@teste.com.br", "national_registration": "81790263000143", "revenue": 1005500.00, "cnae": "0111301", "legal_name": "Nome Legal da Empresa", "establishment": { "format":"mei", "date":"2012-04-25" } } 
json=None</msg>
<msg timestamp="20210322 17:44:20.673" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:44:19.995" endtime="20210322 17:44:20.673"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:44:20.675" level="INFO">{'id': '5aaa6b85797b45719a5d1ab3e26da31d', 'name': 'Holder de teste', 'revenue': 1005500.0, 'email': 'contato@teste.com.br', 'status': 'waiting_info_and_documents', 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'marketplace_name': 'Marketplace de Teste', 'created_at': '2021-03-22T17:44:21.838461', 'updated_at': '2021-03-22T17:44:21.838463', 'type': 'business', 'national_registration': '81790263000143', 'legal_name': 'Nome Legal da Empresa', 'establishment': {'format': 'mei', 'date': '2012-04-25'}, 'cnae': '0111301', '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/5aaa6b85797b45719a5d1ab3e26da31d', 'type': 'GET'}, 'phones': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/5aaa6b85797b45719a5d1ab3e26da31d/phones', 'type': 'GET'}, 'addresses': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/5aaa6b85797b45719a5d1ab3e26da31d/addresses', 'type': 'GET'}, 'documents': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/5aaa6b85797b45719a5d1ab3e26da31d/documents', 'type': 'GET'}, 'partners': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/5aaa6b85797b45719a5d1ab3e26da31d/partners', 'type': 'GET'}, 'associates': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/5aaa6b85797b45719a5d1ab3e26da31d/associates', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 17:44:20.674" endtime="20210322 17:44:20.675"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:44:20.677" level="INFO">6a8de7b733cc0fc8</msg>
<status status="PASS" starttime="20210322 17:44:20.676" endtime="20210322 17:44:20.677"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${body}</arg>
</arguments>
<msg timestamp="20210322 17:44:20.678" level="INFO">{ "type": "business", "name": "Holder de teste", "email": "contato@teste.com.br", "national_registration": "81790263000143", "revenue": 1005500.00, "cnae": "0111301", "legal_name": "Nome Legal da Empresa", "establishment": { "format":"mei", "date":"2012-04-25" } }</msg>
<status status="PASS" starttime="20210322 17:44:20.677" endtime="20210322 17:44:20.678"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:44:20.679" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:44:20.679" endtime="20210322 17:44:20.679"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${holder_external_key}</var>
</assign>
<msg timestamp="20210322 17:44:20.681" level="INFO">${holder_external_key} = 5aaa6b85797b45719a5d1ab3e26da31d</msg>
<status status="PASS" starttime="20210322 17:44:20.680" endtime="20210322 17:44:20.681"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_external_key}</arg>
</arguments>
<msg timestamp="20210322 17:44:20.682" level="INFO">${holder_external_key} = 5aaa6b85797b45719a5d1ab3e26da31d</msg>
<status status="PASS" starttime="20210322 17:44:20.681" endtime="20210322 17:44:20.682"></status>
</kw>
<status status="PASS" starttime="20210322 17:44:19.991" endtime="20210322 17:44:20.682"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 17:44:20.683" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:44:20.683" endtime="20210322 17:44:20.683"></status>
</kw>
<kw name="criar holder phone" library="accreditation_post_holder_phone">
<arguments>
<arg>21</arg>
<arg>51</arg>
<arg>996221236</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:44:20.685" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 17:44:20.685" endtime="20210322 17:44:20.685"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"area_code": "${phone_area_code}",</arg>
<arg>"country_code": "${phone_country_code}",</arg>
<arg>"number": "${phone_number}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 17:44:20.686" level="INFO">${body} = { "area_code": "21", "country_code": "51", "number": "996221236" }</msg>
<status status="PASS" starttime="20210322 17:44:20.686" endtime="20210322 17:44:20.686"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/phones</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:44:20.687" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/5aaa6b85797b45719a5d1ab3e26da31d/phones, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "area_code": "21", "country_code": "51", "number": "996221236" } 
json=None</msg>
<msg timestamp="20210322 17:44:20.909" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:44:20.687" endtime="20210322 17:44:20.910"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:44:20.911" level="INFO">{'id': '0abcca735e294eb786b2bb39356b56fe', 'area_code': '21', 'country_code': '51', 'number': '996221236', 'main': True, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/5aaa6b85797b45719a5d1ab3e26da31d/phones/0abcca735e294eb786b2bb39356b56fe', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/5aaa6b85797b45719a5d1ab3e26da31d', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 17:44:20.910" endtime="20210322 17:44:20.911"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:44:20.912" level="INFO">1ea4e3226613c452</msg>
<status status="PASS" starttime="20210322 17:44:20.912" endtime="20210322 17:44:20.912"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:44:20.913" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:44:20.913" endtime="20210322 17:44:20.913"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${phone_external_key}</var>
</assign>
<msg timestamp="20210322 17:44:20.915" level="INFO">${phone_external_key} = 0abcca735e294eb786b2bb39356b56fe</msg>
<status status="PASS" starttime="20210322 17:44:20.914" endtime="20210322 17:44:20.915"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${phone_external_key}</arg>
</arguments>
<msg timestamp="20210322 17:44:20.916" level="INFO">${phone_external_key} = 0abcca735e294eb786b2bb39356b56fe</msg>
<status status="PASS" starttime="20210322 17:44:20.916" endtime="20210322 17:44:20.916"></status>
</kw>
<status status="PASS" starttime="20210322 17:44:20.684" endtime="20210322 17:44:20.916"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 17:44:20.917" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:44:20.916" endtime="20210322 17:44:20.917"></status>
</kw>
<kw name="criar holder address" library="accreditation_post_holder_address">
<arguments>
<arg>Rio de Janeiro</arg>
<arg>Rio de Janeiro</arg>
<arg>Brasil</arg>
<arg>Bairro de Testes</arg>
<arg>Rua de Testes</arg>
<arg>90</arg>
<arg>apto 200</arg>
<arg>21550987</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:44:20.919" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 17:44:20.918" endtime="20210322 17:44:20.919"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"city": "${city}",</arg>
<arg>"state": "${state}",</arg>
<arg>"country": "${country}",</arg>
<arg>"neighborhood": "${neighborhood}",</arg>
<arg>"street": "${street}",</arg>
<arg>"number": "${number}",</arg>
<arg>"complement": "${complement}",</arg>
<arg>"postal_code": "${postal_code}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 17:44:20.920" level="INFO">${body} = { "city": "Rio de Janeiro", "state": "Rio de Janeiro", "country": "Brasil", "neighborhood": "Bairro de Testes", "street": "Rua de Testes", "number": "90", "complement": "apto 200", "postal_code": "215...</msg>
<status status="PASS" starttime="20210322 17:44:20.919" endtime="20210322 17:44:20.920"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/addresses</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:44:20.921" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/5aaa6b85797b45719a5d1ab3e26da31d/addresses, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "city": "Rio de Janeiro", "state": "Rio de Janeiro", "country": "Brasil", "neighborhood": "Bairro de Testes", "street": "Rua de Testes", "number": "90", "complement": "apto 200", "postal_code": "21550987" } 
json=None</msg>
<msg timestamp="20210322 17:44:21.153" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:44:20.920" endtime="20210322 17:44:21.153"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:44:21.155" level="INFO">{'id': '1ee79e7e328f4e44923dfaa63d22a817', 'street': 'Rua de Testes', 'number': '90', 'city': 'Rio de Janeiro', 'complement': 'apto 200', 'state': 'Rio de Janeiro', 'neighborhood': 'Bairro de Testes', 'postal_code': '21550987', 'country': 'Brasil', 'main': True, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/5aaa6b85797b45719a5d1ab3e26da31d/addresses/1ee79e7e328f4e44923dfaa63d22a817', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/5aaa6b85797b45719a5d1ab3e26da31d', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 17:44:21.153" endtime="20210322 17:44:21.156"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:44:21.157" level="INFO">9f4c3a2efdc4dae2</msg>
<status status="PASS" starttime="20210322 17:44:21.156" endtime="20210322 17:44:21.157"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:44:21.160" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:44:21.158" endtime="20210322 17:44:21.160"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${address_external_key}</var>
</assign>
<msg timestamp="20210322 17:44:21.161" level="INFO">${address_external_key} = 1ee79e7e328f4e44923dfaa63d22a817</msg>
<status status="PASS" starttime="20210322 17:44:21.160" endtime="20210322 17:44:21.162"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${address_external_key}</arg>
</arguments>
<msg timestamp="20210322 17:44:21.163" level="INFO">${address_external_key} = 1ee79e7e328f4e44923dfaa63d22a817</msg>
<status status="PASS" starttime="20210322 17:44:21.163" endtime="20210322 17:44:21.163"></status>
</kw>
<status status="PASS" starttime="20210322 17:44:20.917" endtime="20210322 17:44:21.164"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 17:44:21.166" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:44:21.164" endtime="20210322 17:44:21.166"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>CCMEI</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:44:21.168" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 17:44:21.167" endtime="20210322 17:44:21.168"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 17:44:21.169" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 17:44:21.171" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 17:44:21.168" endtime="20210322 17:44:21.171"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:44:21.173" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/5aaa6b85797b45719a5d1ab3e26da31d/documents?type=CCMEI, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 17:44:21.524" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:44:21.171" endtime="20210322 17:44:21.524"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:44:21.525" level="INFO">{'id': 'd66eeedeb5434acd9bb2b901f5b7c8b7', 'document_type': 'ccmei', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/5aaa6b85797b45719a5d1ab3e26da31d/documents/d66eeedeb5434acd9bb2b901f5b7c8b7', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/5aaa6b85797b45719a5d1ab3e26da31d', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/5aaa6b85797b45719a5d1ab3e26da31d/documents/d66eeedeb5434acd9bb2b901f5b7c8b7/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 17:44:21.524" endtime="20210322 17:44:21.525"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:44:21.526" level="INFO">5e5b282946238890</msg>
<status status="PASS" starttime="20210322 17:44:21.525" endtime="20210322 17:44:21.526"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:44:21.527" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:44:21.526" endtime="20210322 17:44:21.527"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 17:44:21.528" level="INFO">${document_external_key} = d66eeedeb5434acd9bb2b901f5b7c8b7</msg>
<status status="PASS" starttime="20210322 17:44:21.527" endtime="20210322 17:44:21.528"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 17:44:21.528" level="INFO">${document_external_key} = d66eeedeb5434acd9bb2b901f5b7c8b7</msg>
<status status="PASS" starttime="20210322 17:44:21.528" endtime="20210322 17:44:21.529"></status>
</kw>
<status status="PASS" starttime="20210322 17:44:21.166" endtime="20210322 17:44:21.529"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 17:44:21.529" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:44:21.529" endtime="20210322 17:44:21.530"></status>
</kw>
<kw name="Cpf" library="FakerLibrary">
<assign>
<var>${partner_individual_national_registration}</var>
</assign>
<msg timestamp="20210322 17:44:21.530" level="INFO">${partner_individual_national_registration} = 693.210.485-70</msg>
<status status="PASS" starttime="20210322 17:44:21.530" endtime="20210322 17:44:21.530"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${partner_individual_national_registration}</arg>
<arg>.</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${partner_individual_national_registration}</var>
</assign>
<msg timestamp="20210322 17:44:21.531" level="INFO">${partner_individual_national_registration} = 693210485-70</msg>
<status status="PASS" starttime="20210322 17:44:21.531" endtime="20210322 17:44:21.531"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${partner_individual_national_registration}</arg>
<arg>-</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${partner_individual_national_registration}</var>
</assign>
<msg timestamp="20210322 17:44:21.532" level="INFO">${partner_individual_national_registration} = 69321048570</msg>
<status status="PASS" starttime="20210322 17:44:21.531" endtime="20210322 17:44:21.532"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${partner_individual_national_registration}</arg>
</arguments>
<msg timestamp="20210322 17:44:21.533" level="INFO">${partner_individual_national_registration} = 69321048570</msg>
<status status="PASS" starttime="20210322 17:44:21.532" endtime="20210322 17:44:21.533"></status>
</kw>
<kw name="Rg" library="FakerLibrary">
<doc>Brazilian RG, return plain numbers.
Check:  https://www.ngmatematica.com/2014/02/como-determinar-o-digito-verificador-do.html</doc>
<assign>
<var>${partner_individual_identity_card}</var>
</assign>
<msg timestamp="20210322 17:44:21.533" level="INFO">${partner_individual_identity_card} = 150236876</msg>
<status status="PASS" starttime="20210322 17:44:21.533" endtime="20210322 17:44:21.533"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${partner_individual_identity_card}</arg>
</arguments>
<msg timestamp="20210322 17:44:21.534" level="INFO">${partner_individual_identity_card} = 150236876</msg>
<status status="PASS" starttime="20210322 17:44:21.534" endtime="20210322 17:44:21.534"></status>
</kw>
<kw name="criar partner individual" library="accreditation_post_partner_individual">
<arguments>
<arg>partner_individual_type=individual</arg>
<arg>partner_individual_name=${partner_individual_name}</arg>
<arg>partner_individual_email=${partner_individual_email}</arg>
<arg>partner_individual_national_registration=${partner_individual_national_registration}</arg>
<arg>partner_individual_revenue=${partner_individual_revenue}</arg>
<arg>partner_individual_birthday=${partner_individual_birthday}</arg>
<arg>partner_individual_mothers_name=${partner_individual_mothers_name}</arg>
<arg>partner_individual_identity_card=${partner_individual_identity_card}</arg>
<arg>partner_individual_pep=false</arg>
<arg>partner_individual_percentage=100</arg>
<arg>partner_individual_adm=true</arg>
<arg>partner_individual_cbo=${partner_individual_cbo}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:44:21.536" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 17:44:21.536" endtime="20210322 17:44:21.536"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "${partner_individual_type}",</arg>
<arg>"name": "${partner_individual_name}",</arg>
<arg>"email": "${partner_individual_email}",</arg>
<arg>"national_registration": "${partner_individual_national_registration}",</arg>
<arg>"revenue": ${partner_individual_revenue},</arg>
<arg>"birthday": "${partner_individual_birthday}",</arg>
<arg>"mothers_name": "${partner_individual_mothers_name}",</arg>
<arg>"identity_card": "${partner_individual_identity_card}",</arg>
<arg>"pep": false,</arg>
<arg>"percentage": ${partner_individual_percentage},</arg>
<arg>"adm": ${partner_individual_adm},</arg>
<arg>"cbo": ${partner_individual_cbo}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 17:44:21.537" level="INFO">${body} = { "type": "individual", "name": "Individual Partner de teste", "email": "teste@teste.com.br", "national_registration": "69321048570", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe...</msg>
<status status="PASS" starttime="20210322 17:44:21.536" endtime="20210322 17:44:21.537"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/partners</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:44:21.538" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/5aaa6b85797b45719a5d1ab3e26da31d/partners, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "individual", "name": "Individual Partner de teste", "email": "teste@teste.com.br", "national_registration": "69321048570", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Individual Partner", "identity_card": "150236876", "pep": false, "percentage": 100, "adm": true, "cbo": 821450 } 
json=None</msg>
<msg timestamp="20210322 17:44:21.771" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:44:21.538" endtime="20210322 17:44:21.771"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:44:21.772" level="INFO">{'id': 'df5065cc032c4d7295879222f0c48a02', 'name': 'Individual Partner de teste', 'revenue': 5500.0, 'email': 'teste@teste.com.br', 'created_at': '2021-03-22T17:44:22.906748', 'updated_at': '2021-03-22T17:44:22.906749', 'main': True, 'adm': True, 'percentage': 100.0, 'type': 'individual', 'national_registration': '69321048570', 'birthday': '1988-04-23', 'mothers_name': 'Mãe do Individual Partner', 'identity_card': '150236876', 'pep': False, 'cbo': '821450', '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/5aaa6b85797b45719a5d1ab3e26da31d/partners/df5065cc032c4d7295879222f0c48a02', 'type': 'GET'}, 'phones': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/5aaa6b85797b45719a5d1ab3e26da31d/partners/df5065cc032c4d7295879222f0c48a02/phones', 'type': 'GET'}, 'addresses': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/5aaa6b85797b45719a5d1ab3e26da31d/partners/df5065cc032c4d7295879222f0c48a02/addresses', 'type': 'GET'}, 'documents': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/5aaa6b85797b45719a5d1ab3e26da31d/partners/df5065cc032c4d7295879222f0c48a02/documents', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/5aaa6b85797b45719a5d1ab3e26da31d', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 17:44:21.771" endtime="20210322 17:44:21.772"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:44:21.772" level="INFO">8e7bf5c85f59e46b</msg>
<status status="PASS" starttime="20210322 17:44:21.772" endtime="20210322 17:44:21.773"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:44:21.773" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:44:21.773" endtime="20210322 17:44:21.773"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${partner_external_key}</var>
</assign>
<msg timestamp="20210322 17:44:21.774" level="INFO">${partner_external_key} = df5065cc032c4d7295879222f0c48a02</msg>
<status status="PASS" starttime="20210322 17:44:21.773" endtime="20210322 17:44:21.774"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${partner_external_key}</arg>
</arguments>
<msg timestamp="20210322 17:44:21.775" level="INFO">${partner_external_key} = df5065cc032c4d7295879222f0c48a02</msg>
<status status="PASS" starttime="20210322 17:44:21.775" endtime="20210322 17:44:21.775"></status>
</kw>
<status status="PASS" starttime="20210322 17:44:21.534" endtime="20210322 17:44:21.775"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 17:44:21.776" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:44:21.776" endtime="20210322 17:44:21.776"></status>
</kw>
<kw name="criar partner phone" library="accreditation_post_partner_phone">
<arguments>
<arg>21</arg>
<arg>51</arg>
<arg>996554785</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:44:21.777" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 17:44:21.776" endtime="20210322 17:44:21.777"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"area_code": "${phone_area_code}",</arg>
<arg>"country_code": "${phone_country_code}",</arg>
<arg>"number": "${phone_number}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 17:44:21.777" level="INFO">${body} = { "area_code": "21", "country_code": "51", "number": "996554785" }</msg>
<status status="PASS" starttime="20210322 17:44:21.777" endtime="20210322 17:44:21.777"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/partners/${partner_external_key}/phones/</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:44:21.778" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/5aaa6b85797b45719a5d1ab3e26da31d/partners/df5065cc032c4d7295879222f0c48a02/phones/, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "area_code": "21", "country_code": "51", "number": "996554785" } 
json=None</msg>
<msg timestamp="20210322 17:44:21.999" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:44:21.778" endtime="20210322 17:44:21.999"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:44:22.001" level="INFO">{'id': '9a05b66bc9134a778c735db2e1ccc660', 'area_code': '21', 'country_code': '51', 'number': '996554785', 'main': True, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/5aaa6b85797b45719a5d1ab3e26da31d/partners/df5065cc032c4d7295879222f0c48a02/phones/9a05b66bc9134a778c735db2e1ccc660', 'type': 'GET'}, 'partner': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/5aaa6b85797b45719a5d1ab3e26da31d/partners/df5065cc032c4d7295879222f0c48a02', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/5aaa6b85797b45719a5d1ab3e26da31d', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 17:44:22.000" endtime="20210322 17:44:22.001"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:44:22.001" level="INFO">d0968a093defb843</msg>
<status status="PASS" starttime="20210322 17:44:22.001" endtime="20210322 17:44:22.001"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:44:22.002" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:44:22.002" endtime="20210322 17:44:22.002"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${holder_external_key}</var>
</assign>
<msg timestamp="20210322 17:44:22.003" level="INFO">${holder_external_key} = 9a05b66bc9134a778c735db2e1ccc660</msg>
<status status="PASS" starttime="20210322 17:44:22.002" endtime="20210322 17:44:22.003"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${phone_external_key}</arg>
</arguments>
<msg timestamp="20210322 17:44:22.003" level="INFO">${phone_external_key} = 0abcca735e294eb786b2bb39356b56fe</msg>
<status status="PASS" starttime="20210322 17:44:22.003" endtime="20210322 17:44:22.003"></status>
</kw>
<status status="PASS" starttime="20210322 17:44:21.776" endtime="20210322 17:44:22.004"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 17:44:22.004" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:44:22.004" endtime="20210322 17:44:22.004"></status>
</kw>
<kw name="criar partner address" library="accreditation_post_partner_address">
<arguments>
<arg>Rio de Janeiro</arg>
<arg>Rio de Janeiro</arg>
<arg>Brasil</arg>
<arg>Bairro de Testes</arg>
<arg>Rua de Testes</arg>
<arg>61</arg>
<arg>apto 201</arg>
<arg>21550478</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:44:22.005" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 17:44:22.005" endtime="20210322 17:44:22.005"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"city": "${city}",</arg>
<arg>"state": "${state}",</arg>
<arg>"country": "${country}",</arg>
<arg>"neighborhood": "${neighborhood}",</arg>
<arg>"street": "${street}",</arg>
<arg>"number": "${number}",</arg>
<arg>"complement": "${complement}",</arg>
<arg>"postal_code": "${postal_code}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 17:44:22.007" level="INFO">${body} = { "city": "Rio de Janeiro", "state": "Rio de Janeiro", "country": "Brasil", "neighborhood": "Bairro de Testes", "street": "Rua de Testes", "number": "61", "complement": "apto 201", "postal_code": "215...</msg>
<status status="PASS" starttime="20210322 17:44:22.005" endtime="20210322 17:44:22.007"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/partners/${partner_external_key}/addresses</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:44:22.007" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/5aaa6b85797b45719a5d1ab3e26da31d/partners/df5065cc032c4d7295879222f0c48a02/addresses, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "city": "Rio de Janeiro", "state": "Rio de Janeiro", "country": "Brasil", "neighborhood": "Bairro de Testes", "street": "Rua de Testes", "number": "61", "complement": "apto 201", "postal_code": "21550478" } 
json=None</msg>
<msg timestamp="20210322 17:44:22.226" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:44:22.007" endtime="20210322 17:44:22.226"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:44:22.229" level="INFO">{'id': '48acc1f0ce6f4da2b0abd52b952ccf28', 'street': 'Rua de Testes', 'number': '61', 'city': 'Rio de Janeiro', 'complement': 'apto 201', 'state': 'Rio de Janeiro', 'neighborhood': 'Bairro de Testes', 'postal_code': '21550478', 'country': 'Brasil', 'main': True, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/5aaa6b85797b45719a5d1ab3e26da31d/partners/df5065cc032c4d7295879222f0c48a02/addresses/48acc1f0ce6f4da2b0abd52b952ccf28', 'type': 'GET'}, 'partner': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/5aaa6b85797b45719a5d1ab3e26da31d/partners/df5065cc032c4d7295879222f0c48a02', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/5aaa6b85797b45719a5d1ab3e26da31d', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 17:44:22.228" endtime="20210322 17:44:22.229"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:44:22.232" level="INFO">acbffc3f30f96b0e</msg>
<status status="PASS" starttime="20210322 17:44:22.231" endtime="20210322 17:44:22.232"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:44:22.233" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:44:22.232" endtime="20210322 17:44:22.234"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${address_external_key}</var>
</assign>
<msg timestamp="20210322 17:44:22.237" level="INFO">${address_external_key} = 48acc1f0ce6f4da2b0abd52b952ccf28</msg>
<status status="PASS" starttime="20210322 17:44:22.234" endtime="20210322 17:44:22.237"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${address_external_key}</arg>
</arguments>
<msg timestamp="20210322 17:44:22.237" level="INFO">${address_external_key} = 48acc1f0ce6f4da2b0abd52b952ccf28</msg>
<status status="PASS" starttime="20210322 17:44:22.237" endtime="20210322 17:44:22.237"></status>
</kw>
<status status="PASS" starttime="20210322 17:44:22.004" endtime="20210322 17:44:22.238"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 17:44:22.239" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:44:22.238" endtime="20210322 17:44:22.239"></status>
</kw>
<kw name="criar partner document" library="accreditation_post_partner_document">
<arguments>
<arg>SELFIE</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:44:22.241" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 17:44:22.240" endtime="20210322 17:44:22.241"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 17:44:22.241" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 17:44:22.243" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 17:44:22.241" endtime="20210322 17:44:22.243"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/partners/${partner_externaL_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:44:22.245" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/5aaa6b85797b45719a5d1ab3e26da31d/partners/df5065cc032c4d7295879222f0c48a02/documents?type=SELFIE, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 17:44:22.627" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:44:22.244" endtime="20210322 17:44:22.627"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:44:22.630" level="INFO">{'id': 'ccbee3f9650c4d9193830909fc1a5171', 'document_type': 'selfie', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/5aaa6b85797b45719a5d1ab3e26da31d/partners/df5065cc032c4d7295879222f0c48a02/documents/ccbee3f9650c4d9193830909fc1a5171', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/5aaa6b85797b45719a5d1ab3e26da31d', 'type': 'GET'}, 'partner': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/5aaa6b85797b45719a5d1ab3e26da31d/partners/df5065cc032c4d7295879222f0c48a02', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/5aaa6b85797b45719a5d1ab3e26da31d/partners/df5065cc032c4d7295879222f0c48a02/documents/ccbee3f9650c4d9193830909fc1a5171/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 17:44:22.628" endtime="20210322 17:44:22.630"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:44:22.633" level="INFO">b194b2c6685b1155</msg>
<status status="PASS" starttime="20210322 17:44:22.630" endtime="20210322 17:44:22.633"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:44:22.636" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:44:22.635" endtime="20210322 17:44:22.636"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 17:44:22.637" level="INFO">${document_external_key} = ccbee3f9650c4d9193830909fc1a5171</msg>
<status status="PASS" starttime="20210322 17:44:22.636" endtime="20210322 17:44:22.638"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 17:44:22.639" level="INFO">${document_external_key} = ccbee3f9650c4d9193830909fc1a5171</msg>
<status status="PASS" starttime="20210322 17:44:22.638" endtime="20210322 17:44:22.639"></status>
</kw>
<status status="PASS" starttime="20210322 17:44:22.239" endtime="20210322 17:44:22.639"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 17:44:22.640" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:44:22.639" endtime="20210322 17:44:22.640"></status>
</kw>
<kw name="criar partner document" library="accreditation_post_partner_document">
<arguments>
<arg>RG_FRENTE</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:44:22.641" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 17:44:22.641" endtime="20210322 17:44:22.641"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 17:44:22.642" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 17:44:22.644" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 17:44:22.642" endtime="20210322 17:44:22.644"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/partners/${partner_externaL_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:44:22.645" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/5aaa6b85797b45719a5d1ab3e26da31d/partners/df5065cc032c4d7295879222f0c48a02/documents?type=RG_FRENTE, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 17:44:23.004" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:44:22.644" endtime="20210322 17:44:23.004"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:44:23.005" level="INFO">{'id': 'bd7a198fd8e44197b782b8099cde6103', 'document_type': 'rg_frente', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/5aaa6b85797b45719a5d1ab3e26da31d/partners/df5065cc032c4d7295879222f0c48a02/documents/bd7a198fd8e44197b782b8099cde6103', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/5aaa6b85797b45719a5d1ab3e26da31d', 'type': 'GET'}, 'partner': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/5aaa6b85797b45719a5d1ab3e26da31d/partners/df5065cc032c4d7295879222f0c48a02', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/5aaa6b85797b45719a5d1ab3e26da31d/partners/df5065cc032c4d7295879222f0c48a02/documents/bd7a198fd8e44197b782b8099cde6103/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 17:44:23.004" endtime="20210322 17:44:23.005"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:44:23.005" level="INFO">dac287331493d50f</msg>
<status status="PASS" starttime="20210322 17:44:23.005" endtime="20210322 17:44:23.005"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:44:23.005" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:44:23.005" endtime="20210322 17:44:23.005"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 17:44:23.006" level="INFO">${document_external_key} = bd7a198fd8e44197b782b8099cde6103</msg>
<status status="PASS" starttime="20210322 17:44:23.006" endtime="20210322 17:44:23.006"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 17:44:23.006" level="INFO">${document_external_key} = bd7a198fd8e44197b782b8099cde6103</msg>
<status status="PASS" starttime="20210322 17:44:23.006" endtime="20210322 17:44:23.007"></status>
</kw>
<status status="PASS" starttime="20210322 17:44:22.640" endtime="20210322 17:44:23.007"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 17:44:23.007" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:44:23.007" endtime="20210322 17:44:23.007"></status>
</kw>
<kw name="criar partner document" library="accreditation_post_partner_document">
<arguments>
<arg>RG_VERSO</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:44:23.008" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 17:44:23.008" endtime="20210322 17:44:23.008"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 17:44:23.008" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 17:44:23.009" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 17:44:23.008" endtime="20210322 17:44:23.009"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/partners/${partner_externaL_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:44:23.010" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/5aaa6b85797b45719a5d1ab3e26da31d/partners/df5065cc032c4d7295879222f0c48a02/documents?type=RG_VERSO, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 17:44:23.269" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:44:23.009" endtime="20210322 17:44:23.269"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:44:23.270" level="INFO">{'id': '1dc9e67e31444c6083befbbfa66eafcc', 'document_type': 'rg_verso', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/5aaa6b85797b45719a5d1ab3e26da31d/partners/df5065cc032c4d7295879222f0c48a02/documents/1dc9e67e31444c6083befbbfa66eafcc', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/5aaa6b85797b45719a5d1ab3e26da31d', 'type': 'GET'}, 'partner': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/5aaa6b85797b45719a5d1ab3e26da31d/partners/df5065cc032c4d7295879222f0c48a02', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/5aaa6b85797b45719a5d1ab3e26da31d/partners/df5065cc032c4d7295879222f0c48a02/documents/1dc9e67e31444c6083befbbfa66eafcc/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 17:44:23.269" endtime="20210322 17:44:23.270"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:44:23.271" level="INFO">326b39ee83d9177a</msg>
<status status="PASS" starttime="20210322 17:44:23.271" endtime="20210322 17:44:23.272"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:44:23.273" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:44:23.272" endtime="20210322 17:44:23.273"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 17:44:23.274" level="INFO">${document_external_key} = 1dc9e67e31444c6083befbbfa66eafcc</msg>
<status status="PASS" starttime="20210322 17:44:23.273" endtime="20210322 17:44:23.274"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 17:44:23.275" level="INFO">${document_external_key} = 1dc9e67e31444c6083befbbfa66eafcc</msg>
<status status="PASS" starttime="20210322 17:44:23.275" endtime="20210322 17:44:23.275"></status>
</kw>
<status status="PASS" starttime="20210322 17:44:23.007" endtime="20210322 17:44:23.276"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 17:44:23.277" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:44:23.276" endtime="20210322 17:44:23.277"></status>
</kw>
<kw name="solicitar aprovação do holder" library="accreditation_request_approval">
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:44:23.278" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 17:44:23.278" endtime="20210322 17:44:23.278"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/approval</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:44:23.279" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/5aaa6b85797b45719a5d1ab3e26da31d/approval, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data=None 
json=None</msg>
<msg timestamp="20210322 17:44:23.577" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 17:44:23.279" endtime="20210322 17:44:23.577"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:44:23.577" level="INFO">{'message': 'Approval request accepted successfully. Processing analysis'}</msg>
<status status="PASS" starttime="20210322 17:44:23.577" endtime="20210322 17:44:23.577"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:44:23.578" level="INFO">664eb0a7561203d6</msg>
<status status="PASS" starttime="20210322 17:44:23.578" endtime="20210322 17:44:23.578"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:44:23.578" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 17:44:23.578" endtime="20210322 17:44:23.578"></status>
</kw>
<status status="PASS" starttime="20210322 17:44:23.277" endtime="20210322 17:44:23.579"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 17:44:23.579" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:44:23.579" endtime="20210322 17:44:23.579"></status>
</kw>
<kw name="recebendo notificação de aprovação" library="accreditation_risk_notification">
<kw name="Uuid 4" library="FakerLibrary">
<doc>Generates a random UUID4 string.
:param cast_to: Specify what type the UUID should be cast to. Default is `str`
:type cast_to: callable</doc>
<assign>
<var>${assessment_id}</var>
</assign>
<msg timestamp="20210322 17:44:23.580" level="INFO">${assessment_id} = 00868cda-f501-4dad-83b5-9f43b7faf5b8</msg>
<status status="PASS" starttime="20210322 17:44:23.580" endtime="20210322 17:44:23.580"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>year</arg>
</arguments>
<assign>
<var>${year}</var>
</assign>
<msg timestamp="20210322 17:44:23.581" level="INFO">${year} = 2021</msg>
<status status="PASS" starttime="20210322 17:44:23.580" endtime="20210322 17:44:23.581"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>month</arg>
</arguments>
<assign>
<var>${month}</var>
</assign>
<msg timestamp="20210322 17:44:23.581" level="INFO">${month} = 03</msg>
<status status="PASS" starttime="20210322 17:44:23.581" endtime="20210322 17:44:23.581"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>day</arg>
</arguments>
<assign>
<var>${day}</var>
</assign>
<msg timestamp="20210322 17:44:23.581" level="INFO">${day} = 22</msg>
<status status="PASS" starttime="20210322 17:44:23.581" endtime="20210322 17:44:23.581"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:44:23.582" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 17:44:23.581" endtime="20210322 17:44:23.582"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "risk.assessment.result",</arg>
<arg>"resource": "business.holder",</arg>
<arg>"created_at": "${year}-${month}-${day} 15:28:56.747Z",</arg>
<arg>"marketplace_id": "${marketplace_external_key}",</arg>
<arg>"object": {</arg>
<arg>"result": "APPROVED",</arg>
<arg>"holder_id": "${holder_external_key}",</arg>
<arg>"applicant_id": "${application_external_key}",</arg>
<arg>"assessment_id": "${assessment_id}"</arg>
<arg>}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 17:44:23.582" level="INFO">${body} = { "type": "risk.assessment.result", "resource": "business.holder", "created_at": "2021-03-22 15:28:56.747Z", "marketplace_id": "f71a8951368a4cc085cf7875ff44e61c", "object": { "result": "APPROVED", "ho...</msg>
<status status="PASS" starttime="20210322 17:44:23.582" endtime="20210322 17:44:23.582"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/admin/internal_operation/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/registration/approval</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:44:23.583" level="INFO">POST Request using : uri=/admin/internal_operation/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/5aaa6b85797b45719a5d1ab3e26da31d/registration/approval, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "risk.assessment.result", "resource": "business.holder", "created_at": "2021-03-22 15:28:56.747Z", "marketplace_id": "f71a8951368a4cc085cf7875ff44e61c", "object": { "result": "APPROVED", "holder_id": "5aaa6b85797b45719a5d1ab3e26da31d", "applicant_id": "bcc25a6751c14b52af1340d40dba78c5", "assessment_id": "00868cda-f501-4dad-83b5-9f43b7faf5b8" } } 
json=None</msg>
<msg timestamp="20210322 17:44:23.788" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 17:44:23.583" endtime="20210322 17:44:23.788"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:44:23.789" level="INFO">{'message': 'Holder approved successfully'}</msg>
<status status="PASS" starttime="20210322 17:44:23.789" endtime="20210322 17:44:23.789"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:44:23.789" level="INFO">ea86e01f85c2a47d</msg>
<status status="PASS" starttime="20210322 17:44:23.789" endtime="20210322 17:44:23.789"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:44:23.790" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 17:44:23.790" endtime="20210322 17:44:23.790"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 17:44:23.790" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:44:23.790" endtime="20210322 17:44:23.790"></status>
</kw>
<status status="PASS" starttime="20210322 17:44:23.579" endtime="20210322 17:44:23.791"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 17:44:23.791" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:44:23.791" endtime="20210322 17:44:23.791"></status>
</kw>
<kw name="buscar account por holder" library="accounts_get_accounts_by_holder">
<kw name="conectar accounts" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accounts</arg>
<arg>url=${account_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 17:44:23.792" level="INFO">Creating Session using : alias=accounts, url=https://banking-accounts-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 17:44:23.792" endtime="20210322 17:44:23.792"></status>
</kw>
<status status="PASS" starttime="20210322 17:44:23.791" endtime="20210322 17:44:23.792"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accounts</arg>
<arg>/marketplaces/${marketplace_external_key}/holders/${holder_external_key}/accounts</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:44:23.793" level="INFO">GET Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/holders/5aaa6b85797b45719a5d1ab3e26da31d/accounts, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 17:44:24.407" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 17:44:23.792" endtime="20210322 17:44:24.407"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:44:24.408" level="INFO">{'items': [{'id': '3ea06ec59ba946648129a95297a50597', 'holder': '5aaa6b85797b45719a5d1ab3e26da31d', 'balance': '0.00', 'currency': 'BRL', 'routing_number': '001', 'number': '4024091728', 'status': 'active', 'metadata': {}, 'created_at': '2021-03-22T20:44:24.971974', 'updated_at': '2021-03-22T20:44:24.971974', 'primary': True, 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'uri': '/v2/marketplaces/f71a8951368a4cc085cf7875ff44e61c/accounts/3ea06ec59ba946648129a95297a50597', 'resource': 'payment_account'}], 'has_more': False, 'limit': 100, 'total_pages': 1, 'page': 1, 'offset': 0, 'total': '1', 'query_count': '1'}</msg>
<status status="PASS" starttime="20210322 17:44:24.407" endtime="20210322 17:44:24.408"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:44:24.408" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 17:44:24.408" endtime="20210322 17:44:24.408"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["id"]}</arg>
</arguments>
<assign>
<var>${account_external_key}</var>
</assign>
<msg timestamp="20210322 17:44:24.409" level="INFO">${account_external_key} = 3ea06ec59ba946648129a95297a50597</msg>
<status status="PASS" starttime="20210322 17:44:24.409" endtime="20210322 17:44:24.409"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_external_key}</arg>
</arguments>
<msg timestamp="20210322 17:44:24.409" level="INFO">${account_external_key} = 3ea06ec59ba946648129a95297a50597</msg>
<status status="PASS" starttime="20210322 17:44:24.409" endtime="20210322 17:44:24.410"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["number"]}</arg>
</arguments>
<assign>
<var>${account_number}</var>
</assign>
<msg timestamp="20210322 17:44:24.410" level="INFO">${account_number} = 4024091728</msg>
<status status="PASS" starttime="20210322 17:44:24.410" endtime="20210322 17:44:24.410"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_number}</arg>
</arguments>
<msg timestamp="20210322 17:44:24.411" level="INFO">${account_number} = 4024091728</msg>
<status status="PASS" starttime="20210322 17:44:24.410" endtime="20210322 17:44:24.411"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["routing_number"]}</arg>
</arguments>
<assign>
<var>${account_routing_number}</var>
</assign>
<msg timestamp="20210322 17:44:24.411" level="INFO">${account_routing_number} = 001</msg>
<status status="PASS" starttime="20210322 17:44:24.411" endtime="20210322 17:44:24.411"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_routing_number}</arg>
</arguments>
<msg timestamp="20210322 17:44:24.412" level="INFO">${account_routing_number} = 001</msg>
<status status="PASS" starttime="20210322 17:44:24.412" endtime="20210322 17:44:24.412"></status>
</kw>
<status status="PASS" starttime="20210322 17:44:23.791" endtime="20210322 17:44:24.412"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 17:44:24.413" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:44:24.412" endtime="20210322 17:44:24.413"></status>
</kw>
<status status="PASS" starttime="20210322 17:44:19.986" endtime="20210322 17:44:24.413"></status>
</kw>
<kw name="criar chave pix" library="pix_dict_create_entry">
<arguments>
<arg>type=national_registration</arg>
<arg>value=${EMPTY}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 17:44:24.414" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 17:44:24.414" endtime="20210322 17:44:24.415"></status>
</kw>
<status status="PASS" starttime="20210322 17:44:24.414" endtime="20210322 17:44:24.415"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${type}</arg>
</arguments>
<msg timestamp="20210322 17:44:24.416" level="INFO">${type} = national_registration</msg>
<status status="PASS" starttime="20210322 17:44:24.416" endtime="20210322 17:44:24.416"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210322 17:44:24.416" level="INFO">${value} = </msg>
<status status="PASS" starttime="20210322 17:44:24.416" endtime="20210322 17:44:24.416"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:44:24.416" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 17:44:24.416" endtime="20210322 17:44:24.416"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "${type}",</arg>
<arg>"value": "${value}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 17:44:24.417" level="INFO">${body} = { "type": "national_registration", "value": "" }</msg>
<status status="PASS" starttime="20210322 17:44:24.417" endtime="20210322 17:44:24.417"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:44:24.418" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/5aaa6b85797b45719a5d1ab3e26da31d/accounts/3ea06ec59ba946648129a95297a50597/entries, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "national_registration", "value": "" } 
json=None</msg>
<msg timestamp="20210322 17:44:26.020" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:44:24.418" endtime="20210322 17:44:26.020"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:44:26.021" level="INFO">{'id': '56bfcb51347148ba93d3882cc600a7a1', 'status': 'active', 'created_at': '2021-03-22T05:44:26.270', 'updated_at': '2021-03-22T05:44:26.270', 'key': {'value': '81790263000143', 'type': 'national_registration'}, 'account': {'id': '3ea06ec59ba946648129a95297a50597', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': '5aaa6b85797b45719a5d1ab3e26da31d', 'owner': {'name': 'Nome Legal da Empresa', 'national_registration': '81790263000143', 'type': 'business'}, 'routing_number': '001', 'number': '4024091728', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}, 'resource': 'pix.entry'}</msg>
<status status="PASS" starttime="20210322 17:44:26.020" endtime="20210322 17:44:26.021"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:44:26.021" level="INFO">9c7af2f2e3dc5fdf</msg>
<status status="PASS" starttime="20210322 17:44:26.021" endtime="20210322 17:44:26.021"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 17:44:26.021" level="INFO">201</msg>
<status status="PASS" starttime="20210322 17:44:26.021" endtime="20210322 17:44:26.021"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:44:26.022" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:44:26.022" endtime="20210322 17:44:26.022"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${entry_external_key}</var>
</assign>
<msg timestamp="20210322 17:44:26.022" level="INFO">${entry_external_key} = 56bfcb51347148ba93d3882cc600a7a1</msg>
<status status="PASS" starttime="20210322 17:44:26.022" endtime="20210322 17:44:26.022"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${entry_external_key}</arg>
</arguments>
<msg timestamp="20210322 17:44:26.023" level="INFO">${entry_external_key} = 56bfcb51347148ba93d3882cc600a7a1</msg>
<status status="PASS" starttime="20210322 17:44:26.023" endtime="20210322 17:44:26.023"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["key"]["value"]}</arg>
</arguments>
<assign>
<var>${entry_key_value}</var>
</assign>
<msg timestamp="20210322 17:44:26.023" level="INFO">${entry_key_value} = 81790263000143</msg>
<status status="PASS" starttime="20210322 17:44:26.023" endtime="20210322 17:44:26.023"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${entry_key_value}</arg>
</arguments>
<msg timestamp="20210322 17:44:26.024" level="INFO">${entry_key_value} = 81790263000143</msg>
<status status="PASS" starttime="20210322 17:44:26.024" endtime="20210322 17:44:26.024"></status>
</kw>
<status status="PASS" starttime="20210322 17:44:24.413" endtime="20210322 17:44:26.024"></status>
</kw>
<kw name="buscar chave pix" library="pix_dict_get_entry">
<arguments>
<arg>holder_external_key=${holder_external_key}</arg>
<arg>account_external_key=${account_external_key}</arg>
<arg>entry_external_key=${entry_external_key}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 17:44:26.025" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 17:44:26.025" endtime="20210322 17:44:26.025"></status>
</kw>
<status status="PASS" starttime="20210322 17:44:26.024" endtime="20210322 17:44:26.025"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries/${entry_external_key}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:44:26.026" level="INFO">GET Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/5aaa6b85797b45719a5d1ab3e26da31d/accounts/3ea06ec59ba946648129a95297a50597/entries/56bfcb51347148ba93d3882cc600a7a1, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 17:44:26.646" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 17:44:26.025" endtime="20210322 17:44:26.646"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:44:26.647" level="INFO">{'id': '56bfcb51347148ba93d3882cc600a7a1', 'status': 'active', 'created_at': '2021-03-22T05:44:26.270', 'updated_at': '2021-03-22T05:44:26.270', 'key': {'value': '81790263000143', 'type': 'national_registration'}, 'account': {'id': '3ea06ec59ba946648129a95297a50597', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': '5aaa6b85797b45719a5d1ab3e26da31d', 'owner': {'name': 'Nome Legal da Empresa', 'national_registration': '81790263000143', 'type': 'business'}, 'routing_number': '001', 'number': '4024091728', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}, 'resource': 'pix.entry'}</msg>
<status status="PASS" starttime="20210322 17:44:26.646" endtime="20210322 17:44:26.647"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:44:26.647" level="INFO">57206a87cd1e6c8b</msg>
<status status="PASS" starttime="20210322 17:44:26.647" endtime="20210322 17:44:26.647"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 17:44:26.648" level="INFO">200</msg>
<status status="PASS" starttime="20210322 17:44:26.647" endtime="20210322 17:44:26.648"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:44:26.648" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 17:44:26.648" endtime="20210322 17:44:26.648"></status>
</kw>
<status status="PASS" starttime="20210322 17:44:26.024" endtime="20210322 17:44:26.648"></status>
</kw>
<kw name="validar busca da chave pix" library="asserts">
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 17:44:26.649" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:44:26.649" endtime="20210322 17:44:26.649"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar status da chave</arg>
</arguments>
<msg timestamp="20210322 17:44:26.650" level="INFO">Validar status da chave</msg>
<status status="PASS" starttime="20210322 17:44:26.650" endtime="20210322 17:44:26.650"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${type}' == 'evp'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["status"]}</arg>
<arg>active</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'phone'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["status"]}</arg>
<arg>waiting_ownership_verification</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'email'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["status"]}</arg>
<arg>waiting_ownership_verification</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'national_registration'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["status"]}</arg>
<arg>active</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["status"]}</arg>
<arg>active</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:26.651" endtime="20210322 17:44:26.651"></status>
</kw>
<status status="PASS" starttime="20210322 17:44:26.650" endtime="20210322 17:44:26.651"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando Tipo da chave PIX</arg>
</arguments>
<msg timestamp="20210322 17:44:26.652" level="INFO">Validando Tipo da chave PIX</msg>
<status status="PASS" starttime="20210322 17:44:26.652" endtime="20210322 17:44:26.652"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${type}' == 'evp'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["type"]}</arg>
<arg>${type}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'phone'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["type"]}</arg>
<arg>${type}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'email'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["type"]}</arg>
<arg>${type}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'national_registration'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["type"]}</arg>
<arg>${type}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["key"]["type"]}</arg>
<arg>${type}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:26.653" endtime="20210322 17:44:26.653"></status>
</kw>
<status status="PASS" starttime="20210322 17:44:26.652" endtime="20210322 17:44:26.653"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando Valor da chave PIX</arg>
</arguments>
<msg timestamp="20210322 17:44:26.654" level="INFO">Validando Valor da chave PIX</msg>
<status status="PASS" starttime="20210322 17:44:26.653" endtime="20210322 17:44:26.654"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${type}' == 'evp'</arg>
<arg>Should Not Be Empty</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'phone'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${phone_pix}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'email'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${email_pix}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'national_registration'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${national_registration}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${national_registration}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:26.655" endtime="20210322 17:44:26.655"></status>
</kw>
<status status="PASS" starttime="20210322 17:44:26.654" endtime="20210322 17:44:26.655"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando dados da conta</arg>
</arguments>
<msg timestamp="20210322 17:44:26.656" level="INFO">Validando dados da conta</msg>
<status status="PASS" starttime="20210322 17:44:26.656" endtime="20210322 17:44:26.656"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["id"]}</arg>
<arg>${account_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:26.656" endtime="20210322 17:44:26.656"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["marketplace"]}</arg>
<arg>${marketplace_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:26.656" endtime="20210322 17:44:26.657"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["holder"]}</arg>
<arg>${holder_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:26.657" endtime="20210322 17:44:26.658"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["number"]}</arg>
<arg>${account_number}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:26.658" endtime="20210322 17:44:26.658"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["routing_number"]}</arg>
<arg>${account_routing_number}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:26.659" endtime="20210322 17:44:26.659"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["type"]}</arg>
<arg>CACC</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:26.659" endtime="20210322 17:44:26.659"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar Proprietário da Account Owner</arg>
</arguments>
<msg timestamp="20210322 17:44:26.660" level="INFO">Validar Proprietário da Account Owner</msg>
<status status="PASS" starttime="20210322 17:44:26.660" endtime="20210322 17:44:26.660"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${holder_type}' == 'individual'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["account"]["owner"]["name"]}</arg>
<arg>${holder_name}</arg>
<arg>ELSE IF</arg>
<arg>'${holder_type}' == 'business'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["account"]["owner"]["name"]}</arg>
<arg>${legal_name}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["account"]["owner"]["name"]}</arg>
<arg>${legal_name}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:26.661" endtime="20210322 17:44:26.661"></status>
</kw>
<status status="PASS" starttime="20210322 17:44:26.660" endtime="20210322 17:44:26.661"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar national_registration da Account Owner</arg>
</arguments>
<msg timestamp="20210322 17:44:26.662" level="INFO">Validar national_registration da Account Owner</msg>
<status status="PASS" starttime="20210322 17:44:26.662" endtime="20210322 17:44:26.662"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${holder_type}' == 'individual'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["account"]["owner"]["national_registration"]}</arg>
<arg>${national_registration}</arg>
<arg>ELSE IF</arg>
<arg>'${holder_type}' == 'business'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["account"]["owner"]["national_registration"]}</arg>
<arg>${national_registration}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["account"]["owner"]["national_registration"]}</arg>
<arg>${national_registration}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:26.662" endtime="20210322 17:44:26.663"></status>
</kw>
<status status="PASS" starttime="20210322 17:44:26.662" endtime="20210322 17:44:26.663"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar Holder Type do Account Owner</arg>
</arguments>
<msg timestamp="20210322 17:44:26.663" level="INFO">Validar Holder Type do Account Owner</msg>
<status status="PASS" starttime="20210322 17:44:26.663" endtime="20210322 17:44:26.663"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${holder_type}' == 'individual'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["account"]["owner"]["type"]}</arg>
<arg>${holder_type}</arg>
<arg>ELSE IF</arg>
<arg>'${holder_type}' == 'business'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["account"]["owner"]["type"]}</arg>
<arg>${holder_type}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["account"]["owner"]["type"]}</arg>
<arg>${holder_type}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:26.664" endtime="20210322 17:44:26.664"></status>
</kw>
<status status="PASS" starttime="20210322 17:44:26.663" endtime="20210322 17:44:26.664"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar PSP</arg>
</arguments>
<msg timestamp="20210322 17:44:26.664" level="INFO">Validar PSP</msg>
<status status="PASS" starttime="20210322 17:44:26.664" endtime="20210322 17:44:26.664"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["psp"]["code"]}</arg>
<arg>19468242</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:26.665" endtime="20210322 17:44:26.665"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["psp"]["name"]}</arg>
<arg>Zoop Tecnologia e Meios de Pagamento S.A.</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:26.665" endtime="20210322 17:44:26.665"></status>
</kw>
<status status="PASS" starttime="20210322 17:44:26.649" endtime="20210322 17:44:26.665"></status>
</kw>
<kw name="validar chave pix" library="asserts">
<arguments>
<arg>key_status=active</arg>
<arg>key_type=${type}</arg>
<arg>key_value=${national_registration}</arg>
<arg>account_external_key=${account_external_key}</arg>
<arg>marketplace_external_key=${marketplace_external_key}</arg>
<arg>holder_external_key=${holder_external_key}</arg>
<arg>account_number=${account_number}</arg>
<arg>account_routing_number=${account_routing_number}</arg>
<arg>account_type=CACC</arg>
<arg>owner_key_name=${legal_name}</arg>
<arg>national_registration=${national_registration}</arg>
<arg>holder_type=${holder_type}</arg>
<arg>psp_code=19468242</arg>
<arg>psp_name=Zoop Tecnologia e Meios de Pagamento S.A.</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar status da chave</arg>
</arguments>
<msg timestamp="20210322 17:44:26.667" level="INFO">Validar status da chave</msg>
<status status="PASS" starttime="20210322 17:44:26.666" endtime="20210322 17:44:26.667"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["status"]}</arg>
<arg>${key_status}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:26.667" endtime="20210322 17:44:26.667"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando Tipo da chave PIX</arg>
</arguments>
<msg timestamp="20210322 17:44:26.668" level="INFO">Validando Tipo da chave PIX</msg>
<status status="PASS" starttime="20210322 17:44:26.667" endtime="20210322 17:44:26.668"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["key"]["type"]}</arg>
<arg>${key_type}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:26.668" endtime="20210322 17:44:26.668"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando Valor da chave PIX</arg>
</arguments>
<msg timestamp="20210322 17:44:26.669" level="INFO">Validando Valor da chave PIX</msg>
<status status="PASS" starttime="20210322 17:44:26.669" endtime="20210322 17:44:26.669"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${type}' == 'evp'</arg>
<arg>Should Not Be Empty</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' != 'evp'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${key_value}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${key_value}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:26.670" endtime="20210322 17:44:26.670"></status>
</kw>
<status status="PASS" starttime="20210322 17:44:26.669" endtime="20210322 17:44:26.670"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando dados da conta</arg>
</arguments>
<msg timestamp="20210322 17:44:26.670" level="INFO">Validando dados da conta</msg>
<status status="PASS" starttime="20210322 17:44:26.670" endtime="20210322 17:44:26.670"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["id"]}</arg>
<arg>${account_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:26.671" endtime="20210322 17:44:26.671"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["marketplace"]}</arg>
<arg>${marketplace_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:26.671" endtime="20210322 17:44:26.671"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["holder"]}</arg>
<arg>${holder_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:26.671" endtime="20210322 17:44:26.672"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["number"]}</arg>
<arg>${account_number}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:26.672" endtime="20210322 17:44:26.672"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["routing_number"]}</arg>
<arg>${account_routing_number}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:26.672" endtime="20210322 17:44:26.673"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["type"]}</arg>
<arg>${account_type}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:26.673" endtime="20210322 17:44:26.673"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar Proprietário da Account Owner</arg>
</arguments>
<msg timestamp="20210322 17:44:26.673" level="INFO">Validar Proprietário da Account Owner</msg>
<status status="PASS" starttime="20210322 17:44:26.673" endtime="20210322 17:44:26.673"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["account"]["owner"]["name"]}</arg>
<arg>${owner_key_name}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:26.674" endtime="20210322 17:44:26.674"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar national_registration da Account Owner</arg>
</arguments>
<msg timestamp="20210322 17:44:26.674" level="INFO">Validar national_registration da Account Owner</msg>
<status status="PASS" starttime="20210322 17:44:26.674" endtime="20210322 17:44:26.674"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["account"]["owner"]["national_registration"]}</arg>
<arg>${national_registration}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:26.674" endtime="20210322 17:44:26.675"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar Holder Type do Account Owner</arg>
</arguments>
<msg timestamp="20210322 17:44:26.675" level="INFO">Validar Holder Type do Account Owner</msg>
<status status="PASS" starttime="20210322 17:44:26.675" endtime="20210322 17:44:26.675"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["account"]["owner"]["type"]}</arg>
<arg>${holder_type}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:26.675" endtime="20210322 17:44:26.676"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar PSP</arg>
</arguments>
<msg timestamp="20210322 17:44:26.676" level="INFO">Validar PSP</msg>
<status status="PASS" starttime="20210322 17:44:26.676" endtime="20210322 17:44:26.676"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["psp"]["code"]}</arg>
<arg>${psp_code}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:26.676" endtime="20210322 17:44:26.676"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["psp"]["name"]}</arg>
<arg>${psp_name}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:26.676" endtime="20210322 17:44:26.677"></status>
</kw>
<status status="PASS" starttime="20210322 17:44:26.666" endtime="20210322 17:44:26.677"></status>
</kw>
<doc>Fluxo Básico</doc>
<tags>
<tag>regression_test</tag>
<tag>smoke_test</tag>
</tags>
<status status="PASS" starttime="20210322 17:44:19.985" endtime="20210322 17:44:26.677" critical="yes"></status>
</test>
<doc>Funcionalidade: Buscar Chave de Endereçamento
Eu, como um Holder, portador de uma conta ativa em Banking
Desejo buscar uma chave de endereçamento PIX associada à minha conta</doc>
<status status="PASS" starttime="20210322 17:43:57.612" endtime="20210322 17:44:26.678"></status>
</suite>
<suite id="s1-s1-s2" name="Confirmação de Propriedade" source="C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\tests\pix-dict\diretorio\Confirmação de Propriedade.robot">
<test id="s1-s1-s2-t1" name="Cenário: Confirmar propriedade de chave de endereçamento do tipo Phone">
<kw name="Random Number" library="FakerLibrary">
<doc>Returns a random number with 1 digit (default, when digits==None),
a random number with 0 to given number of digits, or a random number
with given number to given number of digits (when ``fix_len==True``).</doc>
<arguments>
<arg>digits=8</arg>
<arg>fix_len=True</arg>
</arguments>
<assign>
<var>${phone}</var>
</assign>
<msg timestamp="20210322 17:44:27.198" level="INFO">${phone} = 83135760</msg>
<status status="PASS" starttime="20210322 17:44:27.197" endtime="20210322 17:44:27.198"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>+55219${phone}</arg>
</arguments>
<assign>
<var>${phone_pix}</var>
</assign>
<msg timestamp="20210322 17:44:27.198" level="INFO">${phone_pix} = +5521983135760</msg>
<status status="PASS" starttime="20210322 17:44:27.198" endtime="20210322 17:44:27.198"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${phone_pix}</arg>
</arguments>
<msg timestamp="20210322 17:44:27.199" level="INFO">${phone_pix} = +5521983135760</msg>
<status status="PASS" starttime="20210322 17:44:27.199" endtime="20210322 17:44:27.199"></status>
</kw>
<kw name="criar holder individual ativo" library="accreditation_create_holder_active">
<kw name="conectar accreditation" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accreditation</arg>
<arg>url=${accreditation_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 17:44:27.201" level="INFO">Creating Session using : alias=accreditation, url=https://banking-accreditation-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 17:44:27.200" endtime="20210322 17:44:27.201"></status>
</kw>
<status status="PASS" starttime="20210322 17:44:27.200" endtime="20210322 17:44:27.201"></status>
</kw>
<kw name="Cpf" library="FakerLibrary">
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 17:44:27.202" level="INFO">${national_registration} = 967.483.205-00</msg>
<status status="PASS" starttime="20210322 17:44:27.201" endtime="20210322 17:44:27.202"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${national_registration}</arg>
<arg>.</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 17:44:27.203" level="INFO">${national_registration} = 967483205-00</msg>
<status status="PASS" starttime="20210322 17:44:27.202" endtime="20210322 17:44:27.203"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${national_registration}</arg>
<arg>-</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 17:44:27.204" level="INFO">${national_registration} = 96748320500</msg>
<status status="PASS" starttime="20210322 17:44:27.203" endtime="20210322 17:44:27.204"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${national_registration}</arg>
</arguments>
<msg timestamp="20210322 17:44:27.205" level="INFO">${national_registration} = 96748320500</msg>
<status status="PASS" starttime="20210322 17:44:27.204" endtime="20210322 17:44:27.205"></status>
</kw>
<kw name="Rg" library="FakerLibrary">
<doc>Brazilian RG, return plain numbers.
Check:  https://www.ngmatematica.com/2014/02/como-determinar-o-digito-verificador-do.html</doc>
<assign>
<var>${identity_card}</var>
</assign>
<msg timestamp="20210322 17:44:27.205" level="INFO">${identity_card} = 451203860</msg>
<status status="PASS" starttime="20210322 17:44:27.205" endtime="20210322 17:44:27.205"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${identity_card}</arg>
</arguments>
<msg timestamp="20210322 17:44:27.206" level="INFO">${identity_card} = 451203860</msg>
<status status="PASS" starttime="20210322 17:44:27.206" endtime="20210322 17:44:27.206"></status>
</kw>
<kw name="criar holder individual" library="accreditation_post_holder_individual">
<arguments>
<arg>holder_type=individual</arg>
<arg>holder_name=${holder_name}</arg>
<arg>email=${email}</arg>
<arg>national_registration=${national_registration}</arg>
<arg>revenue=${revenue}</arg>
<arg>birthday=${birthday}</arg>
<arg>mothers_name=${mothers_name}</arg>
<arg>identity_card=${identity_card}</arg>
<arg>pep=false</arg>
<arg>cbo=${cbo}</arg>
</arguments>
<kw name="conectar accreditation" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accreditation</arg>
<arg>url=${accreditation_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 17:44:27.208" level="INFO">Creating Session using : alias=accreditation, url=https://banking-accreditation-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 17:44:27.208" endtime="20210322 17:44:27.208"></status>
</kw>
<status status="PASS" starttime="20210322 17:44:27.207" endtime="20210322 17:44:27.208"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_type}</arg>
</arguments>
<msg timestamp="20210322 17:44:27.209" level="INFO">${holder_type} = individual</msg>
<status status="PASS" starttime="20210322 17:44:27.209" endtime="20210322 17:44:27.209"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_name}</arg>
</arguments>
<msg timestamp="20210322 17:44:27.210" level="INFO">${holder_name} = Holder de teste</msg>
<status status="PASS" starttime="20210322 17:44:27.209" endtime="20210322 17:44:27.210"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:44:27.210" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 17:44:27.210" endtime="20210322 17:44:27.210"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "${holder_type}",</arg>
<arg>"name": "${holder_name}",</arg>
<arg>"email": "${email}",</arg>
<arg>"national_registration": "${national_registration}",</arg>
<arg>"revenue": ${revenue},</arg>
<arg>"birthday": "${birthday}",</arg>
<arg>"mothers_name": "${mothers_name}",</arg>
<arg>"identity_card": "${identity_card}",</arg>
<arg>"pep": false,</arg>
<arg>"cbo": ${cbo}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 17:44:27.212" level="INFO">${body} = { "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "96748320500", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder",...</msg>
<status status="PASS" starttime="20210322 17:44:27.211" endtime="20210322 17:44:27.212"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:44:27.213" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "96748320500", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder", "identity_card": "451203860", "pep": false, "cbo": 821450 } 
json=None</msg>
<msg timestamp="20210322 17:44:27.857" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:44:27.212" endtime="20210322 17:44:27.857"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:44:27.858" level="INFO">{'id': 'dac155f6e0d944deacecf9874cb95805', 'name': 'Holder de teste', 'revenue': 5500.0, 'email': 'teste@teste.com.br', 'status': 'waiting_info_and_documents', 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'marketplace_name': 'Marketplace de Teste', 'created_at': '2021-03-22T17:44:29.041176', 'updated_at': '2021-03-22T17:44:29.041178', 'type': 'individual', 'national_registration': '96748320500', 'birthday': '1988-04-23', 'mothers_name': 'Mãe do Holder', 'identity_card': '451203860', 'pep': False, 'cbo': '821450', '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/dac155f6e0d944deacecf9874cb95805', 'type': 'GET'}, 'phones': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/dac155f6e0d944deacecf9874cb95805/phones', 'type': 'GET'}, 'addresses': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/dac155f6e0d944deacecf9874cb95805/addresses', 'type': 'GET'}, 'documents': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/dac155f6e0d944deacecf9874cb95805/documents', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 17:44:27.858" endtime="20210322 17:44:27.858"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:44:27.859" level="INFO">866f5f54155120ee</msg>
<status status="PASS" starttime="20210322 17:44:27.859" endtime="20210322 17:44:27.859"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${body}</arg>
</arguments>
<msg timestamp="20210322 17:44:27.860" level="INFO">{ "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "96748320500", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder", "identity_card": "451203860", "pep": false, "cbo": 821450 }</msg>
<status status="PASS" starttime="20210322 17:44:27.859" endtime="20210322 17:44:27.860"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:44:27.860" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:44:27.860" endtime="20210322 17:44:27.860"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${holder_external_key}</var>
</assign>
<msg timestamp="20210322 17:44:27.861" level="INFO">${holder_external_key} = dac155f6e0d944deacecf9874cb95805</msg>
<status status="PASS" starttime="20210322 17:44:27.861" endtime="20210322 17:44:27.861"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_external_key}</arg>
</arguments>
<msg timestamp="20210322 17:44:27.862" level="INFO">${holder_external_key} = dac155f6e0d944deacecf9874cb95805</msg>
<status status="PASS" starttime="20210322 17:44:27.862" endtime="20210322 17:44:27.862"></status>
</kw>
<status status="PASS" starttime="20210322 17:44:27.206" endtime="20210322 17:44:27.863"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_name}</arg>
</arguments>
<msg timestamp="20210322 17:44:27.863" level="INFO">${holder_name} = Holder de teste</msg>
<status status="PASS" starttime="20210322 17:44:27.863" endtime="20210322 17:44:27.863"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 17:44:27.864" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:44:27.864" endtime="20210322 17:44:27.864"></status>
</kw>
<kw name="criar holder phone" library="accreditation_post_holder_phone">
<arguments>
<arg>21</arg>
<arg>51</arg>
<arg>996221236</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:44:27.865" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 17:44:27.865" endtime="20210322 17:44:27.865"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"area_code": "${phone_area_code}",</arg>
<arg>"country_code": "${phone_country_code}",</arg>
<arg>"number": "${phone_number}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 17:44:27.866" level="INFO">${body} = { "area_code": "21", "country_code": "51", "number": "996221236" }</msg>
<status status="PASS" starttime="20210322 17:44:27.865" endtime="20210322 17:44:27.866"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/phones</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:44:27.867" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/dac155f6e0d944deacecf9874cb95805/phones, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "area_code": "21", "country_code": "51", "number": "996221236" } 
json=None</msg>
<msg timestamp="20210322 17:44:28.097" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:44:27.866" endtime="20210322 17:44:28.097"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:44:28.099" level="INFO">{'id': '14fc299088af43909054ccde7614f066', 'area_code': '21', 'country_code': '51', 'number': '996221236', 'main': True, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/dac155f6e0d944deacecf9874cb95805/phones/14fc299088af43909054ccde7614f066', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/dac155f6e0d944deacecf9874cb95805', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 17:44:28.097" endtime="20210322 17:44:28.099"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:44:28.101" level="INFO">11857d470e49ab43</msg>
<status status="PASS" starttime="20210322 17:44:28.100" endtime="20210322 17:44:28.101"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:44:28.103" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:44:28.102" endtime="20210322 17:44:28.105"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${phone_external_key}</var>
</assign>
<msg timestamp="20210322 17:44:28.107" level="INFO">${phone_external_key} = 14fc299088af43909054ccde7614f066</msg>
<status status="PASS" starttime="20210322 17:44:28.105" endtime="20210322 17:44:28.108"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${phone_external_key}</arg>
</arguments>
<msg timestamp="20210322 17:44:28.109" level="INFO">${phone_external_key} = 14fc299088af43909054ccde7614f066</msg>
<status status="PASS" starttime="20210322 17:44:28.108" endtime="20210322 17:44:28.109"></status>
</kw>
<status status="PASS" starttime="20210322 17:44:27.864" endtime="20210322 17:44:28.109"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 17:44:28.111" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:44:28.110" endtime="20210322 17:44:28.111"></status>
</kw>
<kw name="criar holder address" library="accreditation_post_holder_address">
<arguments>
<arg>Rio de Janeiro</arg>
<arg>Rio de Janeiro</arg>
<arg>Brasil</arg>
<arg>Bairro de Testes</arg>
<arg>Rua de Testes</arg>
<arg>90</arg>
<arg>apto 200</arg>
<arg>21550987</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:44:28.113" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 17:44:28.113" endtime="20210322 17:44:28.113"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"city": "${city}",</arg>
<arg>"state": "${state}",</arg>
<arg>"country": "${country}",</arg>
<arg>"neighborhood": "${neighborhood}",</arg>
<arg>"street": "${street}",</arg>
<arg>"number": "${number}",</arg>
<arg>"complement": "${complement}",</arg>
<arg>"postal_code": "${postal_code}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 17:44:28.115" level="INFO">${body} = { "city": "Rio de Janeiro", "state": "Rio de Janeiro", "country": "Brasil", "neighborhood": "Bairro de Testes", "street": "Rua de Testes", "number": "90", "complement": "apto 200", "postal_code": "215...</msg>
<status status="PASS" starttime="20210322 17:44:28.113" endtime="20210322 17:44:28.115"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/addresses</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:44:28.116" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/dac155f6e0d944deacecf9874cb95805/addresses, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "city": "Rio de Janeiro", "state": "Rio de Janeiro", "country": "Brasil", "neighborhood": "Bairro de Testes", "street": "Rua de Testes", "number": "90", "complement": "apto 200", "postal_code": "21550987" } 
json=None</msg>
<msg timestamp="20210322 17:44:28.350" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:44:28.115" endtime="20210322 17:44:28.350"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:44:28.351" level="INFO">{'id': '37d144da36344aa0a1a067b430752607', 'street': 'Rua de Testes', 'number': '90', 'city': 'Rio de Janeiro', 'complement': 'apto 200', 'state': 'Rio de Janeiro', 'neighborhood': 'Bairro de Testes', 'postal_code': '21550987', 'country': 'Brasil', 'main': True, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/dac155f6e0d944deacecf9874cb95805/addresses/37d144da36344aa0a1a067b430752607', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/dac155f6e0d944deacecf9874cb95805', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 17:44:28.350" endtime="20210322 17:44:28.352"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:44:28.353" level="INFO">508cb7b2e1960af9</msg>
<status status="PASS" starttime="20210322 17:44:28.352" endtime="20210322 17:44:28.353"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:44:28.355" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:44:28.354" endtime="20210322 17:44:28.355"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${address_external_key}</var>
</assign>
<msg timestamp="20210322 17:44:28.357" level="INFO">${address_external_key} = 37d144da36344aa0a1a067b430752607</msg>
<status status="PASS" starttime="20210322 17:44:28.356" endtime="20210322 17:44:28.357"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${address_external_key}</arg>
</arguments>
<msg timestamp="20210322 17:44:28.358" level="INFO">${address_external_key} = 37d144da36344aa0a1a067b430752607</msg>
<status status="PASS" starttime="20210322 17:44:28.357" endtime="20210322 17:44:28.358"></status>
</kw>
<status status="PASS" starttime="20210322 17:44:28.111" endtime="20210322 17:44:28.359"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 17:44:28.360" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:44:28.359" endtime="20210322 17:44:28.360"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>SELFIE</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:44:28.362" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 17:44:28.362" endtime="20210322 17:44:28.362"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 17:44:28.364" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 17:44:28.367" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 17:44:28.363" endtime="20210322 17:44:28.367"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:44:28.369" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/dac155f6e0d944deacecf9874cb95805/documents?type=SELFIE, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 17:44:28.702" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:44:28.368" endtime="20210322 17:44:28.702"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:44:28.705" level="INFO">{'id': '5ad0a12ac52c4faa92b521a769b2f108', 'document_type': 'selfie', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/dac155f6e0d944deacecf9874cb95805/documents/5ad0a12ac52c4faa92b521a769b2f108', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/dac155f6e0d944deacecf9874cb95805', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/dac155f6e0d944deacecf9874cb95805/documents/5ad0a12ac52c4faa92b521a769b2f108/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 17:44:28.703" endtime="20210322 17:44:28.705"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:44:28.708" level="INFO">d401f24716546cef</msg>
<status status="PASS" starttime="20210322 17:44:28.706" endtime="20210322 17:44:28.708"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:44:28.710" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:44:28.708" endtime="20210322 17:44:28.710"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 17:44:28.713" level="INFO">${document_external_key} = 5ad0a12ac52c4faa92b521a769b2f108</msg>
<status status="PASS" starttime="20210322 17:44:28.711" endtime="20210322 17:44:28.713"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 17:44:28.715" level="INFO">${document_external_key} = 5ad0a12ac52c4faa92b521a769b2f108</msg>
<status status="PASS" starttime="20210322 17:44:28.714" endtime="20210322 17:44:28.715"></status>
</kw>
<status status="PASS" starttime="20210322 17:44:28.361" endtime="20210322 17:44:28.716"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 17:44:28.716" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:44:28.716" endtime="20210322 17:44:28.716"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>RG_FRENTE</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:44:28.718" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 17:44:28.718" endtime="20210322 17:44:28.718"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 17:44:28.719" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 17:44:28.721" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 17:44:28.719" endtime="20210322 17:44:28.721"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:44:28.722" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/dac155f6e0d944deacecf9874cb95805/documents?type=RG_FRENTE, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 17:44:29.003" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:44:28.721" endtime="20210322 17:44:29.003"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:44:29.004" level="INFO">{'id': '96b7e6b3d48a4efc811401e910846826', 'document_type': 'rg_frente', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/dac155f6e0d944deacecf9874cb95805/documents/96b7e6b3d48a4efc811401e910846826', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/dac155f6e0d944deacecf9874cb95805', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/dac155f6e0d944deacecf9874cb95805/documents/96b7e6b3d48a4efc811401e910846826/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 17:44:29.003" endtime="20210322 17:44:29.004"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:44:29.005" level="INFO">a5cb2f2837623ed9</msg>
<status status="PASS" starttime="20210322 17:44:29.005" endtime="20210322 17:44:29.006"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:44:29.009" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:44:29.006" endtime="20210322 17:44:29.010"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 17:44:29.012" level="INFO">${document_external_key} = 96b7e6b3d48a4efc811401e910846826</msg>
<status status="PASS" starttime="20210322 17:44:29.011" endtime="20210322 17:44:29.012"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 17:44:29.012" level="INFO">${document_external_key} = 96b7e6b3d48a4efc811401e910846826</msg>
<status status="PASS" starttime="20210322 17:44:29.012" endtime="20210322 17:44:29.012"></status>
</kw>
<status status="PASS" starttime="20210322 17:44:28.717" endtime="20210322 17:44:29.012"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 17:44:29.013" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:44:29.012" endtime="20210322 17:44:29.013"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>RG_VERSO</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:44:29.013" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 17:44:29.013" endtime="20210322 17:44:29.013"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 17:44:29.014" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 17:44:29.015" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 17:44:29.014" endtime="20210322 17:44:29.015"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:44:29.016" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/dac155f6e0d944deacecf9874cb95805/documents?type=RG_VERSO, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 17:44:29.271" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:44:29.015" endtime="20210322 17:44:29.271"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:44:29.272" level="INFO">{'id': '3ce158da9dc14670a6313edff5b738be', 'document_type': 'rg_verso', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/dac155f6e0d944deacecf9874cb95805/documents/3ce158da9dc14670a6313edff5b738be', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/dac155f6e0d944deacecf9874cb95805', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/dac155f6e0d944deacecf9874cb95805/documents/3ce158da9dc14670a6313edff5b738be/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 17:44:29.272" endtime="20210322 17:44:29.272"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:44:29.273" level="INFO">585e692d926f231f</msg>
<status status="PASS" starttime="20210322 17:44:29.272" endtime="20210322 17:44:29.273"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:44:29.273" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:44:29.273" endtime="20210322 17:44:29.273"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 17:44:29.274" level="INFO">${document_external_key} = 3ce158da9dc14670a6313edff5b738be</msg>
<status status="PASS" starttime="20210322 17:44:29.273" endtime="20210322 17:44:29.274"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 17:44:29.274" level="INFO">${document_external_key} = 3ce158da9dc14670a6313edff5b738be</msg>
<status status="PASS" starttime="20210322 17:44:29.274" endtime="20210322 17:44:29.274"></status>
</kw>
<status status="PASS" starttime="20210322 17:44:29.013" endtime="20210322 17:44:29.274"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 17:44:29.275" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:44:29.275" endtime="20210322 17:44:29.275"></status>
</kw>
<kw name="solicitar aprovação do holder" library="accreditation_request_approval">
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:44:29.276" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 17:44:29.275" endtime="20210322 17:44:29.276"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/approval</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:44:29.276" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/dac155f6e0d944deacecf9874cb95805/approval, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data=None 
json=None</msg>
<msg timestamp="20210322 17:44:29.628" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 17:44:29.276" endtime="20210322 17:44:29.628"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:44:29.628" level="INFO">{'message': 'Approval request accepted successfully. Processing analysis'}</msg>
<status status="PASS" starttime="20210322 17:44:29.628" endtime="20210322 17:44:29.628"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:44:29.629" level="INFO">369bf96eb9177093</msg>
<status status="PASS" starttime="20210322 17:44:29.629" endtime="20210322 17:44:29.629"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:44:29.630" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 17:44:29.629" endtime="20210322 17:44:29.630"></status>
</kw>
<status status="PASS" starttime="20210322 17:44:29.275" endtime="20210322 17:44:29.630"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 17:44:29.630" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:44:29.630" endtime="20210322 17:44:29.630"></status>
</kw>
<kw name="recebendo notificação de aprovação" library="accreditation_risk_notification">
<kw name="Uuid 4" library="FakerLibrary">
<doc>Generates a random UUID4 string.
:param cast_to: Specify what type the UUID should be cast to. Default is `str`
:type cast_to: callable</doc>
<assign>
<var>${assessment_id}</var>
</assign>
<msg timestamp="20210322 17:44:29.631" level="INFO">${assessment_id} = ae42e71d-8efd-45ba-92de-0410739513b6</msg>
<status status="PASS" starttime="20210322 17:44:29.631" endtime="20210322 17:44:29.631"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>year</arg>
</arguments>
<assign>
<var>${year}</var>
</assign>
<msg timestamp="20210322 17:44:29.633" level="INFO">${year} = 2021</msg>
<status status="PASS" starttime="20210322 17:44:29.631" endtime="20210322 17:44:29.633"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>month</arg>
</arguments>
<assign>
<var>${month}</var>
</assign>
<msg timestamp="20210322 17:44:29.633" level="INFO">${month} = 03</msg>
<status status="PASS" starttime="20210322 17:44:29.633" endtime="20210322 17:44:29.633"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>day</arg>
</arguments>
<assign>
<var>${day}</var>
</assign>
<msg timestamp="20210322 17:44:29.633" level="INFO">${day} = 22</msg>
<status status="PASS" starttime="20210322 17:44:29.633" endtime="20210322 17:44:29.633"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:44:29.634" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 17:44:29.634" endtime="20210322 17:44:29.634"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "risk.assessment.result",</arg>
<arg>"resource": "business.holder",</arg>
<arg>"created_at": "${year}-${month}-${day} 15:28:56.747Z",</arg>
<arg>"marketplace_id": "${marketplace_external_key}",</arg>
<arg>"object": {</arg>
<arg>"result": "APPROVED",</arg>
<arg>"holder_id": "${holder_external_key}",</arg>
<arg>"applicant_id": "${application_external_key}",</arg>
<arg>"assessment_id": "${assessment_id}"</arg>
<arg>}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 17:44:29.635" level="INFO">${body} = { "type": "risk.assessment.result", "resource": "business.holder", "created_at": "2021-03-22 15:28:56.747Z", "marketplace_id": "f71a8951368a4cc085cf7875ff44e61c", "object": { "result": "APPROVED", "ho...</msg>
<status status="PASS" starttime="20210322 17:44:29.635" endtime="20210322 17:44:29.635"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/admin/internal_operation/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/registration/approval</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:44:29.637" level="INFO">POST Request using : uri=/admin/internal_operation/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/dac155f6e0d944deacecf9874cb95805/registration/approval, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "risk.assessment.result", "resource": "business.holder", "created_at": "2021-03-22 15:28:56.747Z", "marketplace_id": "f71a8951368a4cc085cf7875ff44e61c", "object": { "result": "APPROVED", "holder_id": "dac155f6e0d944deacecf9874cb95805", "applicant_id": "bcc25a6751c14b52af1340d40dba78c5", "assessment_id": "ae42e71d-8efd-45ba-92de-0410739513b6" } } 
json=None</msg>
<msg timestamp="20210322 17:44:29.832" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 17:44:29.636" endtime="20210322 17:44:29.833"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:44:29.833" level="INFO">{'message': 'Holder approved successfully'}</msg>
<status status="PASS" starttime="20210322 17:44:29.833" endtime="20210322 17:44:29.833"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:44:29.834" level="INFO">98ed7161913ec529</msg>
<status status="PASS" starttime="20210322 17:44:29.833" endtime="20210322 17:44:29.834"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:44:29.834" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 17:44:29.834" endtime="20210322 17:44:29.834"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 17:44:29.835" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:44:29.835" endtime="20210322 17:44:29.835"></status>
</kw>
<status status="PASS" starttime="20210322 17:44:29.631" endtime="20210322 17:44:29.835"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 17:44:29.835" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:44:29.835" endtime="20210322 17:44:29.835"></status>
</kw>
<kw name="buscar account por holder" library="accounts_get_accounts_by_holder">
<kw name="conectar accounts" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accounts</arg>
<arg>url=${account_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 17:44:29.836" level="INFO">Creating Session using : alias=accounts, url=https://banking-accounts-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 17:44:29.836" endtime="20210322 17:44:29.837"></status>
</kw>
<status status="PASS" starttime="20210322 17:44:29.836" endtime="20210322 17:44:29.837"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accounts</arg>
<arg>/marketplaces/${marketplace_external_key}/holders/${holder_external_key}/accounts</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:44:29.837" level="INFO">GET Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/holders/dac155f6e0d944deacecf9874cb95805/accounts, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 17:44:30.419" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 17:44:29.837" endtime="20210322 17:44:30.419"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:44:30.421" level="INFO">{'items': [{'id': '7b7f186dbf054c35ba0bf29b7cf8c12b', 'holder': 'dac155f6e0d944deacecf9874cb95805', 'balance': '0.00', 'currency': 'BRL', 'routing_number': '001', 'number': '1105895929', 'status': 'active', 'metadata': {}, 'created_at': '2021-03-22T20:44:31.018565', 'updated_at': '2021-03-22T20:44:31.018565', 'primary': True, 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'uri': '/v2/marketplaces/f71a8951368a4cc085cf7875ff44e61c/accounts/7b7f186dbf054c35ba0bf29b7cf8c12b', 'resource': 'payment_account'}], 'has_more': False, 'limit': 100, 'total_pages': 1, 'page': 1, 'offset': 0, 'total': '1', 'query_count': '1'}</msg>
<status status="PASS" starttime="20210322 17:44:30.420" endtime="20210322 17:44:30.421"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:44:30.423" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 17:44:30.422" endtime="20210322 17:44:30.423"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["id"]}</arg>
</arguments>
<assign>
<var>${account_external_key}</var>
</assign>
<msg timestamp="20210322 17:44:30.424" level="INFO">${account_external_key} = 7b7f186dbf054c35ba0bf29b7cf8c12b</msg>
<status status="PASS" starttime="20210322 17:44:30.423" endtime="20210322 17:44:30.424"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_external_key}</arg>
</arguments>
<msg timestamp="20210322 17:44:30.425" level="INFO">${account_external_key} = 7b7f186dbf054c35ba0bf29b7cf8c12b</msg>
<status status="PASS" starttime="20210322 17:44:30.425" endtime="20210322 17:44:30.426"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["number"]}</arg>
</arguments>
<assign>
<var>${account_number}</var>
</assign>
<msg timestamp="20210322 17:44:30.427" level="INFO">${account_number} = 1105895929</msg>
<status status="PASS" starttime="20210322 17:44:30.426" endtime="20210322 17:44:30.427"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_number}</arg>
</arguments>
<msg timestamp="20210322 17:44:30.427" level="INFO">${account_number} = 1105895929</msg>
<status status="PASS" starttime="20210322 17:44:30.427" endtime="20210322 17:44:30.428"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["routing_number"]}</arg>
</arguments>
<assign>
<var>${account_routing_number}</var>
</assign>
<msg timestamp="20210322 17:44:30.429" level="INFO">${account_routing_number} = 001</msg>
<status status="PASS" starttime="20210322 17:44:30.428" endtime="20210322 17:44:30.429"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_routing_number}</arg>
</arguments>
<msg timestamp="20210322 17:44:30.430" level="INFO">${account_routing_number} = 001</msg>
<status status="PASS" starttime="20210322 17:44:30.429" endtime="20210322 17:44:30.430"></status>
</kw>
<status status="PASS" starttime="20210322 17:44:29.836" endtime="20210322 17:44:30.430"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 17:44:30.431" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:44:30.430" endtime="20210322 17:44:30.431"></status>
</kw>
<status status="PASS" starttime="20210322 17:44:27.199" endtime="20210322 17:44:30.431"></status>
</kw>
<kw name="criar chave pix" library="pix_dict_create_entry">
<arguments>
<arg>type=phone</arg>
<arg>value=${phone_pix}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 17:44:30.433" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 17:44:30.432" endtime="20210322 17:44:30.433"></status>
</kw>
<status status="PASS" starttime="20210322 17:44:30.432" endtime="20210322 17:44:30.433"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${type}</arg>
</arguments>
<msg timestamp="20210322 17:44:30.434" level="INFO">${type} = phone</msg>
<status status="PASS" starttime="20210322 17:44:30.434" endtime="20210322 17:44:30.434"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210322 17:44:30.435" level="INFO">${value} = +5521983135760</msg>
<status status="PASS" starttime="20210322 17:44:30.435" endtime="20210322 17:44:30.435"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:44:30.436" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 17:44:30.435" endtime="20210322 17:44:30.436"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "${type}",</arg>
<arg>"value": "${value}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 17:44:30.436" level="INFO">${body} = { "type": "phone", "value": "+5521983135760" }</msg>
<status status="PASS" starttime="20210322 17:44:30.436" endtime="20210322 17:44:30.436"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:44:30.437" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/dac155f6e0d944deacecf9874cb95805/accounts/7b7f186dbf054c35ba0bf29b7cf8c12b/entries, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "phone", "value": "+5521983135760" } 
json=None</msg>
<msg timestamp="20210322 17:44:31.096" level="INFO">${response} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20210322 17:44:30.436" endtime="20210322 17:44:31.096"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:44:31.099" level="INFO">{'id': '74b1667f466f43978a45f4d225ef000f', 'status': 'waiting_ownership_verification', 'created_at': '2021-03-22T05:44:32.290', 'updated_at': '2021-03-22T05:44:32.290', 'key': {'value': '+5521983135760', 'type': 'phone'}, 'account': {'id': '7b7f186dbf054c35ba0bf29b7cf8c12b', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': 'dac155f6e0d944deacecf9874cb95805', 'owner': {'name': 'Holder de teste', 'national_registration': '96748320500', 'type': 'individual'}, 'routing_number': '001', 'number': '1105895929', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}, 'resource': 'pix.entry'}</msg>
<status status="PASS" starttime="20210322 17:44:31.098" endtime="20210322 17:44:31.099"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:44:31.101" level="INFO">eb5f9bae72db046d</msg>
<status status="PASS" starttime="20210322 17:44:31.100" endtime="20210322 17:44:31.102"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 17:44:31.104" level="INFO">202</msg>
<status status="PASS" starttime="20210322 17:44:31.103" endtime="20210322 17:44:31.104"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:44:31.105" level="INFO">${response} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20210322 17:44:31.105" endtime="20210322 17:44:31.106"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${entry_external_key}</var>
</assign>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:31.107" endtime="20210322 17:44:31.109"></status>
</kw>
<msg timestamp="20210322 17:44:31.109" level="INFO">${entry_external_key} = 74b1667f466f43978a45f4d225ef000f</msg>
<status status="PASS" starttime="20210322 17:44:31.106" endtime="20210322 17:44:31.109"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${entry_external_key}</arg>
</arguments>
<msg timestamp="20210322 17:44:31.110" level="INFO">${entry_external_key} = 74b1667f466f43978a45f4d225ef000f</msg>
<status status="PASS" starttime="20210322 17:44:31.109" endtime="20210322 17:44:31.110"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["key"]["value"]}</arg>
</arguments>
<assign>
<var>${entry_key_value}</var>
</assign>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["key"]["value"]}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:31.111" endtime="20210322 17:44:31.112"></status>
</kw>
<msg timestamp="20210322 17:44:31.112" level="INFO">${entry_key_value} = +5521983135760</msg>
<status status="PASS" starttime="20210322 17:44:31.110" endtime="20210322 17:44:31.112"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${entry_key_value}</arg>
</arguments>
<msg timestamp="20210322 17:44:31.113" level="INFO">${entry_key_value} = +5521983135760</msg>
<status status="PASS" starttime="20210322 17:44:31.113" endtime="20210322 17:44:31.114"></status>
</kw>
<status status="PASS" starttime="20210322 17:44:30.431" endtime="20210322 17:44:31.114"></status>
</kw>
<kw name="validar chave pix" library="asserts">
<arguments>
<arg>key_status=waiting_ownership_verification</arg>
<arg>key_type=${type}</arg>
<arg>key_value=${value}</arg>
<arg>account_external_key=${account_external_key}</arg>
<arg>marketplace_external_key=${marketplace_external_key}</arg>
<arg>holder_external_key=${holder_external_key}</arg>
<arg>account_number=${account_number}</arg>
<arg>account_routing_number=${account_routing_number}</arg>
<arg>account_type=CACC</arg>
<arg>owner_key_name=${holder_name}</arg>
<arg>national_registration=${national_registration}</arg>
<arg>holder_type=${holder_type}</arg>
<arg>psp_code=19468242</arg>
<arg>psp_name=Zoop Tecnologia e Meios de Pagamento S.A.</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar status da chave</arg>
</arguments>
<msg timestamp="20210322 17:44:31.116" level="INFO">Validar status da chave</msg>
<status status="PASS" starttime="20210322 17:44:31.116" endtime="20210322 17:44:31.116"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["status"]}</arg>
<arg>${key_status}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:31.117" endtime="20210322 17:44:31.118"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando Tipo da chave PIX</arg>
</arguments>
<msg timestamp="20210322 17:44:31.118" level="INFO">Validando Tipo da chave PIX</msg>
<status status="PASS" starttime="20210322 17:44:31.118" endtime="20210322 17:44:31.118"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["key"]["type"]}</arg>
<arg>${key_type}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:31.119" endtime="20210322 17:44:31.119"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando Valor da chave PIX</arg>
</arguments>
<msg timestamp="20210322 17:44:31.120" level="INFO">Validando Valor da chave PIX</msg>
<status status="PASS" starttime="20210322 17:44:31.120" endtime="20210322 17:44:31.120"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${type}' == 'evp'</arg>
<arg>Should Not Be Empty</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' != 'evp'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${key_value}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${key_value}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:31.121" endtime="20210322 17:44:31.122"></status>
</kw>
<status status="PASS" starttime="20210322 17:44:31.120" endtime="20210322 17:44:31.122"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando dados da conta</arg>
</arguments>
<msg timestamp="20210322 17:44:31.122" level="INFO">Validando dados da conta</msg>
<status status="PASS" starttime="20210322 17:44:31.122" endtime="20210322 17:44:31.122"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["id"]}</arg>
<arg>${account_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:31.123" endtime="20210322 17:44:31.123"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["marketplace"]}</arg>
<arg>${marketplace_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:31.123" endtime="20210322 17:44:31.124"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["holder"]}</arg>
<arg>${holder_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:31.124" endtime="20210322 17:44:31.125"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["number"]}</arg>
<arg>${account_number}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:31.125" endtime="20210322 17:44:31.126"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["routing_number"]}</arg>
<arg>${account_routing_number}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:31.126" endtime="20210322 17:44:31.127"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["type"]}</arg>
<arg>${account_type}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:31.127" endtime="20210322 17:44:31.128"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar Proprietário da Account Owner</arg>
</arguments>
<msg timestamp="20210322 17:44:31.128" level="INFO">Validar Proprietário da Account Owner</msg>
<status status="PASS" starttime="20210322 17:44:31.128" endtime="20210322 17:44:31.128"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["account"]["owner"]["name"]}</arg>
<arg>${owner_key_name}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:31.128" endtime="20210322 17:44:31.129"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar national_registration da Account Owner</arg>
</arguments>
<msg timestamp="20210322 17:44:31.129" level="INFO">Validar national_registration da Account Owner</msg>
<status status="PASS" starttime="20210322 17:44:31.129" endtime="20210322 17:44:31.130"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["account"]["owner"]["national_registration"]}</arg>
<arg>${national_registration}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:31.130" endtime="20210322 17:44:31.130"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar Holder Type do Account Owner</arg>
</arguments>
<msg timestamp="20210322 17:44:31.131" level="INFO">Validar Holder Type do Account Owner</msg>
<status status="PASS" starttime="20210322 17:44:31.131" endtime="20210322 17:44:31.131"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["account"]["owner"]["type"]}</arg>
<arg>${holder_type}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:31.131" endtime="20210322 17:44:31.132"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar PSP</arg>
</arguments>
<msg timestamp="20210322 17:44:31.132" level="INFO">Validar PSP</msg>
<status status="PASS" starttime="20210322 17:44:31.132" endtime="20210322 17:44:31.132"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["psp"]["code"]}</arg>
<arg>${psp_code}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:31.133" endtime="20210322 17:44:31.133"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["psp"]["name"]}</arg>
<arg>${psp_name}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:31.133" endtime="20210322 17:44:31.134"></status>
</kw>
<status status="PASS" starttime="20210322 17:44:31.114" endtime="20210322 17:44:31.134"></status>
</kw>
<kw name="buscar verification code" library="pix_dict_verification_code">
<arguments>
<arg>holder_external_key=${holder_external_key}</arg>
<arg>account_external_key=${account_external_key}</arg>
<arg>entry_external_key=${entry_external_key}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 17:44:31.136" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 17:44:31.136" endtime="20210322 17:44:31.136"></status>
</kw>
<status status="PASS" starttime="20210322 17:44:31.135" endtime="20210322 17:44:31.136"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/admin/internal_operation/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries/${entry_external_key}/code</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:44:31.137" level="INFO">GET Request using : uri=/admin/internal_operation/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/dac155f6e0d944deacecf9874cb95805/accounts/7b7f186dbf054c35ba0bf29b7cf8c12b/entries/74b1667f466f43978a45f4d225ef000f/code, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 17:44:31.767" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 17:44:31.137" endtime="20210322 17:44:31.767"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:44:31.768" level="INFO">{'code': '1331'}</msg>
<status status="PASS" starttime="20210322 17:44:31.768" endtime="20210322 17:44:31.769"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:44:31.769" level="INFO">e688908ce95b4e2d</msg>
<status status="PASS" starttime="20210322 17:44:31.769" endtime="20210322 17:44:31.770"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 17:44:31.770" level="INFO">200</msg>
<status status="PASS" starttime="20210322 17:44:31.770" endtime="20210322 17:44:31.771"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:44:31.771" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 17:44:31.771" endtime="20210322 17:44:31.772"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["code"]}</arg>
</arguments>
<assign>
<var>${verification_code}</var>
</assign>
<msg timestamp="20210322 17:44:31.773" level="INFO">${verification_code} = 1331</msg>
<status status="PASS" starttime="20210322 17:44:31.772" endtime="20210322 17:44:31.773"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${verification_code}</arg>
</arguments>
<msg timestamp="20210322 17:44:31.774" level="INFO">${verification_code} = 1331</msg>
<status status="PASS" starttime="20210322 17:44:31.774" endtime="20210322 17:44:31.774"></status>
</kw>
<status status="PASS" starttime="20210322 17:44:31.134" endtime="20210322 17:44:31.775"></status>
</kw>
<kw name="confirmar propriedade da chave pix" library="pix_dict_confirm_propriety">
<arguments>
<arg>verification_code=${verification_code}</arg>
<arg>holder_external_key=${holder_external_key}</arg>
<arg>account_external_key=${account_external_key}</arg>
<arg>entry_external_key=${entry_external_key}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 17:44:31.777" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 17:44:31.777" endtime="20210322 17:44:31.778"></status>
</kw>
<status status="PASS" starttime="20210322 17:44:31.776" endtime="20210322 17:44:31.778"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:44:31.779" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 17:44:31.779" endtime="20210322 17:44:31.779"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"code": "${verification_code}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 17:44:31.780" level="INFO">${body} = { "code": "1331" }</msg>
<status status="PASS" starttime="20210322 17:44:31.779" endtime="20210322 17:44:31.780"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries/${entry_external_key}/ownership</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:44:31.781" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/dac155f6e0d944deacecf9874cb95805/accounts/7b7f186dbf054c35ba0bf29b7cf8c12b/entries/74b1667f466f43978a45f4d225ef000f/ownership, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "code": "1331" } 
json=None</msg>
<msg timestamp="20210322 17:44:33.282" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:44:31.780" endtime="20210322 17:44:33.282"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:44:33.285" level="INFO">{'id': '74b1667f466f43978a45f4d225ef000f', 'status': 'active', 'created_at': '2021-03-22T05:44:32.290', 'updated_at': '2021-03-22T05:44:34.495', 'key': {'value': '+5521983135760', 'type': 'phone'}, 'account': {'id': '7b7f186dbf054c35ba0bf29b7cf8c12b', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': 'dac155f6e0d944deacecf9874cb95805', 'owner': {'name': 'Holder de teste', 'national_registration': '96748320500', 'type': 'individual'}, 'routing_number': '001', 'number': '1105895929', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}, 'resource': 'pix.entry'}</msg>
<status status="PASS" starttime="20210322 17:44:33.283" endtime="20210322 17:44:33.285"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:44:33.287" level="INFO">3cceb096ec5045ef</msg>
<status status="PASS" starttime="20210322 17:44:33.286" endtime="20210322 17:44:33.287"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 17:44:33.289" level="INFO">201</msg>
<status status="PASS" starttime="20210322 17:44:33.288" endtime="20210322 17:44:33.290"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:44:33.292" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:44:33.290" endtime="20210322 17:44:33.292"></status>
</kw>
<status status="PASS" starttime="20210322 17:44:31.775" endtime="20210322 17:44:33.292"></status>
</kw>
<kw name="validar chave pix" library="asserts">
<arguments>
<arg>key_status=active</arg>
<arg>key_type=${type}</arg>
<arg>key_value=${value}</arg>
<arg>account_external_key=${account_external_key}</arg>
<arg>marketplace_external_key=${marketplace_external_key}</arg>
<arg>holder_external_key=${holder_external_key}</arg>
<arg>account_number=${account_number}</arg>
<arg>account_routing_number=${account_routing_number}</arg>
<arg>account_type=CACC</arg>
<arg>owner_key_name=${holder_name}</arg>
<arg>national_registration=${national_registration}</arg>
<arg>holder_type=${holder_type}</arg>
<arg>psp_code=19468242</arg>
<arg>psp_name=Zoop Tecnologia e Meios de Pagamento S.A.</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar status da chave</arg>
</arguments>
<msg timestamp="20210322 17:44:33.296" level="INFO">Validar status da chave</msg>
<status status="PASS" starttime="20210322 17:44:33.295" endtime="20210322 17:44:33.296"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["status"]}</arg>
<arg>${key_status}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:33.297" endtime="20210322 17:44:33.298"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando Tipo da chave PIX</arg>
</arguments>
<msg timestamp="20210322 17:44:33.299" level="INFO">Validando Tipo da chave PIX</msg>
<status status="PASS" starttime="20210322 17:44:33.298" endtime="20210322 17:44:33.299"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["key"]["type"]}</arg>
<arg>${key_type}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:33.299" endtime="20210322 17:44:33.301"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando Valor da chave PIX</arg>
</arguments>
<msg timestamp="20210322 17:44:33.301" level="INFO">Validando Valor da chave PIX</msg>
<status status="PASS" starttime="20210322 17:44:33.301" endtime="20210322 17:44:33.302"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${type}' == 'evp'</arg>
<arg>Should Not Be Empty</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' != 'evp'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${key_value}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${key_value}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:33.303" endtime="20210322 17:44:33.304"></status>
</kw>
<status status="PASS" starttime="20210322 17:44:33.302" endtime="20210322 17:44:33.304"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando dados da conta</arg>
</arguments>
<msg timestamp="20210322 17:44:33.305" level="INFO">Validando dados da conta</msg>
<status status="PASS" starttime="20210322 17:44:33.304" endtime="20210322 17:44:33.305"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["id"]}</arg>
<arg>${account_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:33.305" endtime="20210322 17:44:33.306"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["marketplace"]}</arg>
<arg>${marketplace_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:33.306" endtime="20210322 17:44:33.307"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["holder"]}</arg>
<arg>${holder_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:33.308" endtime="20210322 17:44:33.308"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["number"]}</arg>
<arg>${account_number}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:33.309" endtime="20210322 17:44:33.309"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["routing_number"]}</arg>
<arg>${account_routing_number}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:33.310" endtime="20210322 17:44:33.311"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["type"]}</arg>
<arg>${account_type}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:33.311" endtime="20210322 17:44:33.312"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar Proprietário da Account Owner</arg>
</arguments>
<msg timestamp="20210322 17:44:33.312" level="INFO">Validar Proprietário da Account Owner</msg>
<status status="PASS" starttime="20210322 17:44:33.312" endtime="20210322 17:44:33.312"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["account"]["owner"]["name"]}</arg>
<arg>${owner_key_name}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:33.313" endtime="20210322 17:44:33.313"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar national_registration da Account Owner</arg>
</arguments>
<msg timestamp="20210322 17:44:33.314" level="INFO">Validar national_registration da Account Owner</msg>
<status status="PASS" starttime="20210322 17:44:33.314" endtime="20210322 17:44:33.314"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["account"]["owner"]["national_registration"]}</arg>
<arg>${national_registration}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:33.314" endtime="20210322 17:44:33.315"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar Holder Type do Account Owner</arg>
</arguments>
<msg timestamp="20210322 17:44:33.316" level="INFO">Validar Holder Type do Account Owner</msg>
<status status="PASS" starttime="20210322 17:44:33.315" endtime="20210322 17:44:33.316"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["account"]["owner"]["type"]}</arg>
<arg>${holder_type}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:33.316" endtime="20210322 17:44:33.317"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar PSP</arg>
</arguments>
<msg timestamp="20210322 17:44:33.318" level="INFO">Validar PSP</msg>
<status status="PASS" starttime="20210322 17:44:33.318" endtime="20210322 17:44:33.318"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["psp"]["code"]}</arg>
<arg>${psp_code}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:33.318" endtime="20210322 17:44:33.319"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["psp"]["name"]}</arg>
<arg>${psp_name}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:33.319" endtime="20210322 17:44:33.320"></status>
</kw>
<status status="PASS" starttime="20210322 17:44:33.293" endtime="20210322 17:44:33.320"></status>
</kw>
<doc>Fluxo de Exceção</doc>
<tags>
<tag>smoke_test</tag>
</tags>
<status status="PASS" starttime="20210322 17:44:27.196" endtime="20210322 17:44:33.320" critical="yes"></status>
</test>
<test id="s1-s1-s2-t2" name="Cenário: Confirmar propriedade de chave de endereçamento do tipo Email">
<kw name="Email" library="FakerLibrary">
<assign>
<var>${email_pix}</var>
</assign>
<msg timestamp="20210322 17:44:33.323" level="INFO">${email_pix} = luiz-henrique71@gomes.com</msg>
<status status="PASS" starttime="20210322 17:44:33.322" endtime="20210322 17:44:33.323"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${email_pix}</arg>
</arguments>
<msg timestamp="20210322 17:44:33.324" level="INFO">${email_pix} = luiz-henrique71@gomes.com</msg>
<status status="PASS" starttime="20210322 17:44:33.323" endtime="20210322 17:44:33.324"></status>
</kw>
<kw name="criar holder individual ativo" library="accreditation_create_holder_active">
<kw name="conectar accreditation" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accreditation</arg>
<arg>url=${accreditation_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 17:44:33.325" level="INFO">Creating Session using : alias=accreditation, url=https://banking-accreditation-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 17:44:33.325" endtime="20210322 17:44:33.326"></status>
</kw>
<status status="PASS" starttime="20210322 17:44:33.324" endtime="20210322 17:44:33.326"></status>
</kw>
<kw name="Cpf" library="FakerLibrary">
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 17:44:33.327" level="INFO">${national_registration} = 185.309.462-51</msg>
<status status="PASS" starttime="20210322 17:44:33.326" endtime="20210322 17:44:33.327"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${national_registration}</arg>
<arg>.</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 17:44:33.328" level="INFO">${national_registration} = 185309462-51</msg>
<status status="PASS" starttime="20210322 17:44:33.327" endtime="20210322 17:44:33.328"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${national_registration}</arg>
<arg>-</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 17:44:33.329" level="INFO">${national_registration} = 18530946251</msg>
<status status="PASS" starttime="20210322 17:44:33.328" endtime="20210322 17:44:33.329"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${national_registration}</arg>
</arguments>
<msg timestamp="20210322 17:44:33.330" level="INFO">${national_registration} = 18530946251</msg>
<status status="PASS" starttime="20210322 17:44:33.329" endtime="20210322 17:44:33.330"></status>
</kw>
<kw name="Rg" library="FakerLibrary">
<doc>Brazilian RG, return plain numbers.
Check:  https://www.ngmatematica.com/2014/02/como-determinar-o-digito-verificador-do.html</doc>
<assign>
<var>${identity_card}</var>
</assign>
<msg timestamp="20210322 17:44:33.330" level="INFO">${identity_card} = 825364176</msg>
<status status="PASS" starttime="20210322 17:44:33.330" endtime="20210322 17:44:33.330"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${identity_card}</arg>
</arguments>
<msg timestamp="20210322 17:44:33.331" level="INFO">${identity_card} = 825364176</msg>
<status status="PASS" starttime="20210322 17:44:33.331" endtime="20210322 17:44:33.331"></status>
</kw>
<kw name="criar holder individual" library="accreditation_post_holder_individual">
<arguments>
<arg>holder_type=individual</arg>
<arg>holder_name=${holder_name}</arg>
<arg>email=${email}</arg>
<arg>national_registration=${national_registration}</arg>
<arg>revenue=${revenue}</arg>
<arg>birthday=${birthday}</arg>
<arg>mothers_name=${mothers_name}</arg>
<arg>identity_card=${identity_card}</arg>
<arg>pep=false</arg>
<arg>cbo=${cbo}</arg>
</arguments>
<kw name="conectar accreditation" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accreditation</arg>
<arg>url=${accreditation_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 17:44:33.334" level="INFO">Creating Session using : alias=accreditation, url=https://banking-accreditation-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 17:44:33.334" endtime="20210322 17:44:33.335"></status>
</kw>
<status status="PASS" starttime="20210322 17:44:33.333" endtime="20210322 17:44:33.335"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_type}</arg>
</arguments>
<msg timestamp="20210322 17:44:33.336" level="INFO">${holder_type} = individual</msg>
<status status="PASS" starttime="20210322 17:44:33.336" endtime="20210322 17:44:33.336"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_name}</arg>
</arguments>
<msg timestamp="20210322 17:44:33.337" level="INFO">${holder_name} = Holder de teste</msg>
<status status="PASS" starttime="20210322 17:44:33.337" endtime="20210322 17:44:33.337"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:44:33.338" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 17:44:33.338" endtime="20210322 17:44:33.338"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "${holder_type}",</arg>
<arg>"name": "${holder_name}",</arg>
<arg>"email": "${email}",</arg>
<arg>"national_registration": "${national_registration}",</arg>
<arg>"revenue": ${revenue},</arg>
<arg>"birthday": "${birthday}",</arg>
<arg>"mothers_name": "${mothers_name}",</arg>
<arg>"identity_card": "${identity_card}",</arg>
<arg>"pep": false,</arg>
<arg>"cbo": ${cbo}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 17:44:33.339" level="INFO">${body} = { "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "18530946251", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder",...</msg>
<status status="PASS" starttime="20210322 17:44:33.338" endtime="20210322 17:44:33.339"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:44:33.341" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "18530946251", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder", "identity_card": "825364176", "pep": false, "cbo": 821450 } 
json=None</msg>
<msg timestamp="20210322 17:44:34.009" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:44:33.340" endtime="20210322 17:44:34.009"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:44:34.012" level="INFO">{'id': 'a1a9a5c66f9848cfb018a5d6b10170aa', 'name': 'Holder de teste', 'revenue': 5500.0, 'email': 'teste@teste.com.br', 'status': 'waiting_info_and_documents', 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'marketplace_name': 'Marketplace de Teste', 'created_at': '2021-03-22T17:44:35.197905', 'updated_at': '2021-03-22T17:44:35.197907', 'type': 'individual', 'national_registration': '18530946251', 'birthday': '1988-04-23', 'mothers_name': 'Mãe do Holder', 'identity_card': '825364176', 'pep': False, 'cbo': '821450', '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/a1a9a5c66f9848cfb018a5d6b10170aa', 'type': 'GET'}, 'phones': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/a1a9a5c66f9848cfb018a5d6b10170aa/phones', 'type': 'GET'}, 'addresses': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/a1a9a5c66f9848cfb018a5d6b10170aa/addresses', 'type': 'GET'}, 'documents': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/a1a9a5c66f9848cfb018a5d6b10170aa/documents', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 17:44:34.010" endtime="20210322 17:44:34.013"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:44:34.016" level="INFO">64b09d005bd364c0</msg>
<status status="PASS" starttime="20210322 17:44:34.014" endtime="20210322 17:44:34.016"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${body}</arg>
</arguments>
<msg timestamp="20210322 17:44:34.017" level="INFO">{ "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "18530946251", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder", "identity_card": "825364176", "pep": false, "cbo": 821450 }</msg>
<status status="PASS" starttime="20210322 17:44:34.017" endtime="20210322 17:44:34.018"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:44:34.019" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:44:34.018" endtime="20210322 17:44:34.019"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${holder_external_key}</var>
</assign>
<msg timestamp="20210322 17:44:34.021" level="INFO">${holder_external_key} = a1a9a5c66f9848cfb018a5d6b10170aa</msg>
<status status="PASS" starttime="20210322 17:44:34.020" endtime="20210322 17:44:34.021"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_external_key}</arg>
</arguments>
<msg timestamp="20210322 17:44:34.022" level="INFO">${holder_external_key} = a1a9a5c66f9848cfb018a5d6b10170aa</msg>
<status status="PASS" starttime="20210322 17:44:34.022" endtime="20210322 17:44:34.022"></status>
</kw>
<status status="PASS" starttime="20210322 17:44:33.332" endtime="20210322 17:44:34.022"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_name}</arg>
</arguments>
<msg timestamp="20210322 17:44:34.025" level="INFO">${holder_name} = Holder de teste</msg>
<status status="PASS" starttime="20210322 17:44:34.024" endtime="20210322 17:44:34.025"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 17:44:34.026" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:44:34.025" endtime="20210322 17:44:34.026"></status>
</kw>
<kw name="criar holder phone" library="accreditation_post_holder_phone">
<arguments>
<arg>21</arg>
<arg>51</arg>
<arg>996221236</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:44:34.028" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 17:44:34.028" endtime="20210322 17:44:34.028"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"area_code": "${phone_area_code}",</arg>
<arg>"country_code": "${phone_country_code}",</arg>
<arg>"number": "${phone_number}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 17:44:34.029" level="INFO">${body} = { "area_code": "21", "country_code": "51", "number": "996221236" }</msg>
<status status="PASS" starttime="20210322 17:44:34.029" endtime="20210322 17:44:34.029"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/phones</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:44:34.031" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/a1a9a5c66f9848cfb018a5d6b10170aa/phones, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "area_code": "21", "country_code": "51", "number": "996221236" } 
json=None</msg>
<msg timestamp="20210322 17:44:34.250" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:44:34.030" endtime="20210322 17:44:34.251"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:44:34.254" level="INFO">{'id': '1477d0f5889c4749bce4c327df9c0871', 'area_code': '21', 'country_code': '51', 'number': '996221236', 'main': True, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/a1a9a5c66f9848cfb018a5d6b10170aa/phones/1477d0f5889c4749bce4c327df9c0871', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/a1a9a5c66f9848cfb018a5d6b10170aa', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 17:44:34.252" endtime="20210322 17:44:34.255"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:44:34.257" level="INFO">d736d7bf77e53f14</msg>
<status status="PASS" starttime="20210322 17:44:34.256" endtime="20210322 17:44:34.258"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:44:34.259" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:44:34.258" endtime="20210322 17:44:34.259"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${phone_external_key}</var>
</assign>
<msg timestamp="20210322 17:44:34.261" level="INFO">${phone_external_key} = 1477d0f5889c4749bce4c327df9c0871</msg>
<status status="PASS" starttime="20210322 17:44:34.260" endtime="20210322 17:44:34.261"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${phone_external_key}</arg>
</arguments>
<msg timestamp="20210322 17:44:34.263" level="INFO">${phone_external_key} = 1477d0f5889c4749bce4c327df9c0871</msg>
<status status="PASS" starttime="20210322 17:44:34.262" endtime="20210322 17:44:34.263"></status>
</kw>
<status status="PASS" starttime="20210322 17:44:34.027" endtime="20210322 17:44:34.263"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 17:44:34.264" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:44:34.264" endtime="20210322 17:44:34.265"></status>
</kw>
<kw name="criar holder address" library="accreditation_post_holder_address">
<arguments>
<arg>Rio de Janeiro</arg>
<arg>Rio de Janeiro</arg>
<arg>Brasil</arg>
<arg>Bairro de Testes</arg>
<arg>Rua de Testes</arg>
<arg>90</arg>
<arg>apto 200</arg>
<arg>21550987</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:44:34.267" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 17:44:34.266" endtime="20210322 17:44:34.267"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"city": "${city}",</arg>
<arg>"state": "${state}",</arg>
<arg>"country": "${country}",</arg>
<arg>"neighborhood": "${neighborhood}",</arg>
<arg>"street": "${street}",</arg>
<arg>"number": "${number}",</arg>
<arg>"complement": "${complement}",</arg>
<arg>"postal_code": "${postal_code}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 17:44:34.268" level="INFO">${body} = { "city": "Rio de Janeiro", "state": "Rio de Janeiro", "country": "Brasil", "neighborhood": "Bairro de Testes", "street": "Rua de Testes", "number": "90", "complement": "apto 200", "postal_code": "215...</msg>
<status status="PASS" starttime="20210322 17:44:34.267" endtime="20210322 17:44:34.269"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/addresses</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:44:34.270" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/a1a9a5c66f9848cfb018a5d6b10170aa/addresses, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "city": "Rio de Janeiro", "state": "Rio de Janeiro", "country": "Brasil", "neighborhood": "Bairro de Testes", "street": "Rua de Testes", "number": "90", "complement": "apto 200", "postal_code": "21550987" } 
json=None</msg>
<msg timestamp="20210322 17:44:34.485" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:44:34.269" endtime="20210322 17:44:34.485"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:44:34.486" level="INFO">{'id': '29fd494f90a74611a29a4b28b4ead822', 'street': 'Rua de Testes', 'number': '90', 'city': 'Rio de Janeiro', 'complement': 'apto 200', 'state': 'Rio de Janeiro', 'neighborhood': 'Bairro de Testes', 'postal_code': '21550987', 'country': 'Brasil', 'main': True, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/a1a9a5c66f9848cfb018a5d6b10170aa/addresses/29fd494f90a74611a29a4b28b4ead822', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/a1a9a5c66f9848cfb018a5d6b10170aa', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 17:44:34.486" endtime="20210322 17:44:34.486"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:44:34.487" level="INFO">fb46925baa9adcc1</msg>
<status status="PASS" starttime="20210322 17:44:34.487" endtime="20210322 17:44:34.488"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:44:34.488" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:44:34.488" endtime="20210322 17:44:34.489"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${address_external_key}</var>
</assign>
<msg timestamp="20210322 17:44:34.490" level="INFO">${address_external_key} = 29fd494f90a74611a29a4b28b4ead822</msg>
<status status="PASS" starttime="20210322 17:44:34.489" endtime="20210322 17:44:34.490"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${address_external_key}</arg>
</arguments>
<msg timestamp="20210322 17:44:34.492" level="INFO">${address_external_key} = 29fd494f90a74611a29a4b28b4ead822</msg>
<status status="PASS" starttime="20210322 17:44:34.491" endtime="20210322 17:44:34.492"></status>
</kw>
<status status="PASS" starttime="20210322 17:44:34.265" endtime="20210322 17:44:34.492"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 17:44:34.493" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:44:34.493" endtime="20210322 17:44:34.493"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>SELFIE</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:44:34.496" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 17:44:34.494" endtime="20210322 17:44:34.496"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 17:44:34.496" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 17:44:34.498" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 17:44:34.496" endtime="20210322 17:44:34.498"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:44:34.500" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/a1a9a5c66f9848cfb018a5d6b10170aa/documents?type=SELFIE, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 17:44:34.778" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:44:34.499" endtime="20210322 17:44:34.778"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:44:34.780" level="INFO">{'id': 'b0279d47a1a34b6c8b582b604635eafe', 'document_type': 'selfie', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/a1a9a5c66f9848cfb018a5d6b10170aa/documents/b0279d47a1a34b6c8b582b604635eafe', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/a1a9a5c66f9848cfb018a5d6b10170aa', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/a1a9a5c66f9848cfb018a5d6b10170aa/documents/b0279d47a1a34b6c8b582b604635eafe/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 17:44:34.780" endtime="20210322 17:44:34.781"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:44:34.782" level="INFO">60c4443ec56ce2b0</msg>
<status status="PASS" starttime="20210322 17:44:34.781" endtime="20210322 17:44:34.783"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:44:34.784" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:44:34.783" endtime="20210322 17:44:34.784"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 17:44:34.786" level="INFO">${document_external_key} = b0279d47a1a34b6c8b582b604635eafe</msg>
<status status="PASS" starttime="20210322 17:44:34.785" endtime="20210322 17:44:34.786"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 17:44:34.787" level="INFO">${document_external_key} = b0279d47a1a34b6c8b582b604635eafe</msg>
<status status="PASS" starttime="20210322 17:44:34.787" endtime="20210322 17:44:34.787"></status>
</kw>
<status status="PASS" starttime="20210322 17:44:34.494" endtime="20210322 17:44:34.788"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 17:44:34.789" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:44:34.788" endtime="20210322 17:44:34.789"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>RG_FRENTE</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:44:34.790" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 17:44:34.790" endtime="20210322 17:44:34.790"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 17:44:34.791" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 17:44:34.794" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 17:44:34.791" endtime="20210322 17:44:34.794"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:44:34.795" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/a1a9a5c66f9848cfb018a5d6b10170aa/documents?type=RG_FRENTE, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 17:44:35.149" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:44:34.794" endtime="20210322 17:44:35.150"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:44:35.151" level="INFO">{'id': '958a4ebbce434abdb4bdbf6747b304af', 'document_type': 'rg_frente', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/a1a9a5c66f9848cfb018a5d6b10170aa/documents/958a4ebbce434abdb4bdbf6747b304af', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/a1a9a5c66f9848cfb018a5d6b10170aa', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/a1a9a5c66f9848cfb018a5d6b10170aa/documents/958a4ebbce434abdb4bdbf6747b304af/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 17:44:35.150" endtime="20210322 17:44:35.151"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:44:35.152" level="INFO">96dc0b31d87bd0f3</msg>
<status status="PASS" starttime="20210322 17:44:35.152" endtime="20210322 17:44:35.152"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:44:35.153" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:44:35.152" endtime="20210322 17:44:35.153"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 17:44:35.154" level="INFO">${document_external_key} = 958a4ebbce434abdb4bdbf6747b304af</msg>
<status status="PASS" starttime="20210322 17:44:35.154" endtime="20210322 17:44:35.154"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 17:44:35.155" level="INFO">${document_external_key} = 958a4ebbce434abdb4bdbf6747b304af</msg>
<status status="PASS" starttime="20210322 17:44:35.155" endtime="20210322 17:44:35.155"></status>
</kw>
<status status="PASS" starttime="20210322 17:44:34.789" endtime="20210322 17:44:35.155"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 17:44:35.156" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:44:35.156" endtime="20210322 17:44:35.156"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>RG_VERSO</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:44:35.158" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 17:44:35.157" endtime="20210322 17:44:35.158"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 17:44:35.158" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 17:44:35.160" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 17:44:35.158" endtime="20210322 17:44:35.160"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:44:35.162" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/a1a9a5c66f9848cfb018a5d6b10170aa/documents?type=RG_VERSO, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 17:44:35.456" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:44:35.161" endtime="20210322 17:44:35.456"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:44:35.458" level="INFO">{'id': '3a978fb4833c45cab2a8ad6454b7590d', 'document_type': 'rg_verso', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/a1a9a5c66f9848cfb018a5d6b10170aa/documents/3a978fb4833c45cab2a8ad6454b7590d', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/a1a9a5c66f9848cfb018a5d6b10170aa', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/a1a9a5c66f9848cfb018a5d6b10170aa/documents/3a978fb4833c45cab2a8ad6454b7590d/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 17:44:35.457" endtime="20210322 17:44:35.459"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:44:35.462" level="INFO">483d428e81c956b5</msg>
<status status="PASS" starttime="20210322 17:44:35.460" endtime="20210322 17:44:35.462"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:44:35.464" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:44:35.463" endtime="20210322 17:44:35.464"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 17:44:35.466" level="INFO">${document_external_key} = 3a978fb4833c45cab2a8ad6454b7590d</msg>
<status status="PASS" starttime="20210322 17:44:35.465" endtime="20210322 17:44:35.466"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 17:44:35.468" level="INFO">${document_external_key} = 3a978fb4833c45cab2a8ad6454b7590d</msg>
<status status="PASS" starttime="20210322 17:44:35.467" endtime="20210322 17:44:35.468"></status>
</kw>
<status status="PASS" starttime="20210322 17:44:35.157" endtime="20210322 17:44:35.468"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 17:44:35.469" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:44:35.469" endtime="20210322 17:44:35.469"></status>
</kw>
<kw name="solicitar aprovação do holder" library="accreditation_request_approval">
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:44:35.471" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 17:44:35.470" endtime="20210322 17:44:35.471"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/approval</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:44:35.473" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/a1a9a5c66f9848cfb018a5d6b10170aa/approval, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data=None 
json=None</msg>
<msg timestamp="20210322 17:44:35.761" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 17:44:35.472" endtime="20210322 17:44:35.761"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:44:35.764" level="INFO">{'message': 'Approval request accepted successfully. Processing analysis'}</msg>
<status status="PASS" starttime="20210322 17:44:35.762" endtime="20210322 17:44:35.764"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:44:35.766" level="INFO">4c049962da7d5dae</msg>
<status status="PASS" starttime="20210322 17:44:35.765" endtime="20210322 17:44:35.767"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:44:35.769" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 17:44:35.768" endtime="20210322 17:44:35.769"></status>
</kw>
<status status="PASS" starttime="20210322 17:44:35.470" endtime="20210322 17:44:35.770"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 17:44:35.772" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:44:35.771" endtime="20210322 17:44:35.772"></status>
</kw>
<kw name="recebendo notificação de aprovação" library="accreditation_risk_notification">
<kw name="Uuid 4" library="FakerLibrary">
<doc>Generates a random UUID4 string.
:param cast_to: Specify what type the UUID should be cast to. Default is `str`
:type cast_to: callable</doc>
<assign>
<var>${assessment_id}</var>
</assign>
<msg timestamp="20210322 17:44:35.775" level="INFO">${assessment_id} = 9d750426-c935-4055-879d-49b8983008cf</msg>
<status status="PASS" starttime="20210322 17:44:35.774" endtime="20210322 17:44:35.775"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>year</arg>
</arguments>
<assign>
<var>${year}</var>
</assign>
<msg timestamp="20210322 17:44:35.776" level="INFO">${year} = 2021</msg>
<status status="PASS" starttime="20210322 17:44:35.775" endtime="20210322 17:44:35.776"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>month</arg>
</arguments>
<assign>
<var>${month}</var>
</assign>
<msg timestamp="20210322 17:44:35.777" level="INFO">${month} = 03</msg>
<status status="PASS" starttime="20210322 17:44:35.776" endtime="20210322 17:44:35.777"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>day</arg>
</arguments>
<assign>
<var>${day}</var>
</assign>
<msg timestamp="20210322 17:44:35.778" level="INFO">${day} = 22</msg>
<status status="PASS" starttime="20210322 17:44:35.778" endtime="20210322 17:44:35.779"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:44:35.780" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 17:44:35.779" endtime="20210322 17:44:35.780"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "risk.assessment.result",</arg>
<arg>"resource": "business.holder",</arg>
<arg>"created_at": "${year}-${month}-${day} 15:28:56.747Z",</arg>
<arg>"marketplace_id": "${marketplace_external_key}",</arg>
<arg>"object": {</arg>
<arg>"result": "APPROVED",</arg>
<arg>"holder_id": "${holder_external_key}",</arg>
<arg>"applicant_id": "${application_external_key}",</arg>
<arg>"assessment_id": "${assessment_id}"</arg>
<arg>}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 17:44:35.782" level="INFO">${body} = { "type": "risk.assessment.result", "resource": "business.holder", "created_at": "2021-03-22 15:28:56.747Z", "marketplace_id": "f71a8951368a4cc085cf7875ff44e61c", "object": { "result": "APPROVED", "ho...</msg>
<status status="PASS" starttime="20210322 17:44:35.780" endtime="20210322 17:44:35.782"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/admin/internal_operation/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/registration/approval</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:44:35.784" level="INFO">POST Request using : uri=/admin/internal_operation/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/a1a9a5c66f9848cfb018a5d6b10170aa/registration/approval, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "risk.assessment.result", "resource": "business.holder", "created_at": "2021-03-22 15:28:56.747Z", "marketplace_id": "f71a8951368a4cc085cf7875ff44e61c", "object": { "result": "APPROVED", "holder_id": "a1a9a5c66f9848cfb018a5d6b10170aa", "applicant_id": "bcc25a6751c14b52af1340d40dba78c5", "assessment_id": "9d750426-c935-4055-879d-49b8983008cf" } } 
json=None</msg>
<msg timestamp="20210322 17:44:35.998" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 17:44:35.783" endtime="20210322 17:44:35.999"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:44:36.000" level="INFO">{'message': 'Holder approved successfully'}</msg>
<status status="PASS" starttime="20210322 17:44:35.999" endtime="20210322 17:44:36.001"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:44:36.002" level="INFO">e2c9a76786cbe07f</msg>
<status status="PASS" starttime="20210322 17:44:36.001" endtime="20210322 17:44:36.004"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:44:36.005" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 17:44:36.004" endtime="20210322 17:44:36.006"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 17:44:36.009" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:44:36.007" endtime="20210322 17:44:36.009"></status>
</kw>
<status status="PASS" starttime="20210322 17:44:35.773" endtime="20210322 17:44:36.009"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 17:44:36.010" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:44:36.009" endtime="20210322 17:44:36.010"></status>
</kw>
<kw name="buscar account por holder" library="accounts_get_accounts_by_holder">
<kw name="conectar accounts" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accounts</arg>
<arg>url=${account_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 17:44:36.013" level="INFO">Creating Session using : alias=accounts, url=https://banking-accounts-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 17:44:36.012" endtime="20210322 17:44:36.015"></status>
</kw>
<status status="PASS" starttime="20210322 17:44:36.011" endtime="20210322 17:44:36.015"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accounts</arg>
<arg>/marketplaces/${marketplace_external_key}/holders/${holder_external_key}/accounts</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:44:36.016" level="INFO">GET Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/holders/a1a9a5c66f9848cfb018a5d6b10170aa/accounts, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 17:44:36.655" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 17:44:36.015" endtime="20210322 17:44:36.655"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:44:36.657" level="INFO">{'items': [{'id': 'c9cbed301295447a96ef57b9ca10b72e', 'holder': 'a1a9a5c66f9848cfb018a5d6b10170aa', 'balance': '0.00', 'currency': 'BRL', 'routing_number': '001', 'number': '4734674211', 'status': 'active', 'metadata': {}, 'created_at': '2021-03-22T20:44:37.18528', 'updated_at': '2021-03-22T20:44:37.18528', 'primary': True, 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'uri': '/v2/marketplaces/f71a8951368a4cc085cf7875ff44e61c/accounts/c9cbed301295447a96ef57b9ca10b72e', 'resource': 'payment_account'}], 'has_more': False, 'limit': 100, 'total_pages': 1, 'page': 1, 'offset': 0, 'total': '1', 'query_count': '1'}</msg>
<status status="PASS" starttime="20210322 17:44:36.656" endtime="20210322 17:44:36.657"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:44:36.659" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 17:44:36.659" endtime="20210322 17:44:36.659"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["id"]}</arg>
</arguments>
<assign>
<var>${account_external_key}</var>
</assign>
<msg timestamp="20210322 17:44:36.662" level="INFO">${account_external_key} = c9cbed301295447a96ef57b9ca10b72e</msg>
<status status="PASS" starttime="20210322 17:44:36.660" endtime="20210322 17:44:36.662"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_external_key}</arg>
</arguments>
<msg timestamp="20210322 17:44:36.663" level="INFO">${account_external_key} = c9cbed301295447a96ef57b9ca10b72e</msg>
<status status="PASS" starttime="20210322 17:44:36.662" endtime="20210322 17:44:36.663"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["number"]}</arg>
</arguments>
<assign>
<var>${account_number}</var>
</assign>
<msg timestamp="20210322 17:44:36.665" level="INFO">${account_number} = 4734674211</msg>
<status status="PASS" starttime="20210322 17:44:36.664" endtime="20210322 17:44:36.665"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_number}</arg>
</arguments>
<msg timestamp="20210322 17:44:36.666" level="INFO">${account_number} = 4734674211</msg>
<status status="PASS" starttime="20210322 17:44:36.666" endtime="20210322 17:44:36.667"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["routing_number"]}</arg>
</arguments>
<assign>
<var>${account_routing_number}</var>
</assign>
<msg timestamp="20210322 17:44:36.668" level="INFO">${account_routing_number} = 001</msg>
<status status="PASS" starttime="20210322 17:44:36.667" endtime="20210322 17:44:36.668"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_routing_number}</arg>
</arguments>
<msg timestamp="20210322 17:44:36.669" level="INFO">${account_routing_number} = 001</msg>
<status status="PASS" starttime="20210322 17:44:36.669" endtime="20210322 17:44:36.669"></status>
</kw>
<status status="PASS" starttime="20210322 17:44:36.011" endtime="20210322 17:44:36.669"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 17:44:36.670" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:44:36.670" endtime="20210322 17:44:36.670"></status>
</kw>
<status status="PASS" starttime="20210322 17:44:33.324" endtime="20210322 17:44:36.671"></status>
</kw>
<kw name="criar chave pix" library="pix_dict_create_entry">
<arguments>
<arg>type=email</arg>
<arg>value=${email_pix}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 17:44:36.673" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 17:44:36.672" endtime="20210322 17:44:36.673"></status>
</kw>
<status status="PASS" starttime="20210322 17:44:36.672" endtime="20210322 17:44:36.673"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${type}</arg>
</arguments>
<msg timestamp="20210322 17:44:36.673" level="INFO">${type} = email</msg>
<status status="PASS" starttime="20210322 17:44:36.673" endtime="20210322 17:44:36.673"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210322 17:44:36.675" level="INFO">${value} = luiz-henrique71@gomes.com</msg>
<status status="PASS" starttime="20210322 17:44:36.675" endtime="20210322 17:44:36.675"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:44:36.675" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 17:44:36.675" endtime="20210322 17:44:36.675"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "${type}",</arg>
<arg>"value": "${value}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 17:44:36.677" level="INFO">${body} = { "type": "email", "value": "luiz-henrique71@gomes.com" }</msg>
<status status="PASS" starttime="20210322 17:44:36.675" endtime="20210322 17:44:36.677"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:44:36.677" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/a1a9a5c66f9848cfb018a5d6b10170aa/accounts/c9cbed301295447a96ef57b9ca10b72e/entries, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "email", "value": "luiz-henrique71@gomes.com" } 
json=None</msg>
<msg timestamp="20210322 17:44:37.361" level="INFO">${response} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20210322 17:44:36.677" endtime="20210322 17:44:37.361"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:44:37.362" level="INFO">{'id': '1a638063cdbc453db9672f50ec749033', 'status': 'waiting_ownership_verification', 'created_at': '2021-03-22T05:44:38.553', 'updated_at': '2021-03-22T05:44:38.553', 'key': {'value': 'luiz-henrique71@gomes.com', 'type': 'email'}, 'account': {'id': 'c9cbed301295447a96ef57b9ca10b72e', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': 'a1a9a5c66f9848cfb018a5d6b10170aa', 'owner': {'name': 'Holder de teste', 'national_registration': '18530946251', 'type': 'individual'}, 'routing_number': '001', 'number': '4734674211', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}, 'resource': 'pix.entry'}</msg>
<status status="PASS" starttime="20210322 17:44:37.362" endtime="20210322 17:44:37.362"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:44:37.363" level="INFO">e0e38e683f50715b</msg>
<status status="PASS" starttime="20210322 17:44:37.362" endtime="20210322 17:44:37.363"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 17:44:37.364" level="INFO">202</msg>
<status status="PASS" starttime="20210322 17:44:37.363" endtime="20210322 17:44:37.364"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:44:37.365" level="INFO">${response} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20210322 17:44:37.364" endtime="20210322 17:44:37.365"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${entry_external_key}</var>
</assign>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:37.366" endtime="20210322 17:44:37.366"></status>
</kw>
<msg timestamp="20210322 17:44:37.366" level="INFO">${entry_external_key} = 1a638063cdbc453db9672f50ec749033</msg>
<status status="PASS" starttime="20210322 17:44:37.365" endtime="20210322 17:44:37.366"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${entry_external_key}</arg>
</arguments>
<msg timestamp="20210322 17:44:37.366" level="INFO">${entry_external_key} = 1a638063cdbc453db9672f50ec749033</msg>
<status status="PASS" starttime="20210322 17:44:37.366" endtime="20210322 17:44:37.366"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["key"]["value"]}</arg>
</arguments>
<assign>
<var>${entry_key_value}</var>
</assign>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["key"]["value"]}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:37.367" endtime="20210322 17:44:37.368"></status>
</kw>
<msg timestamp="20210322 17:44:37.368" level="INFO">${entry_key_value} = luiz-henrique71@gomes.com</msg>
<status status="PASS" starttime="20210322 17:44:37.367" endtime="20210322 17:44:37.368"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${entry_key_value}</arg>
</arguments>
<msg timestamp="20210322 17:44:37.368" level="INFO">${entry_key_value} = luiz-henrique71@gomes.com</msg>
<status status="PASS" starttime="20210322 17:44:37.368" endtime="20210322 17:44:37.368"></status>
</kw>
<status status="PASS" starttime="20210322 17:44:36.671" endtime="20210322 17:44:37.368"></status>
</kw>
<kw name="validar chave pix" library="asserts">
<arguments>
<arg>key_status=waiting_ownership_verification</arg>
<arg>key_type=${type}</arg>
<arg>key_value=${value}</arg>
<arg>account_external_key=${account_external_key}</arg>
<arg>marketplace_external_key=${marketplace_external_key}</arg>
<arg>holder_external_key=${holder_external_key}</arg>
<arg>account_number=${account_number}</arg>
<arg>account_routing_number=${account_routing_number}</arg>
<arg>account_type=CACC</arg>
<arg>owner_key_name=${holder_name}</arg>
<arg>national_registration=${national_registration}</arg>
<arg>holder_type=${holder_type}</arg>
<arg>psp_code=19468242</arg>
<arg>psp_name=Zoop Tecnologia e Meios de Pagamento S.A.</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar status da chave</arg>
</arguments>
<msg timestamp="20210322 17:44:37.370" level="INFO">Validar status da chave</msg>
<status status="PASS" starttime="20210322 17:44:37.370" endtime="20210322 17:44:37.370"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["status"]}</arg>
<arg>${key_status}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:37.370" endtime="20210322 17:44:37.370"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando Tipo da chave PIX</arg>
</arguments>
<msg timestamp="20210322 17:44:37.371" level="INFO">Validando Tipo da chave PIX</msg>
<status status="PASS" starttime="20210322 17:44:37.371" endtime="20210322 17:44:37.371"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["key"]["type"]}</arg>
<arg>${key_type}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:37.371" endtime="20210322 17:44:37.371"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando Valor da chave PIX</arg>
</arguments>
<msg timestamp="20210322 17:44:37.371" level="INFO">Validando Valor da chave PIX</msg>
<status status="PASS" starttime="20210322 17:44:37.371" endtime="20210322 17:44:37.372"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${type}' == 'evp'</arg>
<arg>Should Not Be Empty</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' != 'evp'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${key_value}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${key_value}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:37.372" endtime="20210322 17:44:37.372"></status>
</kw>
<status status="PASS" starttime="20210322 17:44:37.372" endtime="20210322 17:44:37.373"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando dados da conta</arg>
</arguments>
<msg timestamp="20210322 17:44:37.373" level="INFO">Validando dados da conta</msg>
<status status="PASS" starttime="20210322 17:44:37.373" endtime="20210322 17:44:37.373"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["id"]}</arg>
<arg>${account_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:37.373" endtime="20210322 17:44:37.374"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["marketplace"]}</arg>
<arg>${marketplace_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:37.374" endtime="20210322 17:44:37.374"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["holder"]}</arg>
<arg>${holder_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:37.374" endtime="20210322 17:44:37.374"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["number"]}</arg>
<arg>${account_number}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:37.375" endtime="20210322 17:44:37.375"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["routing_number"]}</arg>
<arg>${account_routing_number}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:37.375" endtime="20210322 17:44:37.375"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["type"]}</arg>
<arg>${account_type}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:37.376" endtime="20210322 17:44:37.376"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar Proprietário da Account Owner</arg>
</arguments>
<msg timestamp="20210322 17:44:37.376" level="INFO">Validar Proprietário da Account Owner</msg>
<status status="PASS" starttime="20210322 17:44:37.376" endtime="20210322 17:44:37.376"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["account"]["owner"]["name"]}</arg>
<arg>${owner_key_name}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:37.377" endtime="20210322 17:44:37.377"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar national_registration da Account Owner</arg>
</arguments>
<msg timestamp="20210322 17:44:37.377" level="INFO">Validar national_registration da Account Owner</msg>
<status status="PASS" starttime="20210322 17:44:37.377" endtime="20210322 17:44:37.377"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["account"]["owner"]["national_registration"]}</arg>
<arg>${national_registration}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:37.377" endtime="20210322 17:44:37.378"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar Holder Type do Account Owner</arg>
</arguments>
<msg timestamp="20210322 17:44:37.378" level="INFO">Validar Holder Type do Account Owner</msg>
<status status="PASS" starttime="20210322 17:44:37.378" endtime="20210322 17:44:37.378"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["account"]["owner"]["type"]}</arg>
<arg>${holder_type}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:37.378" endtime="20210322 17:44:37.378"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar PSP</arg>
</arguments>
<msg timestamp="20210322 17:44:37.379" level="INFO">Validar PSP</msg>
<status status="PASS" starttime="20210322 17:44:37.378" endtime="20210322 17:44:37.379"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["psp"]["code"]}</arg>
<arg>${psp_code}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:37.379" endtime="20210322 17:44:37.379"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["psp"]["name"]}</arg>
<arg>${psp_name}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:37.379" endtime="20210322 17:44:37.380"></status>
</kw>
<status status="PASS" starttime="20210322 17:44:37.369" endtime="20210322 17:44:37.380"></status>
</kw>
<kw name="buscar verification code" library="pix_dict_verification_code">
<arguments>
<arg>holder_external_key=${holder_external_key}</arg>
<arg>account_external_key=${account_external_key}</arg>
<arg>entry_external_key=${entry_external_key}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 17:44:37.381" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 17:44:37.381" endtime="20210322 17:44:37.381"></status>
</kw>
<status status="PASS" starttime="20210322 17:44:37.380" endtime="20210322 17:44:37.381"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/admin/internal_operation/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries/${entry_external_key}/code</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:44:37.382" level="INFO">GET Request using : uri=/admin/internal_operation/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/a1a9a5c66f9848cfb018a5d6b10170aa/accounts/c9cbed301295447a96ef57b9ca10b72e/entries/1a638063cdbc453db9672f50ec749033/code, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 17:44:38.027" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 17:44:37.382" endtime="20210322 17:44:38.027"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:44:38.029" level="INFO">{'code': '6481'}</msg>
<status status="PASS" starttime="20210322 17:44:38.028" endtime="20210322 17:44:38.029"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:44:38.030" level="INFO">ddacd8afac2064b4</msg>
<status status="PASS" starttime="20210322 17:44:38.029" endtime="20210322 17:44:38.031"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 17:44:38.032" level="INFO">200</msg>
<status status="PASS" starttime="20210322 17:44:38.031" endtime="20210322 17:44:38.032"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:44:38.034" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 17:44:38.033" endtime="20210322 17:44:38.034"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["code"]}</arg>
</arguments>
<assign>
<var>${verification_code}</var>
</assign>
<msg timestamp="20210322 17:44:38.036" level="INFO">${verification_code} = 6481</msg>
<status status="PASS" starttime="20210322 17:44:38.035" endtime="20210322 17:44:38.037"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${verification_code}</arg>
</arguments>
<msg timestamp="20210322 17:44:38.038" level="INFO">${verification_code} = 6481</msg>
<status status="PASS" starttime="20210322 17:44:38.037" endtime="20210322 17:44:38.038"></status>
</kw>
<status status="PASS" starttime="20210322 17:44:37.380" endtime="20210322 17:44:38.039"></status>
</kw>
<kw name="confirmar propriedade da chave pix" library="pix_dict_confirm_propriety">
<arguments>
<arg>verification_code=${verification_code}</arg>
<arg>holder_external_key=${holder_external_key}</arg>
<arg>account_external_key=${account_external_key}</arg>
<arg>entry_external_key=${entry_external_key}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 17:44:38.043" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 17:44:38.043" endtime="20210322 17:44:38.044"></status>
</kw>
<status status="PASS" starttime="20210322 17:44:38.041" endtime="20210322 17:44:38.044"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:44:38.045" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 17:44:38.045" endtime="20210322 17:44:38.045"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"code": "${verification_code}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 17:44:38.046" level="INFO">${body} = { "code": "6481" }</msg>
<status status="PASS" starttime="20210322 17:44:38.046" endtime="20210322 17:44:38.047"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries/${entry_external_key}/ownership</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:44:38.048" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/a1a9a5c66f9848cfb018a5d6b10170aa/accounts/c9cbed301295447a96ef57b9ca10b72e/entries/1a638063cdbc453db9672f50ec749033/ownership, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "code": "6481" } 
json=None</msg>
<msg timestamp="20210322 17:44:39.653" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:44:38.047" endtime="20210322 17:44:39.654"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:44:39.656" level="INFO">{'id': '1a638063cdbc453db9672f50ec749033', 'status': 'active', 'created_at': '2021-03-22T05:44:38.553', 'updated_at': '2021-03-22T05:44:40.862', 'key': {'value': 'luiz-henrique71@gomes.com', 'type': 'email'}, 'account': {'id': 'c9cbed301295447a96ef57b9ca10b72e', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': 'a1a9a5c66f9848cfb018a5d6b10170aa', 'owner': {'name': 'Holder de teste', 'national_registration': '18530946251', 'type': 'individual'}, 'routing_number': '001', 'number': '4734674211', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}, 'resource': 'pix.entry'}</msg>
<status status="PASS" starttime="20210322 17:44:39.655" endtime="20210322 17:44:39.657"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:44:39.659" level="INFO">402f45a162d88ede</msg>
<status status="PASS" starttime="20210322 17:44:39.658" endtime="20210322 17:44:39.660"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 17:44:39.662" level="INFO">201</msg>
<status status="PASS" starttime="20210322 17:44:39.660" endtime="20210322 17:44:39.662"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:44:39.664" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:44:39.663" endtime="20210322 17:44:39.665"></status>
</kw>
<status status="PASS" starttime="20210322 17:44:38.040" endtime="20210322 17:44:39.665"></status>
</kw>
<kw name="validar chave pix" library="asserts">
<arguments>
<arg>key_status=active</arg>
<arg>key_type=${type}</arg>
<arg>key_value=${value}</arg>
<arg>account_external_key=${account_external_key}</arg>
<arg>marketplace_external_key=${marketplace_external_key}</arg>
<arg>holder_external_key=${holder_external_key}</arg>
<arg>account_number=${account_number}</arg>
<arg>account_routing_number=${account_routing_number}</arg>
<arg>account_type=CACC</arg>
<arg>owner_key_name=${holder_name}</arg>
<arg>national_registration=${national_registration}</arg>
<arg>holder_type=${holder_type}</arg>
<arg>psp_code=19468242</arg>
<arg>psp_name=Zoop Tecnologia e Meios de Pagamento S.A.</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar status da chave</arg>
</arguments>
<msg timestamp="20210322 17:44:39.669" level="INFO">Validar status da chave</msg>
<status status="PASS" starttime="20210322 17:44:39.669" endtime="20210322 17:44:39.669"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["status"]}</arg>
<arg>${key_status}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:39.670" endtime="20210322 17:44:39.671"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando Tipo da chave PIX</arg>
</arguments>
<msg timestamp="20210322 17:44:39.672" level="INFO">Validando Tipo da chave PIX</msg>
<status status="PASS" starttime="20210322 17:44:39.672" endtime="20210322 17:44:39.672"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["key"]["type"]}</arg>
<arg>${key_type}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:39.673" endtime="20210322 17:44:39.674"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando Valor da chave PIX</arg>
</arguments>
<msg timestamp="20210322 17:44:39.675" level="INFO">Validando Valor da chave PIX</msg>
<status status="PASS" starttime="20210322 17:44:39.674" endtime="20210322 17:44:39.675"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${type}' == 'evp'</arg>
<arg>Should Not Be Empty</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' != 'evp'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${key_value}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${key_value}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:39.677" endtime="20210322 17:44:39.678"></status>
</kw>
<status status="PASS" starttime="20210322 17:44:39.675" endtime="20210322 17:44:39.678"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando dados da conta</arg>
</arguments>
<msg timestamp="20210322 17:44:39.678" level="INFO">Validando dados da conta</msg>
<status status="PASS" starttime="20210322 17:44:39.678" endtime="20210322 17:44:39.678"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["id"]}</arg>
<arg>${account_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:39.679" endtime="20210322 17:44:39.680"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["marketplace"]}</arg>
<arg>${marketplace_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:39.680" endtime="20210322 17:44:39.681"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["holder"]}</arg>
<arg>${holder_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:39.681" endtime="20210322 17:44:39.682"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["number"]}</arg>
<arg>${account_number}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:39.682" endtime="20210322 17:44:39.683"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["routing_number"]}</arg>
<arg>${account_routing_number}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:39.684" endtime="20210322 17:44:39.685"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["type"]}</arg>
<arg>${account_type}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:39.685" endtime="20210322 17:44:39.686"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar Proprietário da Account Owner</arg>
</arguments>
<msg timestamp="20210322 17:44:39.687" level="INFO">Validar Proprietário da Account Owner</msg>
<status status="PASS" starttime="20210322 17:44:39.686" endtime="20210322 17:44:39.687"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["account"]["owner"]["name"]}</arg>
<arg>${owner_key_name}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:39.687" endtime="20210322 17:44:39.688"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar national_registration da Account Owner</arg>
</arguments>
<msg timestamp="20210322 17:44:39.689" level="INFO">Validar national_registration da Account Owner</msg>
<status status="PASS" starttime="20210322 17:44:39.688" endtime="20210322 17:44:39.689"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["account"]["owner"]["national_registration"]}</arg>
<arg>${national_registration}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:39.690" endtime="20210322 17:44:39.691"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar Holder Type do Account Owner</arg>
</arguments>
<msg timestamp="20210322 17:44:39.691" level="INFO">Validar Holder Type do Account Owner</msg>
<status status="PASS" starttime="20210322 17:44:39.691" endtime="20210322 17:44:39.692"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["account"]["owner"]["type"]}</arg>
<arg>${holder_type}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:39.692" endtime="20210322 17:44:39.693"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar PSP</arg>
</arguments>
<msg timestamp="20210322 17:44:39.693" level="INFO">Validar PSP</msg>
<status status="PASS" starttime="20210322 17:44:39.693" endtime="20210322 17:44:39.694"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["psp"]["code"]}</arg>
<arg>${psp_code}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:39.694" endtime="20210322 17:44:39.695"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["psp"]["name"]}</arg>
<arg>${psp_name}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:39.695" endtime="20210322 17:44:39.696"></status>
</kw>
<status status="PASS" starttime="20210322 17:44:39.666" endtime="20210322 17:44:39.696"></status>
</kw>
<doc>Fluxo de Exceção</doc>
<tags>
<tag>smoke_test</tag>
</tags>
<status status="PASS" starttime="20210322 17:44:33.321" endtime="20210322 17:44:39.696" critical="yes"></status>
</test>
<test id="s1-s1-s2-t3" name="Cenário: Reenviar código de verificação">
<kw name="Email" library="FakerLibrary">
<assign>
<var>${email_pix}</var>
</assign>
<msg timestamp="20210322 17:44:39.699" level="INFO">${email_pix} = carlos-eduardo02@barbosa.net</msg>
<status status="PASS" starttime="20210322 17:44:39.698" endtime="20210322 17:44:39.699"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${email_pix}</arg>
</arguments>
<msg timestamp="20210322 17:44:39.700" level="INFO">${email_pix} = carlos-eduardo02@barbosa.net</msg>
<status status="PASS" starttime="20210322 17:44:39.699" endtime="20210322 17:44:39.700"></status>
</kw>
<kw name="criar holder individual ativo" library="accreditation_create_holder_active">
<kw name="conectar accreditation" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accreditation</arg>
<arg>url=${accreditation_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 17:44:39.703" level="INFO">Creating Session using : alias=accreditation, url=https://banking-accreditation-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 17:44:39.702" endtime="20210322 17:44:39.703"></status>
</kw>
<status status="PASS" starttime="20210322 17:44:39.701" endtime="20210322 17:44:39.703"></status>
</kw>
<kw name="Cpf" library="FakerLibrary">
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 17:44:39.704" level="INFO">${national_registration} = 204.376.819-04</msg>
<status status="PASS" starttime="20210322 17:44:39.704" endtime="20210322 17:44:39.704"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${national_registration}</arg>
<arg>.</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 17:44:39.705" level="INFO">${national_registration} = 204376819-04</msg>
<status status="PASS" starttime="20210322 17:44:39.705" endtime="20210322 17:44:39.705"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${national_registration}</arg>
<arg>-</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 17:44:39.706" level="INFO">${national_registration} = 20437681904</msg>
<status status="PASS" starttime="20210322 17:44:39.706" endtime="20210322 17:44:39.706"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${national_registration}</arg>
</arguments>
<msg timestamp="20210322 17:44:39.707" level="INFO">${national_registration} = 20437681904</msg>
<status status="PASS" starttime="20210322 17:44:39.707" endtime="20210322 17:44:39.707"></status>
</kw>
<kw name="Rg" library="FakerLibrary">
<doc>Brazilian RG, return plain numbers.
Check:  https://www.ngmatematica.com/2014/02/como-determinar-o-digito-verificador-do.html</doc>
<assign>
<var>${identity_card}</var>
</assign>
<msg timestamp="20210322 17:44:39.708" level="INFO">${identity_card} = 751620488</msg>
<status status="PASS" starttime="20210322 17:44:39.708" endtime="20210322 17:44:39.708"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${identity_card}</arg>
</arguments>
<msg timestamp="20210322 17:44:39.709" level="INFO">${identity_card} = 751620488</msg>
<status status="PASS" starttime="20210322 17:44:39.709" endtime="20210322 17:44:39.709"></status>
</kw>
<kw name="criar holder individual" library="accreditation_post_holder_individual">
<arguments>
<arg>holder_type=individual</arg>
<arg>holder_name=${holder_name}</arg>
<arg>email=${email}</arg>
<arg>national_registration=${national_registration}</arg>
<arg>revenue=${revenue}</arg>
<arg>birthday=${birthday}</arg>
<arg>mothers_name=${mothers_name}</arg>
<arg>identity_card=${identity_card}</arg>
<arg>pep=false</arg>
<arg>cbo=${cbo}</arg>
</arguments>
<kw name="conectar accreditation" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accreditation</arg>
<arg>url=${accreditation_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 17:44:39.713" level="INFO">Creating Session using : alias=accreditation, url=https://banking-accreditation-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 17:44:39.712" endtime="20210322 17:44:39.713"></status>
</kw>
<status status="PASS" starttime="20210322 17:44:39.711" endtime="20210322 17:44:39.713"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_type}</arg>
</arguments>
<msg timestamp="20210322 17:44:39.714" level="INFO">${holder_type} = individual</msg>
<status status="PASS" starttime="20210322 17:44:39.714" endtime="20210322 17:44:39.715"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_name}</arg>
</arguments>
<msg timestamp="20210322 17:44:39.715" level="INFO">${holder_name} = Holder de teste</msg>
<status status="PASS" starttime="20210322 17:44:39.715" endtime="20210322 17:44:39.716"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:44:39.717" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 17:44:39.716" endtime="20210322 17:44:39.717"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "${holder_type}",</arg>
<arg>"name": "${holder_name}",</arg>
<arg>"email": "${email}",</arg>
<arg>"national_registration": "${national_registration}",</arg>
<arg>"revenue": ${revenue},</arg>
<arg>"birthday": "${birthday}",</arg>
<arg>"mothers_name": "${mothers_name}",</arg>
<arg>"identity_card": "${identity_card}",</arg>
<arg>"pep": false,</arg>
<arg>"cbo": ${cbo}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 17:44:39.719" level="INFO">${body} = { "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "20437681904", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder",...</msg>
<status status="PASS" starttime="20210322 17:44:39.717" endtime="20210322 17:44:39.719"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:44:39.720" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "20437681904", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder", "identity_card": "751620488", "pep": false, "cbo": 821450 } 
json=None</msg>
<msg timestamp="20210322 17:44:40.421" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:44:39.719" endtime="20210322 17:44:40.421"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:44:40.424" level="INFO">{'id': '47f33ebb2c5f4b7a9a6285047f7da2a7', 'name': 'Holder de teste', 'revenue': 5500.0, 'email': 'teste@teste.com.br', 'status': 'waiting_info_and_documents', 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'marketplace_name': 'Marketplace de Teste', 'created_at': '2021-03-22T17:44:41.606763', 'updated_at': '2021-03-22T17:44:41.606764', 'type': 'individual', 'national_registration': '20437681904', 'birthday': '1988-04-23', 'mothers_name': 'Mãe do Holder', 'identity_card': '751620488', 'pep': False, 'cbo': '821450', '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/47f33ebb2c5f4b7a9a6285047f7da2a7', 'type': 'GET'}, 'phones': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/47f33ebb2c5f4b7a9a6285047f7da2a7/phones', 'type': 'GET'}, 'addresses': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/47f33ebb2c5f4b7a9a6285047f7da2a7/addresses', 'type': 'GET'}, 'documents': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/47f33ebb2c5f4b7a9a6285047f7da2a7/documents', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 17:44:40.422" endtime="20210322 17:44:40.424"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:44:40.426" level="INFO">a6afef800a47e76b</msg>
<status status="PASS" starttime="20210322 17:44:40.425" endtime="20210322 17:44:40.427"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${body}</arg>
</arguments>
<msg timestamp="20210322 17:44:40.429" level="INFO">{ "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "20437681904", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder", "identity_card": "751620488", "pep": false, "cbo": 821450 }</msg>
<status status="PASS" starttime="20210322 17:44:40.428" endtime="20210322 17:44:40.430"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:44:40.433" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:44:40.432" endtime="20210322 17:44:40.434"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${holder_external_key}</var>
</assign>
<msg timestamp="20210322 17:44:40.438" level="INFO">${holder_external_key} = 47f33ebb2c5f4b7a9a6285047f7da2a7</msg>
<status status="PASS" starttime="20210322 17:44:40.435" endtime="20210322 17:44:40.438"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_external_key}</arg>
</arguments>
<msg timestamp="20210322 17:44:40.440" level="INFO">${holder_external_key} = 47f33ebb2c5f4b7a9a6285047f7da2a7</msg>
<status status="PASS" starttime="20210322 17:44:40.439" endtime="20210322 17:44:40.440"></status>
</kw>
<status status="PASS" starttime="20210322 17:44:39.710" endtime="20210322 17:44:40.440"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_name}</arg>
</arguments>
<msg timestamp="20210322 17:44:40.442" level="INFO">${holder_name} = Holder de teste</msg>
<status status="PASS" starttime="20210322 17:44:40.441" endtime="20210322 17:44:40.442"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 17:44:40.443" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:44:40.443" endtime="20210322 17:44:40.444"></status>
</kw>
<kw name="criar holder phone" library="accreditation_post_holder_phone">
<arguments>
<arg>21</arg>
<arg>51</arg>
<arg>996221236</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:44:40.446" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 17:44:40.445" endtime="20210322 17:44:40.446"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"area_code": "${phone_area_code}",</arg>
<arg>"country_code": "${phone_country_code}",</arg>
<arg>"number": "${phone_number}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 17:44:40.448" level="INFO">${body} = { "area_code": "21", "country_code": "51", "number": "996221236" }</msg>
<status status="PASS" starttime="20210322 17:44:40.447" endtime="20210322 17:44:40.448"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/phones</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:44:40.449" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/47f33ebb2c5f4b7a9a6285047f7da2a7/phones, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "area_code": "21", "country_code": "51", "number": "996221236" } 
json=None</msg>
<msg timestamp="20210322 17:44:40.691" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:44:40.448" endtime="20210322 17:44:40.691"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:44:40.694" level="INFO">{'id': '4b6c45b552bd4ae9b3b63d1524ff2c27', 'area_code': '21', 'country_code': '51', 'number': '996221236', 'main': True, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/47f33ebb2c5f4b7a9a6285047f7da2a7/phones/4b6c45b552bd4ae9b3b63d1524ff2c27', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/47f33ebb2c5f4b7a9a6285047f7da2a7', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 17:44:40.692" endtime="20210322 17:44:40.694"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:44:40.697" level="INFO">eea787c1d58061c2</msg>
<status status="PASS" starttime="20210322 17:44:40.695" endtime="20210322 17:44:40.697"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:44:40.699" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:44:40.698" endtime="20210322 17:44:40.699"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${phone_external_key}</var>
</assign>
<msg timestamp="20210322 17:44:40.701" level="INFO">${phone_external_key} = 4b6c45b552bd4ae9b3b63d1524ff2c27</msg>
<status status="PASS" starttime="20210322 17:44:40.699" endtime="20210322 17:44:40.701"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${phone_external_key}</arg>
</arguments>
<msg timestamp="20210322 17:44:40.702" level="INFO">${phone_external_key} = 4b6c45b552bd4ae9b3b63d1524ff2c27</msg>
<status status="PASS" starttime="20210322 17:44:40.701" endtime="20210322 17:44:40.702"></status>
</kw>
<status status="PASS" starttime="20210322 17:44:40.444" endtime="20210322 17:44:40.703"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 17:44:40.704" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:44:40.703" endtime="20210322 17:44:40.704"></status>
</kw>
<kw name="criar holder address" library="accreditation_post_holder_address">
<arguments>
<arg>Rio de Janeiro</arg>
<arg>Rio de Janeiro</arg>
<arg>Brasil</arg>
<arg>Bairro de Testes</arg>
<arg>Rua de Testes</arg>
<arg>90</arg>
<arg>apto 200</arg>
<arg>21550987</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:44:40.707" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 17:44:40.706" endtime="20210322 17:44:40.707"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"city": "${city}",</arg>
<arg>"state": "${state}",</arg>
<arg>"country": "${country}",</arg>
<arg>"neighborhood": "${neighborhood}",</arg>
<arg>"street": "${street}",</arg>
<arg>"number": "${number}",</arg>
<arg>"complement": "${complement}",</arg>
<arg>"postal_code": "${postal_code}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 17:44:40.708" level="INFO">${body} = { "city": "Rio de Janeiro", "state": "Rio de Janeiro", "country": "Brasil", "neighborhood": "Bairro de Testes", "street": "Rua de Testes", "number": "90", "complement": "apto 200", "postal_code": "215...</msg>
<status status="PASS" starttime="20210322 17:44:40.707" endtime="20210322 17:44:40.708"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/addresses</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:44:40.710" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/47f33ebb2c5f4b7a9a6285047f7da2a7/addresses, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "city": "Rio de Janeiro", "state": "Rio de Janeiro", "country": "Brasil", "neighborhood": "Bairro de Testes", "street": "Rua de Testes", "number": "90", "complement": "apto 200", "postal_code": "21550987" } 
json=None</msg>
<msg timestamp="20210322 17:44:40.940" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:44:40.709" endtime="20210322 17:44:40.940"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:44:40.941" level="INFO">{'id': 'a8ff247b0a2346539de8e152cd4d7824', 'street': 'Rua de Testes', 'number': '90', 'city': 'Rio de Janeiro', 'complement': 'apto 200', 'state': 'Rio de Janeiro', 'neighborhood': 'Bairro de Testes', 'postal_code': '21550987', 'country': 'Brasil', 'main': True, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/47f33ebb2c5f4b7a9a6285047f7da2a7/addresses/a8ff247b0a2346539de8e152cd4d7824', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/47f33ebb2c5f4b7a9a6285047f7da2a7', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 17:44:40.940" endtime="20210322 17:44:40.942"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:44:40.943" level="INFO">1cfb57be78e54f61</msg>
<status status="PASS" starttime="20210322 17:44:40.942" endtime="20210322 17:44:40.943"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:44:40.944" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:44:40.943" endtime="20210322 17:44:40.944"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${address_external_key}</var>
</assign>
<msg timestamp="20210322 17:44:40.945" level="INFO">${address_external_key} = a8ff247b0a2346539de8e152cd4d7824</msg>
<status status="PASS" starttime="20210322 17:44:40.944" endtime="20210322 17:44:40.945"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${address_external_key}</arg>
</arguments>
<msg timestamp="20210322 17:44:40.946" level="INFO">${address_external_key} = a8ff247b0a2346539de8e152cd4d7824</msg>
<status status="PASS" starttime="20210322 17:44:40.946" endtime="20210322 17:44:40.947"></status>
</kw>
<status status="PASS" starttime="20210322 17:44:40.705" endtime="20210322 17:44:40.947"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 17:44:40.948" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:44:40.947" endtime="20210322 17:44:40.948"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>SELFIE</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:44:40.950" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 17:44:40.950" endtime="20210322 17:44:40.950"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 17:44:40.951" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 17:44:40.953" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 17:44:40.951" endtime="20210322 17:44:40.953"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:44:40.955" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/47f33ebb2c5f4b7a9a6285047f7da2a7/documents?type=SELFIE, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 17:44:41.233" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:44:40.954" endtime="20210322 17:44:41.233"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:44:41.236" level="INFO">{'id': 'ebd85720a4384a62a4ab1b625eebb657', 'document_type': 'selfie', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/47f33ebb2c5f4b7a9a6285047f7da2a7/documents/ebd85720a4384a62a4ab1b625eebb657', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/47f33ebb2c5f4b7a9a6285047f7da2a7', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/47f33ebb2c5f4b7a9a6285047f7da2a7/documents/ebd85720a4384a62a4ab1b625eebb657/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 17:44:41.234" endtime="20210322 17:44:41.236"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:44:41.238" level="INFO">500eaeb66b79a149</msg>
<status status="PASS" starttime="20210322 17:44:41.237" endtime="20210322 17:44:41.239"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:44:41.241" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:44:41.240" endtime="20210322 17:44:41.241"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 17:44:41.244" level="INFO">${document_external_key} = ebd85720a4384a62a4ab1b625eebb657</msg>
<status status="PASS" starttime="20210322 17:44:41.242" endtime="20210322 17:44:41.244"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 17:44:41.246" level="INFO">${document_external_key} = ebd85720a4384a62a4ab1b625eebb657</msg>
<status status="PASS" starttime="20210322 17:44:41.245" endtime="20210322 17:44:41.246"></status>
</kw>
<status status="PASS" starttime="20210322 17:44:40.948" endtime="20210322 17:44:41.247"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 17:44:41.249" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:44:41.248" endtime="20210322 17:44:41.249"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>RG_FRENTE</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:44:41.252" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 17:44:41.251" endtime="20210322 17:44:41.252"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 17:44:41.253" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 17:44:41.255" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 17:44:41.252" endtime="20210322 17:44:41.255"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:44:41.257" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/47f33ebb2c5f4b7a9a6285047f7da2a7/documents?type=RG_FRENTE, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 17:44:41.665" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:44:41.256" endtime="20210322 17:44:41.665"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:44:41.668" level="INFO">{'id': '3fdddde8984f46aea32c21e0b636e357', 'document_type': 'rg_frente', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/47f33ebb2c5f4b7a9a6285047f7da2a7/documents/3fdddde8984f46aea32c21e0b636e357', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/47f33ebb2c5f4b7a9a6285047f7da2a7', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/47f33ebb2c5f4b7a9a6285047f7da2a7/documents/3fdddde8984f46aea32c21e0b636e357/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 17:44:41.666" endtime="20210322 17:44:41.668"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:44:41.670" level="INFO">2fbbc8f77170290b</msg>
<status status="PASS" starttime="20210322 17:44:41.669" endtime="20210322 17:44:41.671"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:44:41.672" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:44:41.671" endtime="20210322 17:44:41.672"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 17:44:41.674" level="INFO">${document_external_key} = 3fdddde8984f46aea32c21e0b636e357</msg>
<status status="PASS" starttime="20210322 17:44:41.673" endtime="20210322 17:44:41.674"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 17:44:41.675" level="INFO">${document_external_key} = 3fdddde8984f46aea32c21e0b636e357</msg>
<status status="PASS" starttime="20210322 17:44:41.675" endtime="20210322 17:44:41.675"></status>
</kw>
<status status="PASS" starttime="20210322 17:44:41.250" endtime="20210322 17:44:41.676"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 17:44:41.677" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:44:41.676" endtime="20210322 17:44:41.677"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>RG_VERSO</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:44:41.678" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 17:44:41.678" endtime="20210322 17:44:41.678"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 17:44:41.679" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 17:44:41.681" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 17:44:41.679" endtime="20210322 17:44:41.682"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:44:41.683" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/47f33ebb2c5f4b7a9a6285047f7da2a7/documents?type=RG_VERSO, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 17:44:41.943" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:44:41.682" endtime="20210322 17:44:41.943"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:44:41.946" level="INFO">{'id': 'e4e52abdbdd34ba5bf8ecca69a6cdb5c', 'document_type': 'rg_verso', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/47f33ebb2c5f4b7a9a6285047f7da2a7/documents/e4e52abdbdd34ba5bf8ecca69a6cdb5c', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/47f33ebb2c5f4b7a9a6285047f7da2a7', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/47f33ebb2c5f4b7a9a6285047f7da2a7/documents/e4e52abdbdd34ba5bf8ecca69a6cdb5c/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 17:44:41.944" endtime="20210322 17:44:41.947"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:44:41.949" level="INFO">f49eee6909a10723</msg>
<status status="PASS" starttime="20210322 17:44:41.947" endtime="20210322 17:44:41.949"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:44:41.952" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:44:41.950" endtime="20210322 17:44:41.952"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 17:44:41.955" level="INFO">${document_external_key} = e4e52abdbdd34ba5bf8ecca69a6cdb5c</msg>
<status status="PASS" starttime="20210322 17:44:41.953" endtime="20210322 17:44:41.955"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 17:44:41.956" level="INFO">${document_external_key} = e4e52abdbdd34ba5bf8ecca69a6cdb5c</msg>
<status status="PASS" starttime="20210322 17:44:41.956" endtime="20210322 17:44:41.958"></status>
</kw>
<status status="PASS" starttime="20210322 17:44:41.677" endtime="20210322 17:44:41.958"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 17:44:41.958" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:44:41.958" endtime="20210322 17:44:41.959"></status>
</kw>
<kw name="solicitar aprovação do holder" library="accreditation_request_approval">
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:44:41.962" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 17:44:41.960" endtime="20210322 17:44:41.962"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/approval</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:44:41.964" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/47f33ebb2c5f4b7a9a6285047f7da2a7/approval, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data=None 
json=None</msg>
<msg timestamp="20210322 17:44:42.260" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 17:44:41.962" endtime="20210322 17:44:42.261"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:44:42.263" level="INFO">{'message': 'Approval request accepted successfully. Processing analysis'}</msg>
<status status="PASS" starttime="20210322 17:44:42.261" endtime="20210322 17:44:42.263"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:44:42.266" level="INFO">ea11fa4993cb42e9</msg>
<status status="PASS" starttime="20210322 17:44:42.264" endtime="20210322 17:44:42.266"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:44:42.268" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 17:44:42.267" endtime="20210322 17:44:42.269"></status>
</kw>
<status status="PASS" starttime="20210322 17:44:41.959" endtime="20210322 17:44:42.269"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 17:44:42.271" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:44:42.270" endtime="20210322 17:44:42.271"></status>
</kw>
<kw name="recebendo notificação de aprovação" library="accreditation_risk_notification">
<kw name="Uuid 4" library="FakerLibrary">
<doc>Generates a random UUID4 string.
:param cast_to: Specify what type the UUID should be cast to. Default is `str`
:type cast_to: callable</doc>
<assign>
<var>${assessment_id}</var>
</assign>
<msg timestamp="20210322 17:44:42.273" level="INFO">${assessment_id} = bd4a69b0-1fe5-4b91-923f-86ca16e22cf4</msg>
<status status="PASS" starttime="20210322 17:44:42.272" endtime="20210322 17:44:42.273"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>year</arg>
</arguments>
<assign>
<var>${year}</var>
</assign>
<msg timestamp="20210322 17:44:42.274" level="INFO">${year} = 2021</msg>
<status status="PASS" starttime="20210322 17:44:42.274" endtime="20210322 17:44:42.274"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>month</arg>
</arguments>
<assign>
<var>${month}</var>
</assign>
<msg timestamp="20210322 17:44:42.276" level="INFO">${month} = 03</msg>
<status status="PASS" starttime="20210322 17:44:42.275" endtime="20210322 17:44:42.276"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>day</arg>
</arguments>
<assign>
<var>${day}</var>
</assign>
<msg timestamp="20210322 17:44:42.277" level="INFO">${day} = 22</msg>
<status status="PASS" starttime="20210322 17:44:42.277" endtime="20210322 17:44:42.278"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:44:42.279" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 17:44:42.278" endtime="20210322 17:44:42.279"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "risk.assessment.result",</arg>
<arg>"resource": "business.holder",</arg>
<arg>"created_at": "${year}-${month}-${day} 15:28:56.747Z",</arg>
<arg>"marketplace_id": "${marketplace_external_key}",</arg>
<arg>"object": {</arg>
<arg>"result": "APPROVED",</arg>
<arg>"holder_id": "${holder_external_key}",</arg>
<arg>"applicant_id": "${application_external_key}",</arg>
<arg>"assessment_id": "${assessment_id}"</arg>
<arg>}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 17:44:42.280" level="INFO">${body} = { "type": "risk.assessment.result", "resource": "business.holder", "created_at": "2021-03-22 15:28:56.747Z", "marketplace_id": "f71a8951368a4cc085cf7875ff44e61c", "object": { "result": "APPROVED", "ho...</msg>
<status status="PASS" starttime="20210322 17:44:42.279" endtime="20210322 17:44:42.280"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/admin/internal_operation/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/registration/approval</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:44:42.282" level="INFO">POST Request using : uri=/admin/internal_operation/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/47f33ebb2c5f4b7a9a6285047f7da2a7/registration/approval, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "risk.assessment.result", "resource": "business.holder", "created_at": "2021-03-22 15:28:56.747Z", "marketplace_id": "f71a8951368a4cc085cf7875ff44e61c", "object": { "result": "APPROVED", "holder_id": "47f33ebb2c5f4b7a9a6285047f7da2a7", "applicant_id": "bcc25a6751c14b52af1340d40dba78c5", "assessment_id": "bd4a69b0-1fe5-4b91-923f-86ca16e22cf4" } } 
json=None</msg>
<msg timestamp="20210322 17:44:42.484" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 17:44:42.281" endtime="20210322 17:44:42.484"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:44:42.487" level="INFO">{'message': 'Holder approved successfully'}</msg>
<status status="PASS" starttime="20210322 17:44:42.485" endtime="20210322 17:44:42.487"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:44:42.489" level="INFO">cee160dadcc88da9</msg>
<status status="PASS" starttime="20210322 17:44:42.488" endtime="20210322 17:44:42.490"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:44:42.493" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 17:44:42.491" endtime="20210322 17:44:42.493"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 17:44:42.494" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:44:42.494" endtime="20210322 17:44:42.495"></status>
</kw>
<status status="PASS" starttime="20210322 17:44:42.271" endtime="20210322 17:44:42.495"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 17:44:42.496" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:44:42.496" endtime="20210322 17:44:42.497"></status>
</kw>
<kw name="buscar account por holder" library="accounts_get_accounts_by_holder">
<kw name="conectar accounts" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accounts</arg>
<arg>url=${account_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 17:44:42.500" level="INFO">Creating Session using : alias=accounts, url=https://banking-accounts-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 17:44:42.499" endtime="20210322 17:44:42.501"></status>
</kw>
<status status="PASS" starttime="20210322 17:44:42.498" endtime="20210322 17:44:42.501"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accounts</arg>
<arg>/marketplaces/${marketplace_external_key}/holders/${holder_external_key}/accounts</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:44:42.503" level="INFO">GET Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/holders/47f33ebb2c5f4b7a9a6285047f7da2a7/accounts, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 17:44:43.167" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 17:44:42.502" endtime="20210322 17:44:43.167"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:44:43.169" level="INFO">{'items': [{'id': '6362e8e1345e446ab8b3c6c65c30b82b', 'holder': '47f33ebb2c5f4b7a9a6285047f7da2a7', 'balance': '0.00', 'currency': 'BRL', 'routing_number': '001', 'number': '4285655046', 'status': 'active', 'metadata': {}, 'created_at': '2021-03-22T20:44:43.666784', 'updated_at': '2021-03-22T20:44:43.666784', 'primary': True, 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'uri': '/v2/marketplaces/f71a8951368a4cc085cf7875ff44e61c/accounts/6362e8e1345e446ab8b3c6c65c30b82b', 'resource': 'payment_account'}], 'has_more': False, 'limit': 100, 'total_pages': 1, 'page': 1, 'offset': 0, 'total': '1', 'query_count': '1'}</msg>
<status status="PASS" starttime="20210322 17:44:43.168" endtime="20210322 17:44:43.169"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:44:43.170" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 17:44:43.169" endtime="20210322 17:44:43.170"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["id"]}</arg>
</arguments>
<assign>
<var>${account_external_key}</var>
</assign>
<msg timestamp="20210322 17:44:43.172" level="INFO">${account_external_key} = 6362e8e1345e446ab8b3c6c65c30b82b</msg>
<status status="PASS" starttime="20210322 17:44:43.171" endtime="20210322 17:44:43.172"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_external_key}</arg>
</arguments>
<msg timestamp="20210322 17:44:43.173" level="INFO">${account_external_key} = 6362e8e1345e446ab8b3c6c65c30b82b</msg>
<status status="PASS" starttime="20210322 17:44:43.172" endtime="20210322 17:44:43.173"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["number"]}</arg>
</arguments>
<assign>
<var>${account_number}</var>
</assign>
<msg timestamp="20210322 17:44:43.175" level="INFO">${account_number} = 4285655046</msg>
<status status="PASS" starttime="20210322 17:44:43.173" endtime="20210322 17:44:43.175"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_number}</arg>
</arguments>
<msg timestamp="20210322 17:44:43.176" level="INFO">${account_number} = 4285655046</msg>
<status status="PASS" starttime="20210322 17:44:43.175" endtime="20210322 17:44:43.176"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["routing_number"]}</arg>
</arguments>
<assign>
<var>${account_routing_number}</var>
</assign>
<msg timestamp="20210322 17:44:43.177" level="INFO">${account_routing_number} = 001</msg>
<status status="PASS" starttime="20210322 17:44:43.176" endtime="20210322 17:44:43.177"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_routing_number}</arg>
</arguments>
<msg timestamp="20210322 17:44:43.178" level="INFO">${account_routing_number} = 001</msg>
<status status="PASS" starttime="20210322 17:44:43.178" endtime="20210322 17:44:43.178"></status>
</kw>
<status status="PASS" starttime="20210322 17:44:42.497" endtime="20210322 17:44:43.179"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 17:44:43.179" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:44:43.179" endtime="20210322 17:44:43.180"></status>
</kw>
<status status="PASS" starttime="20210322 17:44:39.700" endtime="20210322 17:44:43.180"></status>
</kw>
<kw name="criar chave pix" library="pix_dict_create_entry">
<arguments>
<arg>type=email</arg>
<arg>value=${email_pix}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 17:44:43.182" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 17:44:43.181" endtime="20210322 17:44:43.182"></status>
</kw>
<status status="PASS" starttime="20210322 17:44:43.181" endtime="20210322 17:44:43.182"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${type}</arg>
</arguments>
<msg timestamp="20210322 17:44:43.183" level="INFO">${type} = email</msg>
<status status="PASS" starttime="20210322 17:44:43.183" endtime="20210322 17:44:43.183"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210322 17:44:43.184" level="INFO">${value} = carlos-eduardo02@barbosa.net</msg>
<status status="PASS" starttime="20210322 17:44:43.184" endtime="20210322 17:44:43.184"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:44:43.185" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 17:44:43.185" endtime="20210322 17:44:43.185"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "${type}",</arg>
<arg>"value": "${value}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 17:44:43.186" level="INFO">${body} = { "type": "email", "value": "carlos-eduardo02@barbosa.net" }</msg>
<status status="PASS" starttime="20210322 17:44:43.185" endtime="20210322 17:44:43.186"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:44:43.187" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/47f33ebb2c5f4b7a9a6285047f7da2a7/accounts/6362e8e1345e446ab8b3c6c65c30b82b/entries, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "email", "value": "carlos-eduardo02@barbosa.net" } 
json=None</msg>
<msg timestamp="20210322 17:44:44.011" level="INFO">${response} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20210322 17:44:43.186" endtime="20210322 17:44:44.011"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:44:44.013" level="INFO">{'id': 'b204b3a0432b467e825051532d61a5e9', 'status': 'waiting_ownership_verification', 'created_at': '2021-03-22T05:44:45.180', 'updated_at': '2021-03-22T05:44:45.180', 'key': {'value': 'carlos-eduardo02@barbosa.net', 'type': 'email'}, 'account': {'id': '6362e8e1345e446ab8b3c6c65c30b82b', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': '47f33ebb2c5f4b7a9a6285047f7da2a7', 'owner': {'name': 'Holder de teste', 'national_registration': '20437681904', 'type': 'individual'}, 'routing_number': '001', 'number': '4285655046', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}, 'resource': 'pix.entry'}</msg>
<status status="PASS" starttime="20210322 17:44:44.012" endtime="20210322 17:44:44.014"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:44:44.017" level="INFO">95d064b7b0ea297b</msg>
<status status="PASS" starttime="20210322 17:44:44.015" endtime="20210322 17:44:44.017"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 17:44:44.019" level="INFO">202</msg>
<status status="PASS" starttime="20210322 17:44:44.018" endtime="20210322 17:44:44.019"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:44:44.022" level="INFO">${response} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20210322 17:44:44.020" endtime="20210322 17:44:44.022"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${entry_external_key}</var>
</assign>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:44.025" endtime="20210322 17:44:44.026"></status>
</kw>
<msg timestamp="20210322 17:44:44.026" level="INFO">${entry_external_key} = b204b3a0432b467e825051532d61a5e9</msg>
<status status="PASS" starttime="20210322 17:44:44.023" endtime="20210322 17:44:44.026"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${entry_external_key}</arg>
</arguments>
<msg timestamp="20210322 17:44:44.028" level="INFO">${entry_external_key} = b204b3a0432b467e825051532d61a5e9</msg>
<status status="PASS" starttime="20210322 17:44:44.027" endtime="20210322 17:44:44.028"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["key"]["value"]}</arg>
</arguments>
<assign>
<var>${entry_key_value}</var>
</assign>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["key"]["value"]}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:44.030" endtime="20210322 17:44:44.032"></status>
</kw>
<msg timestamp="20210322 17:44:44.032" level="INFO">${entry_key_value} = carlos-eduardo02@barbosa.net</msg>
<status status="PASS" starttime="20210322 17:44:44.029" endtime="20210322 17:44:44.032"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${entry_key_value}</arg>
</arguments>
<msg timestamp="20210322 17:44:44.034" level="INFO">${entry_key_value} = carlos-eduardo02@barbosa.net</msg>
<status status="PASS" starttime="20210322 17:44:44.033" endtime="20210322 17:44:44.034"></status>
</kw>
<status status="PASS" starttime="20210322 17:44:43.180" endtime="20210322 17:44:44.035"></status>
</kw>
<kw name="validar chave pix" library="asserts">
<arguments>
<arg>key_status=waiting_ownership_verification</arg>
<arg>key_type=${type}</arg>
<arg>key_value=${value}</arg>
<arg>account_external_key=${account_external_key}</arg>
<arg>marketplace_external_key=${marketplace_external_key}</arg>
<arg>holder_external_key=${holder_external_key}</arg>
<arg>account_number=${account_number}</arg>
<arg>account_routing_number=${account_routing_number}</arg>
<arg>account_type=CACC</arg>
<arg>owner_key_name=${holder_name}</arg>
<arg>national_registration=${national_registration}</arg>
<arg>holder_type=${holder_type}</arg>
<arg>psp_code=19468242</arg>
<arg>psp_name=Zoop Tecnologia e Meios de Pagamento S.A.</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar status da chave</arg>
</arguments>
<msg timestamp="20210322 17:44:44.039" level="INFO">Validar status da chave</msg>
<status status="PASS" starttime="20210322 17:44:44.039" endtime="20210322 17:44:44.039"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["status"]}</arg>
<arg>${key_status}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:44.040" endtime="20210322 17:44:44.040"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando Tipo da chave PIX</arg>
</arguments>
<msg timestamp="20210322 17:44:44.041" level="INFO">Validando Tipo da chave PIX</msg>
<status status="PASS" starttime="20210322 17:44:44.041" endtime="20210322 17:44:44.041"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["key"]["type"]}</arg>
<arg>${key_type}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:44.042" endtime="20210322 17:44:44.042"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando Valor da chave PIX</arg>
</arguments>
<msg timestamp="20210322 17:44:44.043" level="INFO">Validando Valor da chave PIX</msg>
<status status="PASS" starttime="20210322 17:44:44.043" endtime="20210322 17:44:44.043"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${type}' == 'evp'</arg>
<arg>Should Not Be Empty</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' != 'evp'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${key_value}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${key_value}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:44.044" endtime="20210322 17:44:44.045"></status>
</kw>
<status status="PASS" starttime="20210322 17:44:44.043" endtime="20210322 17:44:44.045"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando dados da conta</arg>
</arguments>
<msg timestamp="20210322 17:44:44.046" level="INFO">Validando dados da conta</msg>
<status status="PASS" starttime="20210322 17:44:44.045" endtime="20210322 17:44:44.046"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["id"]}</arg>
<arg>${account_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:44.046" endtime="20210322 17:44:44.047"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["marketplace"]}</arg>
<arg>${marketplace_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:44.047" endtime="20210322 17:44:44.048"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["holder"]}</arg>
<arg>${holder_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:44.048" endtime="20210322 17:44:44.049"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["number"]}</arg>
<arg>${account_number}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:44.049" endtime="20210322 17:44:44.050"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["routing_number"]}</arg>
<arg>${account_routing_number}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:44.050" endtime="20210322 17:44:44.051"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["type"]}</arg>
<arg>${account_type}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:44.051" endtime="20210322 17:44:44.052"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar Proprietário da Account Owner</arg>
</arguments>
<msg timestamp="20210322 17:44:44.053" level="INFO">Validar Proprietário da Account Owner</msg>
<status status="PASS" starttime="20210322 17:44:44.052" endtime="20210322 17:44:44.053"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["account"]["owner"]["name"]}</arg>
<arg>${owner_key_name}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:44.053" endtime="20210322 17:44:44.054"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar national_registration da Account Owner</arg>
</arguments>
<msg timestamp="20210322 17:44:44.054" level="INFO">Validar national_registration da Account Owner</msg>
<status status="PASS" starttime="20210322 17:44:44.054" endtime="20210322 17:44:44.055"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["account"]["owner"]["national_registration"]}</arg>
<arg>${national_registration}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:44.055" endtime="20210322 17:44:44.056"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar Holder Type do Account Owner</arg>
</arguments>
<msg timestamp="20210322 17:44:44.057" level="INFO">Validar Holder Type do Account Owner</msg>
<status status="PASS" starttime="20210322 17:44:44.056" endtime="20210322 17:44:44.057"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["account"]["owner"]["type"]}</arg>
<arg>${holder_type}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:44.057" endtime="20210322 17:44:44.057"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar PSP</arg>
</arguments>
<msg timestamp="20210322 17:44:44.058" level="INFO">Validar PSP</msg>
<status status="PASS" starttime="20210322 17:44:44.058" endtime="20210322 17:44:44.058"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["psp"]["code"]}</arg>
<arg>${psp_code}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:44.058" endtime="20210322 17:44:44.059"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["psp"]["name"]}</arg>
<arg>${psp_name}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:44.059" endtime="20210322 17:44:44.060"></status>
</kw>
<status status="PASS" starttime="20210322 17:44:44.036" endtime="20210322 17:44:44.060"></status>
</kw>
<kw name="reenviar verification code" library="pix_dict_resend_verification_code">
<arguments>
<arg>holder_external_key=${holder_external_key}</arg>
<arg>account_external_key=${account_external_key}</arg>
<arg>entry_external_key=${entry_external_key}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 17:44:44.063" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 17:44:44.062" endtime="20210322 17:44:44.063"></status>
</kw>
<status status="PASS" starttime="20210322 17:44:44.062" endtime="20210322 17:44:44.063"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:44:44.064" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 17:44:44.064" endtime="20210322 17:44:44.064"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries/${entry_external_key}/ownership/resend</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:44:44.065" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/47f33ebb2c5f4b7a9a6285047f7da2a7/accounts/6362e8e1345e446ab8b3c6c65c30b82b/entries/b204b3a0432b467e825051532d61a5e9/ownership/resend, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data=None 
json=None</msg>
<msg timestamp="20210322 17:44:44.757" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 17:44:44.065" endtime="20210322 17:44:44.757"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:44:44.758" level="INFO">{'message': 'Ownership verification code recreated and sent successfully'}</msg>
<status status="PASS" starttime="20210322 17:44:44.757" endtime="20210322 17:44:44.758"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:44:44.759" level="INFO">ae224bf4fa81a914</msg>
<status status="PASS" starttime="20210322 17:44:44.758" endtime="20210322 17:44:44.759"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 17:44:44.760" level="INFO">200</msg>
<status status="PASS" starttime="20210322 17:44:44.759" endtime="20210322 17:44:44.760"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:44:44.761" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 17:44:44.760" endtime="20210322 17:44:44.761"></status>
</kw>
<status status="PASS" starttime="20210322 17:44:44.061" endtime="20210322 17:44:44.761"></status>
</kw>
<kw name="validar reenvio do codigo de verificação" library="asserts">
<arguments>
<arg>message=Ownership verification code recreated and sent successfully</arg>
</arguments>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 17:44:44.763" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:44:44.762" endtime="20210322 17:44:44.763"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["message"]}</arg>
<arg>${message}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:44.763" endtime="20210322 17:44:44.764"></status>
</kw>
<status status="PASS" starttime="20210322 17:44:44.762" endtime="20210322 17:44:44.764"></status>
</kw>
<kw name="buscar verification code" library="pix_dict_verification_code">
<arguments>
<arg>holder_external_key=${holder_external_key}</arg>
<arg>account_external_key=${account_external_key}</arg>
<arg>entry_external_key=${entry_external_key}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 17:44:44.766" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 17:44:44.766" endtime="20210322 17:44:44.767"></status>
</kw>
<status status="PASS" starttime="20210322 17:44:44.765" endtime="20210322 17:44:44.767"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/admin/internal_operation/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries/${entry_external_key}/code</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:44:44.768" level="INFO">GET Request using : uri=/admin/internal_operation/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/47f33ebb2c5f4b7a9a6285047f7da2a7/accounts/6362e8e1345e446ab8b3c6c65c30b82b/entries/b204b3a0432b467e825051532d61a5e9/code, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 17:44:45.426" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 17:44:44.768" endtime="20210322 17:44:45.426"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:44:45.426" level="INFO">{'code': '0021'}</msg>
<status status="PASS" starttime="20210322 17:44:45.426" endtime="20210322 17:44:45.426"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:44:45.427" level="INFO">f4b166532f998aad</msg>
<status status="PASS" starttime="20210322 17:44:45.427" endtime="20210322 17:44:45.427"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 17:44:45.427" level="INFO">200</msg>
<status status="PASS" starttime="20210322 17:44:45.427" endtime="20210322 17:44:45.428"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:44:45.428" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 17:44:45.428" endtime="20210322 17:44:45.428"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["code"]}</arg>
</arguments>
<assign>
<var>${verification_code}</var>
</assign>
<msg timestamp="20210322 17:44:45.429" level="INFO">${verification_code} = 0021</msg>
<status status="PASS" starttime="20210322 17:44:45.428" endtime="20210322 17:44:45.429"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${verification_code}</arg>
</arguments>
<msg timestamp="20210322 17:44:45.429" level="INFO">${verification_code} = 0021</msg>
<status status="PASS" starttime="20210322 17:44:45.429" endtime="20210322 17:44:45.429"></status>
</kw>
<status status="PASS" starttime="20210322 17:44:44.764" endtime="20210322 17:44:45.430"></status>
</kw>
<kw name="confirmar propriedade da chave pix" library="pix_dict_confirm_propriety">
<arguments>
<arg>verification_code=${verification_code}</arg>
<arg>holder_external_key=${holder_external_key}</arg>
<arg>account_external_key=${account_external_key}</arg>
<arg>entry_external_key=${entry_external_key}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 17:44:45.432" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 17:44:45.432" endtime="20210322 17:44:45.432"></status>
</kw>
<status status="PASS" starttime="20210322 17:44:45.431" endtime="20210322 17:44:45.432"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:44:45.433" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 17:44:45.433" endtime="20210322 17:44:45.433"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"code": "${verification_code}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 17:44:45.433" level="INFO">${body} = { "code": "0021" }</msg>
<status status="PASS" starttime="20210322 17:44:45.433" endtime="20210322 17:44:45.434"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries/${entry_external_key}/ownership</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:44:45.435" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/47f33ebb2c5f4b7a9a6285047f7da2a7/accounts/6362e8e1345e446ab8b3c6c65c30b82b/entries/b204b3a0432b467e825051532d61a5e9/ownership, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "code": "0021" } 
json=None</msg>
<msg timestamp="20210322 17:44:46.889" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:44:45.434" endtime="20210322 17:44:46.889"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:44:46.892" level="INFO">{'id': 'b204b3a0432b467e825051532d61a5e9', 'status': 'active', 'created_at': '2021-03-22T05:44:45.180', 'updated_at': '2021-03-22T05:44:48.105', 'key': {'value': 'carlos-eduardo02@barbosa.net', 'type': 'email'}, 'account': {'id': '6362e8e1345e446ab8b3c6c65c30b82b', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': '47f33ebb2c5f4b7a9a6285047f7da2a7', 'owner': {'name': 'Holder de teste', 'national_registration': '20437681904', 'type': 'individual'}, 'routing_number': '001', 'number': '4285655046', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}, 'resource': 'pix.entry'}</msg>
<status status="PASS" starttime="20210322 17:44:46.890" endtime="20210322 17:44:46.892"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:44:46.894" level="INFO">6e99aad6ffd77ad0</msg>
<status status="PASS" starttime="20210322 17:44:46.893" endtime="20210322 17:44:46.894"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 17:44:46.896" level="INFO">201</msg>
<status status="PASS" starttime="20210322 17:44:46.895" endtime="20210322 17:44:46.897"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:44:46.899" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:44:46.897" endtime="20210322 17:44:46.899"></status>
</kw>
<status status="PASS" starttime="20210322 17:44:45.430" endtime="20210322 17:44:46.899"></status>
</kw>
<kw name="validar chave pix" library="asserts">
<arguments>
<arg>key_status=active</arg>
<arg>key_type=${type}</arg>
<arg>key_value=${value}</arg>
<arg>account_external_key=${account_external_key}</arg>
<arg>marketplace_external_key=${marketplace_external_key}</arg>
<arg>holder_external_key=${holder_external_key}</arg>
<arg>account_number=${account_number}</arg>
<arg>account_routing_number=${account_routing_number}</arg>
<arg>account_type=CACC</arg>
<arg>owner_key_name=${holder_name}</arg>
<arg>national_registration=${national_registration}</arg>
<arg>holder_type=${holder_type}</arg>
<arg>psp_code=19468242</arg>
<arg>psp_name=Zoop Tecnologia e Meios de Pagamento S.A.</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar status da chave</arg>
</arguments>
<msg timestamp="20210322 17:44:46.905" level="INFO">Validar status da chave</msg>
<status status="PASS" starttime="20210322 17:44:46.904" endtime="20210322 17:44:46.905"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["status"]}</arg>
<arg>${key_status}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:46.906" endtime="20210322 17:44:46.907"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando Tipo da chave PIX</arg>
</arguments>
<msg timestamp="20210322 17:44:46.908" level="INFO">Validando Tipo da chave PIX</msg>
<status status="PASS" starttime="20210322 17:44:46.908" endtime="20210322 17:44:46.908"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["key"]["type"]}</arg>
<arg>${key_type}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:46.909" endtime="20210322 17:44:46.910"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando Valor da chave PIX</arg>
</arguments>
<msg timestamp="20210322 17:44:46.911" level="INFO">Validando Valor da chave PIX</msg>
<status status="PASS" starttime="20210322 17:44:46.910" endtime="20210322 17:44:46.911"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${type}' == 'evp'</arg>
<arg>Should Not Be Empty</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' != 'evp'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${key_value}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${key_value}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:46.913" endtime="20210322 17:44:46.914"></status>
</kw>
<status status="PASS" starttime="20210322 17:44:46.912" endtime="20210322 17:44:46.914"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando dados da conta</arg>
</arguments>
<msg timestamp="20210322 17:44:46.915" level="INFO">Validando dados da conta</msg>
<status status="PASS" starttime="20210322 17:44:46.915" endtime="20210322 17:44:46.915"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["id"]}</arg>
<arg>${account_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:46.916" endtime="20210322 17:44:46.917"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["marketplace"]}</arg>
<arg>${marketplace_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:46.917" endtime="20210322 17:44:46.918"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["holder"]}</arg>
<arg>${holder_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:46.919" endtime="20210322 17:44:46.919"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["number"]}</arg>
<arg>${account_number}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:46.920" endtime="20210322 17:44:46.921"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["routing_number"]}</arg>
<arg>${account_routing_number}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:46.921" endtime="20210322 17:44:46.922"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["type"]}</arg>
<arg>${account_type}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:46.922" endtime="20210322 17:44:46.923"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar Proprietário da Account Owner</arg>
</arguments>
<msg timestamp="20210322 17:44:46.924" level="INFO">Validar Proprietário da Account Owner</msg>
<status status="PASS" starttime="20210322 17:44:46.924" endtime="20210322 17:44:46.924"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["account"]["owner"]["name"]}</arg>
<arg>${owner_key_name}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:46.924" endtime="20210322 17:44:46.925"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar national_registration da Account Owner</arg>
</arguments>
<msg timestamp="20210322 17:44:46.926" level="INFO">Validar national_registration da Account Owner</msg>
<status status="PASS" starttime="20210322 17:44:46.926" endtime="20210322 17:44:46.926"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["account"]["owner"]["national_registration"]}</arg>
<arg>${national_registration}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:46.926" endtime="20210322 17:44:46.927"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar Holder Type do Account Owner</arg>
</arguments>
<msg timestamp="20210322 17:44:46.928" level="INFO">Validar Holder Type do Account Owner</msg>
<status status="PASS" starttime="20210322 17:44:46.928" endtime="20210322 17:44:46.928"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["account"]["owner"]["type"]}</arg>
<arg>${holder_type}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:46.928" endtime="20210322 17:44:46.929"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar PSP</arg>
</arguments>
<msg timestamp="20210322 17:44:46.930" level="INFO">Validar PSP</msg>
<status status="PASS" starttime="20210322 17:44:46.930" endtime="20210322 17:44:46.930"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["psp"]["code"]}</arg>
<arg>${psp_code}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:46.931" endtime="20210322 17:44:46.931"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["psp"]["name"]}</arg>
<arg>${psp_name}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:46.932" endtime="20210322 17:44:46.933"></status>
</kw>
<status status="PASS" starttime="20210322 17:44:46.900" endtime="20210322 17:44:46.933"></status>
</kw>
<doc>Fluxo Alternativo</doc>
<tags>
<tag>smoke_test</tag>
</tags>
<status status="PASS" starttime="20210322 17:44:39.697" endtime="20210322 17:44:46.933" critical="yes"></status>
</test>
<test id="s1-s1-s2-t4" name="Cenário: Confirmar proprierdade de de chave de endereçamento utilizando o código de verificação inválido">
<kw name="Random Number" library="FakerLibrary">
<doc>Returns a random number with 1 digit (default, when digits==None),
a random number with 0 to given number of digits, or a random number
with given number to given number of digits (when ``fix_len==True``).</doc>
<arguments>
<arg>digits=8</arg>
<arg>fix_len=True</arg>
</arguments>
<assign>
<var>${phone}</var>
</assign>
<msg timestamp="20210322 17:44:46.937" level="INFO">${phone} = 48593924</msg>
<status status="PASS" starttime="20210322 17:44:46.936" endtime="20210322 17:44:46.937"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>+55219${phone}</arg>
</arguments>
<assign>
<var>${phone_pix}</var>
</assign>
<msg timestamp="20210322 17:44:46.938" level="INFO">${phone_pix} = +5521948593924</msg>
<status status="PASS" starttime="20210322 17:44:46.937" endtime="20210322 17:44:46.938"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${phone_pix}</arg>
</arguments>
<msg timestamp="20210322 17:44:46.939" level="INFO">${phone_pix} = +5521948593924</msg>
<status status="PASS" starttime="20210322 17:44:46.938" endtime="20210322 17:44:46.939"></status>
</kw>
<kw name="criar holder individual ativo" library="accreditation_create_holder_active">
<kw name="conectar accreditation" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accreditation</arg>
<arg>url=${accreditation_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 17:44:46.941" level="INFO">Creating Session using : alias=accreditation, url=https://banking-accreditation-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 17:44:46.940" endtime="20210322 17:44:46.941"></status>
</kw>
<status status="PASS" starttime="20210322 17:44:46.940" endtime="20210322 17:44:46.942"></status>
</kw>
<kw name="Cpf" library="FakerLibrary">
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 17:44:46.943" level="INFO">${national_registration} = 956.018.743-01</msg>
<status status="PASS" starttime="20210322 17:44:46.942" endtime="20210322 17:44:46.943"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${national_registration}</arg>
<arg>.</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 17:44:46.944" level="INFO">${national_registration} = 956018743-01</msg>
<status status="PASS" starttime="20210322 17:44:46.943" endtime="20210322 17:44:46.944"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${national_registration}</arg>
<arg>-</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 17:44:46.945" level="INFO">${national_registration} = 95601874301</msg>
<status status="PASS" starttime="20210322 17:44:46.944" endtime="20210322 17:44:46.945"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${national_registration}</arg>
</arguments>
<msg timestamp="20210322 17:44:46.946" level="INFO">${national_registration} = 95601874301</msg>
<status status="PASS" starttime="20210322 17:44:46.945" endtime="20210322 17:44:46.946"></status>
</kw>
<kw name="Rg" library="FakerLibrary">
<doc>Brazilian RG, return plain numbers.
Check:  https://www.ngmatematica.com/2014/02/como-determinar-o-digito-verificador-do.html</doc>
<assign>
<var>${identity_card}</var>
</assign>
<msg timestamp="20210322 17:44:46.947" level="INFO">${identity_card} = 451207865</msg>
<status status="PASS" starttime="20210322 17:44:46.947" endtime="20210322 17:44:46.947"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${identity_card}</arg>
</arguments>
<msg timestamp="20210322 17:44:46.948" level="INFO">${identity_card} = 451207865</msg>
<status status="PASS" starttime="20210322 17:44:46.948" endtime="20210322 17:44:46.948"></status>
</kw>
<kw name="criar holder individual" library="accreditation_post_holder_individual">
<arguments>
<arg>holder_type=individual</arg>
<arg>holder_name=${holder_name}</arg>
<arg>email=${email}</arg>
<arg>national_registration=${national_registration}</arg>
<arg>revenue=${revenue}</arg>
<arg>birthday=${birthday}</arg>
<arg>mothers_name=${mothers_name}</arg>
<arg>identity_card=${identity_card}</arg>
<arg>pep=false</arg>
<arg>cbo=${cbo}</arg>
</arguments>
<kw name="conectar accreditation" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accreditation</arg>
<arg>url=${accreditation_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 17:44:46.952" level="INFO">Creating Session using : alias=accreditation, url=https://banking-accreditation-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 17:44:46.951" endtime="20210322 17:44:46.952"></status>
</kw>
<status status="PASS" starttime="20210322 17:44:46.950" endtime="20210322 17:44:46.953"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_type}</arg>
</arguments>
<msg timestamp="20210322 17:44:46.953" level="INFO">${holder_type} = individual</msg>
<status status="PASS" starttime="20210322 17:44:46.953" endtime="20210322 17:44:46.954"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_name}</arg>
</arguments>
<msg timestamp="20210322 17:44:46.955" level="INFO">${holder_name} = Holder de teste</msg>
<status status="PASS" starttime="20210322 17:44:46.954" endtime="20210322 17:44:46.955"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:44:46.956" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 17:44:46.955" endtime="20210322 17:44:46.956"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "${holder_type}",</arg>
<arg>"name": "${holder_name}",</arg>
<arg>"email": "${email}",</arg>
<arg>"national_registration": "${national_registration}",</arg>
<arg>"revenue": ${revenue},</arg>
<arg>"birthday": "${birthday}",</arg>
<arg>"mothers_name": "${mothers_name}",</arg>
<arg>"identity_card": "${identity_card}",</arg>
<arg>"pep": false,</arg>
<arg>"cbo": ${cbo}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 17:44:46.957" level="INFO">${body} = { "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "95601874301", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder",...</msg>
<status status="PASS" starttime="20210322 17:44:46.956" endtime="20210322 17:44:46.957"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:44:46.958" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "95601874301", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder", "identity_card": "451207865", "pep": false, "cbo": 821450 } 
json=None</msg>
<msg timestamp="20210322 17:44:47.623" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:44:46.958" endtime="20210322 17:44:47.623"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:44:47.626" level="INFO">{'id': '03c9e905ce804e2b9235d1dd6e739fed', 'name': 'Holder de teste', 'revenue': 5500.0, 'email': 'teste@teste.com.br', 'status': 'waiting_info_and_documents', 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'marketplace_name': 'Marketplace de Teste', 'created_at': '2021-03-22T17:44:48.80367', 'updated_at': '2021-03-22T17:44:48.803671', 'type': 'individual', 'national_registration': '95601874301', 'birthday': '1988-04-23', 'mothers_name': 'Mãe do Holder', 'identity_card': '451207865', 'pep': False, 'cbo': '821450', '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/03c9e905ce804e2b9235d1dd6e739fed', 'type': 'GET'}, 'phones': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/03c9e905ce804e2b9235d1dd6e739fed/phones', 'type': 'GET'}, 'addresses': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/03c9e905ce804e2b9235d1dd6e739fed/addresses', 'type': 'GET'}, 'documents': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/03c9e905ce804e2b9235d1dd6e739fed/documents', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 17:44:47.624" endtime="20210322 17:44:47.626"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:44:47.629" level="INFO">eda0ba0f433eef37</msg>
<status status="PASS" starttime="20210322 17:44:47.627" endtime="20210322 17:44:47.629"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${body}</arg>
</arguments>
<msg timestamp="20210322 17:44:47.631" level="INFO">{ "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "95601874301", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder", "identity_card": "451207865", "pep": false, "cbo": 821450 }</msg>
<status status="PASS" starttime="20210322 17:44:47.630" endtime="20210322 17:44:47.631"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:44:47.634" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:44:47.632" endtime="20210322 17:44:47.634"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${holder_external_key}</var>
</assign>
<msg timestamp="20210322 17:44:47.637" level="INFO">${holder_external_key} = 03c9e905ce804e2b9235d1dd6e739fed</msg>
<status status="PASS" starttime="20210322 17:44:47.635" endtime="20210322 17:44:47.637"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_external_key}</arg>
</arguments>
<msg timestamp="20210322 17:44:47.638" level="INFO">${holder_external_key} = 03c9e905ce804e2b9235d1dd6e739fed</msg>
<status status="PASS" starttime="20210322 17:44:47.638" endtime="20210322 17:44:47.639"></status>
</kw>
<status status="PASS" starttime="20210322 17:44:46.949" endtime="20210322 17:44:47.639"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_name}</arg>
</arguments>
<msg timestamp="20210322 17:44:47.641" level="INFO">${holder_name} = Holder de teste</msg>
<status status="PASS" starttime="20210322 17:44:47.640" endtime="20210322 17:44:47.641"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 17:44:47.642" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:44:47.641" endtime="20210322 17:44:47.642"></status>
</kw>
<kw name="criar holder phone" library="accreditation_post_holder_phone">
<arguments>
<arg>21</arg>
<arg>51</arg>
<arg>996221236</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:44:47.645" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 17:44:47.644" endtime="20210322 17:44:47.645"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"area_code": "${phone_area_code}",</arg>
<arg>"country_code": "${phone_country_code}",</arg>
<arg>"number": "${phone_number}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 17:44:47.646" level="INFO">${body} = { "area_code": "21", "country_code": "51", "number": "996221236" }</msg>
<status status="PASS" starttime="20210322 17:44:47.646" endtime="20210322 17:44:47.646"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/phones</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:44:47.647" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/03c9e905ce804e2b9235d1dd6e739fed/phones, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "area_code": "21", "country_code": "51", "number": "996221236" } 
json=None</msg>
<msg timestamp="20210322 17:44:47.872" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:44:47.647" endtime="20210322 17:44:47.872"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:44:47.875" level="INFO">{'id': '8325ffccfa704c5ca2bf97aaad4cfb53', 'area_code': '21', 'country_code': '51', 'number': '996221236', 'main': True, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/03c9e905ce804e2b9235d1dd6e739fed/phones/8325ffccfa704c5ca2bf97aaad4cfb53', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/03c9e905ce804e2b9235d1dd6e739fed', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 17:44:47.873" endtime="20210322 17:44:47.875"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:44:47.877" level="INFO">11b053d3a6d7c240</msg>
<status status="PASS" starttime="20210322 17:44:47.876" endtime="20210322 17:44:47.878"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:44:47.880" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:44:47.879" endtime="20210322 17:44:47.880"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${phone_external_key}</var>
</assign>
<msg timestamp="20210322 17:44:47.883" level="INFO">${phone_external_key} = 8325ffccfa704c5ca2bf97aaad4cfb53</msg>
<status status="PASS" starttime="20210322 17:44:47.881" endtime="20210322 17:44:47.883"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${phone_external_key}</arg>
</arguments>
<msg timestamp="20210322 17:44:47.885" level="INFO">${phone_external_key} = 8325ffccfa704c5ca2bf97aaad4cfb53</msg>
<status status="PASS" starttime="20210322 17:44:47.884" endtime="20210322 17:44:47.885"></status>
</kw>
<status status="PASS" starttime="20210322 17:44:47.643" endtime="20210322 17:44:47.885"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 17:44:47.886" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:44:47.886" endtime="20210322 17:44:47.887"></status>
</kw>
<kw name="criar holder address" library="accreditation_post_holder_address">
<arguments>
<arg>Rio de Janeiro</arg>
<arg>Rio de Janeiro</arg>
<arg>Brasil</arg>
<arg>Bairro de Testes</arg>
<arg>Rua de Testes</arg>
<arg>90</arg>
<arg>apto 200</arg>
<arg>21550987</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:44:47.889" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 17:44:47.888" endtime="20210322 17:44:47.889"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"city": "${city}",</arg>
<arg>"state": "${state}",</arg>
<arg>"country": "${country}",</arg>
<arg>"neighborhood": "${neighborhood}",</arg>
<arg>"street": "${street}",</arg>
<arg>"number": "${number}",</arg>
<arg>"complement": "${complement}",</arg>
<arg>"postal_code": "${postal_code}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 17:44:47.890" level="INFO">${body} = { "city": "Rio de Janeiro", "state": "Rio de Janeiro", "country": "Brasil", "neighborhood": "Bairro de Testes", "street": "Rua de Testes", "number": "90", "complement": "apto 200", "postal_code": "215...</msg>
<status status="PASS" starttime="20210322 17:44:47.889" endtime="20210322 17:44:47.891"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/addresses</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:44:47.892" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/03c9e905ce804e2b9235d1dd6e739fed/addresses, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "city": "Rio de Janeiro", "state": "Rio de Janeiro", "country": "Brasil", "neighborhood": "Bairro de Testes", "street": "Rua de Testes", "number": "90", "complement": "apto 200", "postal_code": "21550987" } 
json=None</msg>
<msg timestamp="20210322 17:44:48.117" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:44:47.891" endtime="20210322 17:44:48.117"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:44:48.120" level="INFO">{'id': '8ee7a47a71f34c4282ba14494a481912', 'street': 'Rua de Testes', 'number': '90', 'city': 'Rio de Janeiro', 'complement': 'apto 200', 'state': 'Rio de Janeiro', 'neighborhood': 'Bairro de Testes', 'postal_code': '21550987', 'country': 'Brasil', 'main': True, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/03c9e905ce804e2b9235d1dd6e739fed/addresses/8ee7a47a71f34c4282ba14494a481912', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/03c9e905ce804e2b9235d1dd6e739fed', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 17:44:48.118" endtime="20210322 17:44:48.121"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:44:48.123" level="INFO">1832dde1fd656031</msg>
<status status="PASS" starttime="20210322 17:44:48.122" endtime="20210322 17:44:48.123"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:44:48.125" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:44:48.124" endtime="20210322 17:44:48.125"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${address_external_key}</var>
</assign>
<msg timestamp="20210322 17:44:48.127" level="INFO">${address_external_key} = 8ee7a47a71f34c4282ba14494a481912</msg>
<status status="PASS" starttime="20210322 17:44:48.126" endtime="20210322 17:44:48.127"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${address_external_key}</arg>
</arguments>
<msg timestamp="20210322 17:44:48.128" level="INFO">${address_external_key} = 8ee7a47a71f34c4282ba14494a481912</msg>
<status status="PASS" starttime="20210322 17:44:48.128" endtime="20210322 17:44:48.129"></status>
</kw>
<status status="PASS" starttime="20210322 17:44:47.887" endtime="20210322 17:44:48.129"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 17:44:48.130" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:44:48.129" endtime="20210322 17:44:48.130"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>SELFIE</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:44:48.132" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 17:44:48.131" endtime="20210322 17:44:48.132"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 17:44:48.133" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 17:44:48.135" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 17:44:48.132" endtime="20210322 17:44:48.135"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:44:48.136" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/03c9e905ce804e2b9235d1dd6e739fed/documents?type=SELFIE, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 17:44:48.421" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:44:48.135" endtime="20210322 17:44:48.422"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:44:48.425" level="INFO">{'id': 'ee61439c21464515b9b38e70392e1258', 'document_type': 'selfie', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/03c9e905ce804e2b9235d1dd6e739fed/documents/ee61439c21464515b9b38e70392e1258', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/03c9e905ce804e2b9235d1dd6e739fed', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/03c9e905ce804e2b9235d1dd6e739fed/documents/ee61439c21464515b9b38e70392e1258/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 17:44:48.423" endtime="20210322 17:44:48.425"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:44:48.428" level="INFO">28d726f638e39cb4</msg>
<status status="PASS" starttime="20210322 17:44:48.426" endtime="20210322 17:44:48.429"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:44:48.431" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:44:48.429" endtime="20210322 17:44:48.432"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 17:44:48.434" level="INFO">${document_external_key} = ee61439c21464515b9b38e70392e1258</msg>
<status status="PASS" starttime="20210322 17:44:48.432" endtime="20210322 17:44:48.435"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 17:44:48.437" level="INFO">${document_external_key} = ee61439c21464515b9b38e70392e1258</msg>
<status status="PASS" starttime="20210322 17:44:48.436" endtime="20210322 17:44:48.437"></status>
</kw>
<status status="PASS" starttime="20210322 17:44:48.130" endtime="20210322 17:44:48.437"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 17:44:48.439" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:44:48.438" endtime="20210322 17:44:48.439"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>RG_FRENTE</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:44:48.441" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 17:44:48.440" endtime="20210322 17:44:48.441"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 17:44:48.442" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 17:44:48.444" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 17:44:48.441" endtime="20210322 17:44:48.444"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:44:48.446" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/03c9e905ce804e2b9235d1dd6e739fed/documents?type=RG_FRENTE, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 17:44:48.734" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:44:48.445" endtime="20210322 17:44:48.734"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:44:48.737" level="INFO">{'id': 'a3d16c42d54041a2ae0e3078b23d3f6b', 'document_type': 'rg_frente', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/03c9e905ce804e2b9235d1dd6e739fed/documents/a3d16c42d54041a2ae0e3078b23d3f6b', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/03c9e905ce804e2b9235d1dd6e739fed', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/03c9e905ce804e2b9235d1dd6e739fed/documents/a3d16c42d54041a2ae0e3078b23d3f6b/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 17:44:48.735" endtime="20210322 17:44:48.737"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:44:48.740" level="INFO">56a7f78bcdfb7e6f</msg>
<status status="PASS" starttime="20210322 17:44:48.738" endtime="20210322 17:44:48.740"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:44:48.742" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:44:48.741" endtime="20210322 17:44:48.742"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 17:44:48.744" level="INFO">${document_external_key} = a3d16c42d54041a2ae0e3078b23d3f6b</msg>
<status status="PASS" starttime="20210322 17:44:48.743" endtime="20210322 17:44:48.744"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 17:44:48.746" level="INFO">${document_external_key} = a3d16c42d54041a2ae0e3078b23d3f6b</msg>
<status status="PASS" starttime="20210322 17:44:48.745" endtime="20210322 17:44:48.746"></status>
</kw>
<status status="PASS" starttime="20210322 17:44:48.439" endtime="20210322 17:44:48.746"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 17:44:48.748" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:44:48.747" endtime="20210322 17:44:48.748"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>RG_VERSO</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:44:48.751" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 17:44:48.750" endtime="20210322 17:44:48.751"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 17:44:48.752" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 17:44:48.754" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 17:44:48.751" endtime="20210322 17:44:48.755"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:44:48.756" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/03c9e905ce804e2b9235d1dd6e739fed/documents?type=RG_VERSO, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 17:44:49.033" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:44:48.755" endtime="20210322 17:44:49.033"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:44:49.036" level="INFO">{'id': '83f5e4ead9804ca6a4b2f5435b9bbb0d', 'document_type': 'rg_verso', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/03c9e905ce804e2b9235d1dd6e739fed/documents/83f5e4ead9804ca6a4b2f5435b9bbb0d', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/03c9e905ce804e2b9235d1dd6e739fed', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/03c9e905ce804e2b9235d1dd6e739fed/documents/83f5e4ead9804ca6a4b2f5435b9bbb0d/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 17:44:49.034" endtime="20210322 17:44:49.036"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:44:49.039" level="INFO">34e2a1e609ed97de</msg>
<status status="PASS" starttime="20210322 17:44:49.037" endtime="20210322 17:44:49.039"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:44:49.040" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:44:49.040" endtime="20210322 17:44:49.041"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 17:44:49.043" level="INFO">${document_external_key} = 83f5e4ead9804ca6a4b2f5435b9bbb0d</msg>
<status status="PASS" starttime="20210322 17:44:49.041" endtime="20210322 17:44:49.043"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 17:44:49.044" level="INFO">${document_external_key} = 83f5e4ead9804ca6a4b2f5435b9bbb0d</msg>
<status status="PASS" starttime="20210322 17:44:49.043" endtime="20210322 17:44:49.044"></status>
</kw>
<status status="PASS" starttime="20210322 17:44:48.749" endtime="20210322 17:44:49.044"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 17:44:49.045" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:44:49.045" endtime="20210322 17:44:49.046"></status>
</kw>
<kw name="solicitar aprovação do holder" library="accreditation_request_approval">
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:44:49.047" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 17:44:49.047" endtime="20210322 17:44:49.048"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/approval</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:44:49.049" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/03c9e905ce804e2b9235d1dd6e739fed/approval, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data=None 
json=None</msg>
<msg timestamp="20210322 17:44:49.331" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 17:44:49.048" endtime="20210322 17:44:49.332"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:44:49.335" level="INFO">{'message': 'Approval request accepted successfully. Processing analysis'}</msg>
<status status="PASS" starttime="20210322 17:44:49.333" endtime="20210322 17:44:49.335"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:44:49.337" level="INFO">95c48726c733434f</msg>
<status status="PASS" starttime="20210322 17:44:49.336" endtime="20210322 17:44:49.337"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:44:49.339" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 17:44:49.338" endtime="20210322 17:44:49.339"></status>
</kw>
<status status="PASS" starttime="20210322 17:44:49.046" endtime="20210322 17:44:49.340"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 17:44:49.341" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:44:49.340" endtime="20210322 17:44:49.341"></status>
</kw>
<kw name="recebendo notificação de aprovação" library="accreditation_risk_notification">
<kw name="Uuid 4" library="FakerLibrary">
<doc>Generates a random UUID4 string.
:param cast_to: Specify what type the UUID should be cast to. Default is `str`
:type cast_to: callable</doc>
<assign>
<var>${assessment_id}</var>
</assign>
<msg timestamp="20210322 17:44:49.343" level="INFO">${assessment_id} = 4b1cfb67-43b7-468d-9dc7-67030e99568f</msg>
<status status="PASS" starttime="20210322 17:44:49.343" endtime="20210322 17:44:49.343"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>year</arg>
</arguments>
<assign>
<var>${year}</var>
</assign>
<msg timestamp="20210322 17:44:49.344" level="INFO">${year} = 2021</msg>
<status status="PASS" starttime="20210322 17:44:49.344" endtime="20210322 17:44:49.344"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>month</arg>
</arguments>
<assign>
<var>${month}</var>
</assign>
<msg timestamp="20210322 17:44:49.345" level="INFO">${month} = 03</msg>
<status status="PASS" starttime="20210322 17:44:49.345" endtime="20210322 17:44:49.345"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>day</arg>
</arguments>
<assign>
<var>${day}</var>
</assign>
<msg timestamp="20210322 17:44:49.346" level="INFO">${day} = 22</msg>
<status status="PASS" starttime="20210322 17:44:49.346" endtime="20210322 17:44:49.346"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:44:49.347" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 17:44:49.347" endtime="20210322 17:44:49.347"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "risk.assessment.result",</arg>
<arg>"resource": "business.holder",</arg>
<arg>"created_at": "${year}-${month}-${day} 15:28:56.747Z",</arg>
<arg>"marketplace_id": "${marketplace_external_key}",</arg>
<arg>"object": {</arg>
<arg>"result": "APPROVED",</arg>
<arg>"holder_id": "${holder_external_key}",</arg>
<arg>"applicant_id": "${application_external_key}",</arg>
<arg>"assessment_id": "${assessment_id}"</arg>
<arg>}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 17:44:49.348" level="INFO">${body} = { "type": "risk.assessment.result", "resource": "business.holder", "created_at": "2021-03-22 15:28:56.747Z", "marketplace_id": "f71a8951368a4cc085cf7875ff44e61c", "object": { "result": "APPROVED", "ho...</msg>
<status status="PASS" starttime="20210322 17:44:49.348" endtime="20210322 17:44:49.348"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/admin/internal_operation/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/registration/approval</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:44:49.350" level="INFO">POST Request using : uri=/admin/internal_operation/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/03c9e905ce804e2b9235d1dd6e739fed/registration/approval, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "risk.assessment.result", "resource": "business.holder", "created_at": "2021-03-22 15:28:56.747Z", "marketplace_id": "f71a8951368a4cc085cf7875ff44e61c", "object": { "result": "APPROVED", "holder_id": "03c9e905ce804e2b9235d1dd6e739fed", "applicant_id": "bcc25a6751c14b52af1340d40dba78c5", "assessment_id": "4b1cfb67-43b7-468d-9dc7-67030e99568f" } } 
json=None</msg>
<msg timestamp="20210322 17:44:49.559" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 17:44:49.349" endtime="20210322 17:44:49.559"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:44:49.562" level="INFO">{'message': 'Holder approved successfully'}</msg>
<status status="PASS" starttime="20210322 17:44:49.560" endtime="20210322 17:44:49.563"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:44:49.565" level="INFO">5bc8dd53dda26775</msg>
<status status="PASS" starttime="20210322 17:44:49.564" endtime="20210322 17:44:49.565"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:44:49.567" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 17:44:49.566" endtime="20210322 17:44:49.567"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 17:44:49.568" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:44:49.568" endtime="20210322 17:44:49.569"></status>
</kw>
<status status="PASS" starttime="20210322 17:44:49.342" endtime="20210322 17:44:49.569"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 17:44:49.570" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:44:49.569" endtime="20210322 17:44:49.570"></status>
</kw>
<kw name="buscar account por holder" library="accounts_get_accounts_by_holder">
<kw name="conectar accounts" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accounts</arg>
<arg>url=${account_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 17:44:49.572" level="INFO">Creating Session using : alias=accounts, url=https://banking-accounts-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 17:44:49.572" endtime="20210322 17:44:49.573"></status>
</kw>
<status status="PASS" starttime="20210322 17:44:49.571" endtime="20210322 17:44:49.573"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accounts</arg>
<arg>/marketplaces/${marketplace_external_key}/holders/${holder_external_key}/accounts</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:44:49.574" level="INFO">GET Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/holders/03c9e905ce804e2b9235d1dd6e739fed/accounts, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 17:44:50.214" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 17:44:49.574" endtime="20210322 17:44:50.214"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:44:50.216" level="INFO">{'items': [{'id': '05c1291cac9449ce9578178b9cf49760', 'holder': '03c9e905ce804e2b9235d1dd6e739fed', 'balance': '0.00', 'currency': 'BRL', 'routing_number': '001', 'number': '5906383879', 'status': 'active', 'metadata': {}, 'created_at': '2021-03-22T20:44:50.729753', 'updated_at': '2021-03-22T20:44:50.729753', 'primary': True, 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'uri': '/v2/marketplaces/f71a8951368a4cc085cf7875ff44e61c/accounts/05c1291cac9449ce9578178b9cf49760', 'resource': 'payment_account'}], 'has_more': False, 'limit': 100, 'total_pages': 1, 'page': 1, 'offset': 0, 'total': '1', 'query_count': '1'}</msg>
<status status="PASS" starttime="20210322 17:44:50.215" endtime="20210322 17:44:50.217"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:44:50.218" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 17:44:50.217" endtime="20210322 17:44:50.219"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["id"]}</arg>
</arguments>
<assign>
<var>${account_external_key}</var>
</assign>
<msg timestamp="20210322 17:44:50.221" level="INFO">${account_external_key} = 05c1291cac9449ce9578178b9cf49760</msg>
<status status="PASS" starttime="20210322 17:44:50.219" endtime="20210322 17:44:50.221"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_external_key}</arg>
</arguments>
<msg timestamp="20210322 17:44:50.224" level="INFO">${account_external_key} = 05c1291cac9449ce9578178b9cf49760</msg>
<status status="PASS" starttime="20210322 17:44:50.223" endtime="20210322 17:44:50.224"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["number"]}</arg>
</arguments>
<assign>
<var>${account_number}</var>
</assign>
<msg timestamp="20210322 17:44:50.226" level="INFO">${account_number} = 5906383879</msg>
<status status="PASS" starttime="20210322 17:44:50.224" endtime="20210322 17:44:50.226"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_number}</arg>
</arguments>
<msg timestamp="20210322 17:44:50.227" level="INFO">${account_number} = 5906383879</msg>
<status status="PASS" starttime="20210322 17:44:50.226" endtime="20210322 17:44:50.227"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["routing_number"]}</arg>
</arguments>
<assign>
<var>${account_routing_number}</var>
</assign>
<msg timestamp="20210322 17:44:50.229" level="INFO">${account_routing_number} = 001</msg>
<status status="PASS" starttime="20210322 17:44:50.229" endtime="20210322 17:44:50.229"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_routing_number}</arg>
</arguments>
<msg timestamp="20210322 17:44:50.231" level="INFO">${account_routing_number} = 001</msg>
<status status="PASS" starttime="20210322 17:44:50.230" endtime="20210322 17:44:50.231"></status>
</kw>
<status status="PASS" starttime="20210322 17:44:49.571" endtime="20210322 17:44:50.231"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 17:44:50.232" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:44:50.231" endtime="20210322 17:44:50.232"></status>
</kw>
<status status="PASS" starttime="20210322 17:44:46.939" endtime="20210322 17:44:50.232"></status>
</kw>
<kw name="criar chave pix" library="pix_dict_create_entry">
<arguments>
<arg>type=phone</arg>
<arg>value=${phone_pix}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 17:44:50.235" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 17:44:50.235" endtime="20210322 17:44:50.237"></status>
</kw>
<status status="PASS" starttime="20210322 17:44:50.234" endtime="20210322 17:44:50.237"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${type}</arg>
</arguments>
<msg timestamp="20210322 17:44:50.237" level="INFO">${type} = phone</msg>
<status status="PASS" starttime="20210322 17:44:50.237" endtime="20210322 17:44:50.237"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210322 17:44:50.238" level="INFO">${value} = +5521948593924</msg>
<status status="PASS" starttime="20210322 17:44:50.237" endtime="20210322 17:44:50.238"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:44:50.240" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 17:44:50.238" endtime="20210322 17:44:50.240"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "${type}",</arg>
<arg>"value": "${value}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 17:44:50.240" level="INFO">${body} = { "type": "phone", "value": "+5521948593924" }</msg>
<status status="PASS" starttime="20210322 17:44:50.240" endtime="20210322 17:44:50.240"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:44:50.241" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/03c9e905ce804e2b9235d1dd6e739fed/accounts/05c1291cac9449ce9578178b9cf49760/entries, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "phone", "value": "+5521948593924" } 
json=None</msg>
<msg timestamp="20210322 17:44:50.995" level="INFO">${response} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20210322 17:44:50.241" endtime="20210322 17:44:50.995"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:44:50.999" level="INFO">{'id': 'd826bf3060ba4bae8466b4a0a5a1b6a7', 'status': 'waiting_ownership_verification', 'created_at': '2021-03-22T05:44:52.132', 'updated_at': '2021-03-22T05:44:52.132', 'key': {'value': '+5521948593924', 'type': 'phone'}, 'account': {'id': '05c1291cac9449ce9578178b9cf49760', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': '03c9e905ce804e2b9235d1dd6e739fed', 'owner': {'name': 'Holder de teste', 'national_registration': '95601874301', 'type': 'individual'}, 'routing_number': '001', 'number': '5906383879', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}, 'resource': 'pix.entry'}</msg>
<status status="PASS" starttime="20210322 17:44:50.996" endtime="20210322 17:44:50.999"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:44:51.002" level="INFO">6a3f82ac8f520abe</msg>
<status status="PASS" starttime="20210322 17:44:50.999" endtime="20210322 17:44:51.002"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 17:44:51.003" level="INFO">202</msg>
<status status="PASS" starttime="20210322 17:44:51.002" endtime="20210322 17:44:51.003"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:44:51.005" level="INFO">${response} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20210322 17:44:51.005" endtime="20210322 17:44:51.005"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${entry_external_key}</var>
</assign>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:51.007" endtime="20210322 17:44:51.008"></status>
</kw>
<msg timestamp="20210322 17:44:51.008" level="INFO">${entry_external_key} = d826bf3060ba4bae8466b4a0a5a1b6a7</msg>
<status status="PASS" starttime="20210322 17:44:51.006" endtime="20210322 17:44:51.008"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${entry_external_key}</arg>
</arguments>
<msg timestamp="20210322 17:44:51.009" level="INFO">${entry_external_key} = d826bf3060ba4bae8466b4a0a5a1b6a7</msg>
<status status="PASS" starttime="20210322 17:44:51.009" endtime="20210322 17:44:51.009"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["key"]["value"]}</arg>
</arguments>
<assign>
<var>${entry_key_value}</var>
</assign>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["key"]["value"]}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:51.011" endtime="20210322 17:44:51.012"></status>
</kw>
<msg timestamp="20210322 17:44:51.012" level="INFO">${entry_key_value} = +5521948593924</msg>
<status status="PASS" starttime="20210322 17:44:51.010" endtime="20210322 17:44:51.012"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${entry_key_value}</arg>
</arguments>
<msg timestamp="20210322 17:44:51.013" level="INFO">${entry_key_value} = +5521948593924</msg>
<status status="PASS" starttime="20210322 17:44:51.012" endtime="20210322 17:44:51.013"></status>
</kw>
<status status="PASS" starttime="20210322 17:44:50.234" endtime="20210322 17:44:51.013"></status>
</kw>
<kw name="validar chave pix" library="asserts">
<arguments>
<arg>key_status=waiting_ownership_verification</arg>
<arg>key_type=${type}</arg>
<arg>key_value=${value}</arg>
<arg>account_external_key=${account_external_key}</arg>
<arg>marketplace_external_key=${marketplace_external_key}</arg>
<arg>holder_external_key=${holder_external_key}</arg>
<arg>account_number=${account_number}</arg>
<arg>account_routing_number=${account_routing_number}</arg>
<arg>account_type=CACC</arg>
<arg>owner_key_name=${holder_name}</arg>
<arg>national_registration=${national_registration}</arg>
<arg>holder_type=${holder_type}</arg>
<arg>psp_code=19468242</arg>
<arg>psp_name=Zoop Tecnologia e Meios de Pagamento S.A.</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar status da chave</arg>
</arguments>
<msg timestamp="20210322 17:44:51.015" level="INFO">Validar status da chave</msg>
<status status="PASS" starttime="20210322 17:44:51.015" endtime="20210322 17:44:51.016"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["status"]}</arg>
<arg>${key_status}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:51.016" endtime="20210322 17:44:51.017"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando Tipo da chave PIX</arg>
</arguments>
<msg timestamp="20210322 17:44:51.017" level="INFO">Validando Tipo da chave PIX</msg>
<status status="PASS" starttime="20210322 17:44:51.017" endtime="20210322 17:44:51.017"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["key"]["type"]}</arg>
<arg>${key_type}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:51.017" endtime="20210322 17:44:51.018"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando Valor da chave PIX</arg>
</arguments>
<msg timestamp="20210322 17:44:51.019" level="INFO">Validando Valor da chave PIX</msg>
<status status="PASS" starttime="20210322 17:44:51.018" endtime="20210322 17:44:51.019"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${type}' == 'evp'</arg>
<arg>Should Not Be Empty</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' != 'evp'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${key_value}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${key_value}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:51.020" endtime="20210322 17:44:51.020"></status>
</kw>
<status status="PASS" starttime="20210322 17:44:51.019" endtime="20210322 17:44:51.020"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando dados da conta</arg>
</arguments>
<msg timestamp="20210322 17:44:51.021" level="INFO">Validando dados da conta</msg>
<status status="PASS" starttime="20210322 17:44:51.021" endtime="20210322 17:44:51.021"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["id"]}</arg>
<arg>${account_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:51.021" endtime="20210322 17:44:51.022"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["marketplace"]}</arg>
<arg>${marketplace_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:51.022" endtime="20210322 17:44:51.023"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["holder"]}</arg>
<arg>${holder_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:51.023" endtime="20210322 17:44:51.024"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["number"]}</arg>
<arg>${account_number}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:51.024" endtime="20210322 17:44:51.024"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["routing_number"]}</arg>
<arg>${account_routing_number}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:51.025" endtime="20210322 17:44:51.025"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["type"]}</arg>
<arg>${account_type}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:51.025" endtime="20210322 17:44:51.026"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar Proprietário da Account Owner</arg>
</arguments>
<msg timestamp="20210322 17:44:51.026" level="INFO">Validar Proprietário da Account Owner</msg>
<status status="PASS" starttime="20210322 17:44:51.026" endtime="20210322 17:44:51.026"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["account"]["owner"]["name"]}</arg>
<arg>${owner_key_name}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:51.027" endtime="20210322 17:44:51.027"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar national_registration da Account Owner</arg>
</arguments>
<msg timestamp="20210322 17:44:51.027" level="INFO">Validar national_registration da Account Owner</msg>
<status status="PASS" starttime="20210322 17:44:51.027" endtime="20210322 17:44:51.027"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["account"]["owner"]["national_registration"]}</arg>
<arg>${national_registration}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:51.028" endtime="20210322 17:44:51.028"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar Holder Type do Account Owner</arg>
</arguments>
<msg timestamp="20210322 17:44:51.028" level="INFO">Validar Holder Type do Account Owner</msg>
<status status="PASS" starttime="20210322 17:44:51.028" endtime="20210322 17:44:51.029"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["account"]["owner"]["type"]}</arg>
<arg>${holder_type}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:51.029" endtime="20210322 17:44:51.029"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar PSP</arg>
</arguments>
<msg timestamp="20210322 17:44:51.030" level="INFO">Validar PSP</msg>
<status status="PASS" starttime="20210322 17:44:51.029" endtime="20210322 17:44:51.030"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["psp"]["code"]}</arg>
<arg>${psp_code}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:51.030" endtime="20210322 17:44:51.030"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["psp"]["name"]}</arg>
<arg>${psp_name}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:51.031" endtime="20210322 17:44:51.031"></status>
</kw>
<status status="PASS" starttime="20210322 17:44:51.013" endtime="20210322 17:44:51.031"></status>
</kw>
<kw name="buscar verification code" library="pix_dict_verification_code">
<arguments>
<arg>holder_external_key=${holder_external_key}</arg>
<arg>account_external_key=${account_external_key}</arg>
<arg>entry_external_key=${entry_external_key}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 17:44:51.032" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 17:44:51.032" endtime="20210322 17:44:51.033"></status>
</kw>
<status status="PASS" starttime="20210322 17:44:51.032" endtime="20210322 17:44:51.033"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/admin/internal_operation/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries/${entry_external_key}/code</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:44:51.033" level="INFO">GET Request using : uri=/admin/internal_operation/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/03c9e905ce804e2b9235d1dd6e739fed/accounts/05c1291cac9449ce9578178b9cf49760/entries/d826bf3060ba4bae8466b4a0a5a1b6a7/code, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 17:44:51.664" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 17:44:51.033" endtime="20210322 17:44:51.665"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:44:51.667" level="INFO">{'code': '2413'}</msg>
<status status="PASS" starttime="20210322 17:44:51.666" endtime="20210322 17:44:51.668"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:44:51.670" level="INFO">94c7d58db856befa</msg>
<status status="PASS" starttime="20210322 17:44:51.669" endtime="20210322 17:44:51.670"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 17:44:51.672" level="INFO">200</msg>
<status status="PASS" starttime="20210322 17:44:51.671" endtime="20210322 17:44:51.673"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:44:51.675" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 17:44:51.674" endtime="20210322 17:44:51.676"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["code"]}</arg>
</arguments>
<assign>
<var>${verification_code}</var>
</assign>
<msg timestamp="20210322 17:44:51.678" level="INFO">${verification_code} = 2413</msg>
<status status="PASS" starttime="20210322 17:44:51.676" endtime="20210322 17:44:51.678"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${verification_code}</arg>
</arguments>
<msg timestamp="20210322 17:44:51.679" level="INFO">${verification_code} = 2413</msg>
<status status="PASS" starttime="20210322 17:44:51.679" endtime="20210322 17:44:51.680"></status>
</kw>
<status status="PASS" starttime="20210322 17:44:51.031" endtime="20210322 17:44:51.680"></status>
</kw>
<kw name="confirmar propriedade da chave pix" library="pix_dict_confirm_propriety">
<arguments>
<arg>verification_code=123abc</arg>
<arg>holder_external_key=${holder_external_key}</arg>
<arg>account_external_key=${account_external_key}</arg>
<arg>entry_external_key=${entry_external_key}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 17:44:51.684" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 17:44:51.683" endtime="20210322 17:44:51.684"></status>
</kw>
<status status="PASS" starttime="20210322 17:44:51.682" endtime="20210322 17:44:51.685"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:44:51.687" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 17:44:51.685" endtime="20210322 17:44:51.687"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"code": "${verification_code}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 17:44:51.688" level="INFO">${body} = { "code": "123abc" }</msg>
<status status="PASS" starttime="20210322 17:44:51.687" endtime="20210322 17:44:51.688"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries/${entry_external_key}/ownership</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:44:51.689" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/03c9e905ce804e2b9235d1dd6e739fed/accounts/05c1291cac9449ce9578178b9cf49760/entries/d826bf3060ba4bae8466b4a0a5a1b6a7/ownership, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "code": "123abc" } 
json=None</msg>
<msg timestamp="20210322 17:44:52.356" level="INFO">${response} = &lt;Response [404]&gt;</msg>
<status status="PASS" starttime="20210322 17:44:51.688" endtime="20210322 17:44:52.356"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:44:52.359" level="INFO">{'code': 3003, 'status': 'not_found', 'type': 'not_found', 'message': 'Ownership entry not found', 'category': 'business', 'status_code': 404}</msg>
<status status="PASS" starttime="20210322 17:44:52.357" endtime="20210322 17:44:52.359"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:44:52.361" level="INFO">8ed1e2482b7964d9</msg>
<status status="PASS" starttime="20210322 17:44:52.360" endtime="20210322 17:44:52.361"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 17:44:52.362" level="INFO">404</msg>
<status status="PASS" starttime="20210322 17:44:52.362" endtime="20210322 17:44:52.363"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:44:52.364" level="INFO">${response} = &lt;Response [404]&gt;</msg>
<status status="PASS" starttime="20210322 17:44:52.363" endtime="20210322 17:44:52.364"></status>
</kw>
<status status="PASS" starttime="20210322 17:44:51.680" endtime="20210322 17:44:52.365"></status>
</kw>
<kw name="validar not found" library="not_found">
<arguments>
<arg>message=Ownership entry not found</arg>
<arg>message_code=3003</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando response nor found</arg>
</arguments>
<msg timestamp="20210322 17:44:52.366" level="INFO">Validando response nor found</msg>
<status status="PASS" starttime="20210322 17:44:52.366" endtime="20210322 17:44:52.366"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>404</arg>
</arguments>
<msg timestamp="20210322 17:44:52.367" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:44:52.367" endtime="20210322 17:44:52.368"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["status"]}</arg>
<arg>not_found</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:52.369" endtime="20210322 17:44:52.370"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["category"]}</arg>
<arg>business</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:52.370" endtime="20210322 17:44:52.371"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.json()["code"]}</arg>
<arg>${message_code}</arg>
</arguments>
<msg timestamp="20210322 17:44:52.373" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:44:52.372" endtime="20210322 17:44:52.373"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.json()["status_code"]}</arg>
<arg>404</arg>
</arguments>
<msg timestamp="20210322 17:44:52.374" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:44:52.373" endtime="20210322 17:44:52.374"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["message"]}</arg>
<arg>${message}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:52.375" endtime="20210322 17:44:52.376"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["type"]}</arg>
<arg>not_found</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:52.376" endtime="20210322 17:44:52.377"></status>
</kw>
<status status="PASS" starttime="20210322 17:44:52.365" endtime="20210322 17:44:52.377"></status>
</kw>
<doc>Fluxo de Exceção</doc>
<tags>
<tag>smoke_test</tag>
</tags>
<status status="PASS" starttime="20210322 17:44:46.934" endtime="20210322 17:44:52.377" critical="yes"></status>
</test>
<test id="s1-s1-s2-t5" name="Cenário: Confirmar proprierdade de de chave de endereçamento utilizando sem informar o código de verificação">
<kw name="Random Number" library="FakerLibrary">
<doc>Returns a random number with 1 digit (default, when digits==None),
a random number with 0 to given number of digits, or a random number
with given number to given number of digits (when ``fix_len==True``).</doc>
<arguments>
<arg>digits=8</arg>
<arg>fix_len=True</arg>
</arguments>
<assign>
<var>${phone}</var>
</assign>
<msg timestamp="20210322 17:44:52.379" level="INFO">${phone} = 17306424</msg>
<status status="PASS" starttime="20210322 17:44:52.379" endtime="20210322 17:44:52.379"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>+55219${phone}</arg>
</arguments>
<assign>
<var>${phone_pix}</var>
</assign>
<msg timestamp="20210322 17:44:52.380" level="INFO">${phone_pix} = +5521917306424</msg>
<status status="PASS" starttime="20210322 17:44:52.379" endtime="20210322 17:44:52.380"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${phone_pix}</arg>
</arguments>
<msg timestamp="20210322 17:44:52.380" level="INFO">${phone_pix} = +5521917306424</msg>
<status status="PASS" starttime="20210322 17:44:52.380" endtime="20210322 17:44:52.380"></status>
</kw>
<kw name="criar holder individual ativo" library="accreditation_create_holder_active">
<kw name="conectar accreditation" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accreditation</arg>
<arg>url=${accreditation_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 17:44:52.382" level="INFO">Creating Session using : alias=accreditation, url=https://banking-accreditation-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 17:44:52.381" endtime="20210322 17:44:52.382"></status>
</kw>
<status status="PASS" starttime="20210322 17:44:52.381" endtime="20210322 17:44:52.382"></status>
</kw>
<kw name="Cpf" library="FakerLibrary">
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 17:44:52.383" level="INFO">${national_registration} = 156.903.284-05</msg>
<status status="PASS" starttime="20210322 17:44:52.383" endtime="20210322 17:44:52.383"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${national_registration}</arg>
<arg>.</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 17:44:52.384" level="INFO">${national_registration} = 156903284-05</msg>
<status status="PASS" starttime="20210322 17:44:52.383" endtime="20210322 17:44:52.384"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${national_registration}</arg>
<arg>-</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 17:44:52.384" level="INFO">${national_registration} = 15690328405</msg>
<status status="PASS" starttime="20210322 17:44:52.384" endtime="20210322 17:44:52.384"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${national_registration}</arg>
</arguments>
<msg timestamp="20210322 17:44:52.385" level="INFO">${national_registration} = 15690328405</msg>
<status status="PASS" starttime="20210322 17:44:52.385" endtime="20210322 17:44:52.385"></status>
</kw>
<kw name="Rg" library="FakerLibrary">
<doc>Brazilian RG, return plain numbers.
Check:  https://www.ngmatematica.com/2014/02/como-determinar-o-digito-verificador-do.html</doc>
<assign>
<var>${identity_card}</var>
</assign>
<msg timestamp="20210322 17:44:52.386" level="INFO">${identity_card} = 871562303</msg>
<status status="PASS" starttime="20210322 17:44:52.385" endtime="20210322 17:44:52.386"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${identity_card}</arg>
</arguments>
<msg timestamp="20210322 17:44:52.386" level="INFO">${identity_card} = 871562303</msg>
<status status="PASS" starttime="20210322 17:44:52.386" endtime="20210322 17:44:52.386"></status>
</kw>
<kw name="criar holder individual" library="accreditation_post_holder_individual">
<arguments>
<arg>holder_type=individual</arg>
<arg>holder_name=${holder_name}</arg>
<arg>email=${email}</arg>
<arg>national_registration=${national_registration}</arg>
<arg>revenue=${revenue}</arg>
<arg>birthday=${birthday}</arg>
<arg>mothers_name=${mothers_name}</arg>
<arg>identity_card=${identity_card}</arg>
<arg>pep=false</arg>
<arg>cbo=${cbo}</arg>
</arguments>
<kw name="conectar accreditation" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accreditation</arg>
<arg>url=${accreditation_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 17:44:52.388" level="INFO">Creating Session using : alias=accreditation, url=https://banking-accreditation-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 17:44:52.388" endtime="20210322 17:44:52.388"></status>
</kw>
<status status="PASS" starttime="20210322 17:44:52.387" endtime="20210322 17:44:52.389"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_type}</arg>
</arguments>
<msg timestamp="20210322 17:44:52.389" level="INFO">${holder_type} = individual</msg>
<status status="PASS" starttime="20210322 17:44:52.389" endtime="20210322 17:44:52.389"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_name}</arg>
</arguments>
<msg timestamp="20210322 17:44:52.390" level="INFO">${holder_name} = Holder de teste</msg>
<status status="PASS" starttime="20210322 17:44:52.390" endtime="20210322 17:44:52.390"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:44:52.391" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 17:44:52.390" endtime="20210322 17:44:52.391"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "${holder_type}",</arg>
<arg>"name": "${holder_name}",</arg>
<arg>"email": "${email}",</arg>
<arg>"national_registration": "${national_registration}",</arg>
<arg>"revenue": ${revenue},</arg>
<arg>"birthday": "${birthday}",</arg>
<arg>"mothers_name": "${mothers_name}",</arg>
<arg>"identity_card": "${identity_card}",</arg>
<arg>"pep": false,</arg>
<arg>"cbo": ${cbo}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 17:44:52.391" level="INFO">${body} = { "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "15690328405", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder",...</msg>
<status status="PASS" starttime="20210322 17:44:52.391" endtime="20210322 17:44:52.392"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:44:52.392" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "15690328405", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder", "identity_card": "871562303", "pep": false, "cbo": 821450 } 
json=None</msg>
<msg timestamp="20210322 17:44:53.067" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:44:52.392" endtime="20210322 17:44:53.067"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:44:53.070" level="INFO">{'id': 'b1bcf32e5bdb428b94c414454fa8e503', 'name': 'Holder de teste', 'revenue': 5500.0, 'email': 'teste@teste.com.br', 'status': 'waiting_info_and_documents', 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'marketplace_name': 'Marketplace de Teste', 'created_at': '2021-03-22T17:44:54.244933', 'updated_at': '2021-03-22T17:44:54.244934', 'type': 'individual', 'national_registration': '15690328405', 'birthday': '1988-04-23', 'mothers_name': 'Mãe do Holder', 'identity_card': '871562303', 'pep': False, 'cbo': '821450', '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/b1bcf32e5bdb428b94c414454fa8e503', 'type': 'GET'}, 'phones': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/b1bcf32e5bdb428b94c414454fa8e503/phones', 'type': 'GET'}, 'addresses': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/b1bcf32e5bdb428b94c414454fa8e503/addresses', 'type': 'GET'}, 'documents': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/b1bcf32e5bdb428b94c414454fa8e503/documents', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 17:44:53.068" endtime="20210322 17:44:53.070"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:44:53.073" level="INFO">3007ccb3ad0e27e1</msg>
<status status="PASS" starttime="20210322 17:44:53.071" endtime="20210322 17:44:53.073"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${body}</arg>
</arguments>
<msg timestamp="20210322 17:44:53.075" level="INFO">{ "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "15690328405", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder", "identity_card": "871562303", "pep": false, "cbo": 821450 }</msg>
<status status="PASS" starttime="20210322 17:44:53.074" endtime="20210322 17:44:53.075"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:44:53.077" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:44:53.076" endtime="20210322 17:44:53.077"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${holder_external_key}</var>
</assign>
<msg timestamp="20210322 17:44:53.079" level="INFO">${holder_external_key} = b1bcf32e5bdb428b94c414454fa8e503</msg>
<status status="PASS" starttime="20210322 17:44:53.078" endtime="20210322 17:44:53.079"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_external_key}</arg>
</arguments>
<msg timestamp="20210322 17:44:53.081" level="INFO">${holder_external_key} = b1bcf32e5bdb428b94c414454fa8e503</msg>
<status status="PASS" starttime="20210322 17:44:53.080" endtime="20210322 17:44:53.081"></status>
</kw>
<status status="PASS" starttime="20210322 17:44:52.386" endtime="20210322 17:44:53.081"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_name}</arg>
</arguments>
<msg timestamp="20210322 17:44:53.083" level="INFO">${holder_name} = Holder de teste</msg>
<status status="PASS" starttime="20210322 17:44:53.082" endtime="20210322 17:44:53.083"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 17:44:53.085" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:44:53.084" endtime="20210322 17:44:53.085"></status>
</kw>
<kw name="criar holder phone" library="accreditation_post_holder_phone">
<arguments>
<arg>21</arg>
<arg>51</arg>
<arg>996221236</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:44:53.087" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 17:44:53.087" endtime="20210322 17:44:53.087"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"area_code": "${phone_area_code}",</arg>
<arg>"country_code": "${phone_country_code}",</arg>
<arg>"number": "${phone_number}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 17:44:53.088" level="INFO">${body} = { "area_code": "21", "country_code": "51", "number": "996221236" }</msg>
<status status="PASS" starttime="20210322 17:44:53.088" endtime="20210322 17:44:53.089"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/phones</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:44:53.090" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/b1bcf32e5bdb428b94c414454fa8e503/phones, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "area_code": "21", "country_code": "51", "number": "996221236" } 
json=None</msg>
<msg timestamp="20210322 17:44:53.324" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:44:53.089" endtime="20210322 17:44:53.324"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:44:53.326" level="INFO">{'id': '263d1086fd464c2d923886a3b49d8583', 'area_code': '21', 'country_code': '51', 'number': '996221236', 'main': True, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/b1bcf32e5bdb428b94c414454fa8e503/phones/263d1086fd464c2d923886a3b49d8583', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/b1bcf32e5bdb428b94c414454fa8e503', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 17:44:53.325" endtime="20210322 17:44:53.326"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:44:53.328" level="INFO">8d32bd20f592effb</msg>
<status status="PASS" starttime="20210322 17:44:53.327" endtime="20210322 17:44:53.328"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:44:53.329" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:44:53.328" endtime="20210322 17:44:53.329"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${phone_external_key}</var>
</assign>
<msg timestamp="20210322 17:44:53.331" level="INFO">${phone_external_key} = 263d1086fd464c2d923886a3b49d8583</msg>
<status status="PASS" starttime="20210322 17:44:53.330" endtime="20210322 17:44:53.331"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${phone_external_key}</arg>
</arguments>
<msg timestamp="20210322 17:44:53.332" level="INFO">${phone_external_key} = 263d1086fd464c2d923886a3b49d8583</msg>
<status status="PASS" starttime="20210322 17:44:53.331" endtime="20210322 17:44:53.332"></status>
</kw>
<status status="PASS" starttime="20210322 17:44:53.085" endtime="20210322 17:44:53.332"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 17:44:53.333" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:44:53.333" endtime="20210322 17:44:53.333"></status>
</kw>
<kw name="criar holder address" library="accreditation_post_holder_address">
<arguments>
<arg>Rio de Janeiro</arg>
<arg>Rio de Janeiro</arg>
<arg>Brasil</arg>
<arg>Bairro de Testes</arg>
<arg>Rua de Testes</arg>
<arg>90</arg>
<arg>apto 200</arg>
<arg>21550987</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:44:53.335" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 17:44:53.335" endtime="20210322 17:44:53.335"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"city": "${city}",</arg>
<arg>"state": "${state}",</arg>
<arg>"country": "${country}",</arg>
<arg>"neighborhood": "${neighborhood}",</arg>
<arg>"street": "${street}",</arg>
<arg>"number": "${number}",</arg>
<arg>"complement": "${complement}",</arg>
<arg>"postal_code": "${postal_code}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 17:44:53.337" level="INFO">${body} = { "city": "Rio de Janeiro", "state": "Rio de Janeiro", "country": "Brasil", "neighborhood": "Bairro de Testes", "street": "Rua de Testes", "number": "90", "complement": "apto 200", "postal_code": "215...</msg>
<status status="PASS" starttime="20210322 17:44:53.336" endtime="20210322 17:44:53.337"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/addresses</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:44:53.338" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/b1bcf32e5bdb428b94c414454fa8e503/addresses, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "city": "Rio de Janeiro", "state": "Rio de Janeiro", "country": "Brasil", "neighborhood": "Bairro de Testes", "street": "Rua de Testes", "number": "90", "complement": "apto 200", "postal_code": "21550987" } 
json=None</msg>
<msg timestamp="20210322 17:44:53.585" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:44:53.337" endtime="20210322 17:44:53.586"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:44:53.589" level="INFO">{'id': 'af7477e3bae64def988e0d81ec5c3579', 'street': 'Rua de Testes', 'number': '90', 'city': 'Rio de Janeiro', 'complement': 'apto 200', 'state': 'Rio de Janeiro', 'neighborhood': 'Bairro de Testes', 'postal_code': '21550987', 'country': 'Brasil', 'main': True, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/b1bcf32e5bdb428b94c414454fa8e503/addresses/af7477e3bae64def988e0d81ec5c3579', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/b1bcf32e5bdb428b94c414454fa8e503', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 17:44:53.587" endtime="20210322 17:44:53.589"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:44:53.592" level="INFO">9f75835394feee13</msg>
<status status="PASS" starttime="20210322 17:44:53.590" endtime="20210322 17:44:53.592"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:44:53.594" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:44:53.593" endtime="20210322 17:44:53.595"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${address_external_key}</var>
</assign>
<msg timestamp="20210322 17:44:53.598" level="INFO">${address_external_key} = af7477e3bae64def988e0d81ec5c3579</msg>
<status status="PASS" starttime="20210322 17:44:53.595" endtime="20210322 17:44:53.598"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${address_external_key}</arg>
</arguments>
<msg timestamp="20210322 17:44:53.600" level="INFO">${address_external_key} = af7477e3bae64def988e0d81ec5c3579</msg>
<status status="PASS" starttime="20210322 17:44:53.599" endtime="20210322 17:44:53.600"></status>
</kw>
<status status="PASS" starttime="20210322 17:44:53.334" endtime="20210322 17:44:53.601"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 17:44:53.603" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:44:53.601" endtime="20210322 17:44:53.603"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>SELFIE</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:44:53.606" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 17:44:53.605" endtime="20210322 17:44:53.606"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 17:44:53.607" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 17:44:53.610" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 17:44:53.606" endtime="20210322 17:44:53.610"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:44:53.611" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/b1bcf32e5bdb428b94c414454fa8e503/documents?type=SELFIE, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 17:44:53.944" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:44:53.610" endtime="20210322 17:44:53.944"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:44:53.948" level="INFO">{'id': '0efa42bd2b524e5ba4eca5b4d81d5f6f', 'document_type': 'selfie', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/b1bcf32e5bdb428b94c414454fa8e503/documents/0efa42bd2b524e5ba4eca5b4d81d5f6f', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/b1bcf32e5bdb428b94c414454fa8e503', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/b1bcf32e5bdb428b94c414454fa8e503/documents/0efa42bd2b524e5ba4eca5b4d81d5f6f/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 17:44:53.945" endtime="20210322 17:44:53.948"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:44:53.951" level="INFO">56e0087089fb3f37</msg>
<status status="PASS" starttime="20210322 17:44:53.949" endtime="20210322 17:44:53.951"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:44:53.953" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:44:53.952" endtime="20210322 17:44:53.954"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 17:44:53.957" level="INFO">${document_external_key} = 0efa42bd2b524e5ba4eca5b4d81d5f6f</msg>
<status status="PASS" starttime="20210322 17:44:53.955" endtime="20210322 17:44:53.957"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 17:44:53.958" level="INFO">${document_external_key} = 0efa42bd2b524e5ba4eca5b4d81d5f6f</msg>
<status status="PASS" starttime="20210322 17:44:53.958" endtime="20210322 17:44:53.959"></status>
</kw>
<status status="PASS" starttime="20210322 17:44:53.604" endtime="20210322 17:44:53.959"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 17:44:53.960" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:44:53.960" endtime="20210322 17:44:53.961"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>RG_FRENTE</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:44:53.963" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 17:44:53.962" endtime="20210322 17:44:53.963"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 17:44:53.964" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 17:44:53.967" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 17:44:53.964" endtime="20210322 17:44:53.967"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:44:53.969" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/b1bcf32e5bdb428b94c414454fa8e503/documents?type=RG_FRENTE, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 17:44:54.241" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:44:53.967" endtime="20210322 17:44:54.241"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:44:54.242" level="INFO">{'id': 'ba607ede3eb44bdfb39e0bc5c50def0d', 'document_type': 'rg_frente', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/b1bcf32e5bdb428b94c414454fa8e503/documents/ba607ede3eb44bdfb39e0bc5c50def0d', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/b1bcf32e5bdb428b94c414454fa8e503', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/b1bcf32e5bdb428b94c414454fa8e503/documents/ba607ede3eb44bdfb39e0bc5c50def0d/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 17:44:54.242" endtime="20210322 17:44:54.242"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:44:54.243" level="INFO">2de028137aef25b8</msg>
<status status="PASS" starttime="20210322 17:44:54.243" endtime="20210322 17:44:54.244"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:44:54.245" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:44:54.244" endtime="20210322 17:44:54.245"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 17:44:54.246" level="INFO">${document_external_key} = ba607ede3eb44bdfb39e0bc5c50def0d</msg>
<status status="PASS" starttime="20210322 17:44:54.245" endtime="20210322 17:44:54.246"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 17:44:54.247" level="INFO">${document_external_key} = ba607ede3eb44bdfb39e0bc5c50def0d</msg>
<status status="PASS" starttime="20210322 17:44:54.247" endtime="20210322 17:44:54.247"></status>
</kw>
<status status="PASS" starttime="20210322 17:44:53.961" endtime="20210322 17:44:54.248"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 17:44:54.249" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:44:54.248" endtime="20210322 17:44:54.249"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>RG_VERSO</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:44:54.251" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 17:44:54.250" endtime="20210322 17:44:54.251"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 17:44:54.252" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 17:44:54.254" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 17:44:54.251" endtime="20210322 17:44:54.254"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:44:54.255" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/b1bcf32e5bdb428b94c414454fa8e503/documents?type=RG_VERSO, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 17:44:54.515" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:44:54.254" endtime="20210322 17:44:54.515"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:44:54.517" level="INFO">{'id': 'f3a922f9cb244e008b0bb8cb2ef9a6e1', 'document_type': 'rg_verso', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/b1bcf32e5bdb428b94c414454fa8e503/documents/f3a922f9cb244e008b0bb8cb2ef9a6e1', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/b1bcf32e5bdb428b94c414454fa8e503', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/b1bcf32e5bdb428b94c414454fa8e503/documents/f3a922f9cb244e008b0bb8cb2ef9a6e1/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 17:44:54.516" endtime="20210322 17:44:54.518"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:44:54.520" level="INFO">1dc6bd26f7df5916</msg>
<status status="PASS" starttime="20210322 17:44:54.519" endtime="20210322 17:44:54.520"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:44:54.523" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:44:54.521" endtime="20210322 17:44:54.523"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 17:44:54.526" level="INFO">${document_external_key} = f3a922f9cb244e008b0bb8cb2ef9a6e1</msg>
<status status="PASS" starttime="20210322 17:44:54.524" endtime="20210322 17:44:54.526"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 17:44:54.528" level="INFO">${document_external_key} = f3a922f9cb244e008b0bb8cb2ef9a6e1</msg>
<status status="PASS" starttime="20210322 17:44:54.527" endtime="20210322 17:44:54.528"></status>
</kw>
<status status="PASS" starttime="20210322 17:44:54.249" endtime="20210322 17:44:54.528"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 17:44:54.530" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:44:54.530" endtime="20210322 17:44:54.530"></status>
</kw>
<kw name="solicitar aprovação do holder" library="accreditation_request_approval">
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:44:54.532" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 17:44:54.531" endtime="20210322 17:44:54.532"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/approval</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:44:54.533" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/b1bcf32e5bdb428b94c414454fa8e503/approval, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data=None 
json=None</msg>
<msg timestamp="20210322 17:44:54.825" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 17:44:54.532" endtime="20210322 17:44:54.825"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:44:54.827" level="INFO">{'message': 'Approval request accepted successfully. Processing analysis'}</msg>
<status status="PASS" starttime="20210322 17:44:54.826" endtime="20210322 17:44:54.828"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:44:54.830" level="INFO">eaa546494e7bbbb3</msg>
<status status="PASS" starttime="20210322 17:44:54.829" endtime="20210322 17:44:54.830"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:44:54.833" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 17:44:54.831" endtime="20210322 17:44:54.833"></status>
</kw>
<status status="PASS" starttime="20210322 17:44:54.530" endtime="20210322 17:44:54.833"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 17:44:54.836" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:44:54.834" endtime="20210322 17:44:54.836"></status>
</kw>
<kw name="recebendo notificação de aprovação" library="accreditation_risk_notification">
<kw name="Uuid 4" library="FakerLibrary">
<doc>Generates a random UUID4 string.
:param cast_to: Specify what type the UUID should be cast to. Default is `str`
:type cast_to: callable</doc>
<assign>
<var>${assessment_id}</var>
</assign>
<msg timestamp="20210322 17:44:54.839" level="INFO">${assessment_id} = da94ad35-f225-47ef-a5cc-319fa10a9538</msg>
<status status="PASS" starttime="20210322 17:44:54.839" endtime="20210322 17:44:54.840"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>year</arg>
</arguments>
<assign>
<var>${year}</var>
</assign>
<msg timestamp="20210322 17:44:54.841" level="INFO">${year} = 2021</msg>
<status status="PASS" starttime="20210322 17:44:54.841" endtime="20210322 17:44:54.841"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>month</arg>
</arguments>
<assign>
<var>${month}</var>
</assign>
<msg timestamp="20210322 17:44:54.843" level="INFO">${month} = 03</msg>
<status status="PASS" starttime="20210322 17:44:54.842" endtime="20210322 17:44:54.843"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>day</arg>
</arguments>
<assign>
<var>${day}</var>
</assign>
<msg timestamp="20210322 17:44:54.844" level="INFO">${day} = 22</msg>
<status status="PASS" starttime="20210322 17:44:54.843" endtime="20210322 17:44:54.844"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:44:54.845" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 17:44:54.844" endtime="20210322 17:44:54.845"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "risk.assessment.result",</arg>
<arg>"resource": "business.holder",</arg>
<arg>"created_at": "${year}-${month}-${day} 15:28:56.747Z",</arg>
<arg>"marketplace_id": "${marketplace_external_key}",</arg>
<arg>"object": {</arg>
<arg>"result": "APPROVED",</arg>
<arg>"holder_id": "${holder_external_key}",</arg>
<arg>"applicant_id": "${application_external_key}",</arg>
<arg>"assessment_id": "${assessment_id}"</arg>
<arg>}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 17:44:54.847" level="INFO">${body} = { "type": "risk.assessment.result", "resource": "business.holder", "created_at": "2021-03-22 15:28:56.747Z", "marketplace_id": "f71a8951368a4cc085cf7875ff44e61c", "object": { "result": "APPROVED", "ho...</msg>
<status status="PASS" starttime="20210322 17:44:54.846" endtime="20210322 17:44:54.847"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/admin/internal_operation/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/registration/approval</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:44:54.850" level="INFO">POST Request using : uri=/admin/internal_operation/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/b1bcf32e5bdb428b94c414454fa8e503/registration/approval, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "risk.assessment.result", "resource": "business.holder", "created_at": "2021-03-22 15:28:56.747Z", "marketplace_id": "f71a8951368a4cc085cf7875ff44e61c", "object": { "result": "APPROVED", "holder_id": "b1bcf32e5bdb428b94c414454fa8e503", "applicant_id": "bcc25a6751c14b52af1340d40dba78c5", "assessment_id": "da94ad35-f225-47ef-a5cc-319fa10a9538" } } 
json=None</msg>
<msg timestamp="20210322 17:44:55.063" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 17:44:54.848" endtime="20210322 17:44:55.064"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:44:55.066" level="INFO">{'message': 'Holder approved successfully'}</msg>
<status status="PASS" starttime="20210322 17:44:55.064" endtime="20210322 17:44:55.067"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:44:55.068" level="INFO">8588ed2178adde42</msg>
<status status="PASS" starttime="20210322 17:44:55.067" endtime="20210322 17:44:55.069"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:44:55.071" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 17:44:55.070" endtime="20210322 17:44:55.071"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 17:44:55.074" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:44:55.072" endtime="20210322 17:44:55.074"></status>
</kw>
<status status="PASS" starttime="20210322 17:44:54.837" endtime="20210322 17:44:55.076"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 17:44:55.077" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:44:55.076" endtime="20210322 17:44:55.077"></status>
</kw>
<kw name="buscar account por holder" library="accounts_get_accounts_by_holder">
<kw name="conectar accounts" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accounts</arg>
<arg>url=${account_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 17:44:55.080" level="INFO">Creating Session using : alias=accounts, url=https://banking-accounts-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 17:44:55.080" endtime="20210322 17:44:55.081"></status>
</kw>
<status status="PASS" starttime="20210322 17:44:55.079" endtime="20210322 17:44:55.082"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accounts</arg>
<arg>/marketplaces/${marketplace_external_key}/holders/${holder_external_key}/accounts</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:44:55.083" level="INFO">GET Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/holders/b1bcf32e5bdb428b94c414454fa8e503/accounts, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 17:44:55.744" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 17:44:55.082" endtime="20210322 17:44:55.745"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:44:55.747" level="INFO">{'items': [{'id': '09a5d12dc21f467a9ccbf6d60a84d61e', 'holder': 'b1bcf32e5bdb428b94c414454fa8e503', 'balance': '0.00', 'currency': 'BRL', 'routing_number': '001', 'number': '2180697225', 'status': 'active', 'metadata': {}, 'created_at': '2021-03-22T20:44:56.241719', 'updated_at': '2021-03-22T20:44:56.241719', 'primary': True, 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'uri': '/v2/marketplaces/f71a8951368a4cc085cf7875ff44e61c/accounts/09a5d12dc21f467a9ccbf6d60a84d61e', 'resource': 'payment_account'}], 'has_more': False, 'limit': 100, 'total_pages': 1, 'page': 1, 'offset': 0, 'total': '1', 'query_count': '1'}</msg>
<status status="PASS" starttime="20210322 17:44:55.745" endtime="20210322 17:44:55.747"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:44:55.749" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 17:44:55.748" endtime="20210322 17:44:55.749"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["id"]}</arg>
</arguments>
<assign>
<var>${account_external_key}</var>
</assign>
<msg timestamp="20210322 17:44:55.752" level="INFO">${account_external_key} = 09a5d12dc21f467a9ccbf6d60a84d61e</msg>
<status status="PASS" starttime="20210322 17:44:55.750" endtime="20210322 17:44:55.752"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_external_key}</arg>
</arguments>
<msg timestamp="20210322 17:44:55.754" level="INFO">${account_external_key} = 09a5d12dc21f467a9ccbf6d60a84d61e</msg>
<status status="PASS" starttime="20210322 17:44:55.752" endtime="20210322 17:44:55.754"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["number"]}</arg>
</arguments>
<assign>
<var>${account_number}</var>
</assign>
<msg timestamp="20210322 17:44:55.756" level="INFO">${account_number} = 2180697225</msg>
<status status="PASS" starttime="20210322 17:44:55.754" endtime="20210322 17:44:55.756"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_number}</arg>
</arguments>
<msg timestamp="20210322 17:44:55.757" level="INFO">${account_number} = 2180697225</msg>
<status status="PASS" starttime="20210322 17:44:55.756" endtime="20210322 17:44:55.757"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["routing_number"]}</arg>
</arguments>
<assign>
<var>${account_routing_number}</var>
</assign>
<msg timestamp="20210322 17:44:55.758" level="INFO">${account_routing_number} = 001</msg>
<status status="PASS" starttime="20210322 17:44:55.757" endtime="20210322 17:44:55.758"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_routing_number}</arg>
</arguments>
<msg timestamp="20210322 17:44:55.759" level="INFO">${account_routing_number} = 001</msg>
<status status="PASS" starttime="20210322 17:44:55.758" endtime="20210322 17:44:55.759"></status>
</kw>
<status status="PASS" starttime="20210322 17:44:55.079" endtime="20210322 17:44:55.759"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 17:44:55.760" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:44:55.759" endtime="20210322 17:44:55.760"></status>
</kw>
<status status="PASS" starttime="20210322 17:44:52.381" endtime="20210322 17:44:55.760"></status>
</kw>
<kw name="criar chave pix" library="pix_dict_create_entry">
<arguments>
<arg>type=phone</arg>
<arg>value=${phone_pix}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 17:44:55.762" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 17:44:55.762" endtime="20210322 17:44:55.763"></status>
</kw>
<status status="PASS" starttime="20210322 17:44:55.761" endtime="20210322 17:44:55.763"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${type}</arg>
</arguments>
<msg timestamp="20210322 17:44:55.763" level="INFO">${type} = phone</msg>
<status status="PASS" starttime="20210322 17:44:55.763" endtime="20210322 17:44:55.764"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210322 17:44:55.764" level="INFO">${value} = +5521917306424</msg>
<status status="PASS" starttime="20210322 17:44:55.764" endtime="20210322 17:44:55.764"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:44:55.765" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 17:44:55.765" endtime="20210322 17:44:55.765"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "${type}",</arg>
<arg>"value": "${value}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 17:44:55.766" level="INFO">${body} = { "type": "phone", "value": "+5521917306424" }</msg>
<status status="PASS" starttime="20210322 17:44:55.765" endtime="20210322 17:44:55.766"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:44:55.767" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/b1bcf32e5bdb428b94c414454fa8e503/accounts/09a5d12dc21f467a9ccbf6d60a84d61e/entries, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "phone", "value": "+5521917306424" } 
json=None</msg>
<msg timestamp="20210322 17:44:56.455" level="INFO">${response} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20210322 17:44:55.766" endtime="20210322 17:44:56.456"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:44:56.459" level="INFO">{'id': 'f8128db40a4642e5a9b653612f844955', 'status': 'waiting_ownership_verification', 'created_at': '2021-03-22T05:44:57.655', 'updated_at': '2021-03-22T05:44:57.655', 'key': {'value': '+5521917306424', 'type': 'phone'}, 'account': {'id': '09a5d12dc21f467a9ccbf6d60a84d61e', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': 'b1bcf32e5bdb428b94c414454fa8e503', 'owner': {'name': 'Holder de teste', 'national_registration': '15690328405', 'type': 'individual'}, 'routing_number': '001', 'number': '2180697225', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}, 'resource': 'pix.entry'}</msg>
<status status="PASS" starttime="20210322 17:44:56.457" endtime="20210322 17:44:56.459"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:44:56.460" level="INFO">7b9d5109f5831008</msg>
<status status="PASS" starttime="20210322 17:44:56.460" endtime="20210322 17:44:56.461"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 17:44:56.462" level="INFO">202</msg>
<status status="PASS" starttime="20210322 17:44:56.461" endtime="20210322 17:44:56.462"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:44:56.463" level="INFO">${response} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20210322 17:44:56.463" endtime="20210322 17:44:56.464"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${entry_external_key}</var>
</assign>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:56.466" endtime="20210322 17:44:56.467"></status>
</kw>
<msg timestamp="20210322 17:44:56.467" level="INFO">${entry_external_key} = f8128db40a4642e5a9b653612f844955</msg>
<status status="PASS" starttime="20210322 17:44:56.464" endtime="20210322 17:44:56.467"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${entry_external_key}</arg>
</arguments>
<msg timestamp="20210322 17:44:56.468" level="INFO">${entry_external_key} = f8128db40a4642e5a9b653612f844955</msg>
<status status="PASS" starttime="20210322 17:44:56.468" endtime="20210322 17:44:56.469"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["key"]["value"]}</arg>
</arguments>
<assign>
<var>${entry_key_value}</var>
</assign>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["key"]["value"]}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:56.470" endtime="20210322 17:44:56.471"></status>
</kw>
<msg timestamp="20210322 17:44:56.471" level="INFO">${entry_key_value} = +5521917306424</msg>
<status status="PASS" starttime="20210322 17:44:56.469" endtime="20210322 17:44:56.471"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${entry_key_value}</arg>
</arguments>
<msg timestamp="20210322 17:44:56.472" level="INFO">${entry_key_value} = +5521917306424</msg>
<status status="PASS" starttime="20210322 17:44:56.472" endtime="20210322 17:44:56.472"></status>
</kw>
<status status="PASS" starttime="20210322 17:44:55.760" endtime="20210322 17:44:56.473"></status>
</kw>
<kw name="validar chave pix" library="asserts">
<arguments>
<arg>key_status=waiting_ownership_verification</arg>
<arg>key_type=${type}</arg>
<arg>key_value=${value}</arg>
<arg>account_external_key=${account_external_key}</arg>
<arg>marketplace_external_key=${marketplace_external_key}</arg>
<arg>holder_external_key=${holder_external_key}</arg>
<arg>account_number=${account_number}</arg>
<arg>account_routing_number=${account_routing_number}</arg>
<arg>account_type=CACC</arg>
<arg>owner_key_name=${holder_name}</arg>
<arg>national_registration=${national_registration}</arg>
<arg>holder_type=${holder_type}</arg>
<arg>psp_code=19468242</arg>
<arg>psp_name=Zoop Tecnologia e Meios de Pagamento S.A.</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar status da chave</arg>
</arguments>
<msg timestamp="20210322 17:44:56.475" level="INFO">Validar status da chave</msg>
<status status="PASS" starttime="20210322 17:44:56.475" endtime="20210322 17:44:56.475"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["status"]}</arg>
<arg>${key_status}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:56.476" endtime="20210322 17:44:56.477"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando Tipo da chave PIX</arg>
</arguments>
<msg timestamp="20210322 17:44:56.477" level="INFO">Validando Tipo da chave PIX</msg>
<status status="PASS" starttime="20210322 17:44:56.477" endtime="20210322 17:44:56.477"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["key"]["type"]}</arg>
<arg>${key_type}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:56.478" endtime="20210322 17:44:56.478"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando Valor da chave PIX</arg>
</arguments>
<msg timestamp="20210322 17:44:56.479" level="INFO">Validando Valor da chave PIX</msg>
<status status="PASS" starttime="20210322 17:44:56.479" endtime="20210322 17:44:56.479"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${type}' == 'evp'</arg>
<arg>Should Not Be Empty</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' != 'evp'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${key_value}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${key_value}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:56.480" endtime="20210322 17:44:56.481"></status>
</kw>
<status status="PASS" starttime="20210322 17:44:56.479" endtime="20210322 17:44:56.481"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando dados da conta</arg>
</arguments>
<msg timestamp="20210322 17:44:56.481" level="INFO">Validando dados da conta</msg>
<status status="PASS" starttime="20210322 17:44:56.481" endtime="20210322 17:44:56.482"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["id"]}</arg>
<arg>${account_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:56.482" endtime="20210322 17:44:56.483"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["marketplace"]}</arg>
<arg>${marketplace_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:56.483" endtime="20210322 17:44:56.484"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["holder"]}</arg>
<arg>${holder_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:56.484" endtime="20210322 17:44:56.484"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["number"]}</arg>
<arg>${account_number}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:56.484" endtime="20210322 17:44:56.486"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["routing_number"]}</arg>
<arg>${account_routing_number}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:56.486" endtime="20210322 17:44:56.487"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["type"]}</arg>
<arg>${account_type}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:56.487" endtime="20210322 17:44:56.488"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar Proprietário da Account Owner</arg>
</arguments>
<msg timestamp="20210322 17:44:56.489" level="INFO">Validar Proprietário da Account Owner</msg>
<status status="PASS" starttime="20210322 17:44:56.488" endtime="20210322 17:44:56.489"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["account"]["owner"]["name"]}</arg>
<arg>${owner_key_name}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:56.489" endtime="20210322 17:44:56.490"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar national_registration da Account Owner</arg>
</arguments>
<msg timestamp="20210322 17:44:56.490" level="INFO">Validar national_registration da Account Owner</msg>
<status status="PASS" starttime="20210322 17:44:56.490" endtime="20210322 17:44:56.490"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["account"]["owner"]["national_registration"]}</arg>
<arg>${national_registration}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:56.491" endtime="20210322 17:44:56.492"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar Holder Type do Account Owner</arg>
</arguments>
<msg timestamp="20210322 17:44:56.492" level="INFO">Validar Holder Type do Account Owner</msg>
<status status="PASS" starttime="20210322 17:44:56.492" endtime="20210322 17:44:56.492"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["account"]["owner"]["type"]}</arg>
<arg>${holder_type}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:56.493" endtime="20210322 17:44:56.493"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar PSP</arg>
</arguments>
<msg timestamp="20210322 17:44:56.494" level="INFO">Validar PSP</msg>
<status status="PASS" starttime="20210322 17:44:56.494" endtime="20210322 17:44:56.494"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["psp"]["code"]}</arg>
<arg>${psp_code}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:56.494" endtime="20210322 17:44:56.495"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["psp"]["name"]}</arg>
<arg>${psp_name}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:56.495" endtime="20210322 17:44:56.496"></status>
</kw>
<status status="PASS" starttime="20210322 17:44:56.473" endtime="20210322 17:44:56.496"></status>
</kw>
<kw name="buscar verification code" library="pix_dict_verification_code">
<arguments>
<arg>holder_external_key=${holder_external_key}</arg>
<arg>account_external_key=${account_external_key}</arg>
<arg>entry_external_key=${entry_external_key}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 17:44:56.499" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 17:44:56.498" endtime="20210322 17:44:56.499"></status>
</kw>
<status status="PASS" starttime="20210322 17:44:56.498" endtime="20210322 17:44:56.499"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/admin/internal_operation/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries/${entry_external_key}/code</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:44:56.499" level="INFO">GET Request using : uri=/admin/internal_operation/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/b1bcf32e5bdb428b94c414454fa8e503/accounts/09a5d12dc21f467a9ccbf6d60a84d61e/entries/f8128db40a4642e5a9b653612f844955/code, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 17:44:57.114" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 17:44:56.499" endtime="20210322 17:44:57.115"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:44:57.117" level="INFO">{'code': '8237'}</msg>
<status status="PASS" starttime="20210322 17:44:57.115" endtime="20210322 17:44:57.118"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:44:57.119" level="INFO">d94da8efcae6217f</msg>
<status status="PASS" starttime="20210322 17:44:57.118" endtime="20210322 17:44:57.119"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 17:44:57.123" level="INFO">200</msg>
<status status="PASS" starttime="20210322 17:44:57.121" endtime="20210322 17:44:57.123"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:44:57.126" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 17:44:57.124" endtime="20210322 17:44:57.126"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["code"]}</arg>
</arguments>
<assign>
<var>${verification_code}</var>
</assign>
<msg timestamp="20210322 17:44:57.129" level="INFO">${verification_code} = 8237</msg>
<status status="PASS" starttime="20210322 17:44:57.127" endtime="20210322 17:44:57.129"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${verification_code}</arg>
</arguments>
<msg timestamp="20210322 17:44:57.130" level="INFO">${verification_code} = 8237</msg>
<status status="PASS" starttime="20210322 17:44:57.129" endtime="20210322 17:44:57.130"></status>
</kw>
<status status="PASS" starttime="20210322 17:44:56.497" endtime="20210322 17:44:57.130"></status>
</kw>
<kw name="confirmar propriedade da chave pix" library="pix_dict_confirm_propriety">
<arguments>
<arg>verification_code=${EMPTY}</arg>
<arg>holder_external_key=${holder_external_key}</arg>
<arg>account_external_key=${account_external_key}</arg>
<arg>entry_external_key=${entry_external_key}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 17:44:57.134" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 17:44:57.134" endtime="20210322 17:44:57.135"></status>
</kw>
<status status="PASS" starttime="20210322 17:44:57.132" endtime="20210322 17:44:57.135"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:44:57.137" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 17:44:57.136" endtime="20210322 17:44:57.137"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"code": "${verification_code}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 17:44:57.138" level="INFO">${body} = { "code": "" }</msg>
<status status="PASS" starttime="20210322 17:44:57.137" endtime="20210322 17:44:57.138"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries/${entry_external_key}/ownership</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:44:57.139" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/b1bcf32e5bdb428b94c414454fa8e503/accounts/09a5d12dc21f467a9ccbf6d60a84d61e/entries/f8128db40a4642e5a9b653612f844955/ownership, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "code": "" } 
json=None</msg>
<msg timestamp="20210322 17:44:57.762" level="INFO">${response} = &lt;Response [404]&gt;</msg>
<status status="PASS" starttime="20210322 17:44:57.138" endtime="20210322 17:44:57.762"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:44:57.763" level="INFO">{'code': 3003, 'status': 'not_found', 'type': 'not_found', 'message': 'Ownership entry not found', 'category': 'business', 'status_code': 404}</msg>
<status status="PASS" starttime="20210322 17:44:57.763" endtime="20210322 17:44:57.763"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:44:57.764" level="INFO">0212859e6b7679d4</msg>
<status status="PASS" starttime="20210322 17:44:57.764" endtime="20210322 17:44:57.764"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 17:44:57.765" level="INFO">404</msg>
<status status="PASS" starttime="20210322 17:44:57.764" endtime="20210322 17:44:57.765"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:44:57.766" level="INFO">${response} = &lt;Response [404]&gt;</msg>
<status status="PASS" starttime="20210322 17:44:57.765" endtime="20210322 17:44:57.766"></status>
</kw>
<status status="PASS" starttime="20210322 17:44:57.131" endtime="20210322 17:44:57.766"></status>
</kw>
<kw name="validar not found" library="not_found">
<arguments>
<arg>message=Ownership entry not found</arg>
<arg>message_code=3003</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando response nor found</arg>
</arguments>
<msg timestamp="20210322 17:44:57.767" level="INFO">Validando response nor found</msg>
<status status="PASS" starttime="20210322 17:44:57.767" endtime="20210322 17:44:57.767"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>404</arg>
</arguments>
<msg timestamp="20210322 17:44:57.767" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:44:57.767" endtime="20210322 17:44:57.768"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["status"]}</arg>
<arg>not_found</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:57.768" endtime="20210322 17:44:57.768"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["category"]}</arg>
<arg>business</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:57.768" endtime="20210322 17:44:57.769"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.json()["code"]}</arg>
<arg>${message_code}</arg>
</arguments>
<msg timestamp="20210322 17:44:57.770" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:44:57.769" endtime="20210322 17:44:57.770"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.json()["status_code"]}</arg>
<arg>404</arg>
</arguments>
<msg timestamp="20210322 17:44:57.770" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:44:57.770" endtime="20210322 17:44:57.771"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["message"]}</arg>
<arg>${message}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:57.771" endtime="20210322 17:44:57.771"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["type"]}</arg>
<arg>not_found</arg>
</arguments>
<status status="PASS" starttime="20210322 17:44:57.771" endtime="20210322 17:44:57.772"></status>
</kw>
<status status="PASS" starttime="20210322 17:44:57.766" endtime="20210322 17:44:57.772"></status>
</kw>
<doc>Fluxo de Exceção</doc>
<tags>
<tag>smoke_test</tag>
</tags>
<status status="PASS" starttime="20210322 17:44:52.378" endtime="20210322 17:44:57.772" critical="yes"></status>
</test>
<doc>Funcionalidade: Confirmação de Propriedade de Chave de Endereçamento
Eu, como um Holder, portador de uma conta ativa em Banking
E portador de uma chave de endereçamento do tipo Email ou Telefone
Desejo confirmar a propriedade da chave de endereçamento</doc>
<status status="PASS" starttime="20210322 17:44:27.141" endtime="20210322 17:44:57.773"></status>
</suite>
<suite id="s1-s1-s3" name="Criar Chave de Endereçamento" source="C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\tests\pix-dict\diretorio\Criar Chave de Endereçamento.robot">
<test id="s1-s1-s3-t1" name="Cenário: Criando Chave de Endereçamento do tipo EVP">
<kw name="criar holder individual ativo" library="accreditation_create_holder_active">
<kw name="conectar accreditation" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accreditation</arg>
<arg>url=${accreditation_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 17:44:58.264" level="INFO">Creating Session using : alias=accreditation, url=https://banking-accreditation-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 17:44:58.263" endtime="20210322 17:44:58.264"></status>
</kw>
<status status="PASS" starttime="20210322 17:44:58.263" endtime="20210322 17:44:58.264"></status>
</kw>
<kw name="Cpf" library="FakerLibrary">
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 17:44:58.264" level="INFO">${national_registration} = 014.678.395-66</msg>
<status status="PASS" starttime="20210322 17:44:58.264" endtime="20210322 17:44:58.264"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${national_registration}</arg>
<arg>.</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 17:44:58.265" level="INFO">${national_registration} = 014678395-66</msg>
<status status="PASS" starttime="20210322 17:44:58.265" endtime="20210322 17:44:58.265"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${national_registration}</arg>
<arg>-</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 17:44:58.265" level="INFO">${national_registration} = 01467839566</msg>
<status status="PASS" starttime="20210322 17:44:58.265" endtime="20210322 17:44:58.265"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${national_registration}</arg>
</arguments>
<msg timestamp="20210322 17:44:58.266" level="INFO">${national_registration} = 01467839566</msg>
<status status="PASS" starttime="20210322 17:44:58.265" endtime="20210322 17:44:58.266"></status>
</kw>
<kw name="Rg" library="FakerLibrary">
<doc>Brazilian RG, return plain numbers.
Check:  https://www.ngmatematica.com/2014/02/como-determinar-o-digito-verificador-do.html</doc>
<assign>
<var>${identity_card}</var>
</assign>
<msg timestamp="20210322 17:44:58.266" level="INFO">${identity_card} = 320145682</msg>
<status status="PASS" starttime="20210322 17:44:58.266" endtime="20210322 17:44:58.266"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${identity_card}</arg>
</arguments>
<msg timestamp="20210322 17:44:58.266" level="INFO">${identity_card} = 320145682</msg>
<status status="PASS" starttime="20210322 17:44:58.266" endtime="20210322 17:44:58.266"></status>
</kw>
<kw name="criar holder individual" library="accreditation_post_holder_individual">
<arguments>
<arg>holder_type=individual</arg>
<arg>holder_name=${holder_name}</arg>
<arg>email=${email}</arg>
<arg>national_registration=${national_registration}</arg>
<arg>revenue=${revenue}</arg>
<arg>birthday=${birthday}</arg>
<arg>mothers_name=${mothers_name}</arg>
<arg>identity_card=${identity_card}</arg>
<arg>pep=false</arg>
<arg>cbo=${cbo}</arg>
</arguments>
<kw name="conectar accreditation" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accreditation</arg>
<arg>url=${accreditation_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 17:44:58.268" level="INFO">Creating Session using : alias=accreditation, url=https://banking-accreditation-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 17:44:58.268" endtime="20210322 17:44:58.268"></status>
</kw>
<status status="PASS" starttime="20210322 17:44:58.267" endtime="20210322 17:44:58.268"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_type}</arg>
</arguments>
<msg timestamp="20210322 17:44:58.269" level="INFO">${holder_type} = individual</msg>
<status status="PASS" starttime="20210322 17:44:58.268" endtime="20210322 17:44:58.269"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_name}</arg>
</arguments>
<msg timestamp="20210322 17:44:58.269" level="INFO">${holder_name} = Holder de teste</msg>
<status status="PASS" starttime="20210322 17:44:58.269" endtime="20210322 17:44:58.269"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:44:58.269" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 17:44:58.269" endtime="20210322 17:44:58.269"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "${holder_type}",</arg>
<arg>"name": "${holder_name}",</arg>
<arg>"email": "${email}",</arg>
<arg>"national_registration": "${national_registration}",</arg>
<arg>"revenue": ${revenue},</arg>
<arg>"birthday": "${birthday}",</arg>
<arg>"mothers_name": "${mothers_name}",</arg>
<arg>"identity_card": "${identity_card}",</arg>
<arg>"pep": false,</arg>
<arg>"cbo": ${cbo}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 17:44:58.270" level="INFO">${body} = { "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "01467839566", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder",...</msg>
<status status="PASS" starttime="20210322 17:44:58.270" endtime="20210322 17:44:58.270"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:44:58.271" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "01467839566", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder", "identity_card": "320145682", "pep": false, "cbo": 821450 } 
json=None</msg>
<msg timestamp="20210322 17:44:58.927" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:44:58.270" endtime="20210322 17:44:58.927"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:44:58.928" level="INFO">{'id': 'afe7c2b1ad9f4fb49481ef392a1ed480', 'name': 'Holder de teste', 'revenue': 5500.0, 'email': 'teste@teste.com.br', 'status': 'waiting_info_and_documents', 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'marketplace_name': 'Marketplace de Teste', 'created_at': '2021-03-22T17:45:00.113862', 'updated_at': '2021-03-22T17:45:00.113864', 'type': 'individual', 'national_registration': '01467839566', 'birthday': '1988-04-23', 'mothers_name': 'Mãe do Holder', 'identity_card': '320145682', 'pep': False, 'cbo': '821450', '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/afe7c2b1ad9f4fb49481ef392a1ed480', 'type': 'GET'}, 'phones': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/afe7c2b1ad9f4fb49481ef392a1ed480/phones', 'type': 'GET'}, 'addresses': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/afe7c2b1ad9f4fb49481ef392a1ed480/addresses', 'type': 'GET'}, 'documents': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/afe7c2b1ad9f4fb49481ef392a1ed480/documents', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 17:44:58.928" endtime="20210322 17:44:58.929"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:44:58.929" level="INFO">46c36f6e83aa8640</msg>
<status status="PASS" starttime="20210322 17:44:58.929" endtime="20210322 17:44:58.929"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${body}</arg>
</arguments>
<msg timestamp="20210322 17:44:58.930" level="INFO">{ "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "01467839566", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder", "identity_card": "320145682", "pep": false, "cbo": 821450 }</msg>
<status status="PASS" starttime="20210322 17:44:58.930" endtime="20210322 17:44:58.931"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:44:58.931" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:44:58.931" endtime="20210322 17:44:58.931"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${holder_external_key}</var>
</assign>
<msg timestamp="20210322 17:44:58.933" level="INFO">${holder_external_key} = afe7c2b1ad9f4fb49481ef392a1ed480</msg>
<status status="PASS" starttime="20210322 17:44:58.932" endtime="20210322 17:44:58.933"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_external_key}</arg>
</arguments>
<msg timestamp="20210322 17:44:58.933" level="INFO">${holder_external_key} = afe7c2b1ad9f4fb49481ef392a1ed480</msg>
<status status="PASS" starttime="20210322 17:44:58.933" endtime="20210322 17:44:58.934"></status>
</kw>
<status status="PASS" starttime="20210322 17:44:58.267" endtime="20210322 17:44:58.934"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_name}</arg>
</arguments>
<msg timestamp="20210322 17:44:58.934" level="INFO">${holder_name} = Holder de teste</msg>
<status status="PASS" starttime="20210322 17:44:58.934" endtime="20210322 17:44:58.935"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 17:44:58.935" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:44:58.935" endtime="20210322 17:44:58.936"></status>
</kw>
<kw name="criar holder phone" library="accreditation_post_holder_phone">
<arguments>
<arg>21</arg>
<arg>51</arg>
<arg>996221236</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:44:58.937" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 17:44:58.936" endtime="20210322 17:44:58.937"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"area_code": "${phone_area_code}",</arg>
<arg>"country_code": "${phone_country_code}",</arg>
<arg>"number": "${phone_number}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 17:44:58.938" level="INFO">${body} = { "area_code": "21", "country_code": "51", "number": "996221236" }</msg>
<status status="PASS" starttime="20210322 17:44:58.937" endtime="20210322 17:44:58.938"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/phones</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:44:58.939" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/afe7c2b1ad9f4fb49481ef392a1ed480/phones, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "area_code": "21", "country_code": "51", "number": "996221236" } 
json=None</msg>
<msg timestamp="20210322 17:44:59.182" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:44:58.938" endtime="20210322 17:44:59.182"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:44:59.186" level="INFO">{'id': '7082547c29fe4000a80b6008267794b1', 'area_code': '21', 'country_code': '51', 'number': '996221236', 'main': True, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/afe7c2b1ad9f4fb49481ef392a1ed480/phones/7082547c29fe4000a80b6008267794b1', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/afe7c2b1ad9f4fb49481ef392a1ed480', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 17:44:59.184" endtime="20210322 17:44:59.186"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:44:59.188" level="INFO">ba3f6fedd1c38b2c</msg>
<status status="PASS" starttime="20210322 17:44:59.187" endtime="20210322 17:44:59.189"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:44:59.191" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:44:59.190" endtime="20210322 17:44:59.192"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${phone_external_key}</var>
</assign>
<msg timestamp="20210322 17:44:59.195" level="INFO">${phone_external_key} = 7082547c29fe4000a80b6008267794b1</msg>
<status status="PASS" starttime="20210322 17:44:59.193" endtime="20210322 17:44:59.195"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${phone_external_key}</arg>
</arguments>
<msg timestamp="20210322 17:44:59.197" level="INFO">${phone_external_key} = 7082547c29fe4000a80b6008267794b1</msg>
<status status="PASS" starttime="20210322 17:44:59.196" endtime="20210322 17:44:59.197"></status>
</kw>
<status status="PASS" starttime="20210322 17:44:58.936" endtime="20210322 17:44:59.198"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 17:44:59.200" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:44:59.199" endtime="20210322 17:44:59.200"></status>
</kw>
<kw name="criar holder address" library="accreditation_post_holder_address">
<arguments>
<arg>Rio de Janeiro</arg>
<arg>Rio de Janeiro</arg>
<arg>Brasil</arg>
<arg>Bairro de Testes</arg>
<arg>Rua de Testes</arg>
<arg>90</arg>
<arg>apto 200</arg>
<arg>21550987</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:44:59.203" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 17:44:59.202" endtime="20210322 17:44:59.203"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"city": "${city}",</arg>
<arg>"state": "${state}",</arg>
<arg>"country": "${country}",</arg>
<arg>"neighborhood": "${neighborhood}",</arg>
<arg>"street": "${street}",</arg>
<arg>"number": "${number}",</arg>
<arg>"complement": "${complement}",</arg>
<arg>"postal_code": "${postal_code}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 17:44:59.205" level="INFO">${body} = { "city": "Rio de Janeiro", "state": "Rio de Janeiro", "country": "Brasil", "neighborhood": "Bairro de Testes", "street": "Rua de Testes", "number": "90", "complement": "apto 200", "postal_code": "215...</msg>
<status status="PASS" starttime="20210322 17:44:59.203" endtime="20210322 17:44:59.205"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/addresses</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:44:59.207" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/afe7c2b1ad9f4fb49481ef392a1ed480/addresses, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "city": "Rio de Janeiro", "state": "Rio de Janeiro", "country": "Brasil", "neighborhood": "Bairro de Testes", "street": "Rua de Testes", "number": "90", "complement": "apto 200", "postal_code": "21550987" } 
json=None</msg>
<msg timestamp="20210322 17:44:59.437" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:44:59.205" endtime="20210322 17:44:59.437"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:44:59.438" level="INFO">{'id': '2a7d161da1e143409be8a526ef9cf1b3', 'street': 'Rua de Testes', 'number': '90', 'city': 'Rio de Janeiro', 'complement': 'apto 200', 'state': 'Rio de Janeiro', 'neighborhood': 'Bairro de Testes', 'postal_code': '21550987', 'country': 'Brasil', 'main': True, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/afe7c2b1ad9f4fb49481ef392a1ed480/addresses/2a7d161da1e143409be8a526ef9cf1b3', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/afe7c2b1ad9f4fb49481ef392a1ed480', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 17:44:59.437" endtime="20210322 17:44:59.438"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:44:59.438" level="INFO">1dfd87dd6b34131f</msg>
<status status="PASS" starttime="20210322 17:44:59.438" endtime="20210322 17:44:59.438"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:44:59.439" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:44:59.438" endtime="20210322 17:44:59.439"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${address_external_key}</var>
</assign>
<msg timestamp="20210322 17:44:59.439" level="INFO">${address_external_key} = 2a7d161da1e143409be8a526ef9cf1b3</msg>
<status status="PASS" starttime="20210322 17:44:59.439" endtime="20210322 17:44:59.439"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${address_external_key}</arg>
</arguments>
<msg timestamp="20210322 17:44:59.440" level="INFO">${address_external_key} = 2a7d161da1e143409be8a526ef9cf1b3</msg>
<status status="PASS" starttime="20210322 17:44:59.440" endtime="20210322 17:44:59.440"></status>
</kw>
<status status="PASS" starttime="20210322 17:44:59.201" endtime="20210322 17:44:59.440"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 17:44:59.440" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:44:59.440" endtime="20210322 17:44:59.440"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>SELFIE</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:44:59.441" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 17:44:59.441" endtime="20210322 17:44:59.441"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 17:44:59.442" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 17:44:59.443" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 17:44:59.441" endtime="20210322 17:44:59.443"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:44:59.443" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/afe7c2b1ad9f4fb49481ef392a1ed480/documents?type=SELFIE, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 17:44:59.750" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:44:59.443" endtime="20210322 17:44:59.751"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:44:59.754" level="INFO">{'id': '013576b0709949269bc3092898703ce3', 'document_type': 'selfie', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/afe7c2b1ad9f4fb49481ef392a1ed480/documents/013576b0709949269bc3092898703ce3', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/afe7c2b1ad9f4fb49481ef392a1ed480', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/afe7c2b1ad9f4fb49481ef392a1ed480/documents/013576b0709949269bc3092898703ce3/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 17:44:59.752" endtime="20210322 17:44:59.756"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:44:59.758" level="INFO">cfe72deebee9a8dc</msg>
<status status="PASS" starttime="20210322 17:44:59.756" endtime="20210322 17:44:59.758"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:44:59.760" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:44:59.759" endtime="20210322 17:44:59.761"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 17:44:59.762" level="INFO">${document_external_key} = 013576b0709949269bc3092898703ce3</msg>
<status status="PASS" starttime="20210322 17:44:59.761" endtime="20210322 17:44:59.762"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 17:44:59.764" level="INFO">${document_external_key} = 013576b0709949269bc3092898703ce3</msg>
<status status="PASS" starttime="20210322 17:44:59.763" endtime="20210322 17:44:59.764"></status>
</kw>
<status status="PASS" starttime="20210322 17:44:59.441" endtime="20210322 17:44:59.764"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 17:44:59.766" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:44:59.765" endtime="20210322 17:44:59.766"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>RG_FRENTE</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:44:59.768" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 17:44:59.767" endtime="20210322 17:44:59.769"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 17:44:59.769" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 17:44:59.771" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 17:44:59.769" endtime="20210322 17:44:59.772"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:44:59.773" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/afe7c2b1ad9f4fb49481ef392a1ed480/documents?type=RG_FRENTE, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 17:45:00.061" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:44:59.772" endtime="20210322 17:45:00.061"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:45:00.063" level="INFO">{'id': 'bd25392f720c4088a03ca84315f301c1', 'document_type': 'rg_frente', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/afe7c2b1ad9f4fb49481ef392a1ed480/documents/bd25392f720c4088a03ca84315f301c1', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/afe7c2b1ad9f4fb49481ef392a1ed480', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/afe7c2b1ad9f4fb49481ef392a1ed480/documents/bd25392f720c4088a03ca84315f301c1/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 17:45:00.062" endtime="20210322 17:45:00.063"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:45:00.064" level="INFO">423c526586b708f6</msg>
<status status="PASS" starttime="20210322 17:45:00.063" endtime="20210322 17:45:00.064"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:45:00.065" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:45:00.064" endtime="20210322 17:45:00.065"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 17:45:00.066" level="INFO">${document_external_key} = bd25392f720c4088a03ca84315f301c1</msg>
<status status="PASS" starttime="20210322 17:45:00.065" endtime="20210322 17:45:00.066"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 17:45:00.067" level="INFO">${document_external_key} = bd25392f720c4088a03ca84315f301c1</msg>
<status status="PASS" starttime="20210322 17:45:00.067" endtime="20210322 17:45:00.067"></status>
</kw>
<status status="PASS" starttime="20210322 17:44:59.766" endtime="20210322 17:45:00.068"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 17:45:00.068" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:45:00.068" endtime="20210322 17:45:00.068"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>RG_VERSO</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:45:00.070" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 17:45:00.069" endtime="20210322 17:45:00.070"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 17:45:00.071" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 17:45:00.072" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 17:45:00.070" endtime="20210322 17:45:00.072"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:45:00.073" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/afe7c2b1ad9f4fb49481ef392a1ed480/documents?type=RG_VERSO, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 17:45:00.363" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:45:00.072" endtime="20210322 17:45:00.363"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:45:00.366" level="INFO">{'id': 'ceafcb2c65534a34870976c4efdf1270', 'document_type': 'rg_verso', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/afe7c2b1ad9f4fb49481ef392a1ed480/documents/ceafcb2c65534a34870976c4efdf1270', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/afe7c2b1ad9f4fb49481ef392a1ed480', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/afe7c2b1ad9f4fb49481ef392a1ed480/documents/ceafcb2c65534a34870976c4efdf1270/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 17:45:00.364" endtime="20210322 17:45:00.366"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:45:00.368" level="INFO">4f1b5b916a94b21e</msg>
<status status="PASS" starttime="20210322 17:45:00.367" endtime="20210322 17:45:00.369"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:45:00.371" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:45:00.369" endtime="20210322 17:45:00.371"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 17:45:00.373" level="INFO">${document_external_key} = ceafcb2c65534a34870976c4efdf1270</msg>
<status status="PASS" starttime="20210322 17:45:00.371" endtime="20210322 17:45:00.373"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 17:45:00.374" level="INFO">${document_external_key} = ceafcb2c65534a34870976c4efdf1270</msg>
<status status="PASS" starttime="20210322 17:45:00.373" endtime="20210322 17:45:00.374"></status>
</kw>
<status status="PASS" starttime="20210322 17:45:00.069" endtime="20210322 17:45:00.375"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 17:45:00.376" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:45:00.375" endtime="20210322 17:45:00.376"></status>
</kw>
<kw name="solicitar aprovação do holder" library="accreditation_request_approval">
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:45:00.378" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 17:45:00.377" endtime="20210322 17:45:00.378"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/approval</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:45:00.379" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/afe7c2b1ad9f4fb49481ef392a1ed480/approval, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data=None 
json=None</msg>
<msg timestamp="20210322 17:45:00.660" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 17:45:00.378" endtime="20210322 17:45:00.660"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:45:00.663" level="INFO">{'message': 'Approval request accepted successfully. Processing analysis'}</msg>
<status status="PASS" starttime="20210322 17:45:00.661" endtime="20210322 17:45:00.663"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:45:00.666" level="INFO">6701ebdad688922a</msg>
<status status="PASS" starttime="20210322 17:45:00.664" endtime="20210322 17:45:00.666"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:45:00.669" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 17:45:00.667" endtime="20210322 17:45:00.670"></status>
</kw>
<status status="PASS" starttime="20210322 17:45:00.376" endtime="20210322 17:45:00.670"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 17:45:00.671" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:45:00.671" endtime="20210322 17:45:00.672"></status>
</kw>
<kw name="recebendo notificação de aprovação" library="accreditation_risk_notification">
<kw name="Uuid 4" library="FakerLibrary">
<doc>Generates a random UUID4 string.
:param cast_to: Specify what type the UUID should be cast to. Default is `str`
:type cast_to: callable</doc>
<assign>
<var>${assessment_id}</var>
</assign>
<msg timestamp="20210322 17:45:00.674" level="INFO">${assessment_id} = eb855f20-3381-4521-9d88-300bc17e34d0</msg>
<status status="PASS" starttime="20210322 17:45:00.673" endtime="20210322 17:45:00.674"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>year</arg>
</arguments>
<assign>
<var>${year}</var>
</assign>
<msg timestamp="20210322 17:45:00.675" level="INFO">${year} = 2021</msg>
<status status="PASS" starttime="20210322 17:45:00.675" endtime="20210322 17:45:00.675"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>month</arg>
</arguments>
<assign>
<var>${month}</var>
</assign>
<msg timestamp="20210322 17:45:00.677" level="INFO">${month} = 03</msg>
<status status="PASS" starttime="20210322 17:45:00.676" endtime="20210322 17:45:00.677"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>day</arg>
</arguments>
<assign>
<var>${day}</var>
</assign>
<msg timestamp="20210322 17:45:00.678" level="INFO">${day} = 22</msg>
<status status="PASS" starttime="20210322 17:45:00.678" endtime="20210322 17:45:00.678"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:45:00.680" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 17:45:00.679" endtime="20210322 17:45:00.680"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "risk.assessment.result",</arg>
<arg>"resource": "business.holder",</arg>
<arg>"created_at": "${year}-${month}-${day} 15:28:56.747Z",</arg>
<arg>"marketplace_id": "${marketplace_external_key}",</arg>
<arg>"object": {</arg>
<arg>"result": "APPROVED",</arg>
<arg>"holder_id": "${holder_external_key}",</arg>
<arg>"applicant_id": "${application_external_key}",</arg>
<arg>"assessment_id": "${assessment_id}"</arg>
<arg>}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 17:45:00.681" level="INFO">${body} = { "type": "risk.assessment.result", "resource": "business.holder", "created_at": "2021-03-22 15:28:56.747Z", "marketplace_id": "f71a8951368a4cc085cf7875ff44e61c", "object": { "result": "APPROVED", "ho...</msg>
<status status="PASS" starttime="20210322 17:45:00.680" endtime="20210322 17:45:00.681"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/admin/internal_operation/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/registration/approval</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:45:00.683" level="INFO">POST Request using : uri=/admin/internal_operation/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/afe7c2b1ad9f4fb49481ef392a1ed480/registration/approval, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "risk.assessment.result", "resource": "business.holder", "created_at": "2021-03-22 15:28:56.747Z", "marketplace_id": "f71a8951368a4cc085cf7875ff44e61c", "object": { "result": "APPROVED", "holder_id": "afe7c2b1ad9f4fb49481ef392a1ed480", "applicant_id": "bcc25a6751c14b52af1340d40dba78c5", "assessment_id": "eb855f20-3381-4521-9d88-300bc17e34d0" } } 
json=None</msg>
<msg timestamp="20210322 17:45:00.889" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 17:45:00.682" endtime="20210322 17:45:00.889"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:45:00.890" level="INFO">{'message': 'Holder approved successfully'}</msg>
<status status="PASS" starttime="20210322 17:45:00.889" endtime="20210322 17:45:00.890"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:45:00.890" level="INFO">d361fca9384db6aa</msg>
<status status="PASS" starttime="20210322 17:45:00.890" endtime="20210322 17:45:00.890"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:45:00.890" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 17:45:00.890" endtime="20210322 17:45:00.891"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 17:45:00.891" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:45:00.891" endtime="20210322 17:45:00.891"></status>
</kw>
<status status="PASS" starttime="20210322 17:45:00.672" endtime="20210322 17:45:00.891"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 17:45:00.891" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:45:00.891" endtime="20210322 17:45:00.891"></status>
</kw>
<kw name="buscar account por holder" library="accounts_get_accounts_by_holder">
<kw name="conectar accounts" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accounts</arg>
<arg>url=${account_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 17:45:00.892" level="INFO">Creating Session using : alias=accounts, url=https://banking-accounts-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 17:45:00.892" endtime="20210322 17:45:00.893"></status>
</kw>
<status status="PASS" starttime="20210322 17:45:00.892" endtime="20210322 17:45:00.893"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accounts</arg>
<arg>/marketplaces/${marketplace_external_key}/holders/${holder_external_key}/accounts</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:45:00.893" level="INFO">GET Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/holders/afe7c2b1ad9f4fb49481ef392a1ed480/accounts, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 17:45:01.525" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 17:45:00.893" endtime="20210322 17:45:01.526"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:45:01.527" level="INFO">{'items': [{'id': '9c7f0dbd8eff4c0786a1b47b70a31258', 'holder': 'afe7c2b1ad9f4fb49481ef392a1ed480', 'balance': '0.00', 'currency': 'BRL', 'routing_number': '001', 'number': '9391292500', 'status': 'active', 'metadata': {}, 'created_at': '2021-03-22T20:45:02.069413', 'updated_at': '2021-03-22T20:45:02.069413', 'primary': True, 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'uri': '/v2/marketplaces/f71a8951368a4cc085cf7875ff44e61c/accounts/9c7f0dbd8eff4c0786a1b47b70a31258', 'resource': 'payment_account'}], 'has_more': False, 'limit': 100, 'total_pages': 1, 'page': 1, 'offset': 0, 'total': '1', 'query_count': '1'}</msg>
<status status="PASS" starttime="20210322 17:45:01.526" endtime="20210322 17:45:01.527"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:45:01.528" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 17:45:01.528" endtime="20210322 17:45:01.529"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["id"]}</arg>
</arguments>
<assign>
<var>${account_external_key}</var>
</assign>
<msg timestamp="20210322 17:45:01.530" level="INFO">${account_external_key} = 9c7f0dbd8eff4c0786a1b47b70a31258</msg>
<status status="PASS" starttime="20210322 17:45:01.529" endtime="20210322 17:45:01.531"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_external_key}</arg>
</arguments>
<msg timestamp="20210322 17:45:01.532" level="INFO">${account_external_key} = 9c7f0dbd8eff4c0786a1b47b70a31258</msg>
<status status="PASS" starttime="20210322 17:45:01.531" endtime="20210322 17:45:01.532"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["number"]}</arg>
</arguments>
<assign>
<var>${account_number}</var>
</assign>
<msg timestamp="20210322 17:45:01.534" level="INFO">${account_number} = 9391292500</msg>
<status status="PASS" starttime="20210322 17:45:01.532" endtime="20210322 17:45:01.534"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_number}</arg>
</arguments>
<msg timestamp="20210322 17:45:01.535" level="INFO">${account_number} = 9391292500</msg>
<status status="PASS" starttime="20210322 17:45:01.535" endtime="20210322 17:45:01.536"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["routing_number"]}</arg>
</arguments>
<assign>
<var>${account_routing_number}</var>
</assign>
<msg timestamp="20210322 17:45:01.537" level="INFO">${account_routing_number} = 001</msg>
<status status="PASS" starttime="20210322 17:45:01.536" endtime="20210322 17:45:01.537"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_routing_number}</arg>
</arguments>
<msg timestamp="20210322 17:45:01.539" level="INFO">${account_routing_number} = 001</msg>
<status status="PASS" starttime="20210322 17:45:01.538" endtime="20210322 17:45:01.539"></status>
</kw>
<status status="PASS" starttime="20210322 17:45:00.892" endtime="20210322 17:45:01.539"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 17:45:01.541" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:45:01.540" endtime="20210322 17:45:01.541"></status>
</kw>
<status status="PASS" starttime="20210322 17:44:58.263" endtime="20210322 17:45:01.541"></status>
</kw>
<kw name="criar chave pix" library="pix_dict_create_entry">
<arguments>
<arg>type=evp</arg>
<arg>value=${EMPTY}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 17:45:01.545" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 17:45:01.544" endtime="20210322 17:45:01.546"></status>
</kw>
<status status="PASS" starttime="20210322 17:45:01.543" endtime="20210322 17:45:01.546"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${type}</arg>
</arguments>
<msg timestamp="20210322 17:45:01.547" level="INFO">${type} = evp</msg>
<status status="PASS" starttime="20210322 17:45:01.546" endtime="20210322 17:45:01.547"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210322 17:45:01.548" level="INFO">${value} = </msg>
<status status="PASS" starttime="20210322 17:45:01.547" endtime="20210322 17:45:01.548"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:45:01.549" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 17:45:01.548" endtime="20210322 17:45:01.549"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "${type}",</arg>
<arg>"value": "${value}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 17:45:01.550" level="INFO">${body} = { "type": "evp", "value": "" }</msg>
<status status="PASS" starttime="20210322 17:45:01.549" endtime="20210322 17:45:01.550"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:45:01.551" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/afe7c2b1ad9f4fb49481ef392a1ed480/accounts/9c7f0dbd8eff4c0786a1b47b70a31258/entries, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "evp", "value": "" } 
json=None</msg>
<msg timestamp="20210322 17:45:03.085" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:45:01.550" endtime="20210322 17:45:03.085"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:45:03.088" level="INFO">{'id': '37bbf14a4f814797905b6f2e1b5debab', 'status': 'active', 'created_at': '2021-03-22T05:45:03.413', 'updated_at': '2021-03-22T05:45:04.302', 'key': {'value': '3f341bec-03db-4977-a497-42244f9e57a0', 'type': 'evp'}, 'account': {'id': '9c7f0dbd8eff4c0786a1b47b70a31258', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': 'afe7c2b1ad9f4fb49481ef392a1ed480', 'owner': {'name': 'Holder de teste', 'national_registration': '01467839566', 'type': 'individual'}, 'routing_number': '001', 'number': '9391292500', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}, 'resource': 'pix.entry'}</msg>
<status status="PASS" starttime="20210322 17:45:03.087" endtime="20210322 17:45:03.089"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:45:03.091" level="INFO">7f431721e405d9c8</msg>
<status status="PASS" starttime="20210322 17:45:03.090" endtime="20210322 17:45:03.092"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 17:45:03.093" level="INFO">201</msg>
<status status="PASS" starttime="20210322 17:45:03.092" endtime="20210322 17:45:03.094"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:45:03.095" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:45:03.094" endtime="20210322 17:45:03.095"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${entry_external_key}</var>
</assign>
<msg timestamp="20210322 17:45:03.097" level="INFO">${entry_external_key} = 37bbf14a4f814797905b6f2e1b5debab</msg>
<status status="PASS" starttime="20210322 17:45:03.096" endtime="20210322 17:45:03.097"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${entry_external_key}</arg>
</arguments>
<msg timestamp="20210322 17:45:03.099" level="INFO">${entry_external_key} = 37bbf14a4f814797905b6f2e1b5debab</msg>
<status status="PASS" starttime="20210322 17:45:03.098" endtime="20210322 17:45:03.099"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["key"]["value"]}</arg>
</arguments>
<assign>
<var>${entry_key_value}</var>
</assign>
<msg timestamp="20210322 17:45:03.100" level="INFO">${entry_key_value} = 3f341bec-03db-4977-a497-42244f9e57a0</msg>
<status status="PASS" starttime="20210322 17:45:03.099" endtime="20210322 17:45:03.100"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${entry_key_value}</arg>
</arguments>
<msg timestamp="20210322 17:45:03.101" level="INFO">${entry_key_value} = 3f341bec-03db-4977-a497-42244f9e57a0</msg>
<status status="PASS" starttime="20210322 17:45:03.101" endtime="20210322 17:45:03.102"></status>
</kw>
<status status="PASS" starttime="20210322 17:45:01.542" endtime="20210322 17:45:03.102"></status>
</kw>
<kw name="validar chave pix" library="asserts">
<arguments>
<arg>key_status=active</arg>
<arg>key_type=${type}</arg>
<arg>key_value=${EMPTY}</arg>
<arg>account_external_key=${account_external_key}</arg>
<arg>marketplace_external_key=${marketplace_external_key}</arg>
<arg>holder_external_key=${holder_external_key}</arg>
<arg>account_number=${account_number}</arg>
<arg>account_routing_number=${account_routing_number}</arg>
<arg>account_type=CACC</arg>
<arg>owner_key_name=${holder_name}</arg>
<arg>national_registration=${national_registration}</arg>
<arg>holder_type=${holder_type}</arg>
<arg>psp_code=19468242</arg>
<arg>psp_name=Zoop Tecnologia e Meios de Pagamento S.A.</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar status da chave</arg>
</arguments>
<msg timestamp="20210322 17:45:03.104" level="INFO">Validar status da chave</msg>
<status status="PASS" starttime="20210322 17:45:03.104" endtime="20210322 17:45:03.104"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["status"]}</arg>
<arg>${key_status}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:45:03.105" endtime="20210322 17:45:03.105"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando Tipo da chave PIX</arg>
</arguments>
<msg timestamp="20210322 17:45:03.106" level="INFO">Validando Tipo da chave PIX</msg>
<status status="PASS" starttime="20210322 17:45:03.106" endtime="20210322 17:45:03.106"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["key"]["type"]}</arg>
<arg>${key_type}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:45:03.107" endtime="20210322 17:45:03.107"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando Valor da chave PIX</arg>
</arguments>
<msg timestamp="20210322 17:45:03.108" level="INFO">Validando Valor da chave PIX</msg>
<status status="PASS" starttime="20210322 17:45:03.107" endtime="20210322 17:45:03.108"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${type}' == 'evp'</arg>
<arg>Should Not Be Empty</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' != 'evp'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${key_value}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${response.json()["key"]["value"]}</arg>
</arguments>
<msg timestamp="20210322 17:45:03.109" level="INFO">Length is 36</msg>
<status status="PASS" starttime="20210322 17:45:03.109" endtime="20210322 17:45:03.109"></status>
</kw>
<status status="PASS" starttime="20210322 17:45:03.108" endtime="20210322 17:45:03.109"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando dados da conta</arg>
</arguments>
<msg timestamp="20210322 17:45:03.110" level="INFO">Validando dados da conta</msg>
<status status="PASS" starttime="20210322 17:45:03.110" endtime="20210322 17:45:03.110"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["id"]}</arg>
<arg>${account_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:45:03.110" endtime="20210322 17:45:03.111"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["marketplace"]}</arg>
<arg>${marketplace_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:45:03.111" endtime="20210322 17:45:03.112"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["holder"]}</arg>
<arg>${holder_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:45:03.112" endtime="20210322 17:45:03.113"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["number"]}</arg>
<arg>${account_number}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:45:03.113" endtime="20210322 17:45:03.113"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["routing_number"]}</arg>
<arg>${account_routing_number}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:45:03.114" endtime="20210322 17:45:03.114"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["type"]}</arg>
<arg>${account_type}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:45:03.114" endtime="20210322 17:45:03.115"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar Proprietário da Account Owner</arg>
</arguments>
<msg timestamp="20210322 17:45:03.115" level="INFO">Validar Proprietário da Account Owner</msg>
<status status="PASS" starttime="20210322 17:45:03.115" endtime="20210322 17:45:03.116"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["account"]["owner"]["name"]}</arg>
<arg>${owner_key_name}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:45:03.116" endtime="20210322 17:45:03.116"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar national_registration da Account Owner</arg>
</arguments>
<msg timestamp="20210322 17:45:03.117" level="INFO">Validar national_registration da Account Owner</msg>
<status status="PASS" starttime="20210322 17:45:03.117" endtime="20210322 17:45:03.117"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["account"]["owner"]["national_registration"]}</arg>
<arg>${national_registration}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:45:03.117" endtime="20210322 17:45:03.117"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar Holder Type do Account Owner</arg>
</arguments>
<msg timestamp="20210322 17:45:03.118" level="INFO">Validar Holder Type do Account Owner</msg>
<status status="PASS" starttime="20210322 17:45:03.118" endtime="20210322 17:45:03.118"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["account"]["owner"]["type"]}</arg>
<arg>${holder_type}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:45:03.118" endtime="20210322 17:45:03.119"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar PSP</arg>
</arguments>
<msg timestamp="20210322 17:45:03.119" level="INFO">Validar PSP</msg>
<status status="PASS" starttime="20210322 17:45:03.119" endtime="20210322 17:45:03.119"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["psp"]["code"]}</arg>
<arg>${psp_code}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:45:03.120" endtime="20210322 17:45:03.120"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["psp"]["name"]}</arg>
<arg>${psp_name}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:45:03.120" endtime="20210322 17:45:03.121"></status>
</kw>
<status status="PASS" starttime="20210322 17:45:03.102" endtime="20210322 17:45:03.121"></status>
</kw>
<doc>Fluxo Básico</doc>
<tags>
<tag>regression_test</tag>
<tag>smoke_test</tag>
</tags>
<status status="PASS" starttime="20210322 17:44:58.262" endtime="20210322 17:45:03.121" critical="yes"></status>
</test>
<test id="s1-s1-s3-t2" name="Cenário: Criando Chave de Endereçamento do tipo Telefone">
<kw name="Random Number" library="FakerLibrary">
<doc>Returns a random number with 1 digit (default, when digits==None),
a random number with 0 to given number of digits, or a random number
with given number to given number of digits (when ``fix_len==True``).</doc>
<arguments>
<arg>digits=8</arg>
<arg>fix_len=True</arg>
</arguments>
<assign>
<var>${phone}</var>
</assign>
<msg timestamp="20210322 17:45:03.123" level="INFO">${phone} = 93630165</msg>
<status status="PASS" starttime="20210322 17:45:03.122" endtime="20210322 17:45:03.123"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>+55219${phone}</arg>
</arguments>
<assign>
<var>${phone_pix}</var>
</assign>
<msg timestamp="20210322 17:45:03.123" level="INFO">${phone_pix} = +5521993630165</msg>
<status status="PASS" starttime="20210322 17:45:03.123" endtime="20210322 17:45:03.123"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${phone_pix}</arg>
</arguments>
<msg timestamp="20210322 17:45:03.124" level="INFO">${phone_pix} = +5521993630165</msg>
<status status="PASS" starttime="20210322 17:45:03.123" endtime="20210322 17:45:03.124"></status>
</kw>
<kw name="criar holder individual ativo" library="accreditation_create_holder_active">
<kw name="conectar accreditation" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accreditation</arg>
<arg>url=${accreditation_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 17:45:03.125" level="INFO">Creating Session using : alias=accreditation, url=https://banking-accreditation-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 17:45:03.125" endtime="20210322 17:45:03.125"></status>
</kw>
<status status="PASS" starttime="20210322 17:45:03.124" endtime="20210322 17:45:03.126"></status>
</kw>
<kw name="Cpf" library="FakerLibrary">
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 17:45:03.126" level="INFO">${national_registration} = 381.605.294-06</msg>
<status status="PASS" starttime="20210322 17:45:03.126" endtime="20210322 17:45:03.126"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${national_registration}</arg>
<arg>.</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 17:45:03.127" level="INFO">${national_registration} = 381605294-06</msg>
<status status="PASS" starttime="20210322 17:45:03.126" endtime="20210322 17:45:03.127"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${national_registration}</arg>
<arg>-</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 17:45:03.127" level="INFO">${national_registration} = 38160529406</msg>
<status status="PASS" starttime="20210322 17:45:03.127" endtime="20210322 17:45:03.127"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${national_registration}</arg>
</arguments>
<msg timestamp="20210322 17:45:03.128" level="INFO">${national_registration} = 38160529406</msg>
<status status="PASS" starttime="20210322 17:45:03.128" endtime="20210322 17:45:03.128"></status>
</kw>
<kw name="Rg" library="FakerLibrary">
<doc>Brazilian RG, return plain numbers.
Check:  https://www.ngmatematica.com/2014/02/como-determinar-o-digito-verificador-do.html</doc>
<assign>
<var>${identity_card}</var>
</assign>
<msg timestamp="20210322 17:45:03.129" level="INFO">${identity_card} = 243065875</msg>
<status status="PASS" starttime="20210322 17:45:03.128" endtime="20210322 17:45:03.129"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${identity_card}</arg>
</arguments>
<msg timestamp="20210322 17:45:03.130" level="INFO">${identity_card} = 243065875</msg>
<status status="PASS" starttime="20210322 17:45:03.129" endtime="20210322 17:45:03.130"></status>
</kw>
<kw name="criar holder individual" library="accreditation_post_holder_individual">
<arguments>
<arg>holder_type=individual</arg>
<arg>holder_name=${holder_name}</arg>
<arg>email=${email}</arg>
<arg>national_registration=${national_registration}</arg>
<arg>revenue=${revenue}</arg>
<arg>birthday=${birthday}</arg>
<arg>mothers_name=${mothers_name}</arg>
<arg>identity_card=${identity_card}</arg>
<arg>pep=false</arg>
<arg>cbo=${cbo}</arg>
</arguments>
<kw name="conectar accreditation" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accreditation</arg>
<arg>url=${accreditation_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 17:45:03.132" level="INFO">Creating Session using : alias=accreditation, url=https://banking-accreditation-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 17:45:03.132" endtime="20210322 17:45:03.133"></status>
</kw>
<status status="PASS" starttime="20210322 17:45:03.131" endtime="20210322 17:45:03.133"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_type}</arg>
</arguments>
<msg timestamp="20210322 17:45:03.133" level="INFO">${holder_type} = individual</msg>
<status status="PASS" starttime="20210322 17:45:03.133" endtime="20210322 17:45:03.134"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_name}</arg>
</arguments>
<msg timestamp="20210322 17:45:03.134" level="INFO">${holder_name} = Holder de teste</msg>
<status status="PASS" starttime="20210322 17:45:03.134" endtime="20210322 17:45:03.134"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:45:03.135" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 17:45:03.134" endtime="20210322 17:45:03.135"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "${holder_type}",</arg>
<arg>"name": "${holder_name}",</arg>
<arg>"email": "${email}",</arg>
<arg>"national_registration": "${national_registration}",</arg>
<arg>"revenue": ${revenue},</arg>
<arg>"birthday": "${birthday}",</arg>
<arg>"mothers_name": "${mothers_name}",</arg>
<arg>"identity_card": "${identity_card}",</arg>
<arg>"pep": false,</arg>
<arg>"cbo": ${cbo}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 17:45:03.136" level="INFO">${body} = { "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "38160529406", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder",...</msg>
<status status="PASS" starttime="20210322 17:45:03.135" endtime="20210322 17:45:03.136"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:45:03.137" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "38160529406", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder", "identity_card": "243065875", "pep": false, "cbo": 821450 } 
json=None</msg>
<msg timestamp="20210322 17:45:03.784" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:45:03.136" endtime="20210322 17:45:03.784"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:45:03.787" level="INFO">{'id': 'b9930fb69a9d40c8a00ade7da1484cff', 'name': 'Holder de teste', 'revenue': 5500.0, 'email': 'teste@teste.com.br', 'status': 'waiting_info_and_documents', 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'marketplace_name': 'Marketplace de Teste', 'created_at': '2021-03-22T17:45:04.969647', 'updated_at': '2021-03-22T17:45:04.969649', 'type': 'individual', 'national_registration': '38160529406', 'birthday': '1988-04-23', 'mothers_name': 'Mãe do Holder', 'identity_card': '243065875', 'pep': False, 'cbo': '821450', '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/b9930fb69a9d40c8a00ade7da1484cff', 'type': 'GET'}, 'phones': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/b9930fb69a9d40c8a00ade7da1484cff/phones', 'type': 'GET'}, 'addresses': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/b9930fb69a9d40c8a00ade7da1484cff/addresses', 'type': 'GET'}, 'documents': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/b9930fb69a9d40c8a00ade7da1484cff/documents', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 17:45:03.786" endtime="20210322 17:45:03.788"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:45:03.790" level="INFO">36ab001af82221aa</msg>
<status status="PASS" starttime="20210322 17:45:03.789" endtime="20210322 17:45:03.790"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${body}</arg>
</arguments>
<msg timestamp="20210322 17:45:03.791" level="INFO">{ "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "38160529406", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder", "identity_card": "243065875", "pep": false, "cbo": 821450 }</msg>
<status status="PASS" starttime="20210322 17:45:03.791" endtime="20210322 17:45:03.792"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:45:03.793" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:45:03.792" endtime="20210322 17:45:03.793"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${holder_external_key}</var>
</assign>
<msg timestamp="20210322 17:45:03.796" level="INFO">${holder_external_key} = b9930fb69a9d40c8a00ade7da1484cff</msg>
<status status="PASS" starttime="20210322 17:45:03.794" endtime="20210322 17:45:03.796"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_external_key}</arg>
</arguments>
<msg timestamp="20210322 17:45:03.797" level="INFO">${holder_external_key} = b9930fb69a9d40c8a00ade7da1484cff</msg>
<status status="PASS" starttime="20210322 17:45:03.796" endtime="20210322 17:45:03.797"></status>
</kw>
<status status="PASS" starttime="20210322 17:45:03.130" endtime="20210322 17:45:03.797"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_name}</arg>
</arguments>
<msg timestamp="20210322 17:45:03.799" level="INFO">${holder_name} = Holder de teste</msg>
<status status="PASS" starttime="20210322 17:45:03.798" endtime="20210322 17:45:03.799"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 17:45:03.799" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:45:03.799" endtime="20210322 17:45:03.800"></status>
</kw>
<kw name="criar holder phone" library="accreditation_post_holder_phone">
<arguments>
<arg>21</arg>
<arg>51</arg>
<arg>996221236</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:45:03.801" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 17:45:03.800" endtime="20210322 17:45:03.801"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"area_code": "${phone_area_code}",</arg>
<arg>"country_code": "${phone_country_code}",</arg>
<arg>"number": "${phone_number}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 17:45:03.802" level="INFO">${body} = { "area_code": "21", "country_code": "51", "number": "996221236" }</msg>
<status status="PASS" starttime="20210322 17:45:03.802" endtime="20210322 17:45:03.802"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/phones</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:45:03.803" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/b9930fb69a9d40c8a00ade7da1484cff/phones, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "area_code": "21", "country_code": "51", "number": "996221236" } 
json=None</msg>
<msg timestamp="20210322 17:45:04.021" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:45:03.803" endtime="20210322 17:45:04.021"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:45:04.024" level="INFO">{'id': '7e5296c25e814cbdb3bb6a7f503a3648', 'area_code': '21', 'country_code': '51', 'number': '996221236', 'main': True, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/b9930fb69a9d40c8a00ade7da1484cff/phones/7e5296c25e814cbdb3bb6a7f503a3648', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/b9930fb69a9d40c8a00ade7da1484cff', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 17:45:04.023" endtime="20210322 17:45:04.024"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:45:04.026" level="INFO">7fcbba1d194481a5</msg>
<status status="PASS" starttime="20210322 17:45:04.026" endtime="20210322 17:45:04.026"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:45:04.027" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:45:04.026" endtime="20210322 17:45:04.028"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${phone_external_key}</var>
</assign>
<msg timestamp="20210322 17:45:04.030" level="INFO">${phone_external_key} = 7e5296c25e814cbdb3bb6a7f503a3648</msg>
<status status="PASS" starttime="20210322 17:45:04.028" endtime="20210322 17:45:04.030"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${phone_external_key}</arg>
</arguments>
<msg timestamp="20210322 17:45:04.030" level="INFO">${phone_external_key} = 7e5296c25e814cbdb3bb6a7f503a3648</msg>
<status status="PASS" starttime="20210322 17:45:04.030" endtime="20210322 17:45:04.031"></status>
</kw>
<status status="PASS" starttime="20210322 17:45:03.800" endtime="20210322 17:45:04.031"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 17:45:04.032" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:45:04.031" endtime="20210322 17:45:04.032"></status>
</kw>
<kw name="criar holder address" library="accreditation_post_holder_address">
<arguments>
<arg>Rio de Janeiro</arg>
<arg>Rio de Janeiro</arg>
<arg>Brasil</arg>
<arg>Bairro de Testes</arg>
<arg>Rua de Testes</arg>
<arg>90</arg>
<arg>apto 200</arg>
<arg>21550987</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:45:04.034" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 17:45:04.034" endtime="20210322 17:45:04.034"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"city": "${city}",</arg>
<arg>"state": "${state}",</arg>
<arg>"country": "${country}",</arg>
<arg>"neighborhood": "${neighborhood}",</arg>
<arg>"street": "${street}",</arg>
<arg>"number": "${number}",</arg>
<arg>"complement": "${complement}",</arg>
<arg>"postal_code": "${postal_code}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 17:45:04.035" level="INFO">${body} = { "city": "Rio de Janeiro", "state": "Rio de Janeiro", "country": "Brasil", "neighborhood": "Bairro de Testes", "street": "Rua de Testes", "number": "90", "complement": "apto 200", "postal_code": "215...</msg>
<status status="PASS" starttime="20210322 17:45:04.034" endtime="20210322 17:45:04.037"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/addresses</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:45:04.037" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/b9930fb69a9d40c8a00ade7da1484cff/addresses, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "city": "Rio de Janeiro", "state": "Rio de Janeiro", "country": "Brasil", "neighborhood": "Bairro de Testes", "street": "Rua de Testes", "number": "90", "complement": "apto 200", "postal_code": "21550987" } 
json=None</msg>
<msg timestamp="20210322 17:45:04.256" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:45:04.037" endtime="20210322 17:45:04.256"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:45:04.259" level="INFO">{'id': '837e5302777542539033f0bd7ee5e109', 'street': 'Rua de Testes', 'number': '90', 'city': 'Rio de Janeiro', 'complement': 'apto 200', 'state': 'Rio de Janeiro', 'neighborhood': 'Bairro de Testes', 'postal_code': '21550987', 'country': 'Brasil', 'main': True, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/b9930fb69a9d40c8a00ade7da1484cff/addresses/837e5302777542539033f0bd7ee5e109', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/b9930fb69a9d40c8a00ade7da1484cff', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 17:45:04.257" endtime="20210322 17:45:04.260"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:45:04.262" level="INFO">4ae7dd0503b9676b</msg>
<status status="PASS" starttime="20210322 17:45:04.261" endtime="20210322 17:45:04.262"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:45:04.264" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:45:04.263" endtime="20210322 17:45:04.264"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${address_external_key}</var>
</assign>
<msg timestamp="20210322 17:45:04.266" level="INFO">${address_external_key} = 837e5302777542539033f0bd7ee5e109</msg>
<status status="PASS" starttime="20210322 17:45:04.265" endtime="20210322 17:45:04.266"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${address_external_key}</arg>
</arguments>
<msg timestamp="20210322 17:45:04.267" level="INFO">${address_external_key} = 837e5302777542539033f0bd7ee5e109</msg>
<status status="PASS" starttime="20210322 17:45:04.267" endtime="20210322 17:45:04.268"></status>
</kw>
<status status="PASS" starttime="20210322 17:45:04.033" endtime="20210322 17:45:04.268"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 17:45:04.269" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:45:04.268" endtime="20210322 17:45:04.269"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>SELFIE</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:45:04.271" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 17:45:04.270" endtime="20210322 17:45:04.271"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 17:45:04.272" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 17:45:04.274" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 17:45:04.271" endtime="20210322 17:45:04.274"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:45:04.275" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/b9930fb69a9d40c8a00ade7da1484cff/documents?type=SELFIE, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 17:45:04.611" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:45:04.274" endtime="20210322 17:45:04.611"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:45:04.614" level="INFO">{'id': 'a2f946e4d2d14dbfae0746f312adbf78', 'document_type': 'selfie', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/b9930fb69a9d40c8a00ade7da1484cff/documents/a2f946e4d2d14dbfae0746f312adbf78', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/b9930fb69a9d40c8a00ade7da1484cff', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/b9930fb69a9d40c8a00ade7da1484cff/documents/a2f946e4d2d14dbfae0746f312adbf78/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 17:45:04.612" endtime="20210322 17:45:04.615"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:45:04.617" level="INFO">0132595d444be464</msg>
<status status="PASS" starttime="20210322 17:45:04.616" endtime="20210322 17:45:04.617"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:45:04.620" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:45:04.618" endtime="20210322 17:45:04.620"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 17:45:04.623" level="INFO">${document_external_key} = a2f946e4d2d14dbfae0746f312adbf78</msg>
<status status="PASS" starttime="20210322 17:45:04.621" endtime="20210322 17:45:04.623"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 17:45:04.625" level="INFO">${document_external_key} = a2f946e4d2d14dbfae0746f312adbf78</msg>
<status status="PASS" starttime="20210322 17:45:04.624" endtime="20210322 17:45:04.625"></status>
</kw>
<status status="PASS" starttime="20210322 17:45:04.269" endtime="20210322 17:45:04.626"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 17:45:04.627" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:45:04.626" endtime="20210322 17:45:04.627"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>RG_FRENTE</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:45:04.629" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 17:45:04.629" endtime="20210322 17:45:04.630"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 17:45:04.631" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 17:45:04.633" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 17:45:04.630" endtime="20210322 17:45:04.634"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:45:04.635" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/b9930fb69a9d40c8a00ade7da1484cff/documents?type=RG_FRENTE, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 17:45:04.999" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:45:04.634" endtime="20210322 17:45:04.999"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:45:05.002" level="INFO">{'id': '223d85ed1ca34043a9dad2c8f3814a67', 'document_type': 'rg_frente', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/b9930fb69a9d40c8a00ade7da1484cff/documents/223d85ed1ca34043a9dad2c8f3814a67', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/b9930fb69a9d40c8a00ade7da1484cff', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/b9930fb69a9d40c8a00ade7da1484cff/documents/223d85ed1ca34043a9dad2c8f3814a67/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 17:45:05.000" endtime="20210322 17:45:05.003"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:45:05.006" level="INFO">79cfb5d0b7e9d351</msg>
<status status="PASS" starttime="20210322 17:45:05.004" endtime="20210322 17:45:05.006"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:45:05.009" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:45:05.007" endtime="20210322 17:45:05.009"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 17:45:05.012" level="INFO">${document_external_key} = 223d85ed1ca34043a9dad2c8f3814a67</msg>
<status status="PASS" starttime="20210322 17:45:05.009" endtime="20210322 17:45:05.012"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 17:45:05.015" level="INFO">${document_external_key} = 223d85ed1ca34043a9dad2c8f3814a67</msg>
<status status="PASS" starttime="20210322 17:45:05.013" endtime="20210322 17:45:05.015"></status>
</kw>
<status status="PASS" starttime="20210322 17:45:04.628" endtime="20210322 17:45:05.015"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 17:45:05.016" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:45:05.015" endtime="20210322 17:45:05.016"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>RG_VERSO</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:45:05.018" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 17:45:05.018" endtime="20210322 17:45:05.019"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 17:45:05.020" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 17:45:05.022" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 17:45:05.019" endtime="20210322 17:45:05.023"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:45:05.024" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/b9930fb69a9d40c8a00ade7da1484cff/documents?type=RG_VERSO, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 17:45:05.298" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:45:05.024" endtime="20210322 17:45:05.298"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:45:05.301" level="INFO">{'id': 'bf450a094a4b4e4884fb04d51355a88c', 'document_type': 'rg_verso', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/b9930fb69a9d40c8a00ade7da1484cff/documents/bf450a094a4b4e4884fb04d51355a88c', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/b9930fb69a9d40c8a00ade7da1484cff', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/b9930fb69a9d40c8a00ade7da1484cff/documents/bf450a094a4b4e4884fb04d51355a88c/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 17:45:05.299" endtime="20210322 17:45:05.302"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:45:05.306" level="INFO">ee8df8cbe7bc7183</msg>
<status status="PASS" starttime="20210322 17:45:05.304" endtime="20210322 17:45:05.307"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:45:05.310" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:45:05.308" endtime="20210322 17:45:05.310"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 17:45:05.313" level="INFO">${document_external_key} = bf450a094a4b4e4884fb04d51355a88c</msg>
<status status="PASS" starttime="20210322 17:45:05.311" endtime="20210322 17:45:05.313"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 17:45:05.314" level="INFO">${document_external_key} = bf450a094a4b4e4884fb04d51355a88c</msg>
<status status="PASS" starttime="20210322 17:45:05.314" endtime="20210322 17:45:05.315"></status>
</kw>
<status status="PASS" starttime="20210322 17:45:05.016" endtime="20210322 17:45:05.315"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 17:45:05.316" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:45:05.315" endtime="20210322 17:45:05.316"></status>
</kw>
<kw name="solicitar aprovação do holder" library="accreditation_request_approval">
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:45:05.318" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 17:45:05.317" endtime="20210322 17:45:05.318"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/approval</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:45:05.320" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/b9930fb69a9d40c8a00ade7da1484cff/approval, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data=None 
json=None</msg>
<msg timestamp="20210322 17:45:05.624" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 17:45:05.319" endtime="20210322 17:45:05.625"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:45:05.627" level="INFO">{'message': 'Approval request accepted successfully. Processing analysis'}</msg>
<status status="PASS" starttime="20210322 17:45:05.626" endtime="20210322 17:45:05.628"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:45:05.629" level="INFO">b1979b1184cc2a54</msg>
<status status="PASS" starttime="20210322 17:45:05.629" endtime="20210322 17:45:05.630"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:45:05.631" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 17:45:05.630" endtime="20210322 17:45:05.632"></status>
</kw>
<status status="PASS" starttime="20210322 17:45:05.317" endtime="20210322 17:45:05.632"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 17:45:05.633" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:45:05.633" endtime="20210322 17:45:05.634"></status>
</kw>
<kw name="recebendo notificação de aprovação" library="accreditation_risk_notification">
<kw name="Uuid 4" library="FakerLibrary">
<doc>Generates a random UUID4 string.
:param cast_to: Specify what type the UUID should be cast to. Default is `str`
:type cast_to: callable</doc>
<assign>
<var>${assessment_id}</var>
</assign>
<msg timestamp="20210322 17:45:05.635" level="INFO">${assessment_id} = f05d9f5a-0af9-48f6-94b3-f735f749e7e5</msg>
<status status="PASS" starttime="20210322 17:45:05.635" endtime="20210322 17:45:05.636"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>year</arg>
</arguments>
<assign>
<var>${year}</var>
</assign>
<msg timestamp="20210322 17:45:05.637" level="INFO">${year} = 2021</msg>
<status status="PASS" starttime="20210322 17:45:05.636" endtime="20210322 17:45:05.637"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>month</arg>
</arguments>
<assign>
<var>${month}</var>
</assign>
<msg timestamp="20210322 17:45:05.638" level="INFO">${month} = 03</msg>
<status status="PASS" starttime="20210322 17:45:05.637" endtime="20210322 17:45:05.638"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>day</arg>
</arguments>
<assign>
<var>${day}</var>
</assign>
<msg timestamp="20210322 17:45:05.639" level="INFO">${day} = 22</msg>
<status status="PASS" starttime="20210322 17:45:05.638" endtime="20210322 17:45:05.639"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:45:05.640" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 17:45:05.639" endtime="20210322 17:45:05.640"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "risk.assessment.result",</arg>
<arg>"resource": "business.holder",</arg>
<arg>"created_at": "${year}-${month}-${day} 15:28:56.747Z",</arg>
<arg>"marketplace_id": "${marketplace_external_key}",</arg>
<arg>"object": {</arg>
<arg>"result": "APPROVED",</arg>
<arg>"holder_id": "${holder_external_key}",</arg>
<arg>"applicant_id": "${application_external_key}",</arg>
<arg>"assessment_id": "${assessment_id}"</arg>
<arg>}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 17:45:05.641" level="INFO">${body} = { "type": "risk.assessment.result", "resource": "business.holder", "created_at": "2021-03-22 15:28:56.747Z", "marketplace_id": "f71a8951368a4cc085cf7875ff44e61c", "object": { "result": "APPROVED", "ho...</msg>
<status status="PASS" starttime="20210322 17:45:05.640" endtime="20210322 17:45:05.641"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/admin/internal_operation/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/registration/approval</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:45:05.642" level="INFO">POST Request using : uri=/admin/internal_operation/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/b9930fb69a9d40c8a00ade7da1484cff/registration/approval, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "risk.assessment.result", "resource": "business.holder", "created_at": "2021-03-22 15:28:56.747Z", "marketplace_id": "f71a8951368a4cc085cf7875ff44e61c", "object": { "result": "APPROVED", "holder_id": "b9930fb69a9d40c8a00ade7da1484cff", "applicant_id": "bcc25a6751c14b52af1340d40dba78c5", "assessment_id": "f05d9f5a-0af9-48f6-94b3-f735f749e7e5" } } 
json=None</msg>
<msg timestamp="20210322 17:45:05.847" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 17:45:05.641" endtime="20210322 17:45:05.847"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:45:05.848" level="INFO">{'message': 'Holder approved successfully'}</msg>
<status status="PASS" starttime="20210322 17:45:05.847" endtime="20210322 17:45:05.848"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:45:05.848" level="INFO">cdd9352b20d71999</msg>
<status status="PASS" starttime="20210322 17:45:05.848" endtime="20210322 17:45:05.849"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:45:05.849" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 17:45:05.849" endtime="20210322 17:45:05.849"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 17:45:05.850" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:45:05.850" endtime="20210322 17:45:05.850"></status>
</kw>
<status status="PASS" starttime="20210322 17:45:05.634" endtime="20210322 17:45:05.850"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 17:45:05.851" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:45:05.850" endtime="20210322 17:45:05.851"></status>
</kw>
<kw name="buscar account por holder" library="accounts_get_accounts_by_holder">
<kw name="conectar accounts" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accounts</arg>
<arg>url=${account_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 17:45:05.852" level="INFO">Creating Session using : alias=accounts, url=https://banking-accounts-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 17:45:05.852" endtime="20210322 17:45:05.853"></status>
</kw>
<status status="PASS" starttime="20210322 17:45:05.852" endtime="20210322 17:45:05.853"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accounts</arg>
<arg>/marketplaces/${marketplace_external_key}/holders/${holder_external_key}/accounts</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:45:05.854" level="INFO">GET Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/holders/b9930fb69a9d40c8a00ade7da1484cff/accounts, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 17:45:06.512" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 17:45:05.854" endtime="20210322 17:45:06.512"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:45:06.514" level="INFO">{'items': [{'id': 'e0a3e9066bb04d1b82d46df68bad03a6', 'holder': 'b9930fb69a9d40c8a00ade7da1484cff', 'balance': '0.00', 'currency': 'BRL', 'routing_number': '001', 'number': '3924742072', 'status': 'active', 'metadata': {}, 'created_at': '2021-03-22T20:45:07.032223', 'updated_at': '2021-03-22T20:45:07.032223', 'primary': True, 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'uri': '/v2/marketplaces/f71a8951368a4cc085cf7875ff44e61c/accounts/e0a3e9066bb04d1b82d46df68bad03a6', 'resource': 'payment_account'}], 'has_more': False, 'limit': 100, 'total_pages': 1, 'page': 1, 'offset': 0, 'total': '1', 'query_count': '1'}</msg>
<status status="PASS" starttime="20210322 17:45:06.513" endtime="20210322 17:45:06.514"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:45:06.516" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 17:45:06.515" endtime="20210322 17:45:06.516"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["id"]}</arg>
</arguments>
<assign>
<var>${account_external_key}</var>
</assign>
<msg timestamp="20210322 17:45:06.518" level="INFO">${account_external_key} = e0a3e9066bb04d1b82d46df68bad03a6</msg>
<status status="PASS" starttime="20210322 17:45:06.516" endtime="20210322 17:45:06.519"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_external_key}</arg>
</arguments>
<msg timestamp="20210322 17:45:06.520" level="INFO">${account_external_key} = e0a3e9066bb04d1b82d46df68bad03a6</msg>
<status status="PASS" starttime="20210322 17:45:06.519" endtime="20210322 17:45:06.520"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["number"]}</arg>
</arguments>
<assign>
<var>${account_number}</var>
</assign>
<msg timestamp="20210322 17:45:06.521" level="INFO">${account_number} = 3924742072</msg>
<status status="PASS" starttime="20210322 17:45:06.520" endtime="20210322 17:45:06.522"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_number}</arg>
</arguments>
<msg timestamp="20210322 17:45:06.523" level="INFO">${account_number} = 3924742072</msg>
<status status="PASS" starttime="20210322 17:45:06.522" endtime="20210322 17:45:06.523"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["routing_number"]}</arg>
</arguments>
<assign>
<var>${account_routing_number}</var>
</assign>
<msg timestamp="20210322 17:45:06.524" level="INFO">${account_routing_number} = 001</msg>
<status status="PASS" starttime="20210322 17:45:06.523" endtime="20210322 17:45:06.524"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_routing_number}</arg>
</arguments>
<msg timestamp="20210322 17:45:06.525" level="INFO">${account_routing_number} = 001</msg>
<status status="PASS" starttime="20210322 17:45:06.524" endtime="20210322 17:45:06.525"></status>
</kw>
<status status="PASS" starttime="20210322 17:45:05.851" endtime="20210322 17:45:06.525"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 17:45:06.526" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:45:06.526" endtime="20210322 17:45:06.526"></status>
</kw>
<status status="PASS" starttime="20210322 17:45:03.124" endtime="20210322 17:45:06.526"></status>
</kw>
<kw name="criar chave pix" library="pix_dict_create_entry">
<arguments>
<arg>type=phone</arg>
<arg>value=${phone_pix}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 17:45:06.528" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 17:45:06.528" endtime="20210322 17:45:06.529"></status>
</kw>
<status status="PASS" starttime="20210322 17:45:06.527" endtime="20210322 17:45:06.529"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${type}</arg>
</arguments>
<msg timestamp="20210322 17:45:06.530" level="INFO">${type} = phone</msg>
<status status="PASS" starttime="20210322 17:45:06.529" endtime="20210322 17:45:06.530"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210322 17:45:06.530" level="INFO">${value} = +5521993630165</msg>
<status status="PASS" starttime="20210322 17:45:06.530" endtime="20210322 17:45:06.530"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:45:06.531" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 17:45:06.531" endtime="20210322 17:45:06.531"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "${type}",</arg>
<arg>"value": "${value}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 17:45:06.532" level="INFO">${body} = { "type": "phone", "value": "+5521993630165" }</msg>
<status status="PASS" starttime="20210322 17:45:06.531" endtime="20210322 17:45:06.532"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:45:06.533" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/b9930fb69a9d40c8a00ade7da1484cff/accounts/e0a3e9066bb04d1b82d46df68bad03a6/entries, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "phone", "value": "+5521993630165" } 
json=None</msg>
<msg timestamp="20210322 17:45:07.191" level="INFO">${response} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20210322 17:45:06.532" endtime="20210322 17:45:07.192"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:45:07.193" level="INFO">{'id': 'aea482822f5142108280915f04b64752', 'status': 'waiting_ownership_verification', 'created_at': '2021-03-22T05:45:08.385', 'updated_at': '2021-03-22T05:45:08.385', 'key': {'value': '+5521993630165', 'type': 'phone'}, 'account': {'id': 'e0a3e9066bb04d1b82d46df68bad03a6', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': 'b9930fb69a9d40c8a00ade7da1484cff', 'owner': {'name': 'Holder de teste', 'national_registration': '38160529406', 'type': 'individual'}, 'routing_number': '001', 'number': '3924742072', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}, 'resource': 'pix.entry'}</msg>
<status status="PASS" starttime="20210322 17:45:07.192" endtime="20210322 17:45:07.194"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:45:07.195" level="INFO">6ca12b2a2c7e7820</msg>
<status status="PASS" starttime="20210322 17:45:07.194" endtime="20210322 17:45:07.195"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 17:45:07.197" level="INFO">202</msg>
<status status="PASS" starttime="20210322 17:45:07.196" endtime="20210322 17:45:07.197"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:45:07.198" level="INFO">${response} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20210322 17:45:07.198" endtime="20210322 17:45:07.199"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${entry_external_key}</var>
</assign>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:45:07.201" endtime="20210322 17:45:07.202"></status>
</kw>
<msg timestamp="20210322 17:45:07.203" level="INFO">${entry_external_key} = aea482822f5142108280915f04b64752</msg>
<status status="PASS" starttime="20210322 17:45:07.199" endtime="20210322 17:45:07.203"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${entry_external_key}</arg>
</arguments>
<msg timestamp="20210322 17:45:07.204" level="INFO">${entry_external_key} = aea482822f5142108280915f04b64752</msg>
<status status="PASS" starttime="20210322 17:45:07.203" endtime="20210322 17:45:07.204"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["key"]["value"]}</arg>
</arguments>
<assign>
<var>${entry_key_value}</var>
</assign>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["key"]["value"]}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:45:07.206" endtime="20210322 17:45:07.207"></status>
</kw>
<msg timestamp="20210322 17:45:07.207" level="INFO">${entry_key_value} = +5521993630165</msg>
<status status="PASS" starttime="20210322 17:45:07.205" endtime="20210322 17:45:07.207"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${entry_key_value}</arg>
</arguments>
<msg timestamp="20210322 17:45:07.208" level="INFO">${entry_key_value} = +5521993630165</msg>
<status status="PASS" starttime="20210322 17:45:07.208" endtime="20210322 17:45:07.208"></status>
</kw>
<status status="PASS" starttime="20210322 17:45:06.527" endtime="20210322 17:45:07.209"></status>
</kw>
<kw name="validar chave pix" library="asserts">
<arguments>
<arg>key_status=waiting_ownership_verification</arg>
<arg>key_type=${type}</arg>
<arg>key_value=${value}</arg>
<arg>account_external_key=${account_external_key}</arg>
<arg>marketplace_external_key=${marketplace_external_key}</arg>
<arg>holder_external_key=${holder_external_key}</arg>
<arg>account_number=${account_number}</arg>
<arg>account_routing_number=${account_routing_number}</arg>
<arg>account_type=CACC</arg>
<arg>owner_key_name=${holder_name}</arg>
<arg>national_registration=${national_registration}</arg>
<arg>holder_type=${holder_type}</arg>
<arg>psp_code=19468242</arg>
<arg>psp_name=Zoop Tecnologia e Meios de Pagamento S.A.</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar status da chave</arg>
</arguments>
<msg timestamp="20210322 17:45:07.211" level="INFO">Validar status da chave</msg>
<status status="PASS" starttime="20210322 17:45:07.211" endtime="20210322 17:45:07.211"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["status"]}</arg>
<arg>${key_status}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:45:07.212" endtime="20210322 17:45:07.212"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando Tipo da chave PIX</arg>
</arguments>
<msg timestamp="20210322 17:45:07.213" level="INFO">Validando Tipo da chave PIX</msg>
<status status="PASS" starttime="20210322 17:45:07.213" endtime="20210322 17:45:07.213"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["key"]["type"]}</arg>
<arg>${key_type}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:45:07.214" endtime="20210322 17:45:07.214"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando Valor da chave PIX</arg>
</arguments>
<msg timestamp="20210322 17:45:07.215" level="INFO">Validando Valor da chave PIX</msg>
<status status="PASS" starttime="20210322 17:45:07.215" endtime="20210322 17:45:07.215"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${type}' == 'evp'</arg>
<arg>Should Not Be Empty</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' != 'evp'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${key_value}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${key_value}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:45:07.216" endtime="20210322 17:45:07.217"></status>
</kw>
<status status="PASS" starttime="20210322 17:45:07.215" endtime="20210322 17:45:07.217"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando dados da conta</arg>
</arguments>
<msg timestamp="20210322 17:45:07.218" level="INFO">Validando dados da conta</msg>
<status status="PASS" starttime="20210322 17:45:07.217" endtime="20210322 17:45:07.218"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["id"]}</arg>
<arg>${account_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:45:07.218" endtime="20210322 17:45:07.219"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["marketplace"]}</arg>
<arg>${marketplace_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:45:07.219" endtime="20210322 17:45:07.220"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["holder"]}</arg>
<arg>${holder_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:45:07.220" endtime="20210322 17:45:07.221"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["number"]}</arg>
<arg>${account_number}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:45:07.221" endtime="20210322 17:45:07.221"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["routing_number"]}</arg>
<arg>${account_routing_number}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:45:07.222" endtime="20210322 17:45:07.222"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["type"]}</arg>
<arg>${account_type}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:45:07.223" endtime="20210322 17:45:07.223"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar Proprietário da Account Owner</arg>
</arguments>
<msg timestamp="20210322 17:45:07.224" level="INFO">Validar Proprietário da Account Owner</msg>
<status status="PASS" starttime="20210322 17:45:07.224" endtime="20210322 17:45:07.224"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["account"]["owner"]["name"]}</arg>
<arg>${owner_key_name}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:45:07.224" endtime="20210322 17:45:07.224"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar national_registration da Account Owner</arg>
</arguments>
<msg timestamp="20210322 17:45:07.224" level="INFO">Validar national_registration da Account Owner</msg>
<status status="PASS" starttime="20210322 17:45:07.224" endtime="20210322 17:45:07.224"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["account"]["owner"]["national_registration"]}</arg>
<arg>${national_registration}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:45:07.225" endtime="20210322 17:45:07.225"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar Holder Type do Account Owner</arg>
</arguments>
<msg timestamp="20210322 17:45:07.227" level="INFO">Validar Holder Type do Account Owner</msg>
<status status="PASS" starttime="20210322 17:45:07.227" endtime="20210322 17:45:07.227"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["account"]["owner"]["type"]}</arg>
<arg>${holder_type}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:45:07.227" endtime="20210322 17:45:07.227"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar PSP</arg>
</arguments>
<msg timestamp="20210322 17:45:07.228" level="INFO">Validar PSP</msg>
<status status="PASS" starttime="20210322 17:45:07.227" endtime="20210322 17:45:07.228"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["psp"]["code"]}</arg>
<arg>${psp_code}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:45:07.228" endtime="20210322 17:45:07.228"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["psp"]["name"]}</arg>
<arg>${psp_name}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:45:07.229" endtime="20210322 17:45:07.229"></status>
</kw>
<status status="PASS" starttime="20210322 17:45:07.209" endtime="20210322 17:45:07.229"></status>
</kw>
<doc>Fluxo Básico</doc>
<tags>
<tag>regression_test</tag>
<tag>smoke_test</tag>
</tags>
<status status="PASS" starttime="20210322 17:45:03.121" endtime="20210322 17:45:07.229" critical="yes"></status>
</test>
<test id="s1-s1-s3-t3" name="Cenário: Criando Chave de Endereçamento do tipo Email">
<kw name="Email" library="FakerLibrary">
<assign>
<var>${email_pix}</var>
</assign>
<msg timestamp="20210322 17:45:07.230" level="INFO">${email_pix} = fernandasilva@rezende.br</msg>
<status status="PASS" starttime="20210322 17:45:07.230" endtime="20210322 17:45:07.230"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${email_pix}</arg>
</arguments>
<msg timestamp="20210322 17:45:07.231" level="INFO">${email_pix} = fernandasilva@rezende.br</msg>
<status status="PASS" starttime="20210322 17:45:07.230" endtime="20210322 17:45:07.231"></status>
</kw>
<kw name="criar holder individual ativo" library="accreditation_create_holder_active">
<kw name="conectar accreditation" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accreditation</arg>
<arg>url=${accreditation_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 17:45:07.233" level="INFO">Creating Session using : alias=accreditation, url=https://banking-accreditation-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 17:45:07.231" endtime="20210322 17:45:07.233"></status>
</kw>
<status status="PASS" starttime="20210322 17:45:07.231" endtime="20210322 17:45:07.233"></status>
</kw>
<kw name="Cpf" library="FakerLibrary">
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 17:45:07.233" level="INFO">${national_registration} = 382.491.605-33</msg>
<status status="PASS" starttime="20210322 17:45:07.233" endtime="20210322 17:45:07.233"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${national_registration}</arg>
<arg>.</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 17:45:07.233" level="INFO">${national_registration} = 382491605-33</msg>
<status status="PASS" starttime="20210322 17:45:07.233" endtime="20210322 17:45:07.233"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${national_registration}</arg>
<arg>-</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 17:45:07.235" level="INFO">${national_registration} = 38249160533</msg>
<status status="PASS" starttime="20210322 17:45:07.233" endtime="20210322 17:45:07.235"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${national_registration}</arg>
</arguments>
<msg timestamp="20210322 17:45:07.236" level="INFO">${national_registration} = 38249160533</msg>
<status status="PASS" starttime="20210322 17:45:07.235" endtime="20210322 17:45:07.236"></status>
</kw>
<kw name="Rg" library="FakerLibrary">
<doc>Brazilian RG, return plain numbers.
Check:  https://www.ngmatematica.com/2014/02/como-determinar-o-digito-verificador-do.html</doc>
<assign>
<var>${identity_card}</var>
</assign>
<msg timestamp="20210322 17:45:07.236" level="INFO">${identity_card} = 582430677</msg>
<status status="PASS" starttime="20210322 17:45:07.236" endtime="20210322 17:45:07.236"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${identity_card}</arg>
</arguments>
<msg timestamp="20210322 17:45:07.237" level="INFO">${identity_card} = 582430677</msg>
<status status="PASS" starttime="20210322 17:45:07.236" endtime="20210322 17:45:07.237"></status>
</kw>
<kw name="criar holder individual" library="accreditation_post_holder_individual">
<arguments>
<arg>holder_type=individual</arg>
<arg>holder_name=${holder_name}</arg>
<arg>email=${email}</arg>
<arg>national_registration=${national_registration}</arg>
<arg>revenue=${revenue}</arg>
<arg>birthday=${birthday}</arg>
<arg>mothers_name=${mothers_name}</arg>
<arg>identity_card=${identity_card}</arg>
<arg>pep=false</arg>
<arg>cbo=${cbo}</arg>
</arguments>
<kw name="conectar accreditation" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accreditation</arg>
<arg>url=${accreditation_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 17:45:07.238" level="INFO">Creating Session using : alias=accreditation, url=https://banking-accreditation-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 17:45:07.238" endtime="20210322 17:45:07.238"></status>
</kw>
<status status="PASS" starttime="20210322 17:45:07.237" endtime="20210322 17:45:07.238"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_type}</arg>
</arguments>
<msg timestamp="20210322 17:45:07.239" level="INFO">${holder_type} = individual</msg>
<status status="PASS" starttime="20210322 17:45:07.239" endtime="20210322 17:45:07.239"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_name}</arg>
</arguments>
<msg timestamp="20210322 17:45:07.239" level="INFO">${holder_name} = Holder de teste</msg>
<status status="PASS" starttime="20210322 17:45:07.239" endtime="20210322 17:45:07.239"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:45:07.240" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 17:45:07.240" endtime="20210322 17:45:07.240"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "${holder_type}",</arg>
<arg>"name": "${holder_name}",</arg>
<arg>"email": "${email}",</arg>
<arg>"national_registration": "${national_registration}",</arg>
<arg>"revenue": ${revenue},</arg>
<arg>"birthday": "${birthday}",</arg>
<arg>"mothers_name": "${mothers_name}",</arg>
<arg>"identity_card": "${identity_card}",</arg>
<arg>"pep": false,</arg>
<arg>"cbo": ${cbo}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 17:45:07.240" level="INFO">${body} = { "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "38249160533", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder",...</msg>
<status status="PASS" starttime="20210322 17:45:07.240" endtime="20210322 17:45:07.240"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:45:07.241" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "38249160533", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder", "identity_card": "582430677", "pep": false, "cbo": 821450 } 
json=None</msg>
<msg timestamp="20210322 17:45:07.865" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:45:07.241" endtime="20210322 17:45:07.865"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:45:07.866" level="INFO">{'id': '772b5be396f94a4a833c92c80a102cb4', 'name': 'Holder de teste', 'revenue': 5500.0, 'email': 'teste@teste.com.br', 'status': 'waiting_info_and_documents', 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'marketplace_name': 'Marketplace de Teste', 'created_at': '2021-03-22T17:45:09.047908', 'updated_at': '2021-03-22T17:45:09.047909', 'type': 'individual', 'national_registration': '38249160533', 'birthday': '1988-04-23', 'mothers_name': 'Mãe do Holder', 'identity_card': '582430677', 'pep': False, 'cbo': '821450', '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/772b5be396f94a4a833c92c80a102cb4', 'type': 'GET'}, 'phones': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/772b5be396f94a4a833c92c80a102cb4/phones', 'type': 'GET'}, 'addresses': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/772b5be396f94a4a833c92c80a102cb4/addresses', 'type': 'GET'}, 'documents': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/772b5be396f94a4a833c92c80a102cb4/documents', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 17:45:07.865" endtime="20210322 17:45:07.866"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:45:07.867" level="INFO">2f659e07df77fba1</msg>
<status status="PASS" starttime="20210322 17:45:07.866" endtime="20210322 17:45:07.867"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${body}</arg>
</arguments>
<msg timestamp="20210322 17:45:07.867" level="INFO">{ "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "38249160533", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder", "identity_card": "582430677", "pep": false, "cbo": 821450 }</msg>
<status status="PASS" starttime="20210322 17:45:07.867" endtime="20210322 17:45:07.867"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:45:07.868" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:45:07.868" endtime="20210322 17:45:07.868"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${holder_external_key}</var>
</assign>
<msg timestamp="20210322 17:45:07.869" level="INFO">${holder_external_key} = 772b5be396f94a4a833c92c80a102cb4</msg>
<status status="PASS" starttime="20210322 17:45:07.869" endtime="20210322 17:45:07.869"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_external_key}</arg>
</arguments>
<msg timestamp="20210322 17:45:07.870" level="INFO">${holder_external_key} = 772b5be396f94a4a833c92c80a102cb4</msg>
<status status="PASS" starttime="20210322 17:45:07.870" endtime="20210322 17:45:07.870"></status>
</kw>
<status status="PASS" starttime="20210322 17:45:07.237" endtime="20210322 17:45:07.870"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_name}</arg>
</arguments>
<msg timestamp="20210322 17:45:07.871" level="INFO">${holder_name} = Holder de teste</msg>
<status status="PASS" starttime="20210322 17:45:07.871" endtime="20210322 17:45:07.871"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 17:45:07.872" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:45:07.871" endtime="20210322 17:45:07.872"></status>
</kw>
<kw name="criar holder phone" library="accreditation_post_holder_phone">
<arguments>
<arg>21</arg>
<arg>51</arg>
<arg>996221236</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:45:07.873" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 17:45:07.872" endtime="20210322 17:45:07.873"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"area_code": "${phone_area_code}",</arg>
<arg>"country_code": "${phone_country_code}",</arg>
<arg>"number": "${phone_number}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 17:45:07.874" level="INFO">${body} = { "area_code": "21", "country_code": "51", "number": "996221236" }</msg>
<status status="PASS" starttime="20210322 17:45:07.873" endtime="20210322 17:45:07.874"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/phones</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:45:07.874" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/772b5be396f94a4a833c92c80a102cb4/phones, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "area_code": "21", "country_code": "51", "number": "996221236" } 
json=None</msg>
<msg timestamp="20210322 17:45:08.112" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:45:07.874" endtime="20210322 17:45:08.112"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:45:08.113" level="INFO">{'id': 'cdd20346cfd347928f9edb7eb04df31c', 'area_code': '21', 'country_code': '51', 'number': '996221236', 'main': True, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/772b5be396f94a4a833c92c80a102cb4/phones/cdd20346cfd347928f9edb7eb04df31c', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/772b5be396f94a4a833c92c80a102cb4', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 17:45:08.113" endtime="20210322 17:45:08.113"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:45:08.114" level="INFO">6c693cc504c0058f</msg>
<status status="PASS" starttime="20210322 17:45:08.114" endtime="20210322 17:45:08.115"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:45:08.116" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:45:08.115" endtime="20210322 17:45:08.116"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${phone_external_key}</var>
</assign>
<msg timestamp="20210322 17:45:08.117" level="INFO">${phone_external_key} = cdd20346cfd347928f9edb7eb04df31c</msg>
<status status="PASS" starttime="20210322 17:45:08.116" endtime="20210322 17:45:08.117"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${phone_external_key}</arg>
</arguments>
<msg timestamp="20210322 17:45:08.118" level="INFO">${phone_external_key} = cdd20346cfd347928f9edb7eb04df31c</msg>
<status status="PASS" starttime="20210322 17:45:08.118" endtime="20210322 17:45:08.119"></status>
</kw>
<status status="PASS" starttime="20210322 17:45:07.872" endtime="20210322 17:45:08.119"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 17:45:08.120" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:45:08.119" endtime="20210322 17:45:08.120"></status>
</kw>
<kw name="criar holder address" library="accreditation_post_holder_address">
<arguments>
<arg>Rio de Janeiro</arg>
<arg>Rio de Janeiro</arg>
<arg>Brasil</arg>
<arg>Bairro de Testes</arg>
<arg>Rua de Testes</arg>
<arg>90</arg>
<arg>apto 200</arg>
<arg>21550987</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:45:08.122" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 17:45:08.121" endtime="20210322 17:45:08.122"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"city": "${city}",</arg>
<arg>"state": "${state}",</arg>
<arg>"country": "${country}",</arg>
<arg>"neighborhood": "${neighborhood}",</arg>
<arg>"street": "${street}",</arg>
<arg>"number": "${number}",</arg>
<arg>"complement": "${complement}",</arg>
<arg>"postal_code": "${postal_code}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 17:45:08.123" level="INFO">${body} = { "city": "Rio de Janeiro", "state": "Rio de Janeiro", "country": "Brasil", "neighborhood": "Bairro de Testes", "street": "Rua de Testes", "number": "90", "complement": "apto 200", "postal_code": "215...</msg>
<status status="PASS" starttime="20210322 17:45:08.122" endtime="20210322 17:45:08.123"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/addresses</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:45:08.124" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/772b5be396f94a4a833c92c80a102cb4/addresses, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "city": "Rio de Janeiro", "state": "Rio de Janeiro", "country": "Brasil", "neighborhood": "Bairro de Testes", "street": "Rua de Testes", "number": "90", "complement": "apto 200", "postal_code": "21550987" } 
json=None</msg>
<msg timestamp="20210322 17:45:08.412" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:45:08.124" endtime="20210322 17:45:08.412"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:45:08.412" level="INFO">{'id': 'ae309fe12a4f419e9238e3b702c910d5', 'street': 'Rua de Testes', 'number': '90', 'city': 'Rio de Janeiro', 'complement': 'apto 200', 'state': 'Rio de Janeiro', 'neighborhood': 'Bairro de Testes', 'postal_code': '21550987', 'country': 'Brasil', 'main': True, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/772b5be396f94a4a833c92c80a102cb4/addresses/ae309fe12a4f419e9238e3b702c910d5', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/772b5be396f94a4a833c92c80a102cb4', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 17:45:08.412" endtime="20210322 17:45:08.412"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:45:08.413" level="INFO">e7620dda44c7946f</msg>
<status status="PASS" starttime="20210322 17:45:08.413" endtime="20210322 17:45:08.413"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:45:08.413" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:45:08.413" endtime="20210322 17:45:08.413"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${address_external_key}</var>
</assign>
<msg timestamp="20210322 17:45:08.414" level="INFO">${address_external_key} = ae309fe12a4f419e9238e3b702c910d5</msg>
<status status="PASS" starttime="20210322 17:45:08.414" endtime="20210322 17:45:08.414"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${address_external_key}</arg>
</arguments>
<msg timestamp="20210322 17:45:08.415" level="INFO">${address_external_key} = ae309fe12a4f419e9238e3b702c910d5</msg>
<status status="PASS" starttime="20210322 17:45:08.414" endtime="20210322 17:45:08.415"></status>
</kw>
<status status="PASS" starttime="20210322 17:45:08.120" endtime="20210322 17:45:08.415"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 17:45:08.416" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:45:08.415" endtime="20210322 17:45:08.416"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>SELFIE</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:45:08.416" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 17:45:08.416" endtime="20210322 17:45:08.416"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 17:45:08.417" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 17:45:08.418" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 17:45:08.416" endtime="20210322 17:45:08.419"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:45:08.421" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/772b5be396f94a4a833c92c80a102cb4/documents?type=SELFIE, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 17:45:08.699" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:45:08.419" endtime="20210322 17:45:08.699"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:45:08.700" level="INFO">{'id': 'cf5ebc7cc01c463bb724f2cf352f67e0', 'document_type': 'selfie', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/772b5be396f94a4a833c92c80a102cb4/documents/cf5ebc7cc01c463bb724f2cf352f67e0', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/772b5be396f94a4a833c92c80a102cb4', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/772b5be396f94a4a833c92c80a102cb4/documents/cf5ebc7cc01c463bb724f2cf352f67e0/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 17:45:08.700" endtime="20210322 17:45:08.700"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:45:08.702" level="INFO">f445bde29ae2bc86</msg>
<status status="PASS" starttime="20210322 17:45:08.701" endtime="20210322 17:45:08.702"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:45:08.705" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:45:08.703" endtime="20210322 17:45:08.705"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 17:45:08.708" level="INFO">${document_external_key} = cf5ebc7cc01c463bb724f2cf352f67e0</msg>
<status status="PASS" starttime="20210322 17:45:08.705" endtime="20210322 17:45:08.708"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 17:45:08.711" level="INFO">${document_external_key} = cf5ebc7cc01c463bb724f2cf352f67e0</msg>
<status status="PASS" starttime="20210322 17:45:08.710" endtime="20210322 17:45:08.711"></status>
</kw>
<status status="PASS" starttime="20210322 17:45:08.416" endtime="20210322 17:45:08.712"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 17:45:08.713" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:45:08.712" endtime="20210322 17:45:08.713"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>RG_FRENTE</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:45:08.716" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 17:45:08.715" endtime="20210322 17:45:08.716"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 17:45:08.717" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 17:45:08.719" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 17:45:08.716" endtime="20210322 17:45:08.719"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:45:08.722" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/772b5be396f94a4a833c92c80a102cb4/documents?type=RG_FRENTE, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 17:45:08.982" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:45:08.720" endtime="20210322 17:45:08.982"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:45:08.983" level="INFO">{'id': '7f0e2b49ed8d45f7b06f92841e4e29af', 'document_type': 'rg_frente', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/772b5be396f94a4a833c92c80a102cb4/documents/7f0e2b49ed8d45f7b06f92841e4e29af', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/772b5be396f94a4a833c92c80a102cb4', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/772b5be396f94a4a833c92c80a102cb4/documents/7f0e2b49ed8d45f7b06f92841e4e29af/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 17:45:08.982" endtime="20210322 17:45:08.983"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:45:08.983" level="INFO">9ec0a859e1fc8a70</msg>
<status status="PASS" starttime="20210322 17:45:08.983" endtime="20210322 17:45:08.983"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:45:08.985" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:45:08.985" endtime="20210322 17:45:08.985"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 17:45:08.986" level="INFO">${document_external_key} = 7f0e2b49ed8d45f7b06f92841e4e29af</msg>
<status status="PASS" starttime="20210322 17:45:08.985" endtime="20210322 17:45:08.986"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 17:45:08.986" level="INFO">${document_external_key} = 7f0e2b49ed8d45f7b06f92841e4e29af</msg>
<status status="PASS" starttime="20210322 17:45:08.986" endtime="20210322 17:45:08.986"></status>
</kw>
<status status="PASS" starttime="20210322 17:45:08.714" endtime="20210322 17:45:08.986"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 17:45:08.988" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:45:08.987" endtime="20210322 17:45:08.988"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>RG_VERSO</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:45:08.989" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 17:45:08.989" endtime="20210322 17:45:08.990"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 17:45:08.990" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 17:45:08.992" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 17:45:08.990" endtime="20210322 17:45:08.992"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:45:08.993" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/772b5be396f94a4a833c92c80a102cb4/documents?type=RG_VERSO, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 17:45:09.265" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:45:08.992" endtime="20210322 17:45:09.265"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:45:09.266" level="INFO">{'id': 'ac0f6f533de048bd82a80c1e38e4c8df', 'document_type': 'rg_verso', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/772b5be396f94a4a833c92c80a102cb4/documents/ac0f6f533de048bd82a80c1e38e4c8df', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/772b5be396f94a4a833c92c80a102cb4', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/772b5be396f94a4a833c92c80a102cb4/documents/ac0f6f533de048bd82a80c1e38e4c8df/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 17:45:09.265" endtime="20210322 17:45:09.266"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:45:09.267" level="INFO">4764d34965b7ae56</msg>
<status status="PASS" starttime="20210322 17:45:09.266" endtime="20210322 17:45:09.267"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:45:09.267" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:45:09.267" endtime="20210322 17:45:09.268"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 17:45:09.269" level="INFO">${document_external_key} = ac0f6f533de048bd82a80c1e38e4c8df</msg>
<status status="PASS" starttime="20210322 17:45:09.268" endtime="20210322 17:45:09.269"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 17:45:09.270" level="INFO">${document_external_key} = ac0f6f533de048bd82a80c1e38e4c8df</msg>
<status status="PASS" starttime="20210322 17:45:09.269" endtime="20210322 17:45:09.270"></status>
</kw>
<status status="PASS" starttime="20210322 17:45:08.988" endtime="20210322 17:45:09.270"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 17:45:09.271" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:45:09.270" endtime="20210322 17:45:09.271"></status>
</kw>
<kw name="solicitar aprovação do holder" library="accreditation_request_approval">
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:45:09.272" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 17:45:09.272" endtime="20210322 17:45:09.272"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/approval</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:45:09.273" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/772b5be396f94a4a833c92c80a102cb4/approval, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data=None 
json=None</msg>
<msg timestamp="20210322 17:45:09.545" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 17:45:09.273" endtime="20210322 17:45:09.545"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:45:09.545" level="INFO">{'message': 'Approval request accepted successfully. Processing analysis'}</msg>
<status status="PASS" starttime="20210322 17:45:09.545" endtime="20210322 17:45:09.545"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:45:09.546" level="INFO">1f4180c4847b6a59</msg>
<status status="PASS" starttime="20210322 17:45:09.545" endtime="20210322 17:45:09.546"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:45:09.546" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 17:45:09.546" endtime="20210322 17:45:09.546"></status>
</kw>
<status status="PASS" starttime="20210322 17:45:09.271" endtime="20210322 17:45:09.546"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 17:45:09.547" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:45:09.546" endtime="20210322 17:45:09.547"></status>
</kw>
<kw name="recebendo notificação de aprovação" library="accreditation_risk_notification">
<kw name="Uuid 4" library="FakerLibrary">
<doc>Generates a random UUID4 string.
:param cast_to: Specify what type the UUID should be cast to. Default is `str`
:type cast_to: callable</doc>
<assign>
<var>${assessment_id}</var>
</assign>
<msg timestamp="20210322 17:45:09.547" level="INFO">${assessment_id} = 5dee7296-04ce-4eef-a5f8-102706295fc0</msg>
<status status="PASS" starttime="20210322 17:45:09.547" endtime="20210322 17:45:09.548"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>year</arg>
</arguments>
<assign>
<var>${year}</var>
</assign>
<msg timestamp="20210322 17:45:09.548" level="INFO">${year} = 2021</msg>
<status status="PASS" starttime="20210322 17:45:09.548" endtime="20210322 17:45:09.548"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>month</arg>
</arguments>
<assign>
<var>${month}</var>
</assign>
<msg timestamp="20210322 17:45:09.548" level="INFO">${month} = 03</msg>
<status status="PASS" starttime="20210322 17:45:09.548" endtime="20210322 17:45:09.548"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>day</arg>
</arguments>
<assign>
<var>${day}</var>
</assign>
<msg timestamp="20210322 17:45:09.549" level="INFO">${day} = 22</msg>
<status status="PASS" starttime="20210322 17:45:09.549" endtime="20210322 17:45:09.549"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:45:09.549" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 17:45:09.549" endtime="20210322 17:45:09.549"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "risk.assessment.result",</arg>
<arg>"resource": "business.holder",</arg>
<arg>"created_at": "${year}-${month}-${day} 15:28:56.747Z",</arg>
<arg>"marketplace_id": "${marketplace_external_key}",</arg>
<arg>"object": {</arg>
<arg>"result": "APPROVED",</arg>
<arg>"holder_id": "${holder_external_key}",</arg>
<arg>"applicant_id": "${application_external_key}",</arg>
<arg>"assessment_id": "${assessment_id}"</arg>
<arg>}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 17:45:09.550" level="INFO">${body} = { "type": "risk.assessment.result", "resource": "business.holder", "created_at": "2021-03-22 15:28:56.747Z", "marketplace_id": "f71a8951368a4cc085cf7875ff44e61c", "object": { "result": "APPROVED", "ho...</msg>
<status status="PASS" starttime="20210322 17:45:09.549" endtime="20210322 17:45:09.550"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/admin/internal_operation/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/registration/approval</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:45:09.551" level="INFO">POST Request using : uri=/admin/internal_operation/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/772b5be396f94a4a833c92c80a102cb4/registration/approval, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "risk.assessment.result", "resource": "business.holder", "created_at": "2021-03-22 15:28:56.747Z", "marketplace_id": "f71a8951368a4cc085cf7875ff44e61c", "object": { "result": "APPROVED", "holder_id": "772b5be396f94a4a833c92c80a102cb4", "applicant_id": "bcc25a6751c14b52af1340d40dba78c5", "assessment_id": "5dee7296-04ce-4eef-a5f8-102706295fc0" } } 
json=None</msg>
<msg timestamp="20210322 17:45:09.753" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 17:45:09.550" endtime="20210322 17:45:09.754"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:45:09.755" level="INFO">{'message': 'Holder approved successfully'}</msg>
<status status="PASS" starttime="20210322 17:45:09.755" endtime="20210322 17:45:09.755"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:45:09.757" level="INFO">578bb63b63889f77</msg>
<status status="PASS" starttime="20210322 17:45:09.756" endtime="20210322 17:45:09.757"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:45:09.759" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 17:45:09.757" endtime="20210322 17:45:09.759"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 17:45:09.760" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:45:09.759" endtime="20210322 17:45:09.760"></status>
</kw>
<status status="PASS" starttime="20210322 17:45:09.547" endtime="20210322 17:45:09.760"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 17:45:09.762" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:45:09.761" endtime="20210322 17:45:09.762"></status>
</kw>
<kw name="buscar account por holder" library="accounts_get_accounts_by_holder">
<kw name="conectar accounts" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accounts</arg>
<arg>url=${account_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 17:45:09.764" level="INFO">Creating Session using : alias=accounts, url=https://banking-accounts-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 17:45:09.763" endtime="20210322 17:45:09.764"></status>
</kw>
<status status="PASS" starttime="20210322 17:45:09.763" endtime="20210322 17:45:09.764"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accounts</arg>
<arg>/marketplaces/${marketplace_external_key}/holders/${holder_external_key}/accounts</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:45:09.765" level="INFO">GET Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/holders/772b5be396f94a4a833c92c80a102cb4/accounts, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 17:45:10.389" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 17:45:09.764" endtime="20210322 17:45:10.390"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:45:10.392" level="INFO">{'items': [{'id': '407bb9f4616b4ca5b451dddcfbb23feb', 'holder': '772b5be396f94a4a833c92c80a102cb4', 'balance': '0.00', 'currency': 'BRL', 'routing_number': '001', 'number': '2682590751', 'status': 'active', 'metadata': {}, 'created_at': '2021-03-22T20:45:10.937225', 'updated_at': '2021-03-22T20:45:10.937225', 'primary': True, 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'uri': '/v2/marketplaces/f71a8951368a4cc085cf7875ff44e61c/accounts/407bb9f4616b4ca5b451dddcfbb23feb', 'resource': 'payment_account'}], 'has_more': False, 'limit': 100, 'total_pages': 1, 'page': 1, 'offset': 0, 'total': '1', 'query_count': '1'}</msg>
<status status="PASS" starttime="20210322 17:45:10.391" endtime="20210322 17:45:10.393"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:45:10.395" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 17:45:10.394" endtime="20210322 17:45:10.395"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["id"]}</arg>
</arguments>
<assign>
<var>${account_external_key}</var>
</assign>
<msg timestamp="20210322 17:45:10.398" level="INFO">${account_external_key} = 407bb9f4616b4ca5b451dddcfbb23feb</msg>
<status status="PASS" starttime="20210322 17:45:10.396" endtime="20210322 17:45:10.398"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_external_key}</arg>
</arguments>
<msg timestamp="20210322 17:45:10.401" level="INFO">${account_external_key} = 407bb9f4616b4ca5b451dddcfbb23feb</msg>
<status status="PASS" starttime="20210322 17:45:10.399" endtime="20210322 17:45:10.401"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["number"]}</arg>
</arguments>
<assign>
<var>${account_number}</var>
</assign>
<msg timestamp="20210322 17:45:10.404" level="INFO">${account_number} = 2682590751</msg>
<status status="PASS" starttime="20210322 17:45:10.402" endtime="20210322 17:45:10.404"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_number}</arg>
</arguments>
<msg timestamp="20210322 17:45:10.405" level="INFO">${account_number} = 2682590751</msg>
<status status="PASS" starttime="20210322 17:45:10.405" endtime="20210322 17:45:10.406"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["routing_number"]}</arg>
</arguments>
<assign>
<var>${account_routing_number}</var>
</assign>
<msg timestamp="20210322 17:45:10.408" level="INFO">${account_routing_number} = 001</msg>
<status status="PASS" starttime="20210322 17:45:10.406" endtime="20210322 17:45:10.408"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_routing_number}</arg>
</arguments>
<msg timestamp="20210322 17:45:10.409" level="INFO">${account_routing_number} = 001</msg>
<status status="PASS" starttime="20210322 17:45:10.409" endtime="20210322 17:45:10.409"></status>
</kw>
<status status="PASS" starttime="20210322 17:45:09.762" endtime="20210322 17:45:10.410"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 17:45:10.411" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:45:10.410" endtime="20210322 17:45:10.411"></status>
</kw>
<status status="PASS" starttime="20210322 17:45:07.231" endtime="20210322 17:45:10.411"></status>
</kw>
<kw name="criar chave pix" library="pix_dict_create_entry">
<arguments>
<arg>type=email</arg>
<arg>value=${email_pix}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 17:45:10.413" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 17:45:10.413" endtime="20210322 17:45:10.414"></status>
</kw>
<status status="PASS" starttime="20210322 17:45:10.412" endtime="20210322 17:45:10.414"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${type}</arg>
</arguments>
<msg timestamp="20210322 17:45:10.415" level="INFO">${type} = email</msg>
<status status="PASS" starttime="20210322 17:45:10.414" endtime="20210322 17:45:10.415"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210322 17:45:10.415" level="INFO">${value} = fernandasilva@rezende.br</msg>
<status status="PASS" starttime="20210322 17:45:10.415" endtime="20210322 17:45:10.415"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:45:10.416" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 17:45:10.416" endtime="20210322 17:45:10.416"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "${type}",</arg>
<arg>"value": "${value}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 17:45:10.417" level="INFO">${body} = { "type": "email", "value": "fernandasilva@rezende.br" }</msg>
<status status="PASS" starttime="20210322 17:45:10.416" endtime="20210322 17:45:10.417"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:45:10.418" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/772b5be396f94a4a833c92c80a102cb4/accounts/407bb9f4616b4ca5b451dddcfbb23feb/entries, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "email", "value": "fernandasilva@rezende.br" } 
json=None</msg>
<msg timestamp="20210322 17:45:11.083" level="INFO">${response} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20210322 17:45:10.417" endtime="20210322 17:45:11.083"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:45:11.085" level="INFO">{'id': '8f9d532d09d14294b594e083ec60dd52', 'status': 'waiting_ownership_verification', 'created_at': '2021-03-22T05:45:12.284', 'updated_at': '2021-03-22T05:45:12.284', 'key': {'value': 'fernandasilva@rezende.br', 'type': 'email'}, 'account': {'id': '407bb9f4616b4ca5b451dddcfbb23feb', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': '772b5be396f94a4a833c92c80a102cb4', 'owner': {'name': 'Holder de teste', 'national_registration': '38249160533', 'type': 'individual'}, 'routing_number': '001', 'number': '2682590751', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}, 'resource': 'pix.entry'}</msg>
<status status="PASS" starttime="20210322 17:45:11.084" endtime="20210322 17:45:11.085"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:45:11.087" level="INFO">e81c4884c6fd5192</msg>
<status status="PASS" starttime="20210322 17:45:11.086" endtime="20210322 17:45:11.087"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 17:45:11.088" level="INFO">202</msg>
<status status="PASS" starttime="20210322 17:45:11.087" endtime="20210322 17:45:11.088"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:45:11.089" level="INFO">${response} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20210322 17:45:11.089" endtime="20210322 17:45:11.089"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${entry_external_key}</var>
</assign>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:45:11.092" endtime="20210322 17:45:11.092"></status>
</kw>
<msg timestamp="20210322 17:45:11.092" level="INFO">${entry_external_key} = 8f9d532d09d14294b594e083ec60dd52</msg>
<status status="PASS" starttime="20210322 17:45:11.090" endtime="20210322 17:45:11.092"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${entry_external_key}</arg>
</arguments>
<msg timestamp="20210322 17:45:11.093" level="INFO">${entry_external_key} = 8f9d532d09d14294b594e083ec60dd52</msg>
<status status="PASS" starttime="20210322 17:45:11.092" endtime="20210322 17:45:11.093"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["key"]["value"]}</arg>
</arguments>
<assign>
<var>${entry_key_value}</var>
</assign>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["key"]["value"]}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:45:11.094" endtime="20210322 17:45:11.095"></status>
</kw>
<msg timestamp="20210322 17:45:11.095" level="INFO">${entry_key_value} = fernandasilva@rezende.br</msg>
<status status="PASS" starttime="20210322 17:45:11.093" endtime="20210322 17:45:11.095"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${entry_key_value}</arg>
</arguments>
<msg timestamp="20210322 17:45:11.096" level="INFO">${entry_key_value} = fernandasilva@rezende.br</msg>
<status status="PASS" starttime="20210322 17:45:11.096" endtime="20210322 17:45:11.096"></status>
</kw>
<status status="PASS" starttime="20210322 17:45:10.412" endtime="20210322 17:45:11.096"></status>
</kw>
<kw name="validar chave pix" library="asserts">
<arguments>
<arg>key_status=waiting_ownership_verification</arg>
<arg>key_type=${type}</arg>
<arg>key_value=${value}</arg>
<arg>account_external_key=${account_external_key}</arg>
<arg>marketplace_external_key=${marketplace_external_key}</arg>
<arg>holder_external_key=${holder_external_key}</arg>
<arg>account_number=${account_number}</arg>
<arg>account_routing_number=${account_routing_number}</arg>
<arg>account_type=CACC</arg>
<arg>owner_key_name=${holder_name}</arg>
<arg>national_registration=${national_registration}</arg>
<arg>holder_type=${holder_type}</arg>
<arg>psp_code=19468242</arg>
<arg>psp_name=Zoop Tecnologia e Meios de Pagamento S.A.</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar status da chave</arg>
</arguments>
<msg timestamp="20210322 17:45:11.099" level="INFO">Validar status da chave</msg>
<status status="PASS" starttime="20210322 17:45:11.098" endtime="20210322 17:45:11.099"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["status"]}</arg>
<arg>${key_status}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:45:11.099" endtime="20210322 17:45:11.100"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando Tipo da chave PIX</arg>
</arguments>
<msg timestamp="20210322 17:45:11.100" level="INFO">Validando Tipo da chave PIX</msg>
<status status="PASS" starttime="20210322 17:45:11.100" endtime="20210322 17:45:11.100"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["key"]["type"]}</arg>
<arg>${key_type}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:45:11.100" endtime="20210322 17:45:11.101"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando Valor da chave PIX</arg>
</arguments>
<msg timestamp="20210322 17:45:11.102" level="INFO">Validando Valor da chave PIX</msg>
<status status="PASS" starttime="20210322 17:45:11.102" endtime="20210322 17:45:11.102"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${type}' == 'evp'</arg>
<arg>Should Not Be Empty</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' != 'evp'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${key_value}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${key_value}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:45:11.103" endtime="20210322 17:45:11.104"></status>
</kw>
<status status="PASS" starttime="20210322 17:45:11.102" endtime="20210322 17:45:11.104"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando dados da conta</arg>
</arguments>
<msg timestamp="20210322 17:45:11.104" level="INFO">Validando dados da conta</msg>
<status status="PASS" starttime="20210322 17:45:11.104" endtime="20210322 17:45:11.105"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["id"]}</arg>
<arg>${account_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:45:11.105" endtime="20210322 17:45:11.105"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["marketplace"]}</arg>
<arg>${marketplace_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:45:11.106" endtime="20210322 17:45:11.106"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["holder"]}</arg>
<arg>${holder_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:45:11.106" endtime="20210322 17:45:11.107"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["number"]}</arg>
<arg>${account_number}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:45:11.107" endtime="20210322 17:45:11.108"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["routing_number"]}</arg>
<arg>${account_routing_number}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:45:11.108" endtime="20210322 17:45:11.108"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["type"]}</arg>
<arg>${account_type}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:45:11.109" endtime="20210322 17:45:11.109"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar Proprietário da Account Owner</arg>
</arguments>
<msg timestamp="20210322 17:45:11.110" level="INFO">Validar Proprietário da Account Owner</msg>
<status status="PASS" starttime="20210322 17:45:11.109" endtime="20210322 17:45:11.110"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["account"]["owner"]["name"]}</arg>
<arg>${owner_key_name}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:45:11.110" endtime="20210322 17:45:11.110"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar national_registration da Account Owner</arg>
</arguments>
<msg timestamp="20210322 17:45:11.111" level="INFO">Validar national_registration da Account Owner</msg>
<status status="PASS" starttime="20210322 17:45:11.111" endtime="20210322 17:45:11.111"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["account"]["owner"]["national_registration"]}</arg>
<arg>${national_registration}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:45:11.111" endtime="20210322 17:45:11.112"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar Holder Type do Account Owner</arg>
</arguments>
<msg timestamp="20210322 17:45:11.113" level="INFO">Validar Holder Type do Account Owner</msg>
<status status="PASS" starttime="20210322 17:45:11.113" endtime="20210322 17:45:11.113"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["account"]["owner"]["type"]}</arg>
<arg>${holder_type}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:45:11.113" endtime="20210322 17:45:11.114"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar PSP</arg>
</arguments>
<msg timestamp="20210322 17:45:11.115" level="INFO">Validar PSP</msg>
<status status="PASS" starttime="20210322 17:45:11.115" endtime="20210322 17:45:11.115"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["psp"]["code"]}</arg>
<arg>${psp_code}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:45:11.115" endtime="20210322 17:45:11.116"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["psp"]["name"]}</arg>
<arg>${psp_name}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:45:11.116" endtime="20210322 17:45:11.117"></status>
</kw>
<status status="PASS" starttime="20210322 17:45:11.097" endtime="20210322 17:45:11.117"></status>
</kw>
<doc>Fluxo Básico</doc>
<tags>
<tag>regression_test</tag>
<tag>smoke_test</tag>
</tags>
<status status="PASS" starttime="20210322 17:45:07.229" endtime="20210322 17:45:11.117" critical="yes"></status>
</test>
<test id="s1-s1-s3-t4" name="Cenário: Criando Chave de Endereçamento do tipo CPF">
<kw name="criar holder individual ativo" library="accreditation_create_holder_active">
<kw name="conectar accreditation" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accreditation</arg>
<arg>url=${accreditation_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 17:45:11.119" level="INFO">Creating Session using : alias=accreditation, url=https://banking-accreditation-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 17:45:11.119" endtime="20210322 17:45:11.120"></status>
</kw>
<status status="PASS" starttime="20210322 17:45:11.119" endtime="20210322 17:45:11.120"></status>
</kw>
<kw name="Cpf" library="FakerLibrary">
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 17:45:11.120" level="INFO">${national_registration} = 594.308.216-60</msg>
<status status="PASS" starttime="20210322 17:45:11.120" endtime="20210322 17:45:11.120"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${national_registration}</arg>
<arg>.</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 17:45:11.121" level="INFO">${national_registration} = 594308216-60</msg>
<status status="PASS" starttime="20210322 17:45:11.120" endtime="20210322 17:45:11.121"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${national_registration}</arg>
<arg>-</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 17:45:11.121" level="INFO">${national_registration} = 59430821660</msg>
<status status="PASS" starttime="20210322 17:45:11.121" endtime="20210322 17:45:11.121"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${national_registration}</arg>
</arguments>
<msg timestamp="20210322 17:45:11.122" level="INFO">${national_registration} = 59430821660</msg>
<status status="PASS" starttime="20210322 17:45:11.122" endtime="20210322 17:45:11.122"></status>
</kw>
<kw name="Rg" library="FakerLibrary">
<doc>Brazilian RG, return plain numbers.
Check:  https://www.ngmatematica.com/2014/02/como-determinar-o-digito-verificador-do.html</doc>
<assign>
<var>${identity_card}</var>
</assign>
<msg timestamp="20210322 17:45:11.122" level="INFO">${identity_card} = 420381570</msg>
<status status="PASS" starttime="20210322 17:45:11.122" endtime="20210322 17:45:11.122"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${identity_card}</arg>
</arguments>
<msg timestamp="20210322 17:45:11.123" level="INFO">${identity_card} = 420381570</msg>
<status status="PASS" starttime="20210322 17:45:11.122" endtime="20210322 17:45:11.123"></status>
</kw>
<kw name="criar holder individual" library="accreditation_post_holder_individual">
<arguments>
<arg>holder_type=individual</arg>
<arg>holder_name=${holder_name}</arg>
<arg>email=${email}</arg>
<arg>national_registration=${national_registration}</arg>
<arg>revenue=${revenue}</arg>
<arg>birthday=${birthday}</arg>
<arg>mothers_name=${mothers_name}</arg>
<arg>identity_card=${identity_card}</arg>
<arg>pep=false</arg>
<arg>cbo=${cbo}</arg>
</arguments>
<kw name="conectar accreditation" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accreditation</arg>
<arg>url=${accreditation_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 17:45:11.124" level="INFO">Creating Session using : alias=accreditation, url=https://banking-accreditation-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 17:45:11.124" endtime="20210322 17:45:11.125"></status>
</kw>
<status status="PASS" starttime="20210322 17:45:11.124" endtime="20210322 17:45:11.125"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_type}</arg>
</arguments>
<msg timestamp="20210322 17:45:11.125" level="INFO">${holder_type} = individual</msg>
<status status="PASS" starttime="20210322 17:45:11.125" endtime="20210322 17:45:11.125"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_name}</arg>
</arguments>
<msg timestamp="20210322 17:45:11.126" level="INFO">${holder_name} = Holder de teste</msg>
<status status="PASS" starttime="20210322 17:45:11.125" endtime="20210322 17:45:11.126"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:45:11.126" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 17:45:11.126" endtime="20210322 17:45:11.126"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "${holder_type}",</arg>
<arg>"name": "${holder_name}",</arg>
<arg>"email": "${email}",</arg>
<arg>"national_registration": "${national_registration}",</arg>
<arg>"revenue": ${revenue},</arg>
<arg>"birthday": "${birthday}",</arg>
<arg>"mothers_name": "${mothers_name}",</arg>
<arg>"identity_card": "${identity_card}",</arg>
<arg>"pep": false,</arg>
<arg>"cbo": ${cbo}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 17:45:11.127" level="INFO">${body} = { "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "59430821660", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder",...</msg>
<status status="PASS" starttime="20210322 17:45:11.127" endtime="20210322 17:45:11.127"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:45:11.128" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "59430821660", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder", "identity_card": "420381570", "pep": false, "cbo": 821450 } 
json=None</msg>
<msg timestamp="20210322 17:45:11.811" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:45:11.127" endtime="20210322 17:45:11.811"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:45:11.812" level="INFO">{'id': '22b0b839de144748896c5c20b7972687', 'name': 'Holder de teste', 'revenue': 5500.0, 'email': 'teste@teste.com.br', 'status': 'waiting_info_and_documents', 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'marketplace_name': 'Marketplace de Teste', 'created_at': '2021-03-22T17:45:12.962464', 'updated_at': '2021-03-22T17:45:12.962465', 'type': 'individual', 'national_registration': '59430821660', 'birthday': '1988-04-23', 'mothers_name': 'Mãe do Holder', 'identity_card': '420381570', 'pep': False, 'cbo': '821450', '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/22b0b839de144748896c5c20b7972687', 'type': 'GET'}, 'phones': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/22b0b839de144748896c5c20b7972687/phones', 'type': 'GET'}, 'addresses': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/22b0b839de144748896c5c20b7972687/addresses', 'type': 'GET'}, 'documents': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/22b0b839de144748896c5c20b7972687/documents', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 17:45:11.812" endtime="20210322 17:45:11.812"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:45:11.812" level="INFO">1f5085d0bfc0d211</msg>
<status status="PASS" starttime="20210322 17:45:11.812" endtime="20210322 17:45:11.812"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${body}</arg>
</arguments>
<msg timestamp="20210322 17:45:11.813" level="INFO">{ "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "59430821660", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder", "identity_card": "420381570", "pep": false, "cbo": 821450 }</msg>
<status status="PASS" starttime="20210322 17:45:11.813" endtime="20210322 17:45:11.813"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:45:11.814" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:45:11.813" endtime="20210322 17:45:11.814"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${holder_external_key}</var>
</assign>
<msg timestamp="20210322 17:45:11.814" level="INFO">${holder_external_key} = 22b0b839de144748896c5c20b7972687</msg>
<status status="PASS" starttime="20210322 17:45:11.814" endtime="20210322 17:45:11.814"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_external_key}</arg>
</arguments>
<msg timestamp="20210322 17:45:11.815" level="INFO">${holder_external_key} = 22b0b839de144748896c5c20b7972687</msg>
<status status="PASS" starttime="20210322 17:45:11.815" endtime="20210322 17:45:11.815"></status>
</kw>
<status status="PASS" starttime="20210322 17:45:11.123" endtime="20210322 17:45:11.815"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_name}</arg>
</arguments>
<msg timestamp="20210322 17:45:11.815" level="INFO">${holder_name} = Holder de teste</msg>
<status status="PASS" starttime="20210322 17:45:11.815" endtime="20210322 17:45:11.815"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 17:45:11.816" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:45:11.816" endtime="20210322 17:45:11.816"></status>
</kw>
<kw name="criar holder phone" library="accreditation_post_holder_phone">
<arguments>
<arg>21</arg>
<arg>51</arg>
<arg>996221236</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:45:11.817" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 17:45:11.816" endtime="20210322 17:45:11.817"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"area_code": "${phone_area_code}",</arg>
<arg>"country_code": "${phone_country_code}",</arg>
<arg>"number": "${phone_number}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 17:45:11.817" level="INFO">${body} = { "area_code": "21", "country_code": "51", "number": "996221236" }</msg>
<status status="PASS" starttime="20210322 17:45:11.817" endtime="20210322 17:45:11.817"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/phones</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:45:11.818" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/22b0b839de144748896c5c20b7972687/phones, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "area_code": "21", "country_code": "51", "number": "996221236" } 
json=None</msg>
<msg timestamp="20210322 17:45:12.054" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:45:11.818" endtime="20210322 17:45:12.054"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:45:12.054" level="INFO">{'id': 'd5ba2c1acfb747b68fafc741207a944f', 'area_code': '21', 'country_code': '51', 'number': '996221236', 'main': True, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/22b0b839de144748896c5c20b7972687/phones/d5ba2c1acfb747b68fafc741207a944f', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/22b0b839de144748896c5c20b7972687', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 17:45:12.054" endtime="20210322 17:45:12.054"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:45:12.054" level="INFO">3c63c3a16dc4654b</msg>
<status status="PASS" starttime="20210322 17:45:12.054" endtime="20210322 17:45:12.054"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:45:12.056" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:45:12.056" endtime="20210322 17:45:12.056"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${phone_external_key}</var>
</assign>
<msg timestamp="20210322 17:45:12.056" level="INFO">${phone_external_key} = d5ba2c1acfb747b68fafc741207a944f</msg>
<status status="PASS" starttime="20210322 17:45:12.056" endtime="20210322 17:45:12.056"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${phone_external_key}</arg>
</arguments>
<msg timestamp="20210322 17:45:12.056" level="INFO">${phone_external_key} = d5ba2c1acfb747b68fafc741207a944f</msg>
<status status="PASS" starttime="20210322 17:45:12.056" endtime="20210322 17:45:12.056"></status>
</kw>
<status status="PASS" starttime="20210322 17:45:11.816" endtime="20210322 17:45:12.056"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 17:45:12.056" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:45:12.056" endtime="20210322 17:45:12.057"></status>
</kw>
<kw name="criar holder address" library="accreditation_post_holder_address">
<arguments>
<arg>Rio de Janeiro</arg>
<arg>Rio de Janeiro</arg>
<arg>Brasil</arg>
<arg>Bairro de Testes</arg>
<arg>Rua de Testes</arg>
<arg>90</arg>
<arg>apto 200</arg>
<arg>21550987</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:45:12.057" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 17:45:12.057" endtime="20210322 17:45:12.057"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"city": "${city}",</arg>
<arg>"state": "${state}",</arg>
<arg>"country": "${country}",</arg>
<arg>"neighborhood": "${neighborhood}",</arg>
<arg>"street": "${street}",</arg>
<arg>"number": "${number}",</arg>
<arg>"complement": "${complement}",</arg>
<arg>"postal_code": "${postal_code}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 17:45:12.058" level="INFO">${body} = { "city": "Rio de Janeiro", "state": "Rio de Janeiro", "country": "Brasil", "neighborhood": "Bairro de Testes", "street": "Rua de Testes", "number": "90", "complement": "apto 200", "postal_code": "215...</msg>
<status status="PASS" starttime="20210322 17:45:12.057" endtime="20210322 17:45:12.058"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/addresses</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:45:12.058" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/22b0b839de144748896c5c20b7972687/addresses, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "city": "Rio de Janeiro", "state": "Rio de Janeiro", "country": "Brasil", "neighborhood": "Bairro de Testes", "street": "Rua de Testes", "number": "90", "complement": "apto 200", "postal_code": "21550987" } 
json=None</msg>
<msg timestamp="20210322 17:45:12.316" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:45:12.058" endtime="20210322 17:45:12.316"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:45:12.319" level="INFO">{'id': '1c713cf326f948b09936ce4f0d425a56', 'street': 'Rua de Testes', 'number': '90', 'city': 'Rio de Janeiro', 'complement': 'apto 200', 'state': 'Rio de Janeiro', 'neighborhood': 'Bairro de Testes', 'postal_code': '21550987', 'country': 'Brasil', 'main': True, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/22b0b839de144748896c5c20b7972687/addresses/1c713cf326f948b09936ce4f0d425a56', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/22b0b839de144748896c5c20b7972687', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 17:45:12.317" endtime="20210322 17:45:12.320"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:45:12.321" level="INFO">bcae287fc24f34b6</msg>
<status status="PASS" starttime="20210322 17:45:12.320" endtime="20210322 17:45:12.322"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:45:12.323" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:45:12.322" endtime="20210322 17:45:12.323"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${address_external_key}</var>
</assign>
<msg timestamp="20210322 17:45:12.325" level="INFO">${address_external_key} = 1c713cf326f948b09936ce4f0d425a56</msg>
<status status="PASS" starttime="20210322 17:45:12.324" endtime="20210322 17:45:12.325"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${address_external_key}</arg>
</arguments>
<msg timestamp="20210322 17:45:12.326" level="INFO">${address_external_key} = 1c713cf326f948b09936ce4f0d425a56</msg>
<status status="PASS" starttime="20210322 17:45:12.326" endtime="20210322 17:45:12.327"></status>
</kw>
<status status="PASS" starttime="20210322 17:45:12.057" endtime="20210322 17:45:12.327"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 17:45:12.328" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:45:12.327" endtime="20210322 17:45:12.328"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>SELFIE</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:45:12.330" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 17:45:12.329" endtime="20210322 17:45:12.330"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 17:45:12.331" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 17:45:12.333" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 17:45:12.330" endtime="20210322 17:45:12.333"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:45:12.334" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/22b0b839de144748896c5c20b7972687/documents?type=SELFIE, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 17:45:12.630" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:45:12.333" endtime="20210322 17:45:12.630"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:45:12.632" level="INFO">{'id': 'd782f5a3e07440af871f6ac946816dda', 'document_type': 'selfie', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/22b0b839de144748896c5c20b7972687/documents/d782f5a3e07440af871f6ac946816dda', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/22b0b839de144748896c5c20b7972687', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/22b0b839de144748896c5c20b7972687/documents/d782f5a3e07440af871f6ac946816dda/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 17:45:12.631" endtime="20210322 17:45:12.633"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:45:12.634" level="INFO">999323b8cbf27d2e</msg>
<status status="PASS" starttime="20210322 17:45:12.633" endtime="20210322 17:45:12.636"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:45:12.637" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:45:12.636" endtime="20210322 17:45:12.637"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 17:45:12.640" level="INFO">${document_external_key} = d782f5a3e07440af871f6ac946816dda</msg>
<status status="PASS" starttime="20210322 17:45:12.638" endtime="20210322 17:45:12.641"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 17:45:12.642" level="INFO">${document_external_key} = d782f5a3e07440af871f6ac946816dda</msg>
<status status="PASS" starttime="20210322 17:45:12.642" endtime="20210322 17:45:12.643"></status>
</kw>
<status status="PASS" starttime="20210322 17:45:12.329" endtime="20210322 17:45:12.643"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 17:45:12.644" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:45:12.643" endtime="20210322 17:45:12.644"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>RG_FRENTE</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:45:12.647" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 17:45:12.646" endtime="20210322 17:45:12.647"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 17:45:12.647" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 17:45:12.650" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 17:45:12.647" endtime="20210322 17:45:12.650"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:45:12.652" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/22b0b839de144748896c5c20b7972687/documents?type=RG_FRENTE, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 17:45:12.908" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:45:12.650" endtime="20210322 17:45:12.908"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:45:12.909" level="INFO">{'id': '7675041b12614bc0969715f8404511bf', 'document_type': 'rg_frente', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/22b0b839de144748896c5c20b7972687/documents/7675041b12614bc0969715f8404511bf', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/22b0b839de144748896c5c20b7972687', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/22b0b839de144748896c5c20b7972687/documents/7675041b12614bc0969715f8404511bf/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 17:45:12.908" endtime="20210322 17:45:12.909"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:45:12.910" level="INFO">7cde914c955c2c5f</msg>
<status status="PASS" starttime="20210322 17:45:12.910" endtime="20210322 17:45:12.910"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:45:12.911" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:45:12.911" endtime="20210322 17:45:12.911"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 17:45:12.913" level="INFO">${document_external_key} = 7675041b12614bc0969715f8404511bf</msg>
<status status="PASS" starttime="20210322 17:45:12.912" endtime="20210322 17:45:12.913"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 17:45:12.914" level="INFO">${document_external_key} = 7675041b12614bc0969715f8404511bf</msg>
<status status="PASS" starttime="20210322 17:45:12.913" endtime="20210322 17:45:12.914"></status>
</kw>
<status status="PASS" starttime="20210322 17:45:12.645" endtime="20210322 17:45:12.914"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 17:45:12.915" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:45:12.915" endtime="20210322 17:45:12.915"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>RG_VERSO</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:45:12.916" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 17:45:12.916" endtime="20210322 17:45:12.916"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 17:45:12.917" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 17:45:12.920" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 17:45:12.917" endtime="20210322 17:45:12.920"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:45:12.921" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/22b0b839de144748896c5c20b7972687/documents?type=RG_VERSO, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 17:45:13.198" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:45:12.920" endtime="20210322 17:45:13.199"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:45:13.202" level="INFO">{'id': '04a913e5efda45809eda2ffbd8940aae', 'document_type': 'rg_verso', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/22b0b839de144748896c5c20b7972687/documents/04a913e5efda45809eda2ffbd8940aae', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/22b0b839de144748896c5c20b7972687', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/22b0b839de144748896c5c20b7972687/documents/04a913e5efda45809eda2ffbd8940aae/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 17:45:13.200" endtime="20210322 17:45:13.202"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:45:13.204" level="INFO">a3e8eaba78969217</msg>
<status status="PASS" starttime="20210322 17:45:13.203" endtime="20210322 17:45:13.204"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:45:13.205" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:45:13.204" endtime="20210322 17:45:13.206"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 17:45:13.208" level="INFO">${document_external_key} = 04a913e5efda45809eda2ffbd8940aae</msg>
<status status="PASS" starttime="20210322 17:45:13.206" endtime="20210322 17:45:13.208"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 17:45:13.209" level="INFO">${document_external_key} = 04a913e5efda45809eda2ffbd8940aae</msg>
<status status="PASS" starttime="20210322 17:45:13.209" endtime="20210322 17:45:13.209"></status>
</kw>
<status status="PASS" starttime="20210322 17:45:12.915" endtime="20210322 17:45:13.210"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 17:45:13.211" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:45:13.210" endtime="20210322 17:45:13.211"></status>
</kw>
<kw name="solicitar aprovação do holder" library="accreditation_request_approval">
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:45:13.212" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 17:45:13.212" endtime="20210322 17:45:13.213"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/approval</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:45:13.214" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/22b0b839de144748896c5c20b7972687/approval, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data=None 
json=None</msg>
<msg timestamp="20210322 17:45:13.525" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 17:45:13.213" endtime="20210322 17:45:13.526"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:45:13.527" level="INFO">{'message': 'Approval request accepted successfully. Processing analysis'}</msg>
<status status="PASS" starttime="20210322 17:45:13.526" endtime="20210322 17:45:13.527"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:45:13.528" level="INFO">e93c2aa75856a21a</msg>
<status status="PASS" starttime="20210322 17:45:13.527" endtime="20210322 17:45:13.528"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:45:13.529" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 17:45:13.528" endtime="20210322 17:45:13.529"></status>
</kw>
<status status="PASS" starttime="20210322 17:45:13.211" endtime="20210322 17:45:13.529"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 17:45:13.530" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:45:13.529" endtime="20210322 17:45:13.530"></status>
</kw>
<kw name="recebendo notificação de aprovação" library="accreditation_risk_notification">
<kw name="Uuid 4" library="FakerLibrary">
<doc>Generates a random UUID4 string.
:param cast_to: Specify what type the UUID should be cast to. Default is `str`
:type cast_to: callable</doc>
<assign>
<var>${assessment_id}</var>
</assign>
<msg timestamp="20210322 17:45:13.531" level="INFO">${assessment_id} = 674c7359-e9cb-44d3-a9a8-ca8f1019e634</msg>
<status status="PASS" starttime="20210322 17:45:13.531" endtime="20210322 17:45:13.531"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>year</arg>
</arguments>
<assign>
<var>${year}</var>
</assign>
<msg timestamp="20210322 17:45:13.532" level="INFO">${year} = 2021</msg>
<status status="PASS" starttime="20210322 17:45:13.532" endtime="20210322 17:45:13.532"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>month</arg>
</arguments>
<assign>
<var>${month}</var>
</assign>
<msg timestamp="20210322 17:45:13.533" level="INFO">${month} = 03</msg>
<status status="PASS" starttime="20210322 17:45:13.533" endtime="20210322 17:45:13.533"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>day</arg>
</arguments>
<assign>
<var>${day}</var>
</assign>
<msg timestamp="20210322 17:45:13.534" level="INFO">${day} = 22</msg>
<status status="PASS" starttime="20210322 17:45:13.533" endtime="20210322 17:45:13.534"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:45:13.535" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 17:45:13.534" endtime="20210322 17:45:13.535"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "risk.assessment.result",</arg>
<arg>"resource": "business.holder",</arg>
<arg>"created_at": "${year}-${month}-${day} 15:28:56.747Z",</arg>
<arg>"marketplace_id": "${marketplace_external_key}",</arg>
<arg>"object": {</arg>
<arg>"result": "APPROVED",</arg>
<arg>"holder_id": "${holder_external_key}",</arg>
<arg>"applicant_id": "${application_external_key}",</arg>
<arg>"assessment_id": "${assessment_id}"</arg>
<arg>}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 17:45:13.536" level="INFO">${body} = { "type": "risk.assessment.result", "resource": "business.holder", "created_at": "2021-03-22 15:28:56.747Z", "marketplace_id": "f71a8951368a4cc085cf7875ff44e61c", "object": { "result": "APPROVED", "ho...</msg>
<status status="PASS" starttime="20210322 17:45:13.535" endtime="20210322 17:45:13.536"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/admin/internal_operation/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/registration/approval</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:45:13.537" level="INFO">POST Request using : uri=/admin/internal_operation/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/22b0b839de144748896c5c20b7972687/registration/approval, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "risk.assessment.result", "resource": "business.holder", "created_at": "2021-03-22 15:28:56.747Z", "marketplace_id": "f71a8951368a4cc085cf7875ff44e61c", "object": { "result": "APPROVED", "holder_id": "22b0b839de144748896c5c20b7972687", "applicant_id": "bcc25a6751c14b52af1340d40dba78c5", "assessment_id": "674c7359-e9cb-44d3-a9a8-ca8f1019e634" } } 
json=None</msg>
<msg timestamp="20210322 17:45:13.737" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 17:45:13.536" endtime="20210322 17:45:13.737"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:45:13.737" level="INFO">{'message': 'Holder approved successfully'}</msg>
<status status="PASS" starttime="20210322 17:45:13.737" endtime="20210322 17:45:13.738"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:45:13.738" level="INFO">d1f21580a8caf875</msg>
<status status="PASS" starttime="20210322 17:45:13.738" endtime="20210322 17:45:13.738"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:45:13.739" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 17:45:13.739" endtime="20210322 17:45:13.739"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 17:45:13.740" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:45:13.739" endtime="20210322 17:45:13.740"></status>
</kw>
<status status="PASS" starttime="20210322 17:45:13.530" endtime="20210322 17:45:13.740"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 17:45:13.740" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:45:13.740" endtime="20210322 17:45:13.741"></status>
</kw>
<kw name="buscar account por holder" library="accounts_get_accounts_by_holder">
<kw name="conectar accounts" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accounts</arg>
<arg>url=${account_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 17:45:13.742" level="INFO">Creating Session using : alias=accounts, url=https://banking-accounts-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 17:45:13.742" endtime="20210322 17:45:13.742"></status>
</kw>
<status status="PASS" starttime="20210322 17:45:13.741" endtime="20210322 17:45:13.742"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accounts</arg>
<arg>/marketplaces/${marketplace_external_key}/holders/${holder_external_key}/accounts</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:45:13.743" level="INFO">GET Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/holders/22b0b839de144748896c5c20b7972687/accounts, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 17:45:14.357" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 17:45:13.743" endtime="20210322 17:45:14.357"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:45:14.358" level="INFO">{'items': [{'id': 'e051450acde44cc8ad0d6fbce8a9e166', 'holder': '22b0b839de144748896c5c20b7972687', 'balance': '0.00', 'currency': 'BRL', 'routing_number': '001', 'number': '6537929314', 'status': 'active', 'metadata': {}, 'created_at': '2021-03-22T20:45:14.922537', 'updated_at': '2021-03-22T20:45:14.922537', 'primary': True, 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'uri': '/v2/marketplaces/f71a8951368a4cc085cf7875ff44e61c/accounts/e051450acde44cc8ad0d6fbce8a9e166', 'resource': 'payment_account'}], 'has_more': False, 'limit': 100, 'total_pages': 1, 'page': 1, 'offset': 0, 'total': '1', 'query_count': '1'}</msg>
<status status="PASS" starttime="20210322 17:45:14.357" endtime="20210322 17:45:14.358"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:45:14.358" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 17:45:14.358" endtime="20210322 17:45:14.358"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["id"]}</arg>
</arguments>
<assign>
<var>${account_external_key}</var>
</assign>
<msg timestamp="20210322 17:45:14.359" level="INFO">${account_external_key} = e051450acde44cc8ad0d6fbce8a9e166</msg>
<status status="PASS" starttime="20210322 17:45:14.358" endtime="20210322 17:45:14.359"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_external_key}</arg>
</arguments>
<msg timestamp="20210322 17:45:14.359" level="INFO">${account_external_key} = e051450acde44cc8ad0d6fbce8a9e166</msg>
<status status="PASS" starttime="20210322 17:45:14.359" endtime="20210322 17:45:14.359"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["number"]}</arg>
</arguments>
<assign>
<var>${account_number}</var>
</assign>
<msg timestamp="20210322 17:45:14.360" level="INFO">${account_number} = 6537929314</msg>
<status status="PASS" starttime="20210322 17:45:14.360" endtime="20210322 17:45:14.360"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_number}</arg>
</arguments>
<msg timestamp="20210322 17:45:14.360" level="INFO">${account_number} = 6537929314</msg>
<status status="PASS" starttime="20210322 17:45:14.360" endtime="20210322 17:45:14.361"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["routing_number"]}</arg>
</arguments>
<assign>
<var>${account_routing_number}</var>
</assign>
<msg timestamp="20210322 17:45:14.361" level="INFO">${account_routing_number} = 001</msg>
<status status="PASS" starttime="20210322 17:45:14.361" endtime="20210322 17:45:14.361"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_routing_number}</arg>
</arguments>
<msg timestamp="20210322 17:45:14.362" level="INFO">${account_routing_number} = 001</msg>
<status status="PASS" starttime="20210322 17:45:14.361" endtime="20210322 17:45:14.362"></status>
</kw>
<status status="PASS" starttime="20210322 17:45:13.741" endtime="20210322 17:45:14.362"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 17:45:14.363" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:45:14.362" endtime="20210322 17:45:14.363"></status>
</kw>
<status status="PASS" starttime="20210322 17:45:11.118" endtime="20210322 17:45:14.363"></status>
</kw>
<kw name="criar chave pix" library="pix_dict_create_entry">
<arguments>
<arg>type=national_registration</arg>
<arg>value=${EMPTY}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 17:45:14.364" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 17:45:14.364" endtime="20210322 17:45:14.364"></status>
</kw>
<status status="PASS" starttime="20210322 17:45:14.363" endtime="20210322 17:45:14.364"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${type}</arg>
</arguments>
<msg timestamp="20210322 17:45:14.365" level="INFO">${type} = national_registration</msg>
<status status="PASS" starttime="20210322 17:45:14.365" endtime="20210322 17:45:14.365"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210322 17:45:14.365" level="INFO">${value} = </msg>
<status status="PASS" starttime="20210322 17:45:14.365" endtime="20210322 17:45:14.365"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:45:14.366" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 17:45:14.366" endtime="20210322 17:45:14.366"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "${type}",</arg>
<arg>"value": "${value}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 17:45:14.366" level="INFO">${body} = { "type": "national_registration", "value": "" }</msg>
<status status="PASS" starttime="20210322 17:45:14.366" endtime="20210322 17:45:14.366"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:45:14.367" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/22b0b839de144748896c5c20b7972687/accounts/e051450acde44cc8ad0d6fbce8a9e166/entries, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "national_registration", "value": "" } 
json=None</msg>
<msg timestamp="20210322 17:45:15.870" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:45:14.366" endtime="20210322 17:45:15.870"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:45:15.872" level="INFO">{'id': 'e129d71065184aa5b68b0f4d91f9200e', 'status': 'active', 'created_at': '2021-03-22T05:45:16.198', 'updated_at': '2021-03-22T05:45:16.198', 'key': {'value': '59430821660', 'type': 'national_registration'}, 'account': {'id': 'e051450acde44cc8ad0d6fbce8a9e166', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': '22b0b839de144748896c5c20b7972687', 'owner': {'name': 'Holder de teste', 'national_registration': '59430821660', 'type': 'individual'}, 'routing_number': '001', 'number': '6537929314', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}, 'resource': 'pix.entry'}</msg>
<status status="PASS" starttime="20210322 17:45:15.871" endtime="20210322 17:45:15.873"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:45:15.875" level="INFO">f59372ccf62e28ef</msg>
<status status="PASS" starttime="20210322 17:45:15.874" endtime="20210322 17:45:15.875"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 17:45:15.877" level="INFO">201</msg>
<status status="PASS" starttime="20210322 17:45:15.876" endtime="20210322 17:45:15.878"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:45:15.881" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:45:15.879" endtime="20210322 17:45:15.881"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${entry_external_key}</var>
</assign>
<msg timestamp="20210322 17:45:15.883" level="INFO">${entry_external_key} = e129d71065184aa5b68b0f4d91f9200e</msg>
<status status="PASS" starttime="20210322 17:45:15.881" endtime="20210322 17:45:15.883"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${entry_external_key}</arg>
</arguments>
<msg timestamp="20210322 17:45:15.884" level="INFO">${entry_external_key} = e129d71065184aa5b68b0f4d91f9200e</msg>
<status status="PASS" starttime="20210322 17:45:15.883" endtime="20210322 17:45:15.884"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["key"]["value"]}</arg>
</arguments>
<assign>
<var>${entry_key_value}</var>
</assign>
<msg timestamp="20210322 17:45:15.886" level="INFO">${entry_key_value} = 59430821660</msg>
<status status="PASS" starttime="20210322 17:45:15.885" endtime="20210322 17:45:15.887"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${entry_key_value}</arg>
</arguments>
<msg timestamp="20210322 17:45:15.888" level="INFO">${entry_key_value} = 59430821660</msg>
<status status="PASS" starttime="20210322 17:45:15.888" endtime="20210322 17:45:15.888"></status>
</kw>
<status status="PASS" starttime="20210322 17:45:14.363" endtime="20210322 17:45:15.889"></status>
</kw>
<kw name="validar chave pix" library="asserts">
<arguments>
<arg>key_status=active</arg>
<arg>key_type=${type}</arg>
<arg>key_value=${national_registration}</arg>
<arg>account_external_key=${account_external_key}</arg>
<arg>marketplace_external_key=${marketplace_external_key}</arg>
<arg>holder_external_key=${holder_external_key}</arg>
<arg>account_number=${account_number}</arg>
<arg>account_routing_number=${account_routing_number}</arg>
<arg>account_type=CACC</arg>
<arg>owner_key_name=${holder_name}</arg>
<arg>national_registration=${national_registration}</arg>
<arg>holder_type=${holder_type}</arg>
<arg>psp_code=19468242</arg>
<arg>psp_name=Zoop Tecnologia e Meios de Pagamento S.A.</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar status da chave</arg>
</arguments>
<msg timestamp="20210322 17:45:15.892" level="INFO">Validar status da chave</msg>
<status status="PASS" starttime="20210322 17:45:15.892" endtime="20210322 17:45:15.892"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["status"]}</arg>
<arg>${key_status}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:45:15.893" endtime="20210322 17:45:15.893"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando Tipo da chave PIX</arg>
</arguments>
<msg timestamp="20210322 17:45:15.894" level="INFO">Validando Tipo da chave PIX</msg>
<status status="PASS" starttime="20210322 17:45:15.894" endtime="20210322 17:45:15.895"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["key"]["type"]}</arg>
<arg>${key_type}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:45:15.895" endtime="20210322 17:45:15.895"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando Valor da chave PIX</arg>
</arguments>
<msg timestamp="20210322 17:45:15.896" level="INFO">Validando Valor da chave PIX</msg>
<status status="PASS" starttime="20210322 17:45:15.896" endtime="20210322 17:45:15.896"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${type}' == 'evp'</arg>
<arg>Should Not Be Empty</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' != 'evp'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${key_value}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${key_value}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:45:15.897" endtime="20210322 17:45:15.898"></status>
</kw>
<status status="PASS" starttime="20210322 17:45:15.897" endtime="20210322 17:45:15.898"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando dados da conta</arg>
</arguments>
<msg timestamp="20210322 17:45:15.898" level="INFO">Validando dados da conta</msg>
<status status="PASS" starttime="20210322 17:45:15.898" endtime="20210322 17:45:15.898"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["id"]}</arg>
<arg>${account_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:45:15.899" endtime="20210322 17:45:15.899"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["marketplace"]}</arg>
<arg>${marketplace_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:45:15.900" endtime="20210322 17:45:15.900"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["holder"]}</arg>
<arg>${holder_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:45:15.901" endtime="20210322 17:45:15.902"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["number"]}</arg>
<arg>${account_number}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:45:15.902" endtime="20210322 17:45:15.903"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["routing_number"]}</arg>
<arg>${account_routing_number}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:45:15.903" endtime="20210322 17:45:15.904"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["type"]}</arg>
<arg>${account_type}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:45:15.904" endtime="20210322 17:45:15.905"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar Proprietário da Account Owner</arg>
</arguments>
<msg timestamp="20210322 17:45:15.905" level="INFO">Validar Proprietário da Account Owner</msg>
<status status="PASS" starttime="20210322 17:45:15.905" endtime="20210322 17:45:15.905"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["account"]["owner"]["name"]}</arg>
<arg>${owner_key_name}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:45:15.906" endtime="20210322 17:45:15.906"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar national_registration da Account Owner</arg>
</arguments>
<msg timestamp="20210322 17:45:15.907" level="INFO">Validar national_registration da Account Owner</msg>
<status status="PASS" starttime="20210322 17:45:15.907" endtime="20210322 17:45:15.907"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["account"]["owner"]["national_registration"]}</arg>
<arg>${national_registration}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:45:15.907" endtime="20210322 17:45:15.908"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar Holder Type do Account Owner</arg>
</arguments>
<msg timestamp="20210322 17:45:15.909" level="INFO">Validar Holder Type do Account Owner</msg>
<status status="PASS" starttime="20210322 17:45:15.908" endtime="20210322 17:45:15.909"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["account"]["owner"]["type"]}</arg>
<arg>${holder_type}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:45:15.909" endtime="20210322 17:45:15.910"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar PSP</arg>
</arguments>
<msg timestamp="20210322 17:45:15.910" level="INFO">Validar PSP</msg>
<status status="PASS" starttime="20210322 17:45:15.910" endtime="20210322 17:45:15.911"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["psp"]["code"]}</arg>
<arg>${psp_code}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:45:15.911" endtime="20210322 17:45:15.912"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["psp"]["name"]}</arg>
<arg>${psp_name}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:45:15.912" endtime="20210322 17:45:15.913"></status>
</kw>
<status status="PASS" starttime="20210322 17:45:15.890" endtime="20210322 17:45:15.913"></status>
</kw>
<doc>Fluxo Básico</doc>
<tags>
<tag>regression_test</tag>
<tag>smoke_test</tag>
</tags>
<status status="PASS" starttime="20210322 17:45:11.117" endtime="20210322 17:45:15.913" critical="yes"></status>
</test>
<test id="s1-s1-s3-t5" name="Cenário: Criando Chave de Endereçamento do tipo CNPJ">
<kw name="criar holder business ativo" library="accreditation_create_holder_active">
<kw name="conectar accreditation" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accreditation</arg>
<arg>url=${accreditation_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 17:45:15.916" level="INFO">Creating Session using : alias=accreditation, url=https://banking-accreditation-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 17:45:15.915" endtime="20210322 17:45:15.916"></status>
</kw>
<status status="PASS" starttime="20210322 17:45:15.915" endtime="20210322 17:45:15.916"></status>
</kw>
<kw name="Cnpj" library="FakerLibrary">
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 17:45:15.917" level="INFO">${national_registration} = 61.038.257/0001-27</msg>
<status status="PASS" starttime="20210322 17:45:15.917" endtime="20210322 17:45:15.917"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${national_registration}</arg>
<arg>.</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 17:45:15.918" level="INFO">${national_registration} = 61038257/0001-27</msg>
<status status="PASS" starttime="20210322 17:45:15.917" endtime="20210322 17:45:15.918"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${national_registration}</arg>
<arg>-</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 17:45:15.919" level="INFO">${national_registration} = 61038257/000127</msg>
<status status="PASS" starttime="20210322 17:45:15.918" endtime="20210322 17:45:15.919"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${national_registration}</arg>
<arg>/</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 17:45:15.920" level="INFO">${national_registration} = 61038257000127</msg>
<status status="PASS" starttime="20210322 17:45:15.919" endtime="20210322 17:45:15.920"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${national_registration}</arg>
</arguments>
<msg timestamp="20210322 17:45:15.921" level="INFO">${national_registration} = 61038257000127</msg>
<status status="PASS" starttime="20210322 17:45:15.920" endtime="20210322 17:45:15.921"></status>
</kw>
<kw name="Rg" library="FakerLibrary">
<doc>Brazilian RG, return plain numbers.
Check:  https://www.ngmatematica.com/2014/02/como-determinar-o-digito-verificador-do.html</doc>
<assign>
<var>${identity_card}</var>
</assign>
<msg timestamp="20210322 17:45:15.921" level="INFO">${identity_card} = 215604738</msg>
<status status="PASS" starttime="20210322 17:45:15.921" endtime="20210322 17:45:15.921"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${identity_card}</arg>
</arguments>
<msg timestamp="20210322 17:45:15.922" level="INFO">${identity_card} = 215604738</msg>
<status status="PASS" starttime="20210322 17:45:15.922" endtime="20210322 17:45:15.922"></status>
</kw>
<kw name="criar holder business" library="accreditation_post_holder_business">
<arguments>
<arg>holder_type=business</arg>
<arg>holder_name=${holder_name}</arg>
<arg>email_business=${email_business}</arg>
<arg>national_registration=${national_registration}</arg>
<arg>revenue_business=${revenue_business}</arg>
<arg>cnae=${cnae}</arg>
<arg>legal_name=${legal_name}</arg>
<arg>establishment_format=mei</arg>
<arg>establishment_date=${establishment_date}</arg>
</arguments>
<kw name="conectar accreditation" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accreditation</arg>
<arg>url=${accreditation_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 17:45:15.925" level="INFO">Creating Session using : alias=accreditation, url=https://banking-accreditation-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 17:45:15.924" endtime="20210322 17:45:15.925"></status>
</kw>
<status status="PASS" starttime="20210322 17:45:15.924" endtime="20210322 17:45:15.926"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_type}</arg>
</arguments>
<msg timestamp="20210322 17:45:15.926" level="INFO">${holder_type} = business</msg>
<status status="PASS" starttime="20210322 17:45:15.926" endtime="20210322 17:45:15.926"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_name}</arg>
</arguments>
<msg timestamp="20210322 17:45:15.927" level="INFO">${holder_name} = Holder de teste</msg>
<status status="PASS" starttime="20210322 17:45:15.927" endtime="20210322 17:45:15.927"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${legal_name}</arg>
</arguments>
<msg timestamp="20210322 17:45:15.928" level="INFO">${legal_name} = Nome Legal da Empresa</msg>
<status status="PASS" starttime="20210322 17:45:15.928" endtime="20210322 17:45:15.928"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:45:15.929" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 17:45:15.928" endtime="20210322 17:45:15.929"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "${holder_type}",</arg>
<arg>"name": "${holder_name}",</arg>
<arg>"email": "${email_business}",</arg>
<arg>"national_registration": "${national_registration}",</arg>
<arg>"revenue": ${revenue_business},</arg>
<arg>"cnae": "${cnae}",</arg>
<arg>"legal_name": "${legal_name}",</arg>
<arg>"establishment": {</arg>
<arg>"format":"${establishment_format}",</arg>
<arg>"date":"${establishment_date}"</arg>
<arg>}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 17:45:15.930" level="INFO">${body} = { "type": "business", "name": "Holder de teste", "email": "contato@teste.com.br", "national_registration": "61038257000127", "revenue": 1005500.00, "cnae": "0111301", "legal_name": "Nome Legal da Empr...</msg>
<status status="PASS" starttime="20210322 17:45:15.929" endtime="20210322 17:45:15.931"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:45:15.932" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "business", "name": "Holder de teste", "email": "contato@teste.com.br", "national_registration": "61038257000127", "revenue": 1005500.00, "cnae": "0111301", "legal_name": "Nome Legal da Empresa", "establishment": { "format":"mei", "date":"2012-04-25" } } 
json=None</msg>
<msg timestamp="20210322 17:45:16.634" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:45:15.931" endtime="20210322 17:45:16.634"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:45:16.636" level="INFO">{'id': '41b791e12ebf404aa49219601668965f', 'name': 'Holder de teste', 'revenue': 1005500.0, 'email': 'contato@teste.com.br', 'status': 'waiting_info_and_documents', 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'marketplace_name': 'Marketplace de Teste', 'created_at': '2021-03-22T17:45:17.794177', 'updated_at': '2021-03-22T17:45:17.794179', 'type': 'business', 'national_registration': '61038257000127', 'legal_name': 'Nome Legal da Empresa', 'establishment': {'format': 'mei', 'date': '2012-04-25'}, 'cnae': '0111301', '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/41b791e12ebf404aa49219601668965f', 'type': 'GET'}, 'phones': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/41b791e12ebf404aa49219601668965f/phones', 'type': 'GET'}, 'addresses': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/41b791e12ebf404aa49219601668965f/addresses', 'type': 'GET'}, 'documents': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/41b791e12ebf404aa49219601668965f/documents', 'type': 'GET'}, 'partners': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/41b791e12ebf404aa49219601668965f/partners', 'type': 'GET'}, 'associates': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/41b791e12ebf404aa49219601668965f/associates', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 17:45:16.635" endtime="20210322 17:45:16.636"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:45:16.637" level="INFO">ce2535f5a77a1d69</msg>
<status status="PASS" starttime="20210322 17:45:16.637" endtime="20210322 17:45:16.637"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${body}</arg>
</arguments>
<msg timestamp="20210322 17:45:16.638" level="INFO">{ "type": "business", "name": "Holder de teste", "email": "contato@teste.com.br", "national_registration": "61038257000127", "revenue": 1005500.00, "cnae": "0111301", "legal_name": "Nome Legal da Empresa", "establishment": { "format":"mei", "date":"2012-04-25" } }</msg>
<status status="PASS" starttime="20210322 17:45:16.637" endtime="20210322 17:45:16.638"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:45:16.639" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:45:16.638" endtime="20210322 17:45:16.639"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${holder_external_key}</var>
</assign>
<msg timestamp="20210322 17:45:16.640" level="INFO">${holder_external_key} = 41b791e12ebf404aa49219601668965f</msg>
<status status="PASS" starttime="20210322 17:45:16.639" endtime="20210322 17:45:16.640"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_external_key}</arg>
</arguments>
<msg timestamp="20210322 17:45:16.641" level="INFO">${holder_external_key} = 41b791e12ebf404aa49219601668965f</msg>
<status status="PASS" starttime="20210322 17:45:16.641" endtime="20210322 17:45:16.641"></status>
</kw>
<status status="PASS" starttime="20210322 17:45:15.923" endtime="20210322 17:45:16.641"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 17:45:16.642" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:45:16.641" endtime="20210322 17:45:16.642"></status>
</kw>
<kw name="criar holder phone" library="accreditation_post_holder_phone">
<arguments>
<arg>21</arg>
<arg>51</arg>
<arg>996221236</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:45:16.643" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 17:45:16.643" endtime="20210322 17:45:16.643"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"area_code": "${phone_area_code}",</arg>
<arg>"country_code": "${phone_country_code}",</arg>
<arg>"number": "${phone_number}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 17:45:16.644" level="INFO">${body} = { "area_code": "21", "country_code": "51", "number": "996221236" }</msg>
<status status="PASS" starttime="20210322 17:45:16.643" endtime="20210322 17:45:16.644"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/phones</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:45:16.645" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/41b791e12ebf404aa49219601668965f/phones, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "area_code": "21", "country_code": "51", "number": "996221236" } 
json=None</msg>
<msg timestamp="20210322 17:45:16.919" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:45:16.644" endtime="20210322 17:45:16.919"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:45:16.919" level="INFO">{'id': '35ed7078448846bea06c6ebfef110567', 'area_code': '21', 'country_code': '51', 'number': '996221236', 'main': True, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/41b791e12ebf404aa49219601668965f/phones/35ed7078448846bea06c6ebfef110567', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/41b791e12ebf404aa49219601668965f', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 17:45:16.919" endtime="20210322 17:45:16.919"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:45:16.920" level="INFO">e208780e3467bdff</msg>
<status status="PASS" starttime="20210322 17:45:16.920" endtime="20210322 17:45:16.920"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:45:16.920" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:45:16.920" endtime="20210322 17:45:16.921"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${phone_external_key}</var>
</assign>
<msg timestamp="20210322 17:45:16.921" level="INFO">${phone_external_key} = 35ed7078448846bea06c6ebfef110567</msg>
<status status="PASS" starttime="20210322 17:45:16.921" endtime="20210322 17:45:16.921"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${phone_external_key}</arg>
</arguments>
<msg timestamp="20210322 17:45:16.922" level="INFO">${phone_external_key} = 35ed7078448846bea06c6ebfef110567</msg>
<status status="PASS" starttime="20210322 17:45:16.921" endtime="20210322 17:45:16.922"></status>
</kw>
<status status="PASS" starttime="20210322 17:45:16.642" endtime="20210322 17:45:16.922"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 17:45:16.922" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:45:16.922" endtime="20210322 17:45:16.923"></status>
</kw>
<kw name="criar holder address" library="accreditation_post_holder_address">
<arguments>
<arg>Rio de Janeiro</arg>
<arg>Rio de Janeiro</arg>
<arg>Brasil</arg>
<arg>Bairro de Testes</arg>
<arg>Rua de Testes</arg>
<arg>90</arg>
<arg>apto 200</arg>
<arg>21550987</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:45:16.923" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 17:45:16.923" endtime="20210322 17:45:16.923"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"city": "${city}",</arg>
<arg>"state": "${state}",</arg>
<arg>"country": "${country}",</arg>
<arg>"neighborhood": "${neighborhood}",</arg>
<arg>"street": "${street}",</arg>
<arg>"number": "${number}",</arg>
<arg>"complement": "${complement}",</arg>
<arg>"postal_code": "${postal_code}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 17:45:16.924" level="INFO">${body} = { "city": "Rio de Janeiro", "state": "Rio de Janeiro", "country": "Brasil", "neighborhood": "Bairro de Testes", "street": "Rua de Testes", "number": "90", "complement": "apto 200", "postal_code": "215...</msg>
<status status="PASS" starttime="20210322 17:45:16.924" endtime="20210322 17:45:16.924"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/addresses</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:45:16.925" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/41b791e12ebf404aa49219601668965f/addresses, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "city": "Rio de Janeiro", "state": "Rio de Janeiro", "country": "Brasil", "neighborhood": "Bairro de Testes", "street": "Rua de Testes", "number": "90", "complement": "apto 200", "postal_code": "21550987" } 
json=None</msg>
<msg timestamp="20210322 17:45:17.189" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:45:16.924" endtime="20210322 17:45:17.189"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:45:17.191" level="INFO">{'id': '223af7341fe1431db9f06a66dc730377', 'street': 'Rua de Testes', 'number': '90', 'city': 'Rio de Janeiro', 'complement': 'apto 200', 'state': 'Rio de Janeiro', 'neighborhood': 'Bairro de Testes', 'postal_code': '21550987', 'country': 'Brasil', 'main': True, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/41b791e12ebf404aa49219601668965f/addresses/223af7341fe1431db9f06a66dc730377', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/41b791e12ebf404aa49219601668965f', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 17:45:17.190" endtime="20210322 17:45:17.191"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:45:17.192" level="INFO">7939c98e75888740</msg>
<status status="PASS" starttime="20210322 17:45:17.191" endtime="20210322 17:45:17.192"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:45:17.193" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:45:17.193" endtime="20210322 17:45:17.194"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${address_external_key}</var>
</assign>
<msg timestamp="20210322 17:45:17.195" level="INFO">${address_external_key} = 223af7341fe1431db9f06a66dc730377</msg>
<status status="PASS" starttime="20210322 17:45:17.194" endtime="20210322 17:45:17.195"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${address_external_key}</arg>
</arguments>
<msg timestamp="20210322 17:45:17.196" level="INFO">${address_external_key} = 223af7341fe1431db9f06a66dc730377</msg>
<status status="PASS" starttime="20210322 17:45:17.196" endtime="20210322 17:45:17.196"></status>
</kw>
<status status="PASS" starttime="20210322 17:45:16.923" endtime="20210322 17:45:17.197"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 17:45:17.197" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:45:17.197" endtime="20210322 17:45:17.198"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>CCMEI</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:45:17.199" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 17:45:17.199" endtime="20210322 17:45:17.199"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 17:45:17.200" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 17:45:17.202" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 17:45:17.200" endtime="20210322 17:45:17.202"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:45:17.203" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/41b791e12ebf404aa49219601668965f/documents?type=CCMEI, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 17:45:17.472" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:45:17.202" endtime="20210322 17:45:17.472"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:45:17.472" level="INFO">{'id': '1a7b3b440708449fb4f7aba6761935c0', 'document_type': 'ccmei', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/41b791e12ebf404aa49219601668965f/documents/1a7b3b440708449fb4f7aba6761935c0', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/41b791e12ebf404aa49219601668965f', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/41b791e12ebf404aa49219601668965f/documents/1a7b3b440708449fb4f7aba6761935c0/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 17:45:17.472" endtime="20210322 17:45:17.473"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:45:17.473" level="INFO">e5c565dea000541c</msg>
<status status="PASS" starttime="20210322 17:45:17.473" endtime="20210322 17:45:17.473"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:45:17.474" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:45:17.473" endtime="20210322 17:45:17.474"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 17:45:17.475" level="INFO">${document_external_key} = 1a7b3b440708449fb4f7aba6761935c0</msg>
<status status="PASS" starttime="20210322 17:45:17.474" endtime="20210322 17:45:17.475"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 17:45:17.475" level="INFO">${document_external_key} = 1a7b3b440708449fb4f7aba6761935c0</msg>
<status status="PASS" starttime="20210322 17:45:17.475" endtime="20210322 17:45:17.475"></status>
</kw>
<status status="PASS" starttime="20210322 17:45:17.198" endtime="20210322 17:45:17.476"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 17:45:17.476" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:45:17.476" endtime="20210322 17:45:17.476"></status>
</kw>
<kw name="Cpf" library="FakerLibrary">
<assign>
<var>${partner_individual_national_registration}</var>
</assign>
<msg timestamp="20210322 17:45:17.477" level="INFO">${partner_individual_national_registration} = 528.349.107-23</msg>
<status status="PASS" starttime="20210322 17:45:17.476" endtime="20210322 17:45:17.477"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${partner_individual_national_registration}</arg>
<arg>.</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${partner_individual_national_registration}</var>
</assign>
<msg timestamp="20210322 17:45:17.478" level="INFO">${partner_individual_national_registration} = 528349107-23</msg>
<status status="PASS" starttime="20210322 17:45:17.477" endtime="20210322 17:45:17.478"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${partner_individual_national_registration}</arg>
<arg>-</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${partner_individual_national_registration}</var>
</assign>
<msg timestamp="20210322 17:45:17.478" level="INFO">${partner_individual_national_registration} = 52834910723</msg>
<status status="PASS" starttime="20210322 17:45:17.478" endtime="20210322 17:45:17.478"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${partner_individual_national_registration}</arg>
</arguments>
<msg timestamp="20210322 17:45:17.479" level="INFO">${partner_individual_national_registration} = 52834910723</msg>
<status status="PASS" starttime="20210322 17:45:17.479" endtime="20210322 17:45:17.479"></status>
</kw>
<kw name="Rg" library="FakerLibrary">
<doc>Brazilian RG, return plain numbers.
Check:  https://www.ngmatematica.com/2014/02/como-determinar-o-digito-verificador-do.html</doc>
<assign>
<var>${partner_individual_identity_card}</var>
</assign>
<msg timestamp="20210322 17:45:17.479" level="INFO">${partner_individual_identity_card} = 702413859</msg>
<status status="PASS" starttime="20210322 17:45:17.479" endtime="20210322 17:45:17.479"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${partner_individual_identity_card}</arg>
</arguments>
<msg timestamp="20210322 17:45:17.481" level="INFO">${partner_individual_identity_card} = 702413859</msg>
<status status="PASS" starttime="20210322 17:45:17.480" endtime="20210322 17:45:17.481"></status>
</kw>
<kw name="criar partner individual" library="accreditation_post_partner_individual">
<arguments>
<arg>partner_individual_type=individual</arg>
<arg>partner_individual_name=${partner_individual_name}</arg>
<arg>partner_individual_email=${partner_individual_email}</arg>
<arg>partner_individual_national_registration=${partner_individual_national_registration}</arg>
<arg>partner_individual_revenue=${partner_individual_revenue}</arg>
<arg>partner_individual_birthday=${partner_individual_birthday}</arg>
<arg>partner_individual_mothers_name=${partner_individual_mothers_name}</arg>
<arg>partner_individual_identity_card=${partner_individual_identity_card}</arg>
<arg>partner_individual_pep=false</arg>
<arg>partner_individual_percentage=100</arg>
<arg>partner_individual_adm=true</arg>
<arg>partner_individual_cbo=${partner_individual_cbo}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:45:17.482" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 17:45:17.481" endtime="20210322 17:45:17.482"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "${partner_individual_type}",</arg>
<arg>"name": "${partner_individual_name}",</arg>
<arg>"email": "${partner_individual_email}",</arg>
<arg>"national_registration": "${partner_individual_national_registration}",</arg>
<arg>"revenue": ${partner_individual_revenue},</arg>
<arg>"birthday": "${partner_individual_birthday}",</arg>
<arg>"mothers_name": "${partner_individual_mothers_name}",</arg>
<arg>"identity_card": "${partner_individual_identity_card}",</arg>
<arg>"pep": false,</arg>
<arg>"percentage": ${partner_individual_percentage},</arg>
<arg>"adm": ${partner_individual_adm},</arg>
<arg>"cbo": ${partner_individual_cbo}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 17:45:17.483" level="INFO">${body} = { "type": "individual", "name": "Individual Partner de teste", "email": "teste@teste.com.br", "national_registration": "52834910723", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe...</msg>
<status status="PASS" starttime="20210322 17:45:17.482" endtime="20210322 17:45:17.483"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/partners</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:45:17.485" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/41b791e12ebf404aa49219601668965f/partners, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "individual", "name": "Individual Partner de teste", "email": "teste@teste.com.br", "national_registration": "52834910723", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Individual Partner", "identity_card": "702413859", "pep": false, "percentage": 100, "adm": true, "cbo": 821450 } 
json=None</msg>
<msg timestamp="20210322 17:45:17.712" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:45:17.483" endtime="20210322 17:45:17.713"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:45:17.714" level="INFO">{'id': 'ea30f065e743449bb30d3654aaf7c822', 'name': 'Individual Partner de teste', 'revenue': 5500.0, 'email': 'teste@teste.com.br', 'created_at': '2021-03-22T17:45:18.849828', 'updated_at': '2021-03-22T17:45:18.849829', 'main': True, 'adm': True, 'percentage': 100.0, 'type': 'individual', 'national_registration': '52834910723', 'birthday': '1988-04-23', 'mothers_name': 'Mãe do Individual Partner', 'identity_card': '702413859', 'pep': False, 'cbo': '821450', '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/41b791e12ebf404aa49219601668965f/partners/ea30f065e743449bb30d3654aaf7c822', 'type': 'GET'}, 'phones': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/41b791e12ebf404aa49219601668965f/partners/ea30f065e743449bb30d3654aaf7c822/phones', 'type': 'GET'}, 'addresses': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/41b791e12ebf404aa49219601668965f/partners/ea30f065e743449bb30d3654aaf7c822/addresses', 'type': 'GET'}, 'documents': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/41b791e12ebf404aa49219601668965f/partners/ea30f065e743449bb30d3654aaf7c822/documents', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/41b791e12ebf404aa49219601668965f', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 17:45:17.713" endtime="20210322 17:45:17.714"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:45:17.716" level="INFO">7afd539c2aa09876</msg>
<status status="PASS" starttime="20210322 17:45:17.715" endtime="20210322 17:45:17.716"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:45:17.717" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:45:17.716" endtime="20210322 17:45:17.717"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${partner_external_key}</var>
</assign>
<msg timestamp="20210322 17:45:17.719" level="INFO">${partner_external_key} = ea30f065e743449bb30d3654aaf7c822</msg>
<status status="PASS" starttime="20210322 17:45:17.718" endtime="20210322 17:45:17.719"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${partner_external_key}</arg>
</arguments>
<msg timestamp="20210322 17:45:17.720" level="INFO">${partner_external_key} = ea30f065e743449bb30d3654aaf7c822</msg>
<status status="PASS" starttime="20210322 17:45:17.720" endtime="20210322 17:45:17.721"></status>
</kw>
<status status="PASS" starttime="20210322 17:45:17.481" endtime="20210322 17:45:17.721"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 17:45:17.723" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:45:17.722" endtime="20210322 17:45:17.723"></status>
</kw>
<kw name="criar partner phone" library="accreditation_post_partner_phone">
<arguments>
<arg>21</arg>
<arg>51</arg>
<arg>996554785</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:45:17.725" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 17:45:17.724" endtime="20210322 17:45:17.725"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"area_code": "${phone_area_code}",</arg>
<arg>"country_code": "${phone_country_code}",</arg>
<arg>"number": "${phone_number}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 17:45:17.726" level="INFO">${body} = { "area_code": "21", "country_code": "51", "number": "996554785" }</msg>
<status status="PASS" starttime="20210322 17:45:17.725" endtime="20210322 17:45:17.726"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/partners/${partner_external_key}/phones/</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:45:17.727" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/41b791e12ebf404aa49219601668965f/partners/ea30f065e743449bb30d3654aaf7c822/phones/, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "area_code": "21", "country_code": "51", "number": "996554785" } 
json=None</msg>
<msg timestamp="20210322 17:45:17.953" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:45:17.726" endtime="20210322 17:45:17.954"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:45:17.956" level="INFO">{'id': '8477a3e07bf347309d105f5a5ca36404', 'area_code': '21', 'country_code': '51', 'number': '996554785', 'main': True, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/41b791e12ebf404aa49219601668965f/partners/ea30f065e743449bb30d3654aaf7c822/phones/8477a3e07bf347309d105f5a5ca36404', 'type': 'GET'}, 'partner': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/41b791e12ebf404aa49219601668965f/partners/ea30f065e743449bb30d3654aaf7c822', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/41b791e12ebf404aa49219601668965f', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 17:45:17.955" endtime="20210322 17:45:17.957"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:45:17.959" level="INFO">d7cc0fe13b718d18</msg>
<status status="PASS" starttime="20210322 17:45:17.957" endtime="20210322 17:45:17.959"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:45:17.961" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:45:17.960" endtime="20210322 17:45:17.961"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${holder_external_key}</var>
</assign>
<msg timestamp="20210322 17:45:17.964" level="INFO">${holder_external_key} = 8477a3e07bf347309d105f5a5ca36404</msg>
<status status="PASS" starttime="20210322 17:45:17.962" endtime="20210322 17:45:17.964"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${phone_external_key}</arg>
</arguments>
<msg timestamp="20210322 17:45:17.966" level="INFO">${phone_external_key} = 35ed7078448846bea06c6ebfef110567</msg>
<status status="PASS" starttime="20210322 17:45:17.965" endtime="20210322 17:45:17.966"></status>
</kw>
<status status="PASS" starttime="20210322 17:45:17.723" endtime="20210322 17:45:17.966"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 17:45:17.967" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:45:17.967" endtime="20210322 17:45:17.968"></status>
</kw>
<kw name="criar partner address" library="accreditation_post_partner_address">
<arguments>
<arg>Rio de Janeiro</arg>
<arg>Rio de Janeiro</arg>
<arg>Brasil</arg>
<arg>Bairro de Testes</arg>
<arg>Rua de Testes</arg>
<arg>61</arg>
<arg>apto 201</arg>
<arg>21550478</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:45:17.970" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 17:45:17.969" endtime="20210322 17:45:17.970"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"city": "${city}",</arg>
<arg>"state": "${state}",</arg>
<arg>"country": "${country}",</arg>
<arg>"neighborhood": "${neighborhood}",</arg>
<arg>"street": "${street}",</arg>
<arg>"number": "${number}",</arg>
<arg>"complement": "${complement}",</arg>
<arg>"postal_code": "${postal_code}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 17:45:17.972" level="INFO">${body} = { "city": "Rio de Janeiro", "state": "Rio de Janeiro", "country": "Brasil", "neighborhood": "Bairro de Testes", "street": "Rua de Testes", "number": "61", "complement": "apto 201", "postal_code": "215...</msg>
<status status="PASS" starttime="20210322 17:45:17.971" endtime="20210322 17:45:17.972"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/partners/${partner_external_key}/addresses</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:45:17.974" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/41b791e12ebf404aa49219601668965f/partners/ea30f065e743449bb30d3654aaf7c822/addresses, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "city": "Rio de Janeiro", "state": "Rio de Janeiro", "country": "Brasil", "neighborhood": "Bairro de Testes", "street": "Rua de Testes", "number": "61", "complement": "apto 201", "postal_code": "21550478" } 
json=None</msg>
<msg timestamp="20210322 17:45:18.207" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:45:17.973" endtime="20210322 17:45:18.207"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:45:18.210" level="INFO">{'id': '2650c5791df2435688b5afab0f9d2c71', 'street': 'Rua de Testes', 'number': '61', 'city': 'Rio de Janeiro', 'complement': 'apto 201', 'state': 'Rio de Janeiro', 'neighborhood': 'Bairro de Testes', 'postal_code': '21550478', 'country': 'Brasil', 'main': True, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/41b791e12ebf404aa49219601668965f/partners/ea30f065e743449bb30d3654aaf7c822/addresses/2650c5791df2435688b5afab0f9d2c71', 'type': 'GET'}, 'partner': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/41b791e12ebf404aa49219601668965f/partners/ea30f065e743449bb30d3654aaf7c822', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/41b791e12ebf404aa49219601668965f', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 17:45:18.208" endtime="20210322 17:45:18.210"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:45:18.212" level="INFO">c9b99a832c29ff76</msg>
<status status="PASS" starttime="20210322 17:45:18.211" endtime="20210322 17:45:18.212"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:45:18.214" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:45:18.213" endtime="20210322 17:45:18.214"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${address_external_key}</var>
</assign>
<msg timestamp="20210322 17:45:18.216" level="INFO">${address_external_key} = 2650c5791df2435688b5afab0f9d2c71</msg>
<status status="PASS" starttime="20210322 17:45:18.215" endtime="20210322 17:45:18.216"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${address_external_key}</arg>
</arguments>
<msg timestamp="20210322 17:45:18.217" level="INFO">${address_external_key} = 2650c5791df2435688b5afab0f9d2c71</msg>
<status status="PASS" starttime="20210322 17:45:18.217" endtime="20210322 17:45:18.218"></status>
</kw>
<status status="PASS" starttime="20210322 17:45:17.968" endtime="20210322 17:45:18.218"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 17:45:18.219" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:45:18.218" endtime="20210322 17:45:18.219"></status>
</kw>
<kw name="criar partner document" library="accreditation_post_partner_document">
<arguments>
<arg>SELFIE</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:45:18.221" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 17:45:18.220" endtime="20210322 17:45:18.221"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 17:45:18.222" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 17:45:18.224" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 17:45:18.221" endtime="20210322 17:45:18.224"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/partners/${partner_externaL_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:45:18.225" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/41b791e12ebf404aa49219601668965f/partners/ea30f065e743449bb30d3654aaf7c822/documents?type=SELFIE, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 17:45:18.495" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:45:18.224" endtime="20210322 17:45:18.496"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:45:18.497" level="INFO">{'id': 'acd9c1df0f284c7ea09aa0bbe6cca3e0', 'document_type': 'selfie', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/41b791e12ebf404aa49219601668965f/partners/ea30f065e743449bb30d3654aaf7c822/documents/acd9c1df0f284c7ea09aa0bbe6cca3e0', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/41b791e12ebf404aa49219601668965f', 'type': 'GET'}, 'partner': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/41b791e12ebf404aa49219601668965f/partners/ea30f065e743449bb30d3654aaf7c822', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/41b791e12ebf404aa49219601668965f/partners/ea30f065e743449bb30d3654aaf7c822/documents/acd9c1df0f284c7ea09aa0bbe6cca3e0/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 17:45:18.496" endtime="20210322 17:45:18.498"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:45:18.499" level="INFO">a04361e5b3d4c5b6</msg>
<status status="PASS" starttime="20210322 17:45:18.498" endtime="20210322 17:45:18.500"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:45:18.501" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:45:18.500" endtime="20210322 17:45:18.502"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 17:45:18.503" level="INFO">${document_external_key} = acd9c1df0f284c7ea09aa0bbe6cca3e0</msg>
<status status="PASS" starttime="20210322 17:45:18.502" endtime="20210322 17:45:18.504"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 17:45:18.505" level="INFO">${document_external_key} = acd9c1df0f284c7ea09aa0bbe6cca3e0</msg>
<status status="PASS" starttime="20210322 17:45:18.504" endtime="20210322 17:45:18.505"></status>
</kw>
<status status="PASS" starttime="20210322 17:45:18.219" endtime="20210322 17:45:18.505"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 17:45:18.506" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:45:18.506" endtime="20210322 17:45:18.507"></status>
</kw>
<kw name="criar partner document" library="accreditation_post_partner_document">
<arguments>
<arg>RG_FRENTE</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:45:18.508" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 17:45:18.508" endtime="20210322 17:45:18.509"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 17:45:18.509" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 17:45:18.512" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 17:45:18.509" endtime="20210322 17:45:18.512"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/partners/${partner_externaL_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:45:18.514" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/41b791e12ebf404aa49219601668965f/partners/ea30f065e743449bb30d3654aaf7c822/documents?type=RG_FRENTE, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 17:45:18.812" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:45:18.513" endtime="20210322 17:45:18.813"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:45:18.815" level="INFO">{'id': 'f8d2a0576b814e6d8c822b79da6d6883', 'document_type': 'rg_frente', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/41b791e12ebf404aa49219601668965f/partners/ea30f065e743449bb30d3654aaf7c822/documents/f8d2a0576b814e6d8c822b79da6d6883', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/41b791e12ebf404aa49219601668965f', 'type': 'GET'}, 'partner': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/41b791e12ebf404aa49219601668965f/partners/ea30f065e743449bb30d3654aaf7c822', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/41b791e12ebf404aa49219601668965f/partners/ea30f065e743449bb30d3654aaf7c822/documents/f8d2a0576b814e6d8c822b79da6d6883/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 17:45:18.813" endtime="20210322 17:45:18.815"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:45:18.817" level="INFO">2331f4effa2d3e47</msg>
<status status="PASS" starttime="20210322 17:45:18.816" endtime="20210322 17:45:18.818"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:45:18.820" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:45:18.819" endtime="20210322 17:45:18.820"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 17:45:18.823" level="INFO">${document_external_key} = f8d2a0576b814e6d8c822b79da6d6883</msg>
<status status="PASS" starttime="20210322 17:45:18.821" endtime="20210322 17:45:18.823"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 17:45:18.825" level="INFO">${document_external_key} = f8d2a0576b814e6d8c822b79da6d6883</msg>
<status status="PASS" starttime="20210322 17:45:18.824" endtime="20210322 17:45:18.826"></status>
</kw>
<status status="PASS" starttime="20210322 17:45:18.507" endtime="20210322 17:45:18.826"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 17:45:18.827" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:45:18.827" endtime="20210322 17:45:18.828"></status>
</kw>
<kw name="criar partner document" library="accreditation_post_partner_document">
<arguments>
<arg>RG_VERSO</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:45:18.830" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 17:45:18.829" endtime="20210322 17:45:18.830"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 17:45:18.831" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 17:45:18.834" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 17:45:18.830" endtime="20210322 17:45:18.834"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/partners/${partner_externaL_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:45:18.836" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/41b791e12ebf404aa49219601668965f/partners/ea30f065e743449bb30d3654aaf7c822/documents?type=RG_VERSO, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 17:45:19.095" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:45:18.835" endtime="20210322 17:45:19.096"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:45:19.098" level="INFO">{'id': 'ef345326d0224811a50a705f39f04eff', 'document_type': 'rg_verso', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/41b791e12ebf404aa49219601668965f/partners/ea30f065e743449bb30d3654aaf7c822/documents/ef345326d0224811a50a705f39f04eff', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/41b791e12ebf404aa49219601668965f', 'type': 'GET'}, 'partner': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/41b791e12ebf404aa49219601668965f/partners/ea30f065e743449bb30d3654aaf7c822', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/41b791e12ebf404aa49219601668965f/partners/ea30f065e743449bb30d3654aaf7c822/documents/ef345326d0224811a50a705f39f04eff/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 17:45:19.097" endtime="20210322 17:45:19.099"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:45:19.101" level="INFO">d6eeea2e07aa9285</msg>
<status status="PASS" starttime="20210322 17:45:19.100" endtime="20210322 17:45:19.101"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:45:19.104" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:45:19.103" endtime="20210322 17:45:19.104"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 17:45:19.107" level="INFO">${document_external_key} = ef345326d0224811a50a705f39f04eff</msg>
<status status="PASS" starttime="20210322 17:45:19.105" endtime="20210322 17:45:19.107"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 17:45:19.109" level="INFO">${document_external_key} = ef345326d0224811a50a705f39f04eff</msg>
<status status="PASS" starttime="20210322 17:45:19.108" endtime="20210322 17:45:19.109"></status>
</kw>
<status status="PASS" starttime="20210322 17:45:18.828" endtime="20210322 17:45:19.109"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 17:45:19.111" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:45:19.110" endtime="20210322 17:45:19.111"></status>
</kw>
<kw name="solicitar aprovação do holder" library="accreditation_request_approval">
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:45:19.113" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 17:45:19.113" endtime="20210322 17:45:19.113"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/approval</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:45:19.115" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/41b791e12ebf404aa49219601668965f/approval, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data=None 
json=None</msg>
<msg timestamp="20210322 17:45:19.403" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 17:45:19.114" endtime="20210322 17:45:19.403"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:45:19.407" level="INFO">{'message': 'Approval request accepted successfully. Processing analysis'}</msg>
<status status="PASS" starttime="20210322 17:45:19.404" endtime="20210322 17:45:19.409"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:45:19.410" level="INFO">6f7fbe11bcec8509</msg>
<status status="PASS" starttime="20210322 17:45:19.409" endtime="20210322 17:45:19.411"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:45:19.414" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 17:45:19.412" endtime="20210322 17:45:19.414"></status>
</kw>
<status status="PASS" starttime="20210322 17:45:19.112" endtime="20210322 17:45:19.415"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 17:45:19.417" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:45:19.416" endtime="20210322 17:45:19.418"></status>
</kw>
<kw name="recebendo notificação de aprovação" library="accreditation_risk_notification">
<kw name="Uuid 4" library="FakerLibrary">
<doc>Generates a random UUID4 string.
:param cast_to: Specify what type the UUID should be cast to. Default is `str`
:type cast_to: callable</doc>
<assign>
<var>${assessment_id}</var>
</assign>
<msg timestamp="20210322 17:45:19.421" level="INFO">${assessment_id} = 10baef8b-25c5-4d0b-a95f-1543acab29e8</msg>
<status status="PASS" starttime="20210322 17:45:19.420" endtime="20210322 17:45:19.421"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>year</arg>
</arguments>
<assign>
<var>${year}</var>
</assign>
<msg timestamp="20210322 17:45:19.422" level="INFO">${year} = 2021</msg>
<status status="PASS" starttime="20210322 17:45:19.422" endtime="20210322 17:45:19.422"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>month</arg>
</arguments>
<assign>
<var>${month}</var>
</assign>
<msg timestamp="20210322 17:45:19.424" level="INFO">${month} = 03</msg>
<status status="PASS" starttime="20210322 17:45:19.423" endtime="20210322 17:45:19.424"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>day</arg>
</arguments>
<assign>
<var>${day}</var>
</assign>
<msg timestamp="20210322 17:45:19.425" level="INFO">${day} = 22</msg>
<status status="PASS" starttime="20210322 17:45:19.424" endtime="20210322 17:45:19.425"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:45:19.426" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 17:45:19.425" endtime="20210322 17:45:19.426"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "risk.assessment.result",</arg>
<arg>"resource": "business.holder",</arg>
<arg>"created_at": "${year}-${month}-${day} 15:28:56.747Z",</arg>
<arg>"marketplace_id": "${marketplace_external_key}",</arg>
<arg>"object": {</arg>
<arg>"result": "APPROVED",</arg>
<arg>"holder_id": "${holder_external_key}",</arg>
<arg>"applicant_id": "${application_external_key}",</arg>
<arg>"assessment_id": "${assessment_id}"</arg>
<arg>}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 17:45:19.428" level="INFO">${body} = { "type": "risk.assessment.result", "resource": "business.holder", "created_at": "2021-03-22 15:28:56.747Z", "marketplace_id": "f71a8951368a4cc085cf7875ff44e61c", "object": { "result": "APPROVED", "ho...</msg>
<status status="PASS" starttime="20210322 17:45:19.427" endtime="20210322 17:45:19.428"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/admin/internal_operation/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/registration/approval</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:45:19.430" level="INFO">POST Request using : uri=/admin/internal_operation/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/41b791e12ebf404aa49219601668965f/registration/approval, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "risk.assessment.result", "resource": "business.holder", "created_at": "2021-03-22 15:28:56.747Z", "marketplace_id": "f71a8951368a4cc085cf7875ff44e61c", "object": { "result": "APPROVED", "holder_id": "41b791e12ebf404aa49219601668965f", "applicant_id": "bcc25a6751c14b52af1340d40dba78c5", "assessment_id": "10baef8b-25c5-4d0b-a95f-1543acab29e8" } } 
json=None</msg>
<msg timestamp="20210322 17:45:19.626" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 17:45:19.429" endtime="20210322 17:45:19.626"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:45:19.627" level="INFO">{'message': 'Holder approved successfully'}</msg>
<status status="PASS" starttime="20210322 17:45:19.627" endtime="20210322 17:45:19.628"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:45:19.629" level="INFO">a4dc806523d2df25</msg>
<status status="PASS" starttime="20210322 17:45:19.628" endtime="20210322 17:45:19.629"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:45:19.631" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 17:45:19.630" endtime="20210322 17:45:19.631"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 17:45:19.632" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:45:19.631" endtime="20210322 17:45:19.632"></status>
</kw>
<status status="PASS" starttime="20210322 17:45:19.419" endtime="20210322 17:45:19.633"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 17:45:19.634" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:45:19.633" endtime="20210322 17:45:19.634"></status>
</kw>
<kw name="buscar account por holder" library="accounts_get_accounts_by_holder">
<kw name="conectar accounts" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accounts</arg>
<arg>url=${account_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 17:45:19.637" level="INFO">Creating Session using : alias=accounts, url=https://banking-accounts-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 17:45:19.637" endtime="20210322 17:45:19.638"></status>
</kw>
<status status="PASS" starttime="20210322 17:45:19.636" endtime="20210322 17:45:19.638"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accounts</arg>
<arg>/marketplaces/${marketplace_external_key}/holders/${holder_external_key}/accounts</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:45:19.639" level="INFO">GET Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/holders/41b791e12ebf404aa49219601668965f/accounts, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 17:45:20.259" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 17:45:19.639" endtime="20210322 17:45:20.259"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:45:20.260" level="INFO">{'items': [{'id': 'fdc0b5a04b3f45a2a9dcdcc5d52cdeff', 'holder': '41b791e12ebf404aa49219601668965f', 'balance': '0.00', 'currency': 'BRL', 'routing_number': '001', 'number': '8088290693', 'status': 'active', 'metadata': {}, 'created_at': '2021-03-22T20:45:20.808339', 'updated_at': '2021-03-22T20:45:20.808339', 'primary': True, 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'uri': '/v2/marketplaces/f71a8951368a4cc085cf7875ff44e61c/accounts/fdc0b5a04b3f45a2a9dcdcc5d52cdeff', 'resource': 'payment_account'}], 'has_more': False, 'limit': 100, 'total_pages': 1, 'page': 1, 'offset': 0, 'total': '1', 'query_count': '1'}</msg>
<status status="PASS" starttime="20210322 17:45:20.259" endtime="20210322 17:45:20.260"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:45:20.261" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 17:45:20.261" endtime="20210322 17:45:20.261"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["id"]}</arg>
</arguments>
<assign>
<var>${account_external_key}</var>
</assign>
<msg timestamp="20210322 17:45:20.263" level="INFO">${account_external_key} = fdc0b5a04b3f45a2a9dcdcc5d52cdeff</msg>
<status status="PASS" starttime="20210322 17:45:20.263" endtime="20210322 17:45:20.263"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_external_key}</arg>
</arguments>
<msg timestamp="20210322 17:45:20.264" level="INFO">${account_external_key} = fdc0b5a04b3f45a2a9dcdcc5d52cdeff</msg>
<status status="PASS" starttime="20210322 17:45:20.263" endtime="20210322 17:45:20.264"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["number"]}</arg>
</arguments>
<assign>
<var>${account_number}</var>
</assign>
<msg timestamp="20210322 17:45:20.266" level="INFO">${account_number} = 8088290693</msg>
<status status="PASS" starttime="20210322 17:45:20.264" endtime="20210322 17:45:20.266"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_number}</arg>
</arguments>
<msg timestamp="20210322 17:45:20.267" level="INFO">${account_number} = 8088290693</msg>
<status status="PASS" starttime="20210322 17:45:20.266" endtime="20210322 17:45:20.267"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["routing_number"]}</arg>
</arguments>
<assign>
<var>${account_routing_number}</var>
</assign>
<msg timestamp="20210322 17:45:20.269" level="INFO">${account_routing_number} = 001</msg>
<status status="PASS" starttime="20210322 17:45:20.267" endtime="20210322 17:45:20.269"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_routing_number}</arg>
</arguments>
<msg timestamp="20210322 17:45:20.270" level="INFO">${account_routing_number} = 001</msg>
<status status="PASS" starttime="20210322 17:45:20.269" endtime="20210322 17:45:20.270"></status>
</kw>
<status status="PASS" starttime="20210322 17:45:19.635" endtime="20210322 17:45:20.270"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 17:45:20.271" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:45:20.271" endtime="20210322 17:45:20.271"></status>
</kw>
<status status="PASS" starttime="20210322 17:45:15.914" endtime="20210322 17:45:20.271"></status>
</kw>
<kw name="criar chave pix" library="pix_dict_create_entry">
<arguments>
<arg>type=national_registration</arg>
<arg>value=${EMPTY}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 17:45:20.274" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 17:45:20.273" endtime="20210322 17:45:20.274"></status>
</kw>
<status status="PASS" starttime="20210322 17:45:20.273" endtime="20210322 17:45:20.274"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${type}</arg>
</arguments>
<msg timestamp="20210322 17:45:20.275" level="INFO">${type} = national_registration</msg>
<status status="PASS" starttime="20210322 17:45:20.274" endtime="20210322 17:45:20.275"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210322 17:45:20.276" level="INFO">${value} = </msg>
<status status="PASS" starttime="20210322 17:45:20.275" endtime="20210322 17:45:20.276"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:45:20.276" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 17:45:20.276" endtime="20210322 17:45:20.276"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "${type}",</arg>
<arg>"value": "${value}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 17:45:20.277" level="INFO">${body} = { "type": "national_registration", "value": "" }</msg>
<status status="PASS" starttime="20210322 17:45:20.276" endtime="20210322 17:45:20.277"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:45:20.278" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/41b791e12ebf404aa49219601668965f/accounts/fdc0b5a04b3f45a2a9dcdcc5d52cdeff/entries, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "national_registration", "value": "" } 
json=None</msg>
<msg timestamp="20210322 17:45:21.920" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:45:20.277" endtime="20210322 17:45:21.921"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:45:21.924" level="INFO">{'id': 'babf179152cc48aaa5e361a7c7ce7fce', 'status': 'active', 'created_at': '2021-03-22T05:45:22.141', 'updated_at': '2021-03-22T05:45:22.141', 'key': {'value': '61038257000127', 'type': 'national_registration'}, 'account': {'id': 'fdc0b5a04b3f45a2a9dcdcc5d52cdeff', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': '41b791e12ebf404aa49219601668965f', 'owner': {'name': 'Nome Legal da Empresa', 'national_registration': '61038257000127', 'type': 'business'}, 'routing_number': '001', 'number': '8088290693', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}, 'resource': 'pix.entry'}</msg>
<status status="PASS" starttime="20210322 17:45:21.922" endtime="20210322 17:45:21.924"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:45:21.926" level="INFO">b2208bcd8d43ac09</msg>
<status status="PASS" starttime="20210322 17:45:21.925" endtime="20210322 17:45:21.927"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 17:45:21.928" level="INFO">201</msg>
<status status="PASS" starttime="20210322 17:45:21.927" endtime="20210322 17:45:21.929"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:45:21.931" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:45:21.930" endtime="20210322 17:45:21.931"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${entry_external_key}</var>
</assign>
<msg timestamp="20210322 17:45:21.933" level="INFO">${entry_external_key} = babf179152cc48aaa5e361a7c7ce7fce</msg>
<status status="PASS" starttime="20210322 17:45:21.932" endtime="20210322 17:45:21.933"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${entry_external_key}</arg>
</arguments>
<msg timestamp="20210322 17:45:21.934" level="INFO">${entry_external_key} = babf179152cc48aaa5e361a7c7ce7fce</msg>
<status status="PASS" starttime="20210322 17:45:21.934" endtime="20210322 17:45:21.934"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["key"]["value"]}</arg>
</arguments>
<assign>
<var>${entry_key_value}</var>
</assign>
<msg timestamp="20210322 17:45:21.936" level="INFO">${entry_key_value} = 61038257000127</msg>
<status status="PASS" starttime="20210322 17:45:21.935" endtime="20210322 17:45:21.937"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${entry_key_value}</arg>
</arguments>
<msg timestamp="20210322 17:45:21.938" level="INFO">${entry_key_value} = 61038257000127</msg>
<status status="PASS" starttime="20210322 17:45:21.937" endtime="20210322 17:45:21.938"></status>
</kw>
<status status="PASS" starttime="20210322 17:45:20.272" endtime="20210322 17:45:21.938"></status>
</kw>
<kw name="validar chave pix" library="asserts">
<arguments>
<arg>key_status=active</arg>
<arg>key_type=${type}</arg>
<arg>key_value=${national_registration}</arg>
<arg>account_external_key=${account_external_key}</arg>
<arg>marketplace_external_key=${marketplace_external_key}</arg>
<arg>holder_external_key=${holder_external_key}</arg>
<arg>account_number=${account_number}</arg>
<arg>account_routing_number=${account_routing_number}</arg>
<arg>account_type=CACC</arg>
<arg>owner_key_name=${legal_name}</arg>
<arg>national_registration=${national_registration}</arg>
<arg>holder_type=${holder_type}</arg>
<arg>psp_code=19468242</arg>
<arg>psp_name=Zoop Tecnologia e Meios de Pagamento S.A.</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar status da chave</arg>
</arguments>
<msg timestamp="20210322 17:45:21.942" level="INFO">Validar status da chave</msg>
<status status="PASS" starttime="20210322 17:45:21.941" endtime="20210322 17:45:21.942"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["status"]}</arg>
<arg>${key_status}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:45:21.943" endtime="20210322 17:45:21.943"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando Tipo da chave PIX</arg>
</arguments>
<msg timestamp="20210322 17:45:21.944" level="INFO">Validando Tipo da chave PIX</msg>
<status status="PASS" starttime="20210322 17:45:21.944" endtime="20210322 17:45:21.944"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["key"]["type"]}</arg>
<arg>${key_type}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:45:21.944" endtime="20210322 17:45:21.945"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando Valor da chave PIX</arg>
</arguments>
<msg timestamp="20210322 17:45:21.946" level="INFO">Validando Valor da chave PIX</msg>
<status status="PASS" starttime="20210322 17:45:21.945" endtime="20210322 17:45:21.946"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${type}' == 'evp'</arg>
<arg>Should Not Be Empty</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' != 'evp'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${key_value}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${key_value}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:45:21.947" endtime="20210322 17:45:21.948"></status>
</kw>
<status status="PASS" starttime="20210322 17:45:21.946" endtime="20210322 17:45:21.948"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando dados da conta</arg>
</arguments>
<msg timestamp="20210322 17:45:21.948" level="INFO">Validando dados da conta</msg>
<status status="PASS" starttime="20210322 17:45:21.948" endtime="20210322 17:45:21.948"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["id"]}</arg>
<arg>${account_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:45:21.949" endtime="20210322 17:45:21.950"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["marketplace"]}</arg>
<arg>${marketplace_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:45:21.950" endtime="20210322 17:45:21.951"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["holder"]}</arg>
<arg>${holder_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:45:21.951" endtime="20210322 17:45:21.952"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["number"]}</arg>
<arg>${account_number}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:45:21.952" endtime="20210322 17:45:21.953"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["routing_number"]}</arg>
<arg>${account_routing_number}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:45:21.953" endtime="20210322 17:45:21.954"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["type"]}</arg>
<arg>${account_type}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:45:21.954" endtime="20210322 17:45:21.955"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar Proprietário da Account Owner</arg>
</arguments>
<msg timestamp="20210322 17:45:21.955" level="INFO">Validar Proprietário da Account Owner</msg>
<status status="PASS" starttime="20210322 17:45:21.955" endtime="20210322 17:45:21.956"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["account"]["owner"]["name"]}</arg>
<arg>${owner_key_name}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:45:21.956" endtime="20210322 17:45:21.957"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar national_registration da Account Owner</arg>
</arguments>
<msg timestamp="20210322 17:45:21.957" level="INFO">Validar national_registration da Account Owner</msg>
<status status="PASS" starttime="20210322 17:45:21.957" endtime="20210322 17:45:21.957"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["account"]["owner"]["national_registration"]}</arg>
<arg>${national_registration}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:45:21.958" endtime="20210322 17:45:21.958"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar Holder Type do Account Owner</arg>
</arguments>
<msg timestamp="20210322 17:45:21.959" level="INFO">Validar Holder Type do Account Owner</msg>
<status status="PASS" starttime="20210322 17:45:21.959" endtime="20210322 17:45:21.959"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["account"]["owner"]["type"]}</arg>
<arg>${holder_type}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:45:21.959" endtime="20210322 17:45:21.960"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar PSP</arg>
</arguments>
<msg timestamp="20210322 17:45:21.960" level="INFO">Validar PSP</msg>
<status status="PASS" starttime="20210322 17:45:21.960" endtime="20210322 17:45:21.961"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["psp"]["code"]}</arg>
<arg>${psp_code}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:45:21.961" endtime="20210322 17:45:21.962"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["psp"]["name"]}</arg>
<arg>${psp_name}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:45:21.962" endtime="20210322 17:45:21.962"></status>
</kw>
<status status="PASS" starttime="20210322 17:45:21.939" endtime="20210322 17:45:21.963"></status>
</kw>
<doc>Fluxo Básico</doc>
<tags>
<tag>regression_test</tag>
<tag>smoke_test</tag>
</tags>
<status status="PASS" starttime="20210322 17:45:15.913" endtime="20210322 17:45:21.963" critical="yes"></status>
</test>
<doc>Funcionalidade: Criar Chave de Endereçamento
Eu, como um Holder, portador de uma conta ativa em Banking
Desejo criar uma chave de endereçamento PIX associada à minha conta</doc>
<status status="PASS" starttime="20210322 17:44:58.214" endtime="20210322 17:45:21.965"></status>
</suite>
<suite id="s1-s1-s4" name="Excluir Chave de Endereçamento" source="C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\tests\pix-dict\diretorio\Excluir Chave de Endereçamento.robot">
<test id="s1-s1-s4-t1" name="Cenário: Excluir chave de endereçamento EVP">
<kw name="criar holder individual ativo" library="accreditation_create_holder_active">
<kw name="conectar accreditation" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accreditation</arg>
<arg>url=${accreditation_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 17:45:22.466" level="INFO">Creating Session using : alias=accreditation, url=https://banking-accreditation-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 17:45:22.466" endtime="20210322 17:45:22.467"></status>
</kw>
<status status="PASS" starttime="20210322 17:45:22.465" endtime="20210322 17:45:22.467"></status>
</kw>
<kw name="Cpf" library="FakerLibrary">
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 17:45:22.468" level="INFO">${national_registration} = 041.632.598-05</msg>
<status status="PASS" starttime="20210322 17:45:22.467" endtime="20210322 17:45:22.468"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${national_registration}</arg>
<arg>.</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 17:45:22.469" level="INFO">${national_registration} = 041632598-05</msg>
<status status="PASS" starttime="20210322 17:45:22.468" endtime="20210322 17:45:22.469"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${national_registration}</arg>
<arg>-</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 17:45:22.470" level="INFO">${national_registration} = 04163259805</msg>
<status status="PASS" starttime="20210322 17:45:22.469" endtime="20210322 17:45:22.470"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${national_registration}</arg>
</arguments>
<msg timestamp="20210322 17:45:22.470" level="INFO">${national_registration} = 04163259805</msg>
<status status="PASS" starttime="20210322 17:45:22.470" endtime="20210322 17:45:22.470"></status>
</kw>
<kw name="Rg" library="FakerLibrary">
<doc>Brazilian RG, return plain numbers.
Check:  https://www.ngmatematica.com/2014/02/como-determinar-o-digito-verificador-do.html</doc>
<assign>
<var>${identity_card}</var>
</assign>
<msg timestamp="20210322 17:45:22.471" level="INFO">${identity_card} = 417260830</msg>
<status status="PASS" starttime="20210322 17:45:22.470" endtime="20210322 17:45:22.471"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${identity_card}</arg>
</arguments>
<msg timestamp="20210322 17:45:22.471" level="INFO">${identity_card} = 417260830</msg>
<status status="PASS" starttime="20210322 17:45:22.471" endtime="20210322 17:45:22.472"></status>
</kw>
<kw name="criar holder individual" library="accreditation_post_holder_individual">
<arguments>
<arg>holder_type=individual</arg>
<arg>holder_name=${holder_name}</arg>
<arg>email=${email}</arg>
<arg>national_registration=${national_registration}</arg>
<arg>revenue=${revenue}</arg>
<arg>birthday=${birthday}</arg>
<arg>mothers_name=${mothers_name}</arg>
<arg>identity_card=${identity_card}</arg>
<arg>pep=false</arg>
<arg>cbo=${cbo}</arg>
</arguments>
<kw name="conectar accreditation" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accreditation</arg>
<arg>url=${accreditation_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 17:45:22.474" level="INFO">Creating Session using : alias=accreditation, url=https://banking-accreditation-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 17:45:22.474" endtime="20210322 17:45:22.475"></status>
</kw>
<status status="PASS" starttime="20210322 17:45:22.474" endtime="20210322 17:45:22.475"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_type}</arg>
</arguments>
<msg timestamp="20210322 17:45:22.476" level="INFO">${holder_type} = individual</msg>
<status status="PASS" starttime="20210322 17:45:22.475" endtime="20210322 17:45:22.476"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_name}</arg>
</arguments>
<msg timestamp="20210322 17:45:22.476" level="INFO">${holder_name} = Holder de teste</msg>
<status status="PASS" starttime="20210322 17:45:22.476" endtime="20210322 17:45:22.476"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:45:22.478" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 17:45:22.477" endtime="20210322 17:45:22.478"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "${holder_type}",</arg>
<arg>"name": "${holder_name}",</arg>
<arg>"email": "${email}",</arg>
<arg>"national_registration": "${national_registration}",</arg>
<arg>"revenue": ${revenue},</arg>
<arg>"birthday": "${birthday}",</arg>
<arg>"mothers_name": "${mothers_name}",</arg>
<arg>"identity_card": "${identity_card}",</arg>
<arg>"pep": false,</arg>
<arg>"cbo": ${cbo}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 17:45:22.478" level="INFO">${body} = { "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "04163259805", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder",...</msg>
<status status="PASS" starttime="20210322 17:45:22.478" endtime="20210322 17:45:22.478"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:45:22.479" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "04163259805", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder", "identity_card": "417260830", "pep": false, "cbo": 821450 } 
json=None</msg>
<msg timestamp="20210322 17:45:23.106" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:45:22.479" endtime="20210322 17:45:23.106"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:45:23.108" level="INFO">{'id': 'b9d88095018a453ea4acb89265fdbc4b', 'name': 'Holder de teste', 'revenue': 5500.0, 'email': 'teste@teste.com.br', 'status': 'waiting_info_and_documents', 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'marketplace_name': 'Marketplace de Teste', 'created_at': '2021-03-22T17:45:24.293627', 'updated_at': '2021-03-22T17:45:24.293628', 'type': 'individual', 'national_registration': '04163259805', 'birthday': '1988-04-23', 'mothers_name': 'Mãe do Holder', 'identity_card': '417260830', 'pep': False, 'cbo': '821450', '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/b9d88095018a453ea4acb89265fdbc4b', 'type': 'GET'}, 'phones': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/b9d88095018a453ea4acb89265fdbc4b/phones', 'type': 'GET'}, 'addresses': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/b9d88095018a453ea4acb89265fdbc4b/addresses', 'type': 'GET'}, 'documents': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/b9d88095018a453ea4acb89265fdbc4b/documents', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 17:45:23.107" endtime="20210322 17:45:23.108"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:45:23.110" level="INFO">37fdba503a20f21b</msg>
<status status="PASS" starttime="20210322 17:45:23.109" endtime="20210322 17:45:23.110"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${body}</arg>
</arguments>
<msg timestamp="20210322 17:45:23.111" level="INFO">{ "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "04163259805", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder", "identity_card": "417260830", "pep": false, "cbo": 821450 }</msg>
<status status="PASS" starttime="20210322 17:45:23.111" endtime="20210322 17:45:23.111"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:45:23.113" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:45:23.112" endtime="20210322 17:45:23.113"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${holder_external_key}</var>
</assign>
<msg timestamp="20210322 17:45:23.115" level="INFO">${holder_external_key} = b9d88095018a453ea4acb89265fdbc4b</msg>
<status status="PASS" starttime="20210322 17:45:23.113" endtime="20210322 17:45:23.115"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_external_key}</arg>
</arguments>
<msg timestamp="20210322 17:45:23.116" level="INFO">${holder_external_key} = b9d88095018a453ea4acb89265fdbc4b</msg>
<status status="PASS" starttime="20210322 17:45:23.115" endtime="20210322 17:45:23.116"></status>
</kw>
<status status="PASS" starttime="20210322 17:45:22.472" endtime="20210322 17:45:23.116"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_name}</arg>
</arguments>
<msg timestamp="20210322 17:45:23.117" level="INFO">${holder_name} = Holder de teste</msg>
<status status="PASS" starttime="20210322 17:45:23.117" endtime="20210322 17:45:23.117"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 17:45:23.119" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:45:23.118" endtime="20210322 17:45:23.119"></status>
</kw>
<kw name="criar holder phone" library="accreditation_post_holder_phone">
<arguments>
<arg>21</arg>
<arg>51</arg>
<arg>996221236</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:45:23.121" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 17:45:23.120" endtime="20210322 17:45:23.121"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"area_code": "${phone_area_code}",</arg>
<arg>"country_code": "${phone_country_code}",</arg>
<arg>"number": "${phone_number}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 17:45:23.122" level="INFO">${body} = { "area_code": "21", "country_code": "51", "number": "996221236" }</msg>
<status status="PASS" starttime="20210322 17:45:23.121" endtime="20210322 17:45:23.122"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/phones</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:45:23.123" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/b9d88095018a453ea4acb89265fdbc4b/phones, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "area_code": "21", "country_code": "51", "number": "996221236" } 
json=None</msg>
<msg timestamp="20210322 17:45:23.348" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:45:23.122" endtime="20210322 17:45:23.348"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:45:23.350" level="INFO">{'id': '2aefd906e2d9478489d4d58790c8db9a', 'area_code': '21', 'country_code': '51', 'number': '996221236', 'main': True, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/b9d88095018a453ea4acb89265fdbc4b/phones/2aefd906e2d9478489d4d58790c8db9a', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/b9d88095018a453ea4acb89265fdbc4b', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 17:45:23.349" endtime="20210322 17:45:23.351"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:45:23.352" level="INFO">cff126f8f4a350bf</msg>
<status status="PASS" starttime="20210322 17:45:23.351" endtime="20210322 17:45:23.352"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:45:23.354" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:45:23.353" endtime="20210322 17:45:23.354"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${phone_external_key}</var>
</assign>
<msg timestamp="20210322 17:45:23.356" level="INFO">${phone_external_key} = 2aefd906e2d9478489d4d58790c8db9a</msg>
<status status="PASS" starttime="20210322 17:45:23.355" endtime="20210322 17:45:23.356"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${phone_external_key}</arg>
</arguments>
<msg timestamp="20210322 17:45:23.358" level="INFO">${phone_external_key} = 2aefd906e2d9478489d4d58790c8db9a</msg>
<status status="PASS" starttime="20210322 17:45:23.357" endtime="20210322 17:45:23.358"></status>
</kw>
<status status="PASS" starttime="20210322 17:45:23.119" endtime="20210322 17:45:23.358"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 17:45:23.359" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:45:23.358" endtime="20210322 17:45:23.359"></status>
</kw>
<kw name="criar holder address" library="accreditation_post_holder_address">
<arguments>
<arg>Rio de Janeiro</arg>
<arg>Rio de Janeiro</arg>
<arg>Brasil</arg>
<arg>Bairro de Testes</arg>
<arg>Rua de Testes</arg>
<arg>90</arg>
<arg>apto 200</arg>
<arg>21550987</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:45:23.361" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 17:45:23.361" endtime="20210322 17:45:23.361"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"city": "${city}",</arg>
<arg>"state": "${state}",</arg>
<arg>"country": "${country}",</arg>
<arg>"neighborhood": "${neighborhood}",</arg>
<arg>"street": "${street}",</arg>
<arg>"number": "${number}",</arg>
<arg>"complement": "${complement}",</arg>
<arg>"postal_code": "${postal_code}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 17:45:23.363" level="INFO">${body} = { "city": "Rio de Janeiro", "state": "Rio de Janeiro", "country": "Brasil", "neighborhood": "Bairro de Testes", "street": "Rua de Testes", "number": "90", "complement": "apto 200", "postal_code": "215...</msg>
<status status="PASS" starttime="20210322 17:45:23.362" endtime="20210322 17:45:23.363"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/addresses</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:45:23.364" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/b9d88095018a453ea4acb89265fdbc4b/addresses, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "city": "Rio de Janeiro", "state": "Rio de Janeiro", "country": "Brasil", "neighborhood": "Bairro de Testes", "street": "Rua de Testes", "number": "90", "complement": "apto 200", "postal_code": "21550987" } 
json=None</msg>
<msg timestamp="20210322 17:45:23.581" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:45:23.363" endtime="20210322 17:45:23.582"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:45:23.585" level="INFO">{'id': 'fdfedd71002f4c48860093e2e9e7c2c4', 'street': 'Rua de Testes', 'number': '90', 'city': 'Rio de Janeiro', 'complement': 'apto 200', 'state': 'Rio de Janeiro', 'neighborhood': 'Bairro de Testes', 'postal_code': '21550987', 'country': 'Brasil', 'main': True, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/b9d88095018a453ea4acb89265fdbc4b/addresses/fdfedd71002f4c48860093e2e9e7c2c4', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/b9d88095018a453ea4acb89265fdbc4b', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 17:45:23.583" endtime="20210322 17:45:23.586"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:45:23.588" level="INFO">91d2daeaf54e67e7</msg>
<status status="PASS" starttime="20210322 17:45:23.587" endtime="20210322 17:45:23.589"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:45:23.591" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:45:23.590" endtime="20210322 17:45:23.591"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${address_external_key}</var>
</assign>
<msg timestamp="20210322 17:45:23.595" level="INFO">${address_external_key} = fdfedd71002f4c48860093e2e9e7c2c4</msg>
<status status="PASS" starttime="20210322 17:45:23.592" endtime="20210322 17:45:23.595"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${address_external_key}</arg>
</arguments>
<msg timestamp="20210322 17:45:23.597" level="INFO">${address_external_key} = fdfedd71002f4c48860093e2e9e7c2c4</msg>
<status status="PASS" starttime="20210322 17:45:23.596" endtime="20210322 17:45:23.597"></status>
</kw>
<status status="PASS" starttime="20210322 17:45:23.360" endtime="20210322 17:45:23.598"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 17:45:23.599" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:45:23.598" endtime="20210322 17:45:23.600"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>SELFIE</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:45:23.602" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 17:45:23.601" endtime="20210322 17:45:23.602"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 17:45:23.603" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 17:45:23.606" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 17:45:23.603" endtime="20210322 17:45:23.606"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:45:23.607" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/b9d88095018a453ea4acb89265fdbc4b/documents?type=SELFIE, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 17:45:23.876" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:45:23.606" endtime="20210322 17:45:23.876"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:45:23.879" level="INFO">{'id': 'ec8a00bd582c4a37a60d1ccc03d3c47b', 'document_type': 'selfie', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/b9d88095018a453ea4acb89265fdbc4b/documents/ec8a00bd582c4a37a60d1ccc03d3c47b', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/b9d88095018a453ea4acb89265fdbc4b', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/b9d88095018a453ea4acb89265fdbc4b/documents/ec8a00bd582c4a37a60d1ccc03d3c47b/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 17:45:23.877" endtime="20210322 17:45:23.879"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:45:23.881" level="INFO">7fc6d49c0008c622</msg>
<status status="PASS" starttime="20210322 17:45:23.880" endtime="20210322 17:45:23.881"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:45:23.884" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:45:23.882" endtime="20210322 17:45:23.884"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 17:45:23.886" level="INFO">${document_external_key} = ec8a00bd582c4a37a60d1ccc03d3c47b</msg>
<status status="PASS" starttime="20210322 17:45:23.885" endtime="20210322 17:45:23.886"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 17:45:23.887" level="INFO">${document_external_key} = ec8a00bd582c4a37a60d1ccc03d3c47b</msg>
<status status="PASS" starttime="20210322 17:45:23.887" endtime="20210322 17:45:23.888"></status>
</kw>
<status status="PASS" starttime="20210322 17:45:23.600" endtime="20210322 17:45:23.888"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 17:45:23.889" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:45:23.888" endtime="20210322 17:45:23.890"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>RG_FRENTE</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:45:23.892" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 17:45:23.891" endtime="20210322 17:45:23.892"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 17:45:23.893" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 17:45:23.895" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 17:45:23.892" endtime="20210322 17:45:23.895"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:45:23.897" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/b9d88095018a453ea4acb89265fdbc4b/documents?type=RG_FRENTE, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 17:45:24.161" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:45:23.896" endtime="20210322 17:45:24.162"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:45:24.164" level="INFO">{'id': 'efc2800cd1684505b15547ec36777fc7', 'document_type': 'rg_frente', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/b9d88095018a453ea4acb89265fdbc4b/documents/efc2800cd1684505b15547ec36777fc7', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/b9d88095018a453ea4acb89265fdbc4b', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/b9d88095018a453ea4acb89265fdbc4b/documents/efc2800cd1684505b15547ec36777fc7/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 17:45:24.163" endtime="20210322 17:45:24.165"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:45:24.166" level="INFO">0d56f51af1734e64</msg>
<status status="PASS" starttime="20210322 17:45:24.165" endtime="20210322 17:45:24.166"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:45:24.168" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:45:24.167" endtime="20210322 17:45:24.168"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 17:45:24.170" level="INFO">${document_external_key} = efc2800cd1684505b15547ec36777fc7</msg>
<status status="PASS" starttime="20210322 17:45:24.169" endtime="20210322 17:45:24.170"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 17:45:24.172" level="INFO">${document_external_key} = efc2800cd1684505b15547ec36777fc7</msg>
<status status="PASS" starttime="20210322 17:45:24.171" endtime="20210322 17:45:24.172"></status>
</kw>
<status status="PASS" starttime="20210322 17:45:23.890" endtime="20210322 17:45:24.172"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 17:45:24.173" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:45:24.173" endtime="20210322 17:45:24.174"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>RG_VERSO</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:45:24.175" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 17:45:24.175" endtime="20210322 17:45:24.175"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 17:45:24.177" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 17:45:24.178" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 17:45:24.176" endtime="20210322 17:45:24.179"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:45:24.180" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/b9d88095018a453ea4acb89265fdbc4b/documents?type=RG_VERSO, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 17:45:24.500" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:45:24.179" endtime="20210322 17:45:24.500"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:45:24.500" level="INFO">{'id': '50432ec93af64d38817adc46dd781b54', 'document_type': 'rg_verso', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/b9d88095018a453ea4acb89265fdbc4b/documents/50432ec93af64d38817adc46dd781b54', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/b9d88095018a453ea4acb89265fdbc4b', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/b9d88095018a453ea4acb89265fdbc4b/documents/50432ec93af64d38817adc46dd781b54/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 17:45:24.500" endtime="20210322 17:45:24.500"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:45:24.501" level="INFO">6c92378b01785339</msg>
<status status="PASS" starttime="20210322 17:45:24.500" endtime="20210322 17:45:24.501"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:45:24.502" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:45:24.501" endtime="20210322 17:45:24.502"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 17:45:24.503" level="INFO">${document_external_key} = 50432ec93af64d38817adc46dd781b54</msg>
<status status="PASS" starttime="20210322 17:45:24.503" endtime="20210322 17:45:24.503"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 17:45:24.504" level="INFO">${document_external_key} = 50432ec93af64d38817adc46dd781b54</msg>
<status status="PASS" starttime="20210322 17:45:24.504" endtime="20210322 17:45:24.504"></status>
</kw>
<status status="PASS" starttime="20210322 17:45:24.174" endtime="20210322 17:45:24.504"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 17:45:24.505" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:45:24.504" endtime="20210322 17:45:24.505"></status>
</kw>
<kw name="solicitar aprovação do holder" library="accreditation_request_approval">
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:45:24.506" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 17:45:24.505" endtime="20210322 17:45:24.506"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/approval</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:45:24.506" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/b9d88095018a453ea4acb89265fdbc4b/approval, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data=None 
json=None</msg>
<msg timestamp="20210322 17:45:24.784" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 17:45:24.506" endtime="20210322 17:45:24.785"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:45:24.786" level="INFO">{'message': 'Approval request accepted successfully. Processing analysis'}</msg>
<status status="PASS" starttime="20210322 17:45:24.785" endtime="20210322 17:45:24.788"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:45:24.789" level="INFO">f04c6537a42cb473</msg>
<status status="PASS" starttime="20210322 17:45:24.788" endtime="20210322 17:45:24.790"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:45:24.793" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 17:45:24.791" endtime="20210322 17:45:24.793"></status>
</kw>
<status status="PASS" starttime="20210322 17:45:24.505" endtime="20210322 17:45:24.794"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 17:45:24.796" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:45:24.794" endtime="20210322 17:45:24.796"></status>
</kw>
<kw name="recebendo notificação de aprovação" library="accreditation_risk_notification">
<kw name="Uuid 4" library="FakerLibrary">
<doc>Generates a random UUID4 string.
:param cast_to: Specify what type the UUID should be cast to. Default is `str`
:type cast_to: callable</doc>
<assign>
<var>${assessment_id}</var>
</assign>
<msg timestamp="20210322 17:45:24.799" level="INFO">${assessment_id} = 056c2ac2-e3c0-4991-8022-757ed4dbbecf</msg>
<status status="PASS" starttime="20210322 17:45:24.799" endtime="20210322 17:45:24.800"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>year</arg>
</arguments>
<assign>
<var>${year}</var>
</assign>
<msg timestamp="20210322 17:45:24.801" level="INFO">${year} = 2021</msg>
<status status="PASS" starttime="20210322 17:45:24.800" endtime="20210322 17:45:24.801"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>month</arg>
</arguments>
<assign>
<var>${month}</var>
</assign>
<msg timestamp="20210322 17:45:24.802" level="INFO">${month} = 03</msg>
<status status="PASS" starttime="20210322 17:45:24.802" endtime="20210322 17:45:24.802"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>day</arg>
</arguments>
<assign>
<var>${day}</var>
</assign>
<msg timestamp="20210322 17:45:24.804" level="INFO">${day} = 22</msg>
<status status="PASS" starttime="20210322 17:45:24.803" endtime="20210322 17:45:24.804"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:45:24.805" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 17:45:24.804" endtime="20210322 17:45:24.805"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "risk.assessment.result",</arg>
<arg>"resource": "business.holder",</arg>
<arg>"created_at": "${year}-${month}-${day} 15:28:56.747Z",</arg>
<arg>"marketplace_id": "${marketplace_external_key}",</arg>
<arg>"object": {</arg>
<arg>"result": "APPROVED",</arg>
<arg>"holder_id": "${holder_external_key}",</arg>
<arg>"applicant_id": "${application_external_key}",</arg>
<arg>"assessment_id": "${assessment_id}"</arg>
<arg>}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 17:45:24.807" level="INFO">${body} = { "type": "risk.assessment.result", "resource": "business.holder", "created_at": "2021-03-22 15:28:56.747Z", "marketplace_id": "f71a8951368a4cc085cf7875ff44e61c", "object": { "result": "APPROVED", "ho...</msg>
<status status="PASS" starttime="20210322 17:45:24.806" endtime="20210322 17:45:24.807"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/admin/internal_operation/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/registration/approval</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:45:24.809" level="INFO">POST Request using : uri=/admin/internal_operation/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/b9d88095018a453ea4acb89265fdbc4b/registration/approval, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "risk.assessment.result", "resource": "business.holder", "created_at": "2021-03-22 15:28:56.747Z", "marketplace_id": "f71a8951368a4cc085cf7875ff44e61c", "object": { "result": "APPROVED", "holder_id": "b9d88095018a453ea4acb89265fdbc4b", "applicant_id": "bcc25a6751c14b52af1340d40dba78c5", "assessment_id": "056c2ac2-e3c0-4991-8022-757ed4dbbecf" } } 
json=None</msg>
<msg timestamp="20210322 17:45:25.009" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 17:45:24.808" endtime="20210322 17:45:25.009"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:45:25.010" level="INFO">{'message': 'Holder approved successfully'}</msg>
<status status="PASS" starttime="20210322 17:45:25.009" endtime="20210322 17:45:25.010"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:45:25.010" level="INFO">72e8aca62d258bb1</msg>
<status status="PASS" starttime="20210322 17:45:25.010" endtime="20210322 17:45:25.010"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:45:25.013" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 17:45:25.011" endtime="20210322 17:45:25.013"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 17:45:25.013" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:45:25.013" endtime="20210322 17:45:25.013"></status>
</kw>
<status status="PASS" starttime="20210322 17:45:24.797" endtime="20210322 17:45:25.013"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 17:45:25.015" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:45:25.015" endtime="20210322 17:45:25.016"></status>
</kw>
<kw name="buscar account por holder" library="accounts_get_accounts_by_holder">
<kw name="conectar accounts" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accounts</arg>
<arg>url=${account_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 17:45:25.018" level="INFO">Creating Session using : alias=accounts, url=https://banking-accounts-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 17:45:25.016" endtime="20210322 17:45:25.018"></status>
</kw>
<status status="PASS" starttime="20210322 17:45:25.016" endtime="20210322 17:45:25.018"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accounts</arg>
<arg>/marketplaces/${marketplace_external_key}/holders/${holder_external_key}/accounts</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:45:25.018" level="INFO">GET Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/holders/b9d88095018a453ea4acb89265fdbc4b/accounts, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 17:45:25.690" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 17:45:25.018" endtime="20210322 17:45:25.690"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:45:25.693" level="INFO">{'items': [{'id': '16e0b16bcf8f43e6acf13631112b34ea', 'holder': 'b9d88095018a453ea4acb89265fdbc4b', 'balance': '0.00', 'currency': 'BRL', 'routing_number': '001', 'number': '5889776270', 'status': 'active', 'metadata': {}, 'created_at': '2021-03-22T20:45:26.193541', 'updated_at': '2021-03-22T20:45:26.193541', 'primary': True, 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'uri': '/v2/marketplaces/f71a8951368a4cc085cf7875ff44e61c/accounts/16e0b16bcf8f43e6acf13631112b34ea', 'resource': 'payment_account'}], 'has_more': False, 'limit': 100, 'total_pages': 1, 'page': 1, 'offset': 0, 'total': '1', 'query_count': '1'}</msg>
<status status="PASS" starttime="20210322 17:45:25.691" endtime="20210322 17:45:25.693"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:45:25.696" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 17:45:25.694" endtime="20210322 17:45:25.696"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["id"]}</arg>
</arguments>
<assign>
<var>${account_external_key}</var>
</assign>
<msg timestamp="20210322 17:45:25.699" level="INFO">${account_external_key} = 16e0b16bcf8f43e6acf13631112b34ea</msg>
<status status="PASS" starttime="20210322 17:45:25.697" endtime="20210322 17:45:25.699"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_external_key}</arg>
</arguments>
<msg timestamp="20210322 17:45:25.701" level="INFO">${account_external_key} = 16e0b16bcf8f43e6acf13631112b34ea</msg>
<status status="PASS" starttime="20210322 17:45:25.700" endtime="20210322 17:45:25.701"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["number"]}</arg>
</arguments>
<assign>
<var>${account_number}</var>
</assign>
<msg timestamp="20210322 17:45:25.703" level="INFO">${account_number} = 5889776270</msg>
<status status="PASS" starttime="20210322 17:45:25.702" endtime="20210322 17:45:25.703"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_number}</arg>
</arguments>
<msg timestamp="20210322 17:45:25.705" level="INFO">${account_number} = 5889776270</msg>
<status status="PASS" starttime="20210322 17:45:25.704" endtime="20210322 17:45:25.705"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["routing_number"]}</arg>
</arguments>
<assign>
<var>${account_routing_number}</var>
</assign>
<msg timestamp="20210322 17:45:25.706" level="INFO">${account_routing_number} = 001</msg>
<status status="PASS" starttime="20210322 17:45:25.705" endtime="20210322 17:45:25.707"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_routing_number}</arg>
</arguments>
<msg timestamp="20210322 17:45:25.708" level="INFO">${account_routing_number} = 001</msg>
<status status="PASS" starttime="20210322 17:45:25.707" endtime="20210322 17:45:25.708"></status>
</kw>
<status status="PASS" starttime="20210322 17:45:25.016" endtime="20210322 17:45:25.708"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 17:45:25.710" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:45:25.709" endtime="20210322 17:45:25.710"></status>
</kw>
<status status="PASS" starttime="20210322 17:45:22.465" endtime="20210322 17:45:25.710"></status>
</kw>
<kw name="criar chave pix" library="pix_dict_create_entry">
<arguments>
<arg>type=evp</arg>
<arg>value=${EMPTY}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 17:45:25.713" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 17:45:25.712" endtime="20210322 17:45:25.713"></status>
</kw>
<status status="PASS" starttime="20210322 17:45:25.711" endtime="20210322 17:45:25.713"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${type}</arg>
</arguments>
<msg timestamp="20210322 17:45:25.714" level="INFO">${type} = evp</msg>
<status status="PASS" starttime="20210322 17:45:25.714" endtime="20210322 17:45:25.714"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210322 17:45:25.715" level="INFO">${value} = </msg>
<status status="PASS" starttime="20210322 17:45:25.715" endtime="20210322 17:45:25.715"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:45:25.716" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 17:45:25.716" endtime="20210322 17:45:25.716"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "${type}",</arg>
<arg>"value": "${value}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 17:45:25.717" level="INFO">${body} = { "type": "evp", "value": "" }</msg>
<status status="PASS" starttime="20210322 17:45:25.717" endtime="20210322 17:45:25.717"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:45:25.719" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/b9d88095018a453ea4acb89265fdbc4b/accounts/16e0b16bcf8f43e6acf13631112b34ea/entries, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "evp", "value": "" } 
json=None</msg>
<msg timestamp="20210322 17:45:27.330" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:45:25.718" endtime="20210322 17:45:27.330"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:45:27.332" level="INFO">{'id': '49e779e81fa44e9b95fdab6852347c27', 'status': 'active', 'created_at': '2021-03-22T05:45:27.620', 'updated_at': '2021-03-22T05:45:28.545', 'key': {'value': '9121da9f-f820-4ac5-9ee8-9c926490a69b', 'type': 'evp'}, 'account': {'id': '16e0b16bcf8f43e6acf13631112b34ea', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': 'b9d88095018a453ea4acb89265fdbc4b', 'owner': {'name': 'Holder de teste', 'national_registration': '04163259805', 'type': 'individual'}, 'routing_number': '001', 'number': '5889776270', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}, 'resource': 'pix.entry'}</msg>
<status status="PASS" starttime="20210322 17:45:27.330" endtime="20210322 17:45:27.332"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:45:27.332" level="INFO">bb7bd44026783a29</msg>
<status status="PASS" starttime="20210322 17:45:27.332" endtime="20210322 17:45:27.332"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 17:45:27.332" level="INFO">201</msg>
<status status="PASS" starttime="20210322 17:45:27.332" endtime="20210322 17:45:27.332"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:45:27.332" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:45:27.332" endtime="20210322 17:45:27.333"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${entry_external_key}</var>
</assign>
<msg timestamp="20210322 17:45:27.333" level="INFO">${entry_external_key} = 49e779e81fa44e9b95fdab6852347c27</msg>
<status status="PASS" starttime="20210322 17:45:27.333" endtime="20210322 17:45:27.333"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${entry_external_key}</arg>
</arguments>
<msg timestamp="20210322 17:45:27.334" level="INFO">${entry_external_key} = 49e779e81fa44e9b95fdab6852347c27</msg>
<status status="PASS" starttime="20210322 17:45:27.334" endtime="20210322 17:45:27.334"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["key"]["value"]}</arg>
</arguments>
<assign>
<var>${entry_key_value}</var>
</assign>
<msg timestamp="20210322 17:45:27.335" level="INFO">${entry_key_value} = 9121da9f-f820-4ac5-9ee8-9c926490a69b</msg>
<status status="PASS" starttime="20210322 17:45:27.334" endtime="20210322 17:45:27.335"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${entry_key_value}</arg>
</arguments>
<msg timestamp="20210322 17:45:27.335" level="INFO">${entry_key_value} = 9121da9f-f820-4ac5-9ee8-9c926490a69b</msg>
<status status="PASS" starttime="20210322 17:45:27.335" endtime="20210322 17:45:27.335"></status>
</kw>
<status status="PASS" starttime="20210322 17:45:25.711" endtime="20210322 17:45:27.335"></status>
</kw>
<kw name="validar chave pix" library="asserts">
<arguments>
<arg>key_status=active</arg>
<arg>key_type=${type}</arg>
<arg>key_value=${EMPTY}</arg>
<arg>account_external_key=${account_external_key}</arg>
<arg>marketplace_external_key=${marketplace_external_key}</arg>
<arg>holder_external_key=${holder_external_key}</arg>
<arg>account_number=${account_number}</arg>
<arg>account_routing_number=${account_routing_number}</arg>
<arg>account_type=CACC</arg>
<arg>owner_key_name=${holder_name}</arg>
<arg>national_registration=${national_registration}</arg>
<arg>holder_type=${holder_type}</arg>
<arg>psp_code=19468242</arg>
<arg>psp_name=Zoop Tecnologia e Meios de Pagamento S.A.</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar status da chave</arg>
</arguments>
<msg timestamp="20210322 17:45:27.337" level="INFO">Validar status da chave</msg>
<status status="PASS" starttime="20210322 17:45:27.337" endtime="20210322 17:45:27.337"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["status"]}</arg>
<arg>${key_status}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:45:27.337" endtime="20210322 17:45:27.337"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando Tipo da chave PIX</arg>
</arguments>
<msg timestamp="20210322 17:45:27.338" level="INFO">Validando Tipo da chave PIX</msg>
<status status="PASS" starttime="20210322 17:45:27.337" endtime="20210322 17:45:27.338"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["key"]["type"]}</arg>
<arg>${key_type}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:45:27.338" endtime="20210322 17:45:27.338"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando Valor da chave PIX</arg>
</arguments>
<msg timestamp="20210322 17:45:27.339" level="INFO">Validando Valor da chave PIX</msg>
<status status="PASS" starttime="20210322 17:45:27.338" endtime="20210322 17:45:27.339"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${type}' == 'evp'</arg>
<arg>Should Not Be Empty</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' != 'evp'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${key_value}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${response.json()["key"]["value"]}</arg>
</arguments>
<msg timestamp="20210322 17:45:27.340" level="INFO">Length is 36</msg>
<status status="PASS" starttime="20210322 17:45:27.340" endtime="20210322 17:45:27.340"></status>
</kw>
<status status="PASS" starttime="20210322 17:45:27.339" endtime="20210322 17:45:27.340"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando dados da conta</arg>
</arguments>
<msg timestamp="20210322 17:45:27.340" level="INFO">Validando dados da conta</msg>
<status status="PASS" starttime="20210322 17:45:27.340" endtime="20210322 17:45:27.340"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["id"]}</arg>
<arg>${account_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:45:27.340" endtime="20210322 17:45:27.341"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["marketplace"]}</arg>
<arg>${marketplace_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:45:27.341" endtime="20210322 17:45:27.341"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["holder"]}</arg>
<arg>${holder_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:45:27.341" endtime="20210322 17:45:27.342"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["number"]}</arg>
<arg>${account_number}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:45:27.342" endtime="20210322 17:45:27.342"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["routing_number"]}</arg>
<arg>${account_routing_number}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:45:27.342" endtime="20210322 17:45:27.342"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["type"]}</arg>
<arg>${account_type}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:45:27.343" endtime="20210322 17:45:27.343"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar Proprietário da Account Owner</arg>
</arguments>
<msg timestamp="20210322 17:45:27.343" level="INFO">Validar Proprietário da Account Owner</msg>
<status status="PASS" starttime="20210322 17:45:27.343" endtime="20210322 17:45:27.343"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["account"]["owner"]["name"]}</arg>
<arg>${owner_key_name}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:45:27.343" endtime="20210322 17:45:27.344"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar national_registration da Account Owner</arg>
</arguments>
<msg timestamp="20210322 17:45:27.344" level="INFO">Validar national_registration da Account Owner</msg>
<status status="PASS" starttime="20210322 17:45:27.344" endtime="20210322 17:45:27.344"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["account"]["owner"]["national_registration"]}</arg>
<arg>${national_registration}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:45:27.345" endtime="20210322 17:45:27.345"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar Holder Type do Account Owner</arg>
</arguments>
<msg timestamp="20210322 17:45:27.345" level="INFO">Validar Holder Type do Account Owner</msg>
<status status="PASS" starttime="20210322 17:45:27.345" endtime="20210322 17:45:27.345"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["account"]["owner"]["type"]}</arg>
<arg>${holder_type}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:45:27.345" endtime="20210322 17:45:27.345"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar PSP</arg>
</arguments>
<msg timestamp="20210322 17:45:27.346" level="INFO">Validar PSP</msg>
<status status="PASS" starttime="20210322 17:45:27.345" endtime="20210322 17:45:27.346"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["psp"]["code"]}</arg>
<arg>${psp_code}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:45:27.346" endtime="20210322 17:45:27.346"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["psp"]["name"]}</arg>
<arg>${psp_name}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:45:27.346" endtime="20210322 17:45:27.347"></status>
</kw>
<status status="PASS" starttime="20210322 17:45:27.336" endtime="20210322 17:45:27.347"></status>
</kw>
<kw name="excluir chave pix" library="pix_dict_delete_entry">
<arguments>
<arg>holder_external_key=${holder_external_key}</arg>
<arg>account_external_key=${account_external_key}</arg>
<arg>entry_external_key=${entry_external_key}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 17:45:27.348" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 17:45:27.348" endtime="20210322 17:45:27.348"></status>
</kw>
<status status="PASS" starttime="20210322 17:45:27.347" endtime="20210322 17:45:27.348"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:45:27.349" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 17:45:27.348" endtime="20210322 17:45:27.349"></status>
</kw>
<kw name="Delete Request" library="RequestsLibrary">
<doc>Send a DELETE request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries/${entry_external_key}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:45:27.349" level="INFO">DELETE Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/b9d88095018a453ea4acb89265fdbc4b/accounts/16e0b16bcf8f43e6acf13631112b34ea/entries/49e779e81fa44e9b95fdab6852347c27, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data=None 
json=None</msg>
<msg timestamp="20210322 17:45:28.766" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 17:45:27.349" endtime="20210322 17:45:28.766"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:45:28.769" level="INFO">{'message': 'Entry removed successfully'}</msg>
<status status="PASS" starttime="20210322 17:45:28.767" endtime="20210322 17:45:28.769"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:45:28.772" level="INFO">01a23ee532c0cab7</msg>
<status status="PASS" starttime="20210322 17:45:28.770" endtime="20210322 17:45:28.772"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 17:45:28.774" level="INFO">200</msg>
<status status="PASS" starttime="20210322 17:45:28.773" endtime="20210322 17:45:28.775"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:45:28.776" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 17:45:28.776" endtime="20210322 17:45:28.777"></status>
</kw>
<status status="PASS" starttime="20210322 17:45:27.347" endtime="20210322 17:45:28.777"></status>
</kw>
<kw name="validar exclusão da chave pix" library="asserts">
<arguments>
<arg>message=Entry removed successfully</arg>
</arguments>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 17:45:28.779" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:45:28.779" endtime="20210322 17:45:28.780"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["message"]}</arg>
<arg>${message}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:45:28.780" endtime="20210322 17:45:28.782"></status>
</kw>
<status status="PASS" starttime="20210322 17:45:28.777" endtime="20210322 17:45:28.782"></status>
</kw>
<doc>Fluxo Básico</doc>
<tags>
<tag>regression_test</tag>
<tag>smoke_test</tag>
</tags>
<status status="PASS" starttime="20210322 17:45:22.464" endtime="20210322 17:45:28.782" critical="yes"></status>
</test>
<test id="s1-s1-s4-t2" name="Cenário: Excluir Chave de Endereçamento do tipo Telefone">
<kw name="Random Number" library="FakerLibrary">
<doc>Returns a random number with 1 digit (default, when digits==None),
a random number with 0 to given number of digits, or a random number
with given number to given number of digits (when ``fix_len==True``).</doc>
<arguments>
<arg>digits=8</arg>
<arg>fix_len=True</arg>
</arguments>
<assign>
<var>${phone}</var>
</assign>
<msg timestamp="20210322 17:45:28.785" level="INFO">${phone} = 19584440</msg>
<status status="PASS" starttime="20210322 17:45:28.784" endtime="20210322 17:45:28.785"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>+55219${phone}</arg>
</arguments>
<assign>
<var>${phone_pix}</var>
</assign>
<msg timestamp="20210322 17:45:28.786" level="INFO">${phone_pix} = +5521919584440</msg>
<status status="PASS" starttime="20210322 17:45:28.786" endtime="20210322 17:45:28.786"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${phone_pix}</arg>
</arguments>
<msg timestamp="20210322 17:45:28.787" level="INFO">${phone_pix} = +5521919584440</msg>
<status status="PASS" starttime="20210322 17:45:28.787" endtime="20210322 17:45:28.787"></status>
</kw>
<kw name="criar holder individual ativo" library="accreditation_create_holder_active">
<kw name="conectar accreditation" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accreditation</arg>
<arg>url=${accreditation_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 17:45:28.790" level="INFO">Creating Session using : alias=accreditation, url=https://banking-accreditation-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 17:45:28.789" endtime="20210322 17:45:28.790"></status>
</kw>
<status status="PASS" starttime="20210322 17:45:28.788" endtime="20210322 17:45:28.791"></status>
</kw>
<kw name="Cpf" library="FakerLibrary">
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 17:45:28.793" level="INFO">${national_registration} = 786.924.150-49</msg>
<status status="PASS" starttime="20210322 17:45:28.791" endtime="20210322 17:45:28.793"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${national_registration}</arg>
<arg>.</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 17:45:28.793" level="INFO">${national_registration} = 786924150-49</msg>
<status status="PASS" starttime="20210322 17:45:28.793" endtime="20210322 17:45:28.793"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${national_registration}</arg>
<arg>-</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 17:45:28.794" level="INFO">${national_registration} = 78692415049</msg>
<status status="PASS" starttime="20210322 17:45:28.793" endtime="20210322 17:45:28.794"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${national_registration}</arg>
</arguments>
<msg timestamp="20210322 17:45:28.795" level="INFO">${national_registration} = 78692415049</msg>
<status status="PASS" starttime="20210322 17:45:28.794" endtime="20210322 17:45:28.795"></status>
</kw>
<kw name="Rg" library="FakerLibrary">
<doc>Brazilian RG, return plain numbers.
Check:  https://www.ngmatematica.com/2014/02/como-determinar-o-digito-verificador-do.html</doc>
<assign>
<var>${identity_card}</var>
</assign>
<msg timestamp="20210322 17:45:28.796" level="INFO">${identity_card} = 043527164</msg>
<status status="PASS" starttime="20210322 17:45:28.795" endtime="20210322 17:45:28.796"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${identity_card}</arg>
</arguments>
<msg timestamp="20210322 17:45:28.797" level="INFO">${identity_card} = 043527164</msg>
<status status="PASS" starttime="20210322 17:45:28.796" endtime="20210322 17:45:28.797"></status>
</kw>
<kw name="criar holder individual" library="accreditation_post_holder_individual">
<arguments>
<arg>holder_type=individual</arg>
<arg>holder_name=${holder_name}</arg>
<arg>email=${email}</arg>
<arg>national_registration=${national_registration}</arg>
<arg>revenue=${revenue}</arg>
<arg>birthday=${birthday}</arg>
<arg>mothers_name=${mothers_name}</arg>
<arg>identity_card=${identity_card}</arg>
<arg>pep=false</arg>
<arg>cbo=${cbo}</arg>
</arguments>
<kw name="conectar accreditation" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accreditation</arg>
<arg>url=${accreditation_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 17:45:28.800" level="INFO">Creating Session using : alias=accreditation, url=https://banking-accreditation-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 17:45:28.799" endtime="20210322 17:45:28.800"></status>
</kw>
<status status="PASS" starttime="20210322 17:45:28.799" endtime="20210322 17:45:28.800"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_type}</arg>
</arguments>
<msg timestamp="20210322 17:45:28.801" level="INFO">${holder_type} = individual</msg>
<status status="PASS" starttime="20210322 17:45:28.801" endtime="20210322 17:45:28.801"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_name}</arg>
</arguments>
<msg timestamp="20210322 17:45:28.802" level="INFO">${holder_name} = Holder de teste</msg>
<status status="PASS" starttime="20210322 17:45:28.802" endtime="20210322 17:45:28.802"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:45:28.803" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 17:45:28.803" endtime="20210322 17:45:28.804"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "${holder_type}",</arg>
<arg>"name": "${holder_name}",</arg>
<arg>"email": "${email}",</arg>
<arg>"national_registration": "${national_registration}",</arg>
<arg>"revenue": ${revenue},</arg>
<arg>"birthday": "${birthday}",</arg>
<arg>"mothers_name": "${mothers_name}",</arg>
<arg>"identity_card": "${identity_card}",</arg>
<arg>"pep": false,</arg>
<arg>"cbo": ${cbo}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 17:45:28.805" level="INFO">${body} = { "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "78692415049", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder",...</msg>
<status status="PASS" starttime="20210322 17:45:28.804" endtime="20210322 17:45:28.805"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:45:28.806" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "78692415049", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder", "identity_card": "043527164", "pep": false, "cbo": 821450 } 
json=None</msg>
<msg timestamp="20210322 17:45:29.481" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:45:28.805" endtime="20210322 17:45:29.481"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:45:29.482" level="INFO">{'id': 'f1152cb14bea4ac88d38e150f0a75982', 'name': 'Holder de teste', 'revenue': 5500.0, 'email': 'teste@teste.com.br', 'status': 'waiting_info_and_documents', 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'marketplace_name': 'Marketplace de Teste', 'created_at': '2021-03-22T17:45:30.669602', 'updated_at': '2021-03-22T17:45:30.669603', 'type': 'individual', 'national_registration': '78692415049', 'birthday': '1988-04-23', 'mothers_name': 'Mãe do Holder', 'identity_card': '043527164', 'pep': False, 'cbo': '821450', '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/f1152cb14bea4ac88d38e150f0a75982', 'type': 'GET'}, 'phones': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/f1152cb14bea4ac88d38e150f0a75982/phones', 'type': 'GET'}, 'addresses': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/f1152cb14bea4ac88d38e150f0a75982/addresses', 'type': 'GET'}, 'documents': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/f1152cb14bea4ac88d38e150f0a75982/documents', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 17:45:29.481" endtime="20210322 17:45:29.483"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:45:29.485" level="INFO">e2153ab2ee0318e3</msg>
<status status="PASS" starttime="20210322 17:45:29.484" endtime="20210322 17:45:29.485"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${body}</arg>
</arguments>
<msg timestamp="20210322 17:45:29.486" level="INFO">{ "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "78692415049", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder", "identity_card": "043527164", "pep": false, "cbo": 821450 }</msg>
<status status="PASS" starttime="20210322 17:45:29.486" endtime="20210322 17:45:29.487"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:45:29.488" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:45:29.488" endtime="20210322 17:45:29.488"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${holder_external_key}</var>
</assign>
<msg timestamp="20210322 17:45:29.490" level="INFO">${holder_external_key} = f1152cb14bea4ac88d38e150f0a75982</msg>
<status status="PASS" starttime="20210322 17:45:29.489" endtime="20210322 17:45:29.490"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_external_key}</arg>
</arguments>
<msg timestamp="20210322 17:45:29.491" level="INFO">${holder_external_key} = f1152cb14bea4ac88d38e150f0a75982</msg>
<status status="PASS" starttime="20210322 17:45:29.490" endtime="20210322 17:45:29.491"></status>
</kw>
<status status="PASS" starttime="20210322 17:45:28.797" endtime="20210322 17:45:29.491"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_name}</arg>
</arguments>
<msg timestamp="20210322 17:45:29.492" level="INFO">${holder_name} = Holder de teste</msg>
<status status="PASS" starttime="20210322 17:45:29.492" endtime="20210322 17:45:29.492"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 17:45:29.493" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:45:29.493" endtime="20210322 17:45:29.493"></status>
</kw>
<kw name="criar holder phone" library="accreditation_post_holder_phone">
<arguments>
<arg>21</arg>
<arg>51</arg>
<arg>996221236</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:45:29.495" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 17:45:29.494" endtime="20210322 17:45:29.495"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"area_code": "${phone_area_code}",</arg>
<arg>"country_code": "${phone_country_code}",</arg>
<arg>"number": "${phone_number}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 17:45:29.495" level="INFO">${body} = { "area_code": "21", "country_code": "51", "number": "996221236" }</msg>
<status status="PASS" starttime="20210322 17:45:29.495" endtime="20210322 17:45:29.495"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/phones</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:45:29.497" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/f1152cb14bea4ac88d38e150f0a75982/phones, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "area_code": "21", "country_code": "51", "number": "996221236" } 
json=None</msg>
<msg timestamp="20210322 17:45:29.724" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:45:29.496" endtime="20210322 17:45:29.724"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:45:29.726" level="INFO">{'id': '7b9e46f389984cdf9dd8103179f7646d', 'area_code': '21', 'country_code': '51', 'number': '996221236', 'main': True, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/f1152cb14bea4ac88d38e150f0a75982/phones/7b9e46f389984cdf9dd8103179f7646d', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/f1152cb14bea4ac88d38e150f0a75982', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 17:45:29.725" endtime="20210322 17:45:29.726"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:45:29.728" level="INFO">5f33751e98fe0303</msg>
<status status="PASS" starttime="20210322 17:45:29.727" endtime="20210322 17:45:29.728"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:45:29.730" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:45:29.729" endtime="20210322 17:45:29.730"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${phone_external_key}</var>
</assign>
<msg timestamp="20210322 17:45:29.732" level="INFO">${phone_external_key} = 7b9e46f389984cdf9dd8103179f7646d</msg>
<status status="PASS" starttime="20210322 17:45:29.730" endtime="20210322 17:45:29.732"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${phone_external_key}</arg>
</arguments>
<msg timestamp="20210322 17:45:29.733" level="INFO">${phone_external_key} = 7b9e46f389984cdf9dd8103179f7646d</msg>
<status status="PASS" starttime="20210322 17:45:29.733" endtime="20210322 17:45:29.734"></status>
</kw>
<status status="PASS" starttime="20210322 17:45:29.494" endtime="20210322 17:45:29.734"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 17:45:29.736" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:45:29.735" endtime="20210322 17:45:29.736"></status>
</kw>
<kw name="criar holder address" library="accreditation_post_holder_address">
<arguments>
<arg>Rio de Janeiro</arg>
<arg>Rio de Janeiro</arg>
<arg>Brasil</arg>
<arg>Bairro de Testes</arg>
<arg>Rua de Testes</arg>
<arg>90</arg>
<arg>apto 200</arg>
<arg>21550987</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:45:29.738" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 17:45:29.737" endtime="20210322 17:45:29.738"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"city": "${city}",</arg>
<arg>"state": "${state}",</arg>
<arg>"country": "${country}",</arg>
<arg>"neighborhood": "${neighborhood}",</arg>
<arg>"street": "${street}",</arg>
<arg>"number": "${number}",</arg>
<arg>"complement": "${complement}",</arg>
<arg>"postal_code": "${postal_code}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 17:45:29.739" level="INFO">${body} = { "city": "Rio de Janeiro", "state": "Rio de Janeiro", "country": "Brasil", "neighborhood": "Bairro de Testes", "street": "Rua de Testes", "number": "90", "complement": "apto 200", "postal_code": "215...</msg>
<status status="PASS" starttime="20210322 17:45:29.738" endtime="20210322 17:45:29.740"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/addresses</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:45:29.741" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/f1152cb14bea4ac88d38e150f0a75982/addresses, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "city": "Rio de Janeiro", "state": "Rio de Janeiro", "country": "Brasil", "neighborhood": "Bairro de Testes", "street": "Rua de Testes", "number": "90", "complement": "apto 200", "postal_code": "21550987" } 
json=None</msg>
<msg timestamp="20210322 17:45:29.975" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:45:29.740" endtime="20210322 17:45:29.975"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:45:29.978" level="INFO">{'id': 'e402cf4ffd5c4404a9de059f0fc53c78', 'street': 'Rua de Testes', 'number': '90', 'city': 'Rio de Janeiro', 'complement': 'apto 200', 'state': 'Rio de Janeiro', 'neighborhood': 'Bairro de Testes', 'postal_code': '21550987', 'country': 'Brasil', 'main': True, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/f1152cb14bea4ac88d38e150f0a75982/addresses/e402cf4ffd5c4404a9de059f0fc53c78', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/f1152cb14bea4ac88d38e150f0a75982', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 17:45:29.976" endtime="20210322 17:45:29.978"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:45:29.980" level="INFO">ee14f66a8951f29e</msg>
<status status="PASS" starttime="20210322 17:45:29.979" endtime="20210322 17:45:29.980"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:45:29.982" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:45:29.981" endtime="20210322 17:45:29.983"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${address_external_key}</var>
</assign>
<msg timestamp="20210322 17:45:29.986" level="INFO">${address_external_key} = e402cf4ffd5c4404a9de059f0fc53c78</msg>
<status status="PASS" starttime="20210322 17:45:29.984" endtime="20210322 17:45:29.987"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${address_external_key}</arg>
</arguments>
<msg timestamp="20210322 17:45:29.988" level="INFO">${address_external_key} = e402cf4ffd5c4404a9de059f0fc53c78</msg>
<status status="PASS" starttime="20210322 17:45:29.987" endtime="20210322 17:45:29.988"></status>
</kw>
<status status="PASS" starttime="20210322 17:45:29.736" endtime="20210322 17:45:29.988"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 17:45:29.990" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:45:29.989" endtime="20210322 17:45:29.990"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>SELFIE</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:45:29.993" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 17:45:29.992" endtime="20210322 17:45:29.993"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 17:45:29.994" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 17:45:29.996" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 17:45:29.993" endtime="20210322 17:45:29.997"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:45:29.999" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/f1152cb14bea4ac88d38e150f0a75982/documents?type=SELFIE, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 17:45:30.261" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:45:29.997" endtime="20210322 17:45:30.262"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:45:30.262" level="INFO">{'id': 'ca497ea512454cc090d097364cbf2889', 'document_type': 'selfie', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/f1152cb14bea4ac88d38e150f0a75982/documents/ca497ea512454cc090d097364cbf2889', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/f1152cb14bea4ac88d38e150f0a75982', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/f1152cb14bea4ac88d38e150f0a75982/documents/ca497ea512454cc090d097364cbf2889/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 17:45:30.262" endtime="20210322 17:45:30.263"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:45:30.263" level="INFO">2af49e19a98418e6</msg>
<status status="PASS" starttime="20210322 17:45:30.263" endtime="20210322 17:45:30.263"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:45:30.264" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:45:30.263" endtime="20210322 17:45:30.264"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 17:45:30.265" level="INFO">${document_external_key} = ca497ea512454cc090d097364cbf2889</msg>
<status status="PASS" starttime="20210322 17:45:30.264" endtime="20210322 17:45:30.265"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 17:45:30.266" level="INFO">${document_external_key} = ca497ea512454cc090d097364cbf2889</msg>
<status status="PASS" starttime="20210322 17:45:30.265" endtime="20210322 17:45:30.266"></status>
</kw>
<status status="PASS" starttime="20210322 17:45:29.991" endtime="20210322 17:45:30.266"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 17:45:30.266" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:45:30.266" endtime="20210322 17:45:30.267"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>RG_FRENTE</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:45:30.268" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 17:45:30.267" endtime="20210322 17:45:30.268"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 17:45:30.268" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 17:45:30.270" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 17:45:30.268" endtime="20210322 17:45:30.270"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:45:30.271" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/f1152cb14bea4ac88d38e150f0a75982/documents?type=RG_FRENTE, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 17:45:30.548" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:45:30.270" endtime="20210322 17:45:30.548"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:45:30.549" level="INFO">{'id': 'ff11c77b00e94446b7b74b40c3ac6139', 'document_type': 'rg_frente', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/f1152cb14bea4ac88d38e150f0a75982/documents/ff11c77b00e94446b7b74b40c3ac6139', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/f1152cb14bea4ac88d38e150f0a75982', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/f1152cb14bea4ac88d38e150f0a75982/documents/ff11c77b00e94446b7b74b40c3ac6139/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 17:45:30.548" endtime="20210322 17:45:30.549"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:45:30.550" level="INFO">327a9e501eba6c37</msg>
<status status="PASS" starttime="20210322 17:45:30.550" endtime="20210322 17:45:30.550"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:45:30.551" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:45:30.551" endtime="20210322 17:45:30.551"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 17:45:30.553" level="INFO">${document_external_key} = ff11c77b00e94446b7b74b40c3ac6139</msg>
<status status="PASS" starttime="20210322 17:45:30.552" endtime="20210322 17:45:30.553"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 17:45:30.554" level="INFO">${document_external_key} = ff11c77b00e94446b7b74b40c3ac6139</msg>
<status status="PASS" starttime="20210322 17:45:30.553" endtime="20210322 17:45:30.554"></status>
</kw>
<status status="PASS" starttime="20210322 17:45:30.267" endtime="20210322 17:45:30.554"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 17:45:30.555" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:45:30.554" endtime="20210322 17:45:30.555"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>RG_VERSO</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:45:30.556" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 17:45:30.556" endtime="20210322 17:45:30.556"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 17:45:30.557" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 17:45:30.559" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 17:45:30.557" endtime="20210322 17:45:30.559"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:45:30.561" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/f1152cb14bea4ac88d38e150f0a75982/documents?type=RG_VERSO, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 17:45:30.850" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:45:30.559" endtime="20210322 17:45:30.851"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:45:30.854" level="INFO">{'id': '9b87b9bb33024832aaf422fe83767395', 'document_type': 'rg_verso', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/f1152cb14bea4ac88d38e150f0a75982/documents/9b87b9bb33024832aaf422fe83767395', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/f1152cb14bea4ac88d38e150f0a75982', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/f1152cb14bea4ac88d38e150f0a75982/documents/9b87b9bb33024832aaf422fe83767395/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 17:45:30.852" endtime="20210322 17:45:30.855"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:45:30.857" level="INFO">0ffb9eb330195174</msg>
<status status="PASS" starttime="20210322 17:45:30.856" endtime="20210322 17:45:30.858"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:45:30.860" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:45:30.859" endtime="20210322 17:45:30.860"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 17:45:30.863" level="INFO">${document_external_key} = 9b87b9bb33024832aaf422fe83767395</msg>
<status status="PASS" starttime="20210322 17:45:30.861" endtime="20210322 17:45:30.863"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 17:45:30.864" level="INFO">${document_external_key} = 9b87b9bb33024832aaf422fe83767395</msg>
<status status="PASS" starttime="20210322 17:45:30.863" endtime="20210322 17:45:30.864"></status>
</kw>
<status status="PASS" starttime="20210322 17:45:30.555" endtime="20210322 17:45:30.865"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 17:45:30.866" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:45:30.865" endtime="20210322 17:45:30.866"></status>
</kw>
<kw name="solicitar aprovação do holder" library="accreditation_request_approval">
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:45:30.869" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 17:45:30.868" endtime="20210322 17:45:30.869"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/approval</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:45:30.870" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/f1152cb14bea4ac88d38e150f0a75982/approval, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data=None 
json=None</msg>
<msg timestamp="20210322 17:45:31.158" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 17:45:30.869" endtime="20210322 17:45:31.158"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:45:31.161" level="INFO">{'message': 'Approval request accepted successfully. Processing analysis'}</msg>
<status status="PASS" starttime="20210322 17:45:31.159" endtime="20210322 17:45:31.161"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:45:31.164" level="INFO">743226e4fa9c0d74</msg>
<status status="PASS" starttime="20210322 17:45:31.162" endtime="20210322 17:45:31.164"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:45:31.165" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 17:45:31.165" endtime="20210322 17:45:31.166"></status>
</kw>
<status status="PASS" starttime="20210322 17:45:30.867" endtime="20210322 17:45:31.166"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 17:45:31.167" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:45:31.166" endtime="20210322 17:45:31.168"></status>
</kw>
<kw name="recebendo notificação de aprovação" library="accreditation_risk_notification">
<kw name="Uuid 4" library="FakerLibrary">
<doc>Generates a random UUID4 string.
:param cast_to: Specify what type the UUID should be cast to. Default is `str`
:type cast_to: callable</doc>
<assign>
<var>${assessment_id}</var>
</assign>
<msg timestamp="20210322 17:45:31.169" level="INFO">${assessment_id} = 2b146e1a-060b-4188-93c5-93bc902fa32d</msg>
<status status="PASS" starttime="20210322 17:45:31.169" endtime="20210322 17:45:31.170"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>year</arg>
</arguments>
<assign>
<var>${year}</var>
</assign>
<msg timestamp="20210322 17:45:31.170" level="INFO">${year} = 2021</msg>
<status status="PASS" starttime="20210322 17:45:31.170" endtime="20210322 17:45:31.171"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>month</arg>
</arguments>
<assign>
<var>${month}</var>
</assign>
<msg timestamp="20210322 17:45:31.171" level="INFO">${month} = 03</msg>
<status status="PASS" starttime="20210322 17:45:31.171" endtime="20210322 17:45:31.172"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>day</arg>
</arguments>
<assign>
<var>${day}</var>
</assign>
<msg timestamp="20210322 17:45:31.172" level="INFO">${day} = 22</msg>
<status status="PASS" starttime="20210322 17:45:31.172" endtime="20210322 17:45:31.173"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:45:31.174" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 17:45:31.173" endtime="20210322 17:45:31.174"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "risk.assessment.result",</arg>
<arg>"resource": "business.holder",</arg>
<arg>"created_at": "${year}-${month}-${day} 15:28:56.747Z",</arg>
<arg>"marketplace_id": "${marketplace_external_key}",</arg>
<arg>"object": {</arg>
<arg>"result": "APPROVED",</arg>
<arg>"holder_id": "${holder_external_key}",</arg>
<arg>"applicant_id": "${application_external_key}",</arg>
<arg>"assessment_id": "${assessment_id}"</arg>
<arg>}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 17:45:31.174" level="INFO">${body} = { "type": "risk.assessment.result", "resource": "business.holder", "created_at": "2021-03-22 15:28:56.747Z", "marketplace_id": "f71a8951368a4cc085cf7875ff44e61c", "object": { "result": "APPROVED", "ho...</msg>
<status status="PASS" starttime="20210322 17:45:31.174" endtime="20210322 17:45:31.174"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/admin/internal_operation/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/registration/approval</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:45:31.177" level="INFO">POST Request using : uri=/admin/internal_operation/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/f1152cb14bea4ac88d38e150f0a75982/registration/approval, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "risk.assessment.result", "resource": "business.holder", "created_at": "2021-03-22 15:28:56.747Z", "marketplace_id": "f71a8951368a4cc085cf7875ff44e61c", "object": { "result": "APPROVED", "holder_id": "f1152cb14bea4ac88d38e150f0a75982", "applicant_id": "bcc25a6751c14b52af1340d40dba78c5", "assessment_id": "2b146e1a-060b-4188-93c5-93bc902fa32d" } } 
json=None</msg>
<msg timestamp="20210322 17:45:31.376" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 17:45:31.176" endtime="20210322 17:45:31.376"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:45:31.378" level="INFO">{'message': 'Holder approved successfully'}</msg>
<status status="PASS" starttime="20210322 17:45:31.378" endtime="20210322 17:45:31.378"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:45:31.382" level="INFO">8bc5d1cd45303f44</msg>
<status status="PASS" starttime="20210322 17:45:31.380" endtime="20210322 17:45:31.382"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:45:31.384" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 17:45:31.383" endtime="20210322 17:45:31.385"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 17:45:31.387" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:45:31.385" endtime="20210322 17:45:31.387"></status>
</kw>
<status status="PASS" starttime="20210322 17:45:31.168" endtime="20210322 17:45:31.387"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 17:45:31.389" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:45:31.388" endtime="20210322 17:45:31.389"></status>
</kw>
<kw name="buscar account por holder" library="accounts_get_accounts_by_holder">
<kw name="conectar accounts" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accounts</arg>
<arg>url=${account_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 17:45:31.392" level="INFO">Creating Session using : alias=accounts, url=https://banking-accounts-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 17:45:31.391" endtime="20210322 17:45:31.393"></status>
</kw>
<status status="PASS" starttime="20210322 17:45:31.390" endtime="20210322 17:45:31.394"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accounts</arg>
<arg>/marketplaces/${marketplace_external_key}/holders/${holder_external_key}/accounts</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:45:31.395" level="INFO">GET Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/holders/f1152cb14bea4ac88d38e150f0a75982/accounts, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 17:45:32.051" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 17:45:31.394" endtime="20210322 17:45:32.051"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:45:32.054" level="INFO">{'items': [{'id': '949d15e91acf4affb8aeb03a22b9cc88', 'holder': 'f1152cb14bea4ac88d38e150f0a75982', 'balance': '0.00', 'currency': 'BRL', 'routing_number': '001', 'number': '5265693242', 'status': 'active', 'metadata': {}, 'created_at': '2021-03-22T20:45:32.557902', 'updated_at': '2021-03-22T20:45:32.557902', 'primary': True, 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'uri': '/v2/marketplaces/f71a8951368a4cc085cf7875ff44e61c/accounts/949d15e91acf4affb8aeb03a22b9cc88', 'resource': 'payment_account'}], 'has_more': False, 'limit': 100, 'total_pages': 1, 'page': 1, 'offset': 0, 'total': '1', 'query_count': '1'}</msg>
<status status="PASS" starttime="20210322 17:45:32.052" endtime="20210322 17:45:32.054"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:45:32.057" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 17:45:32.055" endtime="20210322 17:45:32.057"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["id"]}</arg>
</arguments>
<assign>
<var>${account_external_key}</var>
</assign>
<msg timestamp="20210322 17:45:32.060" level="INFO">${account_external_key} = 949d15e91acf4affb8aeb03a22b9cc88</msg>
<status status="PASS" starttime="20210322 17:45:32.058" endtime="20210322 17:45:32.060"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_external_key}</arg>
</arguments>
<msg timestamp="20210322 17:45:32.062" level="INFO">${account_external_key} = 949d15e91acf4affb8aeb03a22b9cc88</msg>
<status status="PASS" starttime="20210322 17:45:32.060" endtime="20210322 17:45:32.062"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["number"]}</arg>
</arguments>
<assign>
<var>${account_number}</var>
</assign>
<msg timestamp="20210322 17:45:32.063" level="INFO">${account_number} = 5265693242</msg>
<status status="PASS" starttime="20210322 17:45:32.062" endtime="20210322 17:45:32.064"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_number}</arg>
</arguments>
<msg timestamp="20210322 17:45:32.065" level="INFO">${account_number} = 5265693242</msg>
<status status="PASS" starttime="20210322 17:45:32.064" endtime="20210322 17:45:32.065"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["routing_number"]}</arg>
</arguments>
<assign>
<var>${account_routing_number}</var>
</assign>
<msg timestamp="20210322 17:45:32.068" level="INFO">${account_routing_number} = 001</msg>
<status status="PASS" starttime="20210322 17:45:32.066" endtime="20210322 17:45:32.068"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_routing_number}</arg>
</arguments>
<msg timestamp="20210322 17:45:32.069" level="INFO">${account_routing_number} = 001</msg>
<status status="PASS" starttime="20210322 17:45:32.068" endtime="20210322 17:45:32.069"></status>
</kw>
<status status="PASS" starttime="20210322 17:45:31.389" endtime="20210322 17:45:32.069"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 17:45:32.070" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:45:32.069" endtime="20210322 17:45:32.070"></status>
</kw>
<status status="PASS" starttime="20210322 17:45:28.788" endtime="20210322 17:45:32.070"></status>
</kw>
<kw name="criar chave pix" library="pix_dict_create_entry">
<arguments>
<arg>type=phone</arg>
<arg>value=${phone_pix}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 17:45:32.072" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 17:45:32.072" endtime="20210322 17:45:32.073"></status>
</kw>
<status status="PASS" starttime="20210322 17:45:32.071" endtime="20210322 17:45:32.073"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${type}</arg>
</arguments>
<msg timestamp="20210322 17:45:32.074" level="INFO">${type} = phone</msg>
<status status="PASS" starttime="20210322 17:45:32.074" endtime="20210322 17:45:32.074"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210322 17:45:32.075" level="INFO">${value} = +5521919584440</msg>
<status status="PASS" starttime="20210322 17:45:32.075" endtime="20210322 17:45:32.075"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:45:32.076" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 17:45:32.076" endtime="20210322 17:45:32.076"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "${type}",</arg>
<arg>"value": "${value}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 17:45:32.077" level="INFO">${body} = { "type": "phone", "value": "+5521919584440" }</msg>
<status status="PASS" starttime="20210322 17:45:32.077" endtime="20210322 17:45:32.077"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:45:32.079" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/f1152cb14bea4ac88d38e150f0a75982/accounts/949d15e91acf4affb8aeb03a22b9cc88/entries, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "phone", "value": "+5521919584440" } 
json=None</msg>
<msg timestamp="20210322 17:45:32.762" level="INFO">${response} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20210322 17:45:32.078" endtime="20210322 17:45:32.763"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:45:32.765" level="INFO">{'id': 'ab85b354cbca4e76864413aca7ea983c', 'status': 'waiting_ownership_verification', 'created_at': '2021-03-22T05:45:33.954', 'updated_at': '2021-03-22T05:45:33.954', 'key': {'value': '+5521919584440', 'type': 'phone'}, 'account': {'id': '949d15e91acf4affb8aeb03a22b9cc88', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': 'f1152cb14bea4ac88d38e150f0a75982', 'owner': {'name': 'Holder de teste', 'national_registration': '78692415049', 'type': 'individual'}, 'routing_number': '001', 'number': '5265693242', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}, 'resource': 'pix.entry'}</msg>
<status status="PASS" starttime="20210322 17:45:32.764" endtime="20210322 17:45:32.766"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:45:32.768" level="INFO">ff3d3043945010de</msg>
<status status="PASS" starttime="20210322 17:45:32.766" endtime="20210322 17:45:32.768"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 17:45:32.770" level="INFO">202</msg>
<status status="PASS" starttime="20210322 17:45:32.769" endtime="20210322 17:45:32.771"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:45:32.773" level="INFO">${response} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20210322 17:45:32.772" endtime="20210322 17:45:32.773"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${entry_external_key}</var>
</assign>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:45:32.775" endtime="20210322 17:45:32.777"></status>
</kw>
<msg timestamp="20210322 17:45:32.777" level="INFO">${entry_external_key} = ab85b354cbca4e76864413aca7ea983c</msg>
<status status="PASS" starttime="20210322 17:45:32.774" endtime="20210322 17:45:32.777"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${entry_external_key}</arg>
</arguments>
<msg timestamp="20210322 17:45:32.779" level="INFO">${entry_external_key} = ab85b354cbca4e76864413aca7ea983c</msg>
<status status="PASS" starttime="20210322 17:45:32.779" endtime="20210322 17:45:32.779"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["key"]["value"]}</arg>
</arguments>
<assign>
<var>${entry_key_value}</var>
</assign>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["key"]["value"]}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:45:32.781" endtime="20210322 17:45:32.783"></status>
</kw>
<msg timestamp="20210322 17:45:32.783" level="INFO">${entry_key_value} = +5521919584440</msg>
<status status="PASS" starttime="20210322 17:45:32.779" endtime="20210322 17:45:32.783"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${entry_key_value}</arg>
</arguments>
<msg timestamp="20210322 17:45:32.784" level="INFO">${entry_key_value} = +5521919584440</msg>
<status status="PASS" starttime="20210322 17:45:32.783" endtime="20210322 17:45:32.784"></status>
</kw>
<status status="PASS" starttime="20210322 17:45:32.070" endtime="20210322 17:45:32.785"></status>
</kw>
<kw name="validar chave pix" library="asserts">
<arguments>
<arg>key_status=waiting_ownership_verification</arg>
<arg>key_type=${type}</arg>
<arg>key_value=${value}</arg>
<arg>account_external_key=${account_external_key}</arg>
<arg>marketplace_external_key=${marketplace_external_key}</arg>
<arg>holder_external_key=${holder_external_key}</arg>
<arg>account_number=${account_number}</arg>
<arg>account_routing_number=${account_routing_number}</arg>
<arg>account_type=CACC</arg>
<arg>owner_key_name=${holder_name}</arg>
<arg>national_registration=${national_registration}</arg>
<arg>holder_type=${holder_type}</arg>
<arg>psp_code=19468242</arg>
<arg>psp_name=Zoop Tecnologia e Meios de Pagamento S.A.</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar status da chave</arg>
</arguments>
<msg timestamp="20210322 17:45:32.789" level="INFO">Validar status da chave</msg>
<status status="PASS" starttime="20210322 17:45:32.789" endtime="20210322 17:45:32.789"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["status"]}</arg>
<arg>${key_status}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:45:32.789" endtime="20210322 17:45:32.790"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando Tipo da chave PIX</arg>
</arguments>
<msg timestamp="20210322 17:45:32.792" level="INFO">Validando Tipo da chave PIX</msg>
<status status="PASS" starttime="20210322 17:45:32.790" endtime="20210322 17:45:32.792"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["key"]["type"]}</arg>
<arg>${key_type}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:45:32.792" endtime="20210322 17:45:32.792"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando Valor da chave PIX</arg>
</arguments>
<msg timestamp="20210322 17:45:32.793" level="INFO">Validando Valor da chave PIX</msg>
<status status="PASS" starttime="20210322 17:45:32.793" endtime="20210322 17:45:32.793"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${type}' == 'evp'</arg>
<arg>Should Not Be Empty</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' != 'evp'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${key_value}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${key_value}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:45:32.794" endtime="20210322 17:45:32.795"></status>
</kw>
<status status="PASS" starttime="20210322 17:45:32.793" endtime="20210322 17:45:32.795"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando dados da conta</arg>
</arguments>
<msg timestamp="20210322 17:45:32.797" level="INFO">Validando dados da conta</msg>
<status status="PASS" starttime="20210322 17:45:32.795" endtime="20210322 17:45:32.797"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["id"]}</arg>
<arg>${account_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:45:32.797" endtime="20210322 17:45:32.797"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["marketplace"]}</arg>
<arg>${marketplace_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:45:32.797" endtime="20210322 17:45:32.798"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["holder"]}</arg>
<arg>${holder_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:45:32.798" endtime="20210322 17:45:32.800"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["number"]}</arg>
<arg>${account_number}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:45:32.800" endtime="20210322 17:45:32.800"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["routing_number"]}</arg>
<arg>${account_routing_number}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:45:32.800" endtime="20210322 17:45:32.801"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["type"]}</arg>
<arg>${account_type}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:45:32.801" endtime="20210322 17:45:32.802"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar Proprietário da Account Owner</arg>
</arguments>
<msg timestamp="20210322 17:45:32.803" level="INFO">Validar Proprietário da Account Owner</msg>
<status status="PASS" starttime="20210322 17:45:32.802" endtime="20210322 17:45:32.803"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["account"]["owner"]["name"]}</arg>
<arg>${owner_key_name}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:45:32.803" endtime="20210322 17:45:32.804"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar national_registration da Account Owner</arg>
</arguments>
<msg timestamp="20210322 17:45:32.804" level="INFO">Validar national_registration da Account Owner</msg>
<status status="PASS" starttime="20210322 17:45:32.804" endtime="20210322 17:45:32.804"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["account"]["owner"]["national_registration"]}</arg>
<arg>${national_registration}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:45:32.805" endtime="20210322 17:45:32.805"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar Holder Type do Account Owner</arg>
</arguments>
<msg timestamp="20210322 17:45:32.806" level="INFO">Validar Holder Type do Account Owner</msg>
<status status="PASS" starttime="20210322 17:45:32.806" endtime="20210322 17:45:32.806"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["account"]["owner"]["type"]}</arg>
<arg>${holder_type}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:45:32.806" endtime="20210322 17:45:32.807"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar PSP</arg>
</arguments>
<msg timestamp="20210322 17:45:32.808" level="INFO">Validar PSP</msg>
<status status="PASS" starttime="20210322 17:45:32.807" endtime="20210322 17:45:32.808"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["psp"]["code"]}</arg>
<arg>${psp_code}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:45:32.808" endtime="20210322 17:45:32.809"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["psp"]["name"]}</arg>
<arg>${psp_name}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:45:32.809" endtime="20210322 17:45:32.809"></status>
</kw>
<status status="PASS" starttime="20210322 17:45:32.785" endtime="20210322 17:45:32.810"></status>
</kw>
<kw name="excluir chave pix" library="pix_dict_delete_entry">
<arguments>
<arg>holder_external_key=${holder_external_key}</arg>
<arg>account_external_key=${account_external_key}</arg>
<arg>entry_external_key=${entry_external_key}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 17:45:32.811" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 17:45:32.811" endtime="20210322 17:45:32.826"></status>
</kw>
<status status="PASS" starttime="20210322 17:45:32.811" endtime="20210322 17:45:32.826"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:45:32.827" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 17:45:32.826" endtime="20210322 17:45:32.827"></status>
</kw>
<kw name="Delete Request" library="RequestsLibrary">
<doc>Send a DELETE request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries/${entry_external_key}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:45:32.828" level="INFO">DELETE Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/f1152cb14bea4ac88d38e150f0a75982/accounts/949d15e91acf4affb8aeb03a22b9cc88/entries/ab85b354cbca4e76864413aca7ea983c, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data=None 
json=None</msg>
<msg timestamp="20210322 17:45:33.487" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 17:45:32.827" endtime="20210322 17:45:33.487"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:45:33.489" level="INFO">{'message': 'Entry removed successfully'}</msg>
<status status="PASS" starttime="20210322 17:45:33.488" endtime="20210322 17:45:33.489"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:45:33.490" level="INFO">f603137c08831304</msg>
<status status="PASS" starttime="20210322 17:45:33.489" endtime="20210322 17:45:33.490"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 17:45:33.491" level="INFO">200</msg>
<status status="PASS" starttime="20210322 17:45:33.490" endtime="20210322 17:45:33.491"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:45:33.492" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 17:45:33.492" endtime="20210322 17:45:33.492"></status>
</kw>
<status status="PASS" starttime="20210322 17:45:32.810" endtime="20210322 17:45:33.493"></status>
</kw>
<kw name="validar exclusão da chave pix" library="asserts">
<arguments>
<arg>message=Entry removed successfully</arg>
</arguments>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 17:45:33.494" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:45:33.493" endtime="20210322 17:45:33.494"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["message"]}</arg>
<arg>${message}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:45:33.495" endtime="20210322 17:45:33.495"></status>
</kw>
<status status="PASS" starttime="20210322 17:45:33.493" endtime="20210322 17:45:33.496"></status>
</kw>
<doc>Fluxo Básico</doc>
<tags>
<tag>regression_test</tag>
<tag>smoke_test</tag>
</tags>
<status status="PASS" starttime="20210322 17:45:28.783" endtime="20210322 17:45:33.496" critical="yes"></status>
</test>
<test id="s1-s1-s4-t3" name="Cenário: Excluir Chave de Endereçamento do tipo Email">
<kw name="Email" library="FakerLibrary">
<assign>
<var>${email_pix}</var>
</assign>
<msg timestamp="20210322 17:45:33.499" level="INFO">${email_pix} = jfogaca@ribeiro.net</msg>
<status status="PASS" starttime="20210322 17:45:33.498" endtime="20210322 17:45:33.499"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${email_pix}</arg>
</arguments>
<msg timestamp="20210322 17:45:33.500" level="INFO">${email_pix} = jfogaca@ribeiro.net</msg>
<status status="PASS" starttime="20210322 17:45:33.499" endtime="20210322 17:45:33.500"></status>
</kw>
<kw name="criar holder individual ativo" library="accreditation_create_holder_active">
<kw name="conectar accreditation" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accreditation</arg>
<arg>url=${accreditation_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 17:45:33.502" level="INFO">Creating Session using : alias=accreditation, url=https://banking-accreditation-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 17:45:33.502" endtime="20210322 17:45:33.503"></status>
</kw>
<status status="PASS" starttime="20210322 17:45:33.501" endtime="20210322 17:45:33.503"></status>
</kw>
<kw name="Cpf" library="FakerLibrary">
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 17:45:33.505" level="INFO">${national_registration} = 457.291.038-32</msg>
<status status="PASS" starttime="20210322 17:45:33.504" endtime="20210322 17:45:33.505"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${national_registration}</arg>
<arg>.</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 17:45:33.505" level="INFO">${national_registration} = 457291038-32</msg>
<status status="PASS" starttime="20210322 17:45:33.505" endtime="20210322 17:45:33.505"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${national_registration}</arg>
<arg>-</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 17:45:33.506" level="INFO">${national_registration} = 45729103832</msg>
<status status="PASS" starttime="20210322 17:45:33.506" endtime="20210322 17:45:33.506"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${national_registration}</arg>
</arguments>
<msg timestamp="20210322 17:45:33.507" level="INFO">${national_registration} = 45729103832</msg>
<status status="PASS" starttime="20210322 17:45:33.507" endtime="20210322 17:45:33.507"></status>
</kw>
<kw name="Rg" library="FakerLibrary">
<doc>Brazilian RG, return plain numbers.
Check:  https://www.ngmatematica.com/2014/02/como-determinar-o-digito-verificador-do.html</doc>
<assign>
<var>${identity_card}</var>
</assign>
<msg timestamp="20210322 17:45:33.508" level="INFO">${identity_card} = 815064731</msg>
<status status="PASS" starttime="20210322 17:45:33.508" endtime="20210322 17:45:33.508"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${identity_card}</arg>
</arguments>
<msg timestamp="20210322 17:45:33.509" level="INFO">${identity_card} = 815064731</msg>
<status status="PASS" starttime="20210322 17:45:33.508" endtime="20210322 17:45:33.509"></status>
</kw>
<kw name="criar holder individual" library="accreditation_post_holder_individual">
<arguments>
<arg>holder_type=individual</arg>
<arg>holder_name=${holder_name}</arg>
<arg>email=${email}</arg>
<arg>national_registration=${national_registration}</arg>
<arg>revenue=${revenue}</arg>
<arg>birthday=${birthday}</arg>
<arg>mothers_name=${mothers_name}</arg>
<arg>identity_card=${identity_card}</arg>
<arg>pep=false</arg>
<arg>cbo=${cbo}</arg>
</arguments>
<kw name="conectar accreditation" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accreditation</arg>
<arg>url=${accreditation_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 17:45:33.513" level="INFO">Creating Session using : alias=accreditation, url=https://banking-accreditation-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 17:45:33.511" endtime="20210322 17:45:33.513"></status>
</kw>
<status status="PASS" starttime="20210322 17:45:33.511" endtime="20210322 17:45:33.513"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_type}</arg>
</arguments>
<msg timestamp="20210322 17:45:33.514" level="INFO">${holder_type} = individual</msg>
<status status="PASS" starttime="20210322 17:45:33.514" endtime="20210322 17:45:33.514"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_name}</arg>
</arguments>
<msg timestamp="20210322 17:45:33.515" level="INFO">${holder_name} = Holder de teste</msg>
<status status="PASS" starttime="20210322 17:45:33.514" endtime="20210322 17:45:33.515"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:45:33.516" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 17:45:33.515" endtime="20210322 17:45:33.516"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "${holder_type}",</arg>
<arg>"name": "${holder_name}",</arg>
<arg>"email": "${email}",</arg>
<arg>"national_registration": "${national_registration}",</arg>
<arg>"revenue": ${revenue},</arg>
<arg>"birthday": "${birthday}",</arg>
<arg>"mothers_name": "${mothers_name}",</arg>
<arg>"identity_card": "${identity_card}",</arg>
<arg>"pep": false,</arg>
<arg>"cbo": ${cbo}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 17:45:33.517" level="INFO">${body} = { "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "45729103832", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder",...</msg>
<status status="PASS" starttime="20210322 17:45:33.516" endtime="20210322 17:45:33.517"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:45:33.518" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "45729103832", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder", "identity_card": "815064731", "pep": false, "cbo": 821450 } 
json=None</msg>
<msg timestamp="20210322 17:45:34.178" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:45:33.517" endtime="20210322 17:45:34.179"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:45:34.182" level="INFO">{'id': '62c4aae83dd1462788d72a2755bacc85', 'name': 'Holder de teste', 'revenue': 5500.0, 'email': 'teste@teste.com.br', 'status': 'waiting_info_and_documents', 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'marketplace_name': 'Marketplace de Teste', 'created_at': '2021-03-22T17:45:35.360933', 'updated_at': '2021-03-22T17:45:35.360935', 'type': 'individual', 'national_registration': '45729103832', 'birthday': '1988-04-23', 'mothers_name': 'Mãe do Holder', 'identity_card': '815064731', 'pep': False, 'cbo': '821450', '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/62c4aae83dd1462788d72a2755bacc85', 'type': 'GET'}, 'phones': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/62c4aae83dd1462788d72a2755bacc85/phones', 'type': 'GET'}, 'addresses': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/62c4aae83dd1462788d72a2755bacc85/addresses', 'type': 'GET'}, 'documents': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/62c4aae83dd1462788d72a2755bacc85/documents', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 17:45:34.180" endtime="20210322 17:45:34.183"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:45:34.185" level="INFO">131a401d47efd6de</msg>
<status status="PASS" starttime="20210322 17:45:34.184" endtime="20210322 17:45:34.185"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${body}</arg>
</arguments>
<msg timestamp="20210322 17:45:34.188" level="INFO">{ "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "45729103832", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder", "identity_card": "815064731", "pep": false, "cbo": 821450 }</msg>
<status status="PASS" starttime="20210322 17:45:34.187" endtime="20210322 17:45:34.188"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:45:34.190" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:45:34.189" endtime="20210322 17:45:34.191"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${holder_external_key}</var>
</assign>
<msg timestamp="20210322 17:45:34.193" level="INFO">${holder_external_key} = 62c4aae83dd1462788d72a2755bacc85</msg>
<status status="PASS" starttime="20210322 17:45:34.192" endtime="20210322 17:45:34.193"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_external_key}</arg>
</arguments>
<msg timestamp="20210322 17:45:34.195" level="INFO">${holder_external_key} = 62c4aae83dd1462788d72a2755bacc85</msg>
<status status="PASS" starttime="20210322 17:45:34.194" endtime="20210322 17:45:34.195"></status>
</kw>
<status status="PASS" starttime="20210322 17:45:33.509" endtime="20210322 17:45:34.195"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_name}</arg>
</arguments>
<msg timestamp="20210322 17:45:34.196" level="INFO">${holder_name} = Holder de teste</msg>
<status status="PASS" starttime="20210322 17:45:34.196" endtime="20210322 17:45:34.197"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 17:45:34.198" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:45:34.197" endtime="20210322 17:45:34.198"></status>
</kw>
<kw name="criar holder phone" library="accreditation_post_holder_phone">
<arguments>
<arg>21</arg>
<arg>51</arg>
<arg>996221236</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:45:34.200" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 17:45:34.200" endtime="20210322 17:45:34.200"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"area_code": "${phone_area_code}",</arg>
<arg>"country_code": "${phone_country_code}",</arg>
<arg>"number": "${phone_number}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 17:45:34.202" level="INFO">${body} = { "area_code": "21", "country_code": "51", "number": "996221236" }</msg>
<status status="PASS" starttime="20210322 17:45:34.201" endtime="20210322 17:45:34.202"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/phones</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:45:34.203" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/62c4aae83dd1462788d72a2755bacc85/phones, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "area_code": "21", "country_code": "51", "number": "996221236" } 
json=None</msg>
<msg timestamp="20210322 17:45:34.414" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:45:34.202" endtime="20210322 17:45:34.414"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:45:34.416" level="INFO">{'id': 'c068a16e12ae4be194b747ea720b5dfe', 'area_code': '21', 'country_code': '51', 'number': '996221236', 'main': True, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/62c4aae83dd1462788d72a2755bacc85/phones/c068a16e12ae4be194b747ea720b5dfe', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/62c4aae83dd1462788d72a2755bacc85', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 17:45:34.415" endtime="20210322 17:45:34.416"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:45:34.418" level="INFO">f6ff9f6c10c03df5</msg>
<status status="PASS" starttime="20210322 17:45:34.417" endtime="20210322 17:45:34.418"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:45:34.420" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:45:34.419" endtime="20210322 17:45:34.420"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${phone_external_key}</var>
</assign>
<msg timestamp="20210322 17:45:34.422" level="INFO">${phone_external_key} = c068a16e12ae4be194b747ea720b5dfe</msg>
<status status="PASS" starttime="20210322 17:45:34.421" endtime="20210322 17:45:34.422"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${phone_external_key}</arg>
</arguments>
<msg timestamp="20210322 17:45:34.424" level="INFO">${phone_external_key} = c068a16e12ae4be194b747ea720b5dfe</msg>
<status status="PASS" starttime="20210322 17:45:34.423" endtime="20210322 17:45:34.424"></status>
</kw>
<status status="PASS" starttime="20210322 17:45:34.198" endtime="20210322 17:45:34.424"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 17:45:34.425" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:45:34.425" endtime="20210322 17:45:34.425"></status>
</kw>
<kw name="criar holder address" library="accreditation_post_holder_address">
<arguments>
<arg>Rio de Janeiro</arg>
<arg>Rio de Janeiro</arg>
<arg>Brasil</arg>
<arg>Bairro de Testes</arg>
<arg>Rua de Testes</arg>
<arg>90</arg>
<arg>apto 200</arg>
<arg>21550987</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:45:34.427" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 17:45:34.427" endtime="20210322 17:45:34.428"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"city": "${city}",</arg>
<arg>"state": "${state}",</arg>
<arg>"country": "${country}",</arg>
<arg>"neighborhood": "${neighborhood}",</arg>
<arg>"street": "${street}",</arg>
<arg>"number": "${number}",</arg>
<arg>"complement": "${complement}",</arg>
<arg>"postal_code": "${postal_code}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 17:45:34.429" level="INFO">${body} = { "city": "Rio de Janeiro", "state": "Rio de Janeiro", "country": "Brasil", "neighborhood": "Bairro de Testes", "street": "Rua de Testes", "number": "90", "complement": "apto 200", "postal_code": "215...</msg>
<status status="PASS" starttime="20210322 17:45:34.428" endtime="20210322 17:45:34.429"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/addresses</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:45:34.431" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/62c4aae83dd1462788d72a2755bacc85/addresses, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "city": "Rio de Janeiro", "state": "Rio de Janeiro", "country": "Brasil", "neighborhood": "Bairro de Testes", "street": "Rua de Testes", "number": "90", "complement": "apto 200", "postal_code": "21550987" } 
json=None</msg>
<msg timestamp="20210322 17:45:34.643" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:45:34.430" endtime="20210322 17:45:34.643"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:45:34.645" level="INFO">{'id': 'f3fa7a536110465f8479be4cbe7e880b', 'street': 'Rua de Testes', 'number': '90', 'city': 'Rio de Janeiro', 'complement': 'apto 200', 'state': 'Rio de Janeiro', 'neighborhood': 'Bairro de Testes', 'postal_code': '21550987', 'country': 'Brasil', 'main': True, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/62c4aae83dd1462788d72a2755bacc85/addresses/f3fa7a536110465f8479be4cbe7e880b', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/62c4aae83dd1462788d72a2755bacc85', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 17:45:34.644" endtime="20210322 17:45:34.645"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:45:34.646" level="INFO">8adc29200f9c7c3b</msg>
<status status="PASS" starttime="20210322 17:45:34.645" endtime="20210322 17:45:34.646"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:45:34.648" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:45:34.647" endtime="20210322 17:45:34.648"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${address_external_key}</var>
</assign>
<msg timestamp="20210322 17:45:34.650" level="INFO">${address_external_key} = f3fa7a536110465f8479be4cbe7e880b</msg>
<status status="PASS" starttime="20210322 17:45:34.648" endtime="20210322 17:45:34.650"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${address_external_key}</arg>
</arguments>
<msg timestamp="20210322 17:45:34.651" level="INFO">${address_external_key} = f3fa7a536110465f8479be4cbe7e880b</msg>
<status status="PASS" starttime="20210322 17:45:34.650" endtime="20210322 17:45:34.651"></status>
</kw>
<status status="PASS" starttime="20210322 17:45:34.426" endtime="20210322 17:45:34.651"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 17:45:34.653" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:45:34.652" endtime="20210322 17:45:34.653"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>SELFIE</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:45:34.655" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 17:45:34.654" endtime="20210322 17:45:34.655"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 17:45:34.656" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 17:45:34.659" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 17:45:34.656" endtime="20210322 17:45:34.660"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:45:34.662" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/62c4aae83dd1462788d72a2755bacc85/documents?type=SELFIE, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 17:45:34.969" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:45:34.660" endtime="20210322 17:45:34.969"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:45:34.971" level="INFO">{'id': 'f4aed422485f4bab84b2c31ea63223a0', 'document_type': 'selfie', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/62c4aae83dd1462788d72a2755bacc85/documents/f4aed422485f4bab84b2c31ea63223a0', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/62c4aae83dd1462788d72a2755bacc85', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/62c4aae83dd1462788d72a2755bacc85/documents/f4aed422485f4bab84b2c31ea63223a0/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 17:45:34.970" endtime="20210322 17:45:34.972"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:45:34.974" level="INFO">76e5bf07f49acacd</msg>
<status status="PASS" starttime="20210322 17:45:34.973" endtime="20210322 17:45:34.975"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:45:34.976" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:45:34.976" endtime="20210322 17:45:34.977"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 17:45:34.979" level="INFO">${document_external_key} = f4aed422485f4bab84b2c31ea63223a0</msg>
<status status="PASS" starttime="20210322 17:45:34.977" endtime="20210322 17:45:34.979"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 17:45:34.980" level="INFO">${document_external_key} = f4aed422485f4bab84b2c31ea63223a0</msg>
<status status="PASS" starttime="20210322 17:45:34.979" endtime="20210322 17:45:34.980"></status>
</kw>
<status status="PASS" starttime="20210322 17:45:34.653" endtime="20210322 17:45:34.981"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 17:45:34.982" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:45:34.981" endtime="20210322 17:45:34.982"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>RG_FRENTE</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:45:34.984" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 17:45:34.983" endtime="20210322 17:45:34.984"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 17:45:34.985" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 17:45:34.987" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 17:45:34.984" endtime="20210322 17:45:34.987"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:45:34.989" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/62c4aae83dd1462788d72a2755bacc85/documents?type=RG_FRENTE, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 17:45:35.260" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:45:34.988" endtime="20210322 17:45:35.260"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:45:35.263" level="INFO">{'id': '6e3921b76e2543e6b2946196bbf66381', 'document_type': 'rg_frente', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/62c4aae83dd1462788d72a2755bacc85/documents/6e3921b76e2543e6b2946196bbf66381', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/62c4aae83dd1462788d72a2755bacc85', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/62c4aae83dd1462788d72a2755bacc85/documents/6e3921b76e2543e6b2946196bbf66381/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 17:45:35.260" endtime="20210322 17:45:35.263"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:45:35.265" level="INFO">742c353a9ab78b2b</msg>
<status status="PASS" starttime="20210322 17:45:35.263" endtime="20210322 17:45:35.265"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:45:35.268" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:45:35.266" endtime="20210322 17:45:35.268"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 17:45:35.271" level="INFO">${document_external_key} = 6e3921b76e2543e6b2946196bbf66381</msg>
<status status="PASS" starttime="20210322 17:45:35.269" endtime="20210322 17:45:35.273"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 17:45:35.274" level="INFO">${document_external_key} = 6e3921b76e2543e6b2946196bbf66381</msg>
<status status="PASS" starttime="20210322 17:45:35.273" endtime="20210322 17:45:35.274"></status>
</kw>
<status status="PASS" starttime="20210322 17:45:34.982" endtime="20210322 17:45:35.274"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 17:45:35.276" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:45:35.275" endtime="20210322 17:45:35.276"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>RG_VERSO</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:45:35.278" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 17:45:35.278" endtime="20210322 17:45:35.278"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 17:45:35.280" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 17:45:35.283" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 17:45:35.279" endtime="20210322 17:45:35.283"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:45:35.285" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/62c4aae83dd1462788d72a2755bacc85/documents?type=RG_VERSO, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 17:45:35.563" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:45:35.283" endtime="20210322 17:45:35.564"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:45:35.565" level="INFO">{'id': '7371c23189e14438b8ebae9c9fcf553e', 'document_type': 'rg_verso', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/62c4aae83dd1462788d72a2755bacc85/documents/7371c23189e14438b8ebae9c9fcf553e', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/62c4aae83dd1462788d72a2755bacc85', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/62c4aae83dd1462788d72a2755bacc85/documents/7371c23189e14438b8ebae9c9fcf553e/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 17:45:35.564" endtime="20210322 17:45:35.565"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:45:35.566" level="INFO">cd97ec8665f414f9</msg>
<status status="PASS" starttime="20210322 17:45:35.565" endtime="20210322 17:45:35.566"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:45:35.567" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:45:35.567" endtime="20210322 17:45:35.567"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 17:45:35.569" level="INFO">${document_external_key} = 7371c23189e14438b8ebae9c9fcf553e</msg>
<status status="PASS" starttime="20210322 17:45:35.568" endtime="20210322 17:45:35.569"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 17:45:35.570" level="INFO">${document_external_key} = 7371c23189e14438b8ebae9c9fcf553e</msg>
<status status="PASS" starttime="20210322 17:45:35.569" endtime="20210322 17:45:35.570"></status>
</kw>
<status status="PASS" starttime="20210322 17:45:35.276" endtime="20210322 17:45:35.570"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 17:45:35.571" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:45:35.571" endtime="20210322 17:45:35.571"></status>
</kw>
<kw name="solicitar aprovação do holder" library="accreditation_request_approval">
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:45:35.573" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 17:45:35.572" endtime="20210322 17:45:35.573"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/approval</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:45:35.574" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/62c4aae83dd1462788d72a2755bacc85/approval, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data=None 
json=None</msg>
<msg timestamp="20210322 17:45:35.883" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 17:45:35.574" endtime="20210322 17:45:35.884"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:45:35.887" level="INFO">{'message': 'Approval request accepted successfully. Processing analysis'}</msg>
<status status="PASS" starttime="20210322 17:45:35.885" endtime="20210322 17:45:35.887"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:45:35.890" level="INFO">ae346e644653a988</msg>
<status status="PASS" starttime="20210322 17:45:35.888" endtime="20210322 17:45:35.890"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:45:35.893" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 17:45:35.891" endtime="20210322 17:45:35.893"></status>
</kw>
<status status="PASS" starttime="20210322 17:45:35.572" endtime="20210322 17:45:35.893"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 17:45:35.896" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:45:35.894" endtime="20210322 17:45:35.896"></status>
</kw>
<kw name="recebendo notificação de aprovação" library="accreditation_risk_notification">
<kw name="Uuid 4" library="FakerLibrary">
<doc>Generates a random UUID4 string.
:param cast_to: Specify what type the UUID should be cast to. Default is `str`
:type cast_to: callable</doc>
<assign>
<var>${assessment_id}</var>
</assign>
<msg timestamp="20210322 17:45:35.899" level="INFO">${assessment_id} = a5eff9b8-bef6-4339-9d1f-1c8b8099df87</msg>
<status status="PASS" starttime="20210322 17:45:35.899" endtime="20210322 17:45:35.900"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>year</arg>
</arguments>
<assign>
<var>${year}</var>
</assign>
<msg timestamp="20210322 17:45:35.901" level="INFO">${year} = 2021</msg>
<status status="PASS" starttime="20210322 17:45:35.900" endtime="20210322 17:45:35.901"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>month</arg>
</arguments>
<assign>
<var>${month}</var>
</assign>
<msg timestamp="20210322 17:45:35.902" level="INFO">${month} = 03</msg>
<status status="PASS" starttime="20210322 17:45:35.902" endtime="20210322 17:45:35.902"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>day</arg>
</arguments>
<assign>
<var>${day}</var>
</assign>
<msg timestamp="20210322 17:45:35.904" level="INFO">${day} = 22</msg>
<status status="PASS" starttime="20210322 17:45:35.903" endtime="20210322 17:45:35.904"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:45:35.905" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 17:45:35.904" endtime="20210322 17:45:35.905"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "risk.assessment.result",</arg>
<arg>"resource": "business.holder",</arg>
<arg>"created_at": "${year}-${month}-${day} 15:28:56.747Z",</arg>
<arg>"marketplace_id": "${marketplace_external_key}",</arg>
<arg>"object": {</arg>
<arg>"result": "APPROVED",</arg>
<arg>"holder_id": "${holder_external_key}",</arg>
<arg>"applicant_id": "${application_external_key}",</arg>
<arg>"assessment_id": "${assessment_id}"</arg>
<arg>}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 17:45:35.907" level="INFO">${body} = { "type": "risk.assessment.result", "resource": "business.holder", "created_at": "2021-03-22 15:28:56.747Z", "marketplace_id": "f71a8951368a4cc085cf7875ff44e61c", "object": { "result": "APPROVED", "ho...</msg>
<status status="PASS" starttime="20210322 17:45:35.906" endtime="20210322 17:45:35.907"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/admin/internal_operation/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/registration/approval</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:45:35.909" level="INFO">POST Request using : uri=/admin/internal_operation/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/62c4aae83dd1462788d72a2755bacc85/registration/approval, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "risk.assessment.result", "resource": "business.holder", "created_at": "2021-03-22 15:28:56.747Z", "marketplace_id": "f71a8951368a4cc085cf7875ff44e61c", "object": { "result": "APPROVED", "holder_id": "62c4aae83dd1462788d72a2755bacc85", "applicant_id": "bcc25a6751c14b52af1340d40dba78c5", "assessment_id": "a5eff9b8-bef6-4339-9d1f-1c8b8099df87" } } 
json=None</msg>
<msg timestamp="20210322 17:45:36.127" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 17:45:35.908" endtime="20210322 17:45:36.127"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:45:36.129" level="INFO">{'message': 'Holder approved successfully'}</msg>
<status status="PASS" starttime="20210322 17:45:36.128" endtime="20210322 17:45:36.129"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:45:36.132" level="INFO">c36156e5223fba29</msg>
<status status="PASS" starttime="20210322 17:45:36.130" endtime="20210322 17:45:36.132"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:45:36.135" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 17:45:36.134" endtime="20210322 17:45:36.135"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 17:45:36.137" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:45:36.136" endtime="20210322 17:45:36.138"></status>
</kw>
<status status="PASS" starttime="20210322 17:45:35.897" endtime="20210322 17:45:36.138"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 17:45:36.140" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:45:36.139" endtime="20210322 17:45:36.141"></status>
</kw>
<kw name="buscar account por holder" library="accounts_get_accounts_by_holder">
<kw name="conectar accounts" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accounts</arg>
<arg>url=${account_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 17:45:36.145" level="INFO">Creating Session using : alias=accounts, url=https://banking-accounts-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 17:45:36.144" endtime="20210322 17:45:36.146"></status>
</kw>
<status status="PASS" starttime="20210322 17:45:36.143" endtime="20210322 17:45:36.146"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accounts</arg>
<arg>/marketplaces/${marketplace_external_key}/holders/${holder_external_key}/accounts</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:45:36.147" level="INFO">GET Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/holders/62c4aae83dd1462788d72a2755bacc85/accounts, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 17:45:36.802" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 17:45:36.146" endtime="20210322 17:45:36.802"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:45:36.806" level="INFO">{'items': [{'id': 'e7ad23046c16439bb771fdec60d2cce4', 'holder': '62c4aae83dd1462788d72a2755bacc85', 'balance': '0.00', 'currency': 'BRL', 'routing_number': '001', 'number': '3952223962', 'status': 'active', 'metadata': {}, 'created_at': '2021-03-22T20:45:37.290913', 'updated_at': '2021-03-22T20:45:37.290913', 'primary': True, 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'uri': '/v2/marketplaces/f71a8951368a4cc085cf7875ff44e61c/accounts/e7ad23046c16439bb771fdec60d2cce4', 'resource': 'payment_account'}], 'has_more': False, 'limit': 100, 'total_pages': 1, 'page': 1, 'offset': 0, 'total': '1', 'query_count': '1'}</msg>
<status status="PASS" starttime="20210322 17:45:36.803" endtime="20210322 17:45:36.806"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:45:36.808" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 17:45:36.807" endtime="20210322 17:45:36.809"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["id"]}</arg>
</arguments>
<assign>
<var>${account_external_key}</var>
</assign>
<msg timestamp="20210322 17:45:36.812" level="INFO">${account_external_key} = e7ad23046c16439bb771fdec60d2cce4</msg>
<status status="PASS" starttime="20210322 17:45:36.810" endtime="20210322 17:45:36.812"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_external_key}</arg>
</arguments>
<msg timestamp="20210322 17:45:36.814" level="INFO">${account_external_key} = e7ad23046c16439bb771fdec60d2cce4</msg>
<status status="PASS" starttime="20210322 17:45:36.813" endtime="20210322 17:45:36.814"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["number"]}</arg>
</arguments>
<assign>
<var>${account_number}</var>
</assign>
<msg timestamp="20210322 17:45:36.816" level="INFO">${account_number} = 3952223962</msg>
<status status="PASS" starttime="20210322 17:45:36.814" endtime="20210322 17:45:36.816"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_number}</arg>
</arguments>
<msg timestamp="20210322 17:45:36.817" level="INFO">${account_number} = 3952223962</msg>
<status status="PASS" starttime="20210322 17:45:36.817" endtime="20210322 17:45:36.817"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["routing_number"]}</arg>
</arguments>
<assign>
<var>${account_routing_number}</var>
</assign>
<msg timestamp="20210322 17:45:36.819" level="INFO">${account_routing_number} = 001</msg>
<status status="PASS" starttime="20210322 17:45:36.818" endtime="20210322 17:45:36.819"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_routing_number}</arg>
</arguments>
<msg timestamp="20210322 17:45:36.820" level="INFO">${account_routing_number} = 001</msg>
<status status="PASS" starttime="20210322 17:45:36.819" endtime="20210322 17:45:36.820"></status>
</kw>
<status status="PASS" starttime="20210322 17:45:36.141" endtime="20210322 17:45:36.820"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 17:45:36.821" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:45:36.821" endtime="20210322 17:45:36.822"></status>
</kw>
<status status="PASS" starttime="20210322 17:45:33.500" endtime="20210322 17:45:36.822"></status>
</kw>
<kw name="criar chave pix" library="pix_dict_create_entry">
<arguments>
<arg>type=email</arg>
<arg>value=${email_pix}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 17:45:36.824" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 17:45:36.823" endtime="20210322 17:45:36.824"></status>
</kw>
<status status="PASS" starttime="20210322 17:45:36.823" endtime="20210322 17:45:36.825"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${type}</arg>
</arguments>
<msg timestamp="20210322 17:45:36.825" level="INFO">${type} = email</msg>
<status status="PASS" starttime="20210322 17:45:36.825" endtime="20210322 17:45:36.825"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210322 17:45:36.826" level="INFO">${value} = jfogaca@ribeiro.net</msg>
<status status="PASS" starttime="20210322 17:45:36.826" endtime="20210322 17:45:36.826"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:45:36.827" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 17:45:36.827" endtime="20210322 17:45:36.827"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "${type}",</arg>
<arg>"value": "${value}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 17:45:36.828" level="INFO">${body} = { "type": "email", "value": "jfogaca@ribeiro.net" }</msg>
<status status="PASS" starttime="20210322 17:45:36.828" endtime="20210322 17:45:36.828"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:45:36.829" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/62c4aae83dd1462788d72a2755bacc85/accounts/e7ad23046c16439bb771fdec60d2cce4/entries, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "email", "value": "jfogaca@ribeiro.net" } 
json=None</msg>
<msg timestamp="20210322 17:45:37.531" level="INFO">${response} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20210322 17:45:36.828" endtime="20210322 17:45:37.532"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:45:37.534" level="INFO">{'id': 'b682e2698d574a9b836005379b78a885', 'status': 'waiting_ownership_verification', 'created_at': '2021-03-22T05:45:38.729', 'updated_at': '2021-03-22T05:45:38.729', 'key': {'value': 'jfogaca@ribeiro.net', 'type': 'email'}, 'account': {'id': 'e7ad23046c16439bb771fdec60d2cce4', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': '62c4aae83dd1462788d72a2755bacc85', 'owner': {'name': 'Holder de teste', 'national_registration': '45729103832', 'type': 'individual'}, 'routing_number': '001', 'number': '3952223962', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}, 'resource': 'pix.entry'}</msg>
<status status="PASS" starttime="20210322 17:45:37.533" endtime="20210322 17:45:37.535"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:45:37.537" level="INFO">d00986cebe0479cf</msg>
<status status="PASS" starttime="20210322 17:45:37.536" endtime="20210322 17:45:37.537"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 17:45:37.539" level="INFO">202</msg>
<status status="PASS" starttime="20210322 17:45:37.538" endtime="20210322 17:45:37.539"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:45:37.541" level="INFO">${response} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20210322 17:45:37.540" endtime="20210322 17:45:37.541"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${entry_external_key}</var>
</assign>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:45:37.543" endtime="20210322 17:45:37.544"></status>
</kw>
<msg timestamp="20210322 17:45:37.545" level="INFO">${entry_external_key} = b682e2698d574a9b836005379b78a885</msg>
<status status="PASS" starttime="20210322 17:45:37.542" endtime="20210322 17:45:37.545"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${entry_external_key}</arg>
</arguments>
<msg timestamp="20210322 17:45:37.546" level="INFO">${entry_external_key} = b682e2698d574a9b836005379b78a885</msg>
<status status="PASS" starttime="20210322 17:45:37.545" endtime="20210322 17:45:37.546"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["key"]["value"]}</arg>
</arguments>
<assign>
<var>${entry_key_value}</var>
</assign>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["key"]["value"]}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:45:37.548" endtime="20210322 17:45:37.549"></status>
</kw>
<msg timestamp="20210322 17:45:37.549" level="INFO">${entry_key_value} = jfogaca@ribeiro.net</msg>
<status status="PASS" starttime="20210322 17:45:37.547" endtime="20210322 17:45:37.549"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${entry_key_value}</arg>
</arguments>
<msg timestamp="20210322 17:45:37.551" level="INFO">${entry_key_value} = jfogaca@ribeiro.net</msg>
<status status="PASS" starttime="20210322 17:45:37.550" endtime="20210322 17:45:37.551"></status>
</kw>
<status status="PASS" starttime="20210322 17:45:36.822" endtime="20210322 17:45:37.551"></status>
</kw>
<kw name="validar chave pix" library="asserts">
<arguments>
<arg>key_status=waiting_ownership_verification</arg>
<arg>key_type=${type}</arg>
<arg>key_value=${value}</arg>
<arg>account_external_key=${account_external_key}</arg>
<arg>marketplace_external_key=${marketplace_external_key}</arg>
<arg>holder_external_key=${holder_external_key}</arg>
<arg>account_number=${account_number}</arg>
<arg>account_routing_number=${account_routing_number}</arg>
<arg>account_type=CACC</arg>
<arg>owner_key_name=${holder_name}</arg>
<arg>national_registration=${national_registration}</arg>
<arg>holder_type=${holder_type}</arg>
<arg>psp_code=19468242</arg>
<arg>psp_name=Zoop Tecnologia e Meios de Pagamento S.A.</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar status da chave</arg>
</arguments>
<msg timestamp="20210322 17:45:37.553" level="INFO">Validar status da chave</msg>
<status status="PASS" starttime="20210322 17:45:37.553" endtime="20210322 17:45:37.554"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["status"]}</arg>
<arg>${key_status}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:45:37.554" endtime="20210322 17:45:37.555"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando Tipo da chave PIX</arg>
</arguments>
<msg timestamp="20210322 17:45:37.556" level="INFO">Validando Tipo da chave PIX</msg>
<status status="PASS" starttime="20210322 17:45:37.555" endtime="20210322 17:45:37.556"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["key"]["type"]}</arg>
<arg>${key_type}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:45:37.556" endtime="20210322 17:45:37.557"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando Valor da chave PIX</arg>
</arguments>
<msg timestamp="20210322 17:45:37.558" level="INFO">Validando Valor da chave PIX</msg>
<status status="PASS" starttime="20210322 17:45:37.557" endtime="20210322 17:45:37.558"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${type}' == 'evp'</arg>
<arg>Should Not Be Empty</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' != 'evp'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${key_value}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${key_value}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:45:37.559" endtime="20210322 17:45:37.559"></status>
</kw>
<status status="PASS" starttime="20210322 17:45:37.558" endtime="20210322 17:45:37.560"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando dados da conta</arg>
</arguments>
<msg timestamp="20210322 17:45:37.560" level="INFO">Validando dados da conta</msg>
<status status="PASS" starttime="20210322 17:45:37.560" endtime="20210322 17:45:37.560"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["id"]}</arg>
<arg>${account_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:45:37.560" endtime="20210322 17:45:37.561"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["marketplace"]}</arg>
<arg>${marketplace_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:45:37.561" endtime="20210322 17:45:37.562"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["holder"]}</arg>
<arg>${holder_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:45:37.562" endtime="20210322 17:45:37.563"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["number"]}</arg>
<arg>${account_number}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:45:37.563" endtime="20210322 17:45:37.563"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["routing_number"]}</arg>
<arg>${account_routing_number}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:45:37.564" endtime="20210322 17:45:37.564"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["type"]}</arg>
<arg>${account_type}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:45:37.565" endtime="20210322 17:45:37.565"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar Proprietário da Account Owner</arg>
</arguments>
<msg timestamp="20210322 17:45:37.566" level="INFO">Validar Proprietário da Account Owner</msg>
<status status="PASS" starttime="20210322 17:45:37.565" endtime="20210322 17:45:37.566"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["account"]["owner"]["name"]}</arg>
<arg>${owner_key_name}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:45:37.566" endtime="20210322 17:45:37.566"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar national_registration da Account Owner</arg>
</arguments>
<msg timestamp="20210322 17:45:37.567" level="INFO">Validar national_registration da Account Owner</msg>
<status status="PASS" starttime="20210322 17:45:37.567" endtime="20210322 17:45:37.567"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["account"]["owner"]["national_registration"]}</arg>
<arg>${national_registration}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:45:37.568" endtime="20210322 17:45:37.568"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar Holder Type do Account Owner</arg>
</arguments>
<msg timestamp="20210322 17:45:37.568" level="INFO">Validar Holder Type do Account Owner</msg>
<status status="PASS" starttime="20210322 17:45:37.568" endtime="20210322 17:45:37.569"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["account"]["owner"]["type"]}</arg>
<arg>${holder_type}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:45:37.569" endtime="20210322 17:45:37.569"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar PSP</arg>
</arguments>
<msg timestamp="20210322 17:45:37.570" level="INFO">Validar PSP</msg>
<status status="PASS" starttime="20210322 17:45:37.570" endtime="20210322 17:45:37.570"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["psp"]["code"]}</arg>
<arg>${psp_code}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:45:37.571" endtime="20210322 17:45:37.571"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["psp"]["name"]}</arg>
<arg>${psp_name}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:45:37.572" endtime="20210322 17:45:37.572"></status>
</kw>
<status status="PASS" starttime="20210322 17:45:37.551" endtime="20210322 17:45:37.572"></status>
</kw>
<kw name="excluir chave pix" library="pix_dict_delete_entry">
<arguments>
<arg>holder_external_key=${holder_external_key}</arg>
<arg>account_external_key=${account_external_key}</arg>
<arg>entry_external_key=${entry_external_key}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 17:45:37.574" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 17:45:37.574" endtime="20210322 17:45:37.575"></status>
</kw>
<status status="PASS" starttime="20210322 17:45:37.573" endtime="20210322 17:45:37.575"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:45:37.575" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 17:45:37.575" endtime="20210322 17:45:37.575"></status>
</kw>
<kw name="Delete Request" library="RequestsLibrary">
<doc>Send a DELETE request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries/${entry_external_key}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:45:37.577" level="INFO">DELETE Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/62c4aae83dd1462788d72a2755bacc85/accounts/e7ad23046c16439bb771fdec60d2cce4/entries/b682e2698d574a9b836005379b78a885, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data=None 
json=None</msg>
<msg timestamp="20210322 17:45:38.233" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 17:45:37.576" endtime="20210322 17:45:38.233"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:45:38.235" level="INFO">{'message': 'Entry removed successfully'}</msg>
<status status="PASS" starttime="20210322 17:45:38.234" endtime="20210322 17:45:38.236"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:45:38.238" level="INFO">6e77a8c97c758fb8</msg>
<status status="PASS" starttime="20210322 17:45:38.236" endtime="20210322 17:45:38.238"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 17:45:38.240" level="INFO">200</msg>
<status status="PASS" starttime="20210322 17:45:38.239" endtime="20210322 17:45:38.240"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:45:38.242" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 17:45:38.241" endtime="20210322 17:45:38.242"></status>
</kw>
<status status="PASS" starttime="20210322 17:45:37.572" endtime="20210322 17:45:38.243"></status>
</kw>
<kw name="validar exclusão da chave pix" library="asserts">
<arguments>
<arg>message=Entry removed successfully</arg>
</arguments>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 17:45:38.245" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:45:38.245" endtime="20210322 17:45:38.246"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["message"]}</arg>
<arg>${message}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:45:38.246" endtime="20210322 17:45:38.247"></status>
</kw>
<status status="PASS" starttime="20210322 17:45:38.244" endtime="20210322 17:45:38.248"></status>
</kw>
<doc>Fluxo Básico</doc>
<tags>
<tag>regression_test</tag>
<tag>smoke_test</tag>
</tags>
<status status="PASS" starttime="20210322 17:45:33.497" endtime="20210322 17:45:38.248" critical="yes"></status>
</test>
<test id="s1-s1-s4-t4" name="Cenário: Excluir Chave de Endereçamento do tipo CPF">
<kw name="criar holder individual ativo" library="accreditation_create_holder_active">
<kw name="conectar accreditation" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accreditation</arg>
<arg>url=${accreditation_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 17:45:38.252" level="INFO">Creating Session using : alias=accreditation, url=https://banking-accreditation-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 17:45:38.251" endtime="20210322 17:45:38.252"></status>
</kw>
<status status="PASS" starttime="20210322 17:45:38.250" endtime="20210322 17:45:38.252"></status>
</kw>
<kw name="Cpf" library="FakerLibrary">
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 17:45:38.253" level="INFO">${national_registration} = 267.804.351-71</msg>
<status status="PASS" starttime="20210322 17:45:38.253" endtime="20210322 17:45:38.253"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${national_registration}</arg>
<arg>.</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 17:45:38.254" level="INFO">${national_registration} = 267804351-71</msg>
<status status="PASS" starttime="20210322 17:45:38.254" endtime="20210322 17:45:38.254"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${national_registration}</arg>
<arg>-</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 17:45:38.255" level="INFO">${national_registration} = 26780435171</msg>
<status status="PASS" starttime="20210322 17:45:38.255" endtime="20210322 17:45:38.255"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${national_registration}</arg>
</arguments>
<msg timestamp="20210322 17:45:38.256" level="INFO">${national_registration} = 26780435171</msg>
<status status="PASS" starttime="20210322 17:45:38.256" endtime="20210322 17:45:38.256"></status>
</kw>
<kw name="Rg" library="FakerLibrary">
<doc>Brazilian RG, return plain numbers.
Check:  https://www.ngmatematica.com/2014/02/como-determinar-o-digito-verificador-do.html</doc>
<assign>
<var>${identity_card}</var>
</assign>
<msg timestamp="20210322 17:45:38.257" level="INFO">${identity_card} = 286047135</msg>
<status status="PASS" starttime="20210322 17:45:38.257" endtime="20210322 17:45:38.257"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${identity_card}</arg>
</arguments>
<msg timestamp="20210322 17:45:38.258" level="INFO">${identity_card} = 286047135</msg>
<status status="PASS" starttime="20210322 17:45:38.258" endtime="20210322 17:45:38.259"></status>
</kw>
<kw name="criar holder individual" library="accreditation_post_holder_individual">
<arguments>
<arg>holder_type=individual</arg>
<arg>holder_name=${holder_name}</arg>
<arg>email=${email}</arg>
<arg>national_registration=${national_registration}</arg>
<arg>revenue=${revenue}</arg>
<arg>birthday=${birthday}</arg>
<arg>mothers_name=${mothers_name}</arg>
<arg>identity_card=${identity_card}</arg>
<arg>pep=false</arg>
<arg>cbo=${cbo}</arg>
</arguments>
<kw name="conectar accreditation" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accreditation</arg>
<arg>url=${accreditation_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 17:45:38.261" level="INFO">Creating Session using : alias=accreditation, url=https://banking-accreditation-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 17:45:38.261" endtime="20210322 17:45:38.262"></status>
</kw>
<status status="PASS" starttime="20210322 17:45:38.260" endtime="20210322 17:45:38.262"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_type}</arg>
</arguments>
<msg timestamp="20210322 17:45:38.263" level="INFO">${holder_type} = individual</msg>
<status status="PASS" starttime="20210322 17:45:38.262" endtime="20210322 17:45:38.263"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_name}</arg>
</arguments>
<msg timestamp="20210322 17:45:38.263" level="INFO">${holder_name} = Holder de teste</msg>
<status status="PASS" starttime="20210322 17:45:38.263" endtime="20210322 17:45:38.264"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:45:38.265" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 17:45:38.264" endtime="20210322 17:45:38.265"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "${holder_type}",</arg>
<arg>"name": "${holder_name}",</arg>
<arg>"email": "${email}",</arg>
<arg>"national_registration": "${national_registration}",</arg>
<arg>"revenue": ${revenue},</arg>
<arg>"birthday": "${birthday}",</arg>
<arg>"mothers_name": "${mothers_name}",</arg>
<arg>"identity_card": "${identity_card}",</arg>
<arg>"pep": false,</arg>
<arg>"cbo": ${cbo}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 17:45:38.266" level="INFO">${body} = { "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "26780435171", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder",...</msg>
<status status="PASS" starttime="20210322 17:45:38.265" endtime="20210322 17:45:38.266"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:45:38.267" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "26780435171", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder", "identity_card": "286047135", "pep": false, "cbo": 821450 } 
json=None</msg>
<msg timestamp="20210322 17:45:38.953" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:45:38.266" endtime="20210322 17:45:38.954"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:45:38.956" level="INFO">{'id': '058e76c9b688449c8277da7ed09de0ee', 'name': 'Holder de teste', 'revenue': 5500.0, 'email': 'teste@teste.com.br', 'status': 'waiting_info_and_documents', 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'marketplace_name': 'Marketplace de Teste', 'created_at': '2021-03-22T17:45:40.135046', 'updated_at': '2021-03-22T17:45:40.135047', 'type': 'individual', 'national_registration': '26780435171', 'birthday': '1988-04-23', 'mothers_name': 'Mãe do Holder', 'identity_card': '286047135', 'pep': False, 'cbo': '821450', '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/058e76c9b688449c8277da7ed09de0ee', 'type': 'GET'}, 'phones': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/058e76c9b688449c8277da7ed09de0ee/phones', 'type': 'GET'}, 'addresses': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/058e76c9b688449c8277da7ed09de0ee/addresses', 'type': 'GET'}, 'documents': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/058e76c9b688449c8277da7ed09de0ee/documents', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 17:45:38.955" endtime="20210322 17:45:38.957"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:45:38.959" level="INFO">5bfa44f1c634983d</msg>
<status status="PASS" starttime="20210322 17:45:38.958" endtime="20210322 17:45:38.959"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${body}</arg>
</arguments>
<msg timestamp="20210322 17:45:38.961" level="INFO">{ "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "26780435171", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder", "identity_card": "286047135", "pep": false, "cbo": 821450 }</msg>
<status status="PASS" starttime="20210322 17:45:38.960" endtime="20210322 17:45:38.962"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:45:38.964" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:45:38.963" endtime="20210322 17:45:38.964"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${holder_external_key}</var>
</assign>
<msg timestamp="20210322 17:45:38.967" level="INFO">${holder_external_key} = 058e76c9b688449c8277da7ed09de0ee</msg>
<status status="PASS" starttime="20210322 17:45:38.965" endtime="20210322 17:45:38.967"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_external_key}</arg>
</arguments>
<msg timestamp="20210322 17:45:38.969" level="INFO">${holder_external_key} = 058e76c9b688449c8277da7ed09de0ee</msg>
<status status="PASS" starttime="20210322 17:45:38.968" endtime="20210322 17:45:38.969"></status>
</kw>
<status status="PASS" starttime="20210322 17:45:38.259" endtime="20210322 17:45:38.970"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_name}</arg>
</arguments>
<msg timestamp="20210322 17:45:38.971" level="INFO">${holder_name} = Holder de teste</msg>
<status status="PASS" starttime="20210322 17:45:38.970" endtime="20210322 17:45:38.971"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 17:45:38.972" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:45:38.971" endtime="20210322 17:45:38.972"></status>
</kw>
<kw name="criar holder phone" library="accreditation_post_holder_phone">
<arguments>
<arg>21</arg>
<arg>51</arg>
<arg>996221236</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:45:38.975" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 17:45:38.974" endtime="20210322 17:45:38.975"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"area_code": "${phone_area_code}",</arg>
<arg>"country_code": "${phone_country_code}",</arg>
<arg>"number": "${phone_number}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 17:45:38.976" level="INFO">${body} = { "area_code": "21", "country_code": "51", "number": "996221236" }</msg>
<status status="PASS" starttime="20210322 17:45:38.975" endtime="20210322 17:45:38.976"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/phones</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:45:38.978" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/058e76c9b688449c8277da7ed09de0ee/phones, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "area_code": "21", "country_code": "51", "number": "996221236" } 
json=None</msg>
<msg timestamp="20210322 17:45:39.240" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:45:38.977" endtime="20210322 17:45:39.241"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:45:39.244" level="INFO">{'id': '18a01a18eb0744eeac1047ed92d107f6', 'area_code': '21', 'country_code': '51', 'number': '996221236', 'main': True, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/058e76c9b688449c8277da7ed09de0ee/phones/18a01a18eb0744eeac1047ed92d107f6', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/058e76c9b688449c8277da7ed09de0ee', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 17:45:39.242" endtime="20210322 17:45:39.244"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:45:39.246" level="INFO">2f7381e7e86c5bb3</msg>
<status status="PASS" starttime="20210322 17:45:39.245" endtime="20210322 17:45:39.246"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:45:39.248" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:45:39.247" endtime="20210322 17:45:39.248"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${phone_external_key}</var>
</assign>
<msg timestamp="20210322 17:45:39.250" level="INFO">${phone_external_key} = 18a01a18eb0744eeac1047ed92d107f6</msg>
<status status="PASS" starttime="20210322 17:45:39.248" endtime="20210322 17:45:39.250"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${phone_external_key}</arg>
</arguments>
<msg timestamp="20210322 17:45:39.251" level="INFO">${phone_external_key} = 18a01a18eb0744eeac1047ed92d107f6</msg>
<status status="PASS" starttime="20210322 17:45:39.250" endtime="20210322 17:45:39.251"></status>
</kw>
<status status="PASS" starttime="20210322 17:45:38.973" endtime="20210322 17:45:39.251"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 17:45:39.252" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:45:39.252" endtime="20210322 17:45:39.252"></status>
</kw>
<kw name="criar holder address" library="accreditation_post_holder_address">
<arguments>
<arg>Rio de Janeiro</arg>
<arg>Rio de Janeiro</arg>
<arg>Brasil</arg>
<arg>Bairro de Testes</arg>
<arg>Rua de Testes</arg>
<arg>90</arg>
<arg>apto 200</arg>
<arg>21550987</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:45:39.254" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 17:45:39.253" endtime="20210322 17:45:39.254"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"city": "${city}",</arg>
<arg>"state": "${state}",</arg>
<arg>"country": "${country}",</arg>
<arg>"neighborhood": "${neighborhood}",</arg>
<arg>"street": "${street}",</arg>
<arg>"number": "${number}",</arg>
<arg>"complement": "${complement}",</arg>
<arg>"postal_code": "${postal_code}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 17:45:39.255" level="INFO">${body} = { "city": "Rio de Janeiro", "state": "Rio de Janeiro", "country": "Brasil", "neighborhood": "Bairro de Testes", "street": "Rua de Testes", "number": "90", "complement": "apto 200", "postal_code": "215...</msg>
<status status="PASS" starttime="20210322 17:45:39.254" endtime="20210322 17:45:39.256"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/addresses</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:45:39.257" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/058e76c9b688449c8277da7ed09de0ee/addresses, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "city": "Rio de Janeiro", "state": "Rio de Janeiro", "country": "Brasil", "neighborhood": "Bairro de Testes", "street": "Rua de Testes", "number": "90", "complement": "apto 200", "postal_code": "21550987" } 
json=None</msg>
<msg timestamp="20210322 17:45:39.470" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:45:39.256" endtime="20210322 17:45:39.470"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:45:39.471" level="INFO">{'id': '3e32d54e339d451599e21cc127143390', 'street': 'Rua de Testes', 'number': '90', 'city': 'Rio de Janeiro', 'complement': 'apto 200', 'state': 'Rio de Janeiro', 'neighborhood': 'Bairro de Testes', 'postal_code': '21550987', 'country': 'Brasil', 'main': True, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/058e76c9b688449c8277da7ed09de0ee/addresses/3e32d54e339d451599e21cc127143390', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/058e76c9b688449c8277da7ed09de0ee', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 17:45:39.471" endtime="20210322 17:45:39.472"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:45:39.473" level="INFO">4a2e48feaac53634</msg>
<status status="PASS" starttime="20210322 17:45:39.472" endtime="20210322 17:45:39.473"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:45:39.475" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:45:39.474" endtime="20210322 17:45:39.475"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${address_external_key}</var>
</assign>
<msg timestamp="20210322 17:45:39.477" level="INFO">${address_external_key} = 3e32d54e339d451599e21cc127143390</msg>
<status status="PASS" starttime="20210322 17:45:39.476" endtime="20210322 17:45:39.477"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${address_external_key}</arg>
</arguments>
<msg timestamp="20210322 17:45:39.478" level="INFO">${address_external_key} = 3e32d54e339d451599e21cc127143390</msg>
<status status="PASS" starttime="20210322 17:45:39.478" endtime="20210322 17:45:39.478"></status>
</kw>
<status status="PASS" starttime="20210322 17:45:39.252" endtime="20210322 17:45:39.478"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 17:45:39.479" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:45:39.479" endtime="20210322 17:45:39.480"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>SELFIE</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:45:39.481" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 17:45:39.481" endtime="20210322 17:45:39.481"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 17:45:39.482" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 17:45:39.484" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 17:45:39.482" endtime="20210322 17:45:39.485"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:45:39.486" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/058e76c9b688449c8277da7ed09de0ee/documents?type=SELFIE, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 17:45:39.744" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:45:39.485" endtime="20210322 17:45:39.744"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:45:39.745" level="INFO">{'id': 'e616d4c41bac4cf885bc5700a3ec49cc', 'document_type': 'selfie', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/058e76c9b688449c8277da7ed09de0ee/documents/e616d4c41bac4cf885bc5700a3ec49cc', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/058e76c9b688449c8277da7ed09de0ee', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/058e76c9b688449c8277da7ed09de0ee/documents/e616d4c41bac4cf885bc5700a3ec49cc/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 17:45:39.744" endtime="20210322 17:45:39.745"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:45:39.746" level="INFO">2af64ccc67a97726</msg>
<status status="PASS" starttime="20210322 17:45:39.745" endtime="20210322 17:45:39.746"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:45:39.746" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:45:39.746" endtime="20210322 17:45:39.746"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 17:45:39.747" level="INFO">${document_external_key} = e616d4c41bac4cf885bc5700a3ec49cc</msg>
<status status="PASS" starttime="20210322 17:45:39.747" endtime="20210322 17:45:39.747"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 17:45:39.748" level="INFO">${document_external_key} = e616d4c41bac4cf885bc5700a3ec49cc</msg>
<status status="PASS" starttime="20210322 17:45:39.748" endtime="20210322 17:45:39.748"></status>
</kw>
<status status="PASS" starttime="20210322 17:45:39.480" endtime="20210322 17:45:39.748"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 17:45:39.749" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:45:39.748" endtime="20210322 17:45:39.749"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>RG_FRENTE</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:45:39.750" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 17:45:39.749" endtime="20210322 17:45:39.750"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 17:45:39.750" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 17:45:39.752" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 17:45:39.750" endtime="20210322 17:45:39.752"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:45:39.752" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/058e76c9b688449c8277da7ed09de0ee/documents?type=RG_FRENTE, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 17:45:40.057" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:45:39.752" endtime="20210322 17:45:40.057"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:45:40.060" level="INFO">{'id': 'baf1d4b8f2af4b299a379bae07c849c8', 'document_type': 'rg_frente', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/058e76c9b688449c8277da7ed09de0ee/documents/baf1d4b8f2af4b299a379bae07c849c8', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/058e76c9b688449c8277da7ed09de0ee', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/058e76c9b688449c8277da7ed09de0ee/documents/baf1d4b8f2af4b299a379bae07c849c8/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 17:45:40.058" endtime="20210322 17:45:40.060"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:45:40.062" level="INFO">2d2ce40df5a94fbb</msg>
<status status="PASS" starttime="20210322 17:45:40.061" endtime="20210322 17:45:40.063"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:45:40.065" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:45:40.064" endtime="20210322 17:45:40.065"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 17:45:40.067" level="INFO">${document_external_key} = baf1d4b8f2af4b299a379bae07c849c8</msg>
<status status="PASS" starttime="20210322 17:45:40.066" endtime="20210322 17:45:40.067"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 17:45:40.069" level="INFO">${document_external_key} = baf1d4b8f2af4b299a379bae07c849c8</msg>
<status status="PASS" starttime="20210322 17:45:40.068" endtime="20210322 17:45:40.070"></status>
</kw>
<status status="PASS" starttime="20210322 17:45:39.749" endtime="20210322 17:45:40.070"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 17:45:40.071" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:45:40.070" endtime="20210322 17:45:40.072"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>RG_VERSO</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:45:40.074" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 17:45:40.072" endtime="20210322 17:45:40.074"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 17:45:40.074" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 17:45:40.077" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 17:45:40.074" endtime="20210322 17:45:40.077"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:45:40.078" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/058e76c9b688449c8277da7ed09de0ee/documents?type=RG_VERSO, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 17:45:40.378" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:45:40.077" endtime="20210322 17:45:40.378"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:45:40.380" level="INFO">{'id': '6e64a0b1670745b7bfc159509dd2f6a6', 'document_type': 'rg_verso', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/058e76c9b688449c8277da7ed09de0ee/documents/6e64a0b1670745b7bfc159509dd2f6a6', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/058e76c9b688449c8277da7ed09de0ee', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/058e76c9b688449c8277da7ed09de0ee/documents/6e64a0b1670745b7bfc159509dd2f6a6/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 17:45:40.379" endtime="20210322 17:45:40.380"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:45:40.381" level="INFO">bb6afec318203337</msg>
<status status="PASS" starttime="20210322 17:45:40.381" endtime="20210322 17:45:40.381"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:45:40.383" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:45:40.382" endtime="20210322 17:45:40.383"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 17:45:40.384" level="INFO">${document_external_key} = 6e64a0b1670745b7bfc159509dd2f6a6</msg>
<status status="PASS" starttime="20210322 17:45:40.383" endtime="20210322 17:45:40.384"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 17:45:40.385" level="INFO">${document_external_key} = 6e64a0b1670745b7bfc159509dd2f6a6</msg>
<status status="PASS" starttime="20210322 17:45:40.385" endtime="20210322 17:45:40.386"></status>
</kw>
<status status="PASS" starttime="20210322 17:45:40.072" endtime="20210322 17:45:40.386"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 17:45:40.387" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:45:40.386" endtime="20210322 17:45:40.388"></status>
</kw>
<kw name="solicitar aprovação do holder" library="accreditation_request_approval">
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:45:40.389" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 17:45:40.389" endtime="20210322 17:45:40.389"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/approval</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:45:40.391" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/058e76c9b688449c8277da7ed09de0ee/approval, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data=None 
json=None</msg>
<msg timestamp="20210322 17:45:40.675" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 17:45:40.390" endtime="20210322 17:45:40.675"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:45:40.677" level="INFO">{'message': 'Approval request accepted successfully. Processing analysis'}</msg>
<status status="PASS" starttime="20210322 17:45:40.676" endtime="20210322 17:45:40.678"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:45:40.680" level="INFO">9080f470785a229c</msg>
<status status="PASS" starttime="20210322 17:45:40.678" endtime="20210322 17:45:40.680"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:45:40.682" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 17:45:40.681" endtime="20210322 17:45:40.683"></status>
</kw>
<status status="PASS" starttime="20210322 17:45:40.388" endtime="20210322 17:45:40.683"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 17:45:40.685" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:45:40.684" endtime="20210322 17:45:40.686"></status>
</kw>
<kw name="recebendo notificação de aprovação" library="accreditation_risk_notification">
<kw name="Uuid 4" library="FakerLibrary">
<doc>Generates a random UUID4 string.
:param cast_to: Specify what type the UUID should be cast to. Default is `str`
:type cast_to: callable</doc>
<assign>
<var>${assessment_id}</var>
</assign>
<msg timestamp="20210322 17:45:40.689" level="INFO">${assessment_id} = 88cb464b-5c84-4a5a-bcb4-3b5073b53f9f</msg>
<status status="PASS" starttime="20210322 17:45:40.688" endtime="20210322 17:45:40.689"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>year</arg>
</arguments>
<assign>
<var>${year}</var>
</assign>
<msg timestamp="20210322 17:45:40.691" level="INFO">${year} = 2021</msg>
<status status="PASS" starttime="20210322 17:45:40.690" endtime="20210322 17:45:40.691"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>month</arg>
</arguments>
<assign>
<var>${month}</var>
</assign>
<msg timestamp="20210322 17:45:40.692" level="INFO">${month} = 03</msg>
<status status="PASS" starttime="20210322 17:45:40.691" endtime="20210322 17:45:40.692"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>day</arg>
</arguments>
<assign>
<var>${day}</var>
</assign>
<msg timestamp="20210322 17:45:40.693" level="INFO">${day} = 22</msg>
<status status="PASS" starttime="20210322 17:45:40.693" endtime="20210322 17:45:40.694"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:45:40.695" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 17:45:40.694" endtime="20210322 17:45:40.695"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "risk.assessment.result",</arg>
<arg>"resource": "business.holder",</arg>
<arg>"created_at": "${year}-${month}-${day} 15:28:56.747Z",</arg>
<arg>"marketplace_id": "${marketplace_external_key}",</arg>
<arg>"object": {</arg>
<arg>"result": "APPROVED",</arg>
<arg>"holder_id": "${holder_external_key}",</arg>
<arg>"applicant_id": "${application_external_key}",</arg>
<arg>"assessment_id": "${assessment_id}"</arg>
<arg>}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 17:45:40.697" level="INFO">${body} = { "type": "risk.assessment.result", "resource": "business.holder", "created_at": "2021-03-22 15:28:56.747Z", "marketplace_id": "f71a8951368a4cc085cf7875ff44e61c", "object": { "result": "APPROVED", "ho...</msg>
<status status="PASS" starttime="20210322 17:45:40.695" endtime="20210322 17:45:40.697"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/admin/internal_operation/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/registration/approval</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:45:40.699" level="INFO">POST Request using : uri=/admin/internal_operation/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/058e76c9b688449c8277da7ed09de0ee/registration/approval, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "risk.assessment.result", "resource": "business.holder", "created_at": "2021-03-22 15:28:56.747Z", "marketplace_id": "f71a8951368a4cc085cf7875ff44e61c", "object": { "result": "APPROVED", "holder_id": "058e76c9b688449c8277da7ed09de0ee", "applicant_id": "bcc25a6751c14b52af1340d40dba78c5", "assessment_id": "88cb464b-5c84-4a5a-bcb4-3b5073b53f9f" } } 
json=None</msg>
<msg timestamp="20210322 17:45:40.898" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 17:45:40.698" endtime="20210322 17:45:40.898"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:45:40.901" level="INFO">{'message': 'Holder approved successfully'}</msg>
<status status="PASS" starttime="20210322 17:45:40.899" endtime="20210322 17:45:40.901"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:45:40.903" level="INFO">50ccc4909040fb83</msg>
<status status="PASS" starttime="20210322 17:45:40.902" endtime="20210322 17:45:40.904"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:45:40.906" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 17:45:40.905" endtime="20210322 17:45:40.906"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 17:45:40.908" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:45:40.907" endtime="20210322 17:45:40.908"></status>
</kw>
<status status="PASS" starttime="20210322 17:45:40.686" endtime="20210322 17:45:40.908"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 17:45:40.910" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:45:40.909" endtime="20210322 17:45:40.910"></status>
</kw>
<kw name="buscar account por holder" library="accounts_get_accounts_by_holder">
<kw name="conectar accounts" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accounts</arg>
<arg>url=${account_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 17:45:40.913" level="INFO">Creating Session using : alias=accounts, url=https://banking-accounts-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 17:45:40.912" endtime="20210322 17:45:40.914"></status>
</kw>
<status status="PASS" starttime="20210322 17:45:40.911" endtime="20210322 17:45:40.915"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accounts</arg>
<arg>/marketplaces/${marketplace_external_key}/holders/${holder_external_key}/accounts</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:45:40.916" level="INFO">GET Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/holders/058e76c9b688449c8277da7ed09de0ee/accounts, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 17:45:41.575" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 17:45:40.915" endtime="20210322 17:45:41.575"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:45:41.578" level="INFO">{'items': [{'id': '55d04686f68b42159f16ee92174230a2', 'holder': '058e76c9b688449c8277da7ed09de0ee', 'balance': '0.00', 'currency': 'BRL', 'routing_number': '001', 'number': '6256918475', 'status': 'active', 'metadata': {}, 'created_at': '2021-03-22T20:45:42.077574', 'updated_at': '2021-03-22T20:45:42.077574', 'primary': True, 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'uri': '/v2/marketplaces/f71a8951368a4cc085cf7875ff44e61c/accounts/55d04686f68b42159f16ee92174230a2', 'resource': 'payment_account'}], 'has_more': False, 'limit': 100, 'total_pages': 1, 'page': 1, 'offset': 0, 'total': '1', 'query_count': '1'}</msg>
<status status="PASS" starttime="20210322 17:45:41.576" endtime="20210322 17:45:41.578"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:45:41.581" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 17:45:41.579" endtime="20210322 17:45:41.581"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["id"]}</arg>
</arguments>
<assign>
<var>${account_external_key}</var>
</assign>
<msg timestamp="20210322 17:45:41.584" level="INFO">${account_external_key} = 55d04686f68b42159f16ee92174230a2</msg>
<status status="PASS" starttime="20210322 17:45:41.582" endtime="20210322 17:45:41.584"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_external_key}</arg>
</arguments>
<msg timestamp="20210322 17:45:41.586" level="INFO">${account_external_key} = 55d04686f68b42159f16ee92174230a2</msg>
<status status="PASS" starttime="20210322 17:45:41.586" endtime="20210322 17:45:41.587"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["number"]}</arg>
</arguments>
<assign>
<var>${account_number}</var>
</assign>
<msg timestamp="20210322 17:45:41.589" level="INFO">${account_number} = 6256918475</msg>
<status status="PASS" starttime="20210322 17:45:41.588" endtime="20210322 17:45:41.589"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_number}</arg>
</arguments>
<msg timestamp="20210322 17:45:41.590" level="INFO">${account_number} = 6256918475</msg>
<status status="PASS" starttime="20210322 17:45:41.589" endtime="20210322 17:45:41.590"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["routing_number"]}</arg>
</arguments>
<assign>
<var>${account_routing_number}</var>
</assign>
<msg timestamp="20210322 17:45:41.591" level="INFO">${account_routing_number} = 001</msg>
<status status="PASS" starttime="20210322 17:45:41.590" endtime="20210322 17:45:41.591"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_routing_number}</arg>
</arguments>
<msg timestamp="20210322 17:45:41.593" level="INFO">${account_routing_number} = 001</msg>
<status status="PASS" starttime="20210322 17:45:41.592" endtime="20210322 17:45:41.593"></status>
</kw>
<status status="PASS" starttime="20210322 17:45:40.910" endtime="20210322 17:45:41.593"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 17:45:41.593" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:45:41.593" endtime="20210322 17:45:41.594"></status>
</kw>
<status status="PASS" starttime="20210322 17:45:38.250" endtime="20210322 17:45:41.594"></status>
</kw>
<kw name="criar chave pix" library="pix_dict_create_entry">
<arguments>
<arg>type=national_registration</arg>
<arg>value=${EMPTY}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 17:45:41.597" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 17:45:41.596" endtime="20210322 17:45:41.597"></status>
</kw>
<status status="PASS" starttime="20210322 17:45:41.595" endtime="20210322 17:45:41.597"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${type}</arg>
</arguments>
<msg timestamp="20210322 17:45:41.597" level="INFO">${type} = national_registration</msg>
<status status="PASS" starttime="20210322 17:45:41.597" endtime="20210322 17:45:41.597"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210322 17:45:41.598" level="INFO">${value} = </msg>
<status status="PASS" starttime="20210322 17:45:41.598" endtime="20210322 17:45:41.598"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:45:41.599" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 17:45:41.598" endtime="20210322 17:45:41.599"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "${type}",</arg>
<arg>"value": "${value}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 17:45:41.599" level="INFO">${body} = { "type": "national_registration", "value": "" }</msg>
<status status="PASS" starttime="20210322 17:45:41.599" endtime="20210322 17:45:41.600"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:45:41.601" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/058e76c9b688449c8277da7ed09de0ee/accounts/55d04686f68b42159f16ee92174230a2/entries, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "national_registration", "value": "" } 
json=None</msg>
<msg timestamp="20210322 17:45:43.111" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:45:41.600" endtime="20210322 17:45:43.111"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:45:43.112" level="INFO">{'id': '6cc2e5ae7c0b4c35960700bae274aad2', 'status': 'active', 'created_at': '2021-03-22T05:45:43.463', 'updated_at': '2021-03-22T05:45:43.463', 'key': {'value': '26780435171', 'type': 'national_registration'}, 'account': {'id': '55d04686f68b42159f16ee92174230a2', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': '058e76c9b688449c8277da7ed09de0ee', 'owner': {'name': 'Holder de teste', 'national_registration': '26780435171', 'type': 'individual'}, 'routing_number': '001', 'number': '6256918475', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}, 'resource': 'pix.entry'}</msg>
<status status="PASS" starttime="20210322 17:45:43.111" endtime="20210322 17:45:43.112"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:45:43.114" level="INFO">c623c0947fe84f7f</msg>
<status status="PASS" starttime="20210322 17:45:43.113" endtime="20210322 17:45:43.114"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 17:45:43.115" level="INFO">201</msg>
<status status="PASS" starttime="20210322 17:45:43.114" endtime="20210322 17:45:43.115"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:45:43.116" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:45:43.116" endtime="20210322 17:45:43.117"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${entry_external_key}</var>
</assign>
<msg timestamp="20210322 17:45:43.118" level="INFO">${entry_external_key} = 6cc2e5ae7c0b4c35960700bae274aad2</msg>
<status status="PASS" starttime="20210322 17:45:43.117" endtime="20210322 17:45:43.118"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${entry_external_key}</arg>
</arguments>
<msg timestamp="20210322 17:45:43.119" level="INFO">${entry_external_key} = 6cc2e5ae7c0b4c35960700bae274aad2</msg>
<status status="PASS" starttime="20210322 17:45:43.119" endtime="20210322 17:45:43.119"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["key"]["value"]}</arg>
</arguments>
<assign>
<var>${entry_key_value}</var>
</assign>
<msg timestamp="20210322 17:45:43.120" level="INFO">${entry_key_value} = 26780435171</msg>
<status status="PASS" starttime="20210322 17:45:43.119" endtime="20210322 17:45:43.120"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${entry_key_value}</arg>
</arguments>
<msg timestamp="20210322 17:45:43.121" level="INFO">${entry_key_value} = 26780435171</msg>
<status status="PASS" starttime="20210322 17:45:43.121" endtime="20210322 17:45:43.121"></status>
</kw>
<status status="PASS" starttime="20210322 17:45:41.594" endtime="20210322 17:45:43.122"></status>
</kw>
<kw name="validar chave pix" library="asserts">
<arguments>
<arg>key_status=active</arg>
<arg>key_type=${type}</arg>
<arg>key_value=${national_registration}</arg>
<arg>account_external_key=${account_external_key}</arg>
<arg>marketplace_external_key=${marketplace_external_key}</arg>
<arg>holder_external_key=${holder_external_key}</arg>
<arg>account_number=${account_number}</arg>
<arg>account_routing_number=${account_routing_number}</arg>
<arg>account_type=CACC</arg>
<arg>owner_key_name=${holder_name}</arg>
<arg>national_registration=${national_registration}</arg>
<arg>holder_type=${holder_type}</arg>
<arg>psp_code=19468242</arg>
<arg>psp_name=Zoop Tecnologia e Meios de Pagamento S.A.</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar status da chave</arg>
</arguments>
<msg timestamp="20210322 17:45:43.124" level="INFO">Validar status da chave</msg>
<status status="PASS" starttime="20210322 17:45:43.123" endtime="20210322 17:45:43.124"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["status"]}</arg>
<arg>${key_status}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:45:43.124" endtime="20210322 17:45:43.125"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando Tipo da chave PIX</arg>
</arguments>
<msg timestamp="20210322 17:45:43.125" level="INFO">Validando Tipo da chave PIX</msg>
<status status="PASS" starttime="20210322 17:45:43.125" endtime="20210322 17:45:43.125"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["key"]["type"]}</arg>
<arg>${key_type}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:45:43.126" endtime="20210322 17:45:43.126"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando Valor da chave PIX</arg>
</arguments>
<msg timestamp="20210322 17:45:43.127" level="INFO">Validando Valor da chave PIX</msg>
<status status="PASS" starttime="20210322 17:45:43.127" endtime="20210322 17:45:43.127"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${type}' == 'evp'</arg>
<arg>Should Not Be Empty</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' != 'evp'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${key_value}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${key_value}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:45:43.128" endtime="20210322 17:45:43.129"></status>
</kw>
<status status="PASS" starttime="20210322 17:45:43.127" endtime="20210322 17:45:43.129"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando dados da conta</arg>
</arguments>
<msg timestamp="20210322 17:45:43.129" level="INFO">Validando dados da conta</msg>
<status status="PASS" starttime="20210322 17:45:43.129" endtime="20210322 17:45:43.130"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["id"]}</arg>
<arg>${account_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:45:43.130" endtime="20210322 17:45:43.130"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["marketplace"]}</arg>
<arg>${marketplace_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:45:43.131" endtime="20210322 17:45:43.131"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["holder"]}</arg>
<arg>${holder_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:45:43.131" endtime="20210322 17:45:43.132"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["number"]}</arg>
<arg>${account_number}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:45:43.132" endtime="20210322 17:45:43.133"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["routing_number"]}</arg>
<arg>${account_routing_number}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:45:43.133" endtime="20210322 17:45:43.133"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["type"]}</arg>
<arg>${account_type}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:45:43.134" endtime="20210322 17:45:43.134"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar Proprietário da Account Owner</arg>
</arguments>
<msg timestamp="20210322 17:45:43.135" level="INFO">Validar Proprietário da Account Owner</msg>
<status status="PASS" starttime="20210322 17:45:43.134" endtime="20210322 17:45:43.135"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["account"]["owner"]["name"]}</arg>
<arg>${owner_key_name}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:45:43.135" endtime="20210322 17:45:43.135"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar national_registration da Account Owner</arg>
</arguments>
<msg timestamp="20210322 17:45:43.136" level="INFO">Validar national_registration da Account Owner</msg>
<status status="PASS" starttime="20210322 17:45:43.136" endtime="20210322 17:45:43.136"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["account"]["owner"]["national_registration"]}</arg>
<arg>${national_registration}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:45:43.136" endtime="20210322 17:45:43.137"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar Holder Type do Account Owner</arg>
</arguments>
<msg timestamp="20210322 17:45:43.137" level="INFO">Validar Holder Type do Account Owner</msg>
<status status="PASS" starttime="20210322 17:45:43.137" endtime="20210322 17:45:43.137"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["account"]["owner"]["type"]}</arg>
<arg>${holder_type}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:45:43.137" endtime="20210322 17:45:43.138"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar PSP</arg>
</arguments>
<msg timestamp="20210322 17:45:43.138" level="INFO">Validar PSP</msg>
<status status="PASS" starttime="20210322 17:45:43.138" endtime="20210322 17:45:43.138"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["psp"]["code"]}</arg>
<arg>${psp_code}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:45:43.139" endtime="20210322 17:45:43.139"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["psp"]["name"]}</arg>
<arg>${psp_name}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:45:43.139" endtime="20210322 17:45:43.140"></status>
</kw>
<status status="PASS" starttime="20210322 17:45:43.122" endtime="20210322 17:45:43.141"></status>
</kw>
<kw name="excluir chave pix" library="pix_dict_delete_entry">
<arguments>
<arg>holder_external_key=${holder_external_key}</arg>
<arg>account_external_key=${account_external_key}</arg>
<arg>entry_external_key=${entry_external_key}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 17:45:43.142" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 17:45:43.142" endtime="20210322 17:45:43.142"></status>
</kw>
<status status="PASS" starttime="20210322 17:45:43.141" endtime="20210322 17:45:43.143"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:45:43.143" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 17:45:43.143" endtime="20210322 17:45:43.143"></status>
</kw>
<kw name="Delete Request" library="RequestsLibrary">
<doc>Send a DELETE request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries/${entry_external_key}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:45:43.144" level="INFO">DELETE Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/058e76c9b688449c8277da7ed09de0ee/accounts/55d04686f68b42159f16ee92174230a2/entries/6cc2e5ae7c0b4c35960700bae274aad2, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data=None 
json=None</msg>
<msg timestamp="20210322 17:45:44.861" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 17:45:43.143" endtime="20210322 17:45:44.861"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:45:44.864" level="INFO">{'message': 'Entry removed successfully'}</msg>
<status status="PASS" starttime="20210322 17:45:44.862" endtime="20210322 17:45:44.864"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:45:44.867" level="INFO">8aa83ca1b34cabc4</msg>
<status status="PASS" starttime="20210322 17:45:44.865" endtime="20210322 17:45:44.868"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 17:45:44.869" level="INFO">200</msg>
<status status="PASS" starttime="20210322 17:45:44.868" endtime="20210322 17:45:44.869"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:45:44.873" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 17:45:44.870" endtime="20210322 17:45:44.873"></status>
</kw>
<status status="PASS" starttime="20210322 17:45:43.141" endtime="20210322 17:45:44.873"></status>
</kw>
<kw name="validar exclusão da chave pix" library="asserts">
<arguments>
<arg>message=Entry removed successfully</arg>
</arguments>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 17:45:44.875" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:45:44.874" endtime="20210322 17:45:44.875"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["message"]}</arg>
<arg>${message}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:45:44.876" endtime="20210322 17:45:44.878"></status>
</kw>
<status status="PASS" starttime="20210322 17:45:44.873" endtime="20210322 17:45:44.878"></status>
</kw>
<doc>Fluxo Básico</doc>
<tags>
<tag>regression_test</tag>
<tag>smoke_test</tag>
</tags>
<status status="PASS" starttime="20210322 17:45:38.249" endtime="20210322 17:45:44.878" critical="yes"></status>
</test>
<test id="s1-s1-s4-t5" name="Cenário: Excluir Chave de Endereçamento do tipo CNPJ">
<kw name="criar holder business ativo" library="accreditation_create_holder_active">
<kw name="conectar accreditation" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accreditation</arg>
<arg>url=${accreditation_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 17:45:44.882" level="INFO">Creating Session using : alias=accreditation, url=https://banking-accreditation-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 17:45:44.882" endtime="20210322 17:45:44.884"></status>
</kw>
<status status="PASS" starttime="20210322 17:45:44.882" endtime="20210322 17:45:44.884"></status>
</kw>
<kw name="Cnpj" library="FakerLibrary">
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 17:45:44.884" level="INFO">${national_registration} = 60.498.231/0001-07</msg>
<status status="PASS" starttime="20210322 17:45:44.884" endtime="20210322 17:45:44.884"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${national_registration}</arg>
<arg>.</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 17:45:44.885" level="INFO">${national_registration} = 60498231/0001-07</msg>
<status status="PASS" starttime="20210322 17:45:44.885" endtime="20210322 17:45:44.886"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${national_registration}</arg>
<arg>-</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 17:45:44.887" level="INFO">${national_registration} = 60498231/000107</msg>
<status status="PASS" starttime="20210322 17:45:44.886" endtime="20210322 17:45:44.887"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${national_registration}</arg>
<arg>/</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 17:45:44.888" level="INFO">${national_registration} = 60498231000107</msg>
<status status="PASS" starttime="20210322 17:45:44.887" endtime="20210322 17:45:44.888"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${national_registration}</arg>
</arguments>
<msg timestamp="20210322 17:45:44.889" level="INFO">${national_registration} = 60498231000107</msg>
<status status="PASS" starttime="20210322 17:45:44.888" endtime="20210322 17:45:44.889"></status>
</kw>
<kw name="Rg" library="FakerLibrary">
<doc>Brazilian RG, return plain numbers.
Check:  https://www.ngmatematica.com/2014/02/como-determinar-o-digito-verificador-do.html</doc>
<assign>
<var>${identity_card}</var>
</assign>
<msg timestamp="20210322 17:45:44.890" level="INFO">${identity_card} = 203614586</msg>
<status status="PASS" starttime="20210322 17:45:44.889" endtime="20210322 17:45:44.890"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${identity_card}</arg>
</arguments>
<msg timestamp="20210322 17:45:44.891" level="INFO">${identity_card} = 203614586</msg>
<status status="PASS" starttime="20210322 17:45:44.890" endtime="20210322 17:45:44.891"></status>
</kw>
<kw name="criar holder business" library="accreditation_post_holder_business">
<arguments>
<arg>holder_type=business</arg>
<arg>holder_name=${holder_name}</arg>
<arg>email_business=${email_business}</arg>
<arg>national_registration=${national_registration}</arg>
<arg>revenue_business=${revenue_business}</arg>
<arg>cnae=${cnae}</arg>
<arg>legal_name=${legal_name}</arg>
<arg>establishment_format=mei</arg>
<arg>establishment_date=${establishment_date}</arg>
</arguments>
<kw name="conectar accreditation" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accreditation</arg>
<arg>url=${accreditation_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 17:45:44.895" level="INFO">Creating Session using : alias=accreditation, url=https://banking-accreditation-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 17:45:44.894" endtime="20210322 17:45:44.895"></status>
</kw>
<status status="PASS" starttime="20210322 17:45:44.893" endtime="20210322 17:45:44.897"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_type}</arg>
</arguments>
<msg timestamp="20210322 17:45:44.897" level="INFO">${holder_type} = business</msg>
<status status="PASS" starttime="20210322 17:45:44.897" endtime="20210322 17:45:44.897"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_name}</arg>
</arguments>
<msg timestamp="20210322 17:45:44.898" level="INFO">${holder_name} = Holder de teste</msg>
<status status="PASS" starttime="20210322 17:45:44.897" endtime="20210322 17:45:44.898"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${legal_name}</arg>
</arguments>
<msg timestamp="20210322 17:45:44.899" level="INFO">${legal_name} = Nome Legal da Empresa</msg>
<status status="PASS" starttime="20210322 17:45:44.898" endtime="20210322 17:45:44.899"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:45:44.900" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 17:45:44.900" endtime="20210322 17:45:44.900"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "${holder_type}",</arg>
<arg>"name": "${holder_name}",</arg>
<arg>"email": "${email_business}",</arg>
<arg>"national_registration": "${national_registration}",</arg>
<arg>"revenue": ${revenue_business},</arg>
<arg>"cnae": "${cnae}",</arg>
<arg>"legal_name": "${legal_name}",</arg>
<arg>"establishment": {</arg>
<arg>"format":"${establishment_format}",</arg>
<arg>"date":"${establishment_date}"</arg>
<arg>}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 17:45:44.902" level="INFO">${body} = { "type": "business", "name": "Holder de teste", "email": "contato@teste.com.br", "national_registration": "60498231000107", "revenue": 1005500.00, "cnae": "0111301", "legal_name": "Nome Legal da Empr...</msg>
<status status="PASS" starttime="20210322 17:45:44.901" endtime="20210322 17:45:44.903"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:45:44.905" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "business", "name": "Holder de teste", "email": "contato@teste.com.br", "national_registration": "60498231000107", "revenue": 1005500.00, "cnae": "0111301", "legal_name": "Nome Legal da Empresa", "establishment": { "format":"mei", "date":"2012-04-25" } } 
json=None</msg>
<msg timestamp="20210322 17:45:45.625" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:45:44.903" endtime="20210322 17:45:45.625"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:45:45.627" level="INFO">{'id': 'bcc807fd13a24bbca1a39691b3417bef', 'name': 'Holder de teste', 'revenue': 1005500.0, 'email': 'contato@teste.com.br', 'status': 'waiting_info_and_documents', 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'marketplace_name': 'Marketplace de Teste', 'created_at': '2021-03-22T17:45:46.747801', 'updated_at': '2021-03-22T17:45:46.747803', 'type': 'business', 'national_registration': '60498231000107', 'legal_name': 'Nome Legal da Empresa', 'establishment': {'format': 'mei', 'date': '2012-04-25'}, 'cnae': '0111301', '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/bcc807fd13a24bbca1a39691b3417bef', 'type': 'GET'}, 'phones': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/bcc807fd13a24bbca1a39691b3417bef/phones', 'type': 'GET'}, 'addresses': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/bcc807fd13a24bbca1a39691b3417bef/addresses', 'type': 'GET'}, 'documents': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/bcc807fd13a24bbca1a39691b3417bef/documents', 'type': 'GET'}, 'partners': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/bcc807fd13a24bbca1a39691b3417bef/partners', 'type': 'GET'}, 'associates': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/bcc807fd13a24bbca1a39691b3417bef/associates', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 17:45:45.625" endtime="20210322 17:45:45.627"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:45:45.628" level="INFO">9a6a59d6e525d5c2</msg>
<status status="PASS" starttime="20210322 17:45:45.627" endtime="20210322 17:45:45.629"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${body}</arg>
</arguments>
<msg timestamp="20210322 17:45:45.629" level="INFO">{ "type": "business", "name": "Holder de teste", "email": "contato@teste.com.br", "national_registration": "60498231000107", "revenue": 1005500.00, "cnae": "0111301", "legal_name": "Nome Legal da Empresa", "establishment": { "format":"mei", "date":"2012-04-25" } }</msg>
<status status="PASS" starttime="20210322 17:45:45.629" endtime="20210322 17:45:45.629"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:45:45.630" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:45:45.630" endtime="20210322 17:45:45.630"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${holder_external_key}</var>
</assign>
<msg timestamp="20210322 17:45:45.632" level="INFO">${holder_external_key} = bcc807fd13a24bbca1a39691b3417bef</msg>
<status status="PASS" starttime="20210322 17:45:45.631" endtime="20210322 17:45:45.632"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_external_key}</arg>
</arguments>
<msg timestamp="20210322 17:45:45.632" level="INFO">${holder_external_key} = bcc807fd13a24bbca1a39691b3417bef</msg>
<status status="PASS" starttime="20210322 17:45:45.632" endtime="20210322 17:45:45.633"></status>
</kw>
<status status="PASS" starttime="20210322 17:45:44.891" endtime="20210322 17:45:45.633"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 17:45:45.634" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:45:45.633" endtime="20210322 17:45:45.634"></status>
</kw>
<kw name="criar holder phone" library="accreditation_post_holder_phone">
<arguments>
<arg>21</arg>
<arg>51</arg>
<arg>996221236</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:45:45.636" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 17:45:45.635" endtime="20210322 17:45:45.636"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"area_code": "${phone_area_code}",</arg>
<arg>"country_code": "${phone_country_code}",</arg>
<arg>"number": "${phone_number}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 17:45:45.637" level="INFO">${body} = { "area_code": "21", "country_code": "51", "number": "996221236" }</msg>
<status status="PASS" starttime="20210322 17:45:45.636" endtime="20210322 17:45:45.637"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/phones</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:45:45.638" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/bcc807fd13a24bbca1a39691b3417bef/phones, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "area_code": "21", "country_code": "51", "number": "996221236" } 
json=None</msg>
<msg timestamp="20210322 17:45:45.866" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:45:45.637" endtime="20210322 17:45:45.866"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:45:45.869" level="INFO">{'id': 'd58579fbdb484e34affba2fb6ced09c7', 'area_code': '21', 'country_code': '51', 'number': '996221236', 'main': True, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/bcc807fd13a24bbca1a39691b3417bef/phones/d58579fbdb484e34affba2fb6ced09c7', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/bcc807fd13a24bbca1a39691b3417bef', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 17:45:45.867" endtime="20210322 17:45:45.870"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:45:45.872" level="INFO">047c242fff54edef</msg>
<status status="PASS" starttime="20210322 17:45:45.871" endtime="20210322 17:45:45.872"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:45:45.875" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:45:45.874" endtime="20210322 17:45:45.875"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${phone_external_key}</var>
</assign>
<msg timestamp="20210322 17:45:45.877" level="INFO">${phone_external_key} = d58579fbdb484e34affba2fb6ced09c7</msg>
<status status="PASS" starttime="20210322 17:45:45.875" endtime="20210322 17:45:45.877"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${phone_external_key}</arg>
</arguments>
<msg timestamp="20210322 17:45:45.878" level="INFO">${phone_external_key} = d58579fbdb484e34affba2fb6ced09c7</msg>
<status status="PASS" starttime="20210322 17:45:45.878" endtime="20210322 17:45:45.879"></status>
</kw>
<status status="PASS" starttime="20210322 17:45:45.635" endtime="20210322 17:45:45.879"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 17:45:45.881" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:45:45.880" endtime="20210322 17:45:45.881"></status>
</kw>
<kw name="criar holder address" library="accreditation_post_holder_address">
<arguments>
<arg>Rio de Janeiro</arg>
<arg>Rio de Janeiro</arg>
<arg>Brasil</arg>
<arg>Bairro de Testes</arg>
<arg>Rua de Testes</arg>
<arg>90</arg>
<arg>apto 200</arg>
<arg>21550987</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:45:45.883" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 17:45:45.882" endtime="20210322 17:45:45.883"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"city": "${city}",</arg>
<arg>"state": "${state}",</arg>
<arg>"country": "${country}",</arg>
<arg>"neighborhood": "${neighborhood}",</arg>
<arg>"street": "${street}",</arg>
<arg>"number": "${number}",</arg>
<arg>"complement": "${complement}",</arg>
<arg>"postal_code": "${postal_code}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 17:45:45.885" level="INFO">${body} = { "city": "Rio de Janeiro", "state": "Rio de Janeiro", "country": "Brasil", "neighborhood": "Bairro de Testes", "street": "Rua de Testes", "number": "90", "complement": "apto 200", "postal_code": "215...</msg>
<status status="PASS" starttime="20210322 17:45:45.883" endtime="20210322 17:45:45.885"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/addresses</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:45:45.886" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/bcc807fd13a24bbca1a39691b3417bef/addresses, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "city": "Rio de Janeiro", "state": "Rio de Janeiro", "country": "Brasil", "neighborhood": "Bairro de Testes", "street": "Rua de Testes", "number": "90", "complement": "apto 200", "postal_code": "21550987" } 
json=None</msg>
<msg timestamp="20210322 17:45:46.105" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:45:45.885" endtime="20210322 17:45:46.105"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:45:46.107" level="INFO">{'id': '62d3294cd3474863bf7e34f28a181f5a', 'street': 'Rua de Testes', 'number': '90', 'city': 'Rio de Janeiro', 'complement': 'apto 200', 'state': 'Rio de Janeiro', 'neighborhood': 'Bairro de Testes', 'postal_code': '21550987', 'country': 'Brasil', 'main': True, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/bcc807fd13a24bbca1a39691b3417bef/addresses/62d3294cd3474863bf7e34f28a181f5a', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/bcc807fd13a24bbca1a39691b3417bef', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 17:45:46.106" endtime="20210322 17:45:46.108"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:45:46.110" level="INFO">879468002573f445</msg>
<status status="PASS" starttime="20210322 17:45:46.109" endtime="20210322 17:45:46.111"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:45:46.113" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:45:46.112" endtime="20210322 17:45:46.113"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${address_external_key}</var>
</assign>
<msg timestamp="20210322 17:45:46.116" level="INFO">${address_external_key} = 62d3294cd3474863bf7e34f28a181f5a</msg>
<status status="PASS" starttime="20210322 17:45:46.114" endtime="20210322 17:45:46.116"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${address_external_key}</arg>
</arguments>
<msg timestamp="20210322 17:45:46.118" level="INFO">${address_external_key} = 62d3294cd3474863bf7e34f28a181f5a</msg>
<status status="PASS" starttime="20210322 17:45:46.117" endtime="20210322 17:45:46.119"></status>
</kw>
<status status="PASS" starttime="20210322 17:45:45.881" endtime="20210322 17:45:46.120"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 17:45:46.121" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:45:46.120" endtime="20210322 17:45:46.122"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>CCMEI</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:45:46.125" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 17:45:46.124" endtime="20210322 17:45:46.125"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 17:45:46.126" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 17:45:46.128" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 17:45:46.125" endtime="20210322 17:45:46.129"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:45:46.130" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/bcc807fd13a24bbca1a39691b3417bef/documents?type=CCMEI, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 17:45:46.392" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:45:46.129" endtime="20210322 17:45:46.392"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:45:46.395" level="INFO">{'id': '2fc0f071f6024ae487958f6b677b9f48', 'document_type': 'ccmei', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/bcc807fd13a24bbca1a39691b3417bef/documents/2fc0f071f6024ae487958f6b677b9f48', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/bcc807fd13a24bbca1a39691b3417bef', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/bcc807fd13a24bbca1a39691b3417bef/documents/2fc0f071f6024ae487958f6b677b9f48/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 17:45:46.393" endtime="20210322 17:45:46.395"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:45:46.397" level="INFO">96647a2bf81dfa8e</msg>
<status status="PASS" starttime="20210322 17:45:46.396" endtime="20210322 17:45:46.397"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:45:46.398" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:45:46.397" endtime="20210322 17:45:46.398"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 17:45:46.400" level="INFO">${document_external_key} = 2fc0f071f6024ae487958f6b677b9f48</msg>
<status status="PASS" starttime="20210322 17:45:46.399" endtime="20210322 17:45:46.400"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 17:45:46.401" level="INFO">${document_external_key} = 2fc0f071f6024ae487958f6b677b9f48</msg>
<status status="PASS" starttime="20210322 17:45:46.401" endtime="20210322 17:45:46.402"></status>
</kw>
<status status="PASS" starttime="20210322 17:45:46.123" endtime="20210322 17:45:46.402"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 17:45:46.403" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:45:46.402" endtime="20210322 17:45:46.403"></status>
</kw>
<kw name="Cpf" library="FakerLibrary">
<assign>
<var>${partner_individual_national_registration}</var>
</assign>
<msg timestamp="20210322 17:45:46.404" level="INFO">${partner_individual_national_registration} = 874.032.619-50</msg>
<status status="PASS" starttime="20210322 17:45:46.404" endtime="20210322 17:45:46.404"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${partner_individual_national_registration}</arg>
<arg>.</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${partner_individual_national_registration}</var>
</assign>
<msg timestamp="20210322 17:45:46.405" level="INFO">${partner_individual_national_registration} = 874032619-50</msg>
<status status="PASS" starttime="20210322 17:45:46.404" endtime="20210322 17:45:46.405"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${partner_individual_national_registration}</arg>
<arg>-</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${partner_individual_national_registration}</var>
</assign>
<msg timestamp="20210322 17:45:46.406" level="INFO">${partner_individual_national_registration} = 87403261950</msg>
<status status="PASS" starttime="20210322 17:45:46.406" endtime="20210322 17:45:46.406"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${partner_individual_national_registration}</arg>
</arguments>
<msg timestamp="20210322 17:45:46.407" level="INFO">${partner_individual_national_registration} = 87403261950</msg>
<status status="PASS" starttime="20210322 17:45:46.407" endtime="20210322 17:45:46.407"></status>
</kw>
<kw name="Rg" library="FakerLibrary">
<doc>Brazilian RG, return plain numbers.
Check:  https://www.ngmatematica.com/2014/02/como-determinar-o-digito-verificador-do.html</doc>
<assign>
<var>${partner_individual_identity_card}</var>
</assign>
<msg timestamp="20210322 17:45:46.408" level="INFO">${partner_individual_identity_card} = 805764136</msg>
<status status="PASS" starttime="20210322 17:45:46.407" endtime="20210322 17:45:46.408"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${partner_individual_identity_card}</arg>
</arguments>
<msg timestamp="20210322 17:45:46.409" level="INFO">${partner_individual_identity_card} = 805764136</msg>
<status status="PASS" starttime="20210322 17:45:46.408" endtime="20210322 17:45:46.409"></status>
</kw>
<kw name="criar partner individual" library="accreditation_post_partner_individual">
<arguments>
<arg>partner_individual_type=individual</arg>
<arg>partner_individual_name=${partner_individual_name}</arg>
<arg>partner_individual_email=${partner_individual_email}</arg>
<arg>partner_individual_national_registration=${partner_individual_national_registration}</arg>
<arg>partner_individual_revenue=${partner_individual_revenue}</arg>
<arg>partner_individual_birthday=${partner_individual_birthday}</arg>
<arg>partner_individual_mothers_name=${partner_individual_mothers_name}</arg>
<arg>partner_individual_identity_card=${partner_individual_identity_card}</arg>
<arg>partner_individual_pep=false</arg>
<arg>partner_individual_percentage=100</arg>
<arg>partner_individual_adm=true</arg>
<arg>partner_individual_cbo=${partner_individual_cbo}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:45:46.411" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 17:45:46.410" endtime="20210322 17:45:46.411"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "${partner_individual_type}",</arg>
<arg>"name": "${partner_individual_name}",</arg>
<arg>"email": "${partner_individual_email}",</arg>
<arg>"national_registration": "${partner_individual_national_registration}",</arg>
<arg>"revenue": ${partner_individual_revenue},</arg>
<arg>"birthday": "${partner_individual_birthday}",</arg>
<arg>"mothers_name": "${partner_individual_mothers_name}",</arg>
<arg>"identity_card": "${partner_individual_identity_card}",</arg>
<arg>"pep": false,</arg>
<arg>"percentage": ${partner_individual_percentage},</arg>
<arg>"adm": ${partner_individual_adm},</arg>
<arg>"cbo": ${partner_individual_cbo}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 17:45:46.412" level="INFO">${body} = { "type": "individual", "name": "Individual Partner de teste", "email": "teste@teste.com.br", "national_registration": "87403261950", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe...</msg>
<status status="PASS" starttime="20210322 17:45:46.411" endtime="20210322 17:45:46.412"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/partners</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:45:46.413" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/bcc807fd13a24bbca1a39691b3417bef/partners, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "individual", "name": "Individual Partner de teste", "email": "teste@teste.com.br", "national_registration": "87403261950", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Individual Partner", "identity_card": "805764136", "pep": false, "percentage": 100, "adm": true, "cbo": 821450 } 
json=None</msg>
<msg timestamp="20210322 17:45:46.635" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:45:46.412" endtime="20210322 17:45:46.635"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:45:46.638" level="INFO">{'id': 'b33c76974fb54acfa839352ba7ede816', 'name': 'Individual Partner de teste', 'revenue': 5500.0, 'email': 'teste@teste.com.br', 'created_at': '2021-03-22T17:45:47.779779', 'updated_at': '2021-03-22T17:45:47.779781', 'main': True, 'adm': True, 'percentage': 100.0, 'type': 'individual', 'national_registration': '87403261950', 'birthday': '1988-04-23', 'mothers_name': 'Mãe do Individual Partner', 'identity_card': '805764136', 'pep': False, 'cbo': '821450', '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/bcc807fd13a24bbca1a39691b3417bef/partners/b33c76974fb54acfa839352ba7ede816', 'type': 'GET'}, 'phones': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/bcc807fd13a24bbca1a39691b3417bef/partners/b33c76974fb54acfa839352ba7ede816/phones', 'type': 'GET'}, 'addresses': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/bcc807fd13a24bbca1a39691b3417bef/partners/b33c76974fb54acfa839352ba7ede816/addresses', 'type': 'GET'}, 'documents': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/bcc807fd13a24bbca1a39691b3417bef/partners/b33c76974fb54acfa839352ba7ede816/documents', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/bcc807fd13a24bbca1a39691b3417bef', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 17:45:46.637" endtime="20210322 17:45:46.640"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:45:46.642" level="INFO">1ffe444732e5fb4c</msg>
<status status="PASS" starttime="20210322 17:45:46.641" endtime="20210322 17:45:46.642"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:45:46.644" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:45:46.644" endtime="20210322 17:45:46.645"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${partner_external_key}</var>
</assign>
<msg timestamp="20210322 17:45:46.647" level="INFO">${partner_external_key} = b33c76974fb54acfa839352ba7ede816</msg>
<status status="PASS" starttime="20210322 17:45:46.645" endtime="20210322 17:45:46.647"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${partner_external_key}</arg>
</arguments>
<msg timestamp="20210322 17:45:46.648" level="INFO">${partner_external_key} = b33c76974fb54acfa839352ba7ede816</msg>
<status status="PASS" starttime="20210322 17:45:46.647" endtime="20210322 17:45:46.648"></status>
</kw>
<status status="PASS" starttime="20210322 17:45:46.409" endtime="20210322 17:45:46.648"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 17:45:46.650" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:45:46.649" endtime="20210322 17:45:46.650"></status>
</kw>
<kw name="criar partner phone" library="accreditation_post_partner_phone">
<arguments>
<arg>21</arg>
<arg>51</arg>
<arg>996554785</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:45:46.652" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 17:45:46.651" endtime="20210322 17:45:46.652"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"area_code": "${phone_area_code}",</arg>
<arg>"country_code": "${phone_country_code}",</arg>
<arg>"number": "${phone_number}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 17:45:46.653" level="INFO">${body} = { "area_code": "21", "country_code": "51", "number": "996554785" }</msg>
<status status="PASS" starttime="20210322 17:45:46.652" endtime="20210322 17:45:46.653"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/partners/${partner_external_key}/phones/</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:45:46.654" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/bcc807fd13a24bbca1a39691b3417bef/partners/b33c76974fb54acfa839352ba7ede816/phones/, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "area_code": "21", "country_code": "51", "number": "996554785" } 
json=None</msg>
<msg timestamp="20210322 17:45:46.913" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:45:46.653" endtime="20210322 17:45:46.913"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:45:46.915" level="INFO">{'id': 'c74d4222bb5543b89ae856fb07df26a7', 'area_code': '21', 'country_code': '51', 'number': '996554785', 'main': True, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/bcc807fd13a24bbca1a39691b3417bef/partners/b33c76974fb54acfa839352ba7ede816/phones/c74d4222bb5543b89ae856fb07df26a7', 'type': 'GET'}, 'partner': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/bcc807fd13a24bbca1a39691b3417bef/partners/b33c76974fb54acfa839352ba7ede816', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/bcc807fd13a24bbca1a39691b3417bef', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 17:45:46.914" endtime="20210322 17:45:46.915"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:45:46.917" level="INFO">eff91f1499d1560b</msg>
<status status="PASS" starttime="20210322 17:45:46.916" endtime="20210322 17:45:46.917"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:45:46.918" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:45:46.918" endtime="20210322 17:45:46.919"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${holder_external_key}</var>
</assign>
<msg timestamp="20210322 17:45:46.921" level="INFO">${holder_external_key} = c74d4222bb5543b89ae856fb07df26a7</msg>
<status status="PASS" starttime="20210322 17:45:46.919" endtime="20210322 17:45:46.921"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${phone_external_key}</arg>
</arguments>
<msg timestamp="20210322 17:45:46.923" level="INFO">${phone_external_key} = d58579fbdb484e34affba2fb6ced09c7</msg>
<status status="PASS" starttime="20210322 17:45:46.922" endtime="20210322 17:45:46.923"></status>
</kw>
<status status="PASS" starttime="20210322 17:45:46.650" endtime="20210322 17:45:46.923"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 17:45:46.924" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:45:46.924" endtime="20210322 17:45:46.925"></status>
</kw>
<kw name="criar partner address" library="accreditation_post_partner_address">
<arguments>
<arg>Rio de Janeiro</arg>
<arg>Rio de Janeiro</arg>
<arg>Brasil</arg>
<arg>Bairro de Testes</arg>
<arg>Rua de Testes</arg>
<arg>61</arg>
<arg>apto 201</arg>
<arg>21550478</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:45:46.927" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 17:45:46.927" endtime="20210322 17:45:46.927"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"city": "${city}",</arg>
<arg>"state": "${state}",</arg>
<arg>"country": "${country}",</arg>
<arg>"neighborhood": "${neighborhood}",</arg>
<arg>"street": "${street}",</arg>
<arg>"number": "${number}",</arg>
<arg>"complement": "${complement}",</arg>
<arg>"postal_code": "${postal_code}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 17:45:46.927" level="INFO">${body} = { "city": "Rio de Janeiro", "state": "Rio de Janeiro", "country": "Brasil", "neighborhood": "Bairro de Testes", "street": "Rua de Testes", "number": "61", "complement": "apto 201", "postal_code": "215...</msg>
<status status="PASS" starttime="20210322 17:45:46.927" endtime="20210322 17:45:46.927"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/partners/${partner_external_key}/addresses</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:45:46.928" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/bcc807fd13a24bbca1a39691b3417bef/partners/b33c76974fb54acfa839352ba7ede816/addresses, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "city": "Rio de Janeiro", "state": "Rio de Janeiro", "country": "Brasil", "neighborhood": "Bairro de Testes", "street": "Rua de Testes", "number": "61", "complement": "apto 201", "postal_code": "21550478" } 
json=None</msg>
<msg timestamp="20210322 17:45:47.155" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:45:46.928" endtime="20210322 17:45:47.155"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:45:47.155" level="INFO">{'id': '61ea582a4c5248c696c82d0d18001c35', 'street': 'Rua de Testes', 'number': '61', 'city': 'Rio de Janeiro', 'complement': 'apto 201', 'state': 'Rio de Janeiro', 'neighborhood': 'Bairro de Testes', 'postal_code': '21550478', 'country': 'Brasil', 'main': True, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/bcc807fd13a24bbca1a39691b3417bef/partners/b33c76974fb54acfa839352ba7ede816/addresses/61ea582a4c5248c696c82d0d18001c35', 'type': 'GET'}, 'partner': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/bcc807fd13a24bbca1a39691b3417bef/partners/b33c76974fb54acfa839352ba7ede816', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/bcc807fd13a24bbca1a39691b3417bef', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 17:45:47.155" endtime="20210322 17:45:47.156"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:45:47.156" level="INFO">a7213d9c82ca68de</msg>
<status status="PASS" starttime="20210322 17:45:47.156" endtime="20210322 17:45:47.156"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:45:47.157" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:45:47.157" endtime="20210322 17:45:47.157"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${address_external_key}</var>
</assign>
<msg timestamp="20210322 17:45:47.158" level="INFO">${address_external_key} = 61ea582a4c5248c696c82d0d18001c35</msg>
<status status="PASS" starttime="20210322 17:45:47.157" endtime="20210322 17:45:47.158"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${address_external_key}</arg>
</arguments>
<msg timestamp="20210322 17:45:47.159" level="INFO">${address_external_key} = 61ea582a4c5248c696c82d0d18001c35</msg>
<status status="PASS" starttime="20210322 17:45:47.158" endtime="20210322 17:45:47.159"></status>
</kw>
<status status="PASS" starttime="20210322 17:45:46.925" endtime="20210322 17:45:47.159"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 17:45:47.159" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:45:47.159" endtime="20210322 17:45:47.159"></status>
</kw>
<kw name="criar partner document" library="accreditation_post_partner_document">
<arguments>
<arg>SELFIE</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:45:47.160" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 17:45:47.160" endtime="20210322 17:45:47.161"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 17:45:47.161" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 17:45:47.162" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 17:45:47.161" endtime="20210322 17:45:47.163"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/partners/${partner_externaL_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:45:47.164" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/bcc807fd13a24bbca1a39691b3417bef/partners/b33c76974fb54acfa839352ba7ede816/documents?type=SELFIE, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 17:45:47.468" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:45:47.163" endtime="20210322 17:45:47.468"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:45:47.469" level="INFO">{'id': '95324f35f6514c2a8001dbdf54dae905', 'document_type': 'selfie', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/bcc807fd13a24bbca1a39691b3417bef/partners/b33c76974fb54acfa839352ba7ede816/documents/95324f35f6514c2a8001dbdf54dae905', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/bcc807fd13a24bbca1a39691b3417bef', 'type': 'GET'}, 'partner': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/bcc807fd13a24bbca1a39691b3417bef/partners/b33c76974fb54acfa839352ba7ede816', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/bcc807fd13a24bbca1a39691b3417bef/partners/b33c76974fb54acfa839352ba7ede816/documents/95324f35f6514c2a8001dbdf54dae905/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 17:45:47.469" endtime="20210322 17:45:47.469"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:45:47.470" level="INFO">76025ea55c4a5afa</msg>
<status status="PASS" starttime="20210322 17:45:47.469" endtime="20210322 17:45:47.470"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:45:47.471" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:45:47.470" endtime="20210322 17:45:47.471"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 17:45:47.472" level="INFO">${document_external_key} = 95324f35f6514c2a8001dbdf54dae905</msg>
<status status="PASS" starttime="20210322 17:45:47.471" endtime="20210322 17:45:47.472"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 17:45:47.472" level="INFO">${document_external_key} = 95324f35f6514c2a8001dbdf54dae905</msg>
<status status="PASS" starttime="20210322 17:45:47.472" endtime="20210322 17:45:47.473"></status>
</kw>
<status status="PASS" starttime="20210322 17:45:47.160" endtime="20210322 17:45:47.473"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 17:45:47.473" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:45:47.473" endtime="20210322 17:45:47.473"></status>
</kw>
<kw name="criar partner document" library="accreditation_post_partner_document">
<arguments>
<arg>RG_FRENTE</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:45:47.475" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 17:45:47.474" endtime="20210322 17:45:47.475"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 17:45:47.475" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 17:45:47.476" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 17:45:47.475" endtime="20210322 17:45:47.477"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/partners/${partner_externaL_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:45:47.478" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/bcc807fd13a24bbca1a39691b3417bef/partners/b33c76974fb54acfa839352ba7ede816/documents?type=RG_FRENTE, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 17:45:47.757" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:45:47.477" endtime="20210322 17:45:47.758"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:45:47.760" level="INFO">{'id': 'edcf7eb88c354eaf8c5e33cf212e0bd8', 'document_type': 'rg_frente', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/bcc807fd13a24bbca1a39691b3417bef/partners/b33c76974fb54acfa839352ba7ede816/documents/edcf7eb88c354eaf8c5e33cf212e0bd8', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/bcc807fd13a24bbca1a39691b3417bef', 'type': 'GET'}, 'partner': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/bcc807fd13a24bbca1a39691b3417bef/partners/b33c76974fb54acfa839352ba7ede816', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/bcc807fd13a24bbca1a39691b3417bef/partners/b33c76974fb54acfa839352ba7ede816/documents/edcf7eb88c354eaf8c5e33cf212e0bd8/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 17:45:47.759" endtime="20210322 17:45:47.761"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:45:47.763" level="INFO">4edabfce8204e807</msg>
<status status="PASS" starttime="20210322 17:45:47.762" endtime="20210322 17:45:47.763"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:45:47.765" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:45:47.764" endtime="20210322 17:45:47.765"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 17:45:47.768" level="INFO">${document_external_key} = edcf7eb88c354eaf8c5e33cf212e0bd8</msg>
<status status="PASS" starttime="20210322 17:45:47.766" endtime="20210322 17:45:47.768"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 17:45:47.770" level="INFO">${document_external_key} = edcf7eb88c354eaf8c5e33cf212e0bd8</msg>
<status status="PASS" starttime="20210322 17:45:47.769" endtime="20210322 17:45:47.770"></status>
</kw>
<status status="PASS" starttime="20210322 17:45:47.474" endtime="20210322 17:45:47.771"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 17:45:47.772" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:45:47.771" endtime="20210322 17:45:47.772"></status>
</kw>
<kw name="criar partner document" library="accreditation_post_partner_document">
<arguments>
<arg>RG_VERSO</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:45:47.774" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 17:45:47.774" endtime="20210322 17:45:47.774"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 17:45:47.775" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 17:45:47.778" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 17:45:47.775" endtime="20210322 17:45:47.778"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/partners/${partner_externaL_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:45:47.780" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/bcc807fd13a24bbca1a39691b3417bef/partners/b33c76974fb54acfa839352ba7ede816/documents?type=RG_VERSO, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 17:45:48.043" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:45:47.778" endtime="20210322 17:45:48.044"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:45:48.046" level="INFO">{'id': 'bd94277a60f94ab8886b02f9b4b65145', 'document_type': 'rg_verso', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/bcc807fd13a24bbca1a39691b3417bef/partners/b33c76974fb54acfa839352ba7ede816/documents/bd94277a60f94ab8886b02f9b4b65145', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/bcc807fd13a24bbca1a39691b3417bef', 'type': 'GET'}, 'partner': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/bcc807fd13a24bbca1a39691b3417bef/partners/b33c76974fb54acfa839352ba7ede816', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/bcc807fd13a24bbca1a39691b3417bef/partners/b33c76974fb54acfa839352ba7ede816/documents/bd94277a60f94ab8886b02f9b4b65145/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 17:45:48.045" endtime="20210322 17:45:48.047"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:45:48.049" level="INFO">3baf09c491629dfc</msg>
<status status="PASS" starttime="20210322 17:45:48.048" endtime="20210322 17:45:48.049"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:45:48.052" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:45:48.050" endtime="20210322 17:45:48.052"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 17:45:48.055" level="INFO">${document_external_key} = bd94277a60f94ab8886b02f9b4b65145</msg>
<status status="PASS" starttime="20210322 17:45:48.053" endtime="20210322 17:45:48.055"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 17:45:48.057" level="INFO">${document_external_key} = bd94277a60f94ab8886b02f9b4b65145</msg>
<status status="PASS" starttime="20210322 17:45:48.056" endtime="20210322 17:45:48.058"></status>
</kw>
<status status="PASS" starttime="20210322 17:45:47.773" endtime="20210322 17:45:48.058"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 17:45:48.059" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:45:48.058" endtime="20210322 17:45:48.059"></status>
</kw>
<kw name="solicitar aprovação do holder" library="accreditation_request_approval">
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:45:48.061" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 17:45:48.061" endtime="20210322 17:45:48.061"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/approval</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:45:48.063" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/bcc807fd13a24bbca1a39691b3417bef/approval, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data=None 
json=None</msg>
<msg timestamp="20210322 17:45:48.380" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 17:45:48.062" endtime="20210322 17:45:48.380"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:45:48.384" level="INFO">{'message': 'Approval request accepted successfully. Processing analysis'}</msg>
<status status="PASS" starttime="20210322 17:45:48.382" endtime="20210322 17:45:48.385"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:45:48.387" level="INFO">9f6783a5eaead1fb</msg>
<status status="PASS" starttime="20210322 17:45:48.385" endtime="20210322 17:45:48.387"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:45:48.389" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 17:45:48.388" endtime="20210322 17:45:48.389"></status>
</kw>
<status status="PASS" starttime="20210322 17:45:48.060" endtime="20210322 17:45:48.390"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 17:45:48.392" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:45:48.391" endtime="20210322 17:45:48.392"></status>
</kw>
<kw name="recebendo notificação de aprovação" library="accreditation_risk_notification">
<kw name="Uuid 4" library="FakerLibrary">
<doc>Generates a random UUID4 string.
:param cast_to: Specify what type the UUID should be cast to. Default is `str`
:type cast_to: callable</doc>
<assign>
<var>${assessment_id}</var>
</assign>
<msg timestamp="20210322 17:45:48.394" level="INFO">${assessment_id} = bae89cd8-f123-49da-ad70-117e6a6df69f</msg>
<status status="PASS" starttime="20210322 17:45:48.394" endtime="20210322 17:45:48.394"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>year</arg>
</arguments>
<assign>
<var>${year}</var>
</assign>
<msg timestamp="20210322 17:45:48.396" level="INFO">${year} = 2021</msg>
<status status="PASS" starttime="20210322 17:45:48.395" endtime="20210322 17:45:48.396"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>month</arg>
</arguments>
<assign>
<var>${month}</var>
</assign>
<msg timestamp="20210322 17:45:48.397" level="INFO">${month} = 03</msg>
<status status="PASS" starttime="20210322 17:45:48.396" endtime="20210322 17:45:48.397"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>day</arg>
</arguments>
<assign>
<var>${day}</var>
</assign>
<msg timestamp="20210322 17:45:48.398" level="INFO">${day} = 22</msg>
<status status="PASS" starttime="20210322 17:45:48.397" endtime="20210322 17:45:48.398"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:45:48.399" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 17:45:48.398" endtime="20210322 17:45:48.399"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "risk.assessment.result",</arg>
<arg>"resource": "business.holder",</arg>
<arg>"created_at": "${year}-${month}-${day} 15:28:56.747Z",</arg>
<arg>"marketplace_id": "${marketplace_external_key}",</arg>
<arg>"object": {</arg>
<arg>"result": "APPROVED",</arg>
<arg>"holder_id": "${holder_external_key}",</arg>
<arg>"applicant_id": "${application_external_key}",</arg>
<arg>"assessment_id": "${assessment_id}"</arg>
<arg>}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 17:45:48.400" level="INFO">${body} = { "type": "risk.assessment.result", "resource": "business.holder", "created_at": "2021-03-22 15:28:56.747Z", "marketplace_id": "f71a8951368a4cc085cf7875ff44e61c", "object": { "result": "APPROVED", "ho...</msg>
<status status="PASS" starttime="20210322 17:45:48.399" endtime="20210322 17:45:48.400"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/admin/internal_operation/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/registration/approval</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:45:48.402" level="INFO">POST Request using : uri=/admin/internal_operation/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/bcc807fd13a24bbca1a39691b3417bef/registration/approval, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "risk.assessment.result", "resource": "business.holder", "created_at": "2021-03-22 15:28:56.747Z", "marketplace_id": "f71a8951368a4cc085cf7875ff44e61c", "object": { "result": "APPROVED", "holder_id": "bcc807fd13a24bbca1a39691b3417bef", "applicant_id": "bcc25a6751c14b52af1340d40dba78c5", "assessment_id": "bae89cd8-f123-49da-ad70-117e6a6df69f" } } 
json=None</msg>
<msg timestamp="20210322 17:45:48.619" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 17:45:48.401" endtime="20210322 17:45:48.620"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:45:48.623" level="INFO">{'message': 'Holder approved successfully'}</msg>
<status status="PASS" starttime="20210322 17:45:48.621" endtime="20210322 17:45:48.624"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:45:48.626" level="INFO">8d06d7e41e30507b</msg>
<status status="PASS" starttime="20210322 17:45:48.625" endtime="20210322 17:45:48.626"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:45:48.629" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 17:45:48.627" endtime="20210322 17:45:48.629"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 17:45:48.631" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:45:48.630" endtime="20210322 17:45:48.632"></status>
</kw>
<status status="PASS" starttime="20210322 17:45:48.393" endtime="20210322 17:45:48.632"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 17:45:48.634" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:45:48.633" endtime="20210322 17:45:48.634"></status>
</kw>
<kw name="buscar account por holder" library="accounts_get_accounts_by_holder">
<kw name="conectar accounts" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accounts</arg>
<arg>url=${account_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 17:45:48.637" level="INFO">Creating Session using : alias=accounts, url=https://banking-accounts-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 17:45:48.636" endtime="20210322 17:45:48.638"></status>
</kw>
<status status="PASS" starttime="20210322 17:45:48.635" endtime="20210322 17:45:48.638"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accounts</arg>
<arg>/marketplaces/${marketplace_external_key}/holders/${holder_external_key}/accounts</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:45:48.640" level="INFO">GET Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/holders/bcc807fd13a24bbca1a39691b3417bef/accounts, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 17:45:49.354" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 17:45:48.639" endtime="20210322 17:45:49.355"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:45:49.358" level="INFO">{'items': [{'id': '7287fdd49fc242f187d7d9effab9a975', 'holder': 'bcc807fd13a24bbca1a39691b3417bef', 'balance': '0.00', 'currency': 'BRL', 'routing_number': '001', 'number': '9714435707', 'status': 'active', 'metadata': {}, 'created_at': '2021-03-22T20:45:49.795494', 'updated_at': '2021-03-22T20:45:49.795494', 'primary': True, 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'uri': '/v2/marketplaces/f71a8951368a4cc085cf7875ff44e61c/accounts/7287fdd49fc242f187d7d9effab9a975', 'resource': 'payment_account'}], 'has_more': False, 'limit': 100, 'total_pages': 1, 'page': 1, 'offset': 0, 'total': '1', 'query_count': '1'}</msg>
<status status="PASS" starttime="20210322 17:45:49.356" endtime="20210322 17:45:49.358"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:45:49.360" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 17:45:49.360" endtime="20210322 17:45:49.360"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["id"]}</arg>
</arguments>
<assign>
<var>${account_external_key}</var>
</assign>
<msg timestamp="20210322 17:45:49.362" level="INFO">${account_external_key} = 7287fdd49fc242f187d7d9effab9a975</msg>
<status status="PASS" starttime="20210322 17:45:49.360" endtime="20210322 17:45:49.362"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_external_key}</arg>
</arguments>
<msg timestamp="20210322 17:45:49.363" level="INFO">${account_external_key} = 7287fdd49fc242f187d7d9effab9a975</msg>
<status status="PASS" starttime="20210322 17:45:49.363" endtime="20210322 17:45:49.364"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["number"]}</arg>
</arguments>
<assign>
<var>${account_number}</var>
</assign>
<msg timestamp="20210322 17:45:49.365" level="INFO">${account_number} = 9714435707</msg>
<status status="PASS" starttime="20210322 17:45:49.364" endtime="20210322 17:45:49.365"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_number}</arg>
</arguments>
<msg timestamp="20210322 17:45:49.366" level="INFO">${account_number} = 9714435707</msg>
<status status="PASS" starttime="20210322 17:45:49.366" endtime="20210322 17:45:49.366"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["routing_number"]}</arg>
</arguments>
<assign>
<var>${account_routing_number}</var>
</assign>
<msg timestamp="20210322 17:45:49.368" level="INFO">${account_routing_number} = 001</msg>
<status status="PASS" starttime="20210322 17:45:49.368" endtime="20210322 17:45:49.368"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_routing_number}</arg>
</arguments>
<msg timestamp="20210322 17:45:49.369" level="INFO">${account_routing_number} = 001</msg>
<status status="PASS" starttime="20210322 17:45:49.368" endtime="20210322 17:45:49.369"></status>
</kw>
<status status="PASS" starttime="20210322 17:45:48.634" endtime="20210322 17:45:49.369"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 17:45:49.370" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:45:49.369" endtime="20210322 17:45:49.370"></status>
</kw>
<status status="PASS" starttime="20210322 17:45:44.880" endtime="20210322 17:45:49.370"></status>
</kw>
<kw name="criar chave pix" library="pix_dict_create_entry">
<arguments>
<arg>type=national_registration</arg>
<arg>value=${EMPTY}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 17:45:49.373" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 17:45:49.372" endtime="20210322 17:45:49.373"></status>
</kw>
<status status="PASS" starttime="20210322 17:45:49.372" endtime="20210322 17:45:49.374"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${type}</arg>
</arguments>
<msg timestamp="20210322 17:45:49.374" level="INFO">${type} = national_registration</msg>
<status status="PASS" starttime="20210322 17:45:49.374" endtime="20210322 17:45:49.374"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210322 17:45:49.375" level="INFO">${value} = </msg>
<status status="PASS" starttime="20210322 17:45:49.375" endtime="20210322 17:45:49.375"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:45:49.376" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 17:45:49.375" endtime="20210322 17:45:49.376"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "${type}",</arg>
<arg>"value": "${value}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 17:45:49.376" level="INFO">${body} = { "type": "national_registration", "value": "" }</msg>
<status status="PASS" starttime="20210322 17:45:49.376" endtime="20210322 17:45:49.376"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:45:49.377" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/bcc807fd13a24bbca1a39691b3417bef/accounts/7287fdd49fc242f187d7d9effab9a975/entries, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "national_registration", "value": "" } 
json=None</msg>
<msg timestamp="20210322 17:45:50.935" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:45:49.377" endtime="20210322 17:45:50.935"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:45:50.938" level="INFO">{'id': '271b834e91ac4acaba719838e271863a', 'status': 'active', 'created_at': '2021-03-22T05:45:51.246', 'updated_at': '2021-03-22T05:45:51.246', 'key': {'value': '60498231000107', 'type': 'national_registration'}, 'account': {'id': '7287fdd49fc242f187d7d9effab9a975', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': 'bcc807fd13a24bbca1a39691b3417bef', 'owner': {'name': 'Nome Legal da Empresa', 'national_registration': '60498231000107', 'type': 'business'}, 'routing_number': '001', 'number': '9714435707', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}, 'resource': 'pix.entry'}</msg>
<status status="PASS" starttime="20210322 17:45:50.937" endtime="20210322 17:45:50.939"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:45:50.941" level="INFO">c69771d9c360f841</msg>
<status status="PASS" starttime="20210322 17:45:50.939" endtime="20210322 17:45:50.941"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 17:45:50.943" level="INFO">201</msg>
<status status="PASS" starttime="20210322 17:45:50.942" endtime="20210322 17:45:50.944"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:45:50.946" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:45:50.945" endtime="20210322 17:45:50.946"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${entry_external_key}</var>
</assign>
<msg timestamp="20210322 17:45:50.948" level="INFO">${entry_external_key} = 271b834e91ac4acaba719838e271863a</msg>
<status status="PASS" starttime="20210322 17:45:50.947" endtime="20210322 17:45:50.948"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${entry_external_key}</arg>
</arguments>
<msg timestamp="20210322 17:45:50.950" level="INFO">${entry_external_key} = 271b834e91ac4acaba719838e271863a</msg>
<status status="PASS" starttime="20210322 17:45:50.949" endtime="20210322 17:45:50.950"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["key"]["value"]}</arg>
</arguments>
<assign>
<var>${entry_key_value}</var>
</assign>
<msg timestamp="20210322 17:45:50.952" level="INFO">${entry_key_value} = 60498231000107</msg>
<status status="PASS" starttime="20210322 17:45:50.950" endtime="20210322 17:45:50.952"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${entry_key_value}</arg>
</arguments>
<msg timestamp="20210322 17:45:50.953" level="INFO">${entry_key_value} = 60498231000107</msg>
<status status="PASS" starttime="20210322 17:45:50.953" endtime="20210322 17:45:50.954"></status>
</kw>
<status status="PASS" starttime="20210322 17:45:49.371" endtime="20210322 17:45:50.954"></status>
</kw>
<kw name="validar chave pix" library="asserts">
<arguments>
<arg>key_status=active</arg>
<arg>key_type=${type}</arg>
<arg>key_value=${national_registration}</arg>
<arg>account_external_key=${account_external_key}</arg>
<arg>marketplace_external_key=${marketplace_external_key}</arg>
<arg>holder_external_key=${holder_external_key}</arg>
<arg>account_number=${account_number}</arg>
<arg>account_routing_number=${account_routing_number}</arg>
<arg>account_type=CACC</arg>
<arg>owner_key_name=${legal_name}</arg>
<arg>national_registration=${national_registration}</arg>
<arg>holder_type=${holder_type}</arg>
<arg>psp_code=19468242</arg>
<arg>psp_name=Zoop Tecnologia e Meios de Pagamento S.A.</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar status da chave</arg>
</arguments>
<msg timestamp="20210322 17:45:50.957" level="INFO">Validar status da chave</msg>
<status status="PASS" starttime="20210322 17:45:50.957" endtime="20210322 17:45:50.957"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["status"]}</arg>
<arg>${key_status}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:45:50.958" endtime="20210322 17:45:50.959"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando Tipo da chave PIX</arg>
</arguments>
<msg timestamp="20210322 17:45:50.959" level="INFO">Validando Tipo da chave PIX</msg>
<status status="PASS" starttime="20210322 17:45:50.959" endtime="20210322 17:45:50.959"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["key"]["type"]}</arg>
<arg>${key_type}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:45:50.960" endtime="20210322 17:45:50.961"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando Valor da chave PIX</arg>
</arguments>
<msg timestamp="20210322 17:45:50.961" level="INFO">Validando Valor da chave PIX</msg>
<status status="PASS" starttime="20210322 17:45:50.961" endtime="20210322 17:45:50.962"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${type}' == 'evp'</arg>
<arg>Should Not Be Empty</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' != 'evp'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${key_value}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${key_value}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:45:50.963" endtime="20210322 17:45:50.964"></status>
</kw>
<status status="PASS" starttime="20210322 17:45:50.962" endtime="20210322 17:45:50.964"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando dados da conta</arg>
</arguments>
<msg timestamp="20210322 17:45:50.965" level="INFO">Validando dados da conta</msg>
<status status="PASS" starttime="20210322 17:45:50.964" endtime="20210322 17:45:50.965"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["id"]}</arg>
<arg>${account_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:45:50.965" endtime="20210322 17:45:50.966"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["marketplace"]}</arg>
<arg>${marketplace_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:45:50.966" endtime="20210322 17:45:50.967"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["holder"]}</arg>
<arg>${holder_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:45:50.967" endtime="20210322 17:45:50.968"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["number"]}</arg>
<arg>${account_number}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:45:50.969" endtime="20210322 17:45:50.969"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["routing_number"]}</arg>
<arg>${account_routing_number}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:45:50.970" endtime="20210322 17:45:50.970"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["type"]}</arg>
<arg>${account_type}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:45:50.971" endtime="20210322 17:45:50.971"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar Proprietário da Account Owner</arg>
</arguments>
<msg timestamp="20210322 17:45:50.972" level="INFO">Validar Proprietário da Account Owner</msg>
<status status="PASS" starttime="20210322 17:45:50.972" endtime="20210322 17:45:50.972"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["account"]["owner"]["name"]}</arg>
<arg>${owner_key_name}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:45:50.972" endtime="20210322 17:45:50.973"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar national_registration da Account Owner</arg>
</arguments>
<msg timestamp="20210322 17:45:50.974" level="INFO">Validar national_registration da Account Owner</msg>
<status status="PASS" starttime="20210322 17:45:50.973" endtime="20210322 17:45:50.974"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["account"]["owner"]["national_registration"]}</arg>
<arg>${national_registration}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:45:50.974" endtime="20210322 17:45:50.975"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar Holder Type do Account Owner</arg>
</arguments>
<msg timestamp="20210322 17:45:50.975" level="INFO">Validar Holder Type do Account Owner</msg>
<status status="PASS" starttime="20210322 17:45:50.975" endtime="20210322 17:45:50.975"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["account"]["owner"]["type"]}</arg>
<arg>${holder_type}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:45:50.976" endtime="20210322 17:45:50.976"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar PSP</arg>
</arguments>
<msg timestamp="20210322 17:45:50.977" level="INFO">Validar PSP</msg>
<status status="PASS" starttime="20210322 17:45:50.977" endtime="20210322 17:45:50.977"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["psp"]["code"]}</arg>
<arg>${psp_code}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:45:50.977" endtime="20210322 17:45:50.978"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["psp"]["name"]}</arg>
<arg>${psp_name}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:45:50.979" endtime="20210322 17:45:50.979"></status>
</kw>
<status status="PASS" starttime="20210322 17:45:50.955" endtime="20210322 17:45:50.979"></status>
</kw>
<kw name="excluir chave pix" library="pix_dict_delete_entry">
<arguments>
<arg>holder_external_key=${holder_external_key}</arg>
<arg>account_external_key=${account_external_key}</arg>
<arg>entry_external_key=${entry_external_key}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 17:45:50.982" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 17:45:50.981" endtime="20210322 17:45:50.982"></status>
</kw>
<status status="PASS" starttime="20210322 17:45:50.981" endtime="20210322 17:45:50.982"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:45:50.983" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 17:45:50.983" endtime="20210322 17:45:50.983"></status>
</kw>
<kw name="Delete Request" library="RequestsLibrary">
<doc>Send a DELETE request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries/${entry_external_key}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:45:50.984" level="INFO">DELETE Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/bcc807fd13a24bbca1a39691b3417bef/accounts/7287fdd49fc242f187d7d9effab9a975/entries/271b834e91ac4acaba719838e271863a, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data=None 
json=None</msg>
<msg timestamp="20210322 17:45:52.477" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 17:45:50.984" endtime="20210322 17:45:52.477"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:45:52.480" level="INFO">{'message': 'Entry removed successfully'}</msg>
<status status="PASS" starttime="20210322 17:45:52.478" endtime="20210322 17:45:52.480"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:45:52.483" level="INFO">259fb96d3bfd5477</msg>
<status status="PASS" starttime="20210322 17:45:52.481" endtime="20210322 17:45:52.484"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 17:45:52.485" level="INFO">200</msg>
<status status="PASS" starttime="20210322 17:45:52.484" endtime="20210322 17:45:52.485"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:45:52.487" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 17:45:52.486" endtime="20210322 17:45:52.487"></status>
</kw>
<status status="PASS" starttime="20210322 17:45:50.980" endtime="20210322 17:45:52.487"></status>
</kw>
<kw name="validar exclusão da chave pix" library="asserts">
<arguments>
<arg>message=Entry removed successfully</arg>
</arguments>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 17:45:52.489" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:45:52.489" endtime="20210322 17:45:52.490"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["message"]}</arg>
<arg>${message}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:45:52.490" endtime="20210322 17:45:52.491"></status>
</kw>
<status status="PASS" starttime="20210322 17:45:52.488" endtime="20210322 17:45:52.491"></status>
</kw>
<doc>Fluxo Básico</doc>
<tags>
<tag>regression_test</tag>
<tag>smoke_test</tag>
</tags>
<status status="PASS" starttime="20210322 17:45:44.879" endtime="20210322 17:45:52.491" critical="yes"></status>
</test>
<doc>Funcionalidade: Confirmação de Propriedade de Chave de Endereçamento
Eu, como um Holder, portador de uma conta ativa em Banking
E portador de uma chave de endereçamento
Desejo excluir uma chave de endereçamento</doc>
<status status="PASS" starttime="20210322 17:45:22.391" endtime="20210322 17:45:52.493"></status>
</suite>
<status status="PASS" starttime="20210322 17:43:57.609" endtime="20210322 17:45:52.997"></status>
</suite>
<suite id="s1-s2" name="Reivindicacao" source="C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\tests\pix-dict\reivindicacao">
<suite id="s1-s2-s1" name="Cancelar Reivindicação de Posse" source="C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\tests\pix-dict\reivindicacao\Cancelar Reivindicação de Posse.robot">
<test id="s1-s2-s1-t1" name="Cenário: Cancelamento de Reivindiação pelo Reivindicador">
<kw name="Random Number" library="FakerLibrary">
<doc>Returns a random number with 1 digit (default, when digits==None),
a random number with 0 to given number of digits, or a random number
with given number to given number of digits (when ``fix_len==True``).</doc>
<arguments>
<arg>digits=8</arg>
<arg>fix_len=True</arg>
</arguments>
<assign>
<var>${phone}</var>
</assign>
<msg timestamp="20210322 17:45:53.531" level="INFO">${phone} = 94006848</msg>
<status status="PASS" starttime="20210322 17:45:53.531" endtime="20210322 17:45:53.531"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>+55219${phone}</arg>
</arguments>
<assign>
<var>${phone_pix}</var>
</assign>
<msg timestamp="20210322 17:45:53.531" level="INFO">${phone_pix} = +5521994006848</msg>
<status status="PASS" starttime="20210322 17:45:53.531" endtime="20210322 17:45:53.531"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${phone_pix}</arg>
</arguments>
<msg timestamp="20210322 17:45:53.532" level="INFO">${phone_pix} = +5521994006848</msg>
<status status="PASS" starttime="20210322 17:45:53.531" endtime="20210322 17:45:53.532"></status>
</kw>
<kw name="criar holder individual ativo" library="accreditation_create_holder_active">
<kw name="conectar accreditation" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accreditation</arg>
<arg>url=${accreditation_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 17:45:53.533" level="INFO">Creating Session using : alias=accreditation, url=https://banking-accreditation-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 17:45:53.533" endtime="20210322 17:45:53.534"></status>
</kw>
<status status="PASS" starttime="20210322 17:45:53.532" endtime="20210322 17:45:53.534"></status>
</kw>
<kw name="Cpf" library="FakerLibrary">
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 17:45:53.534" level="INFO">${national_registration} = 253.497.861-64</msg>
<status status="PASS" starttime="20210322 17:45:53.534" endtime="20210322 17:45:53.534"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${national_registration}</arg>
<arg>.</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 17:45:53.535" level="INFO">${national_registration} = 253497861-64</msg>
<status status="PASS" starttime="20210322 17:45:53.535" endtime="20210322 17:45:53.536"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${national_registration}</arg>
<arg>-</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 17:45:53.537" level="INFO">${national_registration} = 25349786164</msg>
<status status="PASS" starttime="20210322 17:45:53.537" endtime="20210322 17:45:53.537"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${national_registration}</arg>
</arguments>
<msg timestamp="20210322 17:45:53.537" level="INFO">${national_registration} = 25349786164</msg>
<status status="PASS" starttime="20210322 17:45:53.537" endtime="20210322 17:45:53.537"></status>
</kw>
<kw name="Rg" library="FakerLibrary">
<doc>Brazilian RG, return plain numbers.
Check:  https://www.ngmatematica.com/2014/02/como-determinar-o-digito-verificador-do.html</doc>
<assign>
<var>${identity_card}</var>
</assign>
<msg timestamp="20210322 17:45:53.539" level="INFO">${identity_card} = 853216071</msg>
<status status="PASS" starttime="20210322 17:45:53.538" endtime="20210322 17:45:53.539"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${identity_card}</arg>
</arguments>
<msg timestamp="20210322 17:45:53.539" level="INFO">${identity_card} = 853216071</msg>
<status status="PASS" starttime="20210322 17:45:53.539" endtime="20210322 17:45:53.539"></status>
</kw>
<kw name="criar holder individual" library="accreditation_post_holder_individual">
<arguments>
<arg>holder_type=individual</arg>
<arg>holder_name=${holder_name}</arg>
<arg>email=${email}</arg>
<arg>national_registration=${national_registration}</arg>
<arg>revenue=${revenue}</arg>
<arg>birthday=${birthday}</arg>
<arg>mothers_name=${mothers_name}</arg>
<arg>identity_card=${identity_card}</arg>
<arg>pep=false</arg>
<arg>cbo=${cbo}</arg>
</arguments>
<kw name="conectar accreditation" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accreditation</arg>
<arg>url=${accreditation_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 17:45:53.541" level="INFO">Creating Session using : alias=accreditation, url=https://banking-accreditation-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 17:45:53.540" endtime="20210322 17:45:53.541"></status>
</kw>
<status status="PASS" starttime="20210322 17:45:53.540" endtime="20210322 17:45:53.541"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_type}</arg>
</arguments>
<msg timestamp="20210322 17:45:53.542" level="INFO">${holder_type} = individual</msg>
<status status="PASS" starttime="20210322 17:45:53.541" endtime="20210322 17:45:53.542"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_name}</arg>
</arguments>
<msg timestamp="20210322 17:45:53.542" level="INFO">${holder_name} = Holder de teste</msg>
<status status="PASS" starttime="20210322 17:45:53.542" endtime="20210322 17:45:53.542"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:45:53.543" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 17:45:53.543" endtime="20210322 17:45:53.543"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "${holder_type}",</arg>
<arg>"name": "${holder_name}",</arg>
<arg>"email": "${email}",</arg>
<arg>"national_registration": "${national_registration}",</arg>
<arg>"revenue": ${revenue},</arg>
<arg>"birthday": "${birthday}",</arg>
<arg>"mothers_name": "${mothers_name}",</arg>
<arg>"identity_card": "${identity_card}",</arg>
<arg>"pep": false,</arg>
<arg>"cbo": ${cbo}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 17:45:53.544" level="INFO">${body} = { "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "25349786164", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder",...</msg>
<status status="PASS" starttime="20210322 17:45:53.543" endtime="20210322 17:45:53.544"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:45:53.544" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "25349786164", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder", "identity_card": "853216071", "pep": false, "cbo": 821450 } 
json=None</msg>
<msg timestamp="20210322 17:45:54.227" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:45:53.544" endtime="20210322 17:45:54.228"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:45:54.229" level="INFO">{'id': '0ac8ae1152cd4ef8be284a17717333b5', 'name': 'Holder de teste', 'revenue': 5500.0, 'email': 'teste@teste.com.br', 'status': 'waiting_info_and_documents', 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'marketplace_name': 'Marketplace de Teste', 'created_at': '2021-03-22T17:45:55.414375', 'updated_at': '2021-03-22T17:45:55.414377', 'type': 'individual', 'national_registration': '25349786164', 'birthday': '1988-04-23', 'mothers_name': 'Mãe do Holder', 'identity_card': '853216071', 'pep': False, 'cbo': '821450', '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/0ac8ae1152cd4ef8be284a17717333b5', 'type': 'GET'}, 'phones': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/0ac8ae1152cd4ef8be284a17717333b5/phones', 'type': 'GET'}, 'addresses': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/0ac8ae1152cd4ef8be284a17717333b5/addresses', 'type': 'GET'}, 'documents': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/0ac8ae1152cd4ef8be284a17717333b5/documents', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 17:45:54.228" endtime="20210322 17:45:54.229"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:45:54.230" level="INFO">f6147b6d0231be52</msg>
<status status="PASS" starttime="20210322 17:45:54.229" endtime="20210322 17:45:54.230"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${body}</arg>
</arguments>
<msg timestamp="20210322 17:45:54.231" level="INFO">{ "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "25349786164", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder", "identity_card": "853216071", "pep": false, "cbo": 821450 }</msg>
<status status="PASS" starttime="20210322 17:45:54.230" endtime="20210322 17:45:54.231"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:45:54.231" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:45:54.231" endtime="20210322 17:45:54.232"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${holder_external_key}</var>
</assign>
<msg timestamp="20210322 17:45:54.233" level="INFO">${holder_external_key} = 0ac8ae1152cd4ef8be284a17717333b5</msg>
<status status="PASS" starttime="20210322 17:45:54.232" endtime="20210322 17:45:54.233"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_external_key}</arg>
</arguments>
<msg timestamp="20210322 17:45:54.235" level="INFO">${holder_external_key} = 0ac8ae1152cd4ef8be284a17717333b5</msg>
<status status="PASS" starttime="20210322 17:45:54.233" endtime="20210322 17:45:54.235"></status>
</kw>
<status status="PASS" starttime="20210322 17:45:53.540" endtime="20210322 17:45:54.235"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_name}</arg>
</arguments>
<msg timestamp="20210322 17:45:54.236" level="INFO">${holder_name} = Holder de teste</msg>
<status status="PASS" starttime="20210322 17:45:54.235" endtime="20210322 17:45:54.236"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 17:45:54.236" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:45:54.236" endtime="20210322 17:45:54.236"></status>
</kw>
<kw name="criar holder phone" library="accreditation_post_holder_phone">
<arguments>
<arg>21</arg>
<arg>51</arg>
<arg>996221236</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:45:54.238" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 17:45:54.237" endtime="20210322 17:45:54.238"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"area_code": "${phone_area_code}",</arg>
<arg>"country_code": "${phone_country_code}",</arg>
<arg>"number": "${phone_number}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 17:45:54.239" level="INFO">${body} = { "area_code": "21", "country_code": "51", "number": "996221236" }</msg>
<status status="PASS" starttime="20210322 17:45:54.238" endtime="20210322 17:45:54.239"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/phones</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:45:54.241" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/0ac8ae1152cd4ef8be284a17717333b5/phones, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "area_code": "21", "country_code": "51", "number": "996221236" } 
json=None</msg>
<msg timestamp="20210322 17:45:54.454" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:45:54.239" endtime="20210322 17:45:54.454"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:45:54.456" level="INFO">{'id': 'ea009cfbb6c842d192c2068e74469c28', 'area_code': '21', 'country_code': '51', 'number': '996221236', 'main': True, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/0ac8ae1152cd4ef8be284a17717333b5/phones/ea009cfbb6c842d192c2068e74469c28', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/0ac8ae1152cd4ef8be284a17717333b5', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 17:45:54.455" endtime="20210322 17:45:54.456"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:45:54.457" level="INFO">358c4202e6b93f49</msg>
<status status="PASS" starttime="20210322 17:45:54.456" endtime="20210322 17:45:54.457"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:45:54.458" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:45:54.457" endtime="20210322 17:45:54.458"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${phone_external_key}</var>
</assign>
<msg timestamp="20210322 17:45:54.459" level="INFO">${phone_external_key} = ea009cfbb6c842d192c2068e74469c28</msg>
<status status="PASS" starttime="20210322 17:45:54.458" endtime="20210322 17:45:54.459"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${phone_external_key}</arg>
</arguments>
<msg timestamp="20210322 17:45:54.460" level="INFO">${phone_external_key} = ea009cfbb6c842d192c2068e74469c28</msg>
<status status="PASS" starttime="20210322 17:45:54.460" endtime="20210322 17:45:54.460"></status>
</kw>
<status status="PASS" starttime="20210322 17:45:54.237" endtime="20210322 17:45:54.460"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 17:45:54.461" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:45:54.461" endtime="20210322 17:45:54.462"></status>
</kw>
<kw name="criar holder address" library="accreditation_post_holder_address">
<arguments>
<arg>Rio de Janeiro</arg>
<arg>Rio de Janeiro</arg>
<arg>Brasil</arg>
<arg>Bairro de Testes</arg>
<arg>Rua de Testes</arg>
<arg>90</arg>
<arg>apto 200</arg>
<arg>21550987</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:45:54.463" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 17:45:54.463" endtime="20210322 17:45:54.463"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"city": "${city}",</arg>
<arg>"state": "${state}",</arg>
<arg>"country": "${country}",</arg>
<arg>"neighborhood": "${neighborhood}",</arg>
<arg>"street": "${street}",</arg>
<arg>"number": "${number}",</arg>
<arg>"complement": "${complement}",</arg>
<arg>"postal_code": "${postal_code}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 17:45:54.464" level="INFO">${body} = { "city": "Rio de Janeiro", "state": "Rio de Janeiro", "country": "Brasil", "neighborhood": "Bairro de Testes", "street": "Rua de Testes", "number": "90", "complement": "apto 200", "postal_code": "215...</msg>
<status status="PASS" starttime="20210322 17:45:54.464" endtime="20210322 17:45:54.464"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/addresses</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:45:54.465" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/0ac8ae1152cd4ef8be284a17717333b5/addresses, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "city": "Rio de Janeiro", "state": "Rio de Janeiro", "country": "Brasil", "neighborhood": "Bairro de Testes", "street": "Rua de Testes", "number": "90", "complement": "apto 200", "postal_code": "21550987" } 
json=None</msg>
<msg timestamp="20210322 17:45:54.688" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:45:54.465" endtime="20210322 17:45:54.688"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:45:54.690" level="INFO">{'id': '35944d2401794430badb34fb5a405190', 'street': 'Rua de Testes', 'number': '90', 'city': 'Rio de Janeiro', 'complement': 'apto 200', 'state': 'Rio de Janeiro', 'neighborhood': 'Bairro de Testes', 'postal_code': '21550987', 'country': 'Brasil', 'main': True, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/0ac8ae1152cd4ef8be284a17717333b5/addresses/35944d2401794430badb34fb5a405190', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/0ac8ae1152cd4ef8be284a17717333b5', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 17:45:54.689" endtime="20210322 17:45:54.691"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:45:54.692" level="INFO">26437c64f913ab79</msg>
<status status="PASS" starttime="20210322 17:45:54.691" endtime="20210322 17:45:54.692"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:45:54.694" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:45:54.693" endtime="20210322 17:45:54.694"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${address_external_key}</var>
</assign>
<msg timestamp="20210322 17:45:54.696" level="INFO">${address_external_key} = 35944d2401794430badb34fb5a405190</msg>
<status status="PASS" starttime="20210322 17:45:54.695" endtime="20210322 17:45:54.696"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${address_external_key}</arg>
</arguments>
<msg timestamp="20210322 17:45:54.697" level="INFO">${address_external_key} = 35944d2401794430badb34fb5a405190</msg>
<status status="PASS" starttime="20210322 17:45:54.696" endtime="20210322 17:45:54.697"></status>
</kw>
<status status="PASS" starttime="20210322 17:45:54.462" endtime="20210322 17:45:54.697"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 17:45:54.698" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:45:54.698" endtime="20210322 17:45:54.699"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>SELFIE</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:45:54.700" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 17:45:54.700" endtime="20210322 17:45:54.700"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 17:45:54.701" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 17:45:54.703" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 17:45:54.701" endtime="20210322 17:45:54.703"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:45:54.705" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/0ac8ae1152cd4ef8be284a17717333b5/documents?type=SELFIE, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 17:45:54.986" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:45:54.704" endtime="20210322 17:45:54.986"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:45:54.988" level="INFO">{'id': 'ce66bfcbe18a4812a787125ee25afead', 'document_type': 'selfie', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/0ac8ae1152cd4ef8be284a17717333b5/documents/ce66bfcbe18a4812a787125ee25afead', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/0ac8ae1152cd4ef8be284a17717333b5', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/0ac8ae1152cd4ef8be284a17717333b5/documents/ce66bfcbe18a4812a787125ee25afead/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 17:45:54.987" endtime="20210322 17:45:54.988"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:45:54.989" level="INFO">79029bcc3599d3dd</msg>
<status status="PASS" starttime="20210322 17:45:54.988" endtime="20210322 17:45:54.989"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:45:54.991" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:45:54.989" endtime="20210322 17:45:54.991"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 17:45:54.993" level="INFO">${document_external_key} = ce66bfcbe18a4812a787125ee25afead</msg>
<status status="PASS" starttime="20210322 17:45:54.991" endtime="20210322 17:45:54.993"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 17:45:54.994" level="INFO">${document_external_key} = ce66bfcbe18a4812a787125ee25afead</msg>
<status status="PASS" starttime="20210322 17:45:54.993" endtime="20210322 17:45:54.994"></status>
</kw>
<status status="PASS" starttime="20210322 17:45:54.699" endtime="20210322 17:45:54.995"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 17:45:54.996" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:45:54.995" endtime="20210322 17:45:54.996"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>RG_FRENTE</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:45:54.998" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 17:45:54.998" endtime="20210322 17:45:54.999"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 17:45:54.999" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 17:45:55.002" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 17:45:54.999" endtime="20210322 17:45:55.002"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:45:55.004" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/0ac8ae1152cd4ef8be284a17717333b5/documents?type=RG_FRENTE, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 17:45:55.265" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:45:55.002" endtime="20210322 17:45:55.265"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:45:55.266" level="INFO">{'id': '251684db2ed54374b7245e13f9c59c4d', 'document_type': 'rg_frente', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/0ac8ae1152cd4ef8be284a17717333b5/documents/251684db2ed54374b7245e13f9c59c4d', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/0ac8ae1152cd4ef8be284a17717333b5', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/0ac8ae1152cd4ef8be284a17717333b5/documents/251684db2ed54374b7245e13f9c59c4d/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 17:45:55.265" endtime="20210322 17:45:55.266"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:45:55.267" level="INFO">0aa905d268e6fa9f</msg>
<status status="PASS" starttime="20210322 17:45:55.266" endtime="20210322 17:45:55.267"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:45:55.268" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:45:55.267" endtime="20210322 17:45:55.268"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 17:45:55.269" level="INFO">${document_external_key} = 251684db2ed54374b7245e13f9c59c4d</msg>
<status status="PASS" starttime="20210322 17:45:55.268" endtime="20210322 17:45:55.269"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 17:45:55.270" level="INFO">${document_external_key} = 251684db2ed54374b7245e13f9c59c4d</msg>
<status status="PASS" starttime="20210322 17:45:55.270" endtime="20210322 17:45:55.271"></status>
</kw>
<status status="PASS" starttime="20210322 17:45:54.997" endtime="20210322 17:45:55.271"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 17:45:55.272" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:45:55.271" endtime="20210322 17:45:55.272"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>RG_VERSO</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:45:55.274" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 17:45:55.273" endtime="20210322 17:45:55.274"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 17:45:55.274" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 17:45:55.276" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 17:45:55.274" endtime="20210322 17:45:55.276"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:45:55.277" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/0ac8ae1152cd4ef8be284a17717333b5/documents?type=RG_VERSO, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 17:45:55.542" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:45:55.277" endtime="20210322 17:45:55.542"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:45:55.543" level="INFO">{'id': '6bc2ad759524460f98c872798a647893', 'document_type': 'rg_verso', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/0ac8ae1152cd4ef8be284a17717333b5/documents/6bc2ad759524460f98c872798a647893', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/0ac8ae1152cd4ef8be284a17717333b5', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/0ac8ae1152cd4ef8be284a17717333b5/documents/6bc2ad759524460f98c872798a647893/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 17:45:55.542" endtime="20210322 17:45:55.543"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:45:55.545" level="INFO">76e70a82489a72da</msg>
<status status="PASS" starttime="20210322 17:45:55.544" endtime="20210322 17:45:55.545"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:45:55.546" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:45:55.545" endtime="20210322 17:45:55.546"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 17:45:55.548" level="INFO">${document_external_key} = 6bc2ad759524460f98c872798a647893</msg>
<status status="PASS" starttime="20210322 17:45:55.547" endtime="20210322 17:45:55.548"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 17:45:55.549" level="INFO">${document_external_key} = 6bc2ad759524460f98c872798a647893</msg>
<status status="PASS" starttime="20210322 17:45:55.549" endtime="20210322 17:45:55.549"></status>
</kw>
<status status="PASS" starttime="20210322 17:45:55.272" endtime="20210322 17:45:55.550"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 17:45:55.551" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:45:55.550" endtime="20210322 17:45:55.551"></status>
</kw>
<kw name="solicitar aprovação do holder" library="accreditation_request_approval">
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:45:55.553" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 17:45:55.553" endtime="20210322 17:45:55.553"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/approval</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:45:55.555" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/0ac8ae1152cd4ef8be284a17717333b5/approval, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data=None 
json=None</msg>
<msg timestamp="20210322 17:45:55.851" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 17:45:55.554" endtime="20210322 17:45:55.852"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:45:55.853" level="INFO">{'message': 'Approval request accepted successfully. Processing analysis'}</msg>
<status status="PASS" starttime="20210322 17:45:55.852" endtime="20210322 17:45:55.853"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:45:55.855" level="INFO">aa75241993e635bf</msg>
<status status="PASS" starttime="20210322 17:45:55.854" endtime="20210322 17:45:55.855"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:45:55.856" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 17:45:55.855" endtime="20210322 17:45:55.856"></status>
</kw>
<status status="PASS" starttime="20210322 17:45:55.552" endtime="20210322 17:45:55.856"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 17:45:55.857" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:45:55.857" endtime="20210322 17:45:55.857"></status>
</kw>
<kw name="recebendo notificação de aprovação" library="accreditation_risk_notification">
<kw name="Uuid 4" library="FakerLibrary">
<doc>Generates a random UUID4 string.
:param cast_to: Specify what type the UUID should be cast to. Default is `str`
:type cast_to: callable</doc>
<assign>
<var>${assessment_id}</var>
</assign>
<msg timestamp="20210322 17:45:55.859" level="INFO">${assessment_id} = 22412ca1-19fd-4ee1-9b4f-82c49d2c1e2e</msg>
<status status="PASS" starttime="20210322 17:45:55.859" endtime="20210322 17:45:55.859"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>year</arg>
</arguments>
<assign>
<var>${year}</var>
</assign>
<msg timestamp="20210322 17:45:55.860" level="INFO">${year} = 2021</msg>
<status status="PASS" starttime="20210322 17:45:55.860" endtime="20210322 17:45:55.860"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>month</arg>
</arguments>
<assign>
<var>${month}</var>
</assign>
<msg timestamp="20210322 17:45:55.861" level="INFO">${month} = 03</msg>
<status status="PASS" starttime="20210322 17:45:55.861" endtime="20210322 17:45:55.862"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>day</arg>
</arguments>
<assign>
<var>${day}</var>
</assign>
<msg timestamp="20210322 17:45:55.863" level="INFO">${day} = 22</msg>
<status status="PASS" starttime="20210322 17:45:55.862" endtime="20210322 17:45:55.863"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:45:55.863" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 17:45:55.863" endtime="20210322 17:45:55.864"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "risk.assessment.result",</arg>
<arg>"resource": "business.holder",</arg>
<arg>"created_at": "${year}-${month}-${day} 15:28:56.747Z",</arg>
<arg>"marketplace_id": "${marketplace_external_key}",</arg>
<arg>"object": {</arg>
<arg>"result": "APPROVED",</arg>
<arg>"holder_id": "${holder_external_key}",</arg>
<arg>"applicant_id": "${application_external_key}",</arg>
<arg>"assessment_id": "${assessment_id}"</arg>
<arg>}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 17:45:55.865" level="INFO">${body} = { "type": "risk.assessment.result", "resource": "business.holder", "created_at": "2021-03-22 15:28:56.747Z", "marketplace_id": "f71a8951368a4cc085cf7875ff44e61c", "object": { "result": "APPROVED", "ho...</msg>
<status status="PASS" starttime="20210322 17:45:55.864" endtime="20210322 17:45:55.865"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/admin/internal_operation/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/registration/approval</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:45:55.866" level="INFO">POST Request using : uri=/admin/internal_operation/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/0ac8ae1152cd4ef8be284a17717333b5/registration/approval, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "risk.assessment.result", "resource": "business.holder", "created_at": "2021-03-22 15:28:56.747Z", "marketplace_id": "f71a8951368a4cc085cf7875ff44e61c", "object": { "result": "APPROVED", "holder_id": "0ac8ae1152cd4ef8be284a17717333b5", "applicant_id": "bcc25a6751c14b52af1340d40dba78c5", "assessment_id": "22412ca1-19fd-4ee1-9b4f-82c49d2c1e2e" } } 
json=None</msg>
<msg timestamp="20210322 17:45:56.096" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 17:45:55.865" endtime="20210322 17:45:56.096"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:45:56.099" level="INFO">{'message': 'Holder approved successfully'}</msg>
<status status="PASS" starttime="20210322 17:45:56.097" endtime="20210322 17:45:56.099"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:45:56.100" level="INFO">f75c096f52cc4e83</msg>
<status status="PASS" starttime="20210322 17:45:56.099" endtime="20210322 17:45:56.100"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:45:56.102" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 17:45:56.101" endtime="20210322 17:45:56.103"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 17:45:56.104" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:45:56.103" endtime="20210322 17:45:56.104"></status>
</kw>
<status status="PASS" starttime="20210322 17:45:55.858" endtime="20210322 17:45:56.105"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 17:45:56.106" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:45:56.105" endtime="20210322 17:45:56.106"></status>
</kw>
<kw name="buscar account por holder" library="accounts_get_accounts_by_holder">
<kw name="conectar accounts" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accounts</arg>
<arg>url=${account_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 17:45:56.110" level="INFO">Creating Session using : alias=accounts, url=https://banking-accounts-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 17:45:56.109" endtime="20210322 17:45:56.110"></status>
</kw>
<status status="PASS" starttime="20210322 17:45:56.108" endtime="20210322 17:45:56.110"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accounts</arg>
<arg>/marketplaces/${marketplace_external_key}/holders/${holder_external_key}/accounts</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:45:56.112" level="INFO">GET Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/holders/0ac8ae1152cd4ef8be284a17717333b5/accounts, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 17:45:56.712" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 17:45:56.111" endtime="20210322 17:45:56.713"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:45:56.714" level="INFO">{'items': [{'id': '476af198c1c24eb7b8caccd74aff5301', 'holder': '0ac8ae1152cd4ef8be284a17717333b5', 'balance': '0.00', 'currency': 'BRL', 'routing_number': '001', 'number': '5300681052', 'status': 'active', 'metadata': {}, 'created_at': '2021-03-22T20:45:57.242426', 'updated_at': '2021-03-22T20:45:57.242426', 'primary': True, 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'uri': '/v2/marketplaces/f71a8951368a4cc085cf7875ff44e61c/accounts/476af198c1c24eb7b8caccd74aff5301', 'resource': 'payment_account'}], 'has_more': False, 'limit': 100, 'total_pages': 1, 'page': 1, 'offset': 0, 'total': '1', 'query_count': '1'}</msg>
<status status="PASS" starttime="20210322 17:45:56.713" endtime="20210322 17:45:56.715"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:45:56.717" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 17:45:56.715" endtime="20210322 17:45:56.717"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["id"]}</arg>
</arguments>
<assign>
<var>${account_external_key}</var>
</assign>
<msg timestamp="20210322 17:45:56.719" level="INFO">${account_external_key} = 476af198c1c24eb7b8caccd74aff5301</msg>
<status status="PASS" starttime="20210322 17:45:56.717" endtime="20210322 17:45:56.720"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_external_key}</arg>
</arguments>
<msg timestamp="20210322 17:45:56.722" level="INFO">${account_external_key} = 476af198c1c24eb7b8caccd74aff5301</msg>
<status status="PASS" starttime="20210322 17:45:56.721" endtime="20210322 17:45:56.722"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["number"]}</arg>
</arguments>
<assign>
<var>${account_number}</var>
</assign>
<msg timestamp="20210322 17:45:56.725" level="INFO">${account_number} = 5300681052</msg>
<status status="PASS" starttime="20210322 17:45:56.723" endtime="20210322 17:45:56.725"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_number}</arg>
</arguments>
<msg timestamp="20210322 17:45:56.727" level="INFO">${account_number} = 5300681052</msg>
<status status="PASS" starttime="20210322 17:45:56.726" endtime="20210322 17:45:56.727"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["routing_number"]}</arg>
</arguments>
<assign>
<var>${account_routing_number}</var>
</assign>
<msg timestamp="20210322 17:45:56.729" level="INFO">${account_routing_number} = 001</msg>
<status status="PASS" starttime="20210322 17:45:56.728" endtime="20210322 17:45:56.730"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_routing_number}</arg>
</arguments>
<msg timestamp="20210322 17:45:56.730" level="INFO">${account_routing_number} = 001</msg>
<status status="PASS" starttime="20210322 17:45:56.730" endtime="20210322 17:45:56.731"></status>
</kw>
<status status="PASS" starttime="20210322 17:45:56.107" endtime="20210322 17:45:56.731"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 17:45:56.731" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:45:56.731" endtime="20210322 17:45:56.732"></status>
</kw>
<status status="PASS" starttime="20210322 17:45:53.532" endtime="20210322 17:45:56.732"></status>
</kw>
<kw name="criar chave pix" library="pix_dict_create_entry">
<arguments>
<arg>type=phone</arg>
<arg>value=${phone_pix}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 17:45:56.733" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 17:45:56.733" endtime="20210322 17:45:56.734"></status>
</kw>
<status status="PASS" starttime="20210322 17:45:56.733" endtime="20210322 17:45:56.735"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${type}</arg>
</arguments>
<msg timestamp="20210322 17:45:56.735" level="INFO">${type} = phone</msg>
<status status="PASS" starttime="20210322 17:45:56.735" endtime="20210322 17:45:56.736"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210322 17:45:56.736" level="INFO">${value} = +5521994006848</msg>
<status status="PASS" starttime="20210322 17:45:56.736" endtime="20210322 17:45:56.736"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:45:56.737" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 17:45:56.737" endtime="20210322 17:45:56.737"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "${type}",</arg>
<arg>"value": "${value}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 17:45:56.738" level="INFO">${body} = { "type": "phone", "value": "+5521994006848" }</msg>
<status status="PASS" starttime="20210322 17:45:56.737" endtime="20210322 17:45:56.738"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:45:56.739" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/0ac8ae1152cd4ef8be284a17717333b5/accounts/476af198c1c24eb7b8caccd74aff5301/entries, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "phone", "value": "+5521994006848" } 
json=None</msg>
<msg timestamp="20210322 17:45:57.434" level="INFO">${response} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20210322 17:45:56.738" endtime="20210322 17:45:57.434"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:45:57.437" level="INFO">{'id': 'ac8465f2048b43b9a0d551547bc2aad3', 'status': 'waiting_ownership_verification', 'created_at': '2021-03-22T05:45:58.614', 'updated_at': '2021-03-22T05:45:58.614', 'key': {'value': '+5521994006848', 'type': 'phone'}, 'account': {'id': '476af198c1c24eb7b8caccd74aff5301', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': '0ac8ae1152cd4ef8be284a17717333b5', 'owner': {'name': 'Holder de teste', 'national_registration': '25349786164', 'type': 'individual'}, 'routing_number': '001', 'number': '5300681052', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}, 'resource': 'pix.entry'}</msg>
<status status="PASS" starttime="20210322 17:45:57.435" endtime="20210322 17:45:57.437"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:45:57.439" level="INFO">4437cf5be345f4ed</msg>
<status status="PASS" starttime="20210322 17:45:57.438" endtime="20210322 17:45:57.439"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 17:45:57.439" level="INFO">202</msg>
<status status="PASS" starttime="20210322 17:45:57.439" endtime="20210322 17:45:57.439"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:45:57.441" level="INFO">${response} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20210322 17:45:57.441" endtime="20210322 17:45:57.441"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${entry_external_key}</var>
</assign>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:45:57.443" endtime="20210322 17:45:57.444"></status>
</kw>
<msg timestamp="20210322 17:45:57.444" level="INFO">${entry_external_key} = ac8465f2048b43b9a0d551547bc2aad3</msg>
<status status="PASS" starttime="20210322 17:45:57.441" endtime="20210322 17:45:57.444"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${entry_external_key}</arg>
</arguments>
<msg timestamp="20210322 17:45:57.445" level="INFO">${entry_external_key} = ac8465f2048b43b9a0d551547bc2aad3</msg>
<status status="PASS" starttime="20210322 17:45:57.445" endtime="20210322 17:45:57.445"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["key"]["value"]}</arg>
</arguments>
<assign>
<var>${entry_key_value}</var>
</assign>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["key"]["value"]}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:45:57.447" endtime="20210322 17:45:57.448"></status>
</kw>
<msg timestamp="20210322 17:45:57.449" level="INFO">${entry_key_value} = +5521994006848</msg>
<status status="PASS" starttime="20210322 17:45:57.446" endtime="20210322 17:45:57.449"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${entry_key_value}</arg>
</arguments>
<msg timestamp="20210322 17:45:57.450" level="INFO">${entry_key_value} = +5521994006848</msg>
<status status="PASS" starttime="20210322 17:45:57.449" endtime="20210322 17:45:57.450"></status>
</kw>
<status status="PASS" starttime="20210322 17:45:56.732" endtime="20210322 17:45:57.450"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${holder_external_key}</arg>
</arguments>
<assign>
<var>${holder_owner}</var>
</assign>
<msg timestamp="20210322 17:45:57.451" level="INFO">${holder_owner} = 0ac8ae1152cd4ef8be284a17717333b5</msg>
<status status="PASS" starttime="20210322 17:45:57.450" endtime="20210322 17:45:57.451"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${holder_type}</arg>
</arguments>
<assign>
<var>${holder_type_owner}</var>
</assign>
<msg timestamp="20210322 17:45:57.452" level="INFO">${holder_type_owner} = individual</msg>
<status status="PASS" starttime="20210322 17:45:57.451" endtime="20210322 17:45:57.452"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${holder_name}</arg>
</arguments>
<assign>
<var>${holder_name_owner}</var>
</assign>
<msg timestamp="20210322 17:45:57.453" level="INFO">${holder_name_owner} = Holder de teste</msg>
<status status="PASS" starttime="20210322 17:45:57.452" endtime="20210322 17:45:57.453"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${national_registration}</arg>
</arguments>
<assign>
<var>${national_registration_owner}</var>
</assign>
<msg timestamp="20210322 17:45:57.453" level="INFO">${national_registration_owner} = 25349786164</msg>
<status status="PASS" starttime="20210322 17:45:57.453" endtime="20210322 17:45:57.453"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${account_external_key}</arg>
</arguments>
<assign>
<var>${account_owner}</var>
</assign>
<msg timestamp="20210322 17:45:57.454" level="INFO">${account_owner} = 476af198c1c24eb7b8caccd74aff5301</msg>
<status status="PASS" starttime="20210322 17:45:57.454" endtime="20210322 17:45:57.454"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${account_number}</arg>
</arguments>
<assign>
<var>${account_number_owner}</var>
</assign>
<msg timestamp="20210322 17:45:57.455" level="INFO">${account_number_owner} = 5300681052</msg>
<status status="PASS" starttime="20210322 17:45:57.455" endtime="20210322 17:45:57.455"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${account_routing_number}</arg>
</arguments>
<assign>
<var>${account_routing_number_owner}</var>
</assign>
<msg timestamp="20210322 17:45:57.456" level="INFO">${account_routing_number_owner} = 001</msg>
<status status="PASS" starttime="20210322 17:45:57.456" endtime="20210322 17:45:57.456"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${entry_external_key}</arg>
</arguments>
<assign>
<var>${entry_owner}</var>
</assign>
<msg timestamp="20210322 17:45:57.457" level="INFO">${entry_owner} = ac8465f2048b43b9a0d551547bc2aad3</msg>
<status status="PASS" starttime="20210322 17:45:57.456" endtime="20210322 17:45:57.457"></status>
</kw>
<kw name="buscar verification code" library="pix_dict_verification_code">
<arguments>
<arg>holder_external_key=${holder_owner}</arg>
<arg>account_external_key=${account_owner}</arg>
<arg>entry_external_key=${entry_owner}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 17:45:57.458" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 17:45:57.458" endtime="20210322 17:45:57.459"></status>
</kw>
<status status="PASS" starttime="20210322 17:45:57.458" endtime="20210322 17:45:57.459"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/admin/internal_operation/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries/${entry_external_key}/code</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:45:57.460" level="INFO">GET Request using : uri=/admin/internal_operation/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/0ac8ae1152cd4ef8be284a17717333b5/accounts/476af198c1c24eb7b8caccd74aff5301/entries/ac8465f2048b43b9a0d551547bc2aad3/code, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 17:45:58.098" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 17:45:57.459" endtime="20210322 17:45:58.098"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:45:58.101" level="INFO">{'code': '5186'}</msg>
<status status="PASS" starttime="20210322 17:45:58.100" endtime="20210322 17:45:58.102"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:45:58.104" level="INFO">88b90b886ba8c834</msg>
<status status="PASS" starttime="20210322 17:45:58.103" endtime="20210322 17:45:58.105"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 17:45:58.107" level="INFO">200</msg>
<status status="PASS" starttime="20210322 17:45:58.106" endtime="20210322 17:45:58.108"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:45:58.109" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 17:45:58.108" endtime="20210322 17:45:58.109"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["code"]}</arg>
</arguments>
<assign>
<var>${verification_code}</var>
</assign>
<msg timestamp="20210322 17:45:58.111" level="INFO">${verification_code} = 5186</msg>
<status status="PASS" starttime="20210322 17:45:58.110" endtime="20210322 17:45:58.112"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${verification_code}</arg>
</arguments>
<msg timestamp="20210322 17:45:58.113" level="INFO">${verification_code} = 5186</msg>
<status status="PASS" starttime="20210322 17:45:58.112" endtime="20210322 17:45:58.113"></status>
</kw>
<status status="PASS" starttime="20210322 17:45:57.457" endtime="20210322 17:45:58.113"></status>
</kw>
<kw name="confirmar propriedade da chave pix" library="pix_dict_confirm_propriety">
<arguments>
<arg>verification_code=${verification_code}</arg>
<arg>holder_external_key=${holder_owner}</arg>
<arg>account_external_key=${account_owner}</arg>
<arg>entry_external_key=${entry_owner}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 17:45:58.116" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 17:45:58.116" endtime="20210322 17:45:58.117"></status>
</kw>
<status status="PASS" starttime="20210322 17:45:58.115" endtime="20210322 17:45:58.118"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:45:58.119" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 17:45:58.118" endtime="20210322 17:45:58.119"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"code": "${verification_code}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 17:45:58.120" level="INFO">${body} = { "code": "5186" }</msg>
<status status="PASS" starttime="20210322 17:45:58.119" endtime="20210322 17:45:58.120"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries/${entry_external_key}/ownership</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:45:58.122" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/0ac8ae1152cd4ef8be284a17717333b5/accounts/476af198c1c24eb7b8caccd74aff5301/entries/ac8465f2048b43b9a0d551547bc2aad3/ownership, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "code": "5186" } 
json=None</msg>
<msg timestamp="20210322 17:45:59.683" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:45:58.121" endtime="20210322 17:45:59.683"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:45:59.685" level="INFO">{'id': 'ac8465f2048b43b9a0d551547bc2aad3', 'status': 'active', 'created_at': '2021-03-22T05:45:58.614', 'updated_at': '2021-03-22T05:46:00.895', 'key': {'value': '+5521994006848', 'type': 'phone'}, 'account': {'id': '476af198c1c24eb7b8caccd74aff5301', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': '0ac8ae1152cd4ef8be284a17717333b5', 'owner': {'name': 'Holder de teste', 'national_registration': '25349786164', 'type': 'individual'}, 'routing_number': '001', 'number': '5300681052', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}, 'resource': 'pix.entry'}</msg>
<status status="PASS" starttime="20210322 17:45:59.684" endtime="20210322 17:45:59.685"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:45:59.688" level="INFO">a5ea54d9f42fb675</msg>
<status status="PASS" starttime="20210322 17:45:59.686" endtime="20210322 17:45:59.688"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 17:45:59.689" level="INFO">201</msg>
<status status="PASS" starttime="20210322 17:45:59.688" endtime="20210322 17:45:59.690"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:45:59.690" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:45:59.690" endtime="20210322 17:45:59.691"></status>
</kw>
<status status="PASS" starttime="20210322 17:45:58.114" endtime="20210322 17:45:59.691"></status>
</kw>
<kw name="validar chave pix" library="asserts">
<arguments>
<arg>key_status=active</arg>
<arg>key_type=${type}</arg>
<arg>key_value=${value}</arg>
<arg>account_external_key=${account_owner}</arg>
<arg>marketplace_external_key=${marketplace_external_key}</arg>
<arg>holder_external_key=${holder_owner}</arg>
<arg>account_number=${account_number_owner}</arg>
<arg>account_routing_number=${account_routing_number_owner}</arg>
<arg>account_type=CACC</arg>
<arg>owner_key_name=${holder_name_owner}</arg>
<arg>national_registration=${national_registration_owner}</arg>
<arg>holder_type=${holder_type}</arg>
<arg>psp_code=19468242</arg>
<arg>psp_name=Zoop Tecnologia e Meios de Pagamento S.A.</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar status da chave</arg>
</arguments>
<msg timestamp="20210322 17:45:59.695" level="INFO">Validar status da chave</msg>
<status status="PASS" starttime="20210322 17:45:59.695" endtime="20210322 17:45:59.696"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["status"]}</arg>
<arg>${key_status}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:45:59.696" endtime="20210322 17:45:59.697"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando Tipo da chave PIX</arg>
</arguments>
<msg timestamp="20210322 17:45:59.698" level="INFO">Validando Tipo da chave PIX</msg>
<status status="PASS" starttime="20210322 17:45:59.698" endtime="20210322 17:45:59.698"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["key"]["type"]}</arg>
<arg>${key_type}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:45:59.700" endtime="20210322 17:45:59.701"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando Valor da chave PIX</arg>
</arguments>
<msg timestamp="20210322 17:45:59.701" level="INFO">Validando Valor da chave PIX</msg>
<status status="PASS" starttime="20210322 17:45:59.701" endtime="20210322 17:45:59.702"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${type}' == 'evp'</arg>
<arg>Should Not Be Empty</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' != 'evp'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${key_value}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${key_value}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:45:59.704" endtime="20210322 17:45:59.705"></status>
</kw>
<status status="PASS" starttime="20210322 17:45:59.702" endtime="20210322 17:45:59.705"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando dados da conta</arg>
</arguments>
<msg timestamp="20210322 17:45:59.706" level="INFO">Validando dados da conta</msg>
<status status="PASS" starttime="20210322 17:45:59.706" endtime="20210322 17:45:59.706"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["id"]}</arg>
<arg>${account_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:45:59.707" endtime="20210322 17:45:59.708"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["marketplace"]}</arg>
<arg>${marketplace_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:45:59.708" endtime="20210322 17:45:59.709"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["holder"]}</arg>
<arg>${holder_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:45:59.709" endtime="20210322 17:45:59.710"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["number"]}</arg>
<arg>${account_number}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:45:59.710" endtime="20210322 17:45:59.711"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["routing_number"]}</arg>
<arg>${account_routing_number}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:45:59.711" endtime="20210322 17:45:59.712"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["type"]}</arg>
<arg>${account_type}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:45:59.713" endtime="20210322 17:45:59.713"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar Proprietário da Account Owner</arg>
</arguments>
<msg timestamp="20210322 17:45:59.714" level="INFO">Validar Proprietário da Account Owner</msg>
<status status="PASS" starttime="20210322 17:45:59.714" endtime="20210322 17:45:59.714"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["account"]["owner"]["name"]}</arg>
<arg>${owner_key_name}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:45:59.715" endtime="20210322 17:45:59.715"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar national_registration da Account Owner</arg>
</arguments>
<msg timestamp="20210322 17:45:59.716" level="INFO">Validar national_registration da Account Owner</msg>
<status status="PASS" starttime="20210322 17:45:59.716" endtime="20210322 17:45:59.716"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["account"]["owner"]["national_registration"]}</arg>
<arg>${national_registration}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:45:59.716" endtime="20210322 17:45:59.717"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar Holder Type do Account Owner</arg>
</arguments>
<msg timestamp="20210322 17:45:59.718" level="INFO">Validar Holder Type do Account Owner</msg>
<status status="PASS" starttime="20210322 17:45:59.717" endtime="20210322 17:45:59.718"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["account"]["owner"]["type"]}</arg>
<arg>${holder_type}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:45:59.718" endtime="20210322 17:45:59.719"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar PSP</arg>
</arguments>
<msg timestamp="20210322 17:45:59.719" level="INFO">Validar PSP</msg>
<status status="PASS" starttime="20210322 17:45:59.719" endtime="20210322 17:45:59.719"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["psp"]["code"]}</arg>
<arg>${psp_code}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:45:59.719" endtime="20210322 17:45:59.721"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["psp"]["name"]}</arg>
<arg>${psp_name}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:45:59.721" endtime="20210322 17:45:59.722"></status>
</kw>
<status status="PASS" starttime="20210322 17:45:59.693" endtime="20210322 17:45:59.722"></status>
</kw>
<kw name="criar holder individual ativo" library="accreditation_create_holder_active">
<kw name="conectar accreditation" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accreditation</arg>
<arg>url=${accreditation_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 17:45:59.723" level="INFO">Creating Session using : alias=accreditation, url=https://banking-accreditation-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 17:45:59.723" endtime="20210322 17:45:59.724"></status>
</kw>
<status status="PASS" starttime="20210322 17:45:59.722" endtime="20210322 17:45:59.724"></status>
</kw>
<kw name="Cpf" library="FakerLibrary">
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 17:45:59.725" level="INFO">${national_registration} = 532.194.680-98</msg>
<status status="PASS" starttime="20210322 17:45:59.724" endtime="20210322 17:45:59.725"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${national_registration}</arg>
<arg>.</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 17:45:59.725" level="INFO">${national_registration} = 532194680-98</msg>
<status status="PASS" starttime="20210322 17:45:59.725" endtime="20210322 17:45:59.726"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${national_registration}</arg>
<arg>-</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 17:45:59.726" level="INFO">${national_registration} = 53219468098</msg>
<status status="PASS" starttime="20210322 17:45:59.726" endtime="20210322 17:45:59.726"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${national_registration}</arg>
</arguments>
<msg timestamp="20210322 17:45:59.727" level="INFO">${national_registration} = 53219468098</msg>
<status status="PASS" starttime="20210322 17:45:59.727" endtime="20210322 17:45:59.727"></status>
</kw>
<kw name="Rg" library="FakerLibrary">
<doc>Brazilian RG, return plain numbers.
Check:  https://www.ngmatematica.com/2014/02/como-determinar-o-digito-verificador-do.html</doc>
<assign>
<var>${identity_card}</var>
</assign>
<msg timestamp="20210322 17:45:59.728" level="INFO">${identity_card} = 027863141</msg>
<status status="PASS" starttime="20210322 17:45:59.727" endtime="20210322 17:45:59.728"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${identity_card}</arg>
</arguments>
<msg timestamp="20210322 17:45:59.728" level="INFO">${identity_card} = 027863141</msg>
<status status="PASS" starttime="20210322 17:45:59.728" endtime="20210322 17:45:59.728"></status>
</kw>
<kw name="criar holder individual" library="accreditation_post_holder_individual">
<arguments>
<arg>holder_type=individual</arg>
<arg>holder_name=${holder_name}</arg>
<arg>email=${email}</arg>
<arg>national_registration=${national_registration}</arg>
<arg>revenue=${revenue}</arg>
<arg>birthday=${birthday}</arg>
<arg>mothers_name=${mothers_name}</arg>
<arg>identity_card=${identity_card}</arg>
<arg>pep=false</arg>
<arg>cbo=${cbo}</arg>
</arguments>
<kw name="conectar accreditation" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accreditation</arg>
<arg>url=${accreditation_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 17:45:59.730" level="INFO">Creating Session using : alias=accreditation, url=https://banking-accreditation-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 17:45:59.730" endtime="20210322 17:45:59.731"></status>
</kw>
<status status="PASS" starttime="20210322 17:45:59.730" endtime="20210322 17:45:59.731"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_type}</arg>
</arguments>
<msg timestamp="20210322 17:45:59.732" level="INFO">${holder_type} = individual</msg>
<status status="PASS" starttime="20210322 17:45:59.731" endtime="20210322 17:45:59.732"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_name}</arg>
</arguments>
<msg timestamp="20210322 17:45:59.733" level="INFO">${holder_name} = Holder de teste</msg>
<status status="PASS" starttime="20210322 17:45:59.732" endtime="20210322 17:45:59.733"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:45:59.733" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 17:45:59.733" endtime="20210322 17:45:59.733"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "${holder_type}",</arg>
<arg>"name": "${holder_name}",</arg>
<arg>"email": "${email}",</arg>
<arg>"national_registration": "${national_registration}",</arg>
<arg>"revenue": ${revenue},</arg>
<arg>"birthday": "${birthday}",</arg>
<arg>"mothers_name": "${mothers_name}",</arg>
<arg>"identity_card": "${identity_card}",</arg>
<arg>"pep": false,</arg>
<arg>"cbo": ${cbo}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 17:45:59.735" level="INFO">${body} = { "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "53219468098", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder",...</msg>
<status status="PASS" starttime="20210322 17:45:59.734" endtime="20210322 17:45:59.735"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:45:59.736" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "53219468098", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder", "identity_card": "027863141", "pep": false, "cbo": 821450 } 
json=None</msg>
<msg timestamp="20210322 17:46:00.421" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:45:59.735" endtime="20210322 17:46:00.422"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:46:00.424" level="INFO">{'id': '5fe2f5b08dba4873a6ccbeba938565cf', 'name': 'Holder de teste', 'revenue': 5500.0, 'email': 'teste@teste.com.br', 'status': 'waiting_info_and_documents', 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'marketplace_name': 'Marketplace de Teste', 'created_at': '2021-03-22T17:46:01.605407', 'updated_at': '2021-03-22T17:46:01.605408', 'type': 'individual', 'national_registration': '53219468098', 'birthday': '1988-04-23', 'mothers_name': 'Mãe do Holder', 'identity_card': '027863141', 'pep': False, 'cbo': '821450', '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/5fe2f5b08dba4873a6ccbeba938565cf', 'type': 'GET'}, 'phones': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/5fe2f5b08dba4873a6ccbeba938565cf/phones', 'type': 'GET'}, 'addresses': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/5fe2f5b08dba4873a6ccbeba938565cf/addresses', 'type': 'GET'}, 'documents': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/5fe2f5b08dba4873a6ccbeba938565cf/documents', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 17:46:00.422" endtime="20210322 17:46:00.425"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:46:00.426" level="INFO">62fbf7773e170293</msg>
<status status="PASS" starttime="20210322 17:46:00.425" endtime="20210322 17:46:00.426"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${body}</arg>
</arguments>
<msg timestamp="20210322 17:46:00.428" level="INFO">{ "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "53219468098", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder", "identity_card": "027863141", "pep": false, "cbo": 821450 }</msg>
<status status="PASS" starttime="20210322 17:46:00.427" endtime="20210322 17:46:00.428"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:46:00.428" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:46:00.428" endtime="20210322 17:46:00.429"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${holder_external_key}</var>
</assign>
<msg timestamp="20210322 17:46:00.431" level="INFO">${holder_external_key} = 5fe2f5b08dba4873a6ccbeba938565cf</msg>
<status status="PASS" starttime="20210322 17:46:00.430" endtime="20210322 17:46:00.431"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_external_key}</arg>
</arguments>
<msg timestamp="20210322 17:46:00.432" level="INFO">${holder_external_key} = 5fe2f5b08dba4873a6ccbeba938565cf</msg>
<status status="PASS" starttime="20210322 17:46:00.432" endtime="20210322 17:46:00.432"></status>
</kw>
<status status="PASS" starttime="20210322 17:45:59.728" endtime="20210322 17:46:00.433"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_name}</arg>
</arguments>
<msg timestamp="20210322 17:46:00.433" level="INFO">${holder_name} = Holder de teste</msg>
<status status="PASS" starttime="20210322 17:46:00.433" endtime="20210322 17:46:00.434"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 17:46:00.435" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:46:00.434" endtime="20210322 17:46:00.435"></status>
</kw>
<kw name="criar holder phone" library="accreditation_post_holder_phone">
<arguments>
<arg>21</arg>
<arg>51</arg>
<arg>996221236</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:46:00.436" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 17:46:00.436" endtime="20210322 17:46:00.437"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"area_code": "${phone_area_code}",</arg>
<arg>"country_code": "${phone_country_code}",</arg>
<arg>"number": "${phone_number}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 17:46:00.437" level="INFO">${body} = { "area_code": "21", "country_code": "51", "number": "996221236" }</msg>
<status status="PASS" starttime="20210322 17:46:00.437" endtime="20210322 17:46:00.437"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/phones</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:46:00.438" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/5fe2f5b08dba4873a6ccbeba938565cf/phones, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "area_code": "21", "country_code": "51", "number": "996221236" } 
json=None</msg>
<msg timestamp="20210322 17:46:00.749" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:46:00.438" endtime="20210322 17:46:00.749"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:46:00.751" level="INFO">{'id': 'cd4affcd357d45a5a9569b71b7601c29', 'area_code': '21', 'country_code': '51', 'number': '996221236', 'main': True, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/5fe2f5b08dba4873a6ccbeba938565cf/phones/cd4affcd357d45a5a9569b71b7601c29', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/5fe2f5b08dba4873a6ccbeba938565cf', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 17:46:00.750" endtime="20210322 17:46:00.751"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:46:00.754" level="INFO">8bcca3836cebd162</msg>
<status status="PASS" starttime="20210322 17:46:00.752" endtime="20210322 17:46:00.754"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:46:00.756" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:46:00.755" endtime="20210322 17:46:00.756"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${phone_external_key}</var>
</assign>
<msg timestamp="20210322 17:46:00.757" level="INFO">${phone_external_key} = cd4affcd357d45a5a9569b71b7601c29</msg>
<status status="PASS" starttime="20210322 17:46:00.756" endtime="20210322 17:46:00.758"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${phone_external_key}</arg>
</arguments>
<msg timestamp="20210322 17:46:00.759" level="INFO">${phone_external_key} = cd4affcd357d45a5a9569b71b7601c29</msg>
<status status="PASS" starttime="20210322 17:46:00.758" endtime="20210322 17:46:00.759"></status>
</kw>
<status status="PASS" starttime="20210322 17:46:00.435" endtime="20210322 17:46:00.759"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 17:46:00.760" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:46:00.760" endtime="20210322 17:46:00.760"></status>
</kw>
<kw name="criar holder address" library="accreditation_post_holder_address">
<arguments>
<arg>Rio de Janeiro</arg>
<arg>Rio de Janeiro</arg>
<arg>Brasil</arg>
<arg>Bairro de Testes</arg>
<arg>Rua de Testes</arg>
<arg>90</arg>
<arg>apto 200</arg>
<arg>21550987</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:46:00.762" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 17:46:00.762" endtime="20210322 17:46:00.762"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"city": "${city}",</arg>
<arg>"state": "${state}",</arg>
<arg>"country": "${country}",</arg>
<arg>"neighborhood": "${neighborhood}",</arg>
<arg>"street": "${street}",</arg>
<arg>"number": "${number}",</arg>
<arg>"complement": "${complement}",</arg>
<arg>"postal_code": "${postal_code}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 17:46:00.764" level="INFO">${body} = { "city": "Rio de Janeiro", "state": "Rio de Janeiro", "country": "Brasil", "neighborhood": "Bairro de Testes", "street": "Rua de Testes", "number": "90", "complement": "apto 200", "postal_code": "215...</msg>
<status status="PASS" starttime="20210322 17:46:00.762" endtime="20210322 17:46:00.764"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/addresses</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:46:00.764" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/5fe2f5b08dba4873a6ccbeba938565cf/addresses, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "city": "Rio de Janeiro", "state": "Rio de Janeiro", "country": "Brasil", "neighborhood": "Bairro de Testes", "street": "Rua de Testes", "number": "90", "complement": "apto 200", "postal_code": "21550987" } 
json=None</msg>
<msg timestamp="20210322 17:46:01.034" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:46:00.764" endtime="20210322 17:46:01.034"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:46:01.037" level="INFO">{'id': 'f66fd18d303b49dfbc6cccd42a4d5cd3', 'street': 'Rua de Testes', 'number': '90', 'city': 'Rio de Janeiro', 'complement': 'apto 200', 'state': 'Rio de Janeiro', 'neighborhood': 'Bairro de Testes', 'postal_code': '21550987', 'country': 'Brasil', 'main': True, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/5fe2f5b08dba4873a6ccbeba938565cf/addresses/f66fd18d303b49dfbc6cccd42a4d5cd3', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/5fe2f5b08dba4873a6ccbeba938565cf', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 17:46:01.035" endtime="20210322 17:46:01.038"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:46:01.040" level="INFO">83963d9040e62684</msg>
<status status="PASS" starttime="20210322 17:46:01.039" endtime="20210322 17:46:01.041"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:46:01.043" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:46:01.042" endtime="20210322 17:46:01.044"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${address_external_key}</var>
</assign>
<msg timestamp="20210322 17:46:01.046" level="INFO">${address_external_key} = f66fd18d303b49dfbc6cccd42a4d5cd3</msg>
<status status="PASS" starttime="20210322 17:46:01.044" endtime="20210322 17:46:01.046"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${address_external_key}</arg>
</arguments>
<msg timestamp="20210322 17:46:01.047" level="INFO">${address_external_key} = f66fd18d303b49dfbc6cccd42a4d5cd3</msg>
<status status="PASS" starttime="20210322 17:46:01.047" endtime="20210322 17:46:01.048"></status>
</kw>
<status status="PASS" starttime="20210322 17:46:00.761" endtime="20210322 17:46:01.048"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 17:46:01.049" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:46:01.049" endtime="20210322 17:46:01.049"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>SELFIE</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:46:01.051" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 17:46:01.051" endtime="20210322 17:46:01.051"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 17:46:01.052" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 17:46:01.055" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 17:46:01.052" endtime="20210322 17:46:01.055"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:46:01.056" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/5fe2f5b08dba4873a6ccbeba938565cf/documents?type=SELFIE, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 17:46:01.425" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:46:01.055" endtime="20210322 17:46:01.425"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:46:01.429" level="INFO">{'id': 'e32df279ee954d34ad2043e3fc78c83f', 'document_type': 'selfie', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/5fe2f5b08dba4873a6ccbeba938565cf/documents/e32df279ee954d34ad2043e3fc78c83f', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/5fe2f5b08dba4873a6ccbeba938565cf', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/5fe2f5b08dba4873a6ccbeba938565cf/documents/e32df279ee954d34ad2043e3fc78c83f/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 17:46:01.427" endtime="20210322 17:46:01.429"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:46:01.433" level="INFO">17b400adc4a994e9</msg>
<status status="PASS" starttime="20210322 17:46:01.431" endtime="20210322 17:46:01.433"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:46:01.435" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:46:01.434" endtime="20210322 17:46:01.435"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 17:46:01.437" level="INFO">${document_external_key} = e32df279ee954d34ad2043e3fc78c83f</msg>
<status status="PASS" starttime="20210322 17:46:01.436" endtime="20210322 17:46:01.437"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 17:46:01.438" level="INFO">${document_external_key} = e32df279ee954d34ad2043e3fc78c83f</msg>
<status status="PASS" starttime="20210322 17:46:01.438" endtime="20210322 17:46:01.438"></status>
</kw>
<status status="PASS" starttime="20210322 17:46:01.050" endtime="20210322 17:46:01.438"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 17:46:01.439" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:46:01.438" endtime="20210322 17:46:01.439"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>RG_FRENTE</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:46:01.441" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 17:46:01.440" endtime="20210322 17:46:01.441"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 17:46:01.442" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 17:46:01.444" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 17:46:01.441" endtime="20210322 17:46:01.444"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:46:01.445" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/5fe2f5b08dba4873a6ccbeba938565cf/documents?type=RG_FRENTE, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 17:46:01.707" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:46:01.445" endtime="20210322 17:46:01.707"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:46:01.708" level="INFO">{'id': 'd77716826d364e8786fef39518da02e0', 'document_type': 'rg_frente', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/5fe2f5b08dba4873a6ccbeba938565cf/documents/d77716826d364e8786fef39518da02e0', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/5fe2f5b08dba4873a6ccbeba938565cf', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/5fe2f5b08dba4873a6ccbeba938565cf/documents/d77716826d364e8786fef39518da02e0/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 17:46:01.708" endtime="20210322 17:46:01.708"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:46:01.708" level="INFO">9a2cbe12fefb8e7f</msg>
<status status="PASS" starttime="20210322 17:46:01.708" endtime="20210322 17:46:01.708"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:46:01.709" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:46:01.709" endtime="20210322 17:46:01.709"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 17:46:01.710" level="INFO">${document_external_key} = d77716826d364e8786fef39518da02e0</msg>
<status status="PASS" starttime="20210322 17:46:01.710" endtime="20210322 17:46:01.710"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 17:46:01.711" level="INFO">${document_external_key} = d77716826d364e8786fef39518da02e0</msg>
<status status="PASS" starttime="20210322 17:46:01.711" endtime="20210322 17:46:01.711"></status>
</kw>
<status status="PASS" starttime="20210322 17:46:01.440" endtime="20210322 17:46:01.711"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 17:46:01.712" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:46:01.711" endtime="20210322 17:46:01.712"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>RG_VERSO</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:46:01.713" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 17:46:01.713" endtime="20210322 17:46:01.713"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 17:46:01.713" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 17:46:01.714" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 17:46:01.713" endtime="20210322 17:46:01.714"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:46:01.715" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/5fe2f5b08dba4873a6ccbeba938565cf/documents?type=RG_VERSO, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 17:46:01.986" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:46:01.715" endtime="20210322 17:46:01.987"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:46:01.990" level="INFO">{'id': '28e0af1c7b624cd99125cc688edfb48f', 'document_type': 'rg_verso', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/5fe2f5b08dba4873a6ccbeba938565cf/documents/28e0af1c7b624cd99125cc688edfb48f', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/5fe2f5b08dba4873a6ccbeba938565cf', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/5fe2f5b08dba4873a6ccbeba938565cf/documents/28e0af1c7b624cd99125cc688edfb48f/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 17:46:01.988" endtime="20210322 17:46:01.990"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:46:01.992" level="INFO">6695f7fe8efcaa4d</msg>
<status status="PASS" starttime="20210322 17:46:01.991" endtime="20210322 17:46:01.993"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:46:01.994" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:46:01.993" endtime="20210322 17:46:01.994"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 17:46:01.996" level="INFO">${document_external_key} = 28e0af1c7b624cd99125cc688edfb48f</msg>
<status status="PASS" starttime="20210322 17:46:01.995" endtime="20210322 17:46:01.997"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 17:46:01.998" level="INFO">${document_external_key} = 28e0af1c7b624cd99125cc688edfb48f</msg>
<status status="PASS" starttime="20210322 17:46:01.997" endtime="20210322 17:46:01.998"></status>
</kw>
<status status="PASS" starttime="20210322 17:46:01.712" endtime="20210322 17:46:01.999"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 17:46:02.000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:46:02.000" endtime="20210322 17:46:02.000"></status>
</kw>
<kw name="solicitar aprovação do holder" library="accreditation_request_approval">
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:46:02.003" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 17:46:02.002" endtime="20210322 17:46:02.003"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/approval</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:46:02.004" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/5fe2f5b08dba4873a6ccbeba938565cf/approval, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data=None 
json=None</msg>
<msg timestamp="20210322 17:46:02.299" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 17:46:02.003" endtime="20210322 17:46:02.299"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:46:02.300" level="INFO">{'message': 'Approval request accepted successfully. Processing analysis'}</msg>
<status status="PASS" starttime="20210322 17:46:02.299" endtime="20210322 17:46:02.300"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:46:02.301" level="INFO">1d58dcd479532138</msg>
<status status="PASS" starttime="20210322 17:46:02.300" endtime="20210322 17:46:02.301"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:46:02.302" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 17:46:02.301" endtime="20210322 17:46:02.302"></status>
</kw>
<status status="PASS" starttime="20210322 17:46:02.001" endtime="20210322 17:46:02.303"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 17:46:02.303" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:46:02.303" endtime="20210322 17:46:02.304"></status>
</kw>
<kw name="recebendo notificação de aprovação" library="accreditation_risk_notification">
<kw name="Uuid 4" library="FakerLibrary">
<doc>Generates a random UUID4 string.
:param cast_to: Specify what type the UUID should be cast to. Default is `str`
:type cast_to: callable</doc>
<assign>
<var>${assessment_id}</var>
</assign>
<msg timestamp="20210322 17:46:02.305" level="INFO">${assessment_id} = 2b8b57d8-b871-48fa-9668-9e00cc8c1662</msg>
<status status="PASS" starttime="20210322 17:46:02.304" endtime="20210322 17:46:02.305"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>year</arg>
</arguments>
<assign>
<var>${year}</var>
</assign>
<msg timestamp="20210322 17:46:02.306" level="INFO">${year} = 2021</msg>
<status status="PASS" starttime="20210322 17:46:02.305" endtime="20210322 17:46:02.306"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>month</arg>
</arguments>
<assign>
<var>${month}</var>
</assign>
<msg timestamp="20210322 17:46:02.307" level="INFO">${month} = 03</msg>
<status status="PASS" starttime="20210322 17:46:02.306" endtime="20210322 17:46:02.307"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>day</arg>
</arguments>
<assign>
<var>${day}</var>
</assign>
<msg timestamp="20210322 17:46:02.307" level="INFO">${day} = 22</msg>
<status status="PASS" starttime="20210322 17:46:02.307" endtime="20210322 17:46:02.307"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:46:02.308" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 17:46:02.308" endtime="20210322 17:46:02.308"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "risk.assessment.result",</arg>
<arg>"resource": "business.holder",</arg>
<arg>"created_at": "${year}-${month}-${day} 15:28:56.747Z",</arg>
<arg>"marketplace_id": "${marketplace_external_key}",</arg>
<arg>"object": {</arg>
<arg>"result": "APPROVED",</arg>
<arg>"holder_id": "${holder_external_key}",</arg>
<arg>"applicant_id": "${application_external_key}",</arg>
<arg>"assessment_id": "${assessment_id}"</arg>
<arg>}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 17:46:02.309" level="INFO">${body} = { "type": "risk.assessment.result", "resource": "business.holder", "created_at": "2021-03-22 15:28:56.747Z", "marketplace_id": "f71a8951368a4cc085cf7875ff44e61c", "object": { "result": "APPROVED", "ho...</msg>
<status status="PASS" starttime="20210322 17:46:02.309" endtime="20210322 17:46:02.309"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/admin/internal_operation/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/registration/approval</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:46:02.311" level="INFO">POST Request using : uri=/admin/internal_operation/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/5fe2f5b08dba4873a6ccbeba938565cf/registration/approval, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "risk.assessment.result", "resource": "business.holder", "created_at": "2021-03-22 15:28:56.747Z", "marketplace_id": "f71a8951368a4cc085cf7875ff44e61c", "object": { "result": "APPROVED", "holder_id": "5fe2f5b08dba4873a6ccbeba938565cf", "applicant_id": "bcc25a6751c14b52af1340d40dba78c5", "assessment_id": "2b8b57d8-b871-48fa-9668-9e00cc8c1662" } } 
json=None</msg>
<msg timestamp="20210322 17:46:02.516" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 17:46:02.310" endtime="20210322 17:46:02.517"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:46:02.520" level="INFO">{'message': 'Holder approved successfully'}</msg>
<status status="PASS" starttime="20210322 17:46:02.519" endtime="20210322 17:46:02.521"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:46:02.522" level="INFO">46ed958e4dc2411c</msg>
<status status="PASS" starttime="20210322 17:46:02.521" endtime="20210322 17:46:02.522"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:46:02.524" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 17:46:02.523" endtime="20210322 17:46:02.524"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 17:46:02.525" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:46:02.525" endtime="20210322 17:46:02.526"></status>
</kw>
<status status="PASS" starttime="20210322 17:46:02.304" endtime="20210322 17:46:02.526"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 17:46:02.527" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:46:02.526" endtime="20210322 17:46:02.527"></status>
</kw>
<kw name="buscar account por holder" library="accounts_get_accounts_by_holder">
<kw name="conectar accounts" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accounts</arg>
<arg>url=${account_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 17:46:02.530" level="INFO">Creating Session using : alias=accounts, url=https://banking-accounts-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 17:46:02.529" endtime="20210322 17:46:02.530"></status>
</kw>
<status status="PASS" starttime="20210322 17:46:02.528" endtime="20210322 17:46:02.531"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accounts</arg>
<arg>/marketplaces/${marketplace_external_key}/holders/${holder_external_key}/accounts</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:46:02.532" level="INFO">GET Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/holders/5fe2f5b08dba4873a6ccbeba938565cf/accounts, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 17:46:03.172" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 17:46:02.531" endtime="20210322 17:46:03.172"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:46:03.173" level="INFO">{'items': [{'id': '21387220ff2f4b9a8d786b5a5af49d85', 'holder': '5fe2f5b08dba4873a6ccbeba938565cf', 'balance': '0.00', 'currency': 'BRL', 'routing_number': '001', 'number': '9964851310', 'status': 'active', 'metadata': {}, 'created_at': '2021-03-22T20:46:03.69712', 'updated_at': '2021-03-22T20:46:03.69712', 'primary': True, 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'uri': '/v2/marketplaces/f71a8951368a4cc085cf7875ff44e61c/accounts/21387220ff2f4b9a8d786b5a5af49d85', 'resource': 'payment_account'}], 'has_more': False, 'limit': 100, 'total_pages': 1, 'page': 1, 'offset': 0, 'total': '1', 'query_count': '1'}</msg>
<status status="PASS" starttime="20210322 17:46:03.172" endtime="20210322 17:46:03.173"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:46:03.174" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 17:46:03.174" endtime="20210322 17:46:03.174"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["id"]}</arg>
</arguments>
<assign>
<var>${account_external_key}</var>
</assign>
<msg timestamp="20210322 17:46:03.176" level="INFO">${account_external_key} = 21387220ff2f4b9a8d786b5a5af49d85</msg>
<status status="PASS" starttime="20210322 17:46:03.175" endtime="20210322 17:46:03.176"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_external_key}</arg>
</arguments>
<msg timestamp="20210322 17:46:03.177" level="INFO">${account_external_key} = 21387220ff2f4b9a8d786b5a5af49d85</msg>
<status status="PASS" starttime="20210322 17:46:03.176" endtime="20210322 17:46:03.177"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["number"]}</arg>
</arguments>
<assign>
<var>${account_number}</var>
</assign>
<msg timestamp="20210322 17:46:03.178" level="INFO">${account_number} = 9964851310</msg>
<status status="PASS" starttime="20210322 17:46:03.177" endtime="20210322 17:46:03.178"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_number}</arg>
</arguments>
<msg timestamp="20210322 17:46:03.180" level="INFO">${account_number} = 9964851310</msg>
<status status="PASS" starttime="20210322 17:46:03.179" endtime="20210322 17:46:03.180"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["routing_number"]}</arg>
</arguments>
<assign>
<var>${account_routing_number}</var>
</assign>
<msg timestamp="20210322 17:46:03.180" level="INFO">${account_routing_number} = 001</msg>
<status status="PASS" starttime="20210322 17:46:03.180" endtime="20210322 17:46:03.181"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_routing_number}</arg>
</arguments>
<msg timestamp="20210322 17:46:03.181" level="INFO">${account_routing_number} = 001</msg>
<status status="PASS" starttime="20210322 17:46:03.181" endtime="20210322 17:46:03.181"></status>
</kw>
<status status="PASS" starttime="20210322 17:46:02.527" endtime="20210322 17:46:03.182"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 17:46:03.183" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:46:03.183" endtime="20210322 17:46:03.183"></status>
</kw>
<status status="PASS" starttime="20210322 17:45:59.722" endtime="20210322 17:46:03.183"></status>
</kw>
<kw name="criar chave pix" library="pix_dict_create_entry">
<arguments>
<arg>type=phone</arg>
<arg>value=${phone_pix}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 17:46:03.186" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 17:46:03.185" endtime="20210322 17:46:03.186"></status>
</kw>
<status status="PASS" starttime="20210322 17:46:03.185" endtime="20210322 17:46:03.186"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${type}</arg>
</arguments>
<msg timestamp="20210322 17:46:03.187" level="INFO">${type} = phone</msg>
<status status="PASS" starttime="20210322 17:46:03.187" endtime="20210322 17:46:03.187"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210322 17:46:03.187" level="INFO">${value} = +5521994006848</msg>
<status status="PASS" starttime="20210322 17:46:03.187" endtime="20210322 17:46:03.188"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:46:03.188" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 17:46:03.188" endtime="20210322 17:46:03.188"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "${type}",</arg>
<arg>"value": "${value}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 17:46:03.189" level="INFO">${body} = { "type": "phone", "value": "+5521994006848" }</msg>
<status status="PASS" starttime="20210322 17:46:03.188" endtime="20210322 17:46:03.189"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:46:03.190" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/5fe2f5b08dba4873a6ccbeba938565cf/accounts/21387220ff2f4b9a8d786b5a5af49d85/entries, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "phone", "value": "+5521994006848" } 
json=None</msg>
<msg timestamp="20210322 17:46:03.868" level="INFO">${response} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20210322 17:46:03.190" endtime="20210322 17:46:03.868"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:46:03.869" level="INFO">{'id': '7f1cf9cae2084f4480b62b713a705451', 'status': 'waiting_ownership_verification', 'created_at': '2021-03-22T05:46:05.063', 'updated_at': '2021-03-22T05:46:05.063', 'key': {'value': '+5521994006848', 'type': 'phone'}, 'account': {'id': '21387220ff2f4b9a8d786b5a5af49d85', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': '5fe2f5b08dba4873a6ccbeba938565cf', 'owner': {'name': 'Holder de teste', 'national_registration': '53219468098', 'type': 'individual'}, 'routing_number': '001', 'number': '9964851310', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}, 'resource': 'pix.entry'}</msg>
<status status="PASS" starttime="20210322 17:46:03.868" endtime="20210322 17:46:03.869"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:46:03.872" level="INFO">fd5ea6d64d41e985</msg>
<status status="PASS" starttime="20210322 17:46:03.871" endtime="20210322 17:46:03.872"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 17:46:03.873" level="INFO">202</msg>
<status status="PASS" starttime="20210322 17:46:03.872" endtime="20210322 17:46:03.873"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:46:03.874" level="INFO">${response} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20210322 17:46:03.874" endtime="20210322 17:46:03.875"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${entry_external_key}</var>
</assign>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:46:03.876" endtime="20210322 17:46:03.878"></status>
</kw>
<msg timestamp="20210322 17:46:03.878" level="INFO">${entry_external_key} = 7f1cf9cae2084f4480b62b713a705451</msg>
<status status="PASS" starttime="20210322 17:46:03.875" endtime="20210322 17:46:03.878"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${entry_external_key}</arg>
</arguments>
<msg timestamp="20210322 17:46:03.879" level="INFO">${entry_external_key} = 7f1cf9cae2084f4480b62b713a705451</msg>
<status status="PASS" starttime="20210322 17:46:03.878" endtime="20210322 17:46:03.879"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["key"]["value"]}</arg>
</arguments>
<assign>
<var>${entry_key_value}</var>
</assign>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["key"]["value"]}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:46:03.881" endtime="20210322 17:46:03.881"></status>
</kw>
<msg timestamp="20210322 17:46:03.882" level="INFO">${entry_key_value} = +5521994006848</msg>
<status status="PASS" starttime="20210322 17:46:03.879" endtime="20210322 17:46:03.882"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${entry_key_value}</arg>
</arguments>
<msg timestamp="20210322 17:46:03.882" level="INFO">${entry_key_value} = +5521994006848</msg>
<status status="PASS" starttime="20210322 17:46:03.882" endtime="20210322 17:46:03.883"></status>
</kw>
<status status="PASS" starttime="20210322 17:46:03.184" endtime="20210322 17:46:03.883"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${holder_external_key}</arg>
</arguments>
<assign>
<var>${holder_claimer}</var>
</assign>
<msg timestamp="20210322 17:46:03.884" level="INFO">${holder_claimer} = 5fe2f5b08dba4873a6ccbeba938565cf</msg>
<status status="PASS" starttime="20210322 17:46:03.883" endtime="20210322 17:46:03.884"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${holder_type}</arg>
</arguments>
<assign>
<var>${holder_type_claimer}</var>
</assign>
<msg timestamp="20210322 17:46:03.885" level="INFO">${holder_type_claimer} = individual</msg>
<status status="PASS" starttime="20210322 17:46:03.884" endtime="20210322 17:46:03.885"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${holder_name}</arg>
</arguments>
<assign>
<var>${holder_name_claimer}</var>
</assign>
<msg timestamp="20210322 17:46:03.885" level="INFO">${holder_name_claimer} = Holder de teste</msg>
<status status="PASS" starttime="20210322 17:46:03.885" endtime="20210322 17:46:03.885"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${national_registration}</arg>
</arguments>
<assign>
<var>${national_registration_claimer}</var>
</assign>
<msg timestamp="20210322 17:46:03.886" level="INFO">${national_registration_claimer} = 53219468098</msg>
<status status="PASS" starttime="20210322 17:46:03.885" endtime="20210322 17:46:03.887"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${account_external_key}</arg>
</arguments>
<assign>
<var>${account_claimer}</var>
</assign>
<msg timestamp="20210322 17:46:03.887" level="INFO">${account_claimer} = 21387220ff2f4b9a8d786b5a5af49d85</msg>
<status status="PASS" starttime="20210322 17:46:03.887" endtime="20210322 17:46:03.887"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${account_number}</arg>
</arguments>
<assign>
<var>${account_number_claimer}</var>
</assign>
<msg timestamp="20210322 17:46:03.888" level="INFO">${account_number_claimer} = 9964851310</msg>
<status status="PASS" starttime="20210322 17:46:03.888" endtime="20210322 17:46:03.888"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${account_routing_number}</arg>
</arguments>
<assign>
<var>${account_routing_number_claimer}</var>
</assign>
<msg timestamp="20210322 17:46:03.888" level="INFO">${account_routing_number_claimer} = 001</msg>
<status status="PASS" starttime="20210322 17:46:03.888" endtime="20210322 17:46:03.888"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${entry_external_key}</arg>
</arguments>
<assign>
<var>${entry_claimer}</var>
</assign>
<msg timestamp="20210322 17:46:03.889" level="INFO">${entry_claimer} = 7f1cf9cae2084f4480b62b713a705451</msg>
<status status="PASS" starttime="20210322 17:46:03.889" endtime="20210322 17:46:03.889"></status>
</kw>
<kw name="buscar verification code" library="pix_dict_verification_code">
<arguments>
<arg>holder_external_key=${holder_claimer}</arg>
<arg>account_external_key=${account_claimer}</arg>
<arg>entry_external_key=${entry_claimer}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 17:46:03.891" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 17:46:03.891" endtime="20210322 17:46:03.892"></status>
</kw>
<status status="PASS" starttime="20210322 17:46:03.890" endtime="20210322 17:46:03.892"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/admin/internal_operation/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries/${entry_external_key}/code</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:46:03.893" level="INFO">GET Request using : uri=/admin/internal_operation/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/5fe2f5b08dba4873a6ccbeba938565cf/accounts/21387220ff2f4b9a8d786b5a5af49d85/entries/7f1cf9cae2084f4480b62b713a705451/code, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 17:46:04.538" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 17:46:03.892" endtime="20210322 17:46:04.538"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:46:04.541" level="INFO">{'code': '3224'}</msg>
<status status="PASS" starttime="20210322 17:46:04.539" endtime="20210322 17:46:04.541"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:46:04.543" level="INFO">93f7853ef28b6aab</msg>
<status status="PASS" starttime="20210322 17:46:04.542" endtime="20210322 17:46:04.544"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 17:46:04.546" level="INFO">200</msg>
<status status="PASS" starttime="20210322 17:46:04.545" endtime="20210322 17:46:04.546"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:46:04.549" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 17:46:04.547" endtime="20210322 17:46:04.549"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["code"]}</arg>
</arguments>
<assign>
<var>${verification_code}</var>
</assign>
<msg timestamp="20210322 17:46:04.552" level="INFO">${verification_code} = 3224</msg>
<status status="PASS" starttime="20210322 17:46:04.550" endtime="20210322 17:46:04.552"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${verification_code}</arg>
</arguments>
<msg timestamp="20210322 17:46:04.554" level="INFO">${verification_code} = 3224</msg>
<status status="PASS" starttime="20210322 17:46:04.553" endtime="20210322 17:46:04.555"></status>
</kw>
<status status="PASS" starttime="20210322 17:46:03.889" endtime="20210322 17:46:04.555"></status>
</kw>
<kw name="confirmar propriedade da chave pix" library="pix_dict_confirm_propriety">
<arguments>
<arg>verification_code=${verification_code}</arg>
<arg>holder_external_key=${holder_claimer}</arg>
<arg>account_external_key=${account_claimer}</arg>
<arg>entry_external_key=${entry_claimer}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 17:46:04.559" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 17:46:04.558" endtime="20210322 17:46:04.560"></status>
</kw>
<status status="PASS" starttime="20210322 17:46:04.557" endtime="20210322 17:46:04.560"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:46:04.561" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 17:46:04.561" endtime="20210322 17:46:04.561"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"code": "${verification_code}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 17:46:04.563" level="INFO">${body} = { "code": "3224" }</msg>
<status status="PASS" starttime="20210322 17:46:04.562" endtime="20210322 17:46:04.563"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries/${entry_external_key}/ownership</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:46:04.565" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/5fe2f5b08dba4873a6ccbeba938565cf/accounts/21387220ff2f4b9a8d786b5a5af49d85/entries/7f1cf9cae2084f4480b62b713a705451/ownership, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "code": "3224" } 
json=None</msg>
<msg timestamp="20210322 17:46:05.950" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:46:04.563" endtime="20210322 17:46:05.950"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:46:05.953" level="INFO">{'id': '7f1cf9cae2084f4480b62b713a705451', 'status': 'waiting_ownership_claiming', 'created_at': '2021-03-22T05:46:05.063', 'updated_at': '2021-03-22T05:46:07.165', 'key': {'value': '+5521994006848', 'type': 'phone'}, 'account': {'id': '21387220ff2f4b9a8d786b5a5af49d85', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': '5fe2f5b08dba4873a6ccbeba938565cf', 'owner': {'name': 'Holder de teste', 'national_registration': '53219468098', 'type': 'individual'}, 'routing_number': '001', 'number': '9964851310', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}, 'resource': 'pix.entry'}</msg>
<status status="PASS" starttime="20210322 17:46:05.951" endtime="20210322 17:46:05.954"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:46:05.956" level="INFO">def553a03f4046f5</msg>
<status status="PASS" starttime="20210322 17:46:05.955" endtime="20210322 17:46:05.956"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 17:46:05.959" level="INFO">201</msg>
<status status="PASS" starttime="20210322 17:46:05.957" endtime="20210322 17:46:05.959"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:46:05.961" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:46:05.960" endtime="20210322 17:46:05.962"></status>
</kw>
<status status="PASS" starttime="20210322 17:46:04.556" endtime="20210322 17:46:05.962"></status>
</kw>
<kw name="validar chave pix" library="asserts">
<arguments>
<arg>key_status=waiting_ownership_claiming</arg>
<arg>key_type=${type}</arg>
<arg>key_value=${value}</arg>
<arg>account_external_key=${account_claimer}</arg>
<arg>marketplace_external_key=${marketplace_external_key}</arg>
<arg>holder_external_key=${holder_claimer}</arg>
<arg>account_number=${account_number_claimer}</arg>
<arg>account_routing_number=${account_routing_number_claimer}</arg>
<arg>account_type=CACC</arg>
<arg>owner_key_name=${holder_name_claimer}</arg>
<arg>national_registration=${national_registration_claimer}</arg>
<arg>holder_type=${holder_type}</arg>
<arg>psp_code=19468242</arg>
<arg>psp_name=Zoop Tecnologia e Meios de Pagamento S.A.</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar status da chave</arg>
</arguments>
<msg timestamp="20210322 17:46:05.966" level="INFO">Validar status da chave</msg>
<status status="PASS" starttime="20210322 17:46:05.966" endtime="20210322 17:46:05.966"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["status"]}</arg>
<arg>${key_status}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:46:05.967" endtime="20210322 17:46:05.968"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando Tipo da chave PIX</arg>
</arguments>
<msg timestamp="20210322 17:46:05.969" level="INFO">Validando Tipo da chave PIX</msg>
<status status="PASS" starttime="20210322 17:46:05.969" endtime="20210322 17:46:05.969"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["key"]["type"]}</arg>
<arg>${key_type}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:46:05.969" endtime="20210322 17:46:05.971"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando Valor da chave PIX</arg>
</arguments>
<msg timestamp="20210322 17:46:05.971" level="INFO">Validando Valor da chave PIX</msg>
<status status="PASS" starttime="20210322 17:46:05.971" endtime="20210322 17:46:05.972"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${type}' == 'evp'</arg>
<arg>Should Not Be Empty</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' != 'evp'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${key_value}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${key_value}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:46:05.973" endtime="20210322 17:46:05.974"></status>
</kw>
<status status="PASS" starttime="20210322 17:46:05.972" endtime="20210322 17:46:05.974"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando dados da conta</arg>
</arguments>
<msg timestamp="20210322 17:46:05.974" level="INFO">Validando dados da conta</msg>
<status status="PASS" starttime="20210322 17:46:05.974" endtime="20210322 17:46:05.975"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["id"]}</arg>
<arg>${account_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:46:05.975" endtime="20210322 17:46:05.976"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["marketplace"]}</arg>
<arg>${marketplace_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:46:05.976" endtime="20210322 17:46:05.977"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["holder"]}</arg>
<arg>${holder_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:46:05.977" endtime="20210322 17:46:05.978"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["number"]}</arg>
<arg>${account_number}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:46:05.978" endtime="20210322 17:46:05.979"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["routing_number"]}</arg>
<arg>${account_routing_number}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:46:05.979" endtime="20210322 17:46:05.980"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["type"]}</arg>
<arg>${account_type}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:46:05.980" endtime="20210322 17:46:05.981"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar Proprietário da Account Owner</arg>
</arguments>
<msg timestamp="20210322 17:46:05.982" level="INFO">Validar Proprietário da Account Owner</msg>
<status status="PASS" starttime="20210322 17:46:05.981" endtime="20210322 17:46:05.982"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["account"]["owner"]["name"]}</arg>
<arg>${owner_key_name}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:46:05.982" endtime="20210322 17:46:05.983"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar national_registration da Account Owner</arg>
</arguments>
<msg timestamp="20210322 17:46:05.984" level="INFO">Validar national_registration da Account Owner</msg>
<status status="PASS" starttime="20210322 17:46:05.983" endtime="20210322 17:46:05.984"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["account"]["owner"]["national_registration"]}</arg>
<arg>${national_registration}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:46:05.984" endtime="20210322 17:46:05.985"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar Holder Type do Account Owner</arg>
</arguments>
<msg timestamp="20210322 17:46:05.986" level="INFO">Validar Holder Type do Account Owner</msg>
<status status="PASS" starttime="20210322 17:46:05.985" endtime="20210322 17:46:05.986"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["account"]["owner"]["type"]}</arg>
<arg>${holder_type}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:46:05.986" endtime="20210322 17:46:05.987"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar PSP</arg>
</arguments>
<msg timestamp="20210322 17:46:05.987" level="INFO">Validar PSP</msg>
<status status="PASS" starttime="20210322 17:46:05.987" endtime="20210322 17:46:05.988"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["psp"]["code"]}</arg>
<arg>${psp_code}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:46:05.988" endtime="20210322 17:46:05.989"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["psp"]["name"]}</arg>
<arg>${psp_name}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:46:05.989" endtime="20210322 17:46:05.990"></status>
</kw>
<status status="PASS" starttime="20210322 17:46:05.963" endtime="20210322 17:46:05.990"></status>
</kw>
<kw name="criar reivindicação de posse" library="pix_dict_create_claims">
<arguments>
<arg>holder_external_key=${holder_claimer}</arg>
<arg>account_external_key=${account_claimer}</arg>
<arg>entry_external_key=${entry_claimer}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 17:46:05.992" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 17:46:05.992" endtime="20210322 17:46:05.993"></status>
</kw>
<status status="PASS" starttime="20210322 17:46:05.991" endtime="20210322 17:46:05.993"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries/${entry_external_key}/claims</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:46:05.994" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/5fe2f5b08dba4873a6ccbeba938565cf/accounts/21387220ff2f4b9a8d786b5a5af49d85/entries/7f1cf9cae2084f4480b62b713a705451/claims, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 17:46:07.769" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:46:05.993" endtime="20210322 17:46:07.769"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:46:07.772" level="INFO">{'id': '1f76e16a3a9548528a9bba54d4afa137', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'created_at': '2021-03-22T05:46:08.977', 'updated_at': '2021-03-22T05:46:08.977', 'type': 'OWNERSHIP', 'status': 'open', 'key': {'value': '+5521994006848', 'type': 'phone'}, 'claimer': {'name': 'Holder de teste', 'national_registration': '53219468098', 'type': 'individual', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': '5fe2f5b08dba4873a6ccbeba938565cf', 'account': {'digital_account_id': '21387220ff2f4b9a8d786b5a5af49d85', 'routing_number': '001', 'number': '9964851310', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}}, 'donor': {'name': 'Holder de teste', 'national_registration': '25349786164', 'type': 'individual', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': '0ac8ae1152cd4ef8be284a17717333b5', 'account': {'digital_account_id': '476af198c1c24eb7b8caccd74aff5301', 'routing_number': '001', 'number': '5300681052', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}}, 'completion_period_end': '2021-04-05T08:46:08.000', 'resolution_period_end': '2021-03-29T08:46:08.000', 'resource': 'pix.claim'}</msg>
<status status="PASS" starttime="20210322 17:46:07.770" endtime="20210322 17:46:07.772"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:46:07.775" level="INFO">3582572456d26c7f</msg>
<status status="PASS" starttime="20210322 17:46:07.773" endtime="20210322 17:46:07.775"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 17:46:07.777" level="INFO">201</msg>
<status status="PASS" starttime="20210322 17:46:07.776" endtime="20210322 17:46:07.778"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:46:07.780" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:46:07.779" endtime="20210322 17:46:07.781"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${claim_external_key}</var>
</assign>
<msg timestamp="20210322 17:46:07.784" level="INFO">${claim_external_key} = 1f76e16a3a9548528a9bba54d4afa137</msg>
<status status="PASS" starttime="20210322 17:46:07.782" endtime="20210322 17:46:07.784"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${claim_external_key}</arg>
</arguments>
<msg timestamp="20210322 17:46:07.785" level="INFO">${claim_external_key} = 1f76e16a3a9548528a9bba54d4afa137</msg>
<status status="PASS" starttime="20210322 17:46:07.785" endtime="20210322 17:46:07.786"></status>
</kw>
<status status="PASS" starttime="20210322 17:46:05.990" endtime="20210322 17:46:07.786"></status>
</kw>
<kw name="buscar reivindicação de posse" library="pix_dict_get_claims">
<arguments>
<arg>holder_external_key=${holder_claimer}</arg>
<arg>account_external_key=${account_claimer}</arg>
<arg>claim_external_key=${claim_external_key}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 17:46:07.789" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 17:46:07.789" endtime="20210322 17:46:07.790"></status>
</kw>
<status status="PASS" starttime="20210322 17:46:07.788" endtime="20210322 17:46:07.790"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/claims/${claim_external_key}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:46:07.792" level="INFO">GET Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/5fe2f5b08dba4873a6ccbeba938565cf/accounts/21387220ff2f4b9a8d786b5a5af49d85/claims/1f76e16a3a9548528a9bba54d4afa137, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 17:46:08.429" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 17:46:07.791" endtime="20210322 17:46:08.429"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:46:08.434" level="INFO">{'id': '1f76e16a3a9548528a9bba54d4afa137', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'created_at': '2021-03-22T05:46:08.977', 'updated_at': '2021-03-22T05:46:08.977', 'type': 'OWNERSHIP', 'status': 'open', 'key': {'value': '+5521994006848', 'type': 'phone'}, 'claimer': {'name': 'Holder de teste', 'national_registration': '53219468098', 'type': 'individual', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': '5fe2f5b08dba4873a6ccbeba938565cf', 'account': {'digital_account_id': '21387220ff2f4b9a8d786b5a5af49d85', 'routing_number': '001', 'number': '9964851310', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}}, 'donor': {'name': 'Holder de teste', 'national_registration': '25349786164', 'type': 'individual', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': '0ac8ae1152cd4ef8be284a17717333b5', 'account': {'digital_account_id': '476af198c1c24eb7b8caccd74aff5301', 'routing_number': '001', 'number': '5300681052', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}}, 'completion_period_end': '2021-04-05T08:46:08.000', 'resolution_period_end': '2021-03-29T08:46:08.000', 'resource': 'pix.claim'}</msg>
<status status="PASS" starttime="20210322 17:46:08.432" endtime="20210322 17:46:08.434"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:46:08.436" level="INFO">57b4338b2026a6ee</msg>
<status status="PASS" starttime="20210322 17:46:08.435" endtime="20210322 17:46:08.437"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 17:46:08.439" level="INFO">200</msg>
<status status="PASS" starttime="20210322 17:46:08.438" endtime="20210322 17:46:08.439"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:46:08.440" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 17:46:08.439" endtime="20210322 17:46:08.440"></status>
</kw>
<status status="PASS" starttime="20210322 17:46:07.786" endtime="20210322 17:46:08.440"></status>
</kw>
<kw name="validar reivindicação" library="asserts">
<arguments>
<arg>marketplace_external_key=${marketplace_external_key}</arg>
<arg>claim_type=OWNERSHIP</arg>
<arg>claim_status=open</arg>
<arg>key_value=${value}</arg>
<arg>key_type=${type}</arg>
<arg>claimer_name=${holder_name_claimer}</arg>
<arg>claimer_national_registration=${national_registration_claimer}</arg>
<arg>claimer_type=${holder_type_claimer}</arg>
<arg>claimer_marketplace=${marketplace_external_key}</arg>
<arg>claimer_holder_id=${holder_claimer}</arg>
<arg>claimer_account_id=${account_claimer}</arg>
<arg>claimer_routing_number=${account_routing_number_claimer}</arg>
<arg>claimer_account_number=${account_number_claimer}</arg>
<arg>claimer_account_type=CACC</arg>
<arg>claimer_psp_code=${psp_code}</arg>
<arg>claimer_psp_name=${psp_name}</arg>
<arg>donor_name=${holder_name_owner}</arg>
<arg>donor_national_registration=${national_registration_owner}</arg>
<arg>donor_type=${holder_type_owner}</arg>
<arg>donor_marketplace=${marketplace_external_key}</arg>
<arg>donor_holder_id=${holder_owner}</arg>
<arg>donor_account_id=${account_owner}</arg>
<arg>donor_routing_number=${account_routing_number_owner}</arg>
<arg>donor_account_number=${account_number_owner}</arg>
<arg>donor_account_type=CACC</arg>
<arg>donor_psp_code=${psp_code}</arg>
<arg>donor_psp_name=${psp_name}</arg>
<arg>claim_resource=pix.claim</arg>
</arguments>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<arguments>
<arg>result_format=datetime</arg>
</arguments>
<assign>
<var>${date}</var>
</assign>
<msg timestamp="20210322 17:46:08.445" level="INFO">${date} = 2021-03-22 17:46:08.444827</msg>
<status status="PASS" starttime="20210322 17:46:08.444" endtime="20210322 17:46:08.445"></status>
</kw>
<kw name="Convert Date" library="DateTime">
<doc>Converts between supported `date formats`.</doc>
<arguments>
<arg>${date}</arg>
<arg>exclude_millis=yes</arg>
<arg>result_format=%Y-%m-%d</arg>
<arg>date_format=%d-%m-%Y</arg>
</arguments>
<assign>
<var>${date}</var>
</assign>
<msg timestamp="20210322 17:46:08.446" level="INFO">${date} = 2021-03-22</msg>
<status status="PASS" starttime="20210322 17:46:08.445" endtime="20210322 17:46:08.446"></status>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${response.json()["id"]}</arg>
</arguments>
<msg timestamp="20210322 17:46:08.448" level="INFO">Length is 32</msg>
<status status="PASS" starttime="20210322 17:46:08.447" endtime="20210322 17:46:08.448"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["marketplace"]}</arg>
<arg>${marketplace_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:46:08.448" endtime="20210322 17:46:08.449"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response.json()["created_at"]}</arg>
<arg>${date}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:46:08.449" endtime="20210322 17:46:08.450"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response.json()["updated_at"]}</arg>
<arg>${date}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:46:08.450" endtime="20210322 17:46:08.451"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["type"]}</arg>
<arg>${claim_type}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:46:08.451" endtime="20210322 17:46:08.452"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["status"]}</arg>
<arg>${claim_status}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:46:08.453" endtime="20210322 17:46:08.453"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${key_value}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:46:08.454" endtime="20210322 17:46:08.454"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["key"]["type"]}</arg>
<arg>${key_type}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:46:08.454" endtime="20210322 17:46:08.455"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["claimer"]["name"]}</arg>
<arg>${claimer_name}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:46:08.455" endtime="20210322 17:46:08.456"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["claimer"]["national_registration"]}</arg>
<arg>${claimer_national_registration}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:46:08.456" endtime="20210322 17:46:08.457"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["claimer"]["type"]}</arg>
<arg>${claimer_type}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:46:08.457" endtime="20210322 17:46:08.458"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["claimer"]["marketplace"]}</arg>
<arg>${claimer_marketplace}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:46:08.458" endtime="20210322 17:46:08.459"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["claimer"]["holder"]}</arg>
<arg>${claimer_holder_id}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:46:08.459" endtime="20210322 17:46:08.460"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["claimer"]["account"]["digital_account_id"]}</arg>
<arg>${claimer_account_id}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:46:08.460" endtime="20210322 17:46:08.461"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["claimer"]["account"]["routing_number"]}</arg>
<arg>${claimer_routing_number}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:46:08.461" endtime="20210322 17:46:08.461"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["claimer"]["account"]["number"]}</arg>
<arg>${claimer_account_number}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:46:08.462" endtime="20210322 17:46:08.462"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["claimer"]["account"]["type"]}</arg>
<arg>${claimer_account_type}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:46:08.463" endtime="20210322 17:46:08.463"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["claimer"]["psp"]["code"]}</arg>
<arg>${claimer_psp_code}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:46:08.464" endtime="20210322 17:46:08.464"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["claimer"]["psp"]["name"]}</arg>
<arg>${claimer_psp_name}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:46:08.464" endtime="20210322 17:46:08.465"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["donor"]["name"]}</arg>
<arg>${donor_name}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:46:08.465" endtime="20210322 17:46:08.466"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["donor"]["national_registration"]}</arg>
<arg>${donor_national_registration}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:46:08.467" endtime="20210322 17:46:08.467"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["donor"]["type"]}</arg>
<arg>${donor_type}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:46:08.467" endtime="20210322 17:46:08.468"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["donor"]["marketplace"]}</arg>
<arg>${donor_marketplace}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:46:08.469" endtime="20210322 17:46:08.469"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["donor"]["holder"]}</arg>
<arg>${donor_holder_id}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:46:08.469" endtime="20210322 17:46:08.470"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["donor"]["account"]["digital_account_id"]}</arg>
<arg>${donor_account_id}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:46:08.470" endtime="20210322 17:46:08.471"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["donor"]["account"]["routing_number"]}</arg>
<arg>${donor_routing_number}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:46:08.471" endtime="20210322 17:46:08.472"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["donor"]["account"]["number"]}</arg>
<arg>${donor_account_number}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:46:08.472" endtime="20210322 17:46:08.473"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["donor"]["account"]["type"]}</arg>
<arg>${donor_account_type}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:46:08.473" endtime="20210322 17:46:08.474"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["donor"]["psp"]["code"]}</arg>
<arg>${donor_psp_code}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:46:08.474" endtime="20210322 17:46:08.475"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["donor"]["psp"]["name"]}</arg>
<arg>${donor_psp_name}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:46:08.475" endtime="20210322 17:46:08.476"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["resource"]}</arg>
<arg>${claim_resource}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:46:08.476" endtime="20210322 17:46:08.476"></status>
</kw>
<status status="PASS" starttime="20210322 17:46:08.441" endtime="20210322 17:46:08.477"></status>
</kw>
<kw name="receber notificação de reivindicação" library="pix_dict_receive_claim_notification">
<arguments>
<arg>key_pix=${value}</arg>
<arg>account_number=${account_number_owner}</arg>
<arg>claimer_tax_id=${national_registration_owner}</arg>
<arg>claimer_name=${holder_name_owner}</arg>
<arg>claim_external_key=${claim_external_key}</arg>
<arg>claim_notification_status=WAITING_RESOLUTION</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 17:46:08.479" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 17:46:08.479" endtime="20210322 17:46:08.479"></status>
</kw>
<status status="PASS" starttime="20210322 17:46:08.478" endtime="20210322 17:46:08.480"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:46:08.480" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 17:46:08.480" endtime="20210322 17:46:08.480"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"data": {</arg>
<arg>"claim": {</arg>
<arg>"type": "OWNERSHIP",</arg>
<arg>"key": "${key_pix}",</arg>
<arg>"key_type": "PHONE",</arg>
<arg>"claimer_account": {</arg>
<arg>"participant": "19468242",</arg>
<arg>"branch": "0001",</arg>
<arg>"account_number": "${account_number}",</arg>
<arg>"account_type": "CACC"</arg>
<arg>},</arg>
<arg>"claimer": {</arg>
<arg>"type": "NATURAL_PERSON",</arg>
<arg>"tax_id_number": "${claimer_tax_id}",</arg>
<arg>"name": "${claimer_name}"</arg>
<arg>},</arg>
<arg>"donor_participant": "19468242",</arg>
<arg>"id": "${claim_external_key}",</arg>
<arg>"status": "${claim_notification_status}",</arg>
<arg>"resolution_period_end": "2020-10-18T10:00:00.000Z",</arg>
<arg>"completion_period_end": "2020-10-25T10:00:00.000Z",</arg>
<arg>"last_modified": "2020-10-17T10:00:00.000Z"</arg>
<arg>}</arg>
<arg>}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 17:46:08.481" level="INFO">${body} = { "data": { "claim": { "type": "OWNERSHIP", "key": "+5521994006848", "key_type": "PHONE", "claimer_account": { "participant": "19468242", "branch": "0001", "account_number": "5300681052", "account_typ...</msg>
<status status="PASS" starttime="20210322 17:46:08.481" endtime="20210322 17:46:08.482"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/banking/internal/dict/claims</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:46:08.482" level="INFO">POST Request using : uri=/banking/internal/dict/claims, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "data": { "claim": { "type": "OWNERSHIP", "key": "+5521994006848", "key_type": "PHONE", "claimer_account": { "participant": "19468242", "branch": "0001", "account_number": "5300681052", "account_type": "CACC" }, "claimer": { "type": "NATURAL_PERSON", "tax_id_number": "25349786164", "name": "Holder de teste" }, "donor_participant": "19468242", "id": "1f76e16a3a9548528a9bba54d4afa137", "status": "WAITING_RESOLUTION", "resolution_period_end": "2020-10-18T10:00:00.000Z", "completion_period_end": "2020-10-25T10:00:00.000Z", "last_modified": "2020-10-17T10:00:00.000Z" } } } 
json=None</msg>
<msg timestamp="20210322 17:46:09.145" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 17:46:08.482" endtime="20210322 17:46:09.145"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 17:46:09.146" level="INFO">200</msg>
<status status="PASS" starttime="20210322 17:46:09.145" endtime="20210322 17:46:09.146"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:46:09.147" level="INFO">73a70375766c2c60</msg>
<status status="PASS" starttime="20210322 17:46:09.147" endtime="20210322 17:46:09.147"></status>
</kw>
<status status="PASS" starttime="20210322 17:46:08.477" endtime="20210322 17:46:09.147"></status>
</kw>
<kw name="buscar reivindicação de posse" library="pix_dict_get_claims">
<arguments>
<arg>holder_external_key=${holder_claimer}</arg>
<arg>account_external_key=${account_claimer}</arg>
<arg>claim_external_key=${claim_external_key}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 17:46:09.150" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 17:46:09.149" endtime="20210322 17:46:09.150"></status>
</kw>
<status status="PASS" starttime="20210322 17:46:09.149" endtime="20210322 17:46:09.151"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/claims/${claim_external_key}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:46:09.152" level="INFO">GET Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/5fe2f5b08dba4873a6ccbeba938565cf/accounts/21387220ff2f4b9a8d786b5a5af49d85/claims/1f76e16a3a9548528a9bba54d4afa137, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 17:46:09.785" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 17:46:09.151" endtime="20210322 17:46:09.785"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:46:09.789" level="INFO">{'id': '1f76e16a3a9548528a9bba54d4afa137', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'created_at': '2021-03-22T05:46:08.977', 'updated_at': '2021-03-22T05:46:10.349', 'type': 'OWNERSHIP', 'status': 'waiting_resolution', 'key': {'value': '+5521994006848', 'type': 'phone'}, 'claimer': {'name': 'Holder de teste', 'national_registration': '53219468098', 'type': 'individual', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': '5fe2f5b08dba4873a6ccbeba938565cf', 'account': {'digital_account_id': '21387220ff2f4b9a8d786b5a5af49d85', 'routing_number': '001', 'number': '9964851310', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}}, 'donor': {'name': 'Holder de teste', 'national_registration': '25349786164', 'type': 'individual', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': '0ac8ae1152cd4ef8be284a17717333b5', 'account': {'digital_account_id': '476af198c1c24eb7b8caccd74aff5301', 'routing_number': '001', 'number': '5300681052', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}}, 'completion_period_end': '2021-04-05T08:46:08.000', 'resolution_period_end': '2021-03-29T08:46:08.000', 'resource': 'pix.claim'}</msg>
<status status="PASS" starttime="20210322 17:46:09.787" endtime="20210322 17:46:09.789"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:46:09.792" level="INFO">0d6062e3e57a1d57</msg>
<status status="PASS" starttime="20210322 17:46:09.791" endtime="20210322 17:46:09.792"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 17:46:09.794" level="INFO">200</msg>
<status status="PASS" starttime="20210322 17:46:09.793" endtime="20210322 17:46:09.795"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:46:09.797" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 17:46:09.795" endtime="20210322 17:46:09.797"></status>
</kw>
<status status="PASS" starttime="20210322 17:46:09.148" endtime="20210322 17:46:09.798"></status>
</kw>
<kw name="validar reivindicação" library="asserts">
<arguments>
<arg>marketplace_external_key=${marketplace_external_key}</arg>
<arg>claim_type=OWNERSHIP</arg>
<arg>claim_status=waiting_resolution</arg>
<arg>key_value=${value}</arg>
<arg>key_type=${type}</arg>
<arg>claimer_name=${holder_name_claimer}</arg>
<arg>claimer_national_registration=${national_registration_claimer}</arg>
<arg>claimer_type=${holder_type_claimer}</arg>
<arg>claimer_marketplace=${marketplace_external_key}</arg>
<arg>claimer_holder_id=${holder_claimer}</arg>
<arg>claimer_account_id=${account_claimer}</arg>
<arg>claimer_routing_number=${account_routing_number_claimer}</arg>
<arg>claimer_account_number=${account_number_claimer}</arg>
<arg>claimer_account_type=CACC</arg>
<arg>claimer_psp_code=${psp_code}</arg>
<arg>claimer_psp_name=${psp_name}</arg>
<arg>donor_name=${holder_name_owner}</arg>
<arg>donor_national_registration=${national_registration_owner}</arg>
<arg>donor_type=${holder_type_owner}</arg>
<arg>donor_marketplace=${marketplace_external_key}</arg>
<arg>donor_holder_id=${holder_owner}</arg>
<arg>donor_account_id=${account_owner}</arg>
<arg>donor_routing_number=${account_routing_number_owner}</arg>
<arg>donor_account_number=${account_number_owner}</arg>
<arg>donor_account_type=CACC</arg>
<arg>donor_psp_code=${psp_code}</arg>
<arg>donor_psp_name=${psp_name}</arg>
<arg>claim_resource=pix.claim</arg>
</arguments>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<arguments>
<arg>result_format=datetime</arg>
</arguments>
<assign>
<var>${date}</var>
</assign>
<msg timestamp="20210322 17:46:09.806" level="INFO">${date} = 2021-03-22 17:46:09.805322</msg>
<status status="PASS" starttime="20210322 17:46:09.804" endtime="20210322 17:46:09.806"></status>
</kw>
<kw name="Convert Date" library="DateTime">
<doc>Converts between supported `date formats`.</doc>
<arguments>
<arg>${date}</arg>
<arg>exclude_millis=yes</arg>
<arg>result_format=%Y-%m-%d</arg>
<arg>date_format=%d-%m-%Y</arg>
</arguments>
<assign>
<var>${date}</var>
</assign>
<msg timestamp="20210322 17:46:09.807" level="INFO">${date} = 2021-03-22</msg>
<status status="PASS" starttime="20210322 17:46:09.806" endtime="20210322 17:46:09.807"></status>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${response.json()["id"]}</arg>
</arguments>
<msg timestamp="20210322 17:46:09.808" level="INFO">Length is 32</msg>
<status status="PASS" starttime="20210322 17:46:09.807" endtime="20210322 17:46:09.808"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["marketplace"]}</arg>
<arg>${marketplace_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:46:09.808" endtime="20210322 17:46:09.809"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response.json()["created_at"]}</arg>
<arg>${date}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:46:09.809" endtime="20210322 17:46:09.810"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response.json()["updated_at"]}</arg>
<arg>${date}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:46:09.810" endtime="20210322 17:46:09.811"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["type"]}</arg>
<arg>${claim_type}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:46:09.811" endtime="20210322 17:46:09.812"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["status"]}</arg>
<arg>${claim_status}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:46:09.812" endtime="20210322 17:46:09.813"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${key_value}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:46:09.813" endtime="20210322 17:46:09.814"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["key"]["type"]}</arg>
<arg>${key_type}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:46:09.814" endtime="20210322 17:46:09.814"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["claimer"]["name"]}</arg>
<arg>${claimer_name}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:46:09.815" endtime="20210322 17:46:09.815"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["claimer"]["national_registration"]}</arg>
<arg>${claimer_national_registration}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:46:09.815" endtime="20210322 17:46:09.816"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["claimer"]["type"]}</arg>
<arg>${claimer_type}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:46:09.816" endtime="20210322 17:46:09.817"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["claimer"]["marketplace"]}</arg>
<arg>${claimer_marketplace}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:46:09.818" endtime="20210322 17:46:09.818"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["claimer"]["holder"]}</arg>
<arg>${claimer_holder_id}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:46:09.819" endtime="20210322 17:46:09.819"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["claimer"]["account"]["digital_account_id"]}</arg>
<arg>${claimer_account_id}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:46:09.820" endtime="20210322 17:46:09.821"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["claimer"]["account"]["routing_number"]}</arg>
<arg>${claimer_routing_number}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:46:09.821" endtime="20210322 17:46:09.822"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["claimer"]["account"]["number"]}</arg>
<arg>${claimer_account_number}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:46:09.822" endtime="20210322 17:46:09.823"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["claimer"]["account"]["type"]}</arg>
<arg>${claimer_account_type}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:46:09.823" endtime="20210322 17:46:09.824"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["claimer"]["psp"]["code"]}</arg>
<arg>${claimer_psp_code}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:46:09.825" endtime="20210322 17:46:09.825"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["claimer"]["psp"]["name"]}</arg>
<arg>${claimer_psp_name}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:46:09.826" endtime="20210322 17:46:09.827"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["donor"]["name"]}</arg>
<arg>${donor_name}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:46:09.828" endtime="20210322 17:46:09.828"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["donor"]["national_registration"]}</arg>
<arg>${donor_national_registration}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:46:09.828" endtime="20210322 17:46:09.830"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["donor"]["type"]}</arg>
<arg>${donor_type}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:46:09.830" endtime="20210322 17:46:09.831"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["donor"]["marketplace"]}</arg>
<arg>${donor_marketplace}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:46:09.831" endtime="20210322 17:46:09.832"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["donor"]["holder"]}</arg>
<arg>${donor_holder_id}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:46:09.832" endtime="20210322 17:46:09.833"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["donor"]["account"]["digital_account_id"]}</arg>
<arg>${donor_account_id}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:46:09.833" endtime="20210322 17:46:09.834"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["donor"]["account"]["routing_number"]}</arg>
<arg>${donor_routing_number}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:46:09.834" endtime="20210322 17:46:09.835"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["donor"]["account"]["number"]}</arg>
<arg>${donor_account_number}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:46:09.835" endtime="20210322 17:46:09.836"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["donor"]["account"]["type"]}</arg>
<arg>${donor_account_type}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:46:09.836" endtime="20210322 17:46:09.837"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["donor"]["psp"]["code"]}</arg>
<arg>${donor_psp_code}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:46:09.838" endtime="20210322 17:46:09.838"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["donor"]["psp"]["name"]}</arg>
<arg>${donor_psp_name}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:46:09.838" endtime="20210322 17:46:09.839"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["resource"]}</arg>
<arg>${claim_resource}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:46:09.839" endtime="20210322 17:46:09.839"></status>
</kw>
<status status="PASS" starttime="20210322 17:46:09.799" endtime="20210322 17:46:09.840"></status>
</kw>
<kw name="${index} IN RANGE [ 60 ]" type="for">
<kw name="${index} = 0" type="foritem">
<kw name="cancelar reivindicação de posse" library="pix_dict_cancel_claims">
<arguments>
<arg>holder_external_key=${holder_claimer}</arg>
<arg>account_external_key=${account_claimer}</arg>
<arg>claim_external_key=${claim_external_key}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 17:46:09.842" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 17:46:09.841" endtime="20210322 17:46:09.842"></status>
</kw>
<status status="PASS" starttime="20210322 17:46:09.841" endtime="20210322 17:46:09.842"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/claims/${claim_external_key}/cancel</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:46:09.842" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/5fe2f5b08dba4873a6ccbeba938565cf/accounts/21387220ff2f4b9a8d786b5a5af49d85/claims/1f76e16a3a9548528a9bba54d4afa137/cancel, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 17:46:12.094" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20210322 17:46:09.842" endtime="20210322 17:46:12.095"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:46:12.097" level="INFO">{'code': 9997, 'status': 'bad_request', 'type': 'integration_error', 'message': 'Claim operation invalid', 'category': 'unexpected', 'status_code': 400}</msg>
<status status="PASS" starttime="20210322 17:46:12.096" endtime="20210322 17:46:12.098"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:46:12.100" level="INFO">e54929a3be74d005</msg>
<status status="PASS" starttime="20210322 17:46:12.099" endtime="20210322 17:46:12.100"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 17:46:12.103" level="INFO">400</msg>
<status status="PASS" starttime="20210322 17:46:12.101" endtime="20210322 17:46:12.104"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:46:12.106" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20210322 17:46:12.105" endtime="20210322 17:46:12.106"></status>
</kw>
<status status="PASS" starttime="20210322 17:46:09.840" endtime="20210322 17:46:12.106"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${response.json()["message"]}' == 'Claim cancelled successfully'</arg>
</arguments>
<status status="PASS" starttime="20210322 17:46:12.107" endtime="20210322 17:46:12.108"></status>
</kw>
<status status="PASS" starttime="20210322 17:46:09.840" endtime="20210322 17:46:12.108"></status>
</kw>
<kw name="${index} = 1" type="foritem">
<kw name="cancelar reivindicação de posse" library="pix_dict_cancel_claims">
<arguments>
<arg>holder_external_key=${holder_claimer}</arg>
<arg>account_external_key=${account_claimer}</arg>
<arg>claim_external_key=${claim_external_key}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 17:46:12.112" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 17:46:12.112" endtime="20210322 17:46:12.113"></status>
</kw>
<status status="PASS" starttime="20210322 17:46:12.111" endtime="20210322 17:46:12.114"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/claims/${claim_external_key}/cancel</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:46:12.115" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/5fe2f5b08dba4873a6ccbeba938565cf/accounts/21387220ff2f4b9a8d786b5a5af49d85/claims/1f76e16a3a9548528a9bba54d4afa137/cancel, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 17:46:13.693" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20210322 17:46:12.114" endtime="20210322 17:46:13.693"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:46:13.696" level="INFO">{'code': 9997, 'status': 'bad_request', 'type': 'integration_error', 'message': 'Claim operation invalid', 'category': 'unexpected', 'status_code': 400}</msg>
<status status="PASS" starttime="20210322 17:46:13.694" endtime="20210322 17:46:13.696"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:46:13.698" level="INFO">5371c0132e6c7f2d</msg>
<status status="PASS" starttime="20210322 17:46:13.697" endtime="20210322 17:46:13.699"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 17:46:13.701" level="INFO">400</msg>
<status status="PASS" starttime="20210322 17:46:13.700" endtime="20210322 17:46:13.701"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:46:13.703" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20210322 17:46:13.702" endtime="20210322 17:46:13.703"></status>
</kw>
<status status="PASS" starttime="20210322 17:46:12.109" endtime="20210322 17:46:13.703"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${response.json()["message"]}' == 'Claim cancelled successfully'</arg>
</arguments>
<status status="PASS" starttime="20210322 17:46:13.704" endtime="20210322 17:46:13.706"></status>
</kw>
<status status="PASS" starttime="20210322 17:46:12.109" endtime="20210322 17:46:13.706"></status>
</kw>
<kw name="${index} = 2" type="foritem">
<kw name="cancelar reivindicação de posse" library="pix_dict_cancel_claims">
<arguments>
<arg>holder_external_key=${holder_claimer}</arg>
<arg>account_external_key=${account_claimer}</arg>
<arg>claim_external_key=${claim_external_key}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 17:46:13.709" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 17:46:13.708" endtime="20210322 17:46:13.709"></status>
</kw>
<status status="PASS" starttime="20210322 17:46:13.707" endtime="20210322 17:46:13.710"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/claims/${claim_external_key}/cancel</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:46:13.711" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/5fe2f5b08dba4873a6ccbeba938565cf/accounts/21387220ff2f4b9a8d786b5a5af49d85/claims/1f76e16a3a9548528a9bba54d4afa137/cancel, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 17:46:15.293" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20210322 17:46:13.710" endtime="20210322 17:46:15.293"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:46:15.296" level="INFO">{'code': 9997, 'status': 'bad_request', 'type': 'integration_error', 'message': 'Claim operation invalid', 'category': 'unexpected', 'status_code': 400}</msg>
<status status="PASS" starttime="20210322 17:46:15.294" endtime="20210322 17:46:15.297"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:46:15.299" level="INFO">40aa67671b5dc9b6</msg>
<status status="PASS" starttime="20210322 17:46:15.298" endtime="20210322 17:46:15.299"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 17:46:15.301" level="INFO">400</msg>
<status status="PASS" starttime="20210322 17:46:15.300" endtime="20210322 17:46:15.302"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:46:15.303" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20210322 17:46:15.303" endtime="20210322 17:46:15.304"></status>
</kw>
<status status="PASS" starttime="20210322 17:46:13.706" endtime="20210322 17:46:15.304"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${response.json()["message"]}' == 'Claim cancelled successfully'</arg>
</arguments>
<status status="PASS" starttime="20210322 17:46:15.305" endtime="20210322 17:46:15.306"></status>
</kw>
<status status="PASS" starttime="20210322 17:46:13.706" endtime="20210322 17:46:15.306"></status>
</kw>
<kw name="${index} = 3" type="foritem">
<kw name="cancelar reivindicação de posse" library="pix_dict_cancel_claims">
<arguments>
<arg>holder_external_key=${holder_claimer}</arg>
<arg>account_external_key=${account_claimer}</arg>
<arg>claim_external_key=${claim_external_key}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 17:46:15.310" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 17:46:15.309" endtime="20210322 17:46:15.311"></status>
</kw>
<status status="PASS" starttime="20210322 17:46:15.308" endtime="20210322 17:46:15.311"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/claims/${claim_external_key}/cancel</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:46:15.313" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/5fe2f5b08dba4873a6ccbeba938565cf/accounts/21387220ff2f4b9a8d786b5a5af49d85/claims/1f76e16a3a9548528a9bba54d4afa137/cancel, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 17:46:16.898" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20210322 17:46:15.312" endtime="20210322 17:46:16.898"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:46:16.900" level="INFO">{'code': 9997, 'status': 'bad_request', 'type': 'integration_error', 'message': 'Claim operation invalid', 'category': 'unexpected', 'status_code': 400}</msg>
<status status="PASS" starttime="20210322 17:46:16.899" endtime="20210322 17:46:16.900"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:46:16.902" level="INFO">0e89407d55005883</msg>
<status status="PASS" starttime="20210322 17:46:16.901" endtime="20210322 17:46:16.902"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 17:46:16.902" level="INFO">400</msg>
<status status="PASS" starttime="20210322 17:46:16.902" endtime="20210322 17:46:16.904"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:46:16.904" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20210322 17:46:16.904" endtime="20210322 17:46:16.904"></status>
</kw>
<status status="PASS" starttime="20210322 17:46:15.307" endtime="20210322 17:46:16.905"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${response.json()["message"]}' == 'Claim cancelled successfully'</arg>
</arguments>
<status status="PASS" starttime="20210322 17:46:16.905" endtime="20210322 17:46:16.907"></status>
</kw>
<status status="PASS" starttime="20210322 17:46:15.306" endtime="20210322 17:46:16.907"></status>
</kw>
<kw name="${index} = 4" type="foritem">
<kw name="cancelar reivindicação de posse" library="pix_dict_cancel_claims">
<arguments>
<arg>holder_external_key=${holder_claimer}</arg>
<arg>account_external_key=${account_claimer}</arg>
<arg>claim_external_key=${claim_external_key}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 17:46:16.910" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 17:46:16.910" endtime="20210322 17:46:16.910"></status>
</kw>
<status status="PASS" starttime="20210322 17:46:16.908" endtime="20210322 17:46:16.911"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/claims/${claim_external_key}/cancel</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:46:16.912" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/5fe2f5b08dba4873a6ccbeba938565cf/accounts/21387220ff2f4b9a8d786b5a5af49d85/claims/1f76e16a3a9548528a9bba54d4afa137/cancel, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 17:46:18.592" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20210322 17:46:16.911" endtime="20210322 17:46:18.592"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:46:18.594" level="INFO">{'code': 9997, 'status': 'bad_request', 'type': 'integration_error', 'message': 'Claim operation invalid', 'category': 'unexpected', 'status_code': 400}</msg>
<status status="PASS" starttime="20210322 17:46:18.593" endtime="20210322 17:46:18.595"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:46:18.597" level="INFO">ec22a9a81c33004f</msg>
<status status="PASS" starttime="20210322 17:46:18.595" endtime="20210322 17:46:18.597"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 17:46:18.599" level="INFO">400</msg>
<status status="PASS" starttime="20210322 17:46:18.598" endtime="20210322 17:46:18.600"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:46:18.602" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20210322 17:46:18.601" endtime="20210322 17:46:18.602"></status>
</kw>
<status status="PASS" starttime="20210322 17:46:16.908" endtime="20210322 17:46:18.603"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${response.json()["message"]}' == 'Claim cancelled successfully'</arg>
</arguments>
<status status="PASS" starttime="20210322 17:46:18.604" endtime="20210322 17:46:18.606"></status>
</kw>
<status status="PASS" starttime="20210322 17:46:16.908" endtime="20210322 17:46:18.606"></status>
</kw>
<kw name="${index} = 5" type="foritem">
<kw name="cancelar reivindicação de posse" library="pix_dict_cancel_claims">
<arguments>
<arg>holder_external_key=${holder_claimer}</arg>
<arg>account_external_key=${account_claimer}</arg>
<arg>claim_external_key=${claim_external_key}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 17:46:18.611" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 17:46:18.610" endtime="20210322 17:46:18.612"></status>
</kw>
<status status="PASS" starttime="20210322 17:46:18.609" endtime="20210322 17:46:18.612"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/claims/${claim_external_key}/cancel</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:46:18.614" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/5fe2f5b08dba4873a6ccbeba938565cf/accounts/21387220ff2f4b9a8d786b5a5af49d85/claims/1f76e16a3a9548528a9bba54d4afa137/cancel, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 17:46:20.346" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20210322 17:46:18.612" endtime="20210322 17:46:20.346"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:46:20.349" level="INFO">{'code': 9997, 'status': 'bad_request', 'type': 'integration_error', 'message': 'Claim operation invalid', 'category': 'unexpected', 'status_code': 400}</msg>
<status status="PASS" starttime="20210322 17:46:20.347" endtime="20210322 17:46:20.349"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:46:20.352" level="INFO">6436ff8f99b1edeb</msg>
<status status="PASS" starttime="20210322 17:46:20.350" endtime="20210322 17:46:20.352"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 17:46:20.354" level="INFO">400</msg>
<status status="PASS" starttime="20210322 17:46:20.353" endtime="20210322 17:46:20.355"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:46:20.357" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20210322 17:46:20.355" endtime="20210322 17:46:20.357"></status>
</kw>
<status status="PASS" starttime="20210322 17:46:18.607" endtime="20210322 17:46:20.358"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${response.json()["message"]}' == 'Claim cancelled successfully'</arg>
</arguments>
<status status="PASS" starttime="20210322 17:46:20.359" endtime="20210322 17:46:20.361"></status>
</kw>
<status status="PASS" starttime="20210322 17:46:18.606" endtime="20210322 17:46:20.361"></status>
</kw>
<kw name="${index} = 6" type="foritem">
<kw name="cancelar reivindicação de posse" library="pix_dict_cancel_claims">
<arguments>
<arg>holder_external_key=${holder_claimer}</arg>
<arg>account_external_key=${account_claimer}</arg>
<arg>claim_external_key=${claim_external_key}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 17:46:20.367" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 17:46:20.366" endtime="20210322 17:46:20.368"></status>
</kw>
<status status="PASS" starttime="20210322 17:46:20.365" endtime="20210322 17:46:20.368"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/claims/${claim_external_key}/cancel</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:46:20.370" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/5fe2f5b08dba4873a6ccbeba938565cf/accounts/21387220ff2f4b9a8d786b5a5af49d85/claims/1f76e16a3a9548528a9bba54d4afa137/cancel, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 17:46:22.068" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20210322 17:46:20.369" endtime="20210322 17:46:22.068"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:46:22.071" level="INFO">{'code': 9997, 'status': 'bad_request', 'type': 'integration_error', 'message': 'Claim operation invalid', 'category': 'unexpected', 'status_code': 400}</msg>
<status status="PASS" starttime="20210322 17:46:22.070" endtime="20210322 17:46:22.072"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:46:22.074" level="INFO">9d0a1ffaf5102d31</msg>
<status status="PASS" starttime="20210322 17:46:22.073" endtime="20210322 17:46:22.075"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 17:46:22.078" level="INFO">400</msg>
<status status="PASS" starttime="20210322 17:46:22.076" endtime="20210322 17:46:22.078"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:46:22.080" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20210322 17:46:22.079" endtime="20210322 17:46:22.080"></status>
</kw>
<status status="PASS" starttime="20210322 17:46:20.362" endtime="20210322 17:46:22.081"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${response.json()["message"]}' == 'Claim cancelled successfully'</arg>
</arguments>
<status status="PASS" starttime="20210322 17:46:22.082" endtime="20210322 17:46:22.083"></status>
</kw>
<status status="PASS" starttime="20210322 17:46:20.362" endtime="20210322 17:46:22.083"></status>
</kw>
<kw name="${index} = 7" type="foritem">
<kw name="cancelar reivindicação de posse" library="pix_dict_cancel_claims">
<arguments>
<arg>holder_external_key=${holder_claimer}</arg>
<arg>account_external_key=${account_claimer}</arg>
<arg>claim_external_key=${claim_external_key}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 17:46:22.088" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 17:46:22.087" endtime="20210322 17:46:22.089"></status>
</kw>
<status status="PASS" starttime="20210322 17:46:22.086" endtime="20210322 17:46:22.089"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/claims/${claim_external_key}/cancel</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:46:22.091" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/5fe2f5b08dba4873a6ccbeba938565cf/accounts/21387220ff2f4b9a8d786b5a5af49d85/claims/1f76e16a3a9548528a9bba54d4afa137/cancel, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 17:46:23.782" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20210322 17:46:22.090" endtime="20210322 17:46:23.783"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:46:23.786" level="INFO">{'code': 9997, 'status': 'bad_request', 'type': 'integration_error', 'message': 'Claim operation invalid', 'category': 'unexpected', 'status_code': 400}</msg>
<status status="PASS" starttime="20210322 17:46:23.784" endtime="20210322 17:46:23.786"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:46:23.789" level="INFO">733b6c8bf5e03b40</msg>
<status status="PASS" starttime="20210322 17:46:23.787" endtime="20210322 17:46:23.789"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 17:46:23.792" level="INFO">400</msg>
<status status="PASS" starttime="20210322 17:46:23.790" endtime="20210322 17:46:23.792"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:46:23.794" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20210322 17:46:23.793" endtime="20210322 17:46:23.795"></status>
</kw>
<status status="PASS" starttime="20210322 17:46:22.084" endtime="20210322 17:46:23.795"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${response.json()["message"]}' == 'Claim cancelled successfully'</arg>
</arguments>
<status status="PASS" starttime="20210322 17:46:23.795" endtime="20210322 17:46:23.797"></status>
</kw>
<status status="PASS" starttime="20210322 17:46:22.083" endtime="20210322 17:46:23.797"></status>
</kw>
<kw name="${index} = 8" type="foritem">
<kw name="cancelar reivindicação de posse" library="pix_dict_cancel_claims">
<arguments>
<arg>holder_external_key=${holder_claimer}</arg>
<arg>account_external_key=${account_claimer}</arg>
<arg>claim_external_key=${claim_external_key}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 17:46:23.800" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 17:46:23.800" endtime="20210322 17:46:23.801"></status>
</kw>
<status status="PASS" starttime="20210322 17:46:23.799" endtime="20210322 17:46:23.801"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/claims/${claim_external_key}/cancel</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:46:23.802" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/5fe2f5b08dba4873a6ccbeba938565cf/accounts/21387220ff2f4b9a8d786b5a5af49d85/claims/1f76e16a3a9548528a9bba54d4afa137/cancel, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 17:46:25.361" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20210322 17:46:23.802" endtime="20210322 17:46:25.361"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:46:25.364" level="INFO">{'code': 9997, 'status': 'bad_request', 'type': 'integration_error', 'message': 'Claim operation invalid', 'category': 'unexpected', 'status_code': 400}</msg>
<status status="PASS" starttime="20210322 17:46:25.363" endtime="20210322 17:46:25.365"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:46:25.367" level="INFO">f7a37cf76517769e</msg>
<status status="PASS" starttime="20210322 17:46:25.366" endtime="20210322 17:46:25.367"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 17:46:25.369" level="INFO">400</msg>
<status status="PASS" starttime="20210322 17:46:25.368" endtime="20210322 17:46:25.370"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:46:25.372" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20210322 17:46:25.371" endtime="20210322 17:46:25.373"></status>
</kw>
<status status="PASS" starttime="20210322 17:46:23.798" endtime="20210322 17:46:25.373"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${response.json()["message"]}' == 'Claim cancelled successfully'</arg>
</arguments>
<status status="PASS" starttime="20210322 17:46:25.374" endtime="20210322 17:46:25.376"></status>
</kw>
<status status="PASS" starttime="20210322 17:46:23.797" endtime="20210322 17:46:25.376"></status>
</kw>
<kw name="${index} = 9" type="foritem">
<kw name="cancelar reivindicação de posse" library="pix_dict_cancel_claims">
<arguments>
<arg>holder_external_key=${holder_claimer}</arg>
<arg>account_external_key=${account_claimer}</arg>
<arg>claim_external_key=${claim_external_key}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 17:46:25.380" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 17:46:25.379" endtime="20210322 17:46:25.381"></status>
</kw>
<status status="PASS" starttime="20210322 17:46:25.378" endtime="20210322 17:46:25.381"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/claims/${claim_external_key}/cancel</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:46:25.382" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/5fe2f5b08dba4873a6ccbeba938565cf/accounts/21387220ff2f4b9a8d786b5a5af49d85/claims/1f76e16a3a9548528a9bba54d4afa137/cancel, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 17:46:27.002" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20210322 17:46:25.381" endtime="20210322 17:46:27.002"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:46:27.004" level="INFO">{'code': 9997, 'status': 'bad_request', 'type': 'integration_error', 'message': 'Claim operation invalid', 'category': 'unexpected', 'status_code': 400}</msg>
<status status="PASS" starttime="20210322 17:46:27.003" endtime="20210322 17:46:27.004"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:46:27.005" level="INFO">86e54c37f8614991</msg>
<status status="PASS" starttime="20210322 17:46:27.004" endtime="20210322 17:46:27.005"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 17:46:27.006" level="INFO">400</msg>
<status status="PASS" starttime="20210322 17:46:27.005" endtime="20210322 17:46:27.006"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:46:27.007" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20210322 17:46:27.007" endtime="20210322 17:46:27.007"></status>
</kw>
<status status="PASS" starttime="20210322 17:46:25.377" endtime="20210322 17:46:27.008"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${response.json()["message"]}' == 'Claim cancelled successfully'</arg>
</arguments>
<status status="PASS" starttime="20210322 17:46:27.008" endtime="20210322 17:46:27.009"></status>
</kw>
<status status="PASS" starttime="20210322 17:46:25.376" endtime="20210322 17:46:27.009"></status>
</kw>
<kw name="${index} = 10" type="foritem">
<kw name="cancelar reivindicação de posse" library="pix_dict_cancel_claims">
<arguments>
<arg>holder_external_key=${holder_claimer}</arg>
<arg>account_external_key=${account_claimer}</arg>
<arg>claim_external_key=${claim_external_key}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 17:46:27.012" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 17:46:27.012" endtime="20210322 17:46:27.013"></status>
</kw>
<status status="PASS" starttime="20210322 17:46:27.011" endtime="20210322 17:46:27.013"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/claims/${claim_external_key}/cancel</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:46:27.014" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/5fe2f5b08dba4873a6ccbeba938565cf/accounts/21387220ff2f4b9a8d786b5a5af49d85/claims/1f76e16a3a9548528a9bba54d4afa137/cancel, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 17:46:28.609" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 17:46:27.013" endtime="20210322 17:46:28.610"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:46:28.613" level="INFO">{'message': 'Claim cancelled successfully'}</msg>
<status status="PASS" starttime="20210322 17:46:28.611" endtime="20210322 17:46:28.613"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:46:28.617" level="INFO">41663d622b03e7d8</msg>
<status status="PASS" starttime="20210322 17:46:28.614" endtime="20210322 17:46:28.617"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 17:46:28.618" level="INFO">200</msg>
<status status="PASS" starttime="20210322 17:46:28.617" endtime="20210322 17:46:28.619"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:46:28.620" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 17:46:28.619" endtime="20210322 17:46:28.620"></status>
</kw>
<status status="PASS" starttime="20210322 17:46:27.010" endtime="20210322 17:46:28.621"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${response.json()["message"]}' == 'Claim cancelled successfully'</arg>
</arguments>
<msg timestamp="20210322 17:46:28.624" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20210322 17:46:28.621" endtime="20210322 17:46:28.624"></status>
</kw>
<status status="PASS" starttime="20210322 17:46:27.009" endtime="20210322 17:46:28.624"></status>
</kw>
<status status="PASS" starttime="20210322 17:46:09.840" endtime="20210322 17:46:28.624"></status>
</kw>
<kw name="buscar reivindicação de posse" library="pix_dict_get_claims">
<arguments>
<arg>holder_external_key=${holder_claimer}</arg>
<arg>account_external_key=${account_claimer}</arg>
<arg>claim_external_key=${claim_external_key}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 17:46:28.627" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 17:46:28.625" endtime="20210322 17:46:28.627"></status>
</kw>
<status status="PASS" starttime="20210322 17:46:28.625" endtime="20210322 17:46:28.627"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/claims/${claim_external_key}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:46:28.628" level="INFO">GET Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/5fe2f5b08dba4873a6ccbeba938565cf/accounts/21387220ff2f4b9a8d786b5a5af49d85/claims/1f76e16a3a9548528a9bba54d4afa137, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 17:46:29.299" level="INFO">${response} = &lt;Response [404]&gt;</msg>
<status status="PASS" starttime="20210322 17:46:28.627" endtime="20210322 17:46:29.299"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:46:29.302" level="INFO">{'code': 3004, 'status': 'not_found', 'type': 'not_found', 'message': 'Claim not found', 'category': 'business', 'status_code': 404}</msg>
<status status="PASS" starttime="20210322 17:46:29.300" endtime="20210322 17:46:29.302"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:46:29.305" level="INFO">4c6aa28e837c6ba0</msg>
<status status="PASS" starttime="20210322 17:46:29.304" endtime="20210322 17:46:29.305"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 17:46:29.308" level="INFO">404</msg>
<status status="PASS" starttime="20210322 17:46:29.306" endtime="20210322 17:46:29.308"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:46:29.309" level="INFO">${response} = &lt;Response [404]&gt;</msg>
<status status="PASS" starttime="20210322 17:46:29.308" endtime="20210322 17:46:29.309"></status>
</kw>
<status status="PASS" starttime="20210322 17:46:28.624" endtime="20210322 17:46:29.310"></status>
</kw>
<kw name="validar not found" library="not_found">
<arguments>
<arg>message=Claim not found</arg>
<arg>message_code=3004</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando response nor found</arg>
</arguments>
<msg timestamp="20210322 17:46:29.312" level="INFO">Validando response nor found</msg>
<status status="PASS" starttime="20210322 17:46:29.312" endtime="20210322 17:46:29.312"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>404</arg>
</arguments>
<msg timestamp="20210322 17:46:29.314" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:46:29.313" endtime="20210322 17:46:29.314"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["status"]}</arg>
<arg>not_found</arg>
</arguments>
<status status="PASS" starttime="20210322 17:46:29.315" endtime="20210322 17:46:29.316"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["category"]}</arg>
<arg>business</arg>
</arguments>
<status status="PASS" starttime="20210322 17:46:29.316" endtime="20210322 17:46:29.317"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.json()["code"]}</arg>
<arg>${message_code}</arg>
</arguments>
<msg timestamp="20210322 17:46:29.318" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:46:29.318" endtime="20210322 17:46:29.319"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.json()["status_code"]}</arg>
<arg>404</arg>
</arguments>
<msg timestamp="20210322 17:46:29.320" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:46:29.319" endtime="20210322 17:46:29.320"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["message"]}</arg>
<arg>${message}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:46:29.320" endtime="20210322 17:46:29.321"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["type"]}</arg>
<arg>not_found</arg>
</arguments>
<status status="PASS" starttime="20210322 17:46:29.322" endtime="20210322 17:46:29.322"></status>
</kw>
<status status="PASS" starttime="20210322 17:46:29.310" endtime="20210322 17:46:29.323"></status>
</kw>
<doc>Fluxo Básico</doc>
<tags>
<tag>regression_test</tag>
<tag>smoke_test</tag>
</tags>
<status status="PASS" starttime="20210322 17:45:53.530" endtime="20210322 17:46:29.323" critical="yes"></status>
</test>
<doc>Funcionalidade: Cancelar Reivindicação de Posse
Eu, como um Holder, portador de uma conta ativa em Banking
Desejo cancelar a reivindicação de posse de uma chave de endereçamento</doc>
<status status="PASS" starttime="20210322 17:45:53.428" endtime="20210322 17:46:29.324"></status>
</suite>
<suite id="s1-s2-s2" name="Criar Reivindicação de Posse" source="C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\tests\pix-dict\reivindicacao\Criar Reivindicação de Posse.robot">
<test id="s1-s2-s2-t1" name="Cenário: Criar Reivindicação de Posse para chave do tipo telefone">
<kw name="Random Number" library="FakerLibrary">
<doc>Returns a random number with 1 digit (default, when digits==None),
a random number with 0 to given number of digits, or a random number
with given number to given number of digits (when ``fix_len==True``).</doc>
<arguments>
<arg>digits=8</arg>
<arg>fix_len=True</arg>
</arguments>
<assign>
<var>${phone}</var>
</assign>
<msg timestamp="20210322 17:46:29.892" level="INFO">${phone} = 47149040</msg>
<status status="PASS" starttime="20210322 17:46:29.891" endtime="20210322 17:46:29.892"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>+55219${phone}</arg>
</arguments>
<assign>
<var>${phone_pix}</var>
</assign>
<msg timestamp="20210322 17:46:29.893" level="INFO">${phone_pix} = +5521947149040</msg>
<status status="PASS" starttime="20210322 17:46:29.892" endtime="20210322 17:46:29.893"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${phone_pix}</arg>
</arguments>
<msg timestamp="20210322 17:46:29.893" level="INFO">${phone_pix} = +5521947149040</msg>
<status status="PASS" starttime="20210322 17:46:29.893" endtime="20210322 17:46:29.893"></status>
</kw>
<kw name="criar holder individual ativo" library="accreditation_create_holder_active">
<kw name="conectar accreditation" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accreditation</arg>
<arg>url=${accreditation_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 17:46:29.895" level="INFO">Creating Session using : alias=accreditation, url=https://banking-accreditation-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 17:46:29.895" endtime="20210322 17:46:29.896"></status>
</kw>
<status status="PASS" starttime="20210322 17:46:29.894" endtime="20210322 17:46:29.896"></status>
</kw>
<kw name="Cpf" library="FakerLibrary">
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 17:46:29.897" level="INFO">${national_registration} = 870.215.934-14</msg>
<status status="PASS" starttime="20210322 17:46:29.896" endtime="20210322 17:46:29.897"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${national_registration}</arg>
<arg>.</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 17:46:29.898" level="INFO">${national_registration} = 870215934-14</msg>
<status status="PASS" starttime="20210322 17:46:29.897" endtime="20210322 17:46:29.898"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${national_registration}</arg>
<arg>-</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 17:46:29.899" level="INFO">${national_registration} = 87021593414</msg>
<status status="PASS" starttime="20210322 17:46:29.898" endtime="20210322 17:46:29.899"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${national_registration}</arg>
</arguments>
<msg timestamp="20210322 17:46:29.899" level="INFO">${national_registration} = 87021593414</msg>
<status status="PASS" starttime="20210322 17:46:29.899" endtime="20210322 17:46:29.899"></status>
</kw>
<kw name="Rg" library="FakerLibrary">
<doc>Brazilian RG, return plain numbers.
Check:  https://www.ngmatematica.com/2014/02/como-determinar-o-digito-verificador-do.html</doc>
<assign>
<var>${identity_card}</var>
</assign>
<msg timestamp="20210322 17:46:29.900" level="INFO">${identity_card} = 546180371</msg>
<status status="PASS" starttime="20210322 17:46:29.899" endtime="20210322 17:46:29.900"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${identity_card}</arg>
</arguments>
<msg timestamp="20210322 17:46:29.901" level="INFO">${identity_card} = 546180371</msg>
<status status="PASS" starttime="20210322 17:46:29.900" endtime="20210322 17:46:29.901"></status>
</kw>
<kw name="criar holder individual" library="accreditation_post_holder_individual">
<arguments>
<arg>holder_type=individual</arg>
<arg>holder_name=${holder_name}</arg>
<arg>email=${email}</arg>
<arg>national_registration=${national_registration}</arg>
<arg>revenue=${revenue}</arg>
<arg>birthday=${birthday}</arg>
<arg>mothers_name=${mothers_name}</arg>
<arg>identity_card=${identity_card}</arg>
<arg>pep=false</arg>
<arg>cbo=${cbo}</arg>
</arguments>
<kw name="conectar accreditation" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accreditation</arg>
<arg>url=${accreditation_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 17:46:29.902" level="INFO">Creating Session using : alias=accreditation, url=https://banking-accreditation-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 17:46:29.902" endtime="20210322 17:46:29.903"></status>
</kw>
<status status="PASS" starttime="20210322 17:46:29.902" endtime="20210322 17:46:29.903"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_type}</arg>
</arguments>
<msg timestamp="20210322 17:46:29.903" level="INFO">${holder_type} = individual</msg>
<status status="PASS" starttime="20210322 17:46:29.903" endtime="20210322 17:46:29.904"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_name}</arg>
</arguments>
<msg timestamp="20210322 17:46:29.904" level="INFO">${holder_name} = Holder de teste</msg>
<status status="PASS" starttime="20210322 17:46:29.904" endtime="20210322 17:46:29.905"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:46:29.905" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 17:46:29.905" endtime="20210322 17:46:29.906"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "${holder_type}",</arg>
<arg>"name": "${holder_name}",</arg>
<arg>"email": "${email}",</arg>
<arg>"national_registration": "${national_registration}",</arg>
<arg>"revenue": ${revenue},</arg>
<arg>"birthday": "${birthday}",</arg>
<arg>"mothers_name": "${mothers_name}",</arg>
<arg>"identity_card": "${identity_card}",</arg>
<arg>"pep": false,</arg>
<arg>"cbo": ${cbo}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 17:46:29.907" level="INFO">${body} = { "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "87021593414", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder",...</msg>
<status status="PASS" starttime="20210322 17:46:29.906" endtime="20210322 17:46:29.907"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:46:29.908" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "87021593414", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder", "identity_card": "546180371", "pep": false, "cbo": 821450 } 
json=None</msg>
<msg timestamp="20210322 17:46:30.596" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:46:29.907" endtime="20210322 17:46:30.596"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:46:30.598" level="INFO">{'id': '1d3705ef5f804ca38eb80f1359b6d9d3', 'name': 'Holder de teste', 'revenue': 5500.0, 'email': 'teste@teste.com.br', 'status': 'waiting_info_and_documents', 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'marketplace_name': 'Marketplace de Teste', 'created_at': '2021-03-22T17:46:31.756265', 'updated_at': '2021-03-22T17:46:31.756266', 'type': 'individual', 'national_registration': '87021593414', 'birthday': '1988-04-23', 'mothers_name': 'Mãe do Holder', 'identity_card': '546180371', 'pep': False, 'cbo': '821450', '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/1d3705ef5f804ca38eb80f1359b6d9d3', 'type': 'GET'}, 'phones': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/1d3705ef5f804ca38eb80f1359b6d9d3/phones', 'type': 'GET'}, 'addresses': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/1d3705ef5f804ca38eb80f1359b6d9d3/addresses', 'type': 'GET'}, 'documents': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/1d3705ef5f804ca38eb80f1359b6d9d3/documents', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 17:46:30.597" endtime="20210322 17:46:30.599"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:46:30.601" level="INFO">a4e366de47df607b</msg>
<status status="PASS" starttime="20210322 17:46:30.600" endtime="20210322 17:46:30.601"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${body}</arg>
</arguments>
<msg timestamp="20210322 17:46:30.602" level="INFO">{ "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "87021593414", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder", "identity_card": "546180371", "pep": false, "cbo": 821450 }</msg>
<status status="PASS" starttime="20210322 17:46:30.602" endtime="20210322 17:46:30.602"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:46:30.603" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:46:30.603" endtime="20210322 17:46:30.604"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${holder_external_key}</var>
</assign>
<msg timestamp="20210322 17:46:30.605" level="INFO">${holder_external_key} = 1d3705ef5f804ca38eb80f1359b6d9d3</msg>
<status status="PASS" starttime="20210322 17:46:30.604" endtime="20210322 17:46:30.605"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_external_key}</arg>
</arguments>
<msg timestamp="20210322 17:46:30.606" level="INFO">${holder_external_key} = 1d3705ef5f804ca38eb80f1359b6d9d3</msg>
<status status="PASS" starttime="20210322 17:46:30.606" endtime="20210322 17:46:30.607"></status>
</kw>
<status status="PASS" starttime="20210322 17:46:29.901" endtime="20210322 17:46:30.607"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_name}</arg>
</arguments>
<msg timestamp="20210322 17:46:30.608" level="INFO">${holder_name} = Holder de teste</msg>
<status status="PASS" starttime="20210322 17:46:30.607" endtime="20210322 17:46:30.608"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 17:46:30.608" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:46:30.608" endtime="20210322 17:46:30.609"></status>
</kw>
<kw name="criar holder phone" library="accreditation_post_holder_phone">
<arguments>
<arg>21</arg>
<arg>51</arg>
<arg>996221236</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:46:30.611" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 17:46:30.610" endtime="20210322 17:46:30.611"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"area_code": "${phone_area_code}",</arg>
<arg>"country_code": "${phone_country_code}",</arg>
<arg>"number": "${phone_number}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 17:46:30.612" level="INFO">${body} = { "area_code": "21", "country_code": "51", "number": "996221236" }</msg>
<status status="PASS" starttime="20210322 17:46:30.611" endtime="20210322 17:46:30.612"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/phones</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:46:30.613" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/1d3705ef5f804ca38eb80f1359b6d9d3/phones, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "area_code": "21", "country_code": "51", "number": "996221236" } 
json=None</msg>
<msg timestamp="20210322 17:46:30.840" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:46:30.612" endtime="20210322 17:46:30.840"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:46:30.842" level="INFO">{'id': '73ab40feecbe41b397a61b55809d49ab', 'area_code': '21', 'country_code': '51', 'number': '996221236', 'main': True, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/1d3705ef5f804ca38eb80f1359b6d9d3/phones/73ab40feecbe41b397a61b55809d49ab', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/1d3705ef5f804ca38eb80f1359b6d9d3', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 17:46:30.840" endtime="20210322 17:46:30.842"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:46:30.845" level="INFO">826dadeaf8b2187d</msg>
<status status="PASS" starttime="20210322 17:46:30.843" endtime="20210322 17:46:30.846"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:46:30.848" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:46:30.846" endtime="20210322 17:46:30.848"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${phone_external_key}</var>
</assign>
<msg timestamp="20210322 17:46:30.852" level="INFO">${phone_external_key} = 73ab40feecbe41b397a61b55809d49ab</msg>
<status status="PASS" starttime="20210322 17:46:30.849" endtime="20210322 17:46:30.852"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${phone_external_key}</arg>
</arguments>
<msg timestamp="20210322 17:46:30.853" level="INFO">${phone_external_key} = 73ab40feecbe41b397a61b55809d49ab</msg>
<status status="PASS" starttime="20210322 17:46:30.852" endtime="20210322 17:46:30.853"></status>
</kw>
<status status="PASS" starttime="20210322 17:46:30.609" endtime="20210322 17:46:30.854"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 17:46:30.855" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:46:30.854" endtime="20210322 17:46:30.856"></status>
</kw>
<kw name="criar holder address" library="accreditation_post_holder_address">
<arguments>
<arg>Rio de Janeiro</arg>
<arg>Rio de Janeiro</arg>
<arg>Brasil</arg>
<arg>Bairro de Testes</arg>
<arg>Rua de Testes</arg>
<arg>90</arg>
<arg>apto 200</arg>
<arg>21550987</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:46:30.860" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 17:46:30.858" endtime="20210322 17:46:30.860"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"city": "${city}",</arg>
<arg>"state": "${state}",</arg>
<arg>"country": "${country}",</arg>
<arg>"neighborhood": "${neighborhood}",</arg>
<arg>"street": "${street}",</arg>
<arg>"number": "${number}",</arg>
<arg>"complement": "${complement}",</arg>
<arg>"postal_code": "${postal_code}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 17:46:30.862" level="INFO">${body} = { "city": "Rio de Janeiro", "state": "Rio de Janeiro", "country": "Brasil", "neighborhood": "Bairro de Testes", "street": "Rua de Testes", "number": "90", "complement": "apto 200", "postal_code": "215...</msg>
<status status="PASS" starttime="20210322 17:46:30.860" endtime="20210322 17:46:30.862"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/addresses</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:46:30.863" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/1d3705ef5f804ca38eb80f1359b6d9d3/addresses, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "city": "Rio de Janeiro", "state": "Rio de Janeiro", "country": "Brasil", "neighborhood": "Bairro de Testes", "street": "Rua de Testes", "number": "90", "complement": "apto 200", "postal_code": "21550987" } 
json=None</msg>
<msg timestamp="20210322 17:46:31.091" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:46:30.862" endtime="20210322 17:46:31.091"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:46:31.093" level="INFO">{'id': 'bef2355edede4c1b933dd3c510df1ce0', 'street': 'Rua de Testes', 'number': '90', 'city': 'Rio de Janeiro', 'complement': 'apto 200', 'state': 'Rio de Janeiro', 'neighborhood': 'Bairro de Testes', 'postal_code': '21550987', 'country': 'Brasil', 'main': True, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/1d3705ef5f804ca38eb80f1359b6d9d3/addresses/bef2355edede4c1b933dd3c510df1ce0', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/1d3705ef5f804ca38eb80f1359b6d9d3', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 17:46:31.092" endtime="20210322 17:46:31.094"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:46:31.096" level="INFO">caf740e4c960d908</msg>
<status status="PASS" starttime="20210322 17:46:31.095" endtime="20210322 17:46:31.096"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:46:31.099" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:46:31.098" endtime="20210322 17:46:31.099"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${address_external_key}</var>
</assign>
<msg timestamp="20210322 17:46:31.100" level="INFO">${address_external_key} = bef2355edede4c1b933dd3c510df1ce0</msg>
<status status="PASS" starttime="20210322 17:46:31.099" endtime="20210322 17:46:31.101"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${address_external_key}</arg>
</arguments>
<msg timestamp="20210322 17:46:31.102" level="INFO">${address_external_key} = bef2355edede4c1b933dd3c510df1ce0</msg>
<status status="PASS" starttime="20210322 17:46:31.101" endtime="20210322 17:46:31.102"></status>
</kw>
<status status="PASS" starttime="20210322 17:46:30.856" endtime="20210322 17:46:31.102"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 17:46:31.104" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:46:31.103" endtime="20210322 17:46:31.104"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>SELFIE</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:46:31.106" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 17:46:31.105" endtime="20210322 17:46:31.106"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 17:46:31.107" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 17:46:31.109" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 17:46:31.106" endtime="20210322 17:46:31.109"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:46:31.110" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/1d3705ef5f804ca38eb80f1359b6d9d3/documents?type=SELFIE, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 17:46:31.426" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:46:31.109" endtime="20210322 17:46:31.426"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:46:31.427" level="INFO">{'id': 'e570759b24f44ccdb47c75e6ef7aa6df', 'document_type': 'selfie', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/1d3705ef5f804ca38eb80f1359b6d9d3/documents/e570759b24f44ccdb47c75e6ef7aa6df', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/1d3705ef5f804ca38eb80f1359b6d9d3', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/1d3705ef5f804ca38eb80f1359b6d9d3/documents/e570759b24f44ccdb47c75e6ef7aa6df/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 17:46:31.427" endtime="20210322 17:46:31.428"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:46:31.429" level="INFO">1362ecde804ce613</msg>
<status status="PASS" starttime="20210322 17:46:31.428" endtime="20210322 17:46:31.429"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:46:31.430" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:46:31.429" endtime="20210322 17:46:31.430"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 17:46:31.431" level="INFO">${document_external_key} = e570759b24f44ccdb47c75e6ef7aa6df</msg>
<status status="PASS" starttime="20210322 17:46:31.430" endtime="20210322 17:46:31.431"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 17:46:31.432" level="INFO">${document_external_key} = e570759b24f44ccdb47c75e6ef7aa6df</msg>
<status status="PASS" starttime="20210322 17:46:31.432" endtime="20210322 17:46:31.432"></status>
</kw>
<status status="PASS" starttime="20210322 17:46:31.104" endtime="20210322 17:46:31.432"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 17:46:31.433" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:46:31.433" endtime="20210322 17:46:31.433"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>RG_FRENTE</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:46:31.434" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 17:46:31.434" endtime="20210322 17:46:31.434"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 17:46:31.435" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 17:46:31.437" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 17:46:31.435" endtime="20210322 17:46:31.437"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:46:31.438" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/1d3705ef5f804ca38eb80f1359b6d9d3/documents?type=RG_FRENTE, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 17:46:31.761" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:46:31.437" endtime="20210322 17:46:31.762"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:46:31.765" level="INFO">{'id': 'ca88abf5a15342399f7b05b4b5e3d530', 'document_type': 'rg_frente', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/1d3705ef5f804ca38eb80f1359b6d9d3/documents/ca88abf5a15342399f7b05b4b5e3d530', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/1d3705ef5f804ca38eb80f1359b6d9d3', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/1d3705ef5f804ca38eb80f1359b6d9d3/documents/ca88abf5a15342399f7b05b4b5e3d530/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 17:46:31.763" endtime="20210322 17:46:31.765"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:46:31.767" level="INFO">a342720dea69d271</msg>
<status status="PASS" starttime="20210322 17:46:31.766" endtime="20210322 17:46:31.768"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:46:31.771" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:46:31.769" endtime="20210322 17:46:31.772"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 17:46:31.775" level="INFO">${document_external_key} = ca88abf5a15342399f7b05b4b5e3d530</msg>
<status status="PASS" starttime="20210322 17:46:31.773" endtime="20210322 17:46:31.775"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 17:46:31.777" level="INFO">${document_external_key} = ca88abf5a15342399f7b05b4b5e3d530</msg>
<status status="PASS" starttime="20210322 17:46:31.776" endtime="20210322 17:46:31.777"></status>
</kw>
<status status="PASS" starttime="20210322 17:46:31.433" endtime="20210322 17:46:31.777"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 17:46:31.779" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:46:31.778" endtime="20210322 17:46:31.779"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>RG_VERSO</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:46:31.782" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 17:46:31.781" endtime="20210322 17:46:31.782"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 17:46:31.783" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 17:46:31.785" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 17:46:31.782" endtime="20210322 17:46:31.785"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:46:31.787" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/1d3705ef5f804ca38eb80f1359b6d9d3/documents?type=RG_VERSO, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 17:46:32.073" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:46:31.786" endtime="20210322 17:46:32.073"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:46:32.074" level="INFO">{'id': '96a8adaa313e45c88df63f9b06e43adb', 'document_type': 'rg_verso', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/1d3705ef5f804ca38eb80f1359b6d9d3/documents/96a8adaa313e45c88df63f9b06e43adb', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/1d3705ef5f804ca38eb80f1359b6d9d3', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/1d3705ef5f804ca38eb80f1359b6d9d3/documents/96a8adaa313e45c88df63f9b06e43adb/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 17:46:32.073" endtime="20210322 17:46:32.074"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:46:32.075" level="INFO">8bdfe44d8be6afee</msg>
<status status="PASS" starttime="20210322 17:46:32.074" endtime="20210322 17:46:32.075"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:46:32.076" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:46:32.075" endtime="20210322 17:46:32.076"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 17:46:32.077" level="INFO">${document_external_key} = 96a8adaa313e45c88df63f9b06e43adb</msg>
<status status="PASS" starttime="20210322 17:46:32.076" endtime="20210322 17:46:32.077"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 17:46:32.078" level="INFO">${document_external_key} = 96a8adaa313e45c88df63f9b06e43adb</msg>
<status status="PASS" starttime="20210322 17:46:32.077" endtime="20210322 17:46:32.078"></status>
</kw>
<status status="PASS" starttime="20210322 17:46:31.779" endtime="20210322 17:46:32.078"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 17:46:32.079" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:46:32.078" endtime="20210322 17:46:32.079"></status>
</kw>
<kw name="solicitar aprovação do holder" library="accreditation_request_approval">
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:46:32.080" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 17:46:32.080" endtime="20210322 17:46:32.080"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/approval</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:46:32.081" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/1d3705ef5f804ca38eb80f1359b6d9d3/approval, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data=None 
json=None</msg>
<msg timestamp="20210322 17:46:32.402" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 17:46:32.080" endtime="20210322 17:46:32.402"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:46:32.404" level="INFO">{'message': 'Approval request accepted successfully. Processing analysis'}</msg>
<status status="PASS" starttime="20210322 17:46:32.403" endtime="20210322 17:46:32.404"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:46:32.406" level="INFO">851f9ed5b543f9ee</msg>
<status status="PASS" starttime="20210322 17:46:32.405" endtime="20210322 17:46:32.406"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:46:32.408" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 17:46:32.407" endtime="20210322 17:46:32.408"></status>
</kw>
<status status="PASS" starttime="20210322 17:46:32.079" endtime="20210322 17:46:32.409"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 17:46:32.410" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:46:32.410" endtime="20210322 17:46:32.411"></status>
</kw>
<kw name="recebendo notificação de aprovação" library="accreditation_risk_notification">
<kw name="Uuid 4" library="FakerLibrary">
<doc>Generates a random UUID4 string.
:param cast_to: Specify what type the UUID should be cast to. Default is `str`
:type cast_to: callable</doc>
<assign>
<var>${assessment_id}</var>
</assign>
<msg timestamp="20210322 17:46:32.413" level="INFO">${assessment_id} = c1fbf55e-1bce-43f2-9541-5234da4712fb</msg>
<status status="PASS" starttime="20210322 17:46:32.413" endtime="20210322 17:46:32.413"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>year</arg>
</arguments>
<assign>
<var>${year}</var>
</assign>
<msg timestamp="20210322 17:46:32.415" level="INFO">${year} = 2021</msg>
<status status="PASS" starttime="20210322 17:46:32.414" endtime="20210322 17:46:32.415"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>month</arg>
</arguments>
<assign>
<var>${month}</var>
</assign>
<msg timestamp="20210322 17:46:32.416" level="INFO">${month} = 03</msg>
<status status="PASS" starttime="20210322 17:46:32.415" endtime="20210322 17:46:32.416"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>day</arg>
</arguments>
<assign>
<var>${day}</var>
</assign>
<msg timestamp="20210322 17:46:32.417" level="INFO">${day} = 22</msg>
<status status="PASS" starttime="20210322 17:46:32.417" endtime="20210322 17:46:32.417"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:46:32.418" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 17:46:32.418" endtime="20210322 17:46:32.418"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "risk.assessment.result",</arg>
<arg>"resource": "business.holder",</arg>
<arg>"created_at": "${year}-${month}-${day} 15:28:56.747Z",</arg>
<arg>"marketplace_id": "${marketplace_external_key}",</arg>
<arg>"object": {</arg>
<arg>"result": "APPROVED",</arg>
<arg>"holder_id": "${holder_external_key}",</arg>
<arg>"applicant_id": "${application_external_key}",</arg>
<arg>"assessment_id": "${assessment_id}"</arg>
<arg>}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 17:46:32.420" level="INFO">${body} = { "type": "risk.assessment.result", "resource": "business.holder", "created_at": "2021-03-22 15:28:56.747Z", "marketplace_id": "f71a8951368a4cc085cf7875ff44e61c", "object": { "result": "APPROVED", "ho...</msg>
<status status="PASS" starttime="20210322 17:46:32.419" endtime="20210322 17:46:32.420"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/admin/internal_operation/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/registration/approval</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:46:32.423" level="INFO">POST Request using : uri=/admin/internal_operation/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/1d3705ef5f804ca38eb80f1359b6d9d3/registration/approval, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "risk.assessment.result", "resource": "business.holder", "created_at": "2021-03-22 15:28:56.747Z", "marketplace_id": "f71a8951368a4cc085cf7875ff44e61c", "object": { "result": "APPROVED", "holder_id": "1d3705ef5f804ca38eb80f1359b6d9d3", "applicant_id": "bcc25a6751c14b52af1340d40dba78c5", "assessment_id": "c1fbf55e-1bce-43f2-9541-5234da4712fb" } } 
json=None</msg>
<msg timestamp="20210322 17:46:32.630" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 17:46:32.421" endtime="20210322 17:46:32.630"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:46:32.632" level="INFO">{'message': 'Holder approved successfully'}</msg>
<status status="PASS" starttime="20210322 17:46:32.631" endtime="20210322 17:46:32.632"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:46:32.634" level="INFO">2d26157969175080</msg>
<status status="PASS" starttime="20210322 17:46:32.633" endtime="20210322 17:46:32.634"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:46:32.636" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 17:46:32.635" endtime="20210322 17:46:32.637"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 17:46:32.639" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:46:32.638" endtime="20210322 17:46:32.639"></status>
</kw>
<status status="PASS" starttime="20210322 17:46:32.411" endtime="20210322 17:46:32.640"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 17:46:32.641" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:46:32.640" endtime="20210322 17:46:32.641"></status>
</kw>
<kw name="buscar account por holder" library="accounts_get_accounts_by_holder">
<kw name="conectar accounts" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accounts</arg>
<arg>url=${account_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 17:46:32.645" level="INFO">Creating Session using : alias=accounts, url=https://banking-accounts-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 17:46:32.644" endtime="20210322 17:46:32.646"></status>
</kw>
<status status="PASS" starttime="20210322 17:46:32.643" endtime="20210322 17:46:32.646"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accounts</arg>
<arg>/marketplaces/${marketplace_external_key}/holders/${holder_external_key}/accounts</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:46:32.647" level="INFO">GET Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/holders/1d3705ef5f804ca38eb80f1359b6d9d3/accounts, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 17:46:33.288" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 17:46:32.646" endtime="20210322 17:46:33.288"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:46:33.291" level="INFO">{'items': [{'id': 'e7968ce6c95f4a3bbb1f0c8da79422ac', 'holder': '1d3705ef5f804ca38eb80f1359b6d9d3', 'balance': '0.00', 'currency': 'BRL', 'routing_number': '001', 'number': '1104639329', 'status': 'active', 'metadata': {}, 'created_at': '2021-03-22T20:46:33.812842', 'updated_at': '2021-03-22T20:46:33.812842', 'primary': True, 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'uri': '/v2/marketplaces/f71a8951368a4cc085cf7875ff44e61c/accounts/e7968ce6c95f4a3bbb1f0c8da79422ac', 'resource': 'payment_account'}], 'has_more': False, 'limit': 100, 'total_pages': 1, 'page': 1, 'offset': 0, 'total': '1', 'query_count': '1'}</msg>
<status status="PASS" starttime="20210322 17:46:33.289" endtime="20210322 17:46:33.292"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:46:33.294" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 17:46:33.293" endtime="20210322 17:46:33.294"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["id"]}</arg>
</arguments>
<assign>
<var>${account_external_key}</var>
</assign>
<msg timestamp="20210322 17:46:33.298" level="INFO">${account_external_key} = e7968ce6c95f4a3bbb1f0c8da79422ac</msg>
<status status="PASS" starttime="20210322 17:46:33.295" endtime="20210322 17:46:33.298"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_external_key}</arg>
</arguments>
<msg timestamp="20210322 17:46:33.300" level="INFO">${account_external_key} = e7968ce6c95f4a3bbb1f0c8da79422ac</msg>
<status status="PASS" starttime="20210322 17:46:33.299" endtime="20210322 17:46:33.301"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["number"]}</arg>
</arguments>
<assign>
<var>${account_number}</var>
</assign>
<msg timestamp="20210322 17:46:33.303" level="INFO">${account_number} = 1104639329</msg>
<status status="PASS" starttime="20210322 17:46:33.301" endtime="20210322 17:46:33.303"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_number}</arg>
</arguments>
<msg timestamp="20210322 17:46:33.305" level="INFO">${account_number} = 1104639329</msg>
<status status="PASS" starttime="20210322 17:46:33.304" endtime="20210322 17:46:33.305"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["routing_number"]}</arg>
</arguments>
<assign>
<var>${account_routing_number}</var>
</assign>
<msg timestamp="20210322 17:46:33.307" level="INFO">${account_routing_number} = 001</msg>
<status status="PASS" starttime="20210322 17:46:33.305" endtime="20210322 17:46:33.307"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_routing_number}</arg>
</arguments>
<msg timestamp="20210322 17:46:33.308" level="INFO">${account_routing_number} = 001</msg>
<status status="PASS" starttime="20210322 17:46:33.308" endtime="20210322 17:46:33.309"></status>
</kw>
<status status="PASS" starttime="20210322 17:46:32.642" endtime="20210322 17:46:33.309"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 17:46:33.310" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:46:33.310" endtime="20210322 17:46:33.310"></status>
</kw>
<status status="PASS" starttime="20210322 17:46:29.894" endtime="20210322 17:46:33.310"></status>
</kw>
<kw name="criar chave pix" library="pix_dict_create_entry">
<arguments>
<arg>type=phone</arg>
<arg>value=${phone_pix}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 17:46:33.313" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 17:46:33.312" endtime="20210322 17:46:33.313"></status>
</kw>
<status status="PASS" starttime="20210322 17:46:33.311" endtime="20210322 17:46:33.314"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${type}</arg>
</arguments>
<msg timestamp="20210322 17:46:33.315" level="INFO">${type} = phone</msg>
<status status="PASS" starttime="20210322 17:46:33.314" endtime="20210322 17:46:33.316"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210322 17:46:33.316" level="INFO">${value} = +5521947149040</msg>
<status status="PASS" starttime="20210322 17:46:33.316" endtime="20210322 17:46:33.316"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:46:33.317" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 17:46:33.317" endtime="20210322 17:46:33.318"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "${type}",</arg>
<arg>"value": "${value}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 17:46:33.319" level="INFO">${body} = { "type": "phone", "value": "+5521947149040" }</msg>
<status status="PASS" starttime="20210322 17:46:33.318" endtime="20210322 17:46:33.319"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:46:33.321" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/1d3705ef5f804ca38eb80f1359b6d9d3/accounts/e7968ce6c95f4a3bbb1f0c8da79422ac/entries, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "phone", "value": "+5521947149040" } 
json=None</msg>
<msg timestamp="20210322 17:46:34.033" level="INFO">${response} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20210322 17:46:33.320" endtime="20210322 17:46:34.033"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:46:34.034" level="INFO">{'id': 'b050ca7b44f042fcba65431876782543', 'status': 'waiting_ownership_verification', 'created_at': '2021-03-22T05:46:35.219', 'updated_at': '2021-03-22T05:46:35.219', 'key': {'value': '+5521947149040', 'type': 'phone'}, 'account': {'id': 'e7968ce6c95f4a3bbb1f0c8da79422ac', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': '1d3705ef5f804ca38eb80f1359b6d9d3', 'owner': {'name': 'Holder de teste', 'national_registration': '87021593414', 'type': 'individual'}, 'routing_number': '001', 'number': '1104639329', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}, 'resource': 'pix.entry'}</msg>
<status status="PASS" starttime="20210322 17:46:34.033" endtime="20210322 17:46:34.034"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:46:34.035" level="INFO">55161e80cdaa1495</msg>
<status status="PASS" starttime="20210322 17:46:34.034" endtime="20210322 17:46:34.035"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 17:46:34.036" level="INFO">202</msg>
<status status="PASS" starttime="20210322 17:46:34.035" endtime="20210322 17:46:34.037"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:46:34.038" level="INFO">${response} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20210322 17:46:34.037" endtime="20210322 17:46:34.038"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${entry_external_key}</var>
</assign>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:46:34.039" endtime="20210322 17:46:34.040"></status>
</kw>
<msg timestamp="20210322 17:46:34.040" level="INFO">${entry_external_key} = b050ca7b44f042fcba65431876782543</msg>
<status status="PASS" starttime="20210322 17:46:34.038" endtime="20210322 17:46:34.040"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${entry_external_key}</arg>
</arguments>
<msg timestamp="20210322 17:46:34.042" level="INFO">${entry_external_key} = b050ca7b44f042fcba65431876782543</msg>
<status status="PASS" starttime="20210322 17:46:34.041" endtime="20210322 17:46:34.042"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["key"]["value"]}</arg>
</arguments>
<assign>
<var>${entry_key_value}</var>
</assign>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["key"]["value"]}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:46:34.043" endtime="20210322 17:46:34.043"></status>
</kw>
<msg timestamp="20210322 17:46:34.044" level="INFO">${entry_key_value} = +5521947149040</msg>
<status status="PASS" starttime="20210322 17:46:34.042" endtime="20210322 17:46:34.044"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${entry_key_value}</arg>
</arguments>
<msg timestamp="20210322 17:46:34.044" level="INFO">${entry_key_value} = +5521947149040</msg>
<status status="PASS" starttime="20210322 17:46:34.044" endtime="20210322 17:46:34.044"></status>
</kw>
<status status="PASS" starttime="20210322 17:46:33.310" endtime="20210322 17:46:34.044"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${holder_external_key}</arg>
</arguments>
<assign>
<var>${holder_owner}</var>
</assign>
<msg timestamp="20210322 17:46:34.045" level="INFO">${holder_owner} = 1d3705ef5f804ca38eb80f1359b6d9d3</msg>
<status status="PASS" starttime="20210322 17:46:34.045" endtime="20210322 17:46:34.045"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${holder_type}</arg>
</arguments>
<assign>
<var>${holder_type_owner}</var>
</assign>
<msg timestamp="20210322 17:46:34.046" level="INFO">${holder_type_owner} = individual</msg>
<status status="PASS" starttime="20210322 17:46:34.046" endtime="20210322 17:46:34.046"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${holder_name}</arg>
</arguments>
<assign>
<var>${holder_name_owner}</var>
</assign>
<msg timestamp="20210322 17:46:34.047" level="INFO">${holder_name_owner} = Holder de teste</msg>
<status status="PASS" starttime="20210322 17:46:34.046" endtime="20210322 17:46:34.047"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${national_registration}</arg>
</arguments>
<assign>
<var>${national_registration_owner}</var>
</assign>
<msg timestamp="20210322 17:46:34.047" level="INFO">${national_registration_owner} = 87021593414</msg>
<status status="PASS" starttime="20210322 17:46:34.047" endtime="20210322 17:46:34.047"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${account_external_key}</arg>
</arguments>
<assign>
<var>${account_owner}</var>
</assign>
<msg timestamp="20210322 17:46:34.048" level="INFO">${account_owner} = e7968ce6c95f4a3bbb1f0c8da79422ac</msg>
<status status="PASS" starttime="20210322 17:46:34.048" endtime="20210322 17:46:34.048"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${account_number}</arg>
</arguments>
<assign>
<var>${account_number_owner}</var>
</assign>
<msg timestamp="20210322 17:46:34.048" level="INFO">${account_number_owner} = 1104639329</msg>
<status status="PASS" starttime="20210322 17:46:34.048" endtime="20210322 17:46:34.048"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${account_routing_number}</arg>
</arguments>
<assign>
<var>${account_routing_number_owner}</var>
</assign>
<msg timestamp="20210322 17:46:34.049" level="INFO">${account_routing_number_owner} = 001</msg>
<status status="PASS" starttime="20210322 17:46:34.049" endtime="20210322 17:46:34.049"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${entry_external_key}</arg>
</arguments>
<assign>
<var>${entry_owner}</var>
</assign>
<msg timestamp="20210322 17:46:34.049" level="INFO">${entry_owner} = b050ca7b44f042fcba65431876782543</msg>
<status status="PASS" starttime="20210322 17:46:34.049" endtime="20210322 17:46:34.050"></status>
</kw>
<kw name="buscar verification code" library="pix_dict_verification_code">
<arguments>
<arg>holder_external_key=${holder_owner}</arg>
<arg>account_external_key=${account_owner}</arg>
<arg>entry_external_key=${entry_owner}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 17:46:34.051" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 17:46:34.051" endtime="20210322 17:46:34.051"></status>
</kw>
<status status="PASS" starttime="20210322 17:46:34.050" endtime="20210322 17:46:34.052"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/admin/internal_operation/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries/${entry_external_key}/code</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:46:34.052" level="INFO">GET Request using : uri=/admin/internal_operation/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/1d3705ef5f804ca38eb80f1359b6d9d3/accounts/e7968ce6c95f4a3bbb1f0c8da79422ac/entries/b050ca7b44f042fcba65431876782543/code, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 17:46:34.732" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 17:46:34.052" endtime="20210322 17:46:34.732"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:46:34.735" level="INFO">{'code': '0054'}</msg>
<status status="PASS" starttime="20210322 17:46:34.733" endtime="20210322 17:46:34.736"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:46:34.738" level="INFO">7bd8365264f82f55</msg>
<status status="PASS" starttime="20210322 17:46:34.737" endtime="20210322 17:46:34.738"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 17:46:34.740" level="INFO">200</msg>
<status status="PASS" starttime="20210322 17:46:34.739" endtime="20210322 17:46:34.740"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:46:34.741" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 17:46:34.741" endtime="20210322 17:46:34.742"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["code"]}</arg>
</arguments>
<assign>
<var>${verification_code}</var>
</assign>
<msg timestamp="20210322 17:46:34.743" level="INFO">${verification_code} = 0054</msg>
<status status="PASS" starttime="20210322 17:46:34.742" endtime="20210322 17:46:34.743"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${verification_code}</arg>
</arguments>
<msg timestamp="20210322 17:46:34.744" level="INFO">${verification_code} = 0054</msg>
<status status="PASS" starttime="20210322 17:46:34.744" endtime="20210322 17:46:34.745"></status>
</kw>
<status status="PASS" starttime="20210322 17:46:34.050" endtime="20210322 17:46:34.745"></status>
</kw>
<kw name="confirmar propriedade da chave pix" library="pix_dict_confirm_propriety">
<arguments>
<arg>verification_code=${verification_code}</arg>
<arg>holder_external_key=${holder_owner}</arg>
<arg>account_external_key=${account_owner}</arg>
<arg>entry_external_key=${entry_owner}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 17:46:34.749" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 17:46:34.747" endtime="20210322 17:46:34.750"></status>
</kw>
<status status="PASS" starttime="20210322 17:46:34.747" endtime="20210322 17:46:34.751"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:46:34.751" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 17:46:34.751" endtime="20210322 17:46:34.752"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"code": "${verification_code}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 17:46:34.752" level="INFO">${body} = { "code": "0054" }</msg>
<status status="PASS" starttime="20210322 17:46:34.752" endtime="20210322 17:46:34.752"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries/${entry_external_key}/ownership</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:46:34.753" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/1d3705ef5f804ca38eb80f1359b6d9d3/accounts/e7968ce6c95f4a3bbb1f0c8da79422ac/entries/b050ca7b44f042fcba65431876782543/ownership, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "code": "0054" } 
json=None</msg>
<msg timestamp="20210322 17:46:36.292" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:46:34.752" endtime="20210322 17:46:36.292"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:46:36.293" level="INFO">{'id': 'b050ca7b44f042fcba65431876782543', 'status': 'active', 'created_at': '2021-03-22T05:46:35.219', 'updated_at': '2021-03-22T05:46:37.510', 'key': {'value': '+5521947149040', 'type': 'phone'}, 'account': {'id': 'e7968ce6c95f4a3bbb1f0c8da79422ac', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': '1d3705ef5f804ca38eb80f1359b6d9d3', 'owner': {'name': 'Holder de teste', 'national_registration': '87021593414', 'type': 'individual'}, 'routing_number': '001', 'number': '1104639329', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}, 'resource': 'pix.entry'}</msg>
<status status="PASS" starttime="20210322 17:46:36.293" endtime="20210322 17:46:36.293"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:46:36.294" level="INFO">93cd818df0b946ad</msg>
<status status="PASS" starttime="20210322 17:46:36.294" endtime="20210322 17:46:36.294"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 17:46:36.294" level="INFO">201</msg>
<status status="PASS" starttime="20210322 17:46:36.294" endtime="20210322 17:46:36.295"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:46:36.295" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:46:36.295" endtime="20210322 17:46:36.295"></status>
</kw>
<status status="PASS" starttime="20210322 17:46:34.745" endtime="20210322 17:46:36.295"></status>
</kw>
<kw name="validar chave pix" library="asserts">
<arguments>
<arg>key_status=active</arg>
<arg>key_type=${type}</arg>
<arg>key_value=${value}</arg>
<arg>account_external_key=${account_owner}</arg>
<arg>marketplace_external_key=${marketplace_external_key}</arg>
<arg>holder_external_key=${holder_owner}</arg>
<arg>account_number=${account_number_owner}</arg>
<arg>account_routing_number=${account_routing_number_owner}</arg>
<arg>account_type=CACC</arg>
<arg>owner_key_name=${holder_name_owner}</arg>
<arg>national_registration=${national_registration_owner}</arg>
<arg>holder_type=${holder_type}</arg>
<arg>psp_code=19468242</arg>
<arg>psp_name=Zoop Tecnologia e Meios de Pagamento S.A.</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar status da chave</arg>
</arguments>
<msg timestamp="20210322 17:46:36.297" level="INFO">Validar status da chave</msg>
<status status="PASS" starttime="20210322 17:46:36.296" endtime="20210322 17:46:36.297"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["status"]}</arg>
<arg>${key_status}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:46:36.297" endtime="20210322 17:46:36.297"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando Tipo da chave PIX</arg>
</arguments>
<msg timestamp="20210322 17:46:36.298" level="INFO">Validando Tipo da chave PIX</msg>
<status status="PASS" starttime="20210322 17:46:36.297" endtime="20210322 17:46:36.298"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["key"]["type"]}</arg>
<arg>${key_type}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:46:36.298" endtime="20210322 17:46:36.298"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando Valor da chave PIX</arg>
</arguments>
<msg timestamp="20210322 17:46:36.299" level="INFO">Validando Valor da chave PIX</msg>
<status status="PASS" starttime="20210322 17:46:36.299" endtime="20210322 17:46:36.299"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${type}' == 'evp'</arg>
<arg>Should Not Be Empty</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' != 'evp'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${key_value}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${key_value}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:46:36.300" endtime="20210322 17:46:36.300"></status>
</kw>
<status status="PASS" starttime="20210322 17:46:36.299" endtime="20210322 17:46:36.300"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando dados da conta</arg>
</arguments>
<msg timestamp="20210322 17:46:36.300" level="INFO">Validando dados da conta</msg>
<status status="PASS" starttime="20210322 17:46:36.300" endtime="20210322 17:46:36.301"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["id"]}</arg>
<arg>${account_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:46:36.301" endtime="20210322 17:46:36.301"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["marketplace"]}</arg>
<arg>${marketplace_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:46:36.301" endtime="20210322 17:46:36.302"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["holder"]}</arg>
<arg>${holder_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:46:36.302" endtime="20210322 17:46:36.302"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["number"]}</arg>
<arg>${account_number}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:46:36.303" endtime="20210322 17:46:36.303"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["routing_number"]}</arg>
<arg>${account_routing_number}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:46:36.303" endtime="20210322 17:46:36.304"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["type"]}</arg>
<arg>${account_type}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:46:36.304" endtime="20210322 17:46:36.304"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar Proprietário da Account Owner</arg>
</arguments>
<msg timestamp="20210322 17:46:36.305" level="INFO">Validar Proprietário da Account Owner</msg>
<status status="PASS" starttime="20210322 17:46:36.305" endtime="20210322 17:46:36.305"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["account"]["owner"]["name"]}</arg>
<arg>${owner_key_name}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:46:36.305" endtime="20210322 17:46:36.306"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar national_registration da Account Owner</arg>
</arguments>
<msg timestamp="20210322 17:46:36.306" level="INFO">Validar national_registration da Account Owner</msg>
<status status="PASS" starttime="20210322 17:46:36.306" endtime="20210322 17:46:36.306"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["account"]["owner"]["national_registration"]}</arg>
<arg>${national_registration}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:46:36.306" endtime="20210322 17:46:36.307"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar Holder Type do Account Owner</arg>
</arguments>
<msg timestamp="20210322 17:46:36.307" level="INFO">Validar Holder Type do Account Owner</msg>
<status status="PASS" starttime="20210322 17:46:36.307" endtime="20210322 17:46:36.307"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["account"]["owner"]["type"]}</arg>
<arg>${holder_type}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:46:36.307" endtime="20210322 17:46:36.308"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar PSP</arg>
</arguments>
<msg timestamp="20210322 17:46:36.308" level="INFO">Validar PSP</msg>
<status status="PASS" starttime="20210322 17:46:36.308" endtime="20210322 17:46:36.308"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["psp"]["code"]}</arg>
<arg>${psp_code}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:46:36.308" endtime="20210322 17:46:36.309"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["psp"]["name"]}</arg>
<arg>${psp_name}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:46:36.309" endtime="20210322 17:46:36.309"></status>
</kw>
<status status="PASS" starttime="20210322 17:46:36.295" endtime="20210322 17:46:36.309"></status>
</kw>
<kw name="criar holder individual ativo" library="accreditation_create_holder_active">
<kw name="conectar accreditation" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accreditation</arg>
<arg>url=${accreditation_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 17:46:36.310" level="INFO">Creating Session using : alias=accreditation, url=https://banking-accreditation-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 17:46:36.310" endtime="20210322 17:46:36.310"></status>
</kw>
<status status="PASS" starttime="20210322 17:46:36.310" endtime="20210322 17:46:36.310"></status>
</kw>
<kw name="Cpf" library="FakerLibrary">
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 17:46:36.310" level="INFO">${national_registration} = 396.512.804-33</msg>
<status status="PASS" starttime="20210322 17:46:36.310" endtime="20210322 17:46:36.310"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${national_registration}</arg>
<arg>.</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 17:46:36.311" level="INFO">${national_registration} = 396512804-33</msg>
<status status="PASS" starttime="20210322 17:46:36.310" endtime="20210322 17:46:36.311"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${national_registration}</arg>
<arg>-</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 17:46:36.311" level="INFO">${national_registration} = 39651280433</msg>
<status status="PASS" starttime="20210322 17:46:36.311" endtime="20210322 17:46:36.312"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${national_registration}</arg>
</arguments>
<msg timestamp="20210322 17:46:36.312" level="INFO">${national_registration} = 39651280433</msg>
<status status="PASS" starttime="20210322 17:46:36.312" endtime="20210322 17:46:36.312"></status>
</kw>
<kw name="Rg" library="FakerLibrary">
<doc>Brazilian RG, return plain numbers.
Check:  https://www.ngmatematica.com/2014/02/como-determinar-o-digito-verificador-do.html</doc>
<assign>
<var>${identity_card}</var>
</assign>
<msg timestamp="20210322 17:46:36.312" level="INFO">${identity_card} = 584716230</msg>
<status status="PASS" starttime="20210322 17:46:36.312" endtime="20210322 17:46:36.312"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${identity_card}</arg>
</arguments>
<msg timestamp="20210322 17:46:36.312" level="INFO">${identity_card} = 584716230</msg>
<status status="PASS" starttime="20210322 17:46:36.312" endtime="20210322 17:46:36.312"></status>
</kw>
<kw name="criar holder individual" library="accreditation_post_holder_individual">
<arguments>
<arg>holder_type=individual</arg>
<arg>holder_name=${holder_name}</arg>
<arg>email=${email}</arg>
<arg>national_registration=${national_registration}</arg>
<arg>revenue=${revenue}</arg>
<arg>birthday=${birthday}</arg>
<arg>mothers_name=${mothers_name}</arg>
<arg>identity_card=${identity_card}</arg>
<arg>pep=false</arg>
<arg>cbo=${cbo}</arg>
</arguments>
<kw name="conectar accreditation" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accreditation</arg>
<arg>url=${accreditation_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 17:46:36.314" level="INFO">Creating Session using : alias=accreditation, url=https://banking-accreditation-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 17:46:36.313" endtime="20210322 17:46:36.315"></status>
</kw>
<status status="PASS" starttime="20210322 17:46:36.313" endtime="20210322 17:46:36.315"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_type}</arg>
</arguments>
<msg timestamp="20210322 17:46:36.315" level="INFO">${holder_type} = individual</msg>
<status status="PASS" starttime="20210322 17:46:36.315" endtime="20210322 17:46:36.315"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_name}</arg>
</arguments>
<msg timestamp="20210322 17:46:36.315" level="INFO">${holder_name} = Holder de teste</msg>
<status status="PASS" starttime="20210322 17:46:36.315" endtime="20210322 17:46:36.315"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:46:36.315" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 17:46:36.315" endtime="20210322 17:46:36.315"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "${holder_type}",</arg>
<arg>"name": "${holder_name}",</arg>
<arg>"email": "${email}",</arg>
<arg>"national_registration": "${national_registration}",</arg>
<arg>"revenue": ${revenue},</arg>
<arg>"birthday": "${birthday}",</arg>
<arg>"mothers_name": "${mothers_name}",</arg>
<arg>"identity_card": "${identity_card}",</arg>
<arg>"pep": false,</arg>
<arg>"cbo": ${cbo}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 17:46:36.316" level="INFO">${body} = { "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "39651280433", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder",...</msg>
<status status="PASS" starttime="20210322 17:46:36.315" endtime="20210322 17:46:36.316"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:46:36.316" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "39651280433", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder", "identity_card": "584716230", "pep": false, "cbo": 821450 } 
json=None</msg>
<msg timestamp="20210322 17:46:36.974" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:46:36.316" endtime="20210322 17:46:36.974"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:46:36.975" level="INFO">{'id': '058efae325c344e48cd080b51eaf967c', 'name': 'Holder de teste', 'revenue': 5500.0, 'email': 'teste@teste.com.br', 'status': 'waiting_info_and_documents', 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'marketplace_name': 'Marketplace de Teste', 'created_at': '2021-03-22T17:46:38.145773', 'updated_at': '2021-03-22T17:46:38.145775', 'type': 'individual', 'national_registration': '39651280433', 'birthday': '1988-04-23', 'mothers_name': 'Mãe do Holder', 'identity_card': '584716230', 'pep': False, 'cbo': '821450', '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/058efae325c344e48cd080b51eaf967c', 'type': 'GET'}, 'phones': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/058efae325c344e48cd080b51eaf967c/phones', 'type': 'GET'}, 'addresses': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/058efae325c344e48cd080b51eaf967c/addresses', 'type': 'GET'}, 'documents': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/058efae325c344e48cd080b51eaf967c/documents', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 17:46:36.974" endtime="20210322 17:46:36.975"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:46:36.977" level="INFO">0256fe707b2f2d2e</msg>
<status status="PASS" starttime="20210322 17:46:36.976" endtime="20210322 17:46:36.977"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${body}</arg>
</arguments>
<msg timestamp="20210322 17:46:36.978" level="INFO">{ "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "39651280433", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder", "identity_card": "584716230", "pep": false, "cbo": 821450 }</msg>
<status status="PASS" starttime="20210322 17:46:36.977" endtime="20210322 17:46:36.978"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:46:36.979" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:46:36.979" endtime="20210322 17:46:36.980"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${holder_external_key}</var>
</assign>
<msg timestamp="20210322 17:46:36.981" level="INFO">${holder_external_key} = 058efae325c344e48cd080b51eaf967c</msg>
<status status="PASS" starttime="20210322 17:46:36.980" endtime="20210322 17:46:36.981"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_external_key}</arg>
</arguments>
<msg timestamp="20210322 17:46:36.982" level="INFO">${holder_external_key} = 058efae325c344e48cd080b51eaf967c</msg>
<status status="PASS" starttime="20210322 17:46:36.982" endtime="20210322 17:46:36.982"></status>
</kw>
<status status="PASS" starttime="20210322 17:46:36.313" endtime="20210322 17:46:36.983"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_name}</arg>
</arguments>
<msg timestamp="20210322 17:46:36.983" level="INFO">${holder_name} = Holder de teste</msg>
<status status="PASS" starttime="20210322 17:46:36.983" endtime="20210322 17:46:36.984"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 17:46:36.984" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:46:36.984" endtime="20210322 17:46:36.985"></status>
</kw>
<kw name="criar holder phone" library="accreditation_post_holder_phone">
<arguments>
<arg>21</arg>
<arg>51</arg>
<arg>996221236</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:46:36.986" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 17:46:36.986" endtime="20210322 17:46:36.986"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"area_code": "${phone_area_code}",</arg>
<arg>"country_code": "${phone_country_code}",</arg>
<arg>"number": "${phone_number}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 17:46:36.987" level="INFO">${body} = { "area_code": "21", "country_code": "51", "number": "996221236" }</msg>
<status status="PASS" starttime="20210322 17:46:36.987" endtime="20210322 17:46:36.987"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/phones</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:46:36.988" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/058efae325c344e48cd080b51eaf967c/phones, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "area_code": "21", "country_code": "51", "number": "996221236" } 
json=None</msg>
<msg timestamp="20210322 17:46:37.208" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:46:36.988" endtime="20210322 17:46:37.208"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:46:37.209" level="INFO">{'id': '33cd479aab9e44ab8980c7012e3ca233', 'area_code': '21', 'country_code': '51', 'number': '996221236', 'main': True, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/058efae325c344e48cd080b51eaf967c/phones/33cd479aab9e44ab8980c7012e3ca233', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/058efae325c344e48cd080b51eaf967c', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 17:46:37.209" endtime="20210322 17:46:37.209"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:46:37.210" level="INFO">547a1df94feecec3</msg>
<status status="PASS" starttime="20210322 17:46:37.210" endtime="20210322 17:46:37.210"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:46:37.211" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:46:37.211" endtime="20210322 17:46:37.211"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${phone_external_key}</var>
</assign>
<msg timestamp="20210322 17:46:37.212" level="INFO">${phone_external_key} = 33cd479aab9e44ab8980c7012e3ca233</msg>
<status status="PASS" starttime="20210322 17:46:37.211" endtime="20210322 17:46:37.212"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${phone_external_key}</arg>
</arguments>
<msg timestamp="20210322 17:46:37.213" level="INFO">${phone_external_key} = 33cd479aab9e44ab8980c7012e3ca233</msg>
<status status="PASS" starttime="20210322 17:46:37.212" endtime="20210322 17:46:37.213"></status>
</kw>
<status status="PASS" starttime="20210322 17:46:36.985" endtime="20210322 17:46:37.213"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 17:46:37.214" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:46:37.213" endtime="20210322 17:46:37.214"></status>
</kw>
<kw name="criar holder address" library="accreditation_post_holder_address">
<arguments>
<arg>Rio de Janeiro</arg>
<arg>Rio de Janeiro</arg>
<arg>Brasil</arg>
<arg>Bairro de Testes</arg>
<arg>Rua de Testes</arg>
<arg>90</arg>
<arg>apto 200</arg>
<arg>21550987</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:46:37.215" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 17:46:37.215" endtime="20210322 17:46:37.215"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"city": "${city}",</arg>
<arg>"state": "${state}",</arg>
<arg>"country": "${country}",</arg>
<arg>"neighborhood": "${neighborhood}",</arg>
<arg>"street": "${street}",</arg>
<arg>"number": "${number}",</arg>
<arg>"complement": "${complement}",</arg>
<arg>"postal_code": "${postal_code}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 17:46:37.217" level="INFO">${body} = { "city": "Rio de Janeiro", "state": "Rio de Janeiro", "country": "Brasil", "neighborhood": "Bairro de Testes", "street": "Rua de Testes", "number": "90", "complement": "apto 200", "postal_code": "215...</msg>
<status status="PASS" starttime="20210322 17:46:37.216" endtime="20210322 17:46:37.217"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/addresses</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:46:37.217" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/058efae325c344e48cd080b51eaf967c/addresses, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "city": "Rio de Janeiro", "state": "Rio de Janeiro", "country": "Brasil", "neighborhood": "Bairro de Testes", "street": "Rua de Testes", "number": "90", "complement": "apto 200", "postal_code": "21550987" } 
json=None</msg>
<msg timestamp="20210322 17:46:37.450" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:46:37.217" endtime="20210322 17:46:37.450"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:46:37.452" level="INFO">{'id': 'bc44ece078c8477fbc068ccfe318f667', 'street': 'Rua de Testes', 'number': '90', 'city': 'Rio de Janeiro', 'complement': 'apto 200', 'state': 'Rio de Janeiro', 'neighborhood': 'Bairro de Testes', 'postal_code': '21550987', 'country': 'Brasil', 'main': True, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/058efae325c344e48cd080b51eaf967c/addresses/bc44ece078c8477fbc068ccfe318f667', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/058efae325c344e48cd080b51eaf967c', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 17:46:37.451" endtime="20210322 17:46:37.452"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:46:37.455" level="INFO">5373348ececc05cf</msg>
<status status="PASS" starttime="20210322 17:46:37.453" endtime="20210322 17:46:37.455"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:46:37.457" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:46:37.456" endtime="20210322 17:46:37.457"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${address_external_key}</var>
</assign>
<msg timestamp="20210322 17:46:37.460" level="INFO">${address_external_key} = bc44ece078c8477fbc068ccfe318f667</msg>
<status status="PASS" starttime="20210322 17:46:37.457" endtime="20210322 17:46:37.460"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${address_external_key}</arg>
</arguments>
<msg timestamp="20210322 17:46:37.461" level="INFO">${address_external_key} = bc44ece078c8477fbc068ccfe318f667</msg>
<status status="PASS" starttime="20210322 17:46:37.460" endtime="20210322 17:46:37.461"></status>
</kw>
<status status="PASS" starttime="20210322 17:46:37.214" endtime="20210322 17:46:37.461"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 17:46:37.462" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:46:37.462" endtime="20210322 17:46:37.462"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>SELFIE</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:46:37.464" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 17:46:37.464" endtime="20210322 17:46:37.464"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 17:46:37.465" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 17:46:37.467" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 17:46:37.465" endtime="20210322 17:46:37.467"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:46:37.468" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/058efae325c344e48cd080b51eaf967c/documents?type=SELFIE, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 17:46:37.755" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:46:37.468" endtime="20210322 17:46:37.755"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:46:37.756" level="INFO">{'id': '7d827eacefa94c98b4688d75d25ae9dc', 'document_type': 'selfie', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/058efae325c344e48cd080b51eaf967c/documents/7d827eacefa94c98b4688d75d25ae9dc', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/058efae325c344e48cd080b51eaf967c', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/058efae325c344e48cd080b51eaf967c/documents/7d827eacefa94c98b4688d75d25ae9dc/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 17:46:37.755" endtime="20210322 17:46:37.756"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:46:37.757" level="INFO">d14ddb7cd24644ef</msg>
<status status="PASS" starttime="20210322 17:46:37.756" endtime="20210322 17:46:37.757"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:46:37.757" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:46:37.757" endtime="20210322 17:46:37.758"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 17:46:37.758" level="INFO">${document_external_key} = 7d827eacefa94c98b4688d75d25ae9dc</msg>
<status status="PASS" starttime="20210322 17:46:37.758" endtime="20210322 17:46:37.758"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 17:46:37.759" level="INFO">${document_external_key} = 7d827eacefa94c98b4688d75d25ae9dc</msg>
<status status="PASS" starttime="20210322 17:46:37.759" endtime="20210322 17:46:37.759"></status>
</kw>
<status status="PASS" starttime="20210322 17:46:37.463" endtime="20210322 17:46:37.759"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 17:46:37.760" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:46:37.759" endtime="20210322 17:46:37.760"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>RG_FRENTE</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:46:37.760" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 17:46:37.760" endtime="20210322 17:46:37.761"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 17:46:37.761" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 17:46:37.762" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 17:46:37.761" endtime="20210322 17:46:37.762"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:46:37.763" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/058efae325c344e48cd080b51eaf967c/documents?type=RG_FRENTE, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 17:46:38.045" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:46:37.762" endtime="20210322 17:46:38.046"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:46:38.048" level="INFO">{'id': '8cc0d911022c4738a564ca33105315c3', 'document_type': 'rg_frente', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/058efae325c344e48cd080b51eaf967c/documents/8cc0d911022c4738a564ca33105315c3', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/058efae325c344e48cd080b51eaf967c', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/058efae325c344e48cd080b51eaf967c/documents/8cc0d911022c4738a564ca33105315c3/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 17:46:38.047" endtime="20210322 17:46:38.049"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:46:38.051" level="INFO">849842446c1c4d25</msg>
<status status="PASS" starttime="20210322 17:46:38.050" endtime="20210322 17:46:38.051"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:46:38.054" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:46:38.053" endtime="20210322 17:46:38.054"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 17:46:38.057" level="INFO">${document_external_key} = 8cc0d911022c4738a564ca33105315c3</msg>
<status status="PASS" starttime="20210322 17:46:38.055" endtime="20210322 17:46:38.057"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 17:46:38.060" level="INFO">${document_external_key} = 8cc0d911022c4738a564ca33105315c3</msg>
<status status="PASS" starttime="20210322 17:46:38.059" endtime="20210322 17:46:38.060"></status>
</kw>
<status status="PASS" starttime="20210322 17:46:37.760" endtime="20210322 17:46:38.060"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 17:46:38.062" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:46:38.062" endtime="20210322 17:46:38.063"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>RG_VERSO</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:46:38.066" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 17:46:38.066" endtime="20210322 17:46:38.067"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 17:46:38.069" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 17:46:38.073" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 17:46:38.068" endtime="20210322 17:46:38.073"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:46:38.075" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/058efae325c344e48cd080b51eaf967c/documents?type=RG_VERSO, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 17:46:38.363" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:46:38.074" endtime="20210322 17:46:38.364"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:46:38.367" level="INFO">{'id': '1167f1bc955c4d4ca978f9ab0b232556', 'document_type': 'rg_verso', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/058efae325c344e48cd080b51eaf967c/documents/1167f1bc955c4d4ca978f9ab0b232556', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/058efae325c344e48cd080b51eaf967c', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/058efae325c344e48cd080b51eaf967c/documents/1167f1bc955c4d4ca978f9ab0b232556/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 17:46:38.365" endtime="20210322 17:46:38.367"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:46:38.370" level="INFO">628bbb4996e0d2bd</msg>
<status status="PASS" starttime="20210322 17:46:38.368" endtime="20210322 17:46:38.371"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:46:38.373" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:46:38.372" endtime="20210322 17:46:38.373"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 17:46:38.376" level="INFO">${document_external_key} = 1167f1bc955c4d4ca978f9ab0b232556</msg>
<status status="PASS" starttime="20210322 17:46:38.374" endtime="20210322 17:46:38.377"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 17:46:38.378" level="INFO">${document_external_key} = 1167f1bc955c4d4ca978f9ab0b232556</msg>
<status status="PASS" starttime="20210322 17:46:38.377" endtime="20210322 17:46:38.378"></status>
</kw>
<status status="PASS" starttime="20210322 17:46:38.064" endtime="20210322 17:46:38.378"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 17:46:38.380" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:46:38.379" endtime="20210322 17:46:38.380"></status>
</kw>
<kw name="solicitar aprovação do holder" library="accreditation_request_approval">
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:46:38.383" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 17:46:38.382" endtime="20210322 17:46:38.383"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/approval</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:46:38.384" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/058efae325c344e48cd080b51eaf967c/approval, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data=None 
json=None</msg>
<msg timestamp="20210322 17:46:38.668" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 17:46:38.384" endtime="20210322 17:46:38.668"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:46:38.669" level="INFO">{'message': 'Approval request accepted successfully. Processing analysis'}</msg>
<status status="PASS" starttime="20210322 17:46:38.669" endtime="20210322 17:46:38.669"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:46:38.670" level="INFO">3eba4e2c20811cf9</msg>
<status status="PASS" starttime="20210322 17:46:38.669" endtime="20210322 17:46:38.670"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:46:38.670" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 17:46:38.670" endtime="20210322 17:46:38.671"></status>
</kw>
<status status="PASS" starttime="20210322 17:46:38.381" endtime="20210322 17:46:38.671"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 17:46:38.672" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:46:38.671" endtime="20210322 17:46:38.672"></status>
</kw>
<kw name="recebendo notificação de aprovação" library="accreditation_risk_notification">
<kw name="Uuid 4" library="FakerLibrary">
<doc>Generates a random UUID4 string.
:param cast_to: Specify what type the UUID should be cast to. Default is `str`
:type cast_to: callable</doc>
<assign>
<var>${assessment_id}</var>
</assign>
<msg timestamp="20210322 17:46:38.673" level="INFO">${assessment_id} = 393cc477-3b4b-4c39-8712-fd2cdeae6323</msg>
<status status="PASS" starttime="20210322 17:46:38.672" endtime="20210322 17:46:38.673"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>year</arg>
</arguments>
<assign>
<var>${year}</var>
</assign>
<msg timestamp="20210322 17:46:38.673" level="INFO">${year} = 2021</msg>
<status status="PASS" starttime="20210322 17:46:38.673" endtime="20210322 17:46:38.674"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>month</arg>
</arguments>
<assign>
<var>${month}</var>
</assign>
<msg timestamp="20210322 17:46:38.674" level="INFO">${month} = 03</msg>
<status status="PASS" starttime="20210322 17:46:38.674" endtime="20210322 17:46:38.674"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>day</arg>
</arguments>
<assign>
<var>${day}</var>
</assign>
<msg timestamp="20210322 17:46:38.675" level="INFO">${day} = 22</msg>
<status status="PASS" starttime="20210322 17:46:38.674" endtime="20210322 17:46:38.675"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:46:38.676" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 17:46:38.675" endtime="20210322 17:46:38.676"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "risk.assessment.result",</arg>
<arg>"resource": "business.holder",</arg>
<arg>"created_at": "${year}-${month}-${day} 15:28:56.747Z",</arg>
<arg>"marketplace_id": "${marketplace_external_key}",</arg>
<arg>"object": {</arg>
<arg>"result": "APPROVED",</arg>
<arg>"holder_id": "${holder_external_key}",</arg>
<arg>"applicant_id": "${application_external_key}",</arg>
<arg>"assessment_id": "${assessment_id}"</arg>
<arg>}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 17:46:38.676" level="INFO">${body} = { "type": "risk.assessment.result", "resource": "business.holder", "created_at": "2021-03-22 15:28:56.747Z", "marketplace_id": "f71a8951368a4cc085cf7875ff44e61c", "object": { "result": "APPROVED", "ho...</msg>
<status status="PASS" starttime="20210322 17:46:38.676" endtime="20210322 17:46:38.676"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/admin/internal_operation/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/registration/approval</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:46:38.677" level="INFO">POST Request using : uri=/admin/internal_operation/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/058efae325c344e48cd080b51eaf967c/registration/approval, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "risk.assessment.result", "resource": "business.holder", "created_at": "2021-03-22 15:28:56.747Z", "marketplace_id": "f71a8951368a4cc085cf7875ff44e61c", "object": { "result": "APPROVED", "holder_id": "058efae325c344e48cd080b51eaf967c", "applicant_id": "bcc25a6751c14b52af1340d40dba78c5", "assessment_id": "393cc477-3b4b-4c39-8712-fd2cdeae6323" } } 
json=None</msg>
<msg timestamp="20210322 17:46:38.873" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 17:46:38.677" endtime="20210322 17:46:38.873"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:46:38.875" level="INFO">{'message': 'Holder approved successfully'}</msg>
<status status="PASS" starttime="20210322 17:46:38.875" endtime="20210322 17:46:38.875"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:46:38.876" level="INFO">2424bd0715866f8a</msg>
<status status="PASS" starttime="20210322 17:46:38.876" endtime="20210322 17:46:38.876"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:46:38.877" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 17:46:38.876" endtime="20210322 17:46:38.877"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 17:46:38.877" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:46:38.877" endtime="20210322 17:46:38.878"></status>
</kw>
<status status="PASS" starttime="20210322 17:46:38.672" endtime="20210322 17:46:38.878"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 17:46:38.878" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:46:38.878" endtime="20210322 17:46:38.878"></status>
</kw>
<kw name="buscar account por holder" library="accounts_get_accounts_by_holder">
<kw name="conectar accounts" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accounts</arg>
<arg>url=${account_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 17:46:38.880" level="INFO">Creating Session using : alias=accounts, url=https://banking-accounts-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 17:46:38.880" endtime="20210322 17:46:38.880"></status>
</kw>
<status status="PASS" starttime="20210322 17:46:38.879" endtime="20210322 17:46:38.880"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accounts</arg>
<arg>/marketplaces/${marketplace_external_key}/holders/${holder_external_key}/accounts</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:46:38.881" level="INFO">GET Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/holders/058efae325c344e48cd080b51eaf967c/accounts, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 17:46:39.517" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 17:46:38.881" endtime="20210322 17:46:39.517"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:46:39.518" level="INFO">{'items': [{'id': 'f1989ca619774170b3a09b52b7c33ea4', 'holder': '058efae325c344e48cd080b51eaf967c', 'balance': '0.00', 'currency': 'BRL', 'routing_number': '001', 'number': '5992936073', 'status': 'active', 'metadata': {}, 'created_at': '2021-03-22T20:46:40.058369', 'updated_at': '2021-03-22T20:46:40.058369', 'primary': True, 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'uri': '/v2/marketplaces/f71a8951368a4cc085cf7875ff44e61c/accounts/f1989ca619774170b3a09b52b7c33ea4', 'resource': 'payment_account'}], 'has_more': False, 'limit': 100, 'total_pages': 1, 'page': 1, 'offset': 0, 'total': '1', 'query_count': '1'}</msg>
<status status="PASS" starttime="20210322 17:46:39.517" endtime="20210322 17:46:39.518"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:46:39.518" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 17:46:39.518" endtime="20210322 17:46:39.518"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["id"]}</arg>
</arguments>
<assign>
<var>${account_external_key}</var>
</assign>
<msg timestamp="20210322 17:46:39.520" level="INFO">${account_external_key} = f1989ca619774170b3a09b52b7c33ea4</msg>
<status status="PASS" starttime="20210322 17:46:39.519" endtime="20210322 17:46:39.520"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_external_key}</arg>
</arguments>
<msg timestamp="20210322 17:46:39.520" level="INFO">${account_external_key} = f1989ca619774170b3a09b52b7c33ea4</msg>
<status status="PASS" starttime="20210322 17:46:39.520" endtime="20210322 17:46:39.520"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["number"]}</arg>
</arguments>
<assign>
<var>${account_number}</var>
</assign>
<msg timestamp="20210322 17:46:39.521" level="INFO">${account_number} = 5992936073</msg>
<status status="PASS" starttime="20210322 17:46:39.520" endtime="20210322 17:46:39.521"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_number}</arg>
</arguments>
<msg timestamp="20210322 17:46:39.521" level="INFO">${account_number} = 5992936073</msg>
<status status="PASS" starttime="20210322 17:46:39.521" endtime="20210322 17:46:39.521"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["routing_number"]}</arg>
</arguments>
<assign>
<var>${account_routing_number}</var>
</assign>
<msg timestamp="20210322 17:46:39.522" level="INFO">${account_routing_number} = 001</msg>
<status status="PASS" starttime="20210322 17:46:39.521" endtime="20210322 17:46:39.522"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_routing_number}</arg>
</arguments>
<msg timestamp="20210322 17:46:39.522" level="INFO">${account_routing_number} = 001</msg>
<status status="PASS" starttime="20210322 17:46:39.522" endtime="20210322 17:46:39.522"></status>
</kw>
<status status="PASS" starttime="20210322 17:46:38.879" endtime="20210322 17:46:39.522"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 17:46:39.523" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:46:39.522" endtime="20210322 17:46:39.523"></status>
</kw>
<status status="PASS" starttime="20210322 17:46:36.309" endtime="20210322 17:46:39.523"></status>
</kw>
<kw name="criar chave pix" library="pix_dict_create_entry">
<arguments>
<arg>type=phone</arg>
<arg>value=${phone_pix}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 17:46:39.524" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 17:46:39.524" endtime="20210322 17:46:39.524"></status>
</kw>
<status status="PASS" starttime="20210322 17:46:39.524" endtime="20210322 17:46:39.524"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${type}</arg>
</arguments>
<msg timestamp="20210322 17:46:39.525" level="INFO">${type} = phone</msg>
<status status="PASS" starttime="20210322 17:46:39.525" endtime="20210322 17:46:39.525"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210322 17:46:39.525" level="INFO">${value} = +5521947149040</msg>
<status status="PASS" starttime="20210322 17:46:39.525" endtime="20210322 17:46:39.525"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:46:39.526" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 17:46:39.525" endtime="20210322 17:46:39.526"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "${type}",</arg>
<arg>"value": "${value}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 17:46:39.526" level="INFO">${body} = { "type": "phone", "value": "+5521947149040" }</msg>
<status status="PASS" starttime="20210322 17:46:39.526" endtime="20210322 17:46:39.526"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:46:39.527" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/058efae325c344e48cd080b51eaf967c/accounts/f1989ca619774170b3a09b52b7c33ea4/entries, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "phone", "value": "+5521947149040" } 
json=None</msg>
<msg timestamp="20210322 17:46:40.178" level="INFO">${response} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20210322 17:46:39.526" endtime="20210322 17:46:40.178"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:46:40.180" level="INFO">{'id': '05f9ffb49a304b0ba54edd4b1a91fe2e', 'status': 'waiting_ownership_verification', 'created_at': '2021-03-22T05:46:41.383', 'updated_at': '2021-03-22T05:46:41.383', 'key': {'value': '+5521947149040', 'type': 'phone'}, 'account': {'id': 'f1989ca619774170b3a09b52b7c33ea4', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': '058efae325c344e48cd080b51eaf967c', 'owner': {'name': 'Holder de teste', 'national_registration': '39651280433', 'type': 'individual'}, 'routing_number': '001', 'number': '5992936073', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}, 'resource': 'pix.entry'}</msg>
<status status="PASS" starttime="20210322 17:46:40.179" endtime="20210322 17:46:40.180"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:46:40.181" level="INFO">6b3b6e8c8a78096a</msg>
<status status="PASS" starttime="20210322 17:46:40.181" endtime="20210322 17:46:40.181"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 17:46:40.182" level="INFO">202</msg>
<status status="PASS" starttime="20210322 17:46:40.181" endtime="20210322 17:46:40.182"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:46:40.184" level="INFO">${response} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20210322 17:46:40.182" endtime="20210322 17:46:40.184"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${entry_external_key}</var>
</assign>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:46:40.185" endtime="20210322 17:46:40.186"></status>
</kw>
<msg timestamp="20210322 17:46:40.186" level="INFO">${entry_external_key} = 05f9ffb49a304b0ba54edd4b1a91fe2e</msg>
<status status="PASS" starttime="20210322 17:46:40.184" endtime="20210322 17:46:40.186"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${entry_external_key}</arg>
</arguments>
<msg timestamp="20210322 17:46:40.187" level="INFO">${entry_external_key} = 05f9ffb49a304b0ba54edd4b1a91fe2e</msg>
<status status="PASS" starttime="20210322 17:46:40.186" endtime="20210322 17:46:40.187"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["key"]["value"]}</arg>
</arguments>
<assign>
<var>${entry_key_value}</var>
</assign>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["key"]["value"]}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:46:40.189" endtime="20210322 17:46:40.190"></status>
</kw>
<msg timestamp="20210322 17:46:40.190" level="INFO">${entry_key_value} = +5521947149040</msg>
<status status="PASS" starttime="20210322 17:46:40.188" endtime="20210322 17:46:40.190"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${entry_key_value}</arg>
</arguments>
<msg timestamp="20210322 17:46:40.191" level="INFO">${entry_key_value} = +5521947149040</msg>
<status status="PASS" starttime="20210322 17:46:40.191" endtime="20210322 17:46:40.191"></status>
</kw>
<status status="PASS" starttime="20210322 17:46:39.523" endtime="20210322 17:46:40.191"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${holder_external_key}</arg>
</arguments>
<assign>
<var>${holder_claimer}</var>
</assign>
<msg timestamp="20210322 17:46:40.192" level="INFO">${holder_claimer} = 058efae325c344e48cd080b51eaf967c</msg>
<status status="PASS" starttime="20210322 17:46:40.192" endtime="20210322 17:46:40.192"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${holder_type}</arg>
</arguments>
<assign>
<var>${holder_type_claimer}</var>
</assign>
<msg timestamp="20210322 17:46:40.193" level="INFO">${holder_type_claimer} = individual</msg>
<status status="PASS" starttime="20210322 17:46:40.192" endtime="20210322 17:46:40.193"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${holder_name}</arg>
</arguments>
<assign>
<var>${holder_name_claimer}</var>
</assign>
<msg timestamp="20210322 17:46:40.193" level="INFO">${holder_name_claimer} = Holder de teste</msg>
<status status="PASS" starttime="20210322 17:46:40.193" endtime="20210322 17:46:40.194"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${national_registration}</arg>
</arguments>
<assign>
<var>${national_registration_claimer}</var>
</assign>
<msg timestamp="20210322 17:46:40.194" level="INFO">${national_registration_claimer} = 39651280433</msg>
<status status="PASS" starttime="20210322 17:46:40.194" endtime="20210322 17:46:40.194"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${account_external_key}</arg>
</arguments>
<assign>
<var>${account_claimer}</var>
</assign>
<msg timestamp="20210322 17:46:40.195" level="INFO">${account_claimer} = f1989ca619774170b3a09b52b7c33ea4</msg>
<status status="PASS" starttime="20210322 17:46:40.195" endtime="20210322 17:46:40.195"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${account_number}</arg>
</arguments>
<assign>
<var>${account_number_claimer}</var>
</assign>
<msg timestamp="20210322 17:46:40.196" level="INFO">${account_number_claimer} = 5992936073</msg>
<status status="PASS" starttime="20210322 17:46:40.195" endtime="20210322 17:46:40.196"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${account_routing_number}</arg>
</arguments>
<assign>
<var>${account_routing_number_claimer}</var>
</assign>
<msg timestamp="20210322 17:46:40.197" level="INFO">${account_routing_number_claimer} = 001</msg>
<status status="PASS" starttime="20210322 17:46:40.196" endtime="20210322 17:46:40.197"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${entry_external_key}</arg>
</arguments>
<assign>
<var>${entry_claimer}</var>
</assign>
<msg timestamp="20210322 17:46:40.197" level="INFO">${entry_claimer} = 05f9ffb49a304b0ba54edd4b1a91fe2e</msg>
<status status="PASS" starttime="20210322 17:46:40.197" endtime="20210322 17:46:40.198"></status>
</kw>
<kw name="buscar verification code" library="pix_dict_verification_code">
<arguments>
<arg>holder_external_key=${holder_claimer}</arg>
<arg>account_external_key=${account_claimer}</arg>
<arg>entry_external_key=${entry_claimer}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 17:46:40.200" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 17:46:40.199" endtime="20210322 17:46:40.200"></status>
</kw>
<status status="PASS" starttime="20210322 17:46:40.199" endtime="20210322 17:46:40.200"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/admin/internal_operation/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries/${entry_external_key}/code</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:46:40.201" level="INFO">GET Request using : uri=/admin/internal_operation/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/058efae325c344e48cd080b51eaf967c/accounts/f1989ca619774170b3a09b52b7c33ea4/entries/05f9ffb49a304b0ba54edd4b1a91fe2e/code, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 17:46:40.845" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 17:46:40.200" endtime="20210322 17:46:40.845"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:46:40.846" level="INFO">{'code': '5657'}</msg>
<status status="PASS" starttime="20210322 17:46:40.846" endtime="20210322 17:46:40.847"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:46:40.848" level="INFO">caf05669a6bb8941</msg>
<status status="PASS" starttime="20210322 17:46:40.847" endtime="20210322 17:46:40.848"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 17:46:40.850" level="INFO">200</msg>
<status status="PASS" starttime="20210322 17:46:40.849" endtime="20210322 17:46:40.850"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:46:40.851" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 17:46:40.851" endtime="20210322 17:46:40.851"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["code"]}</arg>
</arguments>
<assign>
<var>${verification_code}</var>
</assign>
<msg timestamp="20210322 17:46:40.853" level="INFO">${verification_code} = 5657</msg>
<status status="PASS" starttime="20210322 17:46:40.852" endtime="20210322 17:46:40.854"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${verification_code}</arg>
</arguments>
<msg timestamp="20210322 17:46:40.855" level="INFO">${verification_code} = 5657</msg>
<status status="PASS" starttime="20210322 17:46:40.854" endtime="20210322 17:46:40.855"></status>
</kw>
<status status="PASS" starttime="20210322 17:46:40.198" endtime="20210322 17:46:40.855"></status>
</kw>
<kw name="confirmar propriedade da chave pix" library="pix_dict_confirm_propriety">
<arguments>
<arg>verification_code=${verification_code}</arg>
<arg>holder_external_key=${holder_claimer}</arg>
<arg>account_external_key=${account_claimer}</arg>
<arg>entry_external_key=${entry_claimer}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 17:46:40.859" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 17:46:40.859" endtime="20210322 17:46:40.860"></status>
</kw>
<status status="PASS" starttime="20210322 17:46:40.857" endtime="20210322 17:46:40.860"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:46:40.862" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 17:46:40.861" endtime="20210322 17:46:40.862"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"code": "${verification_code}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 17:46:40.863" level="INFO">${body} = { "code": "5657" }</msg>
<status status="PASS" starttime="20210322 17:46:40.862" endtime="20210322 17:46:40.863"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries/${entry_external_key}/ownership</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:46:40.864" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/058efae325c344e48cd080b51eaf967c/accounts/f1989ca619774170b3a09b52b7c33ea4/entries/05f9ffb49a304b0ba54edd4b1a91fe2e/ownership, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "code": "5657" } 
json=None</msg>
<msg timestamp="20210322 17:46:42.315" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:46:40.863" endtime="20210322 17:46:42.315"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:46:42.315" level="INFO">{'id': '05f9ffb49a304b0ba54edd4b1a91fe2e', 'status': 'waiting_ownership_claiming', 'created_at': '2021-03-22T05:46:41.383', 'updated_at': '2021-03-22T05:46:43.531', 'key': {'value': '+5521947149040', 'type': 'phone'}, 'account': {'id': 'f1989ca619774170b3a09b52b7c33ea4', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': '058efae325c344e48cd080b51eaf967c', 'owner': {'name': 'Holder de teste', 'national_registration': '39651280433', 'type': 'individual'}, 'routing_number': '001', 'number': '5992936073', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}, 'resource': 'pix.entry'}</msg>
<status status="PASS" starttime="20210322 17:46:42.315" endtime="20210322 17:46:42.315"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:46:42.316" level="INFO">c154a4d72d9ab1c6</msg>
<status status="PASS" starttime="20210322 17:46:42.316" endtime="20210322 17:46:42.316"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 17:46:42.316" level="INFO">201</msg>
<status status="PASS" starttime="20210322 17:46:42.316" endtime="20210322 17:46:42.316"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:46:42.317" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:46:42.317" endtime="20210322 17:46:42.317"></status>
</kw>
<status status="PASS" starttime="20210322 17:46:40.856" endtime="20210322 17:46:42.317"></status>
</kw>
<kw name="validar chave pix" library="asserts">
<arguments>
<arg>key_status=waiting_ownership_claiming</arg>
<arg>key_type=${type}</arg>
<arg>key_value=${value}</arg>
<arg>account_external_key=${account_claimer}</arg>
<arg>marketplace_external_key=${marketplace_external_key}</arg>
<arg>holder_external_key=${holder_claimer}</arg>
<arg>account_number=${account_number_claimer}</arg>
<arg>account_routing_number=${account_routing_number_claimer}</arg>
<arg>account_type=CACC</arg>
<arg>owner_key_name=${holder_name_claimer}</arg>
<arg>national_registration=${national_registration_claimer}</arg>
<arg>holder_type=${holder_type}</arg>
<arg>psp_code=19468242</arg>
<arg>psp_name=Zoop Tecnologia e Meios de Pagamento S.A.</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar status da chave</arg>
</arguments>
<msg timestamp="20210322 17:46:42.318" level="INFO">Validar status da chave</msg>
<status status="PASS" starttime="20210322 17:46:42.318" endtime="20210322 17:46:42.318"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["status"]}</arg>
<arg>${key_status}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:46:42.318" endtime="20210322 17:46:42.319"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando Tipo da chave PIX</arg>
</arguments>
<msg timestamp="20210322 17:46:42.319" level="INFO">Validando Tipo da chave PIX</msg>
<status status="PASS" starttime="20210322 17:46:42.319" endtime="20210322 17:46:42.319"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["key"]["type"]}</arg>
<arg>${key_type}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:46:42.320" endtime="20210322 17:46:42.320"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando Valor da chave PIX</arg>
</arguments>
<msg timestamp="20210322 17:46:42.320" level="INFO">Validando Valor da chave PIX</msg>
<status status="PASS" starttime="20210322 17:46:42.320" endtime="20210322 17:46:42.320"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${type}' == 'evp'</arg>
<arg>Should Not Be Empty</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' != 'evp'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${key_value}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${key_value}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:46:42.321" endtime="20210322 17:46:42.322"></status>
</kw>
<status status="PASS" starttime="20210322 17:46:42.321" endtime="20210322 17:46:42.322"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando dados da conta</arg>
</arguments>
<msg timestamp="20210322 17:46:42.322" level="INFO">Validando dados da conta</msg>
<status status="PASS" starttime="20210322 17:46:42.322" endtime="20210322 17:46:42.322"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["id"]}</arg>
<arg>${account_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:46:42.322" endtime="20210322 17:46:42.323"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["marketplace"]}</arg>
<arg>${marketplace_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:46:42.323" endtime="20210322 17:46:42.323"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["holder"]}</arg>
<arg>${holder_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:46:42.323" endtime="20210322 17:46:42.324"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["number"]}</arg>
<arg>${account_number}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:46:42.324" endtime="20210322 17:46:42.324"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["routing_number"]}</arg>
<arg>${account_routing_number}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:46:42.324" endtime="20210322 17:46:42.325"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["type"]}</arg>
<arg>${account_type}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:46:42.325" endtime="20210322 17:46:42.326"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar Proprietário da Account Owner</arg>
</arguments>
<msg timestamp="20210322 17:46:42.326" level="INFO">Validar Proprietário da Account Owner</msg>
<status status="PASS" starttime="20210322 17:46:42.326" endtime="20210322 17:46:42.326"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["account"]["owner"]["name"]}</arg>
<arg>${owner_key_name}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:46:42.326" endtime="20210322 17:46:42.327"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar national_registration da Account Owner</arg>
</arguments>
<msg timestamp="20210322 17:46:42.327" level="INFO">Validar national_registration da Account Owner</msg>
<status status="PASS" starttime="20210322 17:46:42.327" endtime="20210322 17:46:42.327"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["account"]["owner"]["national_registration"]}</arg>
<arg>${national_registration}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:46:42.328" endtime="20210322 17:46:42.328"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar Holder Type do Account Owner</arg>
</arguments>
<msg timestamp="20210322 17:46:42.328" level="INFO">Validar Holder Type do Account Owner</msg>
<status status="PASS" starttime="20210322 17:46:42.328" endtime="20210322 17:46:42.328"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["account"]["owner"]["type"]}</arg>
<arg>${holder_type}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:46:42.329" endtime="20210322 17:46:42.329"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar PSP</arg>
</arguments>
<msg timestamp="20210322 17:46:42.329" level="INFO">Validar PSP</msg>
<status status="PASS" starttime="20210322 17:46:42.329" endtime="20210322 17:46:42.329"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["psp"]["code"]}</arg>
<arg>${psp_code}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:46:42.329" endtime="20210322 17:46:42.330"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["psp"]["name"]}</arg>
<arg>${psp_name}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:46:42.330" endtime="20210322 17:46:42.330"></status>
</kw>
<status status="PASS" starttime="20210322 17:46:42.317" endtime="20210322 17:46:42.330"></status>
</kw>
<kw name="criar reivindicação de posse" library="pix_dict_create_claims">
<arguments>
<arg>holder_external_key=${holder_claimer}</arg>
<arg>account_external_key=${account_claimer}</arg>
<arg>entry_external_key=${entry_claimer}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 17:46:42.332" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 17:46:42.332" endtime="20210322 17:46:42.332"></status>
</kw>
<status status="PASS" starttime="20210322 17:46:42.331" endtime="20210322 17:46:42.332"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries/${entry_external_key}/claims</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:46:42.333" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/058efae325c344e48cd080b51eaf967c/accounts/f1989ca619774170b3a09b52b7c33ea4/entries/05f9ffb49a304b0ba54edd4b1a91fe2e/claims, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 17:46:44.062" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:46:42.333" endtime="20210322 17:46:44.063"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:46:44.066" level="INFO">{'id': '5a3b5673421843b2b31edec752863eeb', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'created_at': '2021-03-22T05:46:45.264', 'updated_at': '2021-03-22T05:46:45.264', 'type': 'OWNERSHIP', 'status': 'open', 'key': {'value': '+5521947149040', 'type': 'phone'}, 'claimer': {'name': 'Holder de teste', 'national_registration': '39651280433', 'type': 'individual', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': '058efae325c344e48cd080b51eaf967c', 'account': {'digital_account_id': 'f1989ca619774170b3a09b52b7c33ea4', 'routing_number': '001', 'number': '5992936073', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}}, 'donor': {'name': 'Holder de teste', 'national_registration': '87021593414', 'type': 'individual', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': '1d3705ef5f804ca38eb80f1359b6d9d3', 'account': {'digital_account_id': 'e7968ce6c95f4a3bbb1f0c8da79422ac', 'routing_number': '001', 'number': '1104639329', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}}, 'completion_period_end': '2021-04-05T08:46:44.000', 'resolution_period_end': '2021-03-29T08:46:44.000', 'resource': 'pix.claim'}</msg>
<status status="PASS" starttime="20210322 17:46:44.064" endtime="20210322 17:46:44.066"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:46:44.069" level="INFO">a4ae97e778e92f20</msg>
<status status="PASS" starttime="20210322 17:46:44.067" endtime="20210322 17:46:44.069"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 17:46:44.072" level="INFO">201</msg>
<status status="PASS" starttime="20210322 17:46:44.071" endtime="20210322 17:46:44.073"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:46:44.074" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:46:44.073" endtime="20210322 17:46:44.075"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${claim_external_key}</var>
</assign>
<msg timestamp="20210322 17:46:44.077" level="INFO">${claim_external_key} = 5a3b5673421843b2b31edec752863eeb</msg>
<status status="PASS" starttime="20210322 17:46:44.076" endtime="20210322 17:46:44.077"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${claim_external_key}</arg>
</arguments>
<msg timestamp="20210322 17:46:44.078" level="INFO">${claim_external_key} = 5a3b5673421843b2b31edec752863eeb</msg>
<status status="PASS" starttime="20210322 17:46:44.078" endtime="20210322 17:46:44.079"></status>
</kw>
<status status="PASS" starttime="20210322 17:46:42.331" endtime="20210322 17:46:44.079"></status>
</kw>
<kw name="buscar reivindicação de posse" library="pix_dict_get_claims">
<arguments>
<arg>holder_external_key=${holder_claimer}</arg>
<arg>account_external_key=${account_claimer}</arg>
<arg>claim_external_key=${claim_external_key}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 17:46:44.082" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 17:46:44.081" endtime="20210322 17:46:44.083"></status>
</kw>
<status status="PASS" starttime="20210322 17:46:44.080" endtime="20210322 17:46:44.083"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/claims/${claim_external_key}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:46:44.084" level="INFO">GET Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/058efae325c344e48cd080b51eaf967c/accounts/f1989ca619774170b3a09b52b7c33ea4/claims/5a3b5673421843b2b31edec752863eeb, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 17:46:44.756" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 17:46:44.083" endtime="20210322 17:46:44.756"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:46:44.759" level="INFO">{'id': '5a3b5673421843b2b31edec752863eeb', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'created_at': '2021-03-22T05:46:45.264', 'updated_at': '2021-03-22T05:46:45.264', 'type': 'OWNERSHIP', 'status': 'open', 'key': {'value': '+5521947149040', 'type': 'phone'}, 'claimer': {'name': 'Holder de teste', 'national_registration': '39651280433', 'type': 'individual', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': '058efae325c344e48cd080b51eaf967c', 'account': {'digital_account_id': 'f1989ca619774170b3a09b52b7c33ea4', 'routing_number': '001', 'number': '5992936073', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}}, 'donor': {'name': 'Holder de teste', 'national_registration': '87021593414', 'type': 'individual', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': '1d3705ef5f804ca38eb80f1359b6d9d3', 'account': {'digital_account_id': 'e7968ce6c95f4a3bbb1f0c8da79422ac', 'routing_number': '001', 'number': '1104639329', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}}, 'completion_period_end': '2021-04-05T08:46:44.000', 'resolution_period_end': '2021-03-29T08:46:44.000', 'resource': 'pix.claim'}</msg>
<status status="PASS" starttime="20210322 17:46:44.757" endtime="20210322 17:46:44.760"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:46:44.762" level="INFO">2d595ffe3761ce73</msg>
<status status="PASS" starttime="20210322 17:46:44.761" endtime="20210322 17:46:44.763"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 17:46:44.765" level="INFO">200</msg>
<status status="PASS" starttime="20210322 17:46:44.764" endtime="20210322 17:46:44.765"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:46:44.767" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 17:46:44.766" endtime="20210322 17:46:44.767"></status>
</kw>
<status status="PASS" starttime="20210322 17:46:44.079" endtime="20210322 17:46:44.768"></status>
</kw>
<kw name="validar reivindicação" library="asserts">
<arguments>
<arg>marketplace_external_key=${marketplace_external_key}</arg>
<arg>claim_type=OWNERSHIP</arg>
<arg>claim_status=open</arg>
<arg>key_value=${value}</arg>
<arg>key_type=${type}</arg>
<arg>claimer_name=${holder_name_claimer}</arg>
<arg>claimer_national_registration=${national_registration_claimer}</arg>
<arg>claimer_type=${holder_type_claimer}</arg>
<arg>claimer_marketplace=${marketplace_external_key}</arg>
<arg>claimer_holder_id=${holder_claimer}</arg>
<arg>claimer_account_id=${account_claimer}</arg>
<arg>claimer_routing_number=${account_routing_number_claimer}</arg>
<arg>claimer_account_number=${account_number_claimer}</arg>
<arg>claimer_account_type=CACC</arg>
<arg>claimer_psp_code=${psp_code}</arg>
<arg>claimer_psp_name=${psp_name}</arg>
<arg>donor_name=${holder_name_owner}</arg>
<arg>donor_national_registration=${national_registration_owner}</arg>
<arg>donor_type=${holder_type_owner}</arg>
<arg>donor_marketplace=${marketplace_external_key}</arg>
<arg>donor_holder_id=${holder_owner}</arg>
<arg>donor_account_id=${account_owner}</arg>
<arg>donor_routing_number=${account_routing_number_owner}</arg>
<arg>donor_account_number=${account_number_owner}</arg>
<arg>donor_account_type=CACC</arg>
<arg>donor_psp_code=${psp_code}</arg>
<arg>donor_psp_name=${psp_name}</arg>
<arg>claim_resource=pix.claim</arg>
</arguments>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<arguments>
<arg>result_format=datetime</arg>
</arguments>
<assign>
<var>${date}</var>
</assign>
<msg timestamp="20210322 17:46:44.776" level="INFO">${date} = 2021-03-22 17:46:44.775759</msg>
<status status="PASS" starttime="20210322 17:46:44.775" endtime="20210322 17:46:44.776"></status>
</kw>
<kw name="Convert Date" library="DateTime">
<doc>Converts between supported `date formats`.</doc>
<arguments>
<arg>${date}</arg>
<arg>exclude_millis=yes</arg>
<arg>result_format=%Y-%m-%d</arg>
<arg>date_format=%d-%m-%Y</arg>
</arguments>
<assign>
<var>${date}</var>
</assign>
<msg timestamp="20210322 17:46:44.777" level="INFO">${date} = 2021-03-22</msg>
<status status="PASS" starttime="20210322 17:46:44.777" endtime="20210322 17:46:44.778"></status>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${response.json()["id"]}</arg>
</arguments>
<msg timestamp="20210322 17:46:44.779" level="INFO">Length is 32</msg>
<status status="PASS" starttime="20210322 17:46:44.778" endtime="20210322 17:46:44.780"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["marketplace"]}</arg>
<arg>${marketplace_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:46:44.780" endtime="20210322 17:46:44.781"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response.json()["created_at"]}</arg>
<arg>${date}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:46:44.782" endtime="20210322 17:46:44.783"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response.json()["updated_at"]}</arg>
<arg>${date}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:46:44.783" endtime="20210322 17:46:44.784"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["type"]}</arg>
<arg>${claim_type}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:46:44.785" endtime="20210322 17:46:44.786"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["status"]}</arg>
<arg>${claim_status}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:46:44.786" endtime="20210322 17:46:44.787"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${key_value}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:46:44.788" endtime="20210322 17:46:44.789"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["key"]["type"]}</arg>
<arg>${key_type}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:46:44.789" endtime="20210322 17:46:44.790"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["claimer"]["name"]}</arg>
<arg>${claimer_name}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:46:44.790" endtime="20210322 17:46:44.791"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["claimer"]["national_registration"]}</arg>
<arg>${claimer_national_registration}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:46:44.791" endtime="20210322 17:46:44.792"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["claimer"]["type"]}</arg>
<arg>${claimer_type}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:46:44.793" endtime="20210322 17:46:44.794"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["claimer"]["marketplace"]}</arg>
<arg>${claimer_marketplace}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:46:44.794" endtime="20210322 17:46:44.795"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["claimer"]["holder"]}</arg>
<arg>${claimer_holder_id}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:46:44.795" endtime="20210322 17:46:44.796"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["claimer"]["account"]["digital_account_id"]}</arg>
<arg>${claimer_account_id}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:46:44.797" endtime="20210322 17:46:44.797"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["claimer"]["account"]["routing_number"]}</arg>
<arg>${claimer_routing_number}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:46:44.798" endtime="20210322 17:46:44.799"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["claimer"]["account"]["number"]}</arg>
<arg>${claimer_account_number}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:46:44.799" endtime="20210322 17:46:44.800"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["claimer"]["account"]["type"]}</arg>
<arg>${claimer_account_type}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:46:44.800" endtime="20210322 17:46:44.801"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["claimer"]["psp"]["code"]}</arg>
<arg>${claimer_psp_code}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:46:44.802" endtime="20210322 17:46:44.803"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["claimer"]["psp"]["name"]}</arg>
<arg>${claimer_psp_name}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:46:44.803" endtime="20210322 17:46:44.804"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["donor"]["name"]}</arg>
<arg>${donor_name}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:46:44.804" endtime="20210322 17:46:44.805"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["donor"]["national_registration"]}</arg>
<arg>${donor_national_registration}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:46:44.806" endtime="20210322 17:46:44.806"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["donor"]["type"]}</arg>
<arg>${donor_type}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:46:44.807" endtime="20210322 17:46:44.808"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["donor"]["marketplace"]}</arg>
<arg>${donor_marketplace}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:46:44.808" endtime="20210322 17:46:44.809"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["donor"]["holder"]}</arg>
<arg>${donor_holder_id}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:46:44.809" endtime="20210322 17:46:44.810"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["donor"]["account"]["digital_account_id"]}</arg>
<arg>${donor_account_id}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:46:44.811" endtime="20210322 17:46:44.811"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["donor"]["account"]["routing_number"]}</arg>
<arg>${donor_routing_number}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:46:44.812" endtime="20210322 17:46:44.813"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["donor"]["account"]["number"]}</arg>
<arg>${donor_account_number}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:46:44.813" endtime="20210322 17:46:44.814"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["donor"]["account"]["type"]}</arg>
<arg>${donor_account_type}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:46:44.815" endtime="20210322 17:46:44.816"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["donor"]["psp"]["code"]}</arg>
<arg>${donor_psp_code}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:46:44.816" endtime="20210322 17:46:44.817"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["donor"]["psp"]["name"]}</arg>
<arg>${donor_psp_name}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:46:44.817" endtime="20210322 17:46:44.818"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["resource"]}</arg>
<arg>${claim_resource}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:46:44.819" endtime="20210322 17:46:44.820"></status>
</kw>
<status status="PASS" starttime="20210322 17:46:44.769" endtime="20210322 17:46:44.820"></status>
</kw>
<kw name="receber notificação de reivindicação" library="pix_dict_receive_claim_notification">
<arguments>
<arg>key_pix=${value}</arg>
<arg>account_number=${account_number_owner}</arg>
<arg>claimer_tax_id=${national_registration_owner}</arg>
<arg>claimer_name=${holder_name_owner}</arg>
<arg>claim_external_key=${claim_external_key}</arg>
<arg>claim_notification_status=WAITING_RESOLUTION</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 17:46:44.823" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 17:46:44.823" endtime="20210322 17:46:44.824"></status>
</kw>
<status status="PASS" starttime="20210322 17:46:44.822" endtime="20210322 17:46:44.824"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:46:44.825" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 17:46:44.825" endtime="20210322 17:46:44.825"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"data": {</arg>
<arg>"claim": {</arg>
<arg>"type": "OWNERSHIP",</arg>
<arg>"key": "${key_pix}",</arg>
<arg>"key_type": "PHONE",</arg>
<arg>"claimer_account": {</arg>
<arg>"participant": "19468242",</arg>
<arg>"branch": "0001",</arg>
<arg>"account_number": "${account_number}",</arg>
<arg>"account_type": "CACC"</arg>
<arg>},</arg>
<arg>"claimer": {</arg>
<arg>"type": "NATURAL_PERSON",</arg>
<arg>"tax_id_number": "${claimer_tax_id}",</arg>
<arg>"name": "${claimer_name}"</arg>
<arg>},</arg>
<arg>"donor_participant": "19468242",</arg>
<arg>"id": "${claim_external_key}",</arg>
<arg>"status": "${claim_notification_status}",</arg>
<arg>"resolution_period_end": "2020-10-18T10:00:00.000Z",</arg>
<arg>"completion_period_end": "2020-10-25T10:00:00.000Z",</arg>
<arg>"last_modified": "2020-10-17T10:00:00.000Z"</arg>
<arg>}</arg>
<arg>}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 17:46:44.827" level="INFO">${body} = { "data": { "claim": { "type": "OWNERSHIP", "key": "+5521947149040", "key_type": "PHONE", "claimer_account": { "participant": "19468242", "branch": "0001", "account_number": "1104639329", "account_typ...</msg>
<status status="PASS" starttime="20210322 17:46:44.826" endtime="20210322 17:46:44.827"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/banking/internal/dict/claims</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:46:44.828" level="INFO">POST Request using : uri=/banking/internal/dict/claims, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "data": { "claim": { "type": "OWNERSHIP", "key": "+5521947149040", "key_type": "PHONE", "claimer_account": { "participant": "19468242", "branch": "0001", "account_number": "1104639329", "account_type": "CACC" }, "claimer": { "type": "NATURAL_PERSON", "tax_id_number": "87021593414", "name": "Holder de teste" }, "donor_participant": "19468242", "id": "5a3b5673421843b2b31edec752863eeb", "status": "WAITING_RESOLUTION", "resolution_period_end": "2020-10-18T10:00:00.000Z", "completion_period_end": "2020-10-25T10:00:00.000Z", "last_modified": "2020-10-17T10:00:00.000Z" } } } 
json=None</msg>
<msg timestamp="20210322 17:46:45.488" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 17:46:44.827" endtime="20210322 17:46:45.488"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 17:46:45.489" level="INFO">200</msg>
<status status="PASS" starttime="20210322 17:46:45.489" endtime="20210322 17:46:45.489"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:46:45.489" level="INFO">578b07f451185d91</msg>
<status status="PASS" starttime="20210322 17:46:45.489" endtime="20210322 17:46:45.490"></status>
</kw>
<status status="PASS" starttime="20210322 17:46:44.820" endtime="20210322 17:46:45.490"></status>
</kw>
<kw name="buscar reivindicação de posse" library="pix_dict_get_claims">
<arguments>
<arg>holder_external_key=${holder_claimer}</arg>
<arg>account_external_key=${account_claimer}</arg>
<arg>claim_external_key=${claim_external_key}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 17:46:45.491" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 17:46:45.491" endtime="20210322 17:46:45.491"></status>
</kw>
<status status="PASS" starttime="20210322 17:46:45.490" endtime="20210322 17:46:45.491"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/claims/${claim_external_key}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:46:45.492" level="INFO">GET Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/058efae325c344e48cd080b51eaf967c/accounts/f1989ca619774170b3a09b52b7c33ea4/claims/5a3b5673421843b2b31edec752863eeb, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 17:46:46.132" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 17:46:45.491" endtime="20210322 17:46:46.133"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:46:46.136" level="INFO">{'id': '5a3b5673421843b2b31edec752863eeb', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'created_at': '2021-03-22T05:46:45.264', 'updated_at': '2021-03-22T05:46:46.704', 'type': 'OWNERSHIP', 'status': 'waiting_resolution', 'key': {'value': '+5521947149040', 'type': 'phone'}, 'claimer': {'name': 'Holder de teste', 'national_registration': '39651280433', 'type': 'individual', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': '058efae325c344e48cd080b51eaf967c', 'account': {'digital_account_id': 'f1989ca619774170b3a09b52b7c33ea4', 'routing_number': '001', 'number': '5992936073', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}}, 'donor': {'name': 'Holder de teste', 'national_registration': '87021593414', 'type': 'individual', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': '1d3705ef5f804ca38eb80f1359b6d9d3', 'account': {'digital_account_id': 'e7968ce6c95f4a3bbb1f0c8da79422ac', 'routing_number': '001', 'number': '1104639329', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}}, 'completion_period_end': '2021-04-05T08:46:44.000', 'resolution_period_end': '2021-03-29T08:46:44.000', 'resource': 'pix.claim'}</msg>
<status status="PASS" starttime="20210322 17:46:46.134" endtime="20210322 17:46:46.136"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:46:46.138" level="INFO">5947cff56c2f82f5</msg>
<status status="PASS" starttime="20210322 17:46:46.137" endtime="20210322 17:46:46.139"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 17:46:46.139" level="INFO">200</msg>
<status status="PASS" starttime="20210322 17:46:46.139" endtime="20210322 17:46:46.140"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:46:46.141" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 17:46:46.140" endtime="20210322 17:46:46.142"></status>
</kw>
<status status="PASS" starttime="20210322 17:46:45.490" endtime="20210322 17:46:46.142"></status>
</kw>
<kw name="validar reivindicação" library="asserts">
<arguments>
<arg>marketplace_external_key=${marketplace_external_key}</arg>
<arg>claim_type=OWNERSHIP</arg>
<arg>claim_status=waiting_resolution</arg>
<arg>key_value=${value}</arg>
<arg>key_type=${type}</arg>
<arg>claimer_name=${holder_name_claimer}</arg>
<arg>claimer_national_registration=${national_registration_claimer}</arg>
<arg>claimer_type=${holder_type_claimer}</arg>
<arg>claimer_marketplace=${marketplace_external_key}</arg>
<arg>claimer_holder_id=${holder_claimer}</arg>
<arg>claimer_account_id=${account_claimer}</arg>
<arg>claimer_routing_number=${account_routing_number_claimer}</arg>
<arg>claimer_account_number=${account_number_claimer}</arg>
<arg>claimer_account_type=CACC</arg>
<arg>claimer_psp_code=${psp_code}</arg>
<arg>claimer_psp_name=${psp_name}</arg>
<arg>donor_name=${holder_name_owner}</arg>
<arg>donor_national_registration=${national_registration_owner}</arg>
<arg>donor_type=${holder_type_owner}</arg>
<arg>donor_marketplace=${marketplace_external_key}</arg>
<arg>donor_holder_id=${holder_owner}</arg>
<arg>donor_account_id=${account_owner}</arg>
<arg>donor_routing_number=${account_routing_number_owner}</arg>
<arg>donor_account_number=${account_number_owner}</arg>
<arg>donor_account_type=CACC</arg>
<arg>donor_psp_code=${psp_code}</arg>
<arg>donor_psp_name=${psp_name}</arg>
<arg>claim_resource=pix.claim</arg>
</arguments>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<arguments>
<arg>result_format=datetime</arg>
</arguments>
<assign>
<var>${date}</var>
</assign>
<msg timestamp="20210322 17:46:46.146" level="INFO">${date} = 2021-03-22 17:46:46.145411</msg>
<status status="PASS" starttime="20210322 17:46:46.145" endtime="20210322 17:46:46.146"></status>
</kw>
<kw name="Convert Date" library="DateTime">
<doc>Converts between supported `date formats`.</doc>
<arguments>
<arg>${date}</arg>
<arg>exclude_millis=yes</arg>
<arg>result_format=%Y-%m-%d</arg>
<arg>date_format=%d-%m-%Y</arg>
</arguments>
<assign>
<var>${date}</var>
</assign>
<msg timestamp="20210322 17:46:46.147" level="INFO">${date} = 2021-03-22</msg>
<status status="PASS" starttime="20210322 17:46:46.146" endtime="20210322 17:46:46.147"></status>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${response.json()["id"]}</arg>
</arguments>
<msg timestamp="20210322 17:46:46.148" level="INFO">Length is 32</msg>
<status status="PASS" starttime="20210322 17:46:46.148" endtime="20210322 17:46:46.149"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["marketplace"]}</arg>
<arg>${marketplace_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:46:46.149" endtime="20210322 17:46:46.150"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response.json()["created_at"]}</arg>
<arg>${date}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:46:46.150" endtime="20210322 17:46:46.151"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response.json()["updated_at"]}</arg>
<arg>${date}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:46:46.151" endtime="20210322 17:46:46.152"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["type"]}</arg>
<arg>${claim_type}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:46:46.152" endtime="20210322 17:46:46.153"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["status"]}</arg>
<arg>${claim_status}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:46:46.153" endtime="20210322 17:46:46.154"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${key_value}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:46:46.154" endtime="20210322 17:46:46.155"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["key"]["type"]}</arg>
<arg>${key_type}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:46:46.155" endtime="20210322 17:46:46.156"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["claimer"]["name"]}</arg>
<arg>${claimer_name}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:46:46.156" endtime="20210322 17:46:46.157"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["claimer"]["national_registration"]}</arg>
<arg>${claimer_national_registration}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:46:46.157" endtime="20210322 17:46:46.158"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["claimer"]["type"]}</arg>
<arg>${claimer_type}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:46:46.158" endtime="20210322 17:46:46.159"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["claimer"]["marketplace"]}</arg>
<arg>${claimer_marketplace}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:46:46.159" endtime="20210322 17:46:46.160"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["claimer"]["holder"]}</arg>
<arg>${claimer_holder_id}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:46:46.161" endtime="20210322 17:46:46.162"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["claimer"]["account"]["digital_account_id"]}</arg>
<arg>${claimer_account_id}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:46:46.162" endtime="20210322 17:46:46.163"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["claimer"]["account"]["routing_number"]}</arg>
<arg>${claimer_routing_number}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:46:46.163" endtime="20210322 17:46:46.164"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["claimer"]["account"]["number"]}</arg>
<arg>${claimer_account_number}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:46:46.164" endtime="20210322 17:46:46.165"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["claimer"]["account"]["type"]}</arg>
<arg>${claimer_account_type}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:46:46.165" endtime="20210322 17:46:46.166"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["claimer"]["psp"]["code"]}</arg>
<arg>${claimer_psp_code}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:46:46.166" endtime="20210322 17:46:46.167"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["claimer"]["psp"]["name"]}</arg>
<arg>${claimer_psp_name}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:46:46.167" endtime="20210322 17:46:46.168"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["donor"]["name"]}</arg>
<arg>${donor_name}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:46:46.168" endtime="20210322 17:46:46.169"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["donor"]["national_registration"]}</arg>
<arg>${donor_national_registration}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:46:46.169" endtime="20210322 17:46:46.170"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["donor"]["type"]}</arg>
<arg>${donor_type}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:46:46.170" endtime="20210322 17:46:46.171"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["donor"]["marketplace"]}</arg>
<arg>${donor_marketplace}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:46:46.171" endtime="20210322 17:46:46.172"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["donor"]["holder"]}</arg>
<arg>${donor_holder_id}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:46:46.173" endtime="20210322 17:46:46.173"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["donor"]["account"]["digital_account_id"]}</arg>
<arg>${donor_account_id}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:46:46.174" endtime="20210322 17:46:46.174"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["donor"]["account"]["routing_number"]}</arg>
<arg>${donor_routing_number}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:46:46.175" endtime="20210322 17:46:46.175"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["donor"]["account"]["number"]}</arg>
<arg>${donor_account_number}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:46:46.176" endtime="20210322 17:46:46.177"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["donor"]["account"]["type"]}</arg>
<arg>${donor_account_type}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:46:46.177" endtime="20210322 17:46:46.177"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["donor"]["psp"]["code"]}</arg>
<arg>${donor_psp_code}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:46:46.178" endtime="20210322 17:46:46.179"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["donor"]["psp"]["name"]}</arg>
<arg>${donor_psp_name}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:46:46.179" endtime="20210322 17:46:46.180"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["resource"]}</arg>
<arg>${claim_resource}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:46:46.180" endtime="20210322 17:46:46.181"></status>
</kw>
<status status="PASS" starttime="20210322 17:46:46.142" endtime="20210322 17:46:46.181"></status>
</kw>
<kw name="${index} IN RANGE [ 60 ]" type="for">
<kw name="${index} = 0" type="foritem">
<kw name="confirmar reivindicação de posse" library="pix_dict_confirm_claims">
<arguments>
<arg>holder_external_key=${holder_owner}</arg>
<arg>account_external_key=${account_owner}</arg>
<arg>claim_external_key=${claim_external_key}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 17:46:46.184" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 17:46:46.184" endtime="20210322 17:46:46.185"></status>
</kw>
<status status="PASS" starttime="20210322 17:46:46.183" endtime="20210322 17:46:46.185"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/claims/${claim_external_key}/confirm</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:46:46.186" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/1d3705ef5f804ca38eb80f1359b6d9d3/accounts/e7968ce6c95f4a3bbb1f0c8da79422ac/claims/5a3b5673421843b2b31edec752863eeb/confirm, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 17:46:47.826" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20210322 17:46:46.185" endtime="20210322 17:46:47.826"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:46:47.827" level="INFO">{'code': 9997, 'status': 'bad_request', 'type': 'integration_error', 'message': 'Claim operation invalid', 'category': 'unexpected', 'status_code': 400}</msg>
<status status="PASS" starttime="20210322 17:46:47.826" endtime="20210322 17:46:47.827"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:46:47.829" level="INFO">5f398642ef7e7859</msg>
<status status="PASS" starttime="20210322 17:46:47.828" endtime="20210322 17:46:47.829"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 17:46:47.830" level="INFO">400</msg>
<status status="PASS" starttime="20210322 17:46:47.830" endtime="20210322 17:46:47.830"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:46:47.831" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20210322 17:46:47.831" endtime="20210322 17:46:47.831"></status>
</kw>
<status status="PASS" starttime="20210322 17:46:46.182" endtime="20210322 17:46:47.832"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${response.json()["message"]}' == 'Claim confirmed successfully'</arg>
</arguments>
<status status="PASS" starttime="20210322 17:46:47.832" endtime="20210322 17:46:47.833"></status>
</kw>
<status status="PASS" starttime="20210322 17:46:46.182" endtime="20210322 17:46:47.833"></status>
</kw>
<kw name="${index} = 1" type="foritem">
<kw name="confirmar reivindicação de posse" library="pix_dict_confirm_claims">
<arguments>
<arg>holder_external_key=${holder_owner}</arg>
<arg>account_external_key=${account_owner}</arg>
<arg>claim_external_key=${claim_external_key}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 17:46:47.836" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 17:46:47.835" endtime="20210322 17:46:47.836"></status>
</kw>
<status status="PASS" starttime="20210322 17:46:47.835" endtime="20210322 17:46:47.836"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/claims/${claim_external_key}/confirm</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:46:47.837" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/1d3705ef5f804ca38eb80f1359b6d9d3/accounts/e7968ce6c95f4a3bbb1f0c8da79422ac/claims/5a3b5673421843b2b31edec752863eeb/confirm, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 17:46:49.356" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20210322 17:46:47.837" endtime="20210322 17:46:49.356"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:46:49.359" level="INFO">{'code': 9997, 'status': 'bad_request', 'type': 'integration_error', 'message': 'Claim operation invalid', 'category': 'unexpected', 'status_code': 400}</msg>
<status status="PASS" starttime="20210322 17:46:49.357" endtime="20210322 17:46:49.359"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:46:49.361" level="INFO">8642aee5b98c9fa0</msg>
<status status="PASS" starttime="20210322 17:46:49.360" endtime="20210322 17:46:49.362"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 17:46:49.364" level="INFO">400</msg>
<status status="PASS" starttime="20210322 17:46:49.363" endtime="20210322 17:46:49.364"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:46:49.365" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20210322 17:46:49.365" endtime="20210322 17:46:49.366"></status>
</kw>
<status status="PASS" starttime="20210322 17:46:47.834" endtime="20210322 17:46:49.366"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${response.json()["message"]}' == 'Claim confirmed successfully'</arg>
</arguments>
<status status="PASS" starttime="20210322 17:46:49.366" endtime="20210322 17:46:49.368"></status>
</kw>
<status status="PASS" starttime="20210322 17:46:47.833" endtime="20210322 17:46:49.368"></status>
</kw>
<kw name="${index} = 2" type="foritem">
<kw name="confirmar reivindicação de posse" library="pix_dict_confirm_claims">
<arguments>
<arg>holder_external_key=${holder_owner}</arg>
<arg>account_external_key=${account_owner}</arg>
<arg>claim_external_key=${claim_external_key}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 17:46:49.372" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 17:46:49.372" endtime="20210322 17:46:49.373"></status>
</kw>
<status status="PASS" starttime="20210322 17:46:49.371" endtime="20210322 17:46:49.373"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/claims/${claim_external_key}/confirm</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:46:49.375" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/1d3705ef5f804ca38eb80f1359b6d9d3/accounts/e7968ce6c95f4a3bbb1f0c8da79422ac/claims/5a3b5673421843b2b31edec752863eeb/confirm, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 17:46:51.118" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20210322 17:46:49.374" endtime="20210322 17:46:51.118"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:46:51.120" level="INFO">{'code': 9997, 'status': 'bad_request', 'type': 'integration_error', 'message': 'Claim operation invalid', 'category': 'unexpected', 'status_code': 400}</msg>
<status status="PASS" starttime="20210322 17:46:51.119" endtime="20210322 17:46:51.120"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:46:51.124" level="INFO">aecf1672c91b24ac</msg>
<status status="PASS" starttime="20210322 17:46:51.122" endtime="20210322 17:46:51.124"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 17:46:51.126" level="INFO">400</msg>
<status status="PASS" starttime="20210322 17:46:51.125" endtime="20210322 17:46:51.126"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:46:51.128" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20210322 17:46:51.127" endtime="20210322 17:46:51.128"></status>
</kw>
<status status="PASS" starttime="20210322 17:46:49.369" endtime="20210322 17:46:51.129"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${response.json()["message"]}' == 'Claim confirmed successfully'</arg>
</arguments>
<status status="PASS" starttime="20210322 17:46:51.130" endtime="20210322 17:46:51.131"></status>
</kw>
<status status="PASS" starttime="20210322 17:46:49.369" endtime="20210322 17:46:51.131"></status>
</kw>
<kw name="${index} = 3" type="foritem">
<kw name="confirmar reivindicação de posse" library="pix_dict_confirm_claims">
<arguments>
<arg>holder_external_key=${holder_owner}</arg>
<arg>account_external_key=${account_owner}</arg>
<arg>claim_external_key=${claim_external_key}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 17:46:51.137" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 17:46:51.136" endtime="20210322 17:46:51.137"></status>
</kw>
<status status="PASS" starttime="20210322 17:46:51.134" endtime="20210322 17:46:51.137"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/claims/${claim_external_key}/confirm</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:46:51.138" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/1d3705ef5f804ca38eb80f1359b6d9d3/accounts/e7968ce6c95f4a3bbb1f0c8da79422ac/claims/5a3b5673421843b2b31edec752863eeb/confirm, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 17:46:52.883" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20210322 17:46:51.137" endtime="20210322 17:46:52.883"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:46:52.886" level="INFO">{'code': 9997, 'status': 'bad_request', 'type': 'integration_error', 'message': 'Claim operation invalid', 'category': 'unexpected', 'status_code': 400}</msg>
<status status="PASS" starttime="20210322 17:46:52.885" endtime="20210322 17:46:52.887"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:46:52.889" level="INFO">8e3e784f5b14ecbf</msg>
<status status="PASS" starttime="20210322 17:46:52.888" endtime="20210322 17:46:52.890"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 17:46:52.891" level="INFO">400</msg>
<status status="PASS" starttime="20210322 17:46:52.890" endtime="20210322 17:46:52.891"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:46:52.893" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20210322 17:46:52.892" endtime="20210322 17:46:52.893"></status>
</kw>
<status status="PASS" starttime="20210322 17:46:51.133" endtime="20210322 17:46:52.894"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${response.json()["message"]}' == 'Claim confirmed successfully'</arg>
</arguments>
<status status="PASS" starttime="20210322 17:46:52.894" endtime="20210322 17:46:52.896"></status>
</kw>
<status status="PASS" starttime="20210322 17:46:51.132" endtime="20210322 17:46:52.896"></status>
</kw>
<kw name="${index} = 4" type="foritem">
<kw name="confirmar reivindicação de posse" library="pix_dict_confirm_claims">
<arguments>
<arg>holder_external_key=${holder_owner}</arg>
<arg>account_external_key=${account_owner}</arg>
<arg>claim_external_key=${claim_external_key}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 17:46:52.899" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 17:46:52.899" endtime="20210322 17:46:52.900"></status>
</kw>
<status status="PASS" starttime="20210322 17:46:52.898" endtime="20210322 17:46:52.900"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/claims/${claim_external_key}/confirm</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:46:52.901" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/1d3705ef5f804ca38eb80f1359b6d9d3/accounts/e7968ce6c95f4a3bbb1f0c8da79422ac/claims/5a3b5673421843b2b31edec752863eeb/confirm, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 17:46:54.623" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20210322 17:46:52.900" endtime="20210322 17:46:54.623"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:46:54.626" level="INFO">{'code': 9997, 'status': 'bad_request', 'type': 'integration_error', 'message': 'Claim operation invalid', 'category': 'unexpected', 'status_code': 400}</msg>
<status status="PASS" starttime="20210322 17:46:54.624" endtime="20210322 17:46:54.627"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:46:54.629" level="INFO">dbc41374024e796c</msg>
<status status="PASS" starttime="20210322 17:46:54.628" endtime="20210322 17:46:54.630"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 17:46:54.632" level="INFO">400</msg>
<status status="PASS" starttime="20210322 17:46:54.631" endtime="20210322 17:46:54.632"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:46:54.633" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20210322 17:46:54.633" endtime="20210322 17:46:54.634"></status>
</kw>
<status status="PASS" starttime="20210322 17:46:52.897" endtime="20210322 17:46:54.634"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${response.json()["message"]}' == 'Claim confirmed successfully'</arg>
</arguments>
<status status="PASS" starttime="20210322 17:46:54.635" endtime="20210322 17:46:54.636"></status>
</kw>
<status status="PASS" starttime="20210322 17:46:52.896" endtime="20210322 17:46:54.636"></status>
</kw>
<kw name="${index} = 5" type="foritem">
<kw name="confirmar reivindicação de posse" library="pix_dict_confirm_claims">
<arguments>
<arg>holder_external_key=${holder_owner}</arg>
<arg>account_external_key=${account_owner}</arg>
<arg>claim_external_key=${claim_external_key}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 17:46:54.639" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 17:46:54.639" endtime="20210322 17:46:54.640"></status>
</kw>
<status status="PASS" starttime="20210322 17:46:54.638" endtime="20210322 17:46:54.640"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/claims/${claim_external_key}/confirm</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:46:54.641" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/1d3705ef5f804ca38eb80f1359b6d9d3/accounts/e7968ce6c95f4a3bbb1f0c8da79422ac/claims/5a3b5673421843b2b31edec752863eeb/confirm, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 17:46:56.223" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20210322 17:46:54.641" endtime="20210322 17:46:56.224"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:46:56.227" level="INFO">{'code': 9997, 'status': 'bad_request', 'type': 'integration_error', 'message': 'Claim operation invalid', 'category': 'unexpected', 'status_code': 400}</msg>
<status status="PASS" starttime="20210322 17:46:56.225" endtime="20210322 17:46:56.228"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:46:56.229" level="INFO">67359331e44f906c</msg>
<status status="PASS" starttime="20210322 17:46:56.228" endtime="20210322 17:46:56.229"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 17:46:56.231" level="INFO">400</msg>
<status status="PASS" starttime="20210322 17:46:56.230" endtime="20210322 17:46:56.231"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:46:56.233" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20210322 17:46:56.232" endtime="20210322 17:46:56.233"></status>
</kw>
<status status="PASS" starttime="20210322 17:46:54.637" endtime="20210322 17:46:56.233"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${response.json()["message"]}' == 'Claim confirmed successfully'</arg>
</arguments>
<status status="PASS" starttime="20210322 17:46:56.234" endtime="20210322 17:46:56.235"></status>
</kw>
<status status="PASS" starttime="20210322 17:46:54.636" endtime="20210322 17:46:56.235"></status>
</kw>
<kw name="${index} = 6" type="foritem">
<kw name="confirmar reivindicação de posse" library="pix_dict_confirm_claims">
<arguments>
<arg>holder_external_key=${holder_owner}</arg>
<arg>account_external_key=${account_owner}</arg>
<arg>claim_external_key=${claim_external_key}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 17:46:56.237" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 17:46:56.237" endtime="20210322 17:46:56.237"></status>
</kw>
<status status="PASS" starttime="20210322 17:46:56.237" endtime="20210322 17:46:56.239"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/claims/${claim_external_key}/confirm</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:46:56.239" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/1d3705ef5f804ca38eb80f1359b6d9d3/accounts/e7968ce6c95f4a3bbb1f0c8da79422ac/claims/5a3b5673421843b2b31edec752863eeb/confirm, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 17:46:57.914" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20210322 17:46:56.239" endtime="20210322 17:46:57.914"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:46:57.917" level="INFO">{'code': 9997, 'status': 'bad_request', 'type': 'integration_error', 'message': 'Claim operation invalid', 'category': 'unexpected', 'status_code': 400}</msg>
<status status="PASS" starttime="20210322 17:46:57.915" endtime="20210322 17:46:57.917"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:46:57.920" level="INFO">87e6d8cbb95c4a32</msg>
<status status="PASS" starttime="20210322 17:46:57.918" endtime="20210322 17:46:57.920"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 17:46:57.922" level="INFO">400</msg>
<status status="PASS" starttime="20210322 17:46:57.921" endtime="20210322 17:46:57.922"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:46:57.924" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20210322 17:46:57.923" endtime="20210322 17:46:57.924"></status>
</kw>
<status status="PASS" starttime="20210322 17:46:56.235" endtime="20210322 17:46:57.925"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${response.json()["message"]}' == 'Claim confirmed successfully'</arg>
</arguments>
<status status="PASS" starttime="20210322 17:46:57.925" endtime="20210322 17:46:57.927"></status>
</kw>
<status status="PASS" starttime="20210322 17:46:56.235" endtime="20210322 17:46:57.927"></status>
</kw>
<kw name="${index} = 7" type="foritem">
<kw name="confirmar reivindicação de posse" library="pix_dict_confirm_claims">
<arguments>
<arg>holder_external_key=${holder_owner}</arg>
<arg>account_external_key=${account_owner}</arg>
<arg>claim_external_key=${claim_external_key}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 17:46:57.930" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 17:46:57.929" endtime="20210322 17:46:57.931"></status>
</kw>
<status status="PASS" starttime="20210322 17:46:57.929" endtime="20210322 17:46:57.931"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/claims/${claim_external_key}/confirm</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:46:57.932" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/1d3705ef5f804ca38eb80f1359b6d9d3/accounts/e7968ce6c95f4a3bbb1f0c8da79422ac/claims/5a3b5673421843b2b31edec752863eeb/confirm, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 17:46:59.667" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20210322 17:46:57.931" endtime="20210322 17:46:59.667"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:46:59.671" level="INFO">{'code': 9997, 'status': 'bad_request', 'type': 'integration_error', 'message': 'Claim operation invalid', 'category': 'unexpected', 'status_code': 400}</msg>
<status status="PASS" starttime="20210322 17:46:59.669" endtime="20210322 17:46:59.671"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:46:59.674" level="INFO">7d50dbc2e3d0139c</msg>
<status status="PASS" starttime="20210322 17:46:59.674" endtime="20210322 17:46:59.674"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 17:46:59.676" level="INFO">400</msg>
<status status="PASS" starttime="20210322 17:46:59.675" endtime="20210322 17:46:59.676"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:46:59.677" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20210322 17:46:59.676" endtime="20210322 17:46:59.677"></status>
</kw>
<status status="PASS" starttime="20210322 17:46:57.927" endtime="20210322 17:46:59.679"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${response.json()["message"]}' == 'Claim confirmed successfully'</arg>
</arguments>
<status status="PASS" starttime="20210322 17:46:59.680" endtime="20210322 17:46:59.680"></status>
</kw>
<status status="PASS" starttime="20210322 17:46:57.927" endtime="20210322 17:46:59.680"></status>
</kw>
<kw name="${index} = 8" type="foritem">
<kw name="confirmar reivindicação de posse" library="pix_dict_confirm_claims">
<arguments>
<arg>holder_external_key=${holder_owner}</arg>
<arg>account_external_key=${account_owner}</arg>
<arg>claim_external_key=${claim_external_key}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 17:46:59.683" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 17:46:59.683" endtime="20210322 17:46:59.684"></status>
</kw>
<status status="PASS" starttime="20210322 17:46:59.682" endtime="20210322 17:46:59.684"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/claims/${claim_external_key}/confirm</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:46:59.686" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/1d3705ef5f804ca38eb80f1359b6d9d3/accounts/e7968ce6c95f4a3bbb1f0c8da79422ac/claims/5a3b5673421843b2b31edec752863eeb/confirm, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 17:47:01.334" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20210322 17:46:59.685" endtime="20210322 17:47:01.334"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:47:01.337" level="INFO">{'code': 9997, 'status': 'bad_request', 'type': 'integration_error', 'message': 'Claim operation invalid', 'category': 'unexpected', 'status_code': 400}</msg>
<status status="PASS" starttime="20210322 17:47:01.335" endtime="20210322 17:47:01.337"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:47:01.340" level="INFO">86d3e0314737e254</msg>
<status status="PASS" starttime="20210322 17:47:01.338" endtime="20210322 17:47:01.340"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 17:47:01.342" level="INFO">400</msg>
<status status="PASS" starttime="20210322 17:47:01.341" endtime="20210322 17:47:01.342"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:47:01.344" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20210322 17:47:01.343" endtime="20210322 17:47:01.344"></status>
</kw>
<status status="PASS" starttime="20210322 17:46:59.681" endtime="20210322 17:47:01.345"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${response.json()["message"]}' == 'Claim confirmed successfully'</arg>
</arguments>
<status status="PASS" starttime="20210322 17:47:01.345" endtime="20210322 17:47:01.347"></status>
</kw>
<status status="PASS" starttime="20210322 17:46:59.680" endtime="20210322 17:47:01.347"></status>
</kw>
<kw name="${index} = 9" type="foritem">
<kw name="confirmar reivindicação de posse" library="pix_dict_confirm_claims">
<arguments>
<arg>holder_external_key=${holder_owner}</arg>
<arg>account_external_key=${account_owner}</arg>
<arg>claim_external_key=${claim_external_key}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 17:47:01.349" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 17:47:01.349" endtime="20210322 17:47:01.350"></status>
</kw>
<status status="PASS" starttime="20210322 17:47:01.348" endtime="20210322 17:47:01.351"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/claims/${claim_external_key}/confirm</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:47:01.352" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/1d3705ef5f804ca38eb80f1359b6d9d3/accounts/e7968ce6c95f4a3bbb1f0c8da79422ac/claims/5a3b5673421843b2b31edec752863eeb/confirm, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 17:47:02.883" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20210322 17:47:01.351" endtime="20210322 17:47:02.883"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:47:02.884" level="INFO">{'code': 9997, 'status': 'bad_request', 'type': 'integration_error', 'message': 'Claim operation invalid', 'category': 'unexpected', 'status_code': 400}</msg>
<status status="PASS" starttime="20210322 17:47:02.884" endtime="20210322 17:47:02.885"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:47:02.886" level="INFO">a88752bfaa79b599</msg>
<status status="PASS" starttime="20210322 17:47:02.885" endtime="20210322 17:47:02.886"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 17:47:02.887" level="INFO">400</msg>
<status status="PASS" starttime="20210322 17:47:02.886" endtime="20210322 17:47:02.887"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:47:02.888" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20210322 17:47:02.888" endtime="20210322 17:47:02.889"></status>
</kw>
<status status="PASS" starttime="20210322 17:47:01.347" endtime="20210322 17:47:02.889"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${response.json()["message"]}' == 'Claim confirmed successfully'</arg>
</arguments>
<status status="PASS" starttime="20210322 17:47:02.889" endtime="20210322 17:47:02.890"></status>
</kw>
<status status="PASS" starttime="20210322 17:47:01.347" endtime="20210322 17:47:02.890"></status>
</kw>
<kw name="${index} = 10" type="foritem">
<kw name="confirmar reivindicação de posse" library="pix_dict_confirm_claims">
<arguments>
<arg>holder_external_key=${holder_owner}</arg>
<arg>account_external_key=${account_owner}</arg>
<arg>claim_external_key=${claim_external_key}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 17:47:02.893" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 17:47:02.893" endtime="20210322 17:47:02.894"></status>
</kw>
<status status="PASS" starttime="20210322 17:47:02.892" endtime="20210322 17:47:02.894"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/claims/${claim_external_key}/confirm</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:47:02.895" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/1d3705ef5f804ca38eb80f1359b6d9d3/accounts/e7968ce6c95f4a3bbb1f0c8da79422ac/claims/5a3b5673421843b2b31edec752863eeb/confirm, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 17:47:04.644" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20210322 17:47:02.895" endtime="20210322 17:47:04.644"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:47:04.645" level="INFO">{'code': 9997, 'status': 'bad_request', 'type': 'integration_error', 'message': 'Claim operation invalid', 'category': 'unexpected', 'status_code': 400}</msg>
<status status="PASS" starttime="20210322 17:47:04.644" endtime="20210322 17:47:04.645"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:47:04.646" level="INFO">37902f407c9c9ac5</msg>
<status status="PASS" starttime="20210322 17:47:04.646" endtime="20210322 17:47:04.646"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 17:47:04.647" level="INFO">400</msg>
<status status="PASS" starttime="20210322 17:47:04.647" endtime="20210322 17:47:04.647"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:47:04.648" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20210322 17:47:04.648" endtime="20210322 17:47:04.648"></status>
</kw>
<status status="PASS" starttime="20210322 17:47:02.891" endtime="20210322 17:47:04.649"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${response.json()["message"]}' == 'Claim confirmed successfully'</arg>
</arguments>
<status status="PASS" starttime="20210322 17:47:04.649" endtime="20210322 17:47:04.650"></status>
</kw>
<status status="PASS" starttime="20210322 17:47:02.890" endtime="20210322 17:47:04.650"></status>
</kw>
<kw name="${index} = 11" type="foritem">
<kw name="confirmar reivindicação de posse" library="pix_dict_confirm_claims">
<arguments>
<arg>holder_external_key=${holder_owner}</arg>
<arg>account_external_key=${account_owner}</arg>
<arg>claim_external_key=${claim_external_key}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 17:47:04.653" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 17:47:04.652" endtime="20210322 17:47:04.654"></status>
</kw>
<status status="PASS" starttime="20210322 17:47:04.652" endtime="20210322 17:47:04.654"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/claims/${claim_external_key}/confirm</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:47:04.655" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/1d3705ef5f804ca38eb80f1359b6d9d3/accounts/e7968ce6c95f4a3bbb1f0c8da79422ac/claims/5a3b5673421843b2b31edec752863eeb/confirm, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 17:47:06.344" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20210322 17:47:04.654" endtime="20210322 17:47:06.344"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:47:06.345" level="INFO">{'code': 9997, 'status': 'bad_request', 'type': 'integration_error', 'message': 'Claim operation invalid', 'category': 'unexpected', 'status_code': 400}</msg>
<status status="PASS" starttime="20210322 17:47:06.345" endtime="20210322 17:47:06.345"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:47:06.346" level="INFO">fc5f0bf33f4808b6</msg>
<status status="PASS" starttime="20210322 17:47:06.346" endtime="20210322 17:47:06.346"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 17:47:06.347" level="INFO">400</msg>
<status status="PASS" starttime="20210322 17:47:06.347" endtime="20210322 17:47:06.347"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:47:06.348" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20210322 17:47:06.348" endtime="20210322 17:47:06.348"></status>
</kw>
<status status="PASS" starttime="20210322 17:47:04.651" endtime="20210322 17:47:06.348"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${response.json()["message"]}' == 'Claim confirmed successfully'</arg>
</arguments>
<status status="PASS" starttime="20210322 17:47:06.349" endtime="20210322 17:47:06.349"></status>
</kw>
<status status="PASS" starttime="20210322 17:47:04.650" endtime="20210322 17:47:06.349"></status>
</kw>
<kw name="${index} = 12" type="foritem">
<kw name="confirmar reivindicação de posse" library="pix_dict_confirm_claims">
<arguments>
<arg>holder_external_key=${holder_owner}</arg>
<arg>account_external_key=${account_owner}</arg>
<arg>claim_external_key=${claim_external_key}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 17:47:06.352" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 17:47:06.351" endtime="20210322 17:47:06.352"></status>
</kw>
<status status="PASS" starttime="20210322 17:47:06.351" endtime="20210322 17:47:06.353"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/claims/${claim_external_key}/confirm</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:47:06.354" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/1d3705ef5f804ca38eb80f1359b6d9d3/accounts/e7968ce6c95f4a3bbb1f0c8da79422ac/claims/5a3b5673421843b2b31edec752863eeb/confirm, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 17:47:08.095" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20210322 17:47:06.353" endtime="20210322 17:47:08.095"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:47:08.097" level="INFO">{'code': 9997, 'status': 'bad_request', 'type': 'integration_error', 'message': 'Claim operation invalid', 'category': 'unexpected', 'status_code': 400}</msg>
<status status="PASS" starttime="20210322 17:47:08.096" endtime="20210322 17:47:08.097"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:47:08.098" level="INFO">604a1d454ab29f21</msg>
<status status="PASS" starttime="20210322 17:47:08.097" endtime="20210322 17:47:08.099"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 17:47:08.100" level="INFO">400</msg>
<status status="PASS" starttime="20210322 17:47:08.099" endtime="20210322 17:47:08.100"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:47:08.102" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20210322 17:47:08.101" endtime="20210322 17:47:08.102"></status>
</kw>
<status status="PASS" starttime="20210322 17:47:06.350" endtime="20210322 17:47:08.103"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${response.json()["message"]}' == 'Claim confirmed successfully'</arg>
</arguments>
<status status="PASS" starttime="20210322 17:47:08.103" endtime="20210322 17:47:08.105"></status>
</kw>
<status status="PASS" starttime="20210322 17:47:06.349" endtime="20210322 17:47:08.105"></status>
</kw>
<kw name="${index} = 13" type="foritem">
<kw name="confirmar reivindicação de posse" library="pix_dict_confirm_claims">
<arguments>
<arg>holder_external_key=${holder_owner}</arg>
<arg>account_external_key=${account_owner}</arg>
<arg>claim_external_key=${claim_external_key}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 17:47:08.109" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 17:47:08.108" endtime="20210322 17:47:08.110"></status>
</kw>
<status status="PASS" starttime="20210322 17:47:08.107" endtime="20210322 17:47:08.110"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/claims/${claim_external_key}/confirm</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:47:08.111" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/1d3705ef5f804ca38eb80f1359b6d9d3/accounts/e7968ce6c95f4a3bbb1f0c8da79422ac/claims/5a3b5673421843b2b31edec752863eeb/confirm, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 17:47:09.806" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20210322 17:47:08.110" endtime="20210322 17:47:09.806"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:47:09.806" level="INFO">{'code': 9997, 'status': 'bad_request', 'type': 'integration_error', 'message': 'Claim operation invalid', 'category': 'unexpected', 'status_code': 400}</msg>
<status status="PASS" starttime="20210322 17:47:09.806" endtime="20210322 17:47:09.806"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:47:09.807" level="INFO">f9beb37953fa2e56</msg>
<status status="PASS" starttime="20210322 17:47:09.807" endtime="20210322 17:47:09.807"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 17:47:09.808" level="INFO">400</msg>
<status status="PASS" starttime="20210322 17:47:09.807" endtime="20210322 17:47:09.809"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:47:09.809" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20210322 17:47:09.809" endtime="20210322 17:47:09.809"></status>
</kw>
<status status="PASS" starttime="20210322 17:47:08.106" endtime="20210322 17:47:09.809"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${response.json()["message"]}' == 'Claim confirmed successfully'</arg>
</arguments>
<status status="PASS" starttime="20210322 17:47:09.809" endtime="20210322 17:47:09.809"></status>
</kw>
<status status="PASS" starttime="20210322 17:47:08.105" endtime="20210322 17:47:09.809"></status>
</kw>
<kw name="${index} = 14" type="foritem">
<kw name="confirmar reivindicação de posse" library="pix_dict_confirm_claims">
<arguments>
<arg>holder_external_key=${holder_owner}</arg>
<arg>account_external_key=${account_owner}</arg>
<arg>claim_external_key=${claim_external_key}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 17:47:09.811" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 17:47:09.811" endtime="20210322 17:47:09.812"></status>
</kw>
<status status="PASS" starttime="20210322 17:47:09.811" endtime="20210322 17:47:09.812"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/claims/${claim_external_key}/confirm</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:47:09.813" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/1d3705ef5f804ca38eb80f1359b6d9d3/accounts/e7968ce6c95f4a3bbb1f0c8da79422ac/claims/5a3b5673421843b2b31edec752863eeb/confirm, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 17:47:11.471" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20210322 17:47:09.812" endtime="20210322 17:47:11.471"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:47:11.471" level="INFO">{'code': 9997, 'status': 'bad_request', 'type': 'integration_error', 'message': 'Claim operation invalid', 'category': 'unexpected', 'status_code': 400}</msg>
<status status="PASS" starttime="20210322 17:47:11.471" endtime="20210322 17:47:11.471"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:47:11.472" level="INFO">ccc0ccf212c6d09a</msg>
<status status="PASS" starttime="20210322 17:47:11.472" endtime="20210322 17:47:11.472"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 17:47:11.472" level="INFO">400</msg>
<status status="PASS" starttime="20210322 17:47:11.472" endtime="20210322 17:47:11.472"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:47:11.473" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20210322 17:47:11.473" endtime="20210322 17:47:11.473"></status>
</kw>
<status status="PASS" starttime="20210322 17:47:09.811" endtime="20210322 17:47:11.473"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${response.json()["message"]}' == 'Claim confirmed successfully'</arg>
</arguments>
<status status="PASS" starttime="20210322 17:47:11.473" endtime="20210322 17:47:11.474"></status>
</kw>
<status status="PASS" starttime="20210322 17:47:09.810" endtime="20210322 17:47:11.474"></status>
</kw>
<kw name="${index} = 15" type="foritem">
<kw name="confirmar reivindicação de posse" library="pix_dict_confirm_claims">
<arguments>
<arg>holder_external_key=${holder_owner}</arg>
<arg>account_external_key=${account_owner}</arg>
<arg>claim_external_key=${claim_external_key}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 17:47:11.475" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 17:47:11.475" endtime="20210322 17:47:11.476"></status>
</kw>
<status status="PASS" starttime="20210322 17:47:11.475" endtime="20210322 17:47:11.476"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/claims/${claim_external_key}/confirm</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:47:11.476" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/1d3705ef5f804ca38eb80f1359b6d9d3/accounts/e7968ce6c95f4a3bbb1f0c8da79422ac/claims/5a3b5673421843b2b31edec752863eeb/confirm, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 17:47:13.143" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20210322 17:47:11.476" endtime="20210322 17:47:13.143"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:47:13.144" level="INFO">{'code': 9997, 'status': 'bad_request', 'type': 'integration_error', 'message': 'Claim operation invalid', 'category': 'unexpected', 'status_code': 400}</msg>
<status status="PASS" starttime="20210322 17:47:13.143" endtime="20210322 17:47:13.144"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:47:13.144" level="INFO">b69f777c87083e76</msg>
<status status="PASS" starttime="20210322 17:47:13.144" endtime="20210322 17:47:13.144"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 17:47:13.145" level="INFO">400</msg>
<status status="PASS" starttime="20210322 17:47:13.145" endtime="20210322 17:47:13.145"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:47:13.146" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20210322 17:47:13.145" endtime="20210322 17:47:13.146"></status>
</kw>
<status status="PASS" starttime="20210322 17:47:11.474" endtime="20210322 17:47:13.146"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${response.json()["message"]}' == 'Claim confirmed successfully'</arg>
</arguments>
<status status="PASS" starttime="20210322 17:47:13.146" endtime="20210322 17:47:13.146"></status>
</kw>
<status status="PASS" starttime="20210322 17:47:11.474" endtime="20210322 17:47:13.146"></status>
</kw>
<kw name="${index} = 16" type="foritem">
<kw name="confirmar reivindicação de posse" library="pix_dict_confirm_claims">
<arguments>
<arg>holder_external_key=${holder_owner}</arg>
<arg>account_external_key=${account_owner}</arg>
<arg>claim_external_key=${claim_external_key}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 17:47:13.148" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 17:47:13.147" endtime="20210322 17:47:13.148"></status>
</kw>
<status status="PASS" starttime="20210322 17:47:13.147" endtime="20210322 17:47:13.149"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/claims/${claim_external_key}/confirm</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:47:13.149" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/1d3705ef5f804ca38eb80f1359b6d9d3/accounts/e7968ce6c95f4a3bbb1f0c8da79422ac/claims/5a3b5673421843b2b31edec752863eeb/confirm, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 17:47:14.858" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20210322 17:47:13.149" endtime="20210322 17:47:14.858"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:47:14.858" level="INFO">{'code': 9997, 'status': 'bad_request', 'type': 'integration_error', 'message': 'Claim operation invalid', 'category': 'unexpected', 'status_code': 400}</msg>
<status status="PASS" starttime="20210322 17:47:14.858" endtime="20210322 17:47:14.858"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:47:14.860" level="INFO">dc8f99ec92d0c688</msg>
<status status="PASS" starttime="20210322 17:47:14.860" endtime="20210322 17:47:14.860"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 17:47:14.860" level="INFO">400</msg>
<status status="PASS" starttime="20210322 17:47:14.860" endtime="20210322 17:47:14.860"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:47:14.861" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20210322 17:47:14.861" endtime="20210322 17:47:14.861"></status>
</kw>
<status status="PASS" starttime="20210322 17:47:13.146" endtime="20210322 17:47:14.861"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${response.json()["message"]}' == 'Claim confirmed successfully'</arg>
</arguments>
<status status="PASS" starttime="20210322 17:47:14.861" endtime="20210322 17:47:14.861"></status>
</kw>
<status status="PASS" starttime="20210322 17:47:13.146" endtime="20210322 17:47:14.861"></status>
</kw>
<kw name="${index} = 17" type="foritem">
<kw name="confirmar reivindicação de posse" library="pix_dict_confirm_claims">
<arguments>
<arg>holder_external_key=${holder_owner}</arg>
<arg>account_external_key=${account_owner}</arg>
<arg>claim_external_key=${claim_external_key}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 17:47:14.863" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 17:47:14.862" endtime="20210322 17:47:14.863"></status>
</kw>
<status status="PASS" starttime="20210322 17:47:14.862" endtime="20210322 17:47:14.863"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/claims/${claim_external_key}/confirm</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:47:14.864" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/1d3705ef5f804ca38eb80f1359b6d9d3/accounts/e7968ce6c95f4a3bbb1f0c8da79422ac/claims/5a3b5673421843b2b31edec752863eeb/confirm, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 17:47:16.544" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20210322 17:47:14.863" endtime="20210322 17:47:16.545"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:47:16.547" level="INFO">{'code': 9997, 'status': 'bad_request', 'type': 'integration_error', 'message': 'Claim operation invalid', 'category': 'unexpected', 'status_code': 400}</msg>
<status status="PASS" starttime="20210322 17:47:16.546" endtime="20210322 17:47:16.547"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:47:16.549" level="INFO">09191c446d441752</msg>
<status status="PASS" starttime="20210322 17:47:16.548" endtime="20210322 17:47:16.550"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 17:47:16.551" level="INFO">400</msg>
<status status="PASS" starttime="20210322 17:47:16.550" endtime="20210322 17:47:16.551"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:47:16.553" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20210322 17:47:16.552" endtime="20210322 17:47:16.553"></status>
</kw>
<status status="PASS" starttime="20210322 17:47:14.862" endtime="20210322 17:47:16.553"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${response.json()["message"]}' == 'Claim confirmed successfully'</arg>
</arguments>
<status status="PASS" starttime="20210322 17:47:16.554" endtime="20210322 17:47:16.555"></status>
</kw>
<status status="PASS" starttime="20210322 17:47:14.862" endtime="20210322 17:47:16.555"></status>
</kw>
<kw name="${index} = 18" type="foritem">
<kw name="confirmar reivindicação de posse" library="pix_dict_confirm_claims">
<arguments>
<arg>holder_external_key=${holder_owner}</arg>
<arg>account_external_key=${account_owner}</arg>
<arg>claim_external_key=${claim_external_key}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 17:47:16.559" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 17:47:16.558" endtime="20210322 17:47:16.560"></status>
</kw>
<status status="PASS" starttime="20210322 17:47:16.558" endtime="20210322 17:47:16.560"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/claims/${claim_external_key}/confirm</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:47:16.561" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/1d3705ef5f804ca38eb80f1359b6d9d3/accounts/e7968ce6c95f4a3bbb1f0c8da79422ac/claims/5a3b5673421843b2b31edec752863eeb/confirm, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 17:47:18.310" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20210322 17:47:16.560" endtime="20210322 17:47:18.310"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:47:18.312" level="INFO">{'code': 9997, 'status': 'bad_request', 'type': 'integration_error', 'message': 'Claim operation invalid', 'category': 'unexpected', 'status_code': 400}</msg>
<status status="PASS" starttime="20210322 17:47:18.311" endtime="20210322 17:47:18.312"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:47:18.313" level="INFO">e7d3e59b45e4dd7a</msg>
<status status="PASS" starttime="20210322 17:47:18.313" endtime="20210322 17:47:18.314"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 17:47:18.315" level="INFO">400</msg>
<status status="PASS" starttime="20210322 17:47:18.314" endtime="20210322 17:47:18.315"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:47:18.317" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20210322 17:47:18.316" endtime="20210322 17:47:18.317"></status>
</kw>
<status status="PASS" starttime="20210322 17:47:16.556" endtime="20210322 17:47:18.317"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${response.json()["message"]}' == 'Claim confirmed successfully'</arg>
</arguments>
<status status="PASS" starttime="20210322 17:47:18.318" endtime="20210322 17:47:18.319"></status>
</kw>
<status status="PASS" starttime="20210322 17:47:16.556" endtime="20210322 17:47:18.319"></status>
</kw>
<kw name="${index} = 19" type="foritem">
<kw name="confirmar reivindicação de posse" library="pix_dict_confirm_claims">
<arguments>
<arg>holder_external_key=${holder_owner}</arg>
<arg>account_external_key=${account_owner}</arg>
<arg>claim_external_key=${claim_external_key}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 17:47:18.323" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 17:47:18.322" endtime="20210322 17:47:18.323"></status>
</kw>
<status status="PASS" starttime="20210322 17:47:18.321" endtime="20210322 17:47:18.324"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/claims/${claim_external_key}/confirm</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:47:18.325" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/1d3705ef5f804ca38eb80f1359b6d9d3/accounts/e7968ce6c95f4a3bbb1f0c8da79422ac/claims/5a3b5673421843b2b31edec752863eeb/confirm, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 17:47:20.054" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20210322 17:47:18.324" endtime="20210322 17:47:20.054"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:47:20.057" level="INFO">{'code': 9997, 'status': 'bad_request', 'type': 'integration_error', 'message': 'Claim operation invalid', 'category': 'unexpected', 'status_code': 400}</msg>
<status status="PASS" starttime="20210322 17:47:20.055" endtime="20210322 17:47:20.057"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:47:20.059" level="INFO">7c5bf3f25e6b449c</msg>
<status status="PASS" starttime="20210322 17:47:20.058" endtime="20210322 17:47:20.059"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 17:47:20.061" level="INFO">400</msg>
<status status="PASS" starttime="20210322 17:47:20.060" endtime="20210322 17:47:20.062"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:47:20.064" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20210322 17:47:20.063" endtime="20210322 17:47:20.064"></status>
</kw>
<status status="PASS" starttime="20210322 17:47:18.320" endtime="20210322 17:47:20.064"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${response.json()["message"]}' == 'Claim confirmed successfully'</arg>
</arguments>
<status status="PASS" starttime="20210322 17:47:20.065" endtime="20210322 17:47:20.067"></status>
</kw>
<status status="PASS" starttime="20210322 17:47:18.320" endtime="20210322 17:47:20.067"></status>
</kw>
<kw name="${index} = 20" type="foritem">
<kw name="confirmar reivindicação de posse" library="pix_dict_confirm_claims">
<arguments>
<arg>holder_external_key=${holder_owner}</arg>
<arg>account_external_key=${account_owner}</arg>
<arg>claim_external_key=${claim_external_key}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 17:47:20.071" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 17:47:20.070" endtime="20210322 17:47:20.072"></status>
</kw>
<status status="PASS" starttime="20210322 17:47:20.069" endtime="20210322 17:47:20.072"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/claims/${claim_external_key}/confirm</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:47:20.074" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/1d3705ef5f804ca38eb80f1359b6d9d3/accounts/e7968ce6c95f4a3bbb1f0c8da79422ac/claims/5a3b5673421843b2b31edec752863eeb/confirm, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 17:47:21.837" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20210322 17:47:20.072" endtime="20210322 17:47:21.837"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:47:21.839" level="INFO">{'code': 9997, 'status': 'bad_request', 'type': 'integration_error', 'message': 'Claim operation invalid', 'category': 'unexpected', 'status_code': 400}</msg>
<status status="PASS" starttime="20210322 17:47:21.838" endtime="20210322 17:47:21.840"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:47:21.842" level="INFO">be43b82f19ccdd17</msg>
<status status="PASS" starttime="20210322 17:47:21.841" endtime="20210322 17:47:21.843"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 17:47:21.845" level="INFO">400</msg>
<status status="PASS" starttime="20210322 17:47:21.843" endtime="20210322 17:47:21.845"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:47:21.847" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20210322 17:47:21.846" endtime="20210322 17:47:21.847"></status>
</kw>
<status status="PASS" starttime="20210322 17:47:20.068" endtime="20210322 17:47:21.847"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${response.json()["message"]}' == 'Claim confirmed successfully'</arg>
</arguments>
<status status="PASS" starttime="20210322 17:47:21.848" endtime="20210322 17:47:21.849"></status>
</kw>
<status status="PASS" starttime="20210322 17:47:20.067" endtime="20210322 17:47:21.850"></status>
</kw>
<kw name="${index} = 21" type="foritem">
<kw name="confirmar reivindicação de posse" library="pix_dict_confirm_claims">
<arguments>
<arg>holder_external_key=${holder_owner}</arg>
<arg>account_external_key=${account_owner}</arg>
<arg>claim_external_key=${claim_external_key}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 17:47:21.853" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 17:47:21.852" endtime="20210322 17:47:21.854"></status>
</kw>
<status status="PASS" starttime="20210322 17:47:21.852" endtime="20210322 17:47:21.854"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/claims/${claim_external_key}/confirm</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:47:21.855" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/1d3705ef5f804ca38eb80f1359b6d9d3/accounts/e7968ce6c95f4a3bbb1f0c8da79422ac/claims/5a3b5673421843b2b31edec752863eeb/confirm, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 17:47:23.591" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20210322 17:47:21.854" endtime="20210322 17:47:23.591"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:47:23.594" level="INFO">{'code': 9997, 'status': 'bad_request', 'type': 'integration_error', 'message': 'Claim operation invalid', 'category': 'unexpected', 'status_code': 400}</msg>
<status status="PASS" starttime="20210322 17:47:23.592" endtime="20210322 17:47:23.594"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:47:23.596" level="INFO">b9d8fc9aedf8db20</msg>
<status status="PASS" starttime="20210322 17:47:23.595" endtime="20210322 17:47:23.596"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 17:47:23.598" level="INFO">400</msg>
<status status="PASS" starttime="20210322 17:47:23.598" endtime="20210322 17:47:23.598"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:47:23.599" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20210322 17:47:23.598" endtime="20210322 17:47:23.601"></status>
</kw>
<status status="PASS" starttime="20210322 17:47:21.850" endtime="20210322 17:47:23.601"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${response.json()["message"]}' == 'Claim confirmed successfully'</arg>
</arguments>
<status status="PASS" starttime="20210322 17:47:23.602" endtime="20210322 17:47:23.603"></status>
</kw>
<status status="PASS" starttime="20210322 17:47:21.850" endtime="20210322 17:47:23.603"></status>
</kw>
<kw name="${index} = 22" type="foritem">
<kw name="confirmar reivindicação de posse" library="pix_dict_confirm_claims">
<arguments>
<arg>holder_external_key=${holder_owner}</arg>
<arg>account_external_key=${account_owner}</arg>
<arg>claim_external_key=${claim_external_key}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 17:47:23.608" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 17:47:23.607" endtime="20210322 17:47:23.609"></status>
</kw>
<status status="PASS" starttime="20210322 17:47:23.606" endtime="20210322 17:47:23.609"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/claims/${claim_external_key}/confirm</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:47:23.610" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/1d3705ef5f804ca38eb80f1359b6d9d3/accounts/e7968ce6c95f4a3bbb1f0c8da79422ac/claims/5a3b5673421843b2b31edec752863eeb/confirm, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 17:47:25.203" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20210322 17:47:23.610" endtime="20210322 17:47:25.203"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:47:25.205" level="INFO">{'code': 9997, 'status': 'bad_request', 'type': 'integration_error', 'message': 'Claim operation invalid', 'category': 'unexpected', 'status_code': 400}</msg>
<status status="PASS" starttime="20210322 17:47:25.204" endtime="20210322 17:47:25.206"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:47:25.209" level="INFO">118a878ef59e12d2</msg>
<status status="PASS" starttime="20210322 17:47:25.207" endtime="20210322 17:47:25.209"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 17:47:25.210" level="INFO">400</msg>
<status status="PASS" starttime="20210322 17:47:25.209" endtime="20210322 17:47:25.212"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:47:25.212" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20210322 17:47:25.212" endtime="20210322 17:47:25.212"></status>
</kw>
<status status="PASS" starttime="20210322 17:47:23.604" endtime="20210322 17:47:25.213"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${response.json()["message"]}' == 'Claim confirmed successfully'</arg>
</arguments>
<status status="PASS" starttime="20210322 17:47:25.213" endtime="20210322 17:47:25.215"></status>
</kw>
<status status="PASS" starttime="20210322 17:47:23.603" endtime="20210322 17:47:25.215"></status>
</kw>
<kw name="${index} = 23" type="foritem">
<kw name="confirmar reivindicação de posse" library="pix_dict_confirm_claims">
<arguments>
<arg>holder_external_key=${holder_owner}</arg>
<arg>account_external_key=${account_owner}</arg>
<arg>claim_external_key=${claim_external_key}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 17:47:25.218" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 17:47:25.218" endtime="20210322 17:47:25.219"></status>
</kw>
<status status="PASS" starttime="20210322 17:47:25.216" endtime="20210322 17:47:25.219"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/claims/${claim_external_key}/confirm</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:47:25.221" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/1d3705ef5f804ca38eb80f1359b6d9d3/accounts/e7968ce6c95f4a3bbb1f0c8da79422ac/claims/5a3b5673421843b2b31edec752863eeb/confirm, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 17:47:26.852" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 17:47:25.219" endtime="20210322 17:47:26.852"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:47:26.853" level="INFO">{'message': 'Claim confirmed successfully'}</msg>
<status status="PASS" starttime="20210322 17:47:26.852" endtime="20210322 17:47:26.853"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:47:26.853" level="INFO">8e888972d6e57351</msg>
<status status="PASS" starttime="20210322 17:47:26.853" endtime="20210322 17:47:26.853"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 17:47:26.855" level="INFO">200</msg>
<status status="PASS" starttime="20210322 17:47:26.854" endtime="20210322 17:47:26.855"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:47:26.855" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 17:47:26.855" endtime="20210322 17:47:26.855"></status>
</kw>
<status status="PASS" starttime="20210322 17:47:25.215" endtime="20210322 17:47:26.855"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${response.json()["message"]}' == 'Claim confirmed successfully'</arg>
</arguments>
<msg timestamp="20210322 17:47:26.856" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20210322 17:47:26.856" endtime="20210322 17:47:26.856"></status>
</kw>
<status status="PASS" starttime="20210322 17:47:25.215" endtime="20210322 17:47:26.856"></status>
</kw>
<status status="PASS" starttime="20210322 17:46:46.181" endtime="20210322 17:47:26.856"></status>
</kw>
<kw name="buscar reivindicação de posse" library="pix_dict_get_claims">
<arguments>
<arg>holder_external_key=${holder_claimer}</arg>
<arg>account_external_key=${account_claimer}</arg>
<arg>claim_external_key=${claim_external_key}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 17:47:26.857" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 17:47:26.857" endtime="20210322 17:47:26.857"></status>
</kw>
<status status="PASS" starttime="20210322 17:47:26.857" endtime="20210322 17:47:26.858"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/claims/${claim_external_key}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:47:26.858" level="INFO">GET Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/058efae325c344e48cd080b51eaf967c/accounts/f1989ca619774170b3a09b52b7c33ea4/claims/5a3b5673421843b2b31edec752863eeb, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 17:47:27.466" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 17:47:26.858" endtime="20210322 17:47:27.466"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:47:27.467" level="INFO">{'id': '5a3b5673421843b2b31edec752863eeb', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'created_at': '2021-03-22T05:46:45.264', 'updated_at': '2021-03-22T05:47:28.062', 'type': 'OWNERSHIP', 'status': 'confirmed', 'confirm_reason': 'USER_REQUESTED', 'key': {'value': '+5521947149040', 'type': 'phone'}, 'claimer': {'name': 'Holder de teste', 'national_registration': '39651280433', 'type': 'individual', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': '058efae325c344e48cd080b51eaf967c', 'account': {'digital_account_id': 'f1989ca619774170b3a09b52b7c33ea4', 'routing_number': '001', 'number': '5992936073', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}}, 'donor': {'name': 'Holder de teste', 'national_registration': '87021593414', 'type': 'individual', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': '1d3705ef5f804ca38eb80f1359b6d9d3', 'account': {'digital_account_id': 'e7968ce6c95f4a3bbb1f0c8da79422ac', 'routing_number': '001', 'number': '1104639329', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}}, 'completion_period_end': '2021-03-22T08:47:00.000', 'resolution_period_end': '2021-03-29T08:46:44.000', 'resource': 'pix.claim'}</msg>
<status status="PASS" starttime="20210322 17:47:27.467" endtime="20210322 17:47:27.467"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:47:27.468" level="INFO">f35a7209a9caa931</msg>
<status status="PASS" starttime="20210322 17:47:27.467" endtime="20210322 17:47:27.468"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 17:47:27.468" level="INFO">200</msg>
<status status="PASS" starttime="20210322 17:47:27.468" endtime="20210322 17:47:27.468"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:47:27.469" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 17:47:27.468" endtime="20210322 17:47:27.469"></status>
</kw>
<status status="PASS" starttime="20210322 17:47:26.856" endtime="20210322 17:47:27.469"></status>
</kw>
<kw name="validar reivindicação" library="asserts">
<arguments>
<arg>marketplace_external_key=${marketplace_external_key}</arg>
<arg>claim_type=OWNERSHIP</arg>
<arg>claim_status=confirmed</arg>
<arg>key_value=${value}</arg>
<arg>key_type=${type}</arg>
<arg>claimer_name=${holder_name_claimer}</arg>
<arg>claimer_national_registration=${national_registration_claimer}</arg>
<arg>claimer_type=${holder_type_claimer}</arg>
<arg>claimer_marketplace=${marketplace_external_key}</arg>
<arg>claimer_holder_id=${holder_claimer}</arg>
<arg>claimer_account_id=${account_claimer}</arg>
<arg>claimer_routing_number=${account_routing_number_claimer}</arg>
<arg>claimer_account_number=${account_number_claimer}</arg>
<arg>claimer_account_type=CACC</arg>
<arg>claimer_psp_code=${psp_code}</arg>
<arg>claimer_psp_name=${psp_name}</arg>
<arg>donor_name=${holder_name_owner}</arg>
<arg>donor_national_registration=${national_registration_owner}</arg>
<arg>donor_type=${holder_type_owner}</arg>
<arg>donor_marketplace=${marketplace_external_key}</arg>
<arg>donor_holder_id=${holder_owner}</arg>
<arg>donor_account_id=${account_owner}</arg>
<arg>donor_routing_number=${account_routing_number_owner}</arg>
<arg>donor_account_number=${account_number_owner}</arg>
<arg>donor_account_type=CACC</arg>
<arg>donor_psp_code=${psp_code}</arg>
<arg>donor_psp_name=${psp_name}</arg>
<arg>claim_resource=pix.claim</arg>
</arguments>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<arguments>
<arg>result_format=datetime</arg>
</arguments>
<assign>
<var>${date}</var>
</assign>
<msg timestamp="20210322 17:47:27.471" level="INFO">${date} = 2021-03-22 17:47:27.470598</msg>
<status status="PASS" starttime="20210322 17:47:27.471" endtime="20210322 17:47:27.471"></status>
</kw>
<kw name="Convert Date" library="DateTime">
<doc>Converts between supported `date formats`.</doc>
<arguments>
<arg>${date}</arg>
<arg>exclude_millis=yes</arg>
<arg>result_format=%Y-%m-%d</arg>
<arg>date_format=%d-%m-%Y</arg>
</arguments>
<assign>
<var>${date}</var>
</assign>
<msg timestamp="20210322 17:47:27.472" level="INFO">${date} = 2021-03-22</msg>
<status status="PASS" starttime="20210322 17:47:27.471" endtime="20210322 17:47:27.472"></status>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${response.json()["id"]}</arg>
</arguments>
<msg timestamp="20210322 17:47:27.472" level="INFO">Length is 32</msg>
<status status="PASS" starttime="20210322 17:47:27.472" endtime="20210322 17:47:27.472"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["marketplace"]}</arg>
<arg>${marketplace_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:47:27.473" endtime="20210322 17:47:27.473"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response.json()["created_at"]}</arg>
<arg>${date}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:47:27.473" endtime="20210322 17:47:27.474"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response.json()["updated_at"]}</arg>
<arg>${date}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:47:27.474" endtime="20210322 17:47:27.474"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["type"]}</arg>
<arg>${claim_type}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:47:27.474" endtime="20210322 17:47:27.475"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["status"]}</arg>
<arg>${claim_status}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:47:27.475" endtime="20210322 17:47:27.476"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${key_value}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:47:27.476" endtime="20210322 17:47:27.476"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["key"]["type"]}</arg>
<arg>${key_type}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:47:27.476" endtime="20210322 17:47:27.477"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["claimer"]["name"]}</arg>
<arg>${claimer_name}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:47:27.477" endtime="20210322 17:47:27.477"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["claimer"]["national_registration"]}</arg>
<arg>${claimer_national_registration}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:47:27.478" endtime="20210322 17:47:27.478"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["claimer"]["type"]}</arg>
<arg>${claimer_type}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:47:27.478" endtime="20210322 17:47:27.479"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["claimer"]["marketplace"]}</arg>
<arg>${claimer_marketplace}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:47:27.479" endtime="20210322 17:47:27.479"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["claimer"]["holder"]}</arg>
<arg>${claimer_holder_id}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:47:27.479" endtime="20210322 17:47:27.480"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["claimer"]["account"]["digital_account_id"]}</arg>
<arg>${claimer_account_id}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:47:27.480" endtime="20210322 17:47:27.480"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["claimer"]["account"]["routing_number"]}</arg>
<arg>${claimer_routing_number}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:47:27.481" endtime="20210322 17:47:27.481"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["claimer"]["account"]["number"]}</arg>
<arg>${claimer_account_number}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:47:27.481" endtime="20210322 17:47:27.482"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["claimer"]["account"]["type"]}</arg>
<arg>${claimer_account_type}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:47:27.482" endtime="20210322 17:47:27.482"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["claimer"]["psp"]["code"]}</arg>
<arg>${claimer_psp_code}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:47:27.482" endtime="20210322 17:47:27.483"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["claimer"]["psp"]["name"]}</arg>
<arg>${claimer_psp_name}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:47:27.483" endtime="20210322 17:47:27.483"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["donor"]["name"]}</arg>
<arg>${donor_name}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:47:27.483" endtime="20210322 17:47:27.484"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["donor"]["national_registration"]}</arg>
<arg>${donor_national_registration}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:47:27.484" endtime="20210322 17:47:27.484"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["donor"]["type"]}</arg>
<arg>${donor_type}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:47:27.484" endtime="20210322 17:47:27.485"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["donor"]["marketplace"]}</arg>
<arg>${donor_marketplace}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:47:27.485" endtime="20210322 17:47:27.485"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["donor"]["holder"]}</arg>
<arg>${donor_holder_id}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:47:27.486" endtime="20210322 17:47:27.486"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["donor"]["account"]["digital_account_id"]}</arg>
<arg>${donor_account_id}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:47:27.486" endtime="20210322 17:47:27.487"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["donor"]["account"]["routing_number"]}</arg>
<arg>${donor_routing_number}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:47:27.487" endtime="20210322 17:47:27.487"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["donor"]["account"]["number"]}</arg>
<arg>${donor_account_number}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:47:27.488" endtime="20210322 17:47:27.488"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["donor"]["account"]["type"]}</arg>
<arg>${donor_account_type}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:47:27.488" endtime="20210322 17:47:27.489"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["donor"]["psp"]["code"]}</arg>
<arg>${donor_psp_code}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:47:27.489" endtime="20210322 17:47:27.489"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["donor"]["psp"]["name"]}</arg>
<arg>${donor_psp_name}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:47:27.489" endtime="20210322 17:47:27.490"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["resource"]}</arg>
<arg>${claim_resource}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:47:27.490" endtime="20210322 17:47:27.490"></status>
</kw>
<status status="PASS" starttime="20210322 17:47:27.469" endtime="20210322 17:47:27.490"></status>
</kw>
<kw name="receber notificação de reivindicação" library="pix_dict_receive_claim_notification">
<arguments>
<arg>key_pix=${value}</arg>
<arg>account_number=${account_number_owner}</arg>
<arg>claimer_tax_id=${national_registration_owner}</arg>
<arg>claimer_name=${holder_name_owner}</arg>
<arg>claim_external_key=${claim_external_key}</arg>
<arg>claim_notification_status=CONFIRMED</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 17:47:27.492" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 17:47:27.491" endtime="20210322 17:47:27.492"></status>
</kw>
<status status="PASS" starttime="20210322 17:47:27.491" endtime="20210322 17:47:27.492"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:47:27.492" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 17:47:27.492" endtime="20210322 17:47:27.492"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"data": {</arg>
<arg>"claim": {</arg>
<arg>"type": "OWNERSHIP",</arg>
<arg>"key": "${key_pix}",</arg>
<arg>"key_type": "PHONE",</arg>
<arg>"claimer_account": {</arg>
<arg>"participant": "19468242",</arg>
<arg>"branch": "0001",</arg>
<arg>"account_number": "${account_number}",</arg>
<arg>"account_type": "CACC"</arg>
<arg>},</arg>
<arg>"claimer": {</arg>
<arg>"type": "NATURAL_PERSON",</arg>
<arg>"tax_id_number": "${claimer_tax_id}",</arg>
<arg>"name": "${claimer_name}"</arg>
<arg>},</arg>
<arg>"donor_participant": "19468242",</arg>
<arg>"id": "${claim_external_key}",</arg>
<arg>"status": "${claim_notification_status}",</arg>
<arg>"resolution_period_end": "2020-10-18T10:00:00.000Z",</arg>
<arg>"completion_period_end": "2020-10-25T10:00:00.000Z",</arg>
<arg>"last_modified": "2020-10-17T10:00:00.000Z"</arg>
<arg>}</arg>
<arg>}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 17:47:27.493" level="INFO">${body} = { "data": { "claim": { "type": "OWNERSHIP", "key": "+5521947149040", "key_type": "PHONE", "claimer_account": { "participant": "19468242", "branch": "0001", "account_number": "1104639329", "account_typ...</msg>
<status status="PASS" starttime="20210322 17:47:27.493" endtime="20210322 17:47:27.493"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/banking/internal/dict/claims</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:47:27.493" level="INFO">POST Request using : uri=/banking/internal/dict/claims, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "data": { "claim": { "type": "OWNERSHIP", "key": "+5521947149040", "key_type": "PHONE", "claimer_account": { "participant": "19468242", "branch": "0001", "account_number": "1104639329", "account_type": "CACC" }, "claimer": { "type": "NATURAL_PERSON", "tax_id_number": "87021593414", "name": "Holder de teste" }, "donor_participant": "19468242", "id": "5a3b5673421843b2b31edec752863eeb", "status": "CONFIRMED", "resolution_period_end": "2020-10-18T10:00:00.000Z", "completion_period_end": "2020-10-25T10:00:00.000Z", "last_modified": "2020-10-17T10:00:00.000Z" } } } 
json=None</msg>
<msg timestamp="20210322 17:47:28.157" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 17:47:27.493" endtime="20210322 17:47:28.157"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 17:47:28.160" level="INFO">200</msg>
<status status="PASS" starttime="20210322 17:47:28.158" endtime="20210322 17:47:28.160"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:47:28.162" level="INFO">40caf7264205e32d</msg>
<status status="PASS" starttime="20210322 17:47:28.161" endtime="20210322 17:47:28.162"></status>
</kw>
<status status="PASS" starttime="20210322 17:47:27.491" endtime="20210322 17:47:28.163"></status>
</kw>
<kw name="buscar reivindicação de posse" library="pix_dict_get_claims">
<arguments>
<arg>holder_external_key=${holder_claimer}</arg>
<arg>account_external_key=${account_claimer}</arg>
<arg>claim_external_key=${claim_external_key}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 17:47:28.167" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 17:47:28.166" endtime="20210322 17:47:28.167"></status>
</kw>
<status status="PASS" starttime="20210322 17:47:28.165" endtime="20210322 17:47:28.167"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/claims/${claim_external_key}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:47:28.169" level="INFO">GET Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/058efae325c344e48cd080b51eaf967c/accounts/f1989ca619774170b3a09b52b7c33ea4/claims/5a3b5673421843b2b31edec752863eeb, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 17:47:28.930" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 17:47:28.168" endtime="20210322 17:47:28.930"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:47:28.931" level="INFO">{'id': '5a3b5673421843b2b31edec752863eeb', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'created_at': '2021-03-22T05:46:45.264', 'updated_at': '2021-03-22T05:47:29.370', 'type': 'OWNERSHIP', 'status': 'waiting_entry_ownership_confirm_to_complete', 'confirm_reason': 'USER_REQUESTED', 'key': {'value': '+5521947149040', 'type': 'phone'}, 'claimer': {'name': 'Holder de teste', 'national_registration': '39651280433', 'type': 'individual', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': '058efae325c344e48cd080b51eaf967c', 'account': {'digital_account_id': 'f1989ca619774170b3a09b52b7c33ea4', 'routing_number': '001', 'number': '5992936073', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}}, 'donor': {'name': 'Holder de teste', 'national_registration': '87021593414', 'type': 'individual', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': '1d3705ef5f804ca38eb80f1359b6d9d3', 'account': {'digital_account_id': 'e7968ce6c95f4a3bbb1f0c8da79422ac', 'routing_number': '001', 'number': '1104639329', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}}, 'completion_period_end': '2021-03-22T08:47:00.000', 'resolution_period_end': '2021-03-29T08:46:44.000', 'resource': 'pix.claim'}</msg>
<status status="PASS" starttime="20210322 17:47:28.930" endtime="20210322 17:47:28.931"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:47:28.933" level="INFO">5b01ae1c4cdea0c4</msg>
<status status="PASS" starttime="20210322 17:47:28.932" endtime="20210322 17:47:28.933"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 17:47:28.934" level="INFO">200</msg>
<status status="PASS" starttime="20210322 17:47:28.933" endtime="20210322 17:47:28.934"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:47:28.935" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 17:47:28.934" endtime="20210322 17:47:28.935"></status>
</kw>
<status status="PASS" starttime="20210322 17:47:28.163" endtime="20210322 17:47:28.935"></status>
</kw>
<kw name="validar reivindicação" library="asserts">
<arguments>
<arg>marketplace_external_key=${marketplace_external_key}</arg>
<arg>claim_type=OWNERSHIP</arg>
<arg>claim_status=waiting_entry_ownership_confirm_to_complete</arg>
<arg>key_value=${value}</arg>
<arg>key_type=${type}</arg>
<arg>claimer_name=${holder_name_claimer}</arg>
<arg>claimer_national_registration=${national_registration_claimer}</arg>
<arg>claimer_type=${holder_type_claimer}</arg>
<arg>claimer_marketplace=${marketplace_external_key}</arg>
<arg>claimer_holder_id=${holder_claimer}</arg>
<arg>claimer_account_id=${account_claimer}</arg>
<arg>claimer_routing_number=${account_routing_number_claimer}</arg>
<arg>claimer_account_number=${account_number_claimer}</arg>
<arg>claimer_account_type=CACC</arg>
<arg>claimer_psp_code=${psp_code}</arg>
<arg>claimer_psp_name=${psp_name}</arg>
<arg>donor_name=${holder_name_owner}</arg>
<arg>donor_national_registration=${national_registration_owner}</arg>
<arg>donor_type=${holder_type_owner}</arg>
<arg>donor_marketplace=${marketplace_external_key}</arg>
<arg>donor_holder_id=${holder_owner}</arg>
<arg>donor_account_id=${account_owner}</arg>
<arg>donor_routing_number=${account_routing_number_owner}</arg>
<arg>donor_account_number=${account_number_owner}</arg>
<arg>donor_account_type=CACC</arg>
<arg>donor_psp_code=${psp_code}</arg>
<arg>donor_psp_name=${psp_name}</arg>
<arg>claim_resource=pix.claim</arg>
</arguments>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<arguments>
<arg>result_format=datetime</arg>
</arguments>
<assign>
<var>${date}</var>
</assign>
<msg timestamp="20210322 17:47:28.940" level="INFO">${date} = 2021-03-22 17:47:28.940398</msg>
<status status="PASS" starttime="20210322 17:47:28.939" endtime="20210322 17:47:28.940"></status>
</kw>
<kw name="Convert Date" library="DateTime">
<doc>Converts between supported `date formats`.</doc>
<arguments>
<arg>${date}</arg>
<arg>exclude_millis=yes</arg>
<arg>result_format=%Y-%m-%d</arg>
<arg>date_format=%d-%m-%Y</arg>
</arguments>
<assign>
<var>${date}</var>
</assign>
<msg timestamp="20210322 17:47:28.941" level="INFO">${date} = 2021-03-22</msg>
<status status="PASS" starttime="20210322 17:47:28.941" endtime="20210322 17:47:28.941"></status>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${response.json()["id"]}</arg>
</arguments>
<msg timestamp="20210322 17:47:28.943" level="INFO">Length is 32</msg>
<status status="PASS" starttime="20210322 17:47:28.942" endtime="20210322 17:47:28.943"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["marketplace"]}</arg>
<arg>${marketplace_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:47:28.944" endtime="20210322 17:47:28.945"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response.json()["created_at"]}</arg>
<arg>${date}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:47:28.945" endtime="20210322 17:47:28.946"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response.json()["updated_at"]}</arg>
<arg>${date}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:47:28.947" endtime="20210322 17:47:28.947"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["type"]}</arg>
<arg>${claim_type}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:47:28.948" endtime="20210322 17:47:28.948"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["status"]}</arg>
<arg>${claim_status}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:47:28.949" endtime="20210322 17:47:28.949"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${key_value}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:47:28.949" endtime="20210322 17:47:28.950"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["key"]["type"]}</arg>
<arg>${key_type}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:47:28.951" endtime="20210322 17:47:28.951"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["claimer"]["name"]}</arg>
<arg>${claimer_name}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:47:28.952" endtime="20210322 17:47:28.952"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["claimer"]["national_registration"]}</arg>
<arg>${claimer_national_registration}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:47:28.953" endtime="20210322 17:47:28.953"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["claimer"]["type"]}</arg>
<arg>${claimer_type}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:47:28.953" endtime="20210322 17:47:28.954"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["claimer"]["marketplace"]}</arg>
<arg>${claimer_marketplace}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:47:28.954" endtime="20210322 17:47:28.954"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["claimer"]["holder"]}</arg>
<arg>${claimer_holder_id}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:47:28.955" endtime="20210322 17:47:28.956"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["claimer"]["account"]["digital_account_id"]}</arg>
<arg>${claimer_account_id}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:47:28.956" endtime="20210322 17:47:28.956"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["claimer"]["account"]["routing_number"]}</arg>
<arg>${claimer_routing_number}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:47:28.957" endtime="20210322 17:47:28.957"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["claimer"]["account"]["number"]}</arg>
<arg>${claimer_account_number}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:47:28.957" endtime="20210322 17:47:28.958"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["claimer"]["account"]["type"]}</arg>
<arg>${claimer_account_type}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:47:28.958" endtime="20210322 17:47:28.958"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["claimer"]["psp"]["code"]}</arg>
<arg>${claimer_psp_code}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:47:28.959" endtime="20210322 17:47:28.959"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["claimer"]["psp"]["name"]}</arg>
<arg>${claimer_psp_name}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:47:28.960" endtime="20210322 17:47:28.960"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["donor"]["name"]}</arg>
<arg>${donor_name}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:47:28.960" endtime="20210322 17:47:28.961"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["donor"]["national_registration"]}</arg>
<arg>${donor_national_registration}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:47:28.961" endtime="20210322 17:47:28.961"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["donor"]["type"]}</arg>
<arg>${donor_type}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:47:28.962" endtime="20210322 17:47:28.962"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["donor"]["marketplace"]}</arg>
<arg>${donor_marketplace}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:47:28.962" endtime="20210322 17:47:28.963"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["donor"]["holder"]}</arg>
<arg>${donor_holder_id}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:47:28.963" endtime="20210322 17:47:28.963"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["donor"]["account"]["digital_account_id"]}</arg>
<arg>${donor_account_id}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:47:28.964" endtime="20210322 17:47:28.964"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["donor"]["account"]["routing_number"]}</arg>
<arg>${donor_routing_number}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:47:28.964" endtime="20210322 17:47:28.965"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["donor"]["account"]["number"]}</arg>
<arg>${donor_account_number}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:47:28.965" endtime="20210322 17:47:28.965"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["donor"]["account"]["type"]}</arg>
<arg>${donor_account_type}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:47:28.966" endtime="20210322 17:47:28.966"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["donor"]["psp"]["code"]}</arg>
<arg>${donor_psp_code}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:47:28.966" endtime="20210322 17:47:28.967"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["donor"]["psp"]["name"]}</arg>
<arg>${donor_psp_name}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:47:28.967" endtime="20210322 17:47:28.968"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["resource"]}</arg>
<arg>${claim_resource}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:47:28.968" endtime="20210322 17:47:28.968"></status>
</kw>
<status status="PASS" starttime="20210322 17:47:28.936" endtime="20210322 17:47:28.968"></status>
</kw>
<kw name="buscar verification code" library="pix_dict_verification_code">
<arguments>
<arg>holder_external_key=${holder_claimer}</arg>
<arg>account_external_key=${account_claimer}</arg>
<arg>entry_external_key=${entry_claimer}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 17:47:28.970" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 17:47:28.969" endtime="20210322 17:47:28.970"></status>
</kw>
<status status="PASS" starttime="20210322 17:47:28.969" endtime="20210322 17:47:28.970"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/admin/internal_operation/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries/${entry_external_key}/code</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:47:28.971" level="INFO">GET Request using : uri=/admin/internal_operation/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/058efae325c344e48cd080b51eaf967c/accounts/f1989ca619774170b3a09b52b7c33ea4/entries/05f9ffb49a304b0ba54edd4b1a91fe2e/code, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 17:47:29.614" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 17:47:28.970" endtime="20210322 17:47:29.614"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:47:29.615" level="INFO">{'code': '4051'}</msg>
<status status="PASS" starttime="20210322 17:47:29.614" endtime="20210322 17:47:29.615"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:47:29.616" level="INFO">32b5a6c2a9a3c588</msg>
<status status="PASS" starttime="20210322 17:47:29.616" endtime="20210322 17:47:29.616"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 17:47:29.617" level="INFO">200</msg>
<status status="PASS" starttime="20210322 17:47:29.617" endtime="20210322 17:47:29.617"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:47:29.618" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 17:47:29.618" endtime="20210322 17:47:29.618"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["code"]}</arg>
</arguments>
<assign>
<var>${verification_code}</var>
</assign>
<msg timestamp="20210322 17:47:29.620" level="INFO">${verification_code} = 4051</msg>
<status status="PASS" starttime="20210322 17:47:29.619" endtime="20210322 17:47:29.620"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${verification_code}</arg>
</arguments>
<msg timestamp="20210322 17:47:29.621" level="INFO">${verification_code} = 4051</msg>
<status status="PASS" starttime="20210322 17:47:29.620" endtime="20210322 17:47:29.621"></status>
</kw>
<status status="PASS" starttime="20210322 17:47:28.968" endtime="20210322 17:47:29.621"></status>
</kw>
<kw name="confirmar propriedade da chave pix" library="pix_dict_confirm_propriety">
<arguments>
<arg>verification_code=${verification_code}</arg>
<arg>holder_external_key=${holder_claimer}</arg>
<arg>account_external_key=${account_claimer}</arg>
<arg>entry_external_key=${entry_claimer}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 17:47:29.623" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 17:47:29.623" endtime="20210322 17:47:29.624"></status>
</kw>
<status status="PASS" starttime="20210322 17:47:29.622" endtime="20210322 17:47:29.624"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:47:29.625" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 17:47:29.624" endtime="20210322 17:47:29.625"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"code": "${verification_code}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 17:47:29.625" level="INFO">${body} = { "code": "4051" }</msg>
<status status="PASS" starttime="20210322 17:47:29.625" endtime="20210322 17:47:29.626"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries/${entry_external_key}/ownership</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:47:29.627" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/058efae325c344e48cd080b51eaf967c/accounts/f1989ca619774170b3a09b52b7c33ea4/entries/05f9ffb49a304b0ba54edd4b1a91fe2e/ownership, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "code": "4051" } 
json=None</msg>
<msg timestamp="20210322 17:47:31.307" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:47:29.626" endtime="20210322 17:47:31.307"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:47:31.308" level="INFO">{'id': '05f9ffb49a304b0ba54edd4b1a91fe2e', 'status': 'active', 'created_at': '2021-03-22T05:46:41.383', 'updated_at': '2021-03-22T05:47:32.519', 'key': {'value': '+5521947149040', 'type': 'phone'}, 'account': {'id': 'f1989ca619774170b3a09b52b7c33ea4', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': '058efae325c344e48cd080b51eaf967c', 'owner': {'name': 'Holder de teste', 'national_registration': '39651280433', 'type': 'individual'}, 'routing_number': '001', 'number': '5992936073', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}, 'resource': 'pix.entry'}</msg>
<status status="PASS" starttime="20210322 17:47:31.308" endtime="20210322 17:47:31.308"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:47:31.309" level="INFO">02638e54f6b5be12</msg>
<status status="PASS" starttime="20210322 17:47:31.308" endtime="20210322 17:47:31.309"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 17:47:31.309" level="INFO">201</msg>
<status status="PASS" starttime="20210322 17:47:31.309" endtime="20210322 17:47:31.309"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:47:31.310" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:47:31.310" endtime="20210322 17:47:31.310"></status>
</kw>
<status status="PASS" starttime="20210322 17:47:29.621" endtime="20210322 17:47:31.310"></status>
</kw>
<kw name="buscar reivindicação de posse" library="pix_dict_get_claims">
<arguments>
<arg>holder_external_key=${holder_claimer}</arg>
<arg>account_external_key=${account_claimer}</arg>
<arg>claim_external_key=${claim_external_key}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 17:47:31.311" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 17:47:31.311" endtime="20210322 17:47:31.312"></status>
</kw>
<status status="PASS" starttime="20210322 17:47:31.311" endtime="20210322 17:47:31.312"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/claims/${claim_external_key}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:47:31.312" level="INFO">GET Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/058efae325c344e48cd080b51eaf967c/accounts/f1989ca619774170b3a09b52b7c33ea4/claims/5a3b5673421843b2b31edec752863eeb, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 17:47:31.930" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 17:47:31.312" endtime="20210322 17:47:31.930"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:47:31.932" level="INFO">{'id': '5a3b5673421843b2b31edec752863eeb', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'created_at': '2021-03-22T05:46:45.264', 'updated_at': '2021-03-22T05:47:32.519', 'type': 'OWNERSHIP', 'status': 'completed', 'confirm_reason': 'USER_REQUESTED', 'key': {'value': '+5521947149040', 'type': 'phone'}, 'claimer': {'name': 'Holder de teste', 'national_registration': '39651280433', 'type': 'individual', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': '058efae325c344e48cd080b51eaf967c', 'account': {'digital_account_id': 'f1989ca619774170b3a09b52b7c33ea4', 'routing_number': '001', 'number': '5992936073', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}}, 'donor': {'name': 'Holder de teste', 'national_registration': '87021593414', 'type': 'individual', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': '1d3705ef5f804ca38eb80f1359b6d9d3', 'account': {'digital_account_id': 'e7968ce6c95f4a3bbb1f0c8da79422ac', 'routing_number': '001', 'number': '1104639329', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}}, 'completion_period_end': '2021-03-22T08:47:00.000', 'resolution_period_end': '2021-03-29T08:46:44.000', 'resource': 'pix.claim'}</msg>
<status status="PASS" starttime="20210322 17:47:31.931" endtime="20210322 17:47:31.932"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:47:31.933" level="INFO">8860b78f639a3e58</msg>
<status status="PASS" starttime="20210322 17:47:31.932" endtime="20210322 17:47:31.933"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 17:47:31.933" level="INFO">200</msg>
<status status="PASS" starttime="20210322 17:47:31.933" endtime="20210322 17:47:31.933"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:47:31.934" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 17:47:31.933" endtime="20210322 17:47:31.934"></status>
</kw>
<status status="PASS" starttime="20210322 17:47:31.310" endtime="20210322 17:47:31.934"></status>
</kw>
<kw name="validar reivindicação" library="asserts">
<arguments>
<arg>marketplace_external_key=${marketplace_external_key}</arg>
<arg>claim_type=OWNERSHIP</arg>
<arg>claim_status=completed</arg>
<arg>key_value=${value}</arg>
<arg>key_type=${type}</arg>
<arg>claimer_name=${holder_name_claimer}</arg>
<arg>claimer_national_registration=${national_registration_claimer}</arg>
<arg>claimer_type=${holder_type_claimer}</arg>
<arg>claimer_marketplace=${marketplace_external_key}</arg>
<arg>claimer_holder_id=${holder_claimer}</arg>
<arg>claimer_account_id=${account_claimer}</arg>
<arg>claimer_routing_number=${account_routing_number_claimer}</arg>
<arg>claimer_account_number=${account_number_claimer}</arg>
<arg>claimer_account_type=CACC</arg>
<arg>claimer_psp_code=${psp_code}</arg>
<arg>claimer_psp_name=${psp_name}</arg>
<arg>donor_name=${holder_name_owner}</arg>
<arg>donor_national_registration=${national_registration_owner}</arg>
<arg>donor_type=${holder_type_owner}</arg>
<arg>donor_marketplace=${marketplace_external_key}</arg>
<arg>donor_holder_id=${holder_owner}</arg>
<arg>donor_account_id=${account_owner}</arg>
<arg>donor_routing_number=${account_routing_number_owner}</arg>
<arg>donor_account_number=${account_number_owner}</arg>
<arg>donor_account_type=CACC</arg>
<arg>donor_psp_code=${psp_code}</arg>
<arg>donor_psp_name=${psp_name}</arg>
<arg>claim_resource=pix.claim</arg>
</arguments>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<arguments>
<arg>result_format=datetime</arg>
</arguments>
<assign>
<var>${date}</var>
</assign>
<msg timestamp="20210322 17:47:31.936" level="INFO">${date} = 2021-03-22 17:47:31.936310</msg>
<status status="PASS" starttime="20210322 17:47:31.936" endtime="20210322 17:47:31.936"></status>
</kw>
<kw name="Convert Date" library="DateTime">
<doc>Converts between supported `date formats`.</doc>
<arguments>
<arg>${date}</arg>
<arg>exclude_millis=yes</arg>
<arg>result_format=%Y-%m-%d</arg>
<arg>date_format=%d-%m-%Y</arg>
</arguments>
<assign>
<var>${date}</var>
</assign>
<msg timestamp="20210322 17:47:31.937" level="INFO">${date} = 2021-03-22</msg>
<status status="PASS" starttime="20210322 17:47:31.936" endtime="20210322 17:47:31.937"></status>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${response.json()["id"]}</arg>
</arguments>
<msg timestamp="20210322 17:47:31.937" level="INFO">Length is 32</msg>
<status status="PASS" starttime="20210322 17:47:31.937" endtime="20210322 17:47:31.937"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["marketplace"]}</arg>
<arg>${marketplace_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:47:31.937" endtime="20210322 17:47:31.938"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response.json()["created_at"]}</arg>
<arg>${date}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:47:31.938" endtime="20210322 17:47:31.939"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response.json()["updated_at"]}</arg>
<arg>${date}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:47:31.939" endtime="20210322 17:47:31.940"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["type"]}</arg>
<arg>${claim_type}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:47:31.940" endtime="20210322 17:47:31.940"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["status"]}</arg>
<arg>${claim_status}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:47:31.941" endtime="20210322 17:47:31.941"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${key_value}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:47:31.941" endtime="20210322 17:47:31.941"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["key"]["type"]}</arg>
<arg>${key_type}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:47:31.942" endtime="20210322 17:47:31.942"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["claimer"]["name"]}</arg>
<arg>${claimer_name}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:47:31.942" endtime="20210322 17:47:31.943"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["claimer"]["national_registration"]}</arg>
<arg>${claimer_national_registration}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:47:31.943" endtime="20210322 17:47:31.943"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["claimer"]["type"]}</arg>
<arg>${claimer_type}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:47:31.943" endtime="20210322 17:47:31.944"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["claimer"]["marketplace"]}</arg>
<arg>${claimer_marketplace}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:47:31.944" endtime="20210322 17:47:31.944"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["claimer"]["holder"]}</arg>
<arg>${claimer_holder_id}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:47:31.945" endtime="20210322 17:47:31.945"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["claimer"]["account"]["digital_account_id"]}</arg>
<arg>${claimer_account_id}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:47:31.945" endtime="20210322 17:47:31.945"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["claimer"]["account"]["routing_number"]}</arg>
<arg>${claimer_routing_number}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:47:31.946" endtime="20210322 17:47:31.946"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["claimer"]["account"]["number"]}</arg>
<arg>${claimer_account_number}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:47:31.946" endtime="20210322 17:47:31.947"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["claimer"]["account"]["type"]}</arg>
<arg>${claimer_account_type}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:47:31.947" endtime="20210322 17:47:31.947"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["claimer"]["psp"]["code"]}</arg>
<arg>${claimer_psp_code}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:47:31.947" endtime="20210322 17:47:31.948"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["claimer"]["psp"]["name"]}</arg>
<arg>${claimer_psp_name}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:47:31.948" endtime="20210322 17:47:31.948"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["donor"]["name"]}</arg>
<arg>${donor_name}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:47:31.948" endtime="20210322 17:47:31.949"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["donor"]["national_registration"]}</arg>
<arg>${donor_national_registration}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:47:31.949" endtime="20210322 17:47:31.949"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["donor"]["type"]}</arg>
<arg>${donor_type}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:47:31.950" endtime="20210322 17:47:31.950"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["donor"]["marketplace"]}</arg>
<arg>${donor_marketplace}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:47:31.950" endtime="20210322 17:47:31.950"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["donor"]["holder"]}</arg>
<arg>${donor_holder_id}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:47:31.951" endtime="20210322 17:47:31.951"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["donor"]["account"]["digital_account_id"]}</arg>
<arg>${donor_account_id}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:47:31.951" endtime="20210322 17:47:31.952"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["donor"]["account"]["routing_number"]}</arg>
<arg>${donor_routing_number}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:47:31.952" endtime="20210322 17:47:31.952"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["donor"]["account"]["number"]}</arg>
<arg>${donor_account_number}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:47:31.952" endtime="20210322 17:47:31.953"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["donor"]["account"]["type"]}</arg>
<arg>${donor_account_type}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:47:31.953" endtime="20210322 17:47:31.953"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["donor"]["psp"]["code"]}</arg>
<arg>${donor_psp_code}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:47:31.954" endtime="20210322 17:47:31.954"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["donor"]["psp"]["name"]}</arg>
<arg>${donor_psp_name}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:47:31.954" endtime="20210322 17:47:31.955"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["resource"]}</arg>
<arg>${claim_resource}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:47:31.955" endtime="20210322 17:47:31.955"></status>
</kw>
<status status="PASS" starttime="20210322 17:47:31.934" endtime="20210322 17:47:31.955"></status>
</kw>
<doc>Fluxo Básico</doc>
<tags>
<tag>smoke_test</tag>
</tags>
<status status="PASS" starttime="20210322 17:46:29.890" endtime="20210322 17:47:31.956" critical="yes"></status>
</test>
<test id="s1-s2-s2-t2" name="Cenário: Criar Reivindicação de Posse para chave do tipo email">
<kw name="Email" library="FakerLibrary">
<assign>
<var>${email_pix}</var>
</assign>
<msg timestamp="20210322 17:47:31.957" level="INFO">${email_pix} = cardosoyuri@santos.net</msg>
<status status="PASS" starttime="20210322 17:47:31.957" endtime="20210322 17:47:31.957"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${email_pix}</arg>
</arguments>
<msg timestamp="20210322 17:47:31.957" level="INFO">${email_pix} = cardosoyuri@santos.net</msg>
<status status="PASS" starttime="20210322 17:47:31.957" endtime="20210322 17:47:31.958"></status>
</kw>
<kw name="criar holder individual ativo" library="accreditation_create_holder_active">
<kw name="conectar accreditation" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accreditation</arg>
<arg>url=${accreditation_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 17:47:31.959" level="INFO">Creating Session using : alias=accreditation, url=https://banking-accreditation-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 17:47:31.958" endtime="20210322 17:47:31.959"></status>
</kw>
<status status="PASS" starttime="20210322 17:47:31.958" endtime="20210322 17:47:31.959"></status>
</kw>
<kw name="Cpf" library="FakerLibrary">
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 17:47:31.959" level="INFO">${national_registration} = 719.042.836-40</msg>
<status status="PASS" starttime="20210322 17:47:31.959" endtime="20210322 17:47:31.959"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${national_registration}</arg>
<arg>.</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 17:47:31.960" level="INFO">${national_registration} = 719042836-40</msg>
<status status="PASS" starttime="20210322 17:47:31.959" endtime="20210322 17:47:31.960"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${national_registration}</arg>
<arg>-</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 17:47:31.960" level="INFO">${national_registration} = 71904283640</msg>
<status status="PASS" starttime="20210322 17:47:31.960" endtime="20210322 17:47:31.960"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${national_registration}</arg>
</arguments>
<msg timestamp="20210322 17:47:31.961" level="INFO">${national_registration} = 71904283640</msg>
<status status="PASS" starttime="20210322 17:47:31.960" endtime="20210322 17:47:31.961"></status>
</kw>
<kw name="Rg" library="FakerLibrary">
<doc>Brazilian RG, return plain numbers.
Check:  https://www.ngmatematica.com/2014/02/como-determinar-o-digito-verificador-do.html</doc>
<assign>
<var>${identity_card}</var>
</assign>
<msg timestamp="20210322 17:47:31.961" level="INFO">${identity_card} = 648537213</msg>
<status status="PASS" starttime="20210322 17:47:31.961" endtime="20210322 17:47:31.961"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${identity_card}</arg>
</arguments>
<msg timestamp="20210322 17:47:31.962" level="INFO">${identity_card} = 648537213</msg>
<status status="PASS" starttime="20210322 17:47:31.962" endtime="20210322 17:47:31.962"></status>
</kw>
<kw name="criar holder individual" library="accreditation_post_holder_individual">
<arguments>
<arg>holder_type=individual</arg>
<arg>holder_name=${holder_name}</arg>
<arg>email=${email}</arg>
<arg>national_registration=${national_registration}</arg>
<arg>revenue=${revenue}</arg>
<arg>birthday=${birthday}</arg>
<arg>mothers_name=${mothers_name}</arg>
<arg>identity_card=${identity_card}</arg>
<arg>pep=false</arg>
<arg>cbo=${cbo}</arg>
</arguments>
<kw name="conectar accreditation" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accreditation</arg>
<arg>url=${accreditation_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 17:47:31.964" level="INFO">Creating Session using : alias=accreditation, url=https://banking-accreditation-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 17:47:31.963" endtime="20210322 17:47:31.964"></status>
</kw>
<status status="PASS" starttime="20210322 17:47:31.963" endtime="20210322 17:47:31.964"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_type}</arg>
</arguments>
<msg timestamp="20210322 17:47:31.964" level="INFO">${holder_type} = individual</msg>
<status status="PASS" starttime="20210322 17:47:31.964" endtime="20210322 17:47:31.965"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_name}</arg>
</arguments>
<msg timestamp="20210322 17:47:31.965" level="INFO">${holder_name} = Holder de teste</msg>
<status status="PASS" starttime="20210322 17:47:31.965" endtime="20210322 17:47:31.965"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:47:31.965" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 17:47:31.965" endtime="20210322 17:47:31.965"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "${holder_type}",</arg>
<arg>"name": "${holder_name}",</arg>
<arg>"email": "${email}",</arg>
<arg>"national_registration": "${national_registration}",</arg>
<arg>"revenue": ${revenue},</arg>
<arg>"birthday": "${birthday}",</arg>
<arg>"mothers_name": "${mothers_name}",</arg>
<arg>"identity_card": "${identity_card}",</arg>
<arg>"pep": false,</arg>
<arg>"cbo": ${cbo}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 17:47:31.966" level="INFO">${body} = { "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "71904283640", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder",...</msg>
<status status="PASS" starttime="20210322 17:47:31.966" endtime="20210322 17:47:31.966"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:47:31.967" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "71904283640", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder", "identity_card": "648537213", "pep": false, "cbo": 821450 } 
json=None</msg>
<msg timestamp="20210322 17:47:32.648" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:47:31.966" endtime="20210322 17:47:32.648"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:47:32.649" level="INFO">{'id': '2741116fa6d24699b8a0887001096b3f', 'name': 'Holder de teste', 'revenue': 5500.0, 'email': 'teste@teste.com.br', 'status': 'waiting_info_and_documents', 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'marketplace_name': 'Marketplace de Teste', 'created_at': '2021-03-22T17:47:33.81497', 'updated_at': '2021-03-22T17:47:33.814971', 'type': 'individual', 'national_registration': '71904283640', 'birthday': '1988-04-23', 'mothers_name': 'Mãe do Holder', 'identity_card': '648537213', 'pep': False, 'cbo': '821450', '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/2741116fa6d24699b8a0887001096b3f', 'type': 'GET'}, 'phones': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/2741116fa6d24699b8a0887001096b3f/phones', 'type': 'GET'}, 'addresses': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/2741116fa6d24699b8a0887001096b3f/addresses', 'type': 'GET'}, 'documents': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/2741116fa6d24699b8a0887001096b3f/documents', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 17:47:32.648" endtime="20210322 17:47:32.649"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:47:32.649" level="INFO">b913b8f6b8f8e61c</msg>
<status status="PASS" starttime="20210322 17:47:32.649" endtime="20210322 17:47:32.649"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${body}</arg>
</arguments>
<msg timestamp="20210322 17:47:32.651" level="INFO">{ "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "71904283640", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder", "identity_card": "648537213", "pep": false, "cbo": 821450 }</msg>
<status status="PASS" starttime="20210322 17:47:32.650" endtime="20210322 17:47:32.651"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:47:32.651" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:47:32.651" endtime="20210322 17:47:32.651"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${holder_external_key}</var>
</assign>
<msg timestamp="20210322 17:47:32.651" level="INFO">${holder_external_key} = 2741116fa6d24699b8a0887001096b3f</msg>
<status status="PASS" starttime="20210322 17:47:32.651" endtime="20210322 17:47:32.651"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_external_key}</arg>
</arguments>
<msg timestamp="20210322 17:47:32.651" level="INFO">${holder_external_key} = 2741116fa6d24699b8a0887001096b3f</msg>
<status status="PASS" starttime="20210322 17:47:32.651" endtime="20210322 17:47:32.651"></status>
</kw>
<status status="PASS" starttime="20210322 17:47:31.962" endtime="20210322 17:47:32.651"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_name}</arg>
</arguments>
<msg timestamp="20210322 17:47:32.653" level="INFO">${holder_name} = Holder de teste</msg>
<status status="PASS" starttime="20210322 17:47:32.652" endtime="20210322 17:47:32.653"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 17:47:32.653" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:47:32.653" endtime="20210322 17:47:32.653"></status>
</kw>
<kw name="criar holder phone" library="accreditation_post_holder_phone">
<arguments>
<arg>21</arg>
<arg>51</arg>
<arg>996221236</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:47:32.654" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 17:47:32.653" endtime="20210322 17:47:32.654"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"area_code": "${phone_area_code}",</arg>
<arg>"country_code": "${phone_country_code}",</arg>
<arg>"number": "${phone_number}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 17:47:32.654" level="INFO">${body} = { "area_code": "21", "country_code": "51", "number": "996221236" }</msg>
<status status="PASS" starttime="20210322 17:47:32.654" endtime="20210322 17:47:32.654"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/phones</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:47:32.655" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/2741116fa6d24699b8a0887001096b3f/phones, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "area_code": "21", "country_code": "51", "number": "996221236" } 
json=None</msg>
<msg timestamp="20210322 17:47:32.898" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:47:32.655" endtime="20210322 17:47:32.898"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:47:32.898" level="INFO">{'id': 'a2dd856f20ad46f68acea9b53ff5b445', 'area_code': '21', 'country_code': '51', 'number': '996221236', 'main': True, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/2741116fa6d24699b8a0887001096b3f/phones/a2dd856f20ad46f68acea9b53ff5b445', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/2741116fa6d24699b8a0887001096b3f', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 17:47:32.898" endtime="20210322 17:47:32.898"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:47:32.898" level="INFO">701d725679b68173</msg>
<status status="PASS" starttime="20210322 17:47:32.898" endtime="20210322 17:47:32.898"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:47:32.898" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:47:32.898" endtime="20210322 17:47:32.898"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${phone_external_key}</var>
</assign>
<msg timestamp="20210322 17:47:32.899" level="INFO">${phone_external_key} = a2dd856f20ad46f68acea9b53ff5b445</msg>
<status status="PASS" starttime="20210322 17:47:32.899" endtime="20210322 17:47:32.899"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${phone_external_key}</arg>
</arguments>
<msg timestamp="20210322 17:47:32.899" level="INFO">${phone_external_key} = a2dd856f20ad46f68acea9b53ff5b445</msg>
<status status="PASS" starttime="20210322 17:47:32.899" endtime="20210322 17:47:32.899"></status>
</kw>
<status status="PASS" starttime="20210322 17:47:32.653" endtime="20210322 17:47:32.900"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 17:47:32.900" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:47:32.900" endtime="20210322 17:47:32.900"></status>
</kw>
<kw name="criar holder address" library="accreditation_post_holder_address">
<arguments>
<arg>Rio de Janeiro</arg>
<arg>Rio de Janeiro</arg>
<arg>Brasil</arg>
<arg>Bairro de Testes</arg>
<arg>Rua de Testes</arg>
<arg>90</arg>
<arg>apto 200</arg>
<arg>21550987</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:47:32.901" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 17:47:32.901" endtime="20210322 17:47:32.901"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"city": "${city}",</arg>
<arg>"state": "${state}",</arg>
<arg>"country": "${country}",</arg>
<arg>"neighborhood": "${neighborhood}",</arg>
<arg>"street": "${street}",</arg>
<arg>"number": "${number}",</arg>
<arg>"complement": "${complement}",</arg>
<arg>"postal_code": "${postal_code}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 17:47:32.901" level="INFO">${body} = { "city": "Rio de Janeiro", "state": "Rio de Janeiro", "country": "Brasil", "neighborhood": "Bairro de Testes", "street": "Rua de Testes", "number": "90", "complement": "apto 200", "postal_code": "215...</msg>
<status status="PASS" starttime="20210322 17:47:32.901" endtime="20210322 17:47:32.901"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/addresses</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:47:32.902" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/2741116fa6d24699b8a0887001096b3f/addresses, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "city": "Rio de Janeiro", "state": "Rio de Janeiro", "country": "Brasil", "neighborhood": "Bairro de Testes", "street": "Rua de Testes", "number": "90", "complement": "apto 200", "postal_code": "21550987" } 
json=None</msg>
<msg timestamp="20210322 17:47:33.118" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:47:32.902" endtime="20210322 17:47:33.118"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:47:33.122" level="INFO">{'id': '382f05f2e0ca4b0585e1200cef9ce152', 'street': 'Rua de Testes', 'number': '90', 'city': 'Rio de Janeiro', 'complement': 'apto 200', 'state': 'Rio de Janeiro', 'neighborhood': 'Bairro de Testes', 'postal_code': '21550987', 'country': 'Brasil', 'main': True, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/2741116fa6d24699b8a0887001096b3f/addresses/382f05f2e0ca4b0585e1200cef9ce152', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/2741116fa6d24699b8a0887001096b3f', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 17:47:33.120" endtime="20210322 17:47:33.122"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:47:33.123" level="INFO">a3d8021c5951d0e4</msg>
<status status="PASS" starttime="20210322 17:47:33.122" endtime="20210322 17:47:33.124"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:47:33.125" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:47:33.124" endtime="20210322 17:47:33.125"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${address_external_key}</var>
</assign>
<msg timestamp="20210322 17:47:33.127" level="INFO">${address_external_key} = 382f05f2e0ca4b0585e1200cef9ce152</msg>
<status status="PASS" starttime="20210322 17:47:33.126" endtime="20210322 17:47:33.127"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${address_external_key}</arg>
</arguments>
<msg timestamp="20210322 17:47:33.128" level="INFO">${address_external_key} = 382f05f2e0ca4b0585e1200cef9ce152</msg>
<status status="PASS" starttime="20210322 17:47:33.128" endtime="20210322 17:47:33.128"></status>
</kw>
<status status="PASS" starttime="20210322 17:47:32.900" endtime="20210322 17:47:33.128"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 17:47:33.129" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:47:33.129" endtime="20210322 17:47:33.129"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>SELFIE</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:47:33.131" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 17:47:33.131" endtime="20210322 17:47:33.131"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 17:47:33.132" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 17:47:33.133" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 17:47:33.131" endtime="20210322 17:47:33.133"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:47:33.134" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/2741116fa6d24699b8a0887001096b3f/documents?type=SELFIE, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 17:47:33.440" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:47:33.134" endtime="20210322 17:47:33.440"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:47:33.442" level="INFO">{'id': '6956e03ee028477e9e04cda2b2bbdce0', 'document_type': 'selfie', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/2741116fa6d24699b8a0887001096b3f/documents/6956e03ee028477e9e04cda2b2bbdce0', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/2741116fa6d24699b8a0887001096b3f', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/2741116fa6d24699b8a0887001096b3f/documents/6956e03ee028477e9e04cda2b2bbdce0/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 17:47:33.441" endtime="20210322 17:47:33.442"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:47:33.444" level="INFO">16aebcf3a13ecdab</msg>
<status status="PASS" starttime="20210322 17:47:33.443" endtime="20210322 17:47:33.444"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:47:33.445" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:47:33.445" endtime="20210322 17:47:33.445"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 17:47:33.447" level="INFO">${document_external_key} = 6956e03ee028477e9e04cda2b2bbdce0</msg>
<status status="PASS" starttime="20210322 17:47:33.446" endtime="20210322 17:47:33.447"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 17:47:33.448" level="INFO">${document_external_key} = 6956e03ee028477e9e04cda2b2bbdce0</msg>
<status status="PASS" starttime="20210322 17:47:33.447" endtime="20210322 17:47:33.448"></status>
</kw>
<status status="PASS" starttime="20210322 17:47:33.130" endtime="20210322 17:47:33.448"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 17:47:33.449" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:47:33.449" endtime="20210322 17:47:33.449"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>RG_FRENTE</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:47:33.451" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 17:47:33.450" endtime="20210322 17:47:33.451"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 17:47:33.452" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 17:47:33.454" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 17:47:33.451" endtime="20210322 17:47:33.454"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:47:33.456" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/2741116fa6d24699b8a0887001096b3f/documents?type=RG_FRENTE, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 17:47:33.836" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:47:33.454" endtime="20210322 17:47:33.836"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:47:33.839" level="INFO">{'id': 'ff1f9a74b9a74b5883822672cc2bb7c4', 'document_type': 'rg_frente', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/2741116fa6d24699b8a0887001096b3f/documents/ff1f9a74b9a74b5883822672cc2bb7c4', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/2741116fa6d24699b8a0887001096b3f', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/2741116fa6d24699b8a0887001096b3f/documents/ff1f9a74b9a74b5883822672cc2bb7c4/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 17:47:33.836" endtime="20210322 17:47:33.839"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:47:33.841" level="INFO">bbb414153ef2d3ed</msg>
<status status="PASS" starttime="20210322 17:47:33.839" endtime="20210322 17:47:33.841"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:47:33.843" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:47:33.842" endtime="20210322 17:47:33.844"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 17:47:33.847" level="INFO">${document_external_key} = ff1f9a74b9a74b5883822672cc2bb7c4</msg>
<status status="PASS" starttime="20210322 17:47:33.845" endtime="20210322 17:47:33.847"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 17:47:33.849" level="INFO">${document_external_key} = ff1f9a74b9a74b5883822672cc2bb7c4</msg>
<status status="PASS" starttime="20210322 17:47:33.848" endtime="20210322 17:47:33.849"></status>
</kw>
<status status="PASS" starttime="20210322 17:47:33.450" endtime="20210322 17:47:33.850"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 17:47:33.852" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:47:33.850" endtime="20210322 17:47:33.852"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>RG_VERSO</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:47:33.855" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 17:47:33.853" endtime="20210322 17:47:33.855"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 17:47:33.856" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 17:47:33.859" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 17:47:33.855" endtime="20210322 17:47:33.859"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:47:33.862" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/2741116fa6d24699b8a0887001096b3f/documents?type=RG_VERSO, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 17:47:34.138" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:47:33.859" endtime="20210322 17:47:34.138"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:47:34.141" level="INFO">{'id': 'd00f227f6b8746ac8ac2cb716757a722', 'document_type': 'rg_verso', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/2741116fa6d24699b8a0887001096b3f/documents/d00f227f6b8746ac8ac2cb716757a722', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/2741116fa6d24699b8a0887001096b3f', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/2741116fa6d24699b8a0887001096b3f/documents/d00f227f6b8746ac8ac2cb716757a722/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 17:47:34.139" endtime="20210322 17:47:34.141"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:47:34.143" level="INFO">27c3d3f820c930fd</msg>
<status status="PASS" starttime="20210322 17:47:34.142" endtime="20210322 17:47:34.143"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:47:34.145" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:47:34.144" endtime="20210322 17:47:34.145"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 17:47:34.147" level="INFO">${document_external_key} = d00f227f6b8746ac8ac2cb716757a722</msg>
<status status="PASS" starttime="20210322 17:47:34.145" endtime="20210322 17:47:34.147"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 17:47:34.148" level="INFO">${document_external_key} = d00f227f6b8746ac8ac2cb716757a722</msg>
<status status="PASS" starttime="20210322 17:47:34.147" endtime="20210322 17:47:34.148"></status>
</kw>
<status status="PASS" starttime="20210322 17:47:33.852" endtime="20210322 17:47:34.148"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 17:47:34.149" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:47:34.149" endtime="20210322 17:47:34.149"></status>
</kw>
<kw name="solicitar aprovação do holder" library="accreditation_request_approval">
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:47:34.151" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 17:47:34.151" endtime="20210322 17:47:34.151"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/approval</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:47:34.152" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/2741116fa6d24699b8a0887001096b3f/approval, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data=None 
json=None</msg>
<msg timestamp="20210322 17:47:34.443" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 17:47:34.152" endtime="20210322 17:47:34.443"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:47:34.444" level="INFO">{'message': 'Approval request accepted successfully. Processing analysis'}</msg>
<status status="PASS" starttime="20210322 17:47:34.443" endtime="20210322 17:47:34.444"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:47:34.445" level="INFO">cd65dc17af7e8d8f</msg>
<status status="PASS" starttime="20210322 17:47:34.445" endtime="20210322 17:47:34.446"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:47:34.447" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 17:47:34.446" endtime="20210322 17:47:34.447"></status>
</kw>
<status status="PASS" starttime="20210322 17:47:34.150" endtime="20210322 17:47:34.448"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 17:47:34.449" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:47:34.448" endtime="20210322 17:47:34.449"></status>
</kw>
<kw name="recebendo notificação de aprovação" library="accreditation_risk_notification">
<kw name="Uuid 4" library="FakerLibrary">
<doc>Generates a random UUID4 string.
:param cast_to: Specify what type the UUID should be cast to. Default is `str`
:type cast_to: callable</doc>
<assign>
<var>${assessment_id}</var>
</assign>
<msg timestamp="20210322 17:47:34.450" level="INFO">${assessment_id} = d527914c-636b-4fb8-9db0-0473cebd9d9f</msg>
<status status="PASS" starttime="20210322 17:47:34.450" endtime="20210322 17:47:34.451"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>year</arg>
</arguments>
<assign>
<var>${year}</var>
</assign>
<msg timestamp="20210322 17:47:34.451" level="INFO">${year} = 2021</msg>
<status status="PASS" starttime="20210322 17:47:34.451" endtime="20210322 17:47:34.451"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>month</arg>
</arguments>
<assign>
<var>${month}</var>
</assign>
<msg timestamp="20210322 17:47:34.452" level="INFO">${month} = 03</msg>
<status status="PASS" starttime="20210322 17:47:34.452" endtime="20210322 17:47:34.452"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>day</arg>
</arguments>
<assign>
<var>${day}</var>
</assign>
<msg timestamp="20210322 17:47:34.453" level="INFO">${day} = 22</msg>
<status status="PASS" starttime="20210322 17:47:34.453" endtime="20210322 17:47:34.453"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:47:34.454" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 17:47:34.454" endtime="20210322 17:47:34.454"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "risk.assessment.result",</arg>
<arg>"resource": "business.holder",</arg>
<arg>"created_at": "${year}-${month}-${day} 15:28:56.747Z",</arg>
<arg>"marketplace_id": "${marketplace_external_key}",</arg>
<arg>"object": {</arg>
<arg>"result": "APPROVED",</arg>
<arg>"holder_id": "${holder_external_key}",</arg>
<arg>"applicant_id": "${application_external_key}",</arg>
<arg>"assessment_id": "${assessment_id}"</arg>
<arg>}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 17:47:34.455" level="INFO">${body} = { "type": "risk.assessment.result", "resource": "business.holder", "created_at": "2021-03-22 15:28:56.747Z", "marketplace_id": "f71a8951368a4cc085cf7875ff44e61c", "object": { "result": "APPROVED", "ho...</msg>
<status status="PASS" starttime="20210322 17:47:34.455" endtime="20210322 17:47:34.456"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/admin/internal_operation/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/registration/approval</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:47:34.457" level="INFO">POST Request using : uri=/admin/internal_operation/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/2741116fa6d24699b8a0887001096b3f/registration/approval, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "risk.assessment.result", "resource": "business.holder", "created_at": "2021-03-22 15:28:56.747Z", "marketplace_id": "f71a8951368a4cc085cf7875ff44e61c", "object": { "result": "APPROVED", "holder_id": "2741116fa6d24699b8a0887001096b3f", "applicant_id": "bcc25a6751c14b52af1340d40dba78c5", "assessment_id": "d527914c-636b-4fb8-9db0-0473cebd9d9f" } } 
json=None</msg>
<msg timestamp="20210322 17:47:34.704" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 17:47:34.456" endtime="20210322 17:47:34.704"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:47:34.707" level="INFO">{'message': 'Holder approved successfully'}</msg>
<status status="PASS" starttime="20210322 17:47:34.705" endtime="20210322 17:47:34.707"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:47:34.709" level="INFO">3f7d100ae5787dc7</msg>
<status status="PASS" starttime="20210322 17:47:34.708" endtime="20210322 17:47:34.709"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:47:34.712" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 17:47:34.710" endtime="20210322 17:47:34.712"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 17:47:34.714" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:47:34.713" endtime="20210322 17:47:34.714"></status>
</kw>
<status status="PASS" starttime="20210322 17:47:34.449" endtime="20210322 17:47:34.714"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 17:47:34.715" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:47:34.715" endtime="20210322 17:47:34.716"></status>
</kw>
<kw name="buscar account por holder" library="accounts_get_accounts_by_holder">
<kw name="conectar accounts" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accounts</arg>
<arg>url=${account_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 17:47:34.718" level="INFO">Creating Session using : alias=accounts, url=https://banking-accounts-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 17:47:34.718" endtime="20210322 17:47:34.719"></status>
</kw>
<status status="PASS" starttime="20210322 17:47:34.717" endtime="20210322 17:47:34.719"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accounts</arg>
<arg>/marketplaces/${marketplace_external_key}/holders/${holder_external_key}/accounts</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:47:34.721" level="INFO">GET Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/holders/2741116fa6d24699b8a0887001096b3f/accounts, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 17:47:35.371" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 17:47:34.720" endtime="20210322 17:47:35.371"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:47:35.375" level="INFO">{'items': [{'id': '3dfb0f9e803740b4bbf3b459691eb2e8', 'holder': '2741116fa6d24699b8a0887001096b3f', 'balance': '0.00', 'currency': 'BRL', 'routing_number': '001', 'number': '5760588565', 'status': 'active', 'metadata': {}, 'created_at': '2021-03-22T20:47:35.845571', 'updated_at': '2021-03-22T20:47:35.845571', 'primary': True, 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'uri': '/v2/marketplaces/f71a8951368a4cc085cf7875ff44e61c/accounts/3dfb0f9e803740b4bbf3b459691eb2e8', 'resource': 'payment_account'}], 'has_more': False, 'limit': 100, 'total_pages': 1, 'page': 1, 'offset': 0, 'total': '1', 'query_count': '1'}</msg>
<status status="PASS" starttime="20210322 17:47:35.373" endtime="20210322 17:47:35.375"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:47:35.377" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 17:47:35.376" endtime="20210322 17:47:35.377"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["id"]}</arg>
</arguments>
<assign>
<var>${account_external_key}</var>
</assign>
<msg timestamp="20210322 17:47:35.380" level="INFO">${account_external_key} = 3dfb0f9e803740b4bbf3b459691eb2e8</msg>
<status status="PASS" starttime="20210322 17:47:35.378" endtime="20210322 17:47:35.380"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_external_key}</arg>
</arguments>
<msg timestamp="20210322 17:47:35.381" level="INFO">${account_external_key} = 3dfb0f9e803740b4bbf3b459691eb2e8</msg>
<status status="PASS" starttime="20210322 17:47:35.381" endtime="20210322 17:47:35.381"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["number"]}</arg>
</arguments>
<assign>
<var>${account_number}</var>
</assign>
<msg timestamp="20210322 17:47:35.383" level="INFO">${account_number} = 5760588565</msg>
<status status="PASS" starttime="20210322 17:47:35.382" endtime="20210322 17:47:35.383"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_number}</arg>
</arguments>
<msg timestamp="20210322 17:47:35.384" level="INFO">${account_number} = 5760588565</msg>
<status status="PASS" starttime="20210322 17:47:35.384" endtime="20210322 17:47:35.384"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["routing_number"]}</arg>
</arguments>
<assign>
<var>${account_routing_number}</var>
</assign>
<msg timestamp="20210322 17:47:35.386" level="INFO">${account_routing_number} = 001</msg>
<status status="PASS" starttime="20210322 17:47:35.385" endtime="20210322 17:47:35.386"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_routing_number}</arg>
</arguments>
<msg timestamp="20210322 17:47:35.387" level="INFO">${account_routing_number} = 001</msg>
<status status="PASS" starttime="20210322 17:47:35.386" endtime="20210322 17:47:35.387"></status>
</kw>
<status status="PASS" starttime="20210322 17:47:34.716" endtime="20210322 17:47:35.387"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 17:47:35.388" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:47:35.388" endtime="20210322 17:47:35.388"></status>
</kw>
<status status="PASS" starttime="20210322 17:47:31.958" endtime="20210322 17:47:35.388"></status>
</kw>
<kw name="criar chave pix" library="pix_dict_create_entry">
<arguments>
<arg>type=email</arg>
<arg>value=${email_pix}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 17:47:35.391" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 17:47:35.390" endtime="20210322 17:47:35.391"></status>
</kw>
<status status="PASS" starttime="20210322 17:47:35.389" endtime="20210322 17:47:35.391"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${type}</arg>
</arguments>
<msg timestamp="20210322 17:47:35.392" level="INFO">${type} = email</msg>
<status status="PASS" starttime="20210322 17:47:35.392" endtime="20210322 17:47:35.392"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210322 17:47:35.393" level="INFO">${value} = cardosoyuri@santos.net</msg>
<status status="PASS" starttime="20210322 17:47:35.392" endtime="20210322 17:47:35.393"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:47:35.393" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 17:47:35.393" endtime="20210322 17:47:35.394"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "${type}",</arg>
<arg>"value": "${value}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 17:47:35.394" level="INFO">${body} = { "type": "email", "value": "cardosoyuri@santos.net" }</msg>
<status status="PASS" starttime="20210322 17:47:35.394" endtime="20210322 17:47:35.394"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:47:35.395" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/2741116fa6d24699b8a0887001096b3f/accounts/3dfb0f9e803740b4bbf3b459691eb2e8/entries, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "email", "value": "cardosoyuri@santos.net" } 
json=None</msg>
<msg timestamp="20210322 17:47:36.030" level="INFO">${response} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20210322 17:47:35.395" endtime="20210322 17:47:36.031"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:47:36.033" level="INFO">{'id': 'b32734dc848043748b3af1889aea31b7', 'status': 'waiting_ownership_verification', 'created_at': '2021-03-22T05:47:37.229', 'updated_at': '2021-03-22T05:47:37.229', 'key': {'value': 'cardosoyuri@santos.net', 'type': 'email'}, 'account': {'id': '3dfb0f9e803740b4bbf3b459691eb2e8', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': '2741116fa6d24699b8a0887001096b3f', 'owner': {'name': 'Holder de teste', 'national_registration': '71904283640', 'type': 'individual'}, 'routing_number': '001', 'number': '5760588565', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}, 'resource': 'pix.entry'}</msg>
<status status="PASS" starttime="20210322 17:47:36.032" endtime="20210322 17:47:36.034"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:47:36.036" level="INFO">ad40dfe6780cb8c9</msg>
<status status="PASS" starttime="20210322 17:47:36.035" endtime="20210322 17:47:36.036"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 17:47:36.037" level="INFO">202</msg>
<status status="PASS" starttime="20210322 17:47:36.036" endtime="20210322 17:47:36.037"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:47:36.039" level="INFO">${response} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20210322 17:47:36.038" endtime="20210322 17:47:36.039"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${entry_external_key}</var>
</assign>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:47:36.041" endtime="20210322 17:47:36.042"></status>
</kw>
<msg timestamp="20210322 17:47:36.042" level="INFO">${entry_external_key} = b32734dc848043748b3af1889aea31b7</msg>
<status status="PASS" starttime="20210322 17:47:36.040" endtime="20210322 17:47:36.042"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${entry_external_key}</arg>
</arguments>
<msg timestamp="20210322 17:47:36.043" level="INFO">${entry_external_key} = b32734dc848043748b3af1889aea31b7</msg>
<status status="PASS" starttime="20210322 17:47:36.042" endtime="20210322 17:47:36.043"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["key"]["value"]}</arg>
</arguments>
<assign>
<var>${entry_key_value}</var>
</assign>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["key"]["value"]}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:47:36.044" endtime="20210322 17:47:36.045"></status>
</kw>
<msg timestamp="20210322 17:47:36.046" level="INFO">${entry_key_value} = cardosoyuri@santos.net</msg>
<status status="PASS" starttime="20210322 17:47:36.044" endtime="20210322 17:47:36.046"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${entry_key_value}</arg>
</arguments>
<msg timestamp="20210322 17:47:36.046" level="INFO">${entry_key_value} = cardosoyuri@santos.net</msg>
<status status="PASS" starttime="20210322 17:47:36.046" endtime="20210322 17:47:36.046"></status>
</kw>
<status status="PASS" starttime="20210322 17:47:35.389" endtime="20210322 17:47:36.047"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${holder_external_key}</arg>
</arguments>
<assign>
<var>${holder_owner}</var>
</assign>
<msg timestamp="20210322 17:47:36.047" level="INFO">${holder_owner} = 2741116fa6d24699b8a0887001096b3f</msg>
<status status="PASS" starttime="20210322 17:47:36.047" endtime="20210322 17:47:36.047"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${holder_type}</arg>
</arguments>
<assign>
<var>${holder_type_owner}</var>
</assign>
<msg timestamp="20210322 17:47:36.048" level="INFO">${holder_type_owner} = individual</msg>
<status status="PASS" starttime="20210322 17:47:36.048" endtime="20210322 17:47:36.048"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${holder_name}</arg>
</arguments>
<assign>
<var>${holder_name_owner}</var>
</assign>
<msg timestamp="20210322 17:47:36.049" level="INFO">${holder_name_owner} = Holder de teste</msg>
<status status="PASS" starttime="20210322 17:47:36.049" endtime="20210322 17:47:36.049"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${national_registration}</arg>
</arguments>
<assign>
<var>${national_registration_owner}</var>
</assign>
<msg timestamp="20210322 17:47:36.050" level="INFO">${national_registration_owner} = 71904283640</msg>
<status status="PASS" starttime="20210322 17:47:36.049" endtime="20210322 17:47:36.050"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${account_external_key}</arg>
</arguments>
<assign>
<var>${account_owner}</var>
</assign>
<msg timestamp="20210322 17:47:36.051" level="INFO">${account_owner} = 3dfb0f9e803740b4bbf3b459691eb2e8</msg>
<status status="PASS" starttime="20210322 17:47:36.050" endtime="20210322 17:47:36.051"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${account_number}</arg>
</arguments>
<assign>
<var>${account_number_owner}</var>
</assign>
<msg timestamp="20210322 17:47:36.051" level="INFO">${account_number_owner} = 5760588565</msg>
<status status="PASS" starttime="20210322 17:47:36.051" endtime="20210322 17:47:36.051"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${account_routing_number}</arg>
</arguments>
<assign>
<var>${account_routing_number_owner}</var>
</assign>
<msg timestamp="20210322 17:47:36.052" level="INFO">${account_routing_number_owner} = 001</msg>
<status status="PASS" starttime="20210322 17:47:36.052" endtime="20210322 17:47:36.052"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${entry_external_key}</arg>
</arguments>
<assign>
<var>${entry_owner}</var>
</assign>
<msg timestamp="20210322 17:47:36.053" level="INFO">${entry_owner} = b32734dc848043748b3af1889aea31b7</msg>
<status status="PASS" starttime="20210322 17:47:36.052" endtime="20210322 17:47:36.053"></status>
</kw>
<kw name="buscar verification code" library="pix_dict_verification_code">
<arguments>
<arg>holder_external_key=${holder_owner}</arg>
<arg>account_external_key=${account_owner}</arg>
<arg>entry_external_key=${entry_owner}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 17:47:36.054" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 17:47:36.054" endtime="20210322 17:47:36.055"></status>
</kw>
<status status="PASS" starttime="20210322 17:47:36.054" endtime="20210322 17:47:36.055"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/admin/internal_operation/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries/${entry_external_key}/code</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:47:36.056" level="INFO">GET Request using : uri=/admin/internal_operation/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/2741116fa6d24699b8a0887001096b3f/accounts/3dfb0f9e803740b4bbf3b459691eb2e8/entries/b32734dc848043748b3af1889aea31b7/code, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 17:47:36.670" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 17:47:36.055" endtime="20210322 17:47:36.671"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:47:36.673" level="INFO">{'code': '2162'}</msg>
<status status="PASS" starttime="20210322 17:47:36.672" endtime="20210322 17:47:36.674"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:47:36.675" level="INFO">3a5bb4112a73a97a</msg>
<status status="PASS" starttime="20210322 17:47:36.674" endtime="20210322 17:47:36.675"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 17:47:36.677" level="INFO">200</msg>
<status status="PASS" starttime="20210322 17:47:36.676" endtime="20210322 17:47:36.677"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:47:36.678" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 17:47:36.677" endtime="20210322 17:47:36.678"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["code"]}</arg>
</arguments>
<assign>
<var>${verification_code}</var>
</assign>
<msg timestamp="20210322 17:47:36.680" level="INFO">${verification_code} = 2162</msg>
<status status="PASS" starttime="20210322 17:47:36.679" endtime="20210322 17:47:36.680"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${verification_code}</arg>
</arguments>
<msg timestamp="20210322 17:47:36.681" level="INFO">${verification_code} = 2162</msg>
<status status="PASS" starttime="20210322 17:47:36.681" endtime="20210322 17:47:36.681"></status>
</kw>
<status status="PASS" starttime="20210322 17:47:36.053" endtime="20210322 17:47:36.681"></status>
</kw>
<kw name="confirmar propriedade da chave pix" library="pix_dict_confirm_propriety">
<arguments>
<arg>verification_code=${verification_code}</arg>
<arg>holder_external_key=${holder_owner}</arg>
<arg>account_external_key=${account_owner}</arg>
<arg>entry_external_key=${entry_owner}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 17:47:36.685" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 17:47:36.685" endtime="20210322 17:47:36.686"></status>
</kw>
<status status="PASS" starttime="20210322 17:47:36.684" endtime="20210322 17:47:36.686"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:47:36.687" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 17:47:36.686" endtime="20210322 17:47:36.687"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"code": "${verification_code}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 17:47:36.687" level="INFO">${body} = { "code": "2162" }</msg>
<status status="PASS" starttime="20210322 17:47:36.687" endtime="20210322 17:47:36.688"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries/${entry_external_key}/ownership</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:47:36.689" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/2741116fa6d24699b8a0887001096b3f/accounts/3dfb0f9e803740b4bbf3b459691eb2e8/entries/b32734dc848043748b3af1889aea31b7/ownership, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "code": "2162" } 
json=None</msg>
<msg timestamp="20210322 17:47:38.314" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:47:36.688" endtime="20210322 17:47:38.314"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:47:38.315" level="INFO">{'id': 'b32734dc848043748b3af1889aea31b7', 'status': 'active', 'created_at': '2021-03-22T05:47:37.229', 'updated_at': '2021-03-22T05:47:39.531', 'key': {'value': 'cardosoyuri@santos.net', 'type': 'email'}, 'account': {'id': '3dfb0f9e803740b4bbf3b459691eb2e8', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': '2741116fa6d24699b8a0887001096b3f', 'owner': {'name': 'Holder de teste', 'national_registration': '71904283640', 'type': 'individual'}, 'routing_number': '001', 'number': '5760588565', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}, 'resource': 'pix.entry'}</msg>
<status status="PASS" starttime="20210322 17:47:38.315" endtime="20210322 17:47:38.316"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:47:38.317" level="INFO">cc2655a922e62acd</msg>
<status status="PASS" starttime="20210322 17:47:38.316" endtime="20210322 17:47:38.317"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 17:47:38.318" level="INFO">201</msg>
<status status="PASS" starttime="20210322 17:47:38.317" endtime="20210322 17:47:38.318"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:47:38.319" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:47:38.319" endtime="20210322 17:47:38.319"></status>
</kw>
<status status="PASS" starttime="20210322 17:47:36.682" endtime="20210322 17:47:38.320"></status>
</kw>
<kw name="validar chave pix" library="asserts">
<arguments>
<arg>key_status=active</arg>
<arg>key_type=${type}</arg>
<arg>key_value=${value}</arg>
<arg>account_external_key=${account_owner}</arg>
<arg>marketplace_external_key=${marketplace_external_key}</arg>
<arg>holder_external_key=${holder_owner}</arg>
<arg>account_number=${account_number_owner}</arg>
<arg>account_routing_number=${account_routing_number_owner}</arg>
<arg>account_type=CACC</arg>
<arg>owner_key_name=${holder_name_owner}</arg>
<arg>national_registration=${national_registration_owner}</arg>
<arg>holder_type=${holder_type}</arg>
<arg>psp_code=19468242</arg>
<arg>psp_name=Zoop Tecnologia e Meios de Pagamento S.A.</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar status da chave</arg>
</arguments>
<msg timestamp="20210322 17:47:38.324" level="INFO">Validar status da chave</msg>
<status status="PASS" starttime="20210322 17:47:38.323" endtime="20210322 17:47:38.324"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["status"]}</arg>
<arg>${key_status}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:47:38.324" endtime="20210322 17:47:38.325"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando Tipo da chave PIX</arg>
</arguments>
<msg timestamp="20210322 17:47:38.326" level="INFO">Validando Tipo da chave PIX</msg>
<status status="PASS" starttime="20210322 17:47:38.325" endtime="20210322 17:47:38.326"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["key"]["type"]}</arg>
<arg>${key_type}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:47:38.326" endtime="20210322 17:47:38.327"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando Valor da chave PIX</arg>
</arguments>
<msg timestamp="20210322 17:47:38.328" level="INFO">Validando Valor da chave PIX</msg>
<status status="PASS" starttime="20210322 17:47:38.327" endtime="20210322 17:47:38.328"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${type}' == 'evp'</arg>
<arg>Should Not Be Empty</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' != 'evp'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${key_value}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${key_value}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:47:38.329" endtime="20210322 17:47:38.329"></status>
</kw>
<status status="PASS" starttime="20210322 17:47:38.328" endtime="20210322 17:47:38.329"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando dados da conta</arg>
</arguments>
<msg timestamp="20210322 17:47:38.330" level="INFO">Validando dados da conta</msg>
<status status="PASS" starttime="20210322 17:47:38.330" endtime="20210322 17:47:38.330"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["id"]}</arg>
<arg>${account_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:47:38.330" endtime="20210322 17:47:38.331"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["marketplace"]}</arg>
<arg>${marketplace_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:47:38.331" endtime="20210322 17:47:38.332"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["holder"]}</arg>
<arg>${holder_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:47:38.332" endtime="20210322 17:47:38.332"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["number"]}</arg>
<arg>${account_number}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:47:38.333" endtime="20210322 17:47:38.333"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["routing_number"]}</arg>
<arg>${account_routing_number}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:47:38.334" endtime="20210322 17:47:38.334"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["type"]}</arg>
<arg>${account_type}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:47:38.334" endtime="20210322 17:47:38.335"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar Proprietário da Account Owner</arg>
</arguments>
<msg timestamp="20210322 17:47:38.335" level="INFO">Validar Proprietário da Account Owner</msg>
<status status="PASS" starttime="20210322 17:47:38.335" endtime="20210322 17:47:38.335"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["account"]["owner"]["name"]}</arg>
<arg>${owner_key_name}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:47:38.336" endtime="20210322 17:47:38.336"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar national_registration da Account Owner</arg>
</arguments>
<msg timestamp="20210322 17:47:38.337" level="INFO">Validar national_registration da Account Owner</msg>
<status status="PASS" starttime="20210322 17:47:38.337" endtime="20210322 17:47:38.337"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["account"]["owner"]["national_registration"]}</arg>
<arg>${national_registration}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:47:38.337" endtime="20210322 17:47:38.338"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar Holder Type do Account Owner</arg>
</arguments>
<msg timestamp="20210322 17:47:38.339" level="INFO">Validar Holder Type do Account Owner</msg>
<status status="PASS" starttime="20210322 17:47:38.339" endtime="20210322 17:47:38.339"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["account"]["owner"]["type"]}</arg>
<arg>${holder_type}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:47:38.339" endtime="20210322 17:47:38.340"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar PSP</arg>
</arguments>
<msg timestamp="20210322 17:47:38.340" level="INFO">Validar PSP</msg>
<status status="PASS" starttime="20210322 17:47:38.340" endtime="20210322 17:47:38.340"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["psp"]["code"]}</arg>
<arg>${psp_code}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:47:38.341" endtime="20210322 17:47:38.342"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["psp"]["name"]}</arg>
<arg>${psp_name}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:47:38.342" endtime="20210322 17:47:38.342"></status>
</kw>
<status status="PASS" starttime="20210322 17:47:38.320" endtime="20210322 17:47:38.342"></status>
</kw>
<kw name="criar holder individual ativo" library="accreditation_create_holder_active">
<kw name="conectar accreditation" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accreditation</arg>
<arg>url=${accreditation_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 17:47:38.343" level="INFO">Creating Session using : alias=accreditation, url=https://banking-accreditation-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 17:47:38.343" endtime="20210322 17:47:38.344"></status>
</kw>
<status status="PASS" starttime="20210322 17:47:38.343" endtime="20210322 17:47:38.344"></status>
</kw>
<kw name="Cpf" library="FakerLibrary">
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 17:47:38.344" level="INFO">${national_registration} = 457.198.320-41</msg>
<status status="PASS" starttime="20210322 17:47:38.344" endtime="20210322 17:47:38.344"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${national_registration}</arg>
<arg>.</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 17:47:38.345" level="INFO">${national_registration} = 457198320-41</msg>
<status status="PASS" starttime="20210322 17:47:38.345" endtime="20210322 17:47:38.345"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${national_registration}</arg>
<arg>-</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 17:47:38.345" level="INFO">${national_registration} = 45719832041</msg>
<status status="PASS" starttime="20210322 17:47:38.345" endtime="20210322 17:47:38.346"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${national_registration}</arg>
</arguments>
<msg timestamp="20210322 17:47:38.346" level="INFO">${national_registration} = 45719832041</msg>
<status status="PASS" starttime="20210322 17:47:38.346" endtime="20210322 17:47:38.346"></status>
</kw>
<kw name="Rg" library="FakerLibrary">
<doc>Brazilian RG, return plain numbers.
Check:  https://www.ngmatematica.com/2014/02/como-determinar-o-digito-verificador-do.html</doc>
<assign>
<var>${identity_card}</var>
</assign>
<msg timestamp="20210322 17:47:38.347" level="INFO">${identity_card} = 487502139</msg>
<status status="PASS" starttime="20210322 17:47:38.346" endtime="20210322 17:47:38.347"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${identity_card}</arg>
</arguments>
<msg timestamp="20210322 17:47:38.347" level="INFO">${identity_card} = 487502139</msg>
<status status="PASS" starttime="20210322 17:47:38.347" endtime="20210322 17:47:38.347"></status>
</kw>
<kw name="criar holder individual" library="accreditation_post_holder_individual">
<arguments>
<arg>holder_type=individual</arg>
<arg>holder_name=${holder_name}</arg>
<arg>email=${email}</arg>
<arg>national_registration=${national_registration}</arg>
<arg>revenue=${revenue}</arg>
<arg>birthday=${birthday}</arg>
<arg>mothers_name=${mothers_name}</arg>
<arg>identity_card=${identity_card}</arg>
<arg>pep=false</arg>
<arg>cbo=${cbo}</arg>
</arguments>
<kw name="conectar accreditation" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accreditation</arg>
<arg>url=${accreditation_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 17:47:38.349" level="INFO">Creating Session using : alias=accreditation, url=https://banking-accreditation-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 17:47:38.348" endtime="20210322 17:47:38.349"></status>
</kw>
<status status="PASS" starttime="20210322 17:47:38.348" endtime="20210322 17:47:38.349"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_type}</arg>
</arguments>
<msg timestamp="20210322 17:47:38.350" level="INFO">${holder_type} = individual</msg>
<status status="PASS" starttime="20210322 17:47:38.349" endtime="20210322 17:47:38.350"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_name}</arg>
</arguments>
<msg timestamp="20210322 17:47:38.350" level="INFO">${holder_name} = Holder de teste</msg>
<status status="PASS" starttime="20210322 17:47:38.350" endtime="20210322 17:47:38.350"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:47:38.351" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 17:47:38.351" endtime="20210322 17:47:38.351"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "${holder_type}",</arg>
<arg>"name": "${holder_name}",</arg>
<arg>"email": "${email}",</arg>
<arg>"national_registration": "${national_registration}",</arg>
<arg>"revenue": ${revenue},</arg>
<arg>"birthday": "${birthday}",</arg>
<arg>"mothers_name": "${mothers_name}",</arg>
<arg>"identity_card": "${identity_card}",</arg>
<arg>"pep": false,</arg>
<arg>"cbo": ${cbo}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 17:47:38.352" level="INFO">${body} = { "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "45719832041", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder",...</msg>
<status status="PASS" starttime="20210322 17:47:38.351" endtime="20210322 17:47:38.352"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:47:38.353" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "45719832041", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder", "identity_card": "487502139", "pep": false, "cbo": 821450 } 
json=None</msg>
<msg timestamp="20210322 17:47:39.030" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:47:38.352" endtime="20210322 17:47:39.031"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:47:39.032" level="INFO">{'id': 'e24b61b00b744c6da2a0a8f2f64692d8', 'name': 'Holder de teste', 'revenue': 5500.0, 'email': 'teste@teste.com.br', 'status': 'waiting_info_and_documents', 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'marketplace_name': 'Marketplace de Teste', 'created_at': '2021-03-22T17:47:40.22152', 'updated_at': '2021-03-22T17:47:40.221522', 'type': 'individual', 'national_registration': '45719832041', 'birthday': '1988-04-23', 'mothers_name': 'Mãe do Holder', 'identity_card': '487502139', 'pep': False, 'cbo': '821450', '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/e24b61b00b744c6da2a0a8f2f64692d8', 'type': 'GET'}, 'phones': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/e24b61b00b744c6da2a0a8f2f64692d8/phones', 'type': 'GET'}, 'addresses': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/e24b61b00b744c6da2a0a8f2f64692d8/addresses', 'type': 'GET'}, 'documents': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/e24b61b00b744c6da2a0a8f2f64692d8/documents', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 17:47:39.032" endtime="20210322 17:47:39.033"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:47:39.034" level="INFO">693df62af6d70b2b</msg>
<status status="PASS" starttime="20210322 17:47:39.033" endtime="20210322 17:47:39.034"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${body}</arg>
</arguments>
<msg timestamp="20210322 17:47:39.035" level="INFO">{ "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "45719832041", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder", "identity_card": "487502139", "pep": false, "cbo": 821450 }</msg>
<status status="PASS" starttime="20210322 17:47:39.035" endtime="20210322 17:47:39.035"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:47:39.037" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:47:39.036" endtime="20210322 17:47:39.037"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${holder_external_key}</var>
</assign>
<msg timestamp="20210322 17:47:39.039" level="INFO">${holder_external_key} = e24b61b00b744c6da2a0a8f2f64692d8</msg>
<status status="PASS" starttime="20210322 17:47:39.038" endtime="20210322 17:47:39.039"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_external_key}</arg>
</arguments>
<msg timestamp="20210322 17:47:39.040" level="INFO">${holder_external_key} = e24b61b00b744c6da2a0a8f2f64692d8</msg>
<status status="PASS" starttime="20210322 17:47:39.039" endtime="20210322 17:47:39.040"></status>
</kw>
<status status="PASS" starttime="20210322 17:47:38.347" endtime="20210322 17:47:39.040"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_name}</arg>
</arguments>
<msg timestamp="20210322 17:47:39.041" level="INFO">${holder_name} = Holder de teste</msg>
<status status="PASS" starttime="20210322 17:47:39.041" endtime="20210322 17:47:39.041"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 17:47:39.042" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:47:39.042" endtime="20210322 17:47:39.042"></status>
</kw>
<kw name="criar holder phone" library="accreditation_post_holder_phone">
<arguments>
<arg>21</arg>
<arg>51</arg>
<arg>996221236</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:47:39.044" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 17:47:39.044" endtime="20210322 17:47:39.044"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"area_code": "${phone_area_code}",</arg>
<arg>"country_code": "${phone_country_code}",</arg>
<arg>"number": "${phone_number}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 17:47:39.045" level="INFO">${body} = { "area_code": "21", "country_code": "51", "number": "996221236" }</msg>
<status status="PASS" starttime="20210322 17:47:39.045" endtime="20210322 17:47:39.046"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/phones</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:47:39.047" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/e24b61b00b744c6da2a0a8f2f64692d8/phones, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "area_code": "21", "country_code": "51", "number": "996221236" } 
json=None</msg>
<msg timestamp="20210322 17:47:39.271" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:47:39.046" endtime="20210322 17:47:39.271"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:47:39.272" level="INFO">{'id': '15244d10eaa04bdbac18325cd45275c1', 'area_code': '21', 'country_code': '51', 'number': '996221236', 'main': True, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/e24b61b00b744c6da2a0a8f2f64692d8/phones/15244d10eaa04bdbac18325cd45275c1', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/e24b61b00b744c6da2a0a8f2f64692d8', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 17:47:39.271" endtime="20210322 17:47:39.272"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:47:39.273" level="INFO">6085b42399fc5d8e</msg>
<status status="PASS" starttime="20210322 17:47:39.272" endtime="20210322 17:47:39.273"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:47:39.274" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:47:39.273" endtime="20210322 17:47:39.274"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${phone_external_key}</var>
</assign>
<msg timestamp="20210322 17:47:39.275" level="INFO">${phone_external_key} = 15244d10eaa04bdbac18325cd45275c1</msg>
<status status="PASS" starttime="20210322 17:47:39.275" endtime="20210322 17:47:39.276"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${phone_external_key}</arg>
</arguments>
<msg timestamp="20210322 17:47:39.276" level="INFO">${phone_external_key} = 15244d10eaa04bdbac18325cd45275c1</msg>
<status status="PASS" starttime="20210322 17:47:39.276" endtime="20210322 17:47:39.277"></status>
</kw>
<status status="PASS" starttime="20210322 17:47:39.043" endtime="20210322 17:47:39.277"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 17:47:39.278" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:47:39.277" endtime="20210322 17:47:39.278"></status>
</kw>
<kw name="criar holder address" library="accreditation_post_holder_address">
<arguments>
<arg>Rio de Janeiro</arg>
<arg>Rio de Janeiro</arg>
<arg>Brasil</arg>
<arg>Bairro de Testes</arg>
<arg>Rua de Testes</arg>
<arg>90</arg>
<arg>apto 200</arg>
<arg>21550987</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:47:39.279" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 17:47:39.279" endtime="20210322 17:47:39.280"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"city": "${city}",</arg>
<arg>"state": "${state}",</arg>
<arg>"country": "${country}",</arg>
<arg>"neighborhood": "${neighborhood}",</arg>
<arg>"street": "${street}",</arg>
<arg>"number": "${number}",</arg>
<arg>"complement": "${complement}",</arg>
<arg>"postal_code": "${postal_code}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 17:47:39.281" level="INFO">${body} = { "city": "Rio de Janeiro", "state": "Rio de Janeiro", "country": "Brasil", "neighborhood": "Bairro de Testes", "street": "Rua de Testes", "number": "90", "complement": "apto 200", "postal_code": "215...</msg>
<status status="PASS" starttime="20210322 17:47:39.280" endtime="20210322 17:47:39.281"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/addresses</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:47:39.282" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/e24b61b00b744c6da2a0a8f2f64692d8/addresses, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "city": "Rio de Janeiro", "state": "Rio de Janeiro", "country": "Brasil", "neighborhood": "Bairro de Testes", "street": "Rua de Testes", "number": "90", "complement": "apto 200", "postal_code": "21550987" } 
json=None</msg>
<msg timestamp="20210322 17:47:39.522" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:47:39.281" endtime="20210322 17:47:39.522"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:47:39.523" level="INFO">{'id': '67664cb62f694e278d8204385eb1733b', 'street': 'Rua de Testes', 'number': '90', 'city': 'Rio de Janeiro', 'complement': 'apto 200', 'state': 'Rio de Janeiro', 'neighborhood': 'Bairro de Testes', 'postal_code': '21550987', 'country': 'Brasil', 'main': True, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/e24b61b00b744c6da2a0a8f2f64692d8/addresses/67664cb62f694e278d8204385eb1733b', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/e24b61b00b744c6da2a0a8f2f64692d8', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 17:47:39.522" endtime="20210322 17:47:39.523"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:47:39.524" level="INFO">344c8558f47f5f5b</msg>
<status status="PASS" starttime="20210322 17:47:39.524" endtime="20210322 17:47:39.525"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:47:39.526" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:47:39.525" endtime="20210322 17:47:39.526"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${address_external_key}</var>
</assign>
<msg timestamp="20210322 17:47:39.527" level="INFO">${address_external_key} = 67664cb62f694e278d8204385eb1733b</msg>
<status status="PASS" starttime="20210322 17:47:39.526" endtime="20210322 17:47:39.527"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${address_external_key}</arg>
</arguments>
<msg timestamp="20210322 17:47:39.528" level="INFO">${address_external_key} = 67664cb62f694e278d8204385eb1733b</msg>
<status status="PASS" starttime="20210322 17:47:39.528" endtime="20210322 17:47:39.528"></status>
</kw>
<status status="PASS" starttime="20210322 17:47:39.278" endtime="20210322 17:47:39.528"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 17:47:39.529" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:47:39.529" endtime="20210322 17:47:39.530"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>SELFIE</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:47:39.531" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 17:47:39.530" endtime="20210322 17:47:39.531"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 17:47:39.532" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 17:47:39.534" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 17:47:39.532" endtime="20210322 17:47:39.534"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:47:39.534" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/e24b61b00b744c6da2a0a8f2f64692d8/documents?type=SELFIE, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 17:47:39.813" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:47:39.534" endtime="20210322 17:47:39.813"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:47:39.814" level="INFO">{'id': '66e9b7da85d04887a32c39e8ad853f4f', 'document_type': 'selfie', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/e24b61b00b744c6da2a0a8f2f64692d8/documents/66e9b7da85d04887a32c39e8ad853f4f', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/e24b61b00b744c6da2a0a8f2f64692d8', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/e24b61b00b744c6da2a0a8f2f64692d8/documents/66e9b7da85d04887a32c39e8ad853f4f/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 17:47:39.813" endtime="20210322 17:47:39.815"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:47:39.816" level="INFO">c935d60a5238bfa1</msg>
<status status="PASS" starttime="20210322 17:47:39.815" endtime="20210322 17:47:39.816"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:47:39.817" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:47:39.817" endtime="20210322 17:47:39.818"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 17:47:39.819" level="INFO">${document_external_key} = 66e9b7da85d04887a32c39e8ad853f4f</msg>
<status status="PASS" starttime="20210322 17:47:39.818" endtime="20210322 17:47:39.819"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 17:47:39.821" level="INFO">${document_external_key} = 66e9b7da85d04887a32c39e8ad853f4f</msg>
<status status="PASS" starttime="20210322 17:47:39.820" endtime="20210322 17:47:39.821"></status>
</kw>
<status status="PASS" starttime="20210322 17:47:39.530" endtime="20210322 17:47:39.821"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 17:47:39.823" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:47:39.822" endtime="20210322 17:47:39.823"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>RG_FRENTE</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:47:39.825" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 17:47:39.825" endtime="20210322 17:47:39.825"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 17:47:39.826" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 17:47:39.828" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 17:47:39.826" endtime="20210322 17:47:39.828"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:47:39.830" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/e24b61b00b744c6da2a0a8f2f64692d8/documents?type=RG_FRENTE, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 17:47:40.155" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:47:39.829" endtime="20210322 17:47:40.155"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:47:40.157" level="INFO">{'id': 'b59d001915db42a2b807b58f4bad0949', 'document_type': 'rg_frente', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/e24b61b00b744c6da2a0a8f2f64692d8/documents/b59d001915db42a2b807b58f4bad0949', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/e24b61b00b744c6da2a0a8f2f64692d8', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/e24b61b00b744c6da2a0a8f2f64692d8/documents/b59d001915db42a2b807b58f4bad0949/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 17:47:40.156" endtime="20210322 17:47:40.158"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:47:40.160" level="INFO">75e0bd519d1d7030</msg>
<status status="PASS" starttime="20210322 17:47:40.159" endtime="20210322 17:47:40.160"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:47:40.162" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:47:40.161" endtime="20210322 17:47:40.163"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 17:47:40.165" level="INFO">${document_external_key} = b59d001915db42a2b807b58f4bad0949</msg>
<status status="PASS" starttime="20210322 17:47:40.163" endtime="20210322 17:47:40.166"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 17:47:40.168" level="INFO">${document_external_key} = b59d001915db42a2b807b58f4bad0949</msg>
<status status="PASS" starttime="20210322 17:47:40.166" endtime="20210322 17:47:40.168"></status>
</kw>
<status status="PASS" starttime="20210322 17:47:39.824" endtime="20210322 17:47:40.168"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 17:47:40.170" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:47:40.169" endtime="20210322 17:47:40.171"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>RG_VERSO</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:47:40.172" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 17:47:40.172" endtime="20210322 17:47:40.173"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 17:47:40.174" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 17:47:40.176" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 17:47:40.173" endtime="20210322 17:47:40.176"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:47:40.178" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/e24b61b00b744c6da2a0a8f2f64692d8/documents?type=RG_VERSO, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 17:47:40.465" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:47:40.176" endtime="20210322 17:47:40.465"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:47:40.467" level="INFO">{'id': '8ae6fbab21974c9ca6cd49b2a4a6d175', 'document_type': 'rg_verso', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/e24b61b00b744c6da2a0a8f2f64692d8/documents/8ae6fbab21974c9ca6cd49b2a4a6d175', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/e24b61b00b744c6da2a0a8f2f64692d8', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/e24b61b00b744c6da2a0a8f2f64692d8/documents/8ae6fbab21974c9ca6cd49b2a4a6d175/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 17:47:40.466" endtime="20210322 17:47:40.467"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:47:40.468" level="INFO">2d1ff6c2d94f2a2f</msg>
<status status="PASS" starttime="20210322 17:47:40.467" endtime="20210322 17:47:40.468"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:47:40.469" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:47:40.469" endtime="20210322 17:47:40.470"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 17:47:40.470" level="INFO">${document_external_key} = 8ae6fbab21974c9ca6cd49b2a4a6d175</msg>
<status status="PASS" starttime="20210322 17:47:40.470" endtime="20210322 17:47:40.470"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 17:47:40.472" level="INFO">${document_external_key} = 8ae6fbab21974c9ca6cd49b2a4a6d175</msg>
<status status="PASS" starttime="20210322 17:47:40.470" endtime="20210322 17:47:40.472"></status>
</kw>
<status status="PASS" starttime="20210322 17:47:40.171" endtime="20210322 17:47:40.472"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 17:47:40.473" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:47:40.473" endtime="20210322 17:47:40.473"></status>
</kw>
<kw name="solicitar aprovação do holder" library="accreditation_request_approval">
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:47:40.475" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 17:47:40.475" endtime="20210322 17:47:40.475"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/approval</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:47:40.476" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/e24b61b00b744c6da2a0a8f2f64692d8/approval, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data=None 
json=None</msg>
<msg timestamp="20210322 17:47:40.782" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 17:47:40.476" endtime="20210322 17:47:40.782"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:47:40.784" level="INFO">{'message': 'Approval request accepted successfully. Processing analysis'}</msg>
<status status="PASS" starttime="20210322 17:47:40.783" endtime="20210322 17:47:40.785"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:47:40.787" level="INFO">994dc8b50250842c</msg>
<status status="PASS" starttime="20210322 17:47:40.786" endtime="20210322 17:47:40.788"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:47:40.789" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 17:47:40.788" endtime="20210322 17:47:40.790"></status>
</kw>
<status status="PASS" starttime="20210322 17:47:40.474" endtime="20210322 17:47:40.790"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 17:47:40.791" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:47:40.790" endtime="20210322 17:47:40.791"></status>
</kw>
<kw name="recebendo notificação de aprovação" library="accreditation_risk_notification">
<kw name="Uuid 4" library="FakerLibrary">
<doc>Generates a random UUID4 string.
:param cast_to: Specify what type the UUID should be cast to. Default is `str`
:type cast_to: callable</doc>
<assign>
<var>${assessment_id}</var>
</assign>
<msg timestamp="20210322 17:47:40.794" level="INFO">${assessment_id} = 4368df7a-d0b3-4c3e-afa0-8886ddf2a092</msg>
<status status="PASS" starttime="20210322 17:47:40.793" endtime="20210322 17:47:40.794"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>year</arg>
</arguments>
<assign>
<var>${year}</var>
</assign>
<msg timestamp="20210322 17:47:40.795" level="INFO">${year} = 2021</msg>
<status status="PASS" starttime="20210322 17:47:40.794" endtime="20210322 17:47:40.795"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>month</arg>
</arguments>
<assign>
<var>${month}</var>
</assign>
<msg timestamp="20210322 17:47:40.796" level="INFO">${month} = 03</msg>
<status status="PASS" starttime="20210322 17:47:40.795" endtime="20210322 17:47:40.796"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>day</arg>
</arguments>
<assign>
<var>${day}</var>
</assign>
<msg timestamp="20210322 17:47:40.797" level="INFO">${day} = 22</msg>
<status status="PASS" starttime="20210322 17:47:40.796" endtime="20210322 17:47:40.797"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:47:40.798" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 17:47:40.797" endtime="20210322 17:47:40.798"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "risk.assessment.result",</arg>
<arg>"resource": "business.holder",</arg>
<arg>"created_at": "${year}-${month}-${day} 15:28:56.747Z",</arg>
<arg>"marketplace_id": "${marketplace_external_key}",</arg>
<arg>"object": {</arg>
<arg>"result": "APPROVED",</arg>
<arg>"holder_id": "${holder_external_key}",</arg>
<arg>"applicant_id": "${application_external_key}",</arg>
<arg>"assessment_id": "${assessment_id}"</arg>
<arg>}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 17:47:40.799" level="INFO">${body} = { "type": "risk.assessment.result", "resource": "business.holder", "created_at": "2021-03-22 15:28:56.747Z", "marketplace_id": "f71a8951368a4cc085cf7875ff44e61c", "object": { "result": "APPROVED", "ho...</msg>
<status status="PASS" starttime="20210322 17:47:40.798" endtime="20210322 17:47:40.799"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/admin/internal_operation/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/registration/approval</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:47:40.801" level="INFO">POST Request using : uri=/admin/internal_operation/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/e24b61b00b744c6da2a0a8f2f64692d8/registration/approval, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "risk.assessment.result", "resource": "business.holder", "created_at": "2021-03-22 15:28:56.747Z", "marketplace_id": "f71a8951368a4cc085cf7875ff44e61c", "object": { "result": "APPROVED", "holder_id": "e24b61b00b744c6da2a0a8f2f64692d8", "applicant_id": "bcc25a6751c14b52af1340d40dba78c5", "assessment_id": "4368df7a-d0b3-4c3e-afa0-8886ddf2a092" } } 
json=None</msg>
<msg timestamp="20210322 17:47:41.026" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 17:47:40.800" endtime="20210322 17:47:41.027"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:47:41.029" level="INFO">{'message': 'Holder approved successfully'}</msg>
<status status="PASS" starttime="20210322 17:47:41.028" endtime="20210322 17:47:41.029"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:47:41.031" level="INFO">02ad7d935bbfddb7</msg>
<status status="PASS" starttime="20210322 17:47:41.030" endtime="20210322 17:47:41.032"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:47:41.035" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 17:47:41.033" endtime="20210322 17:47:41.035"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 17:47:41.037" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:47:41.036" endtime="20210322 17:47:41.038"></status>
</kw>
<status status="PASS" starttime="20210322 17:47:40.792" endtime="20210322 17:47:41.038"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 17:47:41.040" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:47:41.039" endtime="20210322 17:47:41.040"></status>
</kw>
<kw name="buscar account por holder" library="accounts_get_accounts_by_holder">
<kw name="conectar accounts" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accounts</arg>
<arg>url=${account_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 17:47:41.043" level="INFO">Creating Session using : alias=accounts, url=https://banking-accounts-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 17:47:41.042" endtime="20210322 17:47:41.043"></status>
</kw>
<status status="PASS" starttime="20210322 17:47:41.041" endtime="20210322 17:47:41.044"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accounts</arg>
<arg>/marketplaces/${marketplace_external_key}/holders/${holder_external_key}/accounts</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:47:41.045" level="INFO">GET Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/holders/e24b61b00b744c6da2a0a8f2f64692d8/accounts, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 17:47:41.701" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 17:47:41.044" endtime="20210322 17:47:41.701"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:47:41.702" level="INFO">{'items': [{'id': '6eea188815a8447083b7b35a10ebb582', 'holder': 'e24b61b00b744c6da2a0a8f2f64692d8', 'balance': '0.00', 'currency': 'BRL', 'routing_number': '001', 'number': '6993365665', 'status': 'active', 'metadata': {}, 'created_at': '2021-03-22T20:47:42.191201', 'updated_at': '2021-03-22T20:47:42.191201', 'primary': True, 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'uri': '/v2/marketplaces/f71a8951368a4cc085cf7875ff44e61c/accounts/6eea188815a8447083b7b35a10ebb582', 'resource': 'payment_account'}], 'has_more': False, 'limit': 100, 'total_pages': 1, 'page': 1, 'offset': 0, 'total': '1', 'query_count': '1'}</msg>
<status status="PASS" starttime="20210322 17:47:41.702" endtime="20210322 17:47:41.703"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:47:41.704" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 17:47:41.703" endtime="20210322 17:47:41.704"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["id"]}</arg>
</arguments>
<assign>
<var>${account_external_key}</var>
</assign>
<msg timestamp="20210322 17:47:41.705" level="INFO">${account_external_key} = 6eea188815a8447083b7b35a10ebb582</msg>
<status status="PASS" starttime="20210322 17:47:41.704" endtime="20210322 17:47:41.705"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_external_key}</arg>
</arguments>
<msg timestamp="20210322 17:47:41.706" level="INFO">${account_external_key} = 6eea188815a8447083b7b35a10ebb582</msg>
<status status="PASS" starttime="20210322 17:47:41.706" endtime="20210322 17:47:41.706"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["number"]}</arg>
</arguments>
<assign>
<var>${account_number}</var>
</assign>
<msg timestamp="20210322 17:47:41.708" level="INFO">${account_number} = 6993365665</msg>
<status status="PASS" starttime="20210322 17:47:41.706" endtime="20210322 17:47:41.708"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_number}</arg>
</arguments>
<msg timestamp="20210322 17:47:41.708" level="INFO">${account_number} = 6993365665</msg>
<status status="PASS" starttime="20210322 17:47:41.708" endtime="20210322 17:47:41.709"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["routing_number"]}</arg>
</arguments>
<assign>
<var>${account_routing_number}</var>
</assign>
<msg timestamp="20210322 17:47:41.710" level="INFO">${account_routing_number} = 001</msg>
<status status="PASS" starttime="20210322 17:47:41.709" endtime="20210322 17:47:41.710"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_routing_number}</arg>
</arguments>
<msg timestamp="20210322 17:47:41.710" level="INFO">${account_routing_number} = 001</msg>
<status status="PASS" starttime="20210322 17:47:41.710" endtime="20210322 17:47:41.710"></status>
</kw>
<status status="PASS" starttime="20210322 17:47:41.040" endtime="20210322 17:47:41.711"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 17:47:41.711" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:47:41.711" endtime="20210322 17:47:41.711"></status>
</kw>
<status status="PASS" starttime="20210322 17:47:38.343" endtime="20210322 17:47:41.711"></status>
</kw>
<kw name="criar chave pix" library="pix_dict_create_entry">
<arguments>
<arg>type=email</arg>
<arg>value=${email_pix}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 17:47:41.712" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 17:47:41.712" endtime="20210322 17:47:41.713"></status>
</kw>
<status status="PASS" starttime="20210322 17:47:41.712" endtime="20210322 17:47:41.713"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${type}</arg>
</arguments>
<msg timestamp="20210322 17:47:41.713" level="INFO">${type} = email</msg>
<status status="PASS" starttime="20210322 17:47:41.713" endtime="20210322 17:47:41.713"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210322 17:47:41.714" level="INFO">${value} = cardosoyuri@santos.net</msg>
<status status="PASS" starttime="20210322 17:47:41.713" endtime="20210322 17:47:41.714"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:47:41.714" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 17:47:41.714" endtime="20210322 17:47:41.714"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "${type}",</arg>
<arg>"value": "${value}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 17:47:41.715" level="INFO">${body} = { "type": "email", "value": "cardosoyuri@santos.net" }</msg>
<status status="PASS" starttime="20210322 17:47:41.714" endtime="20210322 17:47:41.715"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:47:41.715" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/e24b61b00b744c6da2a0a8f2f64692d8/accounts/6eea188815a8447083b7b35a10ebb582/entries, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "email", "value": "cardosoyuri@santos.net" } 
json=None</msg>
<msg timestamp="20210322 17:47:42.424" level="INFO">${response} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20210322 17:47:41.715" endtime="20210322 17:47:42.424"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:47:42.427" level="INFO">{'id': '1a79f519dd4d48e6b8859a3055b26492', 'status': 'waiting_ownership_verification', 'created_at': '2021-03-22T05:47:43.618', 'updated_at': '2021-03-22T05:47:43.618', 'key': {'value': 'cardosoyuri@santos.net', 'type': 'email'}, 'account': {'id': '6eea188815a8447083b7b35a10ebb582', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': 'e24b61b00b744c6da2a0a8f2f64692d8', 'owner': {'name': 'Holder de teste', 'national_registration': '45719832041', 'type': 'individual'}, 'routing_number': '001', 'number': '6993365665', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}, 'resource': 'pix.entry'}</msg>
<status status="PASS" starttime="20210322 17:47:42.425" endtime="20210322 17:47:42.428"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:47:42.431" level="INFO">624dfba433efcfab</msg>
<status status="PASS" starttime="20210322 17:47:42.429" endtime="20210322 17:47:42.432"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 17:47:42.434" level="INFO">202</msg>
<status status="PASS" starttime="20210322 17:47:42.433" endtime="20210322 17:47:42.435"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:47:42.436" level="INFO">${response} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20210322 17:47:42.435" endtime="20210322 17:47:42.436"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${entry_external_key}</var>
</assign>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:47:42.438" endtime="20210322 17:47:42.439"></status>
</kw>
<msg timestamp="20210322 17:47:42.439" level="INFO">${entry_external_key} = 1a79f519dd4d48e6b8859a3055b26492</msg>
<status status="PASS" starttime="20210322 17:47:42.437" endtime="20210322 17:47:42.440"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${entry_external_key}</arg>
</arguments>
<msg timestamp="20210322 17:47:42.441" level="INFO">${entry_external_key} = 1a79f519dd4d48e6b8859a3055b26492</msg>
<status status="PASS" starttime="20210322 17:47:42.440" endtime="20210322 17:47:42.441"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["key"]["value"]}</arg>
</arguments>
<assign>
<var>${entry_key_value}</var>
</assign>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["key"]["value"]}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:47:42.442" endtime="20210322 17:47:42.443"></status>
</kw>
<msg timestamp="20210322 17:47:42.443" level="INFO">${entry_key_value} = cardosoyuri@santos.net</msg>
<status status="PASS" starttime="20210322 17:47:42.441" endtime="20210322 17:47:42.444"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${entry_key_value}</arg>
</arguments>
<msg timestamp="20210322 17:47:42.445" level="INFO">${entry_key_value} = cardosoyuri@santos.net</msg>
<status status="PASS" starttime="20210322 17:47:42.444" endtime="20210322 17:47:42.445"></status>
</kw>
<status status="PASS" starttime="20210322 17:47:41.711" endtime="20210322 17:47:42.445"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${holder_external_key}</arg>
</arguments>
<assign>
<var>${holder_claimer}</var>
</assign>
<msg timestamp="20210322 17:47:42.446" level="INFO">${holder_claimer} = e24b61b00b744c6da2a0a8f2f64692d8</msg>
<status status="PASS" starttime="20210322 17:47:42.445" endtime="20210322 17:47:42.446"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${holder_type}</arg>
</arguments>
<assign>
<var>${holder_type_claimer}</var>
</assign>
<msg timestamp="20210322 17:47:42.447" level="INFO">${holder_type_claimer} = individual</msg>
<status status="PASS" starttime="20210322 17:47:42.446" endtime="20210322 17:47:42.447"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${holder_name}</arg>
</arguments>
<assign>
<var>${holder_name_claimer}</var>
</assign>
<msg timestamp="20210322 17:47:42.448" level="INFO">${holder_name_claimer} = Holder de teste</msg>
<status status="PASS" starttime="20210322 17:47:42.447" endtime="20210322 17:47:42.448"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${national_registration}</arg>
</arguments>
<assign>
<var>${national_registration_claimer}</var>
</assign>
<msg timestamp="20210322 17:47:42.448" level="INFO">${national_registration_claimer} = 45719832041</msg>
<status status="PASS" starttime="20210322 17:47:42.448" endtime="20210322 17:47:42.449"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${account_external_key}</arg>
</arguments>
<assign>
<var>${account_claimer}</var>
</assign>
<msg timestamp="20210322 17:47:42.449" level="INFO">${account_claimer} = 6eea188815a8447083b7b35a10ebb582</msg>
<status status="PASS" starttime="20210322 17:47:42.449" endtime="20210322 17:47:42.449"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${account_number}</arg>
</arguments>
<assign>
<var>${account_number_claimer}</var>
</assign>
<msg timestamp="20210322 17:47:42.450" level="INFO">${account_number_claimer} = 6993365665</msg>
<status status="PASS" starttime="20210322 17:47:42.450" endtime="20210322 17:47:42.450"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${account_routing_number}</arg>
</arguments>
<assign>
<var>${account_routing_number_claimer}</var>
</assign>
<msg timestamp="20210322 17:47:42.451" level="INFO">${account_routing_number_claimer} = 001</msg>
<status status="PASS" starttime="20210322 17:47:42.450" endtime="20210322 17:47:42.451"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${entry_external_key}</arg>
</arguments>
<assign>
<var>${entry_claimer}</var>
</assign>
<msg timestamp="20210322 17:47:42.452" level="INFO">${entry_claimer} = 1a79f519dd4d48e6b8859a3055b26492</msg>
<status status="PASS" starttime="20210322 17:47:42.451" endtime="20210322 17:47:42.452"></status>
</kw>
<kw name="buscar verification code" library="pix_dict_verification_code">
<arguments>
<arg>holder_external_key=${holder_claimer}</arg>
<arg>account_external_key=${account_claimer}</arg>
<arg>entry_external_key=${entry_claimer}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 17:47:42.455" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 17:47:42.454" endtime="20210322 17:47:42.455"></status>
</kw>
<status status="PASS" starttime="20210322 17:47:42.453" endtime="20210322 17:47:42.456"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/admin/internal_operation/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries/${entry_external_key}/code</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:47:42.456" level="INFO">GET Request using : uri=/admin/internal_operation/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/e24b61b00b744c6da2a0a8f2f64692d8/accounts/6eea188815a8447083b7b35a10ebb582/entries/1a79f519dd4d48e6b8859a3055b26492/code, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 17:47:43.064" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 17:47:42.456" endtime="20210322 17:47:43.064"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:47:43.066" level="INFO">{'code': '1528'}</msg>
<status status="PASS" starttime="20210322 17:47:43.065" endtime="20210322 17:47:43.066"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:47:43.067" level="INFO">b37e744adb944b68</msg>
<status status="PASS" starttime="20210322 17:47:43.066" endtime="20210322 17:47:43.067"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 17:47:43.068" level="INFO">200</msg>
<status status="PASS" starttime="20210322 17:47:43.068" endtime="20210322 17:47:43.069"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:47:43.070" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 17:47:43.069" endtime="20210322 17:47:43.070"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["code"]}</arg>
</arguments>
<assign>
<var>${verification_code}</var>
</assign>
<msg timestamp="20210322 17:47:43.072" level="INFO">${verification_code} = 1528</msg>
<status status="PASS" starttime="20210322 17:47:43.071" endtime="20210322 17:47:43.072"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${verification_code}</arg>
</arguments>
<msg timestamp="20210322 17:47:43.073" level="INFO">${verification_code} = 1528</msg>
<status status="PASS" starttime="20210322 17:47:43.072" endtime="20210322 17:47:43.073"></status>
</kw>
<status status="PASS" starttime="20210322 17:47:42.452" endtime="20210322 17:47:43.073"></status>
</kw>
<kw name="confirmar propriedade da chave pix" library="pix_dict_confirm_propriety">
<arguments>
<arg>verification_code=${verification_code}</arg>
<arg>holder_external_key=${holder_claimer}</arg>
<arg>account_external_key=${account_claimer}</arg>
<arg>entry_external_key=${entry_claimer}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 17:47:43.075" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 17:47:43.075" endtime="20210322 17:47:43.076"></status>
</kw>
<status status="PASS" starttime="20210322 17:47:43.074" endtime="20210322 17:47:43.076"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:47:43.076" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 17:47:43.076" endtime="20210322 17:47:43.076"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"code": "${verification_code}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 17:47:43.077" level="INFO">${body} = { "code": "1528" }</msg>
<status status="PASS" starttime="20210322 17:47:43.077" endtime="20210322 17:47:43.077"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries/${entry_external_key}/ownership</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:47:43.078" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/e24b61b00b744c6da2a0a8f2f64692d8/accounts/6eea188815a8447083b7b35a10ebb582/entries/1a79f519dd4d48e6b8859a3055b26492/ownership, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "code": "1528" } 
json=None</msg>
<msg timestamp="20210322 17:47:44.520" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:47:43.077" endtime="20210322 17:47:44.520"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:47:44.521" level="INFO">{'id': '1a79f519dd4d48e6b8859a3055b26492', 'status': 'waiting_ownership_claiming', 'created_at': '2021-03-22T05:47:43.618', 'updated_at': '2021-03-22T05:47:45.737', 'key': {'value': 'cardosoyuri@santos.net', 'type': 'email'}, 'account': {'id': '6eea188815a8447083b7b35a10ebb582', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': 'e24b61b00b744c6da2a0a8f2f64692d8', 'owner': {'name': 'Holder de teste', 'national_registration': '45719832041', 'type': 'individual'}, 'routing_number': '001', 'number': '6993365665', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}, 'resource': 'pix.entry'}</msg>
<status status="PASS" starttime="20210322 17:47:44.520" endtime="20210322 17:47:44.521"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:47:44.522" level="INFO">c5ff3bdacc05bfa9</msg>
<status status="PASS" starttime="20210322 17:47:44.521" endtime="20210322 17:47:44.522"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 17:47:44.522" level="INFO">201</msg>
<status status="PASS" starttime="20210322 17:47:44.522" endtime="20210322 17:47:44.522"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:47:44.523" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:47:44.523" endtime="20210322 17:47:44.523"></status>
</kw>
<status status="PASS" starttime="20210322 17:47:43.074" endtime="20210322 17:47:44.523"></status>
</kw>
<kw name="validar chave pix" library="asserts">
<arguments>
<arg>key_status=waiting_ownership_claiming</arg>
<arg>key_type=${type}</arg>
<arg>key_value=${value}</arg>
<arg>account_external_key=${account_claimer}</arg>
<arg>marketplace_external_key=${marketplace_external_key}</arg>
<arg>holder_external_key=${holder_claimer}</arg>
<arg>account_number=${account_number_claimer}</arg>
<arg>account_routing_number=${account_routing_number_claimer}</arg>
<arg>account_type=CACC</arg>
<arg>owner_key_name=${holder_name_claimer}</arg>
<arg>national_registration=${national_registration_claimer}</arg>
<arg>holder_type=${holder_type}</arg>
<arg>psp_code=19468242</arg>
<arg>psp_name=Zoop Tecnologia e Meios de Pagamento S.A.</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar status da chave</arg>
</arguments>
<msg timestamp="20210322 17:47:44.525" level="INFO">Validar status da chave</msg>
<status status="PASS" starttime="20210322 17:47:44.525" endtime="20210322 17:47:44.525"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["status"]}</arg>
<arg>${key_status}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:47:44.525" endtime="20210322 17:47:44.526"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando Tipo da chave PIX</arg>
</arguments>
<msg timestamp="20210322 17:47:44.526" level="INFO">Validando Tipo da chave PIX</msg>
<status status="PASS" starttime="20210322 17:47:44.526" endtime="20210322 17:47:44.526"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["key"]["type"]}</arg>
<arg>${key_type}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:47:44.526" endtime="20210322 17:47:44.527"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando Valor da chave PIX</arg>
</arguments>
<msg timestamp="20210322 17:47:44.527" level="INFO">Validando Valor da chave PIX</msg>
<status status="PASS" starttime="20210322 17:47:44.527" endtime="20210322 17:47:44.527"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${type}' == 'evp'</arg>
<arg>Should Not Be Empty</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' != 'evp'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${key_value}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${key_value}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:47:44.528" endtime="20210322 17:47:44.528"></status>
</kw>
<status status="PASS" starttime="20210322 17:47:44.527" endtime="20210322 17:47:44.528"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando dados da conta</arg>
</arguments>
<msg timestamp="20210322 17:47:44.529" level="INFO">Validando dados da conta</msg>
<status status="PASS" starttime="20210322 17:47:44.529" endtime="20210322 17:47:44.529"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["id"]}</arg>
<arg>${account_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:47:44.529" endtime="20210322 17:47:44.530"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["marketplace"]}</arg>
<arg>${marketplace_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:47:44.530" endtime="20210322 17:47:44.530"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["holder"]}</arg>
<arg>${holder_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:47:44.530" endtime="20210322 17:47:44.531"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["number"]}</arg>
<arg>${account_number}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:47:44.531" endtime="20210322 17:47:44.531"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["routing_number"]}</arg>
<arg>${account_routing_number}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:47:44.532" endtime="20210322 17:47:44.532"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["type"]}</arg>
<arg>${account_type}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:47:44.532" endtime="20210322 17:47:44.532"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar Proprietário da Account Owner</arg>
</arguments>
<msg timestamp="20210322 17:47:44.533" level="INFO">Validar Proprietário da Account Owner</msg>
<status status="PASS" starttime="20210322 17:47:44.533" endtime="20210322 17:47:44.533"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["account"]["owner"]["name"]}</arg>
<arg>${owner_key_name}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:47:44.533" endtime="20210322 17:47:44.533"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar national_registration da Account Owner</arg>
</arguments>
<msg timestamp="20210322 17:47:44.534" level="INFO">Validar national_registration da Account Owner</msg>
<status status="PASS" starttime="20210322 17:47:44.534" endtime="20210322 17:47:44.534"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["account"]["owner"]["national_registration"]}</arg>
<arg>${national_registration}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:47:44.534" endtime="20210322 17:47:44.534"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar Holder Type do Account Owner</arg>
</arguments>
<msg timestamp="20210322 17:47:44.535" level="INFO">Validar Holder Type do Account Owner</msg>
<status status="PASS" starttime="20210322 17:47:44.535" endtime="20210322 17:47:44.535"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["account"]["owner"]["type"]}</arg>
<arg>${holder_type}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:47:44.535" endtime="20210322 17:47:44.535"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar PSP</arg>
</arguments>
<msg timestamp="20210322 17:47:44.537" level="INFO">Validar PSP</msg>
<status status="PASS" starttime="20210322 17:47:44.537" endtime="20210322 17:47:44.537"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["psp"]["code"]}</arg>
<arg>${psp_code}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:47:44.537" endtime="20210322 17:47:44.537"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["psp"]["name"]}</arg>
<arg>${psp_name}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:47:44.537" endtime="20210322 17:47:44.537"></status>
</kw>
<status status="PASS" starttime="20210322 17:47:44.523" endtime="20210322 17:47:44.537"></status>
</kw>
<kw name="criar reivindicação de posse" library="pix_dict_create_claims">
<arguments>
<arg>holder_external_key=${holder_claimer}</arg>
<arg>account_external_key=${account_claimer}</arg>
<arg>entry_external_key=${entry_claimer}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 17:47:44.539" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 17:47:44.539" endtime="20210322 17:47:44.539"></status>
</kw>
<status status="PASS" starttime="20210322 17:47:44.539" endtime="20210322 17:47:44.539"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries/${entry_external_key}/claims</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:47:44.539" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/e24b61b00b744c6da2a0a8f2f64692d8/accounts/6eea188815a8447083b7b35a10ebb582/entries/1a79f519dd4d48e6b8859a3055b26492/claims, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 17:47:46.209" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:47:44.539" endtime="20210322 17:47:46.209"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:47:46.209" level="INFO">{'id': '88f91f16081b43dc83b0d8fec51adfc4', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'created_at': '2021-03-22T05:47:47.421', 'updated_at': '2021-03-22T05:47:47.421', 'type': 'OWNERSHIP', 'status': 'open', 'key': {'value': 'cardosoyuri@santos.net', 'type': 'email'}, 'claimer': {'name': 'Holder de teste', 'national_registration': '45719832041', 'type': 'individual', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': 'e24b61b00b744c6da2a0a8f2f64692d8', 'account': {'digital_account_id': '6eea188815a8447083b7b35a10ebb582', 'routing_number': '001', 'number': '6993365665', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}}, 'donor': {'name': 'Holder de teste', 'national_registration': '71904283640', 'type': 'individual', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': '2741116fa6d24699b8a0887001096b3f', 'account': {'digital_account_id': '3dfb0f9e803740b4bbf3b459691eb2e8', 'routing_number': '001', 'number': '5760588565', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}}, 'completion_period_end': '2021-04-05T08:47:47.000', 'resolution_period_end': '2021-03-29T08:47:47.000', 'resource': 'pix.claim'}</msg>
<status status="PASS" starttime="20210322 17:47:46.209" endtime="20210322 17:47:46.209"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:47:46.210" level="INFO">465dd84a7df83057</msg>
<status status="PASS" starttime="20210322 17:47:46.210" endtime="20210322 17:47:46.210"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 17:47:46.210" level="INFO">201</msg>
<status status="PASS" starttime="20210322 17:47:46.210" endtime="20210322 17:47:46.210"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:47:46.211" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:47:46.210" endtime="20210322 17:47:46.211"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${claim_external_key}</var>
</assign>
<msg timestamp="20210322 17:47:46.211" level="INFO">${claim_external_key} = 88f91f16081b43dc83b0d8fec51adfc4</msg>
<status status="PASS" starttime="20210322 17:47:46.211" endtime="20210322 17:47:46.211"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${claim_external_key}</arg>
</arguments>
<msg timestamp="20210322 17:47:46.212" level="INFO">${claim_external_key} = 88f91f16081b43dc83b0d8fec51adfc4</msg>
<status status="PASS" starttime="20210322 17:47:46.212" endtime="20210322 17:47:46.212"></status>
</kw>
<status status="PASS" starttime="20210322 17:47:44.537" endtime="20210322 17:47:46.212"></status>
</kw>
<kw name="buscar reivindicação de posse" library="pix_dict_get_claims">
<arguments>
<arg>holder_external_key=${holder_claimer}</arg>
<arg>account_external_key=${account_claimer}</arg>
<arg>claim_external_key=${claim_external_key}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 17:47:46.213" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 17:47:46.213" endtime="20210322 17:47:46.213"></status>
</kw>
<status status="PASS" starttime="20210322 17:47:46.212" endtime="20210322 17:47:46.213"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/claims/${claim_external_key}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:47:46.214" level="INFO">GET Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/e24b61b00b744c6da2a0a8f2f64692d8/accounts/6eea188815a8447083b7b35a10ebb582/claims/88f91f16081b43dc83b0d8fec51adfc4, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 17:47:46.837" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 17:47:46.214" endtime="20210322 17:47:46.837"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:47:46.840" level="INFO">{'id': '88f91f16081b43dc83b0d8fec51adfc4', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'created_at': '2021-03-22T05:47:47.421', 'updated_at': '2021-03-22T05:47:47.421', 'type': 'OWNERSHIP', 'status': 'open', 'key': {'value': 'cardosoyuri@santos.net', 'type': 'email'}, 'claimer': {'name': 'Holder de teste', 'national_registration': '45719832041', 'type': 'individual', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': 'e24b61b00b744c6da2a0a8f2f64692d8', 'account': {'digital_account_id': '6eea188815a8447083b7b35a10ebb582', 'routing_number': '001', 'number': '6993365665', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}}, 'donor': {'name': 'Holder de teste', 'national_registration': '71904283640', 'type': 'individual', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': '2741116fa6d24699b8a0887001096b3f', 'account': {'digital_account_id': '3dfb0f9e803740b4bbf3b459691eb2e8', 'routing_number': '001', 'number': '5760588565', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}}, 'completion_period_end': '2021-04-05T08:47:47.000', 'resolution_period_end': '2021-03-29T08:47:47.000', 'resource': 'pix.claim'}</msg>
<status status="PASS" starttime="20210322 17:47:46.839" endtime="20210322 17:47:46.840"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:47:46.842" level="INFO">a011122dc9b09244</msg>
<status status="PASS" starttime="20210322 17:47:46.841" endtime="20210322 17:47:46.842"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 17:47:46.844" level="INFO">200</msg>
<status status="PASS" starttime="20210322 17:47:46.843" endtime="20210322 17:47:46.844"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:47:46.845" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 17:47:46.845" endtime="20210322 17:47:46.845"></status>
</kw>
<status status="PASS" starttime="20210322 17:47:46.212" endtime="20210322 17:47:46.846"></status>
</kw>
<kw name="validar reivindicação" library="asserts">
<arguments>
<arg>marketplace_external_key=${marketplace_external_key}</arg>
<arg>claim_type=OWNERSHIP</arg>
<arg>claim_status=open</arg>
<arg>key_value=${value}</arg>
<arg>key_type=${type}</arg>
<arg>claimer_name=${holder_name_claimer}</arg>
<arg>claimer_national_registration=${national_registration_claimer}</arg>
<arg>claimer_type=${holder_type_claimer}</arg>
<arg>claimer_marketplace=${marketplace_external_key}</arg>
<arg>claimer_holder_id=${holder_claimer}</arg>
<arg>claimer_account_id=${account_claimer}</arg>
<arg>claimer_routing_number=${account_routing_number_claimer}</arg>
<arg>claimer_account_number=${account_number_claimer}</arg>
<arg>claimer_account_type=CACC</arg>
<arg>claimer_psp_code=${psp_code}</arg>
<arg>claimer_psp_name=${psp_name}</arg>
<arg>donor_name=${holder_name_owner}</arg>
<arg>donor_national_registration=${national_registration_owner}</arg>
<arg>donor_type=${holder_type_owner}</arg>
<arg>donor_marketplace=${marketplace_external_key}</arg>
<arg>donor_holder_id=${holder_owner}</arg>
<arg>donor_account_id=${account_owner}</arg>
<arg>donor_routing_number=${account_routing_number_owner}</arg>
<arg>donor_account_number=${account_number_owner}</arg>
<arg>donor_account_type=CACC</arg>
<arg>donor_psp_code=${psp_code}</arg>
<arg>donor_psp_name=${psp_name}</arg>
<arg>claim_resource=pix.claim</arg>
</arguments>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<arguments>
<arg>result_format=datetime</arg>
</arguments>
<assign>
<var>${date}</var>
</assign>
<msg timestamp="20210322 17:47:46.850" level="INFO">${date} = 2021-03-22 17:47:46.849804</msg>
<status status="PASS" starttime="20210322 17:47:46.849" endtime="20210322 17:47:46.850"></status>
</kw>
<kw name="Convert Date" library="DateTime">
<doc>Converts between supported `date formats`.</doc>
<arguments>
<arg>${date}</arg>
<arg>exclude_millis=yes</arg>
<arg>result_format=%Y-%m-%d</arg>
<arg>date_format=%d-%m-%Y</arg>
</arguments>
<assign>
<var>${date}</var>
</assign>
<msg timestamp="20210322 17:47:46.851" level="INFO">${date} = 2021-03-22</msg>
<status status="PASS" starttime="20210322 17:47:46.850" endtime="20210322 17:47:46.851"></status>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${response.json()["id"]}</arg>
</arguments>
<msg timestamp="20210322 17:47:46.852" level="INFO">Length is 32</msg>
<status status="PASS" starttime="20210322 17:47:46.851" endtime="20210322 17:47:46.852"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["marketplace"]}</arg>
<arg>${marketplace_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:47:46.853" endtime="20210322 17:47:46.853"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response.json()["created_at"]}</arg>
<arg>${date}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:47:46.854" endtime="20210322 17:47:46.855"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response.json()["updated_at"]}</arg>
<arg>${date}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:47:46.855" endtime="20210322 17:47:46.855"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["type"]}</arg>
<arg>${claim_type}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:47:46.856" endtime="20210322 17:47:46.856"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["status"]}</arg>
<arg>${claim_status}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:47:46.856" endtime="20210322 17:47:46.857"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${key_value}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:47:46.857" endtime="20210322 17:47:46.858"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["key"]["type"]}</arg>
<arg>${key_type}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:47:46.858" endtime="20210322 17:47:46.859"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["claimer"]["name"]}</arg>
<arg>${claimer_name}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:47:46.859" endtime="20210322 17:47:46.860"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["claimer"]["national_registration"]}</arg>
<arg>${claimer_national_registration}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:47:46.860" endtime="20210322 17:47:46.861"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["claimer"]["type"]}</arg>
<arg>${claimer_type}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:47:46.861" endtime="20210322 17:47:46.861"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["claimer"]["marketplace"]}</arg>
<arg>${claimer_marketplace}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:47:46.862" endtime="20210322 17:47:46.862"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["claimer"]["holder"]}</arg>
<arg>${claimer_holder_id}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:47:46.862" endtime="20210322 17:47:46.863"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["claimer"]["account"]["digital_account_id"]}</arg>
<arg>${claimer_account_id}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:47:46.863" endtime="20210322 17:47:46.864"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["claimer"]["account"]["routing_number"]}</arg>
<arg>${claimer_routing_number}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:47:46.864" endtime="20210322 17:47:46.864"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["claimer"]["account"]["number"]}</arg>
<arg>${claimer_account_number}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:47:46.865" endtime="20210322 17:47:46.865"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["claimer"]["account"]["type"]}</arg>
<arg>${claimer_account_type}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:47:46.865" endtime="20210322 17:47:46.866"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["claimer"]["psp"]["code"]}</arg>
<arg>${claimer_psp_code}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:47:46.866" endtime="20210322 17:47:46.866"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["claimer"]["psp"]["name"]}</arg>
<arg>${claimer_psp_name}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:47:46.866" endtime="20210322 17:47:46.867"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["donor"]["name"]}</arg>
<arg>${donor_name}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:47:46.867" endtime="20210322 17:47:46.868"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["donor"]["national_registration"]}</arg>
<arg>${donor_national_registration}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:47:46.868" endtime="20210322 17:47:46.868"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["donor"]["type"]}</arg>
<arg>${donor_type}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:47:46.868" endtime="20210322 17:47:46.869"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["donor"]["marketplace"]}</arg>
<arg>${donor_marketplace}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:47:46.869" endtime="20210322 17:47:46.870"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["donor"]["holder"]}</arg>
<arg>${donor_holder_id}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:47:46.870" endtime="20210322 17:47:46.870"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["donor"]["account"]["digital_account_id"]}</arg>
<arg>${donor_account_id}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:47:46.870" endtime="20210322 17:47:46.871"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["donor"]["account"]["routing_number"]}</arg>
<arg>${donor_routing_number}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:47:46.871" endtime="20210322 17:47:46.872"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["donor"]["account"]["number"]}</arg>
<arg>${donor_account_number}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:47:46.872" endtime="20210322 17:47:46.872"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["donor"]["account"]["type"]}</arg>
<arg>${donor_account_type}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:47:46.872" endtime="20210322 17:47:46.873"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["donor"]["psp"]["code"]}</arg>
<arg>${donor_psp_code}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:47:46.873" endtime="20210322 17:47:46.873"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["donor"]["psp"]["name"]}</arg>
<arg>${donor_psp_name}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:47:46.874" endtime="20210322 17:47:46.874"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["resource"]}</arg>
<arg>${claim_resource}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:47:46.874" endtime="20210322 17:47:46.875"></status>
</kw>
<status status="PASS" starttime="20210322 17:47:46.846" endtime="20210322 17:47:46.875"></status>
</kw>
<kw name="receber notificação de reivindicação" library="pix_dict_receive_claim_notification">
<arguments>
<arg>key_pix=${value}</arg>
<arg>account_number=${account_number_owner}</arg>
<arg>claimer_tax_id=${national_registration_owner}</arg>
<arg>claimer_name=${holder_name_owner}</arg>
<arg>claim_external_key=${claim_external_key}</arg>
<arg>claim_notification_status=WAITING_RESOLUTION</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 17:47:46.876" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 17:47:46.876" endtime="20210322 17:47:46.877"></status>
</kw>
<status status="PASS" starttime="20210322 17:47:46.876" endtime="20210322 17:47:46.877"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:47:46.877" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 17:47:46.877" endtime="20210322 17:47:46.877"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"data": {</arg>
<arg>"claim": {</arg>
<arg>"type": "OWNERSHIP",</arg>
<arg>"key": "${key_pix}",</arg>
<arg>"key_type": "PHONE",</arg>
<arg>"claimer_account": {</arg>
<arg>"participant": "19468242",</arg>
<arg>"branch": "0001",</arg>
<arg>"account_number": "${account_number}",</arg>
<arg>"account_type": "CACC"</arg>
<arg>},</arg>
<arg>"claimer": {</arg>
<arg>"type": "NATURAL_PERSON",</arg>
<arg>"tax_id_number": "${claimer_tax_id}",</arg>
<arg>"name": "${claimer_name}"</arg>
<arg>},</arg>
<arg>"donor_participant": "19468242",</arg>
<arg>"id": "${claim_external_key}",</arg>
<arg>"status": "${claim_notification_status}",</arg>
<arg>"resolution_period_end": "2020-10-18T10:00:00.000Z",</arg>
<arg>"completion_period_end": "2020-10-25T10:00:00.000Z",</arg>
<arg>"last_modified": "2020-10-17T10:00:00.000Z"</arg>
<arg>}</arg>
<arg>}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 17:47:46.878" level="INFO">${body} = { "data": { "claim": { "type": "OWNERSHIP", "key": "cardosoyuri@santos.net", "key_type": "PHONE", "claimer_account": { "participant": "19468242", "branch": "0001", "account_number": "5760588565", "acc...</msg>
<status status="PASS" starttime="20210322 17:47:46.878" endtime="20210322 17:47:46.878"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/banking/internal/dict/claims</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:47:46.879" level="INFO">POST Request using : uri=/banking/internal/dict/claims, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "data": { "claim": { "type": "OWNERSHIP", "key": "cardosoyuri@santos.net", "key_type": "PHONE", "claimer_account": { "participant": "19468242", "branch": "0001", "account_number": "5760588565", "account_type": "CACC" }, "claimer": { "type": "NATURAL_PERSON", "tax_id_number": "71904283640", "name": "Holder de teste" }, "donor_participant": "19468242", "id": "88f91f16081b43dc83b0d8fec51adfc4", "status": "WAITING_RESOLUTION", "resolution_period_end": "2020-10-18T10:00:00.000Z", "completion_period_end": "2020-10-25T10:00:00.000Z", "last_modified": "2020-10-17T10:00:00.000Z" } } } 
json=None</msg>
<msg timestamp="20210322 17:47:47.539" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 17:47:46.878" endtime="20210322 17:47:47.539"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 17:47:47.540" level="INFO">200</msg>
<status status="PASS" starttime="20210322 17:47:47.540" endtime="20210322 17:47:47.541"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:47:47.542" level="INFO">a5257743e659e422</msg>
<status status="PASS" starttime="20210322 17:47:47.541" endtime="20210322 17:47:47.542"></status>
</kw>
<status status="PASS" starttime="20210322 17:47:46.875" endtime="20210322 17:47:47.542"></status>
</kw>
<kw name="buscar reivindicação de posse" library="pix_dict_get_claims">
<arguments>
<arg>holder_external_key=${holder_claimer}</arg>
<arg>account_external_key=${account_claimer}</arg>
<arg>claim_external_key=${claim_external_key}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 17:47:47.546" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 17:47:47.545" endtime="20210322 17:47:47.547"></status>
</kw>
<status status="PASS" starttime="20210322 17:47:47.544" endtime="20210322 17:47:47.547"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/claims/${claim_external_key}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:47:47.548" level="INFO">GET Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/e24b61b00b744c6da2a0a8f2f64692d8/accounts/6eea188815a8447083b7b35a10ebb582/claims/88f91f16081b43dc83b0d8fec51adfc4, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 17:47:48.159" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 17:47:47.547" endtime="20210322 17:47:48.159"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:47:48.162" level="INFO">{'id': '88f91f16081b43dc83b0d8fec51adfc4', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'created_at': '2021-03-22T05:47:47.421', 'updated_at': '2021-03-22T05:47:48.753', 'type': 'OWNERSHIP', 'status': 'waiting_resolution', 'key': {'value': 'cardosoyuri@santos.net', 'type': 'email'}, 'claimer': {'name': 'Holder de teste', 'national_registration': '45719832041', 'type': 'individual', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': 'e24b61b00b744c6da2a0a8f2f64692d8', 'account': {'digital_account_id': '6eea188815a8447083b7b35a10ebb582', 'routing_number': '001', 'number': '6993365665', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}}, 'donor': {'name': 'Holder de teste', 'national_registration': '71904283640', 'type': 'individual', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': '2741116fa6d24699b8a0887001096b3f', 'account': {'digital_account_id': '3dfb0f9e803740b4bbf3b459691eb2e8', 'routing_number': '001', 'number': '5760588565', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}}, 'completion_period_end': '2021-04-05T08:47:47.000', 'resolution_period_end': '2021-03-29T08:47:47.000', 'resource': 'pix.claim'}</msg>
<status status="PASS" starttime="20210322 17:47:48.160" endtime="20210322 17:47:48.163"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:47:48.165" level="INFO">4a99e288be369fd8</msg>
<status status="PASS" starttime="20210322 17:47:48.163" endtime="20210322 17:47:48.165"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 17:47:48.167" level="INFO">200</msg>
<status status="PASS" starttime="20210322 17:47:48.166" endtime="20210322 17:47:48.167"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:47:48.169" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 17:47:48.168" endtime="20210322 17:47:48.169"></status>
</kw>
<status status="PASS" starttime="20210322 17:47:47.543" endtime="20210322 17:47:48.170"></status>
</kw>
<kw name="validar reivindicação" library="asserts">
<arguments>
<arg>marketplace_external_key=${marketplace_external_key}</arg>
<arg>claim_type=OWNERSHIP</arg>
<arg>claim_status=waiting_resolution</arg>
<arg>key_value=${value}</arg>
<arg>key_type=${type}</arg>
<arg>claimer_name=${holder_name_claimer}</arg>
<arg>claimer_national_registration=${national_registration_claimer}</arg>
<arg>claimer_type=${holder_type_claimer}</arg>
<arg>claimer_marketplace=${marketplace_external_key}</arg>
<arg>claimer_holder_id=${holder_claimer}</arg>
<arg>claimer_account_id=${account_claimer}</arg>
<arg>claimer_routing_number=${account_routing_number_claimer}</arg>
<arg>claimer_account_number=${account_number_claimer}</arg>
<arg>claimer_account_type=CACC</arg>
<arg>claimer_psp_code=${psp_code}</arg>
<arg>claimer_psp_name=${psp_name}</arg>
<arg>donor_name=${holder_name_owner}</arg>
<arg>donor_national_registration=${national_registration_owner}</arg>
<arg>donor_type=${holder_type_owner}</arg>
<arg>donor_marketplace=${marketplace_external_key}</arg>
<arg>donor_holder_id=${holder_owner}</arg>
<arg>donor_account_id=${account_owner}</arg>
<arg>donor_routing_number=${account_routing_number_owner}</arg>
<arg>donor_account_number=${account_number_owner}</arg>
<arg>donor_account_type=CACC</arg>
<arg>donor_psp_code=${psp_code}</arg>
<arg>donor_psp_name=${psp_name}</arg>
<arg>claim_resource=pix.claim</arg>
</arguments>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<arguments>
<arg>result_format=datetime</arg>
</arguments>
<assign>
<var>${date}</var>
</assign>
<msg timestamp="20210322 17:47:48.176" level="INFO">${date} = 2021-03-22 17:47:48.176318</msg>
<status status="PASS" starttime="20210322 17:47:48.175" endtime="20210322 17:47:48.176"></status>
</kw>
<kw name="Convert Date" library="DateTime">
<doc>Converts between supported `date formats`.</doc>
<arguments>
<arg>${date}</arg>
<arg>exclude_millis=yes</arg>
<arg>result_format=%Y-%m-%d</arg>
<arg>date_format=%d-%m-%Y</arg>
</arguments>
<assign>
<var>${date}</var>
</assign>
<msg timestamp="20210322 17:47:48.178" level="INFO">${date} = 2021-03-22</msg>
<status status="PASS" starttime="20210322 17:47:48.177" endtime="20210322 17:47:48.178"></status>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${response.json()["id"]}</arg>
</arguments>
<msg timestamp="20210322 17:47:48.179" level="INFO">Length is 32</msg>
<status status="PASS" starttime="20210322 17:47:48.178" endtime="20210322 17:47:48.179"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["marketplace"]}</arg>
<arg>${marketplace_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:47:48.180" endtime="20210322 17:47:48.181"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response.json()["created_at"]}</arg>
<arg>${date}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:47:48.181" endtime="20210322 17:47:48.182"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response.json()["updated_at"]}</arg>
<arg>${date}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:47:48.182" endtime="20210322 17:47:48.183"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["type"]}</arg>
<arg>${claim_type}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:47:48.183" endtime="20210322 17:47:48.184"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["status"]}</arg>
<arg>${claim_status}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:47:48.184" endtime="20210322 17:47:48.185"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${key_value}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:47:48.186" endtime="20210322 17:47:48.186"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["key"]["type"]}</arg>
<arg>${key_type}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:47:48.187" endtime="20210322 17:47:48.188"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["claimer"]["name"]}</arg>
<arg>${claimer_name}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:47:48.188" endtime="20210322 17:47:48.189"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["claimer"]["national_registration"]}</arg>
<arg>${claimer_national_registration}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:47:48.190" endtime="20210322 17:47:48.190"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["claimer"]["type"]}</arg>
<arg>${claimer_type}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:47:48.191" endtime="20210322 17:47:48.192"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["claimer"]["marketplace"]}</arg>
<arg>${claimer_marketplace}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:47:48.192" endtime="20210322 17:47:48.193"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["claimer"]["holder"]}</arg>
<arg>${claimer_holder_id}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:47:48.193" endtime="20210322 17:47:48.194"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["claimer"]["account"]["digital_account_id"]}</arg>
<arg>${claimer_account_id}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:47:48.195" endtime="20210322 17:47:48.196"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["claimer"]["account"]["routing_number"]}</arg>
<arg>${claimer_routing_number}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:47:48.196" endtime="20210322 17:47:48.197"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["claimer"]["account"]["number"]}</arg>
<arg>${claimer_account_number}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:47:48.198" endtime="20210322 17:47:48.199"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["claimer"]["account"]["type"]}</arg>
<arg>${claimer_account_type}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:47:48.199" endtime="20210322 17:47:48.200"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["claimer"]["psp"]["code"]}</arg>
<arg>${claimer_psp_code}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:47:48.201" endtime="20210322 17:47:48.202"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["claimer"]["psp"]["name"]}</arg>
<arg>${claimer_psp_name}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:47:48.202" endtime="20210322 17:47:48.203"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["donor"]["name"]}</arg>
<arg>${donor_name}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:47:48.204" endtime="20210322 17:47:48.205"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["donor"]["national_registration"]}</arg>
<arg>${donor_national_registration}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:47:48.205" endtime="20210322 17:47:48.206"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["donor"]["type"]}</arg>
<arg>${donor_type}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:47:48.206" endtime="20210322 17:47:48.207"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["donor"]["marketplace"]}</arg>
<arg>${donor_marketplace}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:47:48.208" endtime="20210322 17:47:48.209"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["donor"]["holder"]}</arg>
<arg>${donor_holder_id}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:47:48.209" endtime="20210322 17:47:48.210"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["donor"]["account"]["digital_account_id"]}</arg>
<arg>${donor_account_id}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:47:48.210" endtime="20210322 17:47:48.212"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["donor"]["account"]["routing_number"]}</arg>
<arg>${donor_routing_number}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:47:48.213" endtime="20210322 17:47:48.213"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["donor"]["account"]["number"]}</arg>
<arg>${donor_account_number}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:47:48.214" endtime="20210322 17:47:48.215"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["donor"]["account"]["type"]}</arg>
<arg>${donor_account_type}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:47:48.215" endtime="20210322 17:47:48.216"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["donor"]["psp"]["code"]}</arg>
<arg>${donor_psp_code}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:47:48.216" endtime="20210322 17:47:48.217"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["donor"]["psp"]["name"]}</arg>
<arg>${donor_psp_name}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:47:48.218" endtime="20210322 17:47:48.218"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["resource"]}</arg>
<arg>${claim_resource}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:47:48.219" endtime="20210322 17:47:48.220"></status>
</kw>
<status status="PASS" starttime="20210322 17:47:48.170" endtime="20210322 17:47:48.220"></status>
</kw>
<kw name="${index} IN RANGE [ 60 ]" type="for">
<kw name="${index} = 0" type="foritem">
<kw name="confirmar reivindicação de posse" library="pix_dict_confirm_claims">
<arguments>
<arg>holder_external_key=${holder_owner}</arg>
<arg>account_external_key=${account_owner}</arg>
<arg>claim_external_key=${claim_external_key}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 17:47:48.223" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 17:47:48.223" endtime="20210322 17:47:48.224"></status>
</kw>
<status status="PASS" starttime="20210322 17:47:48.222" endtime="20210322 17:47:48.224"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/claims/${claim_external_key}/confirm</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:47:48.225" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/2741116fa6d24699b8a0887001096b3f/accounts/3dfb0f9e803740b4bbf3b459691eb2e8/claims/88f91f16081b43dc83b0d8fec51adfc4/confirm, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 17:47:49.849" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20210322 17:47:48.225" endtime="20210322 17:47:49.849"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:47:49.852" level="INFO">{'code': 9997, 'status': 'bad_request', 'type': 'integration_error', 'message': 'Claim operation invalid', 'category': 'unexpected', 'status_code': 400}</msg>
<status status="PASS" starttime="20210322 17:47:49.850" endtime="20210322 17:47:49.852"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:47:49.855" level="INFO">4c6794364ed1da5b</msg>
<status status="PASS" starttime="20210322 17:47:49.853" endtime="20210322 17:47:49.855"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 17:47:49.857" level="INFO">400</msg>
<status status="PASS" starttime="20210322 17:47:49.856" endtime="20210322 17:47:49.857"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:47:49.860" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20210322 17:47:49.858" endtime="20210322 17:47:49.860"></status>
</kw>
<status status="PASS" starttime="20210322 17:47:48.221" endtime="20210322 17:47:49.860"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${response.json()["message"]}' == 'Claim confirmed successfully'</arg>
</arguments>
<status status="PASS" starttime="20210322 17:47:49.862" endtime="20210322 17:47:49.863"></status>
</kw>
<status status="PASS" starttime="20210322 17:47:48.221" endtime="20210322 17:47:49.863"></status>
</kw>
<kw name="${index} = 1" type="foritem">
<kw name="confirmar reivindicação de posse" library="pix_dict_confirm_claims">
<arguments>
<arg>holder_external_key=${holder_owner}</arg>
<arg>account_external_key=${account_owner}</arg>
<arg>claim_external_key=${claim_external_key}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 17:47:49.867" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 17:47:49.866" endtime="20210322 17:47:49.868"></status>
</kw>
<status status="PASS" starttime="20210322 17:47:49.865" endtime="20210322 17:47:49.868"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/claims/${claim_external_key}/confirm</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:47:49.870" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/2741116fa6d24699b8a0887001096b3f/accounts/3dfb0f9e803740b4bbf3b459691eb2e8/claims/88f91f16081b43dc83b0d8fec51adfc4/confirm, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 17:47:51.451" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20210322 17:47:49.868" endtime="20210322 17:47:51.451"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:47:51.454" level="INFO">{'code': 9997, 'status': 'bad_request', 'type': 'integration_error', 'message': 'Claim operation invalid', 'category': 'unexpected', 'status_code': 400}</msg>
<status status="PASS" starttime="20210322 17:47:51.452" endtime="20210322 17:47:51.454"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:47:51.456" level="INFO">3604e02068b0af1f</msg>
<status status="PASS" starttime="20210322 17:47:51.455" endtime="20210322 17:47:51.456"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 17:47:51.458" level="INFO">400</msg>
<status status="PASS" starttime="20210322 17:47:51.457" endtime="20210322 17:47:51.459"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:47:51.460" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20210322 17:47:51.459" endtime="20210322 17:47:51.460"></status>
</kw>
<status status="PASS" starttime="20210322 17:47:49.864" endtime="20210322 17:47:51.461"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${response.json()["message"]}' == 'Claim confirmed successfully'</arg>
</arguments>
<status status="PASS" starttime="20210322 17:47:51.461" endtime="20210322 17:47:51.463"></status>
</kw>
<status status="PASS" starttime="20210322 17:47:49.863" endtime="20210322 17:47:51.463"></status>
</kw>
<kw name="${index} = 2" type="foritem">
<kw name="confirmar reivindicação de posse" library="pix_dict_confirm_claims">
<arguments>
<arg>holder_external_key=${holder_owner}</arg>
<arg>account_external_key=${account_owner}</arg>
<arg>claim_external_key=${claim_external_key}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 17:47:51.466" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 17:47:51.465" endtime="20210322 17:47:51.466"></status>
</kw>
<status status="PASS" starttime="20210322 17:47:51.465" endtime="20210322 17:47:51.467"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/claims/${claim_external_key}/confirm</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:47:51.468" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/2741116fa6d24699b8a0887001096b3f/accounts/3dfb0f9e803740b4bbf3b459691eb2e8/claims/88f91f16081b43dc83b0d8fec51adfc4/confirm, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 17:47:53.251" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20210322 17:47:51.467" endtime="20210322 17:47:53.251"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:47:53.252" level="INFO">{'code': 9997, 'status': 'bad_request', 'type': 'integration_error', 'message': 'Claim operation invalid', 'category': 'unexpected', 'status_code': 400}</msg>
<status status="PASS" starttime="20210322 17:47:53.252" endtime="20210322 17:47:53.253"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:47:53.254" level="INFO">33d7961bd4eaec42</msg>
<status status="PASS" starttime="20210322 17:47:53.253" endtime="20210322 17:47:53.255"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 17:47:53.256" level="INFO">400</msg>
<status status="PASS" starttime="20210322 17:47:53.255" endtime="20210322 17:47:53.256"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:47:53.257" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20210322 17:47:53.256" endtime="20210322 17:47:53.257"></status>
</kw>
<status status="PASS" starttime="20210322 17:47:51.463" endtime="20210322 17:47:53.257"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${response.json()["message"]}' == 'Claim confirmed successfully'</arg>
</arguments>
<status status="PASS" starttime="20210322 17:47:53.258" endtime="20210322 17:47:53.259"></status>
</kw>
<status status="PASS" starttime="20210322 17:47:51.463" endtime="20210322 17:47:53.259"></status>
</kw>
<kw name="${index} = 3" type="foritem">
<kw name="confirmar reivindicação de posse" library="pix_dict_confirm_claims">
<arguments>
<arg>holder_external_key=${holder_owner}</arg>
<arg>account_external_key=${account_owner}</arg>
<arg>claim_external_key=${claim_external_key}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 17:47:53.262" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 17:47:53.261" endtime="20210322 17:47:53.263"></status>
</kw>
<status status="PASS" starttime="20210322 17:47:53.261" endtime="20210322 17:47:53.263"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/claims/${claim_external_key}/confirm</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:47:53.264" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/2741116fa6d24699b8a0887001096b3f/accounts/3dfb0f9e803740b4bbf3b459691eb2e8/claims/88f91f16081b43dc83b0d8fec51adfc4/confirm, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 17:47:55.033" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20210322 17:47:53.263" endtime="20210322 17:47:55.033"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:47:55.035" level="INFO">{'code': 9997, 'status': 'bad_request', 'type': 'integration_error', 'message': 'Claim operation invalid', 'category': 'unexpected', 'status_code': 400}</msg>
<status status="PASS" starttime="20210322 17:47:55.034" endtime="20210322 17:47:55.035"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:47:55.036" level="INFO">d227963ced107d66</msg>
<status status="PASS" starttime="20210322 17:47:55.035" endtime="20210322 17:47:55.036"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 17:47:55.037" level="INFO">400</msg>
<status status="PASS" starttime="20210322 17:47:55.036" endtime="20210322 17:47:55.037"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:47:55.038" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20210322 17:47:55.038" endtime="20210322 17:47:55.038"></status>
</kw>
<status status="PASS" starttime="20210322 17:47:53.259" endtime="20210322 17:47:55.038"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${response.json()["message"]}' == 'Claim confirmed successfully'</arg>
</arguments>
<status status="PASS" starttime="20210322 17:47:55.039" endtime="20210322 17:47:55.040"></status>
</kw>
<status status="PASS" starttime="20210322 17:47:53.259" endtime="20210322 17:47:55.040"></status>
</kw>
<kw name="${index} = 4" type="foritem">
<kw name="confirmar reivindicação de posse" library="pix_dict_confirm_claims">
<arguments>
<arg>holder_external_key=${holder_owner}</arg>
<arg>account_external_key=${account_owner}</arg>
<arg>claim_external_key=${claim_external_key}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 17:47:55.042" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 17:47:55.042" endtime="20210322 17:47:55.043"></status>
</kw>
<status status="PASS" starttime="20210322 17:47:55.041" endtime="20210322 17:47:55.043"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/claims/${claim_external_key}/confirm</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:47:55.044" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/2741116fa6d24699b8a0887001096b3f/accounts/3dfb0f9e803740b4bbf3b459691eb2e8/claims/88f91f16081b43dc83b0d8fec51adfc4/confirm, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 17:47:56.621" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20210322 17:47:55.043" endtime="20210322 17:47:56.621"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:47:56.624" level="INFO">{'code': 9997, 'status': 'bad_request', 'type': 'integration_error', 'message': 'Claim operation invalid', 'category': 'unexpected', 'status_code': 400}</msg>
<status status="PASS" starttime="20210322 17:47:56.623" endtime="20210322 17:47:56.624"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:47:56.627" level="INFO">d48c2734864b1a01</msg>
<status status="PASS" starttime="20210322 17:47:56.625" endtime="20210322 17:47:56.628"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 17:47:56.629" level="INFO">400</msg>
<status status="PASS" starttime="20210322 17:47:56.628" endtime="20210322 17:47:56.630"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:47:56.632" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20210322 17:47:56.631" endtime="20210322 17:47:56.632"></status>
</kw>
<status status="PASS" starttime="20210322 17:47:55.040" endtime="20210322 17:47:56.633"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${response.json()["message"]}' == 'Claim confirmed successfully'</arg>
</arguments>
<status status="PASS" starttime="20210322 17:47:56.633" endtime="20210322 17:47:56.634"></status>
</kw>
<status status="PASS" starttime="20210322 17:47:55.040" endtime="20210322 17:47:56.635"></status>
</kw>
<kw name="${index} = 5" type="foritem">
<kw name="confirmar reivindicação de posse" library="pix_dict_confirm_claims">
<arguments>
<arg>holder_external_key=${holder_owner}</arg>
<arg>account_external_key=${account_owner}</arg>
<arg>claim_external_key=${claim_external_key}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 17:47:56.638" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 17:47:56.638" endtime="20210322 17:47:56.639"></status>
</kw>
<status status="PASS" starttime="20210322 17:47:56.637" endtime="20210322 17:47:56.640"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/claims/${claim_external_key}/confirm</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:47:56.641" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/2741116fa6d24699b8a0887001096b3f/accounts/3dfb0f9e803740b4bbf3b459691eb2e8/claims/88f91f16081b43dc83b0d8fec51adfc4/confirm, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 17:47:58.351" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20210322 17:47:56.640" endtime="20210322 17:47:58.351"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:47:58.354" level="INFO">{'code': 9997, 'status': 'bad_request', 'type': 'integration_error', 'message': 'Claim operation invalid', 'category': 'unexpected', 'status_code': 400}</msg>
<status status="PASS" starttime="20210322 17:47:58.352" endtime="20210322 17:47:58.354"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:47:58.357" level="INFO">8a8c6bd87d3ca3be</msg>
<status status="PASS" starttime="20210322 17:47:58.355" endtime="20210322 17:47:58.357"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 17:47:58.359" level="INFO">400</msg>
<status status="PASS" starttime="20210322 17:47:58.358" endtime="20210322 17:47:58.360"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:47:58.362" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20210322 17:47:58.361" endtime="20210322 17:47:58.362"></status>
</kw>
<status status="PASS" starttime="20210322 17:47:56.635" endtime="20210322 17:47:58.362"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${response.json()["message"]}' == 'Claim confirmed successfully'</arg>
</arguments>
<status status="PASS" starttime="20210322 17:47:58.363" endtime="20210322 17:47:58.364"></status>
</kw>
<status status="PASS" starttime="20210322 17:47:56.635" endtime="20210322 17:47:58.364"></status>
</kw>
<kw name="${index} = 6" type="foritem">
<kw name="confirmar reivindicação de posse" library="pix_dict_confirm_claims">
<arguments>
<arg>holder_external_key=${holder_owner}</arg>
<arg>account_external_key=${account_owner}</arg>
<arg>claim_external_key=${claim_external_key}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 17:47:58.367" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 17:47:58.367" endtime="20210322 17:47:58.368"></status>
</kw>
<status status="PASS" starttime="20210322 17:47:58.366" endtime="20210322 17:47:58.368"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/claims/${claim_external_key}/confirm</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:47:58.370" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/2741116fa6d24699b8a0887001096b3f/accounts/3dfb0f9e803740b4bbf3b459691eb2e8/claims/88f91f16081b43dc83b0d8fec51adfc4/confirm, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 17:48:00.126" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20210322 17:47:58.369" endtime="20210322 17:48:00.126"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:48:00.127" level="INFO">{'code': 9997, 'status': 'bad_request', 'type': 'integration_error', 'message': 'Claim operation invalid', 'category': 'unexpected', 'status_code': 400}</msg>
<status status="PASS" starttime="20210322 17:48:00.127" endtime="20210322 17:48:00.127"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:48:00.129" level="INFO">64c14cde7b3ec97f</msg>
<status status="PASS" starttime="20210322 17:48:00.128" endtime="20210322 17:48:00.129"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 17:48:00.130" level="INFO">400</msg>
<status status="PASS" starttime="20210322 17:48:00.129" endtime="20210322 17:48:00.130"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:48:00.131" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20210322 17:48:00.130" endtime="20210322 17:48:00.131"></status>
</kw>
<status status="PASS" starttime="20210322 17:47:58.365" endtime="20210322 17:48:00.131"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${response.json()["message"]}' == 'Claim confirmed successfully'</arg>
</arguments>
<status status="PASS" starttime="20210322 17:48:00.132" endtime="20210322 17:48:00.133"></status>
</kw>
<status status="PASS" starttime="20210322 17:47:58.364" endtime="20210322 17:48:00.133"></status>
</kw>
<kw name="${index} = 7" type="foritem">
<kw name="confirmar reivindicação de posse" library="pix_dict_confirm_claims">
<arguments>
<arg>holder_external_key=${holder_owner}</arg>
<arg>account_external_key=${account_owner}</arg>
<arg>claim_external_key=${claim_external_key}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 17:48:00.136" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 17:48:00.136" endtime="20210322 17:48:00.137"></status>
</kw>
<status status="PASS" starttime="20210322 17:48:00.135" endtime="20210322 17:48:00.137"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/claims/${claim_external_key}/confirm</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:48:00.139" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/2741116fa6d24699b8a0887001096b3f/accounts/3dfb0f9e803740b4bbf3b459691eb2e8/claims/88f91f16081b43dc83b0d8fec51adfc4/confirm, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 17:48:02.000" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20210322 17:48:00.138" endtime="20210322 17:48:02.000"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:48:02.003" level="INFO">{'code': 9997, 'status': 'bad_request', 'type': 'integration_error', 'message': 'Claim operation invalid', 'category': 'unexpected', 'status_code': 400}</msg>
<status status="PASS" starttime="20210322 17:48:02.001" endtime="20210322 17:48:02.004"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:48:02.006" level="INFO">c08acdd7923f7060</msg>
<status status="PASS" starttime="20210322 17:48:02.005" endtime="20210322 17:48:02.007"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 17:48:02.009" level="INFO">400</msg>
<status status="PASS" starttime="20210322 17:48:02.008" endtime="20210322 17:48:02.009"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:48:02.011" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20210322 17:48:02.010" endtime="20210322 17:48:02.011"></status>
</kw>
<status status="PASS" starttime="20210322 17:48:00.134" endtime="20210322 17:48:02.011"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${response.json()["message"]}' == 'Claim confirmed successfully'</arg>
</arguments>
<status status="PASS" starttime="20210322 17:48:02.012" endtime="20210322 17:48:02.013"></status>
</kw>
<status status="PASS" starttime="20210322 17:48:00.133" endtime="20210322 17:48:02.013"></status>
</kw>
<kw name="${index} = 8" type="foritem">
<kw name="confirmar reivindicação de posse" library="pix_dict_confirm_claims">
<arguments>
<arg>holder_external_key=${holder_owner}</arg>
<arg>account_external_key=${account_owner}</arg>
<arg>claim_external_key=${claim_external_key}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 17:48:02.016" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 17:48:02.016" endtime="20210322 17:48:02.017"></status>
</kw>
<status status="PASS" starttime="20210322 17:48:02.015" endtime="20210322 17:48:02.017"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/claims/${claim_external_key}/confirm</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:48:02.018" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/2741116fa6d24699b8a0887001096b3f/accounts/3dfb0f9e803740b4bbf3b459691eb2e8/claims/88f91f16081b43dc83b0d8fec51adfc4/confirm, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 17:48:03.786" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20210322 17:48:02.018" endtime="20210322 17:48:03.786"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:48:03.789" level="INFO">{'code': 9997, 'status': 'bad_request', 'type': 'integration_error', 'message': 'Claim operation invalid', 'category': 'unexpected', 'status_code': 400}</msg>
<status status="PASS" starttime="20210322 17:48:03.788" endtime="20210322 17:48:03.790"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:48:03.792" level="INFO">845ac176d35b1146</msg>
<status status="PASS" starttime="20210322 17:48:03.791" endtime="20210322 17:48:03.792"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 17:48:03.793" level="INFO">400</msg>
<status status="PASS" starttime="20210322 17:48:03.793" endtime="20210322 17:48:03.794"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:48:03.795" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20210322 17:48:03.794" endtime="20210322 17:48:03.795"></status>
</kw>
<status status="PASS" starttime="20210322 17:48:02.014" endtime="20210322 17:48:03.796"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${response.json()["message"]}' == 'Claim confirmed successfully'</arg>
</arguments>
<status status="PASS" starttime="20210322 17:48:03.796" endtime="20210322 17:48:03.797"></status>
</kw>
<status status="PASS" starttime="20210322 17:48:02.013" endtime="20210322 17:48:03.797"></status>
</kw>
<kw name="${index} = 9" type="foritem">
<kw name="confirmar reivindicação de posse" library="pix_dict_confirm_claims">
<arguments>
<arg>holder_external_key=${holder_owner}</arg>
<arg>account_external_key=${account_owner}</arg>
<arg>claim_external_key=${claim_external_key}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 17:48:03.800" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 17:48:03.800" endtime="20210322 17:48:03.801"></status>
</kw>
<status status="PASS" starttime="20210322 17:48:03.799" endtime="20210322 17:48:03.801"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/claims/${claim_external_key}/confirm</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:48:03.802" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/2741116fa6d24699b8a0887001096b3f/accounts/3dfb0f9e803740b4bbf3b459691eb2e8/claims/88f91f16081b43dc83b0d8fec51adfc4/confirm, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 17:48:05.473" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20210322 17:48:03.802" endtime="20210322 17:48:05.474"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:48:05.475" level="INFO">{'code': 9997, 'status': 'bad_request', 'type': 'integration_error', 'message': 'Claim operation invalid', 'category': 'unexpected', 'status_code': 400}</msg>
<status status="PASS" starttime="20210322 17:48:05.474" endtime="20210322 17:48:05.476"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:48:05.478" level="INFO">bf319d9039cdb37c</msg>
<status status="PASS" starttime="20210322 17:48:05.477" endtime="20210322 17:48:05.478"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 17:48:05.479" level="INFO">400</msg>
<status status="PASS" starttime="20210322 17:48:05.478" endtime="20210322 17:48:05.479"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:48:05.480" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20210322 17:48:05.479" endtime="20210322 17:48:05.480"></status>
</kw>
<status status="PASS" starttime="20210322 17:48:03.798" endtime="20210322 17:48:05.480"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${response.json()["message"]}' == 'Claim confirmed successfully'</arg>
</arguments>
<status status="PASS" starttime="20210322 17:48:05.481" endtime="20210322 17:48:05.482"></status>
</kw>
<status status="PASS" starttime="20210322 17:48:03.798" endtime="20210322 17:48:05.482"></status>
</kw>
<kw name="${index} = 10" type="foritem">
<kw name="confirmar reivindicação de posse" library="pix_dict_confirm_claims">
<arguments>
<arg>holder_external_key=${holder_owner}</arg>
<arg>account_external_key=${account_owner}</arg>
<arg>claim_external_key=${claim_external_key}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 17:48:05.485" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 17:48:05.484" endtime="20210322 17:48:05.485"></status>
</kw>
<status status="PASS" starttime="20210322 17:48:05.484" endtime="20210322 17:48:05.485"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/claims/${claim_external_key}/confirm</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:48:05.487" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/2741116fa6d24699b8a0887001096b3f/accounts/3dfb0f9e803740b4bbf3b459691eb2e8/claims/88f91f16081b43dc83b0d8fec51adfc4/confirm, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 17:48:07.154" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20210322 17:48:05.486" endtime="20210322 17:48:07.154"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:48:07.156" level="INFO">{'code': 9997, 'status': 'bad_request', 'type': 'integration_error', 'message': 'Claim operation invalid', 'category': 'unexpected', 'status_code': 400}</msg>
<status status="PASS" starttime="20210322 17:48:07.155" endtime="20210322 17:48:07.157"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:48:07.159" level="INFO">3736bcf639ba060f</msg>
<status status="PASS" starttime="20210322 17:48:07.158" endtime="20210322 17:48:07.160"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 17:48:07.161" level="INFO">400</msg>
<status status="PASS" starttime="20210322 17:48:07.161" endtime="20210322 17:48:07.162"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:48:07.163" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20210322 17:48:07.162" endtime="20210322 17:48:07.163"></status>
</kw>
<status status="PASS" starttime="20210322 17:48:05.483" endtime="20210322 17:48:07.164"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${response.json()["message"]}' == 'Claim confirmed successfully'</arg>
</arguments>
<status status="PASS" starttime="20210322 17:48:07.164" endtime="20210322 17:48:07.166"></status>
</kw>
<status status="PASS" starttime="20210322 17:48:05.482" endtime="20210322 17:48:07.166"></status>
</kw>
<kw name="${index} = 11" type="foritem">
<kw name="confirmar reivindicação de posse" library="pix_dict_confirm_claims">
<arguments>
<arg>holder_external_key=${holder_owner}</arg>
<arg>account_external_key=${account_owner}</arg>
<arg>claim_external_key=${claim_external_key}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 17:48:07.169" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 17:48:07.168" endtime="20210322 17:48:07.169"></status>
</kw>
<status status="PASS" starttime="20210322 17:48:07.167" endtime="20210322 17:48:07.170"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/claims/${claim_external_key}/confirm</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:48:07.171" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/2741116fa6d24699b8a0887001096b3f/accounts/3dfb0f9e803740b4bbf3b459691eb2e8/claims/88f91f16081b43dc83b0d8fec51adfc4/confirm, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 17:48:08.847" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20210322 17:48:07.170" endtime="20210322 17:48:08.847"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:48:08.849" level="INFO">{'code': 9997, 'status': 'bad_request', 'type': 'integration_error', 'message': 'Claim operation invalid', 'category': 'unexpected', 'status_code': 400}</msg>
<status status="PASS" starttime="20210322 17:48:08.848" endtime="20210322 17:48:08.849"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:48:08.852" level="INFO">4f1621d843481204</msg>
<status status="PASS" starttime="20210322 17:48:08.850" endtime="20210322 17:48:08.853"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 17:48:08.854" level="INFO">400</msg>
<status status="PASS" starttime="20210322 17:48:08.853" endtime="20210322 17:48:08.854"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:48:08.856" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20210322 17:48:08.855" endtime="20210322 17:48:08.856"></status>
</kw>
<status status="PASS" starttime="20210322 17:48:07.166" endtime="20210322 17:48:08.856"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${response.json()["message"]}' == 'Claim confirmed successfully'</arg>
</arguments>
<status status="PASS" starttime="20210322 17:48:08.857" endtime="20210322 17:48:08.858"></status>
</kw>
<status status="PASS" starttime="20210322 17:48:07.166" endtime="20210322 17:48:08.858"></status>
</kw>
<kw name="${index} = 12" type="foritem">
<kw name="confirmar reivindicação de posse" library="pix_dict_confirm_claims">
<arguments>
<arg>holder_external_key=${holder_owner}</arg>
<arg>account_external_key=${account_owner}</arg>
<arg>claim_external_key=${claim_external_key}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 17:48:08.865" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 17:48:08.864" endtime="20210322 17:48:08.868"></status>
</kw>
<status status="PASS" starttime="20210322 17:48:08.862" endtime="20210322 17:48:08.868"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/claims/${claim_external_key}/confirm</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:48:08.870" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/2741116fa6d24699b8a0887001096b3f/accounts/3dfb0f9e803740b4bbf3b459691eb2e8/claims/88f91f16081b43dc83b0d8fec51adfc4/confirm, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 17:48:10.529" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20210322 17:48:08.869" endtime="20210322 17:48:10.530"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:48:10.532" level="INFO">{'code': 9997, 'status': 'bad_request', 'type': 'integration_error', 'message': 'Claim operation invalid', 'category': 'unexpected', 'status_code': 400}</msg>
<status status="PASS" starttime="20210322 17:48:10.531" endtime="20210322 17:48:10.532"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:48:10.534" level="INFO">826b7b9ae842a1a5</msg>
<status status="PASS" starttime="20210322 17:48:10.533" endtime="20210322 17:48:10.535"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 17:48:10.537" level="INFO">400</msg>
<status status="PASS" starttime="20210322 17:48:10.536" endtime="20210322 17:48:10.537"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:48:10.539" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20210322 17:48:10.538" endtime="20210322 17:48:10.540"></status>
</kw>
<status status="PASS" starttime="20210322 17:48:08.859" endtime="20210322 17:48:10.540"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${response.json()["message"]}' == 'Claim confirmed successfully'</arg>
</arguments>
<status status="PASS" starttime="20210322 17:48:10.541" endtime="20210322 17:48:10.543"></status>
</kw>
<status status="PASS" starttime="20210322 17:48:08.858" endtime="20210322 17:48:10.543"></status>
</kw>
<kw name="${index} = 13" type="foritem">
<kw name="confirmar reivindicação de posse" library="pix_dict_confirm_claims">
<arguments>
<arg>holder_external_key=${holder_owner}</arg>
<arg>account_external_key=${account_owner}</arg>
<arg>claim_external_key=${claim_external_key}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 17:48:10.549" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 17:48:10.548" endtime="20210322 17:48:10.551"></status>
</kw>
<status status="PASS" starttime="20210322 17:48:10.547" endtime="20210322 17:48:10.551"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/claims/${claim_external_key}/confirm</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:48:10.554" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/2741116fa6d24699b8a0887001096b3f/accounts/3dfb0f9e803740b4bbf3b459691eb2e8/claims/88f91f16081b43dc83b0d8fec51adfc4/confirm, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 17:48:12.273" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20210322 17:48:10.552" endtime="20210322 17:48:12.273"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:48:12.274" level="INFO">{'code': 9997, 'status': 'bad_request', 'type': 'integration_error', 'message': 'Claim operation invalid', 'category': 'unexpected', 'status_code': 400}</msg>
<status status="PASS" starttime="20210322 17:48:12.274" endtime="20210322 17:48:12.274"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:48:12.275" level="INFO">809fc708474060cf</msg>
<status status="PASS" starttime="20210322 17:48:12.275" endtime="20210322 17:48:12.275"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 17:48:12.276" level="INFO">400</msg>
<status status="PASS" starttime="20210322 17:48:12.275" endtime="20210322 17:48:12.276"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:48:12.277" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20210322 17:48:12.276" endtime="20210322 17:48:12.277"></status>
</kw>
<status status="PASS" starttime="20210322 17:48:10.545" endtime="20210322 17:48:12.277"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${response.json()["message"]}' == 'Claim confirmed successfully'</arg>
</arguments>
<status status="PASS" starttime="20210322 17:48:12.278" endtime="20210322 17:48:12.279"></status>
</kw>
<status status="PASS" starttime="20210322 17:48:10.544" endtime="20210322 17:48:12.280"></status>
</kw>
<kw name="${index} = 14" type="foritem">
<kw name="confirmar reivindicação de posse" library="pix_dict_confirm_claims">
<arguments>
<arg>holder_external_key=${holder_owner}</arg>
<arg>account_external_key=${account_owner}</arg>
<arg>claim_external_key=${claim_external_key}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 17:48:12.281" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 17:48:12.281" endtime="20210322 17:48:12.282"></status>
</kw>
<status status="PASS" starttime="20210322 17:48:12.281" endtime="20210322 17:48:12.282"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/claims/${claim_external_key}/confirm</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:48:12.283" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/2741116fa6d24699b8a0887001096b3f/accounts/3dfb0f9e803740b4bbf3b459691eb2e8/claims/88f91f16081b43dc83b0d8fec51adfc4/confirm, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 17:48:14.035" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20210322 17:48:12.282" endtime="20210322 17:48:14.036"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:48:14.039" level="INFO">{'code': 9997, 'status': 'bad_request', 'type': 'integration_error', 'message': 'Claim operation invalid', 'category': 'unexpected', 'status_code': 400}</msg>
<status status="PASS" starttime="20210322 17:48:14.037" endtime="20210322 17:48:14.040"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:48:14.041" level="INFO">bb27c8b7545070c7</msg>
<status status="PASS" starttime="20210322 17:48:14.041" endtime="20210322 17:48:14.042"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 17:48:14.043" level="INFO">400</msg>
<status status="PASS" starttime="20210322 17:48:14.043" endtime="20210322 17:48:14.044"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:48:14.045" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20210322 17:48:14.044" endtime="20210322 17:48:14.045"></status>
</kw>
<status status="PASS" starttime="20210322 17:48:12.280" endtime="20210322 17:48:14.046"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${response.json()["message"]}' == 'Claim confirmed successfully'</arg>
</arguments>
<status status="PASS" starttime="20210322 17:48:14.046" endtime="20210322 17:48:14.047"></status>
</kw>
<status status="PASS" starttime="20210322 17:48:12.280" endtime="20210322 17:48:14.047"></status>
</kw>
<kw name="${index} = 15" type="foritem">
<kw name="confirmar reivindicação de posse" library="pix_dict_confirm_claims">
<arguments>
<arg>holder_external_key=${holder_owner}</arg>
<arg>account_external_key=${account_owner}</arg>
<arg>claim_external_key=${claim_external_key}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 17:48:14.050" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 17:48:14.050" endtime="20210322 17:48:14.051"></status>
</kw>
<status status="PASS" starttime="20210322 17:48:14.049" endtime="20210322 17:48:14.051"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/claims/${claim_external_key}/confirm</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:48:14.052" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/2741116fa6d24699b8a0887001096b3f/accounts/3dfb0f9e803740b4bbf3b459691eb2e8/claims/88f91f16081b43dc83b0d8fec51adfc4/confirm, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 17:48:15.800" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20210322 17:48:14.051" endtime="20210322 17:48:15.800"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:48:15.803" level="INFO">{'code': 9997, 'status': 'bad_request', 'type': 'integration_error', 'message': 'Claim operation invalid', 'category': 'unexpected', 'status_code': 400}</msg>
<status status="PASS" starttime="20210322 17:48:15.802" endtime="20210322 17:48:15.804"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:48:15.806" level="INFO">8843c1b270045b35</msg>
<status status="PASS" starttime="20210322 17:48:15.805" endtime="20210322 17:48:15.807"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 17:48:15.808" level="INFO">400</msg>
<status status="PASS" starttime="20210322 17:48:15.808" endtime="20210322 17:48:15.809"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:48:15.810" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20210322 17:48:15.809" endtime="20210322 17:48:15.810"></status>
</kw>
<status status="PASS" starttime="20210322 17:48:14.048" endtime="20210322 17:48:15.811"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${response.json()["message"]}' == 'Claim confirmed successfully'</arg>
</arguments>
<status status="PASS" starttime="20210322 17:48:15.811" endtime="20210322 17:48:15.812"></status>
</kw>
<status status="PASS" starttime="20210322 17:48:14.047" endtime="20210322 17:48:15.813"></status>
</kw>
<kw name="${index} = 16" type="foritem">
<kw name="confirmar reivindicação de posse" library="pix_dict_confirm_claims">
<arguments>
<arg>holder_external_key=${holder_owner}</arg>
<arg>account_external_key=${account_owner}</arg>
<arg>claim_external_key=${claim_external_key}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 17:48:15.816" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 17:48:15.815" endtime="20210322 17:48:15.816"></status>
</kw>
<status status="PASS" starttime="20210322 17:48:15.814" endtime="20210322 17:48:15.816"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/claims/${claim_external_key}/confirm</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:48:15.818" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/2741116fa6d24699b8a0887001096b3f/accounts/3dfb0f9e803740b4bbf3b459691eb2e8/claims/88f91f16081b43dc83b0d8fec51adfc4/confirm, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 17:48:17.532" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20210322 17:48:15.817" endtime="20210322 17:48:17.532"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:48:17.534" level="INFO">{'code': 9997, 'status': 'bad_request', 'type': 'integration_error', 'message': 'Claim operation invalid', 'category': 'unexpected', 'status_code': 400}</msg>
<status status="PASS" starttime="20210322 17:48:17.533" endtime="20210322 17:48:17.535"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:48:17.537" level="INFO">36f71e647cbfe5f5</msg>
<status status="PASS" starttime="20210322 17:48:17.536" endtime="20210322 17:48:17.537"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 17:48:17.538" level="INFO">400</msg>
<status status="PASS" starttime="20210322 17:48:17.538" endtime="20210322 17:48:17.538"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:48:17.540" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20210322 17:48:17.539" endtime="20210322 17:48:17.540"></status>
</kw>
<status status="PASS" starttime="20210322 17:48:15.813" endtime="20210322 17:48:17.540"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${response.json()["message"]}' == 'Claim confirmed successfully'</arg>
</arguments>
<status status="PASS" starttime="20210322 17:48:17.541" endtime="20210322 17:48:17.542"></status>
</kw>
<status status="PASS" starttime="20210322 17:48:15.813" endtime="20210322 17:48:17.542"></status>
</kw>
<kw name="${index} = 17" type="foritem">
<kw name="confirmar reivindicação de posse" library="pix_dict_confirm_claims">
<arguments>
<arg>holder_external_key=${holder_owner}</arg>
<arg>account_external_key=${account_owner}</arg>
<arg>claim_external_key=${claim_external_key}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 17:48:17.546" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 17:48:17.546" endtime="20210322 17:48:17.547"></status>
</kw>
<status status="PASS" starttime="20210322 17:48:17.545" endtime="20210322 17:48:17.547"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/claims/${claim_external_key}/confirm</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:48:17.548" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/2741116fa6d24699b8a0887001096b3f/accounts/3dfb0f9e803740b4bbf3b459691eb2e8/claims/88f91f16081b43dc83b0d8fec51adfc4/confirm, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 17:48:19.247" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20210322 17:48:17.547" endtime="20210322 17:48:19.247"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:48:19.250" level="INFO">{'code': 9997, 'status': 'bad_request', 'type': 'integration_error', 'message': 'Claim operation invalid', 'category': 'unexpected', 'status_code': 400}</msg>
<status status="PASS" starttime="20210322 17:48:19.249" endtime="20210322 17:48:19.251"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:48:19.253" level="INFO">82fd3b2a2b2261e2</msg>
<status status="PASS" starttime="20210322 17:48:19.251" endtime="20210322 17:48:19.253"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 17:48:19.257" level="INFO">400</msg>
<status status="PASS" starttime="20210322 17:48:19.255" endtime="20210322 17:48:19.257"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:48:19.260" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20210322 17:48:19.258" endtime="20210322 17:48:19.260"></status>
</kw>
<status status="PASS" starttime="20210322 17:48:17.543" endtime="20210322 17:48:19.260"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${response.json()["message"]}' == 'Claim confirmed successfully'</arg>
</arguments>
<status status="PASS" starttime="20210322 17:48:19.262" endtime="20210322 17:48:19.264"></status>
</kw>
<status status="PASS" starttime="20210322 17:48:17.543" endtime="20210322 17:48:19.264"></status>
</kw>
<kw name="${index} = 18" type="foritem">
<kw name="confirmar reivindicação de posse" library="pix_dict_confirm_claims">
<arguments>
<arg>holder_external_key=${holder_owner}</arg>
<arg>account_external_key=${account_owner}</arg>
<arg>claim_external_key=${claim_external_key}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 17:48:19.269" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 17:48:19.268" endtime="20210322 17:48:19.270"></status>
</kw>
<status status="PASS" starttime="20210322 17:48:19.267" endtime="20210322 17:48:19.271"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/claims/${claim_external_key}/confirm</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:48:19.272" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/2741116fa6d24699b8a0887001096b3f/accounts/3dfb0f9e803740b4bbf3b459691eb2e8/claims/88f91f16081b43dc83b0d8fec51adfc4/confirm, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 17:48:20.963" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20210322 17:48:19.271" endtime="20210322 17:48:20.964"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:48:20.966" level="INFO">{'code': 9997, 'status': 'bad_request', 'type': 'integration_error', 'message': 'Claim operation invalid', 'category': 'unexpected', 'status_code': 400}</msg>
<status status="PASS" starttime="20210322 17:48:20.966" endtime="20210322 17:48:20.967"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:48:20.969" level="INFO">96ec0f6aed9f03b7</msg>
<status status="PASS" starttime="20210322 17:48:20.968" endtime="20210322 17:48:20.970"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 17:48:20.972" level="INFO">400</msg>
<status status="PASS" starttime="20210322 17:48:20.971" endtime="20210322 17:48:20.972"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:48:20.975" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20210322 17:48:20.974" endtime="20210322 17:48:20.975"></status>
</kw>
<status status="PASS" starttime="20210322 17:48:19.265" endtime="20210322 17:48:20.976"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${response.json()["message"]}' == 'Claim confirmed successfully'</arg>
</arguments>
<status status="PASS" starttime="20210322 17:48:20.976" endtime="20210322 17:48:20.978"></status>
</kw>
<status status="PASS" starttime="20210322 17:48:19.264" endtime="20210322 17:48:20.978"></status>
</kw>
<kw name="${index} = 19" type="foritem">
<kw name="confirmar reivindicação de posse" library="pix_dict_confirm_claims">
<arguments>
<arg>holder_external_key=${holder_owner}</arg>
<arg>account_external_key=${account_owner}</arg>
<arg>claim_external_key=${claim_external_key}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 17:48:20.982" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 17:48:20.981" endtime="20210322 17:48:20.982"></status>
</kw>
<status status="PASS" starttime="20210322 17:48:20.980" endtime="20210322 17:48:20.983"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/claims/${claim_external_key}/confirm</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:48:20.984" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/2741116fa6d24699b8a0887001096b3f/accounts/3dfb0f9e803740b4bbf3b459691eb2e8/claims/88f91f16081b43dc83b0d8fec51adfc4/confirm, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 17:48:22.666" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20210322 17:48:20.983" endtime="20210322 17:48:22.666"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:48:22.667" level="INFO">{'code': 9997, 'status': 'bad_request', 'type': 'integration_error', 'message': 'Claim operation invalid', 'category': 'unexpected', 'status_code': 400}</msg>
<status status="PASS" starttime="20210322 17:48:22.667" endtime="20210322 17:48:22.668"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:48:22.669" level="INFO">c2096fcfcf29507e</msg>
<status status="PASS" starttime="20210322 17:48:22.668" endtime="20210322 17:48:22.669"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 17:48:22.670" level="INFO">400</msg>
<status status="PASS" starttime="20210322 17:48:22.669" endtime="20210322 17:48:22.670"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:48:22.671" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20210322 17:48:22.671" endtime="20210322 17:48:22.671"></status>
</kw>
<status status="PASS" starttime="20210322 17:48:20.979" endtime="20210322 17:48:22.672"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${response.json()["message"]}' == 'Claim confirmed successfully'</arg>
</arguments>
<status status="PASS" starttime="20210322 17:48:22.672" endtime="20210322 17:48:22.673"></status>
</kw>
<status status="PASS" starttime="20210322 17:48:20.978" endtime="20210322 17:48:22.673"></status>
</kw>
<kw name="${index} = 20" type="foritem">
<kw name="confirmar reivindicação de posse" library="pix_dict_confirm_claims">
<arguments>
<arg>holder_external_key=${holder_owner}</arg>
<arg>account_external_key=${account_owner}</arg>
<arg>claim_external_key=${claim_external_key}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 17:48:22.676" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 17:48:22.676" endtime="20210322 17:48:22.677"></status>
</kw>
<status status="PASS" starttime="20210322 17:48:22.675" endtime="20210322 17:48:22.677"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/claims/${claim_external_key}/confirm</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:48:22.678" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/2741116fa6d24699b8a0887001096b3f/accounts/3dfb0f9e803740b4bbf3b459691eb2e8/claims/88f91f16081b43dc83b0d8fec51adfc4/confirm, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 17:48:24.331" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20210322 17:48:22.677" endtime="20210322 17:48:24.331"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:48:24.334" level="INFO">{'code': 9997, 'status': 'bad_request', 'type': 'integration_error', 'message': 'Claim operation invalid', 'category': 'unexpected', 'status_code': 400}</msg>
<status status="PASS" starttime="20210322 17:48:24.333" endtime="20210322 17:48:24.334"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:48:24.337" level="INFO">116d3b14828ee6d1</msg>
<status status="PASS" starttime="20210322 17:48:24.335" endtime="20210322 17:48:24.337"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 17:48:24.340" level="INFO">400</msg>
<status status="PASS" starttime="20210322 17:48:24.338" endtime="20210322 17:48:24.340"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:48:24.343" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20210322 17:48:24.341" endtime="20210322 17:48:24.343"></status>
</kw>
<status status="PASS" starttime="20210322 17:48:22.674" endtime="20210322 17:48:24.344"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${response.json()["message"]}' == 'Claim confirmed successfully'</arg>
</arguments>
<status status="PASS" starttime="20210322 17:48:24.345" endtime="20210322 17:48:24.346"></status>
</kw>
<status status="PASS" starttime="20210322 17:48:22.673" endtime="20210322 17:48:24.346"></status>
</kw>
<kw name="${index} = 21" type="foritem">
<kw name="confirmar reivindicação de posse" library="pix_dict_confirm_claims">
<arguments>
<arg>holder_external_key=${holder_owner}</arg>
<arg>account_external_key=${account_owner}</arg>
<arg>claim_external_key=${claim_external_key}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 17:48:24.350" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 17:48:24.349" endtime="20210322 17:48:24.351"></status>
</kw>
<status status="PASS" starttime="20210322 17:48:24.348" endtime="20210322 17:48:24.351"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/claims/${claim_external_key}/confirm</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:48:24.352" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/2741116fa6d24699b8a0887001096b3f/accounts/3dfb0f9e803740b4bbf3b459691eb2e8/claims/88f91f16081b43dc83b0d8fec51adfc4/confirm, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 17:48:25.962" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20210322 17:48:24.351" endtime="20210322 17:48:25.963"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:48:25.964" level="INFO">{'code': 9997, 'status': 'bad_request', 'type': 'integration_error', 'message': 'Claim operation invalid', 'category': 'unexpected', 'status_code': 400}</msg>
<status status="PASS" starttime="20210322 17:48:25.963" endtime="20210322 17:48:25.964"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:48:25.964" level="INFO">24c773198bd38d9e</msg>
<status status="PASS" starttime="20210322 17:48:25.964" endtime="20210322 17:48:25.965"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 17:48:25.965" level="INFO">400</msg>
<status status="PASS" starttime="20210322 17:48:25.965" endtime="20210322 17:48:25.965"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:48:25.966" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20210322 17:48:25.966" endtime="20210322 17:48:25.966"></status>
</kw>
<status status="PASS" starttime="20210322 17:48:24.347" endtime="20210322 17:48:25.966"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${response.json()["message"]}' == 'Claim confirmed successfully'</arg>
</arguments>
<status status="PASS" starttime="20210322 17:48:25.967" endtime="20210322 17:48:25.967"></status>
</kw>
<status status="PASS" starttime="20210322 17:48:24.346" endtime="20210322 17:48:25.968"></status>
</kw>
<kw name="${index} = 22" type="foritem">
<kw name="confirmar reivindicação de posse" library="pix_dict_confirm_claims">
<arguments>
<arg>holder_external_key=${holder_owner}</arg>
<arg>account_external_key=${account_owner}</arg>
<arg>claim_external_key=${claim_external_key}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 17:48:25.970" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 17:48:25.969" endtime="20210322 17:48:25.970"></status>
</kw>
<status status="PASS" starttime="20210322 17:48:25.969" endtime="20210322 17:48:25.970"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/claims/${claim_external_key}/confirm</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:48:25.971" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/2741116fa6d24699b8a0887001096b3f/accounts/3dfb0f9e803740b4bbf3b459691eb2e8/claims/88f91f16081b43dc83b0d8fec51adfc4/confirm, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 17:48:27.682" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 17:48:25.970" endtime="20210322 17:48:27.683"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:48:27.684" level="INFO">{'message': 'Claim confirmed successfully'}</msg>
<status status="PASS" starttime="20210322 17:48:27.683" endtime="20210322 17:48:27.684"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:48:27.685" level="INFO">4dcc3242a9f6356e</msg>
<status status="PASS" starttime="20210322 17:48:27.684" endtime="20210322 17:48:27.685"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 17:48:27.685" level="INFO">200</msg>
<status status="PASS" starttime="20210322 17:48:27.685" endtime="20210322 17:48:27.686"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:48:27.686" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 17:48:27.686" endtime="20210322 17:48:27.687"></status>
</kw>
<status status="PASS" starttime="20210322 17:48:25.968" endtime="20210322 17:48:27.687"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${response.json()["message"]}' == 'Claim confirmed successfully'</arg>
</arguments>
<msg timestamp="20210322 17:48:27.688" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20210322 17:48:27.687" endtime="20210322 17:48:27.688"></status>
</kw>
<status status="PASS" starttime="20210322 17:48:25.968" endtime="20210322 17:48:27.688"></status>
</kw>
<status status="PASS" starttime="20210322 17:47:48.220" endtime="20210322 17:48:27.688"></status>
</kw>
<kw name="buscar reivindicação de posse" library="pix_dict_get_claims">
<arguments>
<arg>holder_external_key=${holder_claimer}</arg>
<arg>account_external_key=${account_claimer}</arg>
<arg>claim_external_key=${claim_external_key}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 17:48:27.691" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 17:48:27.690" endtime="20210322 17:48:27.691"></status>
</kw>
<status status="PASS" starttime="20210322 17:48:27.690" endtime="20210322 17:48:27.691"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/claims/${claim_external_key}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:48:27.692" level="INFO">GET Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/e24b61b00b744c6da2a0a8f2f64692d8/accounts/6eea188815a8447083b7b35a10ebb582/claims/88f91f16081b43dc83b0d8fec51adfc4, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 17:48:28.315" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 17:48:27.692" endtime="20210322 17:48:28.315"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:48:28.315" level="INFO">{'id': '88f91f16081b43dc83b0d8fec51adfc4', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'created_at': '2021-03-22T05:47:47.421', 'updated_at': '2021-03-22T05:48:28.895', 'type': 'OWNERSHIP', 'status': 'confirmed', 'confirm_reason': 'USER_REQUESTED', 'key': {'value': 'cardosoyuri@santos.net', 'type': 'email'}, 'claimer': {'name': 'Holder de teste', 'national_registration': '45719832041', 'type': 'individual', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': 'e24b61b00b744c6da2a0a8f2f64692d8', 'account': {'digital_account_id': '6eea188815a8447083b7b35a10ebb582', 'routing_number': '001', 'number': '6993365665', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}}, 'donor': {'name': 'Holder de teste', 'national_registration': '71904283640', 'type': 'individual', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': '2741116fa6d24699b8a0887001096b3f', 'account': {'digital_account_id': '3dfb0f9e803740b4bbf3b459691eb2e8', 'routing_number': '001', 'number': '5760588565', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}}, 'completion_period_end': '2021-03-22T08:48:00.000', 'resolution_period_end': '2021-03-29T08:47:47.000', 'resource': 'pix.claim'}</msg>
<status status="PASS" starttime="20210322 17:48:28.315" endtime="20210322 17:48:28.316"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:48:28.317" level="INFO">1147f96655297cc5</msg>
<status status="PASS" starttime="20210322 17:48:28.316" endtime="20210322 17:48:28.317"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 17:48:28.318" level="INFO">200</msg>
<status status="PASS" starttime="20210322 17:48:28.317" endtime="20210322 17:48:28.318"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:48:28.318" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 17:48:28.318" endtime="20210322 17:48:28.318"></status>
</kw>
<status status="PASS" starttime="20210322 17:48:27.689" endtime="20210322 17:48:28.318"></status>
</kw>
<kw name="validar reivindicação" library="asserts">
<arguments>
<arg>marketplace_external_key=${marketplace_external_key}</arg>
<arg>claim_type=OWNERSHIP</arg>
<arg>claim_status=confirmed</arg>
<arg>key_value=${value}</arg>
<arg>key_type=${type}</arg>
<arg>claimer_name=${holder_name_claimer}</arg>
<arg>claimer_national_registration=${national_registration_claimer}</arg>
<arg>claimer_type=${holder_type_claimer}</arg>
<arg>claimer_marketplace=${marketplace_external_key}</arg>
<arg>claimer_holder_id=${holder_claimer}</arg>
<arg>claimer_account_id=${account_claimer}</arg>
<arg>claimer_routing_number=${account_routing_number_claimer}</arg>
<arg>claimer_account_number=${account_number_claimer}</arg>
<arg>claimer_account_type=CACC</arg>
<arg>claimer_psp_code=${psp_code}</arg>
<arg>claimer_psp_name=${psp_name}</arg>
<arg>donor_name=${holder_name_owner}</arg>
<arg>donor_national_registration=${national_registration_owner}</arg>
<arg>donor_type=${holder_type_owner}</arg>
<arg>donor_marketplace=${marketplace_external_key}</arg>
<arg>donor_holder_id=${holder_owner}</arg>
<arg>donor_account_id=${account_owner}</arg>
<arg>donor_routing_number=${account_routing_number_owner}</arg>
<arg>donor_account_number=${account_number_owner}</arg>
<arg>donor_account_type=CACC</arg>
<arg>donor_psp_code=${psp_code}</arg>
<arg>donor_psp_name=${psp_name}</arg>
<arg>claim_resource=pix.claim</arg>
</arguments>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<arguments>
<arg>result_format=datetime</arg>
</arguments>
<assign>
<var>${date}</var>
</assign>
<msg timestamp="20210322 17:48:28.320" level="INFO">${date} = 2021-03-22 17:48:28.320374</msg>
<status status="PASS" starttime="20210322 17:48:28.320" endtime="20210322 17:48:28.320"></status>
</kw>
<kw name="Convert Date" library="DateTime">
<doc>Converts between supported `date formats`.</doc>
<arguments>
<arg>${date}</arg>
<arg>exclude_millis=yes</arg>
<arg>result_format=%Y-%m-%d</arg>
<arg>date_format=%d-%m-%Y</arg>
</arguments>
<assign>
<var>${date}</var>
</assign>
<msg timestamp="20210322 17:48:28.321" level="INFO">${date} = 2021-03-22</msg>
<status status="PASS" starttime="20210322 17:48:28.321" endtime="20210322 17:48:28.321"></status>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${response.json()["id"]}</arg>
</arguments>
<msg timestamp="20210322 17:48:28.322" level="INFO">Length is 32</msg>
<status status="PASS" starttime="20210322 17:48:28.321" endtime="20210322 17:48:28.322"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["marketplace"]}</arg>
<arg>${marketplace_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:48:28.322" endtime="20210322 17:48:28.322"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response.json()["created_at"]}</arg>
<arg>${date}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:48:28.322" endtime="20210322 17:48:28.323"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response.json()["updated_at"]}</arg>
<arg>${date}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:48:28.323" endtime="20210322 17:48:28.323"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["type"]}</arg>
<arg>${claim_type}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:48:28.323" endtime="20210322 17:48:28.324"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["status"]}</arg>
<arg>${claim_status}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:48:28.324" endtime="20210322 17:48:28.324"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${key_value}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:48:28.324" endtime="20210322 17:48:28.324"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["key"]["type"]}</arg>
<arg>${key_type}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:48:28.325" endtime="20210322 17:48:28.325"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["claimer"]["name"]}</arg>
<arg>${claimer_name}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:48:28.325" endtime="20210322 17:48:28.325"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["claimer"]["national_registration"]}</arg>
<arg>${claimer_national_registration}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:48:28.326" endtime="20210322 17:48:28.326"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["claimer"]["type"]}</arg>
<arg>${claimer_type}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:48:28.326" endtime="20210322 17:48:28.326"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["claimer"]["marketplace"]}</arg>
<arg>${claimer_marketplace}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:48:28.327" endtime="20210322 17:48:28.327"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["claimer"]["holder"]}</arg>
<arg>${claimer_holder_id}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:48:28.327" endtime="20210322 17:48:28.327"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["claimer"]["account"]["digital_account_id"]}</arg>
<arg>${claimer_account_id}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:48:28.328" endtime="20210322 17:48:28.328"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["claimer"]["account"]["routing_number"]}</arg>
<arg>${claimer_routing_number}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:48:28.328" endtime="20210322 17:48:28.328"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["claimer"]["account"]["number"]}</arg>
<arg>${claimer_account_number}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:48:28.329" endtime="20210322 17:48:28.329"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["claimer"]["account"]["type"]}</arg>
<arg>${claimer_account_type}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:48:28.329" endtime="20210322 17:48:28.330"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["claimer"]["psp"]["code"]}</arg>
<arg>${claimer_psp_code}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:48:28.330" endtime="20210322 17:48:28.330"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["claimer"]["psp"]["name"]}</arg>
<arg>${claimer_psp_name}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:48:28.330" endtime="20210322 17:48:28.331"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["donor"]["name"]}</arg>
<arg>${donor_name}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:48:28.331" endtime="20210322 17:48:28.331"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["donor"]["national_registration"]}</arg>
<arg>${donor_national_registration}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:48:28.331" endtime="20210322 17:48:28.332"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["donor"]["type"]}</arg>
<arg>${donor_type}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:48:28.332" endtime="20210322 17:48:28.332"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["donor"]["marketplace"]}</arg>
<arg>${donor_marketplace}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:48:28.333" endtime="20210322 17:48:28.334"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["donor"]["holder"]}</arg>
<arg>${donor_holder_id}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:48:28.334" endtime="20210322 17:48:28.334"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["donor"]["account"]["digital_account_id"]}</arg>
<arg>${donor_account_id}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:48:28.334" endtime="20210322 17:48:28.334"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["donor"]["account"]["routing_number"]}</arg>
<arg>${donor_routing_number}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:48:28.334" endtime="20210322 17:48:28.334"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["donor"]["account"]["number"]}</arg>
<arg>${donor_account_number}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:48:28.335" endtime="20210322 17:48:28.336"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["donor"]["account"]["type"]}</arg>
<arg>${donor_account_type}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:48:28.336" endtime="20210322 17:48:28.336"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["donor"]["psp"]["code"]}</arg>
<arg>${donor_psp_code}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:48:28.336" endtime="20210322 17:48:28.336"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["donor"]["psp"]["name"]}</arg>
<arg>${donor_psp_name}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:48:28.336" endtime="20210322 17:48:28.337"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["resource"]}</arg>
<arg>${claim_resource}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:48:28.337" endtime="20210322 17:48:28.337"></status>
</kw>
<status status="PASS" starttime="20210322 17:48:28.318" endtime="20210322 17:48:28.337"></status>
</kw>
<kw name="receber notificação de reivindicação" library="pix_dict_receive_claim_notification">
<arguments>
<arg>key_pix=${value}</arg>
<arg>account_number=${account_number_owner}</arg>
<arg>claimer_tax_id=${national_registration_owner}</arg>
<arg>claimer_name=${holder_name_owner}</arg>
<arg>claim_external_key=${claim_external_key}</arg>
<arg>claim_notification_status=CONFIRMED</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 17:48:28.339" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 17:48:28.339" endtime="20210322 17:48:28.339"></status>
</kw>
<status status="PASS" starttime="20210322 17:48:28.338" endtime="20210322 17:48:28.339"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:48:28.340" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 17:48:28.340" endtime="20210322 17:48:28.340"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"data": {</arg>
<arg>"claim": {</arg>
<arg>"type": "OWNERSHIP",</arg>
<arg>"key": "${key_pix}",</arg>
<arg>"key_type": "PHONE",</arg>
<arg>"claimer_account": {</arg>
<arg>"participant": "19468242",</arg>
<arg>"branch": "0001",</arg>
<arg>"account_number": "${account_number}",</arg>
<arg>"account_type": "CACC"</arg>
<arg>},</arg>
<arg>"claimer": {</arg>
<arg>"type": "NATURAL_PERSON",</arg>
<arg>"tax_id_number": "${claimer_tax_id}",</arg>
<arg>"name": "${claimer_name}"</arg>
<arg>},</arg>
<arg>"donor_participant": "19468242",</arg>
<arg>"id": "${claim_external_key}",</arg>
<arg>"status": "${claim_notification_status}",</arg>
<arg>"resolution_period_end": "2020-10-18T10:00:00.000Z",</arg>
<arg>"completion_period_end": "2020-10-25T10:00:00.000Z",</arg>
<arg>"last_modified": "2020-10-17T10:00:00.000Z"</arg>
<arg>}</arg>
<arg>}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 17:48:28.340" level="INFO">${body} = { "data": { "claim": { "type": "OWNERSHIP", "key": "cardosoyuri@santos.net", "key_type": "PHONE", "claimer_account": { "participant": "19468242", "branch": "0001", "account_number": "5760588565", "acc...</msg>
<status status="PASS" starttime="20210322 17:48:28.340" endtime="20210322 17:48:28.340"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/banking/internal/dict/claims</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:48:28.341" level="INFO">POST Request using : uri=/banking/internal/dict/claims, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "data": { "claim": { "type": "OWNERSHIP", "key": "cardosoyuri@santos.net", "key_type": "PHONE", "claimer_account": { "participant": "19468242", "branch": "0001", "account_number": "5760588565", "account_type": "CACC" }, "claimer": { "type": "NATURAL_PERSON", "tax_id_number": "71904283640", "name": "Holder de teste" }, "donor_participant": "19468242", "id": "88f91f16081b43dc83b0d8fec51adfc4", "status": "CONFIRMED", "resolution_period_end": "2020-10-18T10:00:00.000Z", "completion_period_end": "2020-10-25T10:00:00.000Z", "last_modified": "2020-10-17T10:00:00.000Z" } } } 
json=None</msg>
<msg timestamp="20210322 17:48:28.964" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 17:48:28.341" endtime="20210322 17:48:28.965"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 17:48:28.965" level="INFO">200</msg>
<status status="PASS" starttime="20210322 17:48:28.965" endtime="20210322 17:48:28.965"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:48:28.966" level="INFO">3a90e15e8a422634</msg>
<status status="PASS" starttime="20210322 17:48:28.966" endtime="20210322 17:48:28.966"></status>
</kw>
<status status="PASS" starttime="20210322 17:48:28.338" endtime="20210322 17:48:28.966"></status>
</kw>
<kw name="buscar reivindicação de posse" library="pix_dict_get_claims">
<arguments>
<arg>holder_external_key=${holder_claimer}</arg>
<arg>account_external_key=${account_claimer}</arg>
<arg>claim_external_key=${claim_external_key}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 17:48:28.968" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 17:48:28.967" endtime="20210322 17:48:28.968"></status>
</kw>
<status status="PASS" starttime="20210322 17:48:28.967" endtime="20210322 17:48:28.968"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/claims/${claim_external_key}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:48:28.968" level="INFO">GET Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/e24b61b00b744c6da2a0a8f2f64692d8/accounts/6eea188815a8447083b7b35a10ebb582/claims/88f91f16081b43dc83b0d8fec51adfc4, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 17:48:29.606" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 17:48:28.968" endtime="20210322 17:48:29.606"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:48:29.609" level="INFO">{'id': '88f91f16081b43dc83b0d8fec51adfc4', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'created_at': '2021-03-22T05:47:47.421', 'updated_at': '2021-03-22T05:48:30.180', 'type': 'OWNERSHIP', 'status': 'waiting_entry_ownership_confirm_to_complete', 'confirm_reason': 'USER_REQUESTED', 'key': {'value': 'cardosoyuri@santos.net', 'type': 'email'}, 'claimer': {'name': 'Holder de teste', 'national_registration': '45719832041', 'type': 'individual', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': 'e24b61b00b744c6da2a0a8f2f64692d8', 'account': {'digital_account_id': '6eea188815a8447083b7b35a10ebb582', 'routing_number': '001', 'number': '6993365665', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}}, 'donor': {'name': 'Holder de teste', 'national_registration': '71904283640', 'type': 'individual', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': '2741116fa6d24699b8a0887001096b3f', 'account': {'digital_account_id': '3dfb0f9e803740b4bbf3b459691eb2e8', 'routing_number': '001', 'number': '5760588565', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}}, 'completion_period_end': '2021-03-22T08:48:00.000', 'resolution_period_end': '2021-03-29T08:47:47.000', 'resource': 'pix.claim'}</msg>
<status status="PASS" starttime="20210322 17:48:29.607" endtime="20210322 17:48:29.610"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:48:29.612" level="INFO">6cd44b84fbc952ca</msg>
<status status="PASS" starttime="20210322 17:48:29.610" endtime="20210322 17:48:29.612"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 17:48:29.614" level="INFO">200</msg>
<status status="PASS" starttime="20210322 17:48:29.613" endtime="20210322 17:48:29.616"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:48:29.617" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 17:48:29.616" endtime="20210322 17:48:29.617"></status>
</kw>
<status status="PASS" starttime="20210322 17:48:28.966" endtime="20210322 17:48:29.618"></status>
</kw>
<kw name="validar reivindicação" library="asserts">
<arguments>
<arg>marketplace_external_key=${marketplace_external_key}</arg>
<arg>claim_type=OWNERSHIP</arg>
<arg>claim_status=waiting_entry_ownership_confirm_to_complete</arg>
<arg>key_value=${value}</arg>
<arg>key_type=${type}</arg>
<arg>claimer_name=${holder_name_claimer}</arg>
<arg>claimer_national_registration=${national_registration_claimer}</arg>
<arg>claimer_type=${holder_type_claimer}</arg>
<arg>claimer_marketplace=${marketplace_external_key}</arg>
<arg>claimer_holder_id=${holder_claimer}</arg>
<arg>claimer_account_id=${account_claimer}</arg>
<arg>claimer_routing_number=${account_routing_number_claimer}</arg>
<arg>claimer_account_number=${account_number_claimer}</arg>
<arg>claimer_account_type=CACC</arg>
<arg>claimer_psp_code=${psp_code}</arg>
<arg>claimer_psp_name=${psp_name}</arg>
<arg>donor_name=${holder_name_owner}</arg>
<arg>donor_national_registration=${national_registration_owner}</arg>
<arg>donor_type=${holder_type_owner}</arg>
<arg>donor_marketplace=${marketplace_external_key}</arg>
<arg>donor_holder_id=${holder_owner}</arg>
<arg>donor_account_id=${account_owner}</arg>
<arg>donor_routing_number=${account_routing_number_owner}</arg>
<arg>donor_account_number=${account_number_owner}</arg>
<arg>donor_account_type=CACC</arg>
<arg>donor_psp_code=${psp_code}</arg>
<arg>donor_psp_name=${psp_name}</arg>
<arg>claim_resource=pix.claim</arg>
</arguments>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<arguments>
<arg>result_format=datetime</arg>
</arguments>
<assign>
<var>${date}</var>
</assign>
<msg timestamp="20210322 17:48:29.624" level="INFO">${date} = 2021-03-22 17:48:29.623338</msg>
<status status="PASS" starttime="20210322 17:48:29.623" endtime="20210322 17:48:29.624"></status>
</kw>
<kw name="Convert Date" library="DateTime">
<doc>Converts between supported `date formats`.</doc>
<arguments>
<arg>${date}</arg>
<arg>exclude_millis=yes</arg>
<arg>result_format=%Y-%m-%d</arg>
<arg>date_format=%d-%m-%Y</arg>
</arguments>
<assign>
<var>${date}</var>
</assign>
<msg timestamp="20210322 17:48:29.625" level="INFO">${date} = 2021-03-22</msg>
<status status="PASS" starttime="20210322 17:48:29.624" endtime="20210322 17:48:29.625"></status>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${response.json()["id"]}</arg>
</arguments>
<msg timestamp="20210322 17:48:29.627" level="INFO">Length is 32</msg>
<status status="PASS" starttime="20210322 17:48:29.626" endtime="20210322 17:48:29.627"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["marketplace"]}</arg>
<arg>${marketplace_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:48:29.627" endtime="20210322 17:48:29.628"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response.json()["created_at"]}</arg>
<arg>${date}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:48:29.629" endtime="20210322 17:48:29.630"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response.json()["updated_at"]}</arg>
<arg>${date}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:48:29.630" endtime="20210322 17:48:29.631"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["type"]}</arg>
<arg>${claim_type}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:48:29.631" endtime="20210322 17:48:29.632"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["status"]}</arg>
<arg>${claim_status}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:48:29.632" endtime="20210322 17:48:29.633"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${key_value}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:48:29.634" endtime="20210322 17:48:29.634"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["key"]["type"]}</arg>
<arg>${key_type}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:48:29.635" endtime="20210322 17:48:29.636"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["claimer"]["name"]}</arg>
<arg>${claimer_name}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:48:29.636" endtime="20210322 17:48:29.637"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["claimer"]["national_registration"]}</arg>
<arg>${claimer_national_registration}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:48:29.638" endtime="20210322 17:48:29.638"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["claimer"]["type"]}</arg>
<arg>${claimer_type}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:48:29.639" endtime="20210322 17:48:29.640"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["claimer"]["marketplace"]}</arg>
<arg>${claimer_marketplace}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:48:29.640" endtime="20210322 17:48:29.641"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["claimer"]["holder"]}</arg>
<arg>${claimer_holder_id}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:48:29.641" endtime="20210322 17:48:29.643"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["claimer"]["account"]["digital_account_id"]}</arg>
<arg>${claimer_account_id}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:48:29.643" endtime="20210322 17:48:29.644"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["claimer"]["account"]["routing_number"]}</arg>
<arg>${claimer_routing_number}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:48:29.645" endtime="20210322 17:48:29.646"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["claimer"]["account"]["number"]}</arg>
<arg>${claimer_account_number}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:48:29.646" endtime="20210322 17:48:29.647"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["claimer"]["account"]["type"]}</arg>
<arg>${claimer_account_type}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:48:29.647" endtime="20210322 17:48:29.648"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["claimer"]["psp"]["code"]}</arg>
<arg>${claimer_psp_code}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:48:29.649" endtime="20210322 17:48:29.649"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["claimer"]["psp"]["name"]}</arg>
<arg>${claimer_psp_name}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:48:29.650" endtime="20210322 17:48:29.651"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["donor"]["name"]}</arg>
<arg>${donor_name}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:48:29.651" endtime="20210322 17:48:29.652"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["donor"]["national_registration"]}</arg>
<arg>${donor_national_registration}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:48:29.652" endtime="20210322 17:48:29.653"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["donor"]["type"]}</arg>
<arg>${donor_type}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:48:29.654" endtime="20210322 17:48:29.655"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["donor"]["marketplace"]}</arg>
<arg>${donor_marketplace}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:48:29.655" endtime="20210322 17:48:29.656"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["donor"]["holder"]}</arg>
<arg>${donor_holder_id}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:48:29.656" endtime="20210322 17:48:29.657"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["donor"]["account"]["digital_account_id"]}</arg>
<arg>${donor_account_id}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:48:29.658" endtime="20210322 17:48:29.659"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["donor"]["account"]["routing_number"]}</arg>
<arg>${donor_routing_number}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:48:29.659" endtime="20210322 17:48:29.660"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["donor"]["account"]["number"]}</arg>
<arg>${donor_account_number}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:48:29.660" endtime="20210322 17:48:29.661"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["donor"]["account"]["type"]}</arg>
<arg>${donor_account_type}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:48:29.662" endtime="20210322 17:48:29.663"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["donor"]["psp"]["code"]}</arg>
<arg>${donor_psp_code}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:48:29.663" endtime="20210322 17:48:29.664"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["donor"]["psp"]["name"]}</arg>
<arg>${donor_psp_name}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:48:29.665" endtime="20210322 17:48:29.666"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["resource"]}</arg>
<arg>${claim_resource}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:48:29.666" endtime="20210322 17:48:29.667"></status>
</kw>
<status status="PASS" starttime="20210322 17:48:29.618" endtime="20210322 17:48:29.668"></status>
</kw>
<kw name="buscar verification code" library="pix_dict_verification_code">
<arguments>
<arg>holder_external_key=${holder_claimer}</arg>
<arg>account_external_key=${account_claimer}</arg>
<arg>entry_external_key=${entry_claimer}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 17:48:29.671" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 17:48:29.670" endtime="20210322 17:48:29.671"></status>
</kw>
<status status="PASS" starttime="20210322 17:48:29.669" endtime="20210322 17:48:29.672"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/admin/internal_operation/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries/${entry_external_key}/code</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:48:29.673" level="INFO">GET Request using : uri=/admin/internal_operation/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/e24b61b00b744c6da2a0a8f2f64692d8/accounts/6eea188815a8447083b7b35a10ebb582/entries/1a79f519dd4d48e6b8859a3055b26492/code, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 17:48:30.299" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 17:48:29.672" endtime="20210322 17:48:30.299"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:48:30.302" level="INFO">{'code': '6256'}</msg>
<status status="PASS" starttime="20210322 17:48:30.300" endtime="20210322 17:48:30.302"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:48:30.304" level="INFO">44710cd039c21632</msg>
<status status="PASS" starttime="20210322 17:48:30.303" endtime="20210322 17:48:30.305"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 17:48:30.307" level="INFO">200</msg>
<status status="PASS" starttime="20210322 17:48:30.306" endtime="20210322 17:48:30.307"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:48:30.309" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 17:48:30.308" endtime="20210322 17:48:30.309"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["code"]}</arg>
</arguments>
<assign>
<var>${verification_code}</var>
</assign>
<msg timestamp="20210322 17:48:30.311" level="INFO">${verification_code} = 6256</msg>
<status status="PASS" starttime="20210322 17:48:30.310" endtime="20210322 17:48:30.311"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${verification_code}</arg>
</arguments>
<msg timestamp="20210322 17:48:30.312" level="INFO">${verification_code} = 6256</msg>
<status status="PASS" starttime="20210322 17:48:30.312" endtime="20210322 17:48:30.313"></status>
</kw>
<status status="PASS" starttime="20210322 17:48:29.668" endtime="20210322 17:48:30.313"></status>
</kw>
<kw name="confirmar propriedade da chave pix" library="pix_dict_confirm_propriety">
<arguments>
<arg>verification_code=${verification_code}</arg>
<arg>holder_external_key=${holder_claimer}</arg>
<arg>account_external_key=${account_claimer}</arg>
<arg>entry_external_key=${entry_claimer}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 17:48:30.317" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 17:48:30.316" endtime="20210322 17:48:30.317"></status>
</kw>
<status status="PASS" starttime="20210322 17:48:30.315" endtime="20210322 17:48:30.318"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:48:30.319" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 17:48:30.318" endtime="20210322 17:48:30.319"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"code": "${verification_code}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 17:48:30.320" level="INFO">${body} = { "code": "6256" }</msg>
<status status="PASS" starttime="20210322 17:48:30.319" endtime="20210322 17:48:30.320"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries/${entry_external_key}/ownership</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:48:30.321" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/e24b61b00b744c6da2a0a8f2f64692d8/accounts/6eea188815a8447083b7b35a10ebb582/entries/1a79f519dd4d48e6b8859a3055b26492/ownership, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "code": "6256" } 
json=None</msg>
<msg timestamp="20210322 17:48:32.101" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:48:30.320" endtime="20210322 17:48:32.102"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:48:32.105" level="INFO">{'id': '1a79f519dd4d48e6b8859a3055b26492', 'status': 'active', 'created_at': '2021-03-22T05:47:43.618', 'updated_at': '2021-03-22T05:48:33.310', 'key': {'value': 'cardosoyuri@santos.net', 'type': 'email'}, 'account': {'id': '6eea188815a8447083b7b35a10ebb582', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': 'e24b61b00b744c6da2a0a8f2f64692d8', 'owner': {'name': 'Holder de teste', 'national_registration': '45719832041', 'type': 'individual'}, 'routing_number': '001', 'number': '6993365665', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}, 'resource': 'pix.entry'}</msg>
<status status="PASS" starttime="20210322 17:48:32.104" endtime="20210322 17:48:32.105"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:48:32.107" level="INFO">78317223ee4b5ac3</msg>
<status status="PASS" starttime="20210322 17:48:32.106" endtime="20210322 17:48:32.108"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 17:48:32.109" level="INFO">201</msg>
<status status="PASS" starttime="20210322 17:48:32.108" endtime="20210322 17:48:32.110"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:48:32.111" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:48:32.110" endtime="20210322 17:48:32.111"></status>
</kw>
<status status="PASS" starttime="20210322 17:48:30.314" endtime="20210322 17:48:32.111"></status>
</kw>
<kw name="buscar reivindicação de posse" library="pix_dict_get_claims">
<arguments>
<arg>holder_external_key=${holder_claimer}</arg>
<arg>account_external_key=${account_claimer}</arg>
<arg>claim_external_key=${claim_external_key}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 17:48:32.115" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 17:48:32.115" endtime="20210322 17:48:32.115"></status>
</kw>
<status status="PASS" starttime="20210322 17:48:32.113" endtime="20210322 17:48:32.115"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/claims/${claim_external_key}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:48:32.117" level="INFO">GET Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/e24b61b00b744c6da2a0a8f2f64692d8/accounts/6eea188815a8447083b7b35a10ebb582/claims/88f91f16081b43dc83b0d8fec51adfc4, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 17:48:32.770" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 17:48:32.116" endtime="20210322 17:48:32.771"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:48:32.774" level="INFO">{'id': '88f91f16081b43dc83b0d8fec51adfc4', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'created_at': '2021-03-22T05:47:47.421', 'updated_at': '2021-03-22T05:48:33.310', 'type': 'OWNERSHIP', 'status': 'completed', 'confirm_reason': 'USER_REQUESTED', 'key': {'value': 'cardosoyuri@santos.net', 'type': 'email'}, 'claimer': {'name': 'Holder de teste', 'national_registration': '45719832041', 'type': 'individual', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': 'e24b61b00b744c6da2a0a8f2f64692d8', 'account': {'digital_account_id': '6eea188815a8447083b7b35a10ebb582', 'routing_number': '001', 'number': '6993365665', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}}, 'donor': {'name': 'Holder de teste', 'national_registration': '71904283640', 'type': 'individual', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': '2741116fa6d24699b8a0887001096b3f', 'account': {'digital_account_id': '3dfb0f9e803740b4bbf3b459691eb2e8', 'routing_number': '001', 'number': '5760588565', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}}, 'completion_period_end': '2021-03-22T08:48:00.000', 'resolution_period_end': '2021-03-29T08:47:47.000', 'resource': 'pix.claim'}</msg>
<status status="PASS" starttime="20210322 17:48:32.772" endtime="20210322 17:48:32.774"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:48:32.777" level="INFO">f38551745082b2a1</msg>
<status status="PASS" starttime="20210322 17:48:32.775" endtime="20210322 17:48:32.777"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 17:48:32.779" level="INFO">200</msg>
<status status="PASS" starttime="20210322 17:48:32.778" endtime="20210322 17:48:32.780"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:48:32.782" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 17:48:32.781" endtime="20210322 17:48:32.782"></status>
</kw>
<status status="PASS" starttime="20210322 17:48:32.112" endtime="20210322 17:48:32.782"></status>
</kw>
<kw name="validar reivindicação" library="asserts">
<arguments>
<arg>marketplace_external_key=${marketplace_external_key}</arg>
<arg>claim_type=OWNERSHIP</arg>
<arg>claim_status=completed</arg>
<arg>key_value=${value}</arg>
<arg>key_type=${type}</arg>
<arg>claimer_name=${holder_name_claimer}</arg>
<arg>claimer_national_registration=${national_registration_claimer}</arg>
<arg>claimer_type=${holder_type_claimer}</arg>
<arg>claimer_marketplace=${marketplace_external_key}</arg>
<arg>claimer_holder_id=${holder_claimer}</arg>
<arg>claimer_account_id=${account_claimer}</arg>
<arg>claimer_routing_number=${account_routing_number_claimer}</arg>
<arg>claimer_account_number=${account_number_claimer}</arg>
<arg>claimer_account_type=CACC</arg>
<arg>claimer_psp_code=${psp_code}</arg>
<arg>claimer_psp_name=${psp_name}</arg>
<arg>donor_name=${holder_name_owner}</arg>
<arg>donor_national_registration=${national_registration_owner}</arg>
<arg>donor_type=${holder_type_owner}</arg>
<arg>donor_marketplace=${marketplace_external_key}</arg>
<arg>donor_holder_id=${holder_owner}</arg>
<arg>donor_account_id=${account_owner}</arg>
<arg>donor_routing_number=${account_routing_number_owner}</arg>
<arg>donor_account_number=${account_number_owner}</arg>
<arg>donor_account_type=CACC</arg>
<arg>donor_psp_code=${psp_code}</arg>
<arg>donor_psp_name=${psp_name}</arg>
<arg>claim_resource=pix.claim</arg>
</arguments>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<arguments>
<arg>result_format=datetime</arg>
</arguments>
<assign>
<var>${date}</var>
</assign>
<msg timestamp="20210322 17:48:32.788" level="INFO">${date} = 2021-03-22 17:48:32.788128</msg>
<status status="PASS" starttime="20210322 17:48:32.788" endtime="20210322 17:48:32.789"></status>
</kw>
<kw name="Convert Date" library="DateTime">
<doc>Converts between supported `date formats`.</doc>
<arguments>
<arg>${date}</arg>
<arg>exclude_millis=yes</arg>
<arg>result_format=%Y-%m-%d</arg>
<arg>date_format=%d-%m-%Y</arg>
</arguments>
<assign>
<var>${date}</var>
</assign>
<msg timestamp="20210322 17:48:32.790" level="INFO">${date} = 2021-03-22</msg>
<status status="PASS" starttime="20210322 17:48:32.789" endtime="20210322 17:48:32.790"></status>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${response.json()["id"]}</arg>
</arguments>
<msg timestamp="20210322 17:48:32.791" level="INFO">Length is 32</msg>
<status status="PASS" starttime="20210322 17:48:32.790" endtime="20210322 17:48:32.791"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["marketplace"]}</arg>
<arg>${marketplace_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:48:32.792" endtime="20210322 17:48:32.792"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response.json()["created_at"]}</arg>
<arg>${date}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:48:32.793" endtime="20210322 17:48:32.793"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response.json()["updated_at"]}</arg>
<arg>${date}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:48:32.794" endtime="20210322 17:48:32.794"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["type"]}</arg>
<arg>${claim_type}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:48:32.794" endtime="20210322 17:48:32.795"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["status"]}</arg>
<arg>${claim_status}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:48:32.796" endtime="20210322 17:48:32.796"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${key_value}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:48:32.797" endtime="20210322 17:48:32.797"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["key"]["type"]}</arg>
<arg>${key_type}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:48:32.798" endtime="20210322 17:48:32.798"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["claimer"]["name"]}</arg>
<arg>${claimer_name}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:48:32.798" endtime="20210322 17:48:32.799"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["claimer"]["national_registration"]}</arg>
<arg>${claimer_national_registration}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:48:32.799" endtime="20210322 17:48:32.800"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["claimer"]["type"]}</arg>
<arg>${claimer_type}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:48:32.800" endtime="20210322 17:48:32.801"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["claimer"]["marketplace"]}</arg>
<arg>${claimer_marketplace}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:48:32.801" endtime="20210322 17:48:32.802"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["claimer"]["holder"]}</arg>
<arg>${claimer_holder_id}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:48:32.802" endtime="20210322 17:48:32.803"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["claimer"]["account"]["digital_account_id"]}</arg>
<arg>${claimer_account_id}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:48:32.803" endtime="20210322 17:48:32.804"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["claimer"]["account"]["routing_number"]}</arg>
<arg>${claimer_routing_number}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:48:32.804" endtime="20210322 17:48:32.804"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["claimer"]["account"]["number"]}</arg>
<arg>${claimer_account_number}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:48:32.805" endtime="20210322 17:48:32.805"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["claimer"]["account"]["type"]}</arg>
<arg>${claimer_account_type}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:48:32.806" endtime="20210322 17:48:32.806"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["claimer"]["psp"]["code"]}</arg>
<arg>${claimer_psp_code}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:48:32.806" endtime="20210322 17:48:32.807"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["claimer"]["psp"]["name"]}</arg>
<arg>${claimer_psp_name}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:48:32.808" endtime="20210322 17:48:32.808"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["donor"]["name"]}</arg>
<arg>${donor_name}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:48:32.809" endtime="20210322 17:48:32.809"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["donor"]["national_registration"]}</arg>
<arg>${donor_national_registration}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:48:32.810" endtime="20210322 17:48:32.810"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["donor"]["type"]}</arg>
<arg>${donor_type}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:48:32.810" endtime="20210322 17:48:32.811"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["donor"]["marketplace"]}</arg>
<arg>${donor_marketplace}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:48:32.811" endtime="20210322 17:48:32.812"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["donor"]["holder"]}</arg>
<arg>${donor_holder_id}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:48:32.812" endtime="20210322 17:48:32.812"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["donor"]["account"]["digital_account_id"]}</arg>
<arg>${donor_account_id}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:48:32.813" endtime="20210322 17:48:32.813"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["donor"]["account"]["routing_number"]}</arg>
<arg>${donor_routing_number}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:48:32.813" endtime="20210322 17:48:32.814"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["donor"]["account"]["number"]}</arg>
<arg>${donor_account_number}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:48:32.814" endtime="20210322 17:48:32.815"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["donor"]["account"]["type"]}</arg>
<arg>${donor_account_type}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:48:32.815" endtime="20210322 17:48:32.815"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["donor"]["psp"]["code"]}</arg>
<arg>${donor_psp_code}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:48:32.816" endtime="20210322 17:48:32.816"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["donor"]["psp"]["name"]}</arg>
<arg>${donor_psp_name}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:48:32.816" endtime="20210322 17:48:32.817"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["resource"]}</arg>
<arg>${claim_resource}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:48:32.817" endtime="20210322 17:48:32.818"></status>
</kw>
<status status="PASS" starttime="20210322 17:48:32.783" endtime="20210322 17:48:32.818"></status>
</kw>
<doc>Fluxo Básico</doc>
<tags>
<tag>smoke_test</tag>
</tags>
<status status="PASS" starttime="20210322 17:47:31.956" endtime="20210322 17:48:32.818" critical="yes"></status>
</test>
<doc>Funcionalidade: Criar Reivindicação de Posse
Eu, como um Holder, portador de uma conta ativa em Banking
Desejo aceitar uma reivindicação de posse de uma chave de endereçamento</doc>
<status status="PASS" starttime="20210322 17:46:29.788" endtime="20210322 17:48:32.818"></status>
</suite>
<status status="PASS" starttime="20210322 17:45:53.425" endtime="20210322 17:48:33.277"></status>
</suite>
<status status="PASS" starttime="20210322 17:43:57.576" endtime="20210322 17:48:33.850"></status>
</suite>
<statistics>
<total>
<stat pass="23" fail="0">Critical Tests</stat>
<stat pass="23" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="14" fail="0">regression_test</stat>
<stat pass="23" fail="0">smoke_test</stat>
</tag>
<suite>
<stat pass="23" fail="0" id="s1" name="Pix-Dict">Pix-Dict</stat>
<stat pass="20" fail="0" id="s1-s1" name="Diretorio">Pix-Dict.Diretorio</stat>
<stat pass="5" fail="0" id="s1-s1-s1" name="Buscar Chave de Endereçamento">Pix-Dict.Diretorio.Buscar Chave de Endereçamento</stat>
<stat pass="5" fail="0" id="s1-s1-s2" name="Confirmação de Propriedade">Pix-Dict.Diretorio.Confirmação de Propriedade</stat>
<stat pass="5" fail="0" id="s1-s1-s3" name="Criar Chave de Endereçamento">Pix-Dict.Diretorio.Criar Chave de Endereçamento</stat>
<stat pass="5" fail="0" id="s1-s1-s4" name="Excluir Chave de Endereçamento">Pix-Dict.Diretorio.Excluir Chave de Endereçamento</stat>
<stat pass="3" fail="0" id="s1-s2" name="Reivindicacao">Pix-Dict.Reivindicacao</stat>
<stat pass="1" fail="0" id="s1-s2-s1" name="Cancelar Reivindicação de Posse">Pix-Dict.Reivindicacao.Cancelar Reivindicação de Posse</stat>
<stat pass="2" fail="0" id="s1-s2-s2" name="Criar Reivindicação de Posse">Pix-Dict.Reivindicacao.Criar Reivindicação de Posse</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>

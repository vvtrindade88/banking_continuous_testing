<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.8.1 on win32)" generated="20210322 02:39:02.693" rpa="false">
<suite id="s1" name="Pix-Dict" source="C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\tests\pix-dict">
<suite id="s1-s1" name="Diretorio" source="C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\tests\pix-dict\diretorio">
<suite id="s1-s1-s1" name="Buscar Chave de Endereçamento" source="C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\tests\pix-dict\diretorio\Buscar Chave de Endereçamento.robot">
<test id="s1-s1-s1-t1" name="Cenário: Buscar chave de endereçamento do tipo EVP">
<kw name="criar holder individual ativo" library="accreditation_create_holder_active">
<kw name="conectar accreditation" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accreditation</arg>
<arg>url=${accreditation_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 02:39:03.349" level="INFO">Creating Session using : alias=accreditation, url=https://banking-accreditation-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 02:39:03.348" endtime="20210322 02:39:03.349"></status>
</kw>
<status status="PASS" starttime="20210322 02:39:03.348" endtime="20210322 02:39:03.349"></status>
</kw>
<kw name="Cpf" library="FakerLibrary">
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 02:39:03.350" level="INFO">${national_registration} = 982.647.305-74</msg>
<status status="PASS" starttime="20210322 02:39:03.349" endtime="20210322 02:39:03.350"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${national_registration}</arg>
<arg>.</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 02:39:03.350" level="INFO">${national_registration} = 982647305-74</msg>
<status status="PASS" starttime="20210322 02:39:03.350" endtime="20210322 02:39:03.350"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${national_registration}</arg>
<arg>-</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 02:39:03.351" level="INFO">${national_registration} = 98264730574</msg>
<status status="PASS" starttime="20210322 02:39:03.351" endtime="20210322 02:39:03.351"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${national_registration}</arg>
</arguments>
<msg timestamp="20210322 02:39:03.352" level="INFO">${national_registration} = 98264730574</msg>
<status status="PASS" starttime="20210322 02:39:03.352" endtime="20210322 02:39:03.352"></status>
</kw>
<kw name="Rg" library="FakerLibrary">
<doc>Brazilian RG, return plain numbers.
Check:  https://www.ngmatematica.com/2014/02/como-determinar-o-digito-verificador-do.html</doc>
<assign>
<var>${identity_card}</var>
</assign>
<msg timestamp="20210322 02:39:03.353" level="INFO">${identity_card} = 743165287</msg>
<status status="PASS" starttime="20210322 02:39:03.353" endtime="20210322 02:39:03.353"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${identity_card}</arg>
</arguments>
<msg timestamp="20210322 02:39:03.354" level="INFO">${identity_card} = 743165287</msg>
<status status="PASS" starttime="20210322 02:39:03.354" endtime="20210322 02:39:03.354"></status>
</kw>
<kw name="criar holder individual" library="accreditation_post_holder_individual">
<arguments>
<arg>holder_type=individual</arg>
<arg>holder_name=${holder_name}</arg>
<arg>email=${email}</arg>
<arg>national_registration=${national_registration}</arg>
<arg>revenue=${revenue}</arg>
<arg>birthday=${birthday}</arg>
<arg>mothers_name=${mothers_name}</arg>
<arg>identity_card=${identity_card}</arg>
<arg>pep=false</arg>
<arg>cbo=${cbo}</arg>
</arguments>
<kw name="conectar accreditation" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accreditation</arg>
<arg>url=${accreditation_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 02:39:03.356" level="INFO">Creating Session using : alias=accreditation, url=https://banking-accreditation-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 02:39:03.355" endtime="20210322 02:39:03.356"></status>
</kw>
<status status="PASS" starttime="20210322 02:39:03.355" endtime="20210322 02:39:03.356"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_type}</arg>
</arguments>
<msg timestamp="20210322 02:39:03.357" level="INFO">${holder_type} = individual</msg>
<status status="PASS" starttime="20210322 02:39:03.356" endtime="20210322 02:39:03.357"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_name}</arg>
</arguments>
<msg timestamp="20210322 02:39:03.357" level="INFO">${holder_name} = Holder de teste</msg>
<status status="PASS" starttime="20210322 02:39:03.357" endtime="20210322 02:39:03.357"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:39:03.358" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 02:39:03.358" endtime="20210322 02:39:03.358"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "${holder_type}",</arg>
<arg>"name": "${holder_name}",</arg>
<arg>"email": "${email}",</arg>
<arg>"national_registration": "${national_registration}",</arg>
<arg>"revenue": ${revenue},</arg>
<arg>"birthday": "${birthday}",</arg>
<arg>"mothers_name": "${mothers_name}",</arg>
<arg>"identity_card": "${identity_card}",</arg>
<arg>"pep": false,</arg>
<arg>"cbo": ${cbo}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 02:39:03.359" level="INFO">${body} = { "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "98264730574", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder",...</msg>
<status status="PASS" starttime="20210322 02:39:03.358" endtime="20210322 02:39:03.359"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:39:03.360" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "98264730574", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder", "identity_card": "743165287", "pep": false, "cbo": 821450 } 
json=None</msg>
<msg timestamp="20210322 02:39:04.058" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:39:03.359" endtime="20210322 02:39:04.058"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:39:04.059" level="INFO">{'id': '0155b57c4b1d4ff9a4f294ea064ed9ca', 'name': 'Holder de teste', 'revenue': 5500.0, 'email': 'teste@teste.com.br', 'status': 'waiting_info_and_documents', 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'marketplace_name': 'Marketplace de Teste', 'created_at': '2021-03-22T02:39:04.866305', 'updated_at': '2021-03-22T02:39:04.866307', 'type': 'individual', 'national_registration': '98264730574', 'birthday': '1988-04-23', 'mothers_name': 'Mãe do Holder', 'identity_card': '743165287', 'pep': False, 'cbo': '821450', '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/0155b57c4b1d4ff9a4f294ea064ed9ca', 'type': 'GET'}, 'phones': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/0155b57c4b1d4ff9a4f294ea064ed9ca/phones', 'type': 'GET'}, 'addresses': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/0155b57c4b1d4ff9a4f294ea064ed9ca/addresses', 'type': 'GET'}, 'documents': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/0155b57c4b1d4ff9a4f294ea064ed9ca/documents', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 02:39:04.058" endtime="20210322 02:39:04.059"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:39:04.059" level="INFO">63e92c2f04fcea4a</msg>
<status status="PASS" starttime="20210322 02:39:04.059" endtime="20210322 02:39:04.059"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${body}</arg>
</arguments>
<msg timestamp="20210322 02:39:04.059" level="INFO">{ "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "98264730574", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder", "identity_card": "743165287", "pep": false, "cbo": 821450 }</msg>
<status status="PASS" starttime="20210322 02:39:04.059" endtime="20210322 02:39:04.059"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:39:04.060" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:39:04.059" endtime="20210322 02:39:04.060"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${holder_external_key}</var>
</assign>
<msg timestamp="20210322 02:39:04.060" level="INFO">${holder_external_key} = 0155b57c4b1d4ff9a4f294ea064ed9ca</msg>
<status status="PASS" starttime="20210322 02:39:04.060" endtime="20210322 02:39:04.060"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_external_key}</arg>
</arguments>
<msg timestamp="20210322 02:39:04.061" level="INFO">${holder_external_key} = 0155b57c4b1d4ff9a4f294ea064ed9ca</msg>
<status status="PASS" starttime="20210322 02:39:04.060" endtime="20210322 02:39:04.061"></status>
</kw>
<status status="PASS" starttime="20210322 02:39:03.354" endtime="20210322 02:39:04.061"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_name}</arg>
</arguments>
<msg timestamp="20210322 02:39:04.061" level="INFO">${holder_name} = Holder de teste</msg>
<status status="PASS" starttime="20210322 02:39:04.061" endtime="20210322 02:39:04.061"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 02:39:04.061" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:39:04.061" endtime="20210322 02:39:04.061"></status>
</kw>
<kw name="criar holder phone" library="accreditation_post_holder_phone">
<arguments>
<arg>21</arg>
<arg>51</arg>
<arg>996221236</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:39:04.062" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 02:39:04.062" endtime="20210322 02:39:04.062"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"area_code": "${phone_area_code}",</arg>
<arg>"country_code": "${phone_country_code}",</arg>
<arg>"number": "${phone_number}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 02:39:04.063" level="INFO">${body} = { "area_code": "21", "country_code": "51", "number": "996221236" }</msg>
<status status="PASS" starttime="20210322 02:39:04.063" endtime="20210322 02:39:04.064"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/phones</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:39:04.064" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/0155b57c4b1d4ff9a4f294ea064ed9ca/phones, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "area_code": "21", "country_code": "51", "number": "996221236" } 
json=None</msg>
<msg timestamp="20210322 02:39:04.321" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:39:04.064" endtime="20210322 02:39:04.321"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:39:04.323" level="INFO">{'id': 'c009adccc5264eec900cb4f215862029', 'area_code': '21', 'country_code': '51', 'number': '996221236', 'main': True, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/0155b57c4b1d4ff9a4f294ea064ed9ca/phones/c009adccc5264eec900cb4f215862029', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/0155b57c4b1d4ff9a4f294ea064ed9ca', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 02:39:04.322" endtime="20210322 02:39:04.323"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:39:04.326" level="INFO">98c59172cc680dc7</msg>
<status status="PASS" starttime="20210322 02:39:04.325" endtime="20210322 02:39:04.326"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:39:04.328" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:39:04.327" endtime="20210322 02:39:04.328"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${phone_external_key}</var>
</assign>
<msg timestamp="20210322 02:39:04.330" level="INFO">${phone_external_key} = c009adccc5264eec900cb4f215862029</msg>
<status status="PASS" starttime="20210322 02:39:04.329" endtime="20210322 02:39:04.330"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${phone_external_key}</arg>
</arguments>
<msg timestamp="20210322 02:39:04.331" level="INFO">${phone_external_key} = c009adccc5264eec900cb4f215862029</msg>
<status status="PASS" starttime="20210322 02:39:04.331" endtime="20210322 02:39:04.332"></status>
</kw>
<status status="PASS" starttime="20210322 02:39:04.062" endtime="20210322 02:39:04.332"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 02:39:04.333" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:39:04.332" endtime="20210322 02:39:04.333"></status>
</kw>
<kw name="criar holder address" library="accreditation_post_holder_address">
<arguments>
<arg>Rio de Janeiro</arg>
<arg>Rio de Janeiro</arg>
<arg>Brasil</arg>
<arg>Bairro de Testes</arg>
<arg>Rua de Testes</arg>
<arg>90</arg>
<arg>apto 200</arg>
<arg>21550987</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:39:04.336" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 02:39:04.335" endtime="20210322 02:39:04.336"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"city": "${city}",</arg>
<arg>"state": "${state}",</arg>
<arg>"country": "${country}",</arg>
<arg>"neighborhood": "${neighborhood}",</arg>
<arg>"street": "${street}",</arg>
<arg>"number": "${number}",</arg>
<arg>"complement": "${complement}",</arg>
<arg>"postal_code": "${postal_code}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 02:39:04.337" level="INFO">${body} = { "city": "Rio de Janeiro", "state": "Rio de Janeiro", "country": "Brasil", "neighborhood": "Bairro de Testes", "street": "Rua de Testes", "number": "90", "complement": "apto 200", "postal_code": "215...</msg>
<status status="PASS" starttime="20210322 02:39:04.336" endtime="20210322 02:39:04.337"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/addresses</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:39:04.339" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/0155b57c4b1d4ff9a4f294ea064ed9ca/addresses, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "city": "Rio de Janeiro", "state": "Rio de Janeiro", "country": "Brasil", "neighborhood": "Bairro de Testes", "street": "Rua de Testes", "number": "90", "complement": "apto 200", "postal_code": "21550987" } 
json=None</msg>
<msg timestamp="20210322 02:39:04.561" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:39:04.338" endtime="20210322 02:39:04.561"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:39:04.563" level="INFO">{'id': 'ad57c06d780e4cf2b60afc53c953088d', 'street': 'Rua de Testes', 'number': '90', 'city': 'Rio de Janeiro', 'complement': 'apto 200', 'state': 'Rio de Janeiro', 'neighborhood': 'Bairro de Testes', 'postal_code': '21550987', 'country': 'Brasil', 'main': True, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/0155b57c4b1d4ff9a4f294ea064ed9ca/addresses/ad57c06d780e4cf2b60afc53c953088d', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/0155b57c4b1d4ff9a4f294ea064ed9ca', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 02:39:04.562" endtime="20210322 02:39:04.564"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:39:04.566" level="INFO">10593c891bc06436</msg>
<status status="PASS" starttime="20210322 02:39:04.565" endtime="20210322 02:39:04.567"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:39:04.569" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:39:04.567" endtime="20210322 02:39:04.569"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${address_external_key}</var>
</assign>
<msg timestamp="20210322 02:39:04.571" level="INFO">${address_external_key} = ad57c06d780e4cf2b60afc53c953088d</msg>
<status status="PASS" starttime="20210322 02:39:04.569" endtime="20210322 02:39:04.571"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${address_external_key}</arg>
</arguments>
<msg timestamp="20210322 02:39:04.572" level="INFO">${address_external_key} = ad57c06d780e4cf2b60afc53c953088d</msg>
<status status="PASS" starttime="20210322 02:39:04.571" endtime="20210322 02:39:04.572"></status>
</kw>
<status status="PASS" starttime="20210322 02:39:04.334" endtime="20210322 02:39:04.572"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 02:39:04.574" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:39:04.573" endtime="20210322 02:39:04.574"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>SELFIE</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:39:04.576" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 02:39:04.575" endtime="20210322 02:39:04.576"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 02:39:04.578" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 02:39:04.580" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 02:39:04.577" endtime="20210322 02:39:04.580"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:39:04.582" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/0155b57c4b1d4ff9a4f294ea064ed9ca/documents?type=SELFIE, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 02:39:04.882" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:39:04.581" endtime="20210322 02:39:04.882"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:39:04.883" level="INFO">{'id': '1bec9d3ac4fb4d0bb85b05b3c3decdac', 'document_type': 'selfie', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/0155b57c4b1d4ff9a4f294ea064ed9ca/documents/1bec9d3ac4fb4d0bb85b05b3c3decdac', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/0155b57c4b1d4ff9a4f294ea064ed9ca', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/0155b57c4b1d4ff9a4f294ea064ed9ca/documents/1bec9d3ac4fb4d0bb85b05b3c3decdac/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 02:39:04.882" endtime="20210322 02:39:04.883"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:39:04.884" level="INFO">d1272f26cf21cf7a</msg>
<status status="PASS" starttime="20210322 02:39:04.884" endtime="20210322 02:39:04.885"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:39:04.886" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:39:04.885" endtime="20210322 02:39:04.886"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 02:39:04.888" level="INFO">${document_external_key} = 1bec9d3ac4fb4d0bb85b05b3c3decdac</msg>
<status status="PASS" starttime="20210322 02:39:04.887" endtime="20210322 02:39:04.888"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 02:39:04.889" level="INFO">${document_external_key} = 1bec9d3ac4fb4d0bb85b05b3c3decdac</msg>
<status status="PASS" starttime="20210322 02:39:04.888" endtime="20210322 02:39:04.889"></status>
</kw>
<status status="PASS" starttime="20210322 02:39:04.575" endtime="20210322 02:39:04.889"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 02:39:04.890" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:39:04.890" endtime="20210322 02:39:04.891"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>RG_FRENTE</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:39:04.892" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 02:39:04.891" endtime="20210322 02:39:04.892"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 02:39:04.893" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 02:39:04.895" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 02:39:04.892" endtime="20210322 02:39:04.895"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:39:04.896" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/0155b57c4b1d4ff9a4f294ea064ed9ca/documents?type=RG_FRENTE, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 02:39:05.248" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:39:04.895" endtime="20210322 02:39:05.248"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:39:05.250" level="INFO">{'id': '51f29cd6a1a141b5a66fdb939f0c9e44', 'document_type': 'rg_frente', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/0155b57c4b1d4ff9a4f294ea064ed9ca/documents/51f29cd6a1a141b5a66fdb939f0c9e44', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/0155b57c4b1d4ff9a4f294ea064ed9ca', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/0155b57c4b1d4ff9a4f294ea064ed9ca/documents/51f29cd6a1a141b5a66fdb939f0c9e44/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 02:39:05.249" endtime="20210322 02:39:05.251"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:39:05.253" level="INFO">587229681602f971</msg>
<status status="PASS" starttime="20210322 02:39:05.252" endtime="20210322 02:39:05.253"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:39:05.255" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:39:05.254" endtime="20210322 02:39:05.256"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 02:39:05.258" level="INFO">${document_external_key} = 51f29cd6a1a141b5a66fdb939f0c9e44</msg>
<status status="PASS" starttime="20210322 02:39:05.257" endtime="20210322 02:39:05.259"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 02:39:05.260" level="INFO">${document_external_key} = 51f29cd6a1a141b5a66fdb939f0c9e44</msg>
<status status="PASS" starttime="20210322 02:39:05.259" endtime="20210322 02:39:05.261"></status>
</kw>
<status status="PASS" starttime="20210322 02:39:04.891" endtime="20210322 02:39:05.261"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 02:39:05.263" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:39:05.262" endtime="20210322 02:39:05.263"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>RG_VERSO</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:39:05.266" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 02:39:05.265" endtime="20210322 02:39:05.266"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 02:39:05.267" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 02:39:05.270" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 02:39:05.267" endtime="20210322 02:39:05.271"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:39:05.272" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/0155b57c4b1d4ff9a4f294ea064ed9ca/documents?type=RG_VERSO, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 02:39:05.526" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:39:05.271" endtime="20210322 02:39:05.527"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:39:05.529" level="INFO">{'id': '6357d0007459443d8199c4e0eba8898f', 'document_type': 'rg_verso', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/0155b57c4b1d4ff9a4f294ea064ed9ca/documents/6357d0007459443d8199c4e0eba8898f', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/0155b57c4b1d4ff9a4f294ea064ed9ca', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/0155b57c4b1d4ff9a4f294ea064ed9ca/documents/6357d0007459443d8199c4e0eba8898f/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 02:39:05.527" endtime="20210322 02:39:05.529"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:39:05.531" level="INFO">bea8b571fa32fd8c</msg>
<status status="PASS" starttime="20210322 02:39:05.530" endtime="20210322 02:39:05.531"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:39:05.533" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:39:05.532" endtime="20210322 02:39:05.533"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 02:39:05.536" level="INFO">${document_external_key} = 6357d0007459443d8199c4e0eba8898f</msg>
<status status="PASS" starttime="20210322 02:39:05.534" endtime="20210322 02:39:05.536"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 02:39:05.537" level="INFO">${document_external_key} = 6357d0007459443d8199c4e0eba8898f</msg>
<status status="PASS" starttime="20210322 02:39:05.537" endtime="20210322 02:39:05.537"></status>
</kw>
<status status="PASS" starttime="20210322 02:39:05.264" endtime="20210322 02:39:05.538"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 02:39:05.539" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:39:05.538" endtime="20210322 02:39:05.539"></status>
</kw>
<kw name="solicitar aprovação do holder" library="accreditation_request_approval">
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:39:05.540" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 02:39:05.540" endtime="20210322 02:39:05.541"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/approval</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:39:05.542" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/0155b57c4b1d4ff9a4f294ea064ed9ca/approval, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data=None 
json=None</msg>
<msg timestamp="20210322 02:39:05.835" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:39:05.541" endtime="20210322 02:39:05.835"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:39:05.838" level="INFO">{'message': 'Approval request accepted successfully. Processing analysis'}</msg>
<status status="PASS" starttime="20210322 02:39:05.836" endtime="20210322 02:39:05.838"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:39:05.839" level="INFO">9d0cb15870e2775a</msg>
<status status="PASS" starttime="20210322 02:39:05.838" endtime="20210322 02:39:05.840"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:39:05.842" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:39:05.841" endtime="20210322 02:39:05.842"></status>
</kw>
<status status="PASS" starttime="20210322 02:39:05.539" endtime="20210322 02:39:05.842"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 02:39:05.844" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:39:05.843" endtime="20210322 02:39:05.844"></status>
</kw>
<kw name="recebendo notificação de aprovação" library="accreditation_risk_notification">
<kw name="Uuid 4" library="FakerLibrary">
<doc>Generates a random UUID4 string.
:param cast_to: Specify what type the UUID should be cast to. Default is `str`
:type cast_to: callable</doc>
<assign>
<var>${assessment_id}</var>
</assign>
<msg timestamp="20210322 02:39:05.845" level="INFO">${assessment_id} = dfc3b12a-5b9f-4cd5-9e80-875351c20abc</msg>
<status status="PASS" starttime="20210322 02:39:05.845" endtime="20210322 02:39:05.845"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>year</arg>
</arguments>
<assign>
<var>${year}</var>
</assign>
<msg timestamp="20210322 02:39:05.847" level="INFO">${year} = 2021</msg>
<status status="PASS" starttime="20210322 02:39:05.846" endtime="20210322 02:39:05.847"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>month</arg>
</arguments>
<assign>
<var>${month}</var>
</assign>
<msg timestamp="20210322 02:39:05.848" level="INFO">${month} = 03</msg>
<status status="PASS" starttime="20210322 02:39:05.847" endtime="20210322 02:39:05.848"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>day</arg>
</arguments>
<assign>
<var>${day}</var>
</assign>
<msg timestamp="20210322 02:39:05.848" level="INFO">${day} = 22</msg>
<status status="PASS" starttime="20210322 02:39:05.848" endtime="20210322 02:39:05.849"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:39:05.849" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 02:39:05.849" endtime="20210322 02:39:05.849"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "risk.assessment.result",</arg>
<arg>"resource": "business.holder",</arg>
<arg>"created_at": "${year}-${month}-${day} 15:28:56.747Z",</arg>
<arg>"marketplace_id": "${marketplace_external_key}",</arg>
<arg>"object": {</arg>
<arg>"result": "APPROVED",</arg>
<arg>"holder_id": "${holder_external_key}",</arg>
<arg>"applicant_id": "${application_external_key}",</arg>
<arg>"assessment_id": "${assessment_id}"</arg>
<arg>}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 02:39:05.851" level="INFO">${body} = { "type": "risk.assessment.result", "resource": "business.holder", "created_at": "2021-03-22 15:28:56.747Z", "marketplace_id": "f71a8951368a4cc085cf7875ff44e61c", "object": { "result": "APPROVED", "ho...</msg>
<status status="PASS" starttime="20210322 02:39:05.850" endtime="20210322 02:39:05.851"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/admin/internal_operation/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/registration/approval</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:39:05.852" level="INFO">POST Request using : uri=/admin/internal_operation/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/0155b57c4b1d4ff9a4f294ea064ed9ca/registration/approval, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "risk.assessment.result", "resource": "business.holder", "created_at": "2021-03-22 15:28:56.747Z", "marketplace_id": "f71a8951368a4cc085cf7875ff44e61c", "object": { "result": "APPROVED", "holder_id": "0155b57c4b1d4ff9a4f294ea064ed9ca", "applicant_id": "bcc25a6751c14b52af1340d40dba78c5", "assessment_id": "dfc3b12a-5b9f-4cd5-9e80-875351c20abc" } } 
json=None</msg>
<msg timestamp="20210322 02:39:06.054" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:39:05.851" endtime="20210322 02:39:06.054"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:39:06.057" level="INFO">{'message': 'Holder approved successfully'}</msg>
<status status="PASS" starttime="20210322 02:39:06.055" endtime="20210322 02:39:06.058"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:39:06.060" level="INFO">1fa0e927371973ab</msg>
<status status="PASS" starttime="20210322 02:39:06.058" endtime="20210322 02:39:06.060"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:39:06.062" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:39:06.061" endtime="20210322 02:39:06.062"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 02:39:06.064" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:39:06.063" endtime="20210322 02:39:06.064"></status>
</kw>
<status status="PASS" starttime="20210322 02:39:05.844" endtime="20210322 02:39:06.065"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 02:39:06.066" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:39:06.065" endtime="20210322 02:39:06.066"></status>
</kw>
<kw name="buscar account por holder" library="accounts_get_accounts_by_holder">
<kw name="conectar accounts" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accounts</arg>
<arg>url=${account_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 02:39:06.069" level="INFO">Creating Session using : alias=accounts, url=https://banking-accounts-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 02:39:06.068" endtime="20210322 02:39:06.070"></status>
</kw>
<status status="PASS" starttime="20210322 02:39:06.068" endtime="20210322 02:39:06.070"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accounts</arg>
<arg>/marketplaces/${marketplace_external_key}/holders/${holder_external_key}/accounts</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:39:06.071" level="INFO">GET Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/holders/0155b57c4b1d4ff9a4f294ea064ed9ca/accounts, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 02:39:06.713" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:39:06.071" endtime="20210322 02:39:06.713"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:39:06.714" level="INFO">{'items': [{'id': 'dab5e1bd32164293b8bcd696e48e9912', 'holder': '0155b57c4b1d4ff9a4f294ea064ed9ca', 'balance': '0.00', 'currency': 'BRL', 'routing_number': '001', 'number': '613458111', 'status': 'active', 'metadata': {}, 'created_at': '2021-03-22T05:39:06.886488', 'updated_at': '2021-03-22T05:39:06.886488', 'primary': True, 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'uri': '/v2/marketplaces/f71a8951368a4cc085cf7875ff44e61c/accounts/dab5e1bd32164293b8bcd696e48e9912', 'resource': 'payment_account'}], 'has_more': False, 'limit': 100, 'total_pages': 1, 'page': 1, 'offset': 0, 'total': '1', 'query_count': '1'}</msg>
<status status="PASS" starttime="20210322 02:39:06.713" endtime="20210322 02:39:06.714"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:39:06.714" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:39:06.714" endtime="20210322 02:39:06.714"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["id"]}</arg>
</arguments>
<assign>
<var>${account_external_key}</var>
</assign>
<msg timestamp="20210322 02:39:06.715" level="INFO">${account_external_key} = dab5e1bd32164293b8bcd696e48e9912</msg>
<status status="PASS" starttime="20210322 02:39:06.714" endtime="20210322 02:39:06.715"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_external_key}</arg>
</arguments>
<msg timestamp="20210322 02:39:06.715" level="INFO">${account_external_key} = dab5e1bd32164293b8bcd696e48e9912</msg>
<status status="PASS" starttime="20210322 02:39:06.715" endtime="20210322 02:39:06.715"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["number"]}</arg>
</arguments>
<assign>
<var>${account_number}</var>
</assign>
<msg timestamp="20210322 02:39:06.716" level="INFO">${account_number} = 613458111</msg>
<status status="PASS" starttime="20210322 02:39:06.716" endtime="20210322 02:39:06.716"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_number}</arg>
</arguments>
<msg timestamp="20210322 02:39:06.716" level="INFO">${account_number} = 613458111</msg>
<status status="PASS" starttime="20210322 02:39:06.716" endtime="20210322 02:39:06.716"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["routing_number"]}</arg>
</arguments>
<assign>
<var>${account_routing_number}</var>
</assign>
<msg timestamp="20210322 02:39:06.716" level="INFO">${account_routing_number} = 001</msg>
<status status="PASS" starttime="20210322 02:39:06.716" endtime="20210322 02:39:06.716"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_routing_number}</arg>
</arguments>
<msg timestamp="20210322 02:39:06.717" level="INFO">${account_routing_number} = 001</msg>
<status status="PASS" starttime="20210322 02:39:06.717" endtime="20210322 02:39:06.718"></status>
</kw>
<status status="PASS" starttime="20210322 02:39:06.067" endtime="20210322 02:39:06.718"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 02:39:06.718" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:39:06.718" endtime="20210322 02:39:06.718"></status>
</kw>
<status status="PASS" starttime="20210322 02:39:03.348" endtime="20210322 02:39:06.719"></status>
</kw>
<kw name="criar chave pix" library="pix_dict_create_entry">
<arguments>
<arg>evp</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 02:39:06.721" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 02:39:06.720" endtime="20210322 02:39:06.721"></status>
</kw>
<status status="PASS" starttime="20210322 02:39:06.720" endtime="20210322 02:39:06.721"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${type}</arg>
</arguments>
<msg timestamp="20210322 02:39:06.721" level="INFO">${type} = evp</msg>
<status status="PASS" starttime="20210322 02:39:06.721" endtime="20210322 02:39:06.721"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210322 02:39:06.722" level="INFO">${value} = </msg>
<status status="PASS" starttime="20210322 02:39:06.722" endtime="20210322 02:39:06.722"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:39:06.722" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 02:39:06.722" endtime="20210322 02:39:06.722"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "${type}",</arg>
<arg>"value": "${value}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 02:39:06.723" level="INFO">${body} = { "type": "evp", "value": "" }</msg>
<status status="PASS" starttime="20210322 02:39:06.722" endtime="20210322 02:39:06.723"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:39:06.723" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/0155b57c4b1d4ff9a4f294ea064ed9ca/accounts/dab5e1bd32164293b8bcd696e48e9912/entries, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "evp", "value": "" } 
json=None</msg>
<msg timestamp="20210322 02:39:08.538" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:39:06.723" endtime="20210322 02:39:08.538"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:39:08.538" level="INFO">{'id': '692682cf19d041519076f634a80fb1d3', 'status': 'active', 'created_at': '2021-03-22T02:39:08.247', 'updated_at': '2021-03-22T02:39:09.396', 'key': {'value': 'd5c8d202-e125-48cc-ae93-7b493bcb07d9', 'type': 'evp'}, 'account': {'id': 'dab5e1bd32164293b8bcd696e48e9912', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': '0155b57c4b1d4ff9a4f294ea064ed9ca', 'owner': {'name': 'Holder de teste', 'national_registration': '98264730574', 'type': 'individual'}, 'routing_number': '001', 'number': '613458111', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}, 'resource': 'pix.entry'}</msg>
<status status="PASS" starttime="20210322 02:39:08.538" endtime="20210322 02:39:08.538"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:39:08.539" level="INFO">44f7b904a3443aca</msg>
<status status="PASS" starttime="20210322 02:39:08.539" endtime="20210322 02:39:08.539"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 02:39:08.539" level="INFO">201</msg>
<status status="PASS" starttime="20210322 02:39:08.539" endtime="20210322 02:39:08.539"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:39:08.540" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:39:08.540" endtime="20210322 02:39:08.540"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${entry_external_key}</var>
</assign>
<msg timestamp="20210322 02:39:08.541" level="INFO">${entry_external_key} = 692682cf19d041519076f634a80fb1d3</msg>
<status status="PASS" starttime="20210322 02:39:08.540" endtime="20210322 02:39:08.541"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${entry_external_key}</arg>
</arguments>
<msg timestamp="20210322 02:39:08.541" level="INFO">${entry_external_key} = 692682cf19d041519076f634a80fb1d3</msg>
<status status="PASS" starttime="20210322 02:39:08.541" endtime="20210322 02:39:08.541"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["key"]["value"]}</arg>
</arguments>
<assign>
<var>${entry_key_value}</var>
</assign>
<msg timestamp="20210322 02:39:08.542" level="INFO">${entry_key_value} = d5c8d202-e125-48cc-ae93-7b493bcb07d9</msg>
<status status="PASS" starttime="20210322 02:39:08.542" endtime="20210322 02:39:08.542"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${entry_key_value}</arg>
</arguments>
<msg timestamp="20210322 02:39:08.543" level="INFO">${entry_key_value} = d5c8d202-e125-48cc-ae93-7b493bcb07d9</msg>
<status status="PASS" starttime="20210322 02:39:08.542" endtime="20210322 02:39:08.543"></status>
</kw>
<status status="PASS" starttime="20210322 02:39:06.719" endtime="20210322 02:39:08.543"></status>
</kw>
<kw name="buscar chave pix" library="pix_dict_get_entry">
<arguments>
<arg>${holder_external_key}</arg>
<arg>${account_external_key}</arg>
<arg>${entry_external_key}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 02:39:08.544" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 02:39:08.544" endtime="20210322 02:39:08.545"></status>
</kw>
<status status="PASS" starttime="20210322 02:39:08.544" endtime="20210322 02:39:08.545"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries/${entry_external_key}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:39:08.545" level="INFO">GET Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/0155b57c4b1d4ff9a4f294ea064ed9ca/accounts/dab5e1bd32164293b8bcd696e48e9912/entries/692682cf19d041519076f634a80fb1d3, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 02:39:09.195" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:39:08.545" endtime="20210322 02:39:09.195"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:39:09.197" level="INFO">{'id': '692682cf19d041519076f634a80fb1d3', 'status': 'active', 'created_at': '2021-03-22T02:39:08.247', 'updated_at': '2021-03-22T02:39:09.396', 'key': {'value': 'd5c8d202-e125-48cc-ae93-7b493bcb07d9', 'type': 'evp'}, 'account': {'id': 'dab5e1bd32164293b8bcd696e48e9912', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': '0155b57c4b1d4ff9a4f294ea064ed9ca', 'owner': {'name': 'Holder de teste', 'national_registration': '98264730574', 'type': 'individual'}, 'routing_number': '001', 'number': '613458111', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}, 'resource': 'pix.entry'}</msg>
<status status="PASS" starttime="20210322 02:39:09.196" endtime="20210322 02:39:09.197"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:39:09.199" level="INFO">18c279e356233175</msg>
<status status="PASS" starttime="20210322 02:39:09.198" endtime="20210322 02:39:09.200"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 02:39:09.200" level="INFO">200</msg>
<status status="PASS" starttime="20210322 02:39:09.200" endtime="20210322 02:39:09.200"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:39:09.201" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:39:09.200" endtime="20210322 02:39:09.201"></status>
</kw>
<status status="PASS" starttime="20210322 02:39:08.543" endtime="20210322 02:39:09.201"></status>
</kw>
<kw name="validar busca da chave pix" library="asserts">
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 02:39:09.202" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:39:09.201" endtime="20210322 02:39:09.202"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar status da chave</arg>
</arguments>
<msg timestamp="20210322 02:39:09.202" level="INFO">Validar status da chave</msg>
<status status="PASS" starttime="20210322 02:39:09.202" endtime="20210322 02:39:09.203"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${type}' == 'evp'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["status"]}</arg>
<arg>active</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'phone'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["status"]}</arg>
<arg>waiting_ownership_verification</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'email'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["status"]}</arg>
<arg>waiting_ownership_verification</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'national_registration'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["status"]}</arg>
<arg>active</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["status"]}</arg>
<arg>active</arg>
</arguments>
<status status="PASS" starttime="20210322 02:39:09.203" endtime="20210322 02:39:09.203"></status>
</kw>
<status status="PASS" starttime="20210322 02:39:09.203" endtime="20210322 02:39:09.203"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando Tipo da chave PIX</arg>
</arguments>
<msg timestamp="20210322 02:39:09.204" level="INFO">Validando Tipo da chave PIX</msg>
<status status="PASS" starttime="20210322 02:39:09.204" endtime="20210322 02:39:09.204"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${type}' == 'evp'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["type"]}</arg>
<arg>${type}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'phone'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["type"]}</arg>
<arg>${type}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'email'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["type"]}</arg>
<arg>${type}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'national_registration'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["type"]}</arg>
<arg>${type}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["key"]["type"]}</arg>
<arg>${type}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:39:09.205" endtime="20210322 02:39:09.205"></status>
</kw>
<status status="PASS" starttime="20210322 02:39:09.204" endtime="20210322 02:39:09.205"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando Valor da chave PIX</arg>
</arguments>
<msg timestamp="20210322 02:39:09.207" level="INFO">Validando Valor da chave PIX</msg>
<status status="PASS" starttime="20210322 02:39:09.206" endtime="20210322 02:39:09.207"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${type}' == 'evp'</arg>
<arg>Should Not Be Empty</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'phone'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${phone_pix}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'email'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${email_pix}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'national_registration'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${national_registration}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${response.json()["key"]["value"]}</arg>
</arguments>
<msg timestamp="20210322 02:39:09.208" level="INFO">Length is 36</msg>
<status status="PASS" starttime="20210322 02:39:09.207" endtime="20210322 02:39:09.208"></status>
</kw>
<status status="PASS" starttime="20210322 02:39:09.207" endtime="20210322 02:39:09.208"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando dados da conta</arg>
</arguments>
<msg timestamp="20210322 02:39:09.208" level="INFO">Validando dados da conta</msg>
<status status="PASS" starttime="20210322 02:39:09.208" endtime="20210322 02:39:09.208"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["id"]}</arg>
<arg>${account_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:39:09.209" endtime="20210322 02:39:09.209"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["marketplace"]}</arg>
<arg>${marketplace_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:39:09.210" endtime="20210322 02:39:09.210"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["holder"]}</arg>
<arg>${holder_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:39:09.210" endtime="20210322 02:39:09.211"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["number"]}</arg>
<arg>${account_number}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:39:09.211" endtime="20210322 02:39:09.211"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["routing_number"]}</arg>
<arg>${account_routing_number}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:39:09.212" endtime="20210322 02:39:09.212"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["type"]}</arg>
<arg>CACC</arg>
</arguments>
<status status="PASS" starttime="20210322 02:39:09.212" endtime="20210322 02:39:09.212"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar Proprietário da Account Owner</arg>
</arguments>
<msg timestamp="20210322 02:39:09.213" level="INFO">Validar Proprietário da Account Owner</msg>
<status status="PASS" starttime="20210322 02:39:09.213" endtime="20210322 02:39:09.213"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${holder_type}' == 'individual'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["account"]["owner"]["name"]}</arg>
<arg>${holder_name}</arg>
<arg>ELSE IF</arg>
<arg>'${holder_type}' == 'business'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["account"]["owner"]["name"]}</arg>
<arg>${legal_name}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["account"]["owner"]["name"]}</arg>
<arg>${holder_name}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:39:09.214" endtime="20210322 02:39:09.214"></status>
</kw>
<status status="PASS" starttime="20210322 02:39:09.213" endtime="20210322 02:39:09.214"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar national_registration da Account Owner</arg>
</arguments>
<msg timestamp="20210322 02:39:09.214" level="INFO">Validar national_registration da Account Owner</msg>
<status status="PASS" starttime="20210322 02:39:09.214" endtime="20210322 02:39:09.214"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${holder_type}' == 'individual'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["account"]["owner"]["national_registration"]}</arg>
<arg>${national_registration}</arg>
<arg>ELSE IF</arg>
<arg>'${holder_type}' == 'business'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["account"]["owner"]["national_registration"]}</arg>
<arg>${national_registration}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["account"]["owner"]["national_registration"]}</arg>
<arg>${national_registration}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:39:09.215" endtime="20210322 02:39:09.215"></status>
</kw>
<status status="PASS" starttime="20210322 02:39:09.215" endtime="20210322 02:39:09.216"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar Holder Type do Account Owner</arg>
</arguments>
<msg timestamp="20210322 02:39:09.216" level="INFO">Validar Holder Type do Account Owner</msg>
<status status="PASS" starttime="20210322 02:39:09.216" endtime="20210322 02:39:09.216"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${holder_type}' == 'individual'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["account"]["owner"]["type"]}</arg>
<arg>${holder_type}</arg>
<arg>ELSE IF</arg>
<arg>'${holder_type}' == 'business'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["account"]["owner"]["type"]}</arg>
<arg>${holder_type}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["account"]["owner"]["type"]}</arg>
<arg>${holder_type}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:39:09.217" endtime="20210322 02:39:09.218"></status>
</kw>
<status status="PASS" starttime="20210322 02:39:09.216" endtime="20210322 02:39:09.218"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar PSP</arg>
</arguments>
<msg timestamp="20210322 02:39:09.218" level="INFO">Validar PSP</msg>
<status status="PASS" starttime="20210322 02:39:09.218" endtime="20210322 02:39:09.218"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["psp"]["code"]}</arg>
<arg>19468242</arg>
</arguments>
<status status="PASS" starttime="20210322 02:39:09.219" endtime="20210322 02:39:09.219"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["psp"]["name"]}</arg>
<arg>Zoop Tecnologia e Meios de Pagamento S.A.</arg>
</arguments>
<status status="PASS" starttime="20210322 02:39:09.220" endtime="20210322 02:39:09.220"></status>
</kw>
<status status="PASS" starttime="20210322 02:39:09.201" endtime="20210322 02:39:09.220"></status>
</kw>
<doc>Fluxo Básico</doc>
<tags>
<tag>smoke_test</tag>
</tags>
<status status="PASS" starttime="20210322 02:39:03.347" endtime="20210322 02:39:09.220" critical="yes"></status>
</test>
<test id="s1-s1-s1-t2" name="Cenário: Buscar chave de endereçamento do tipo Phone">
<kw name="Random Number" library="FakerLibrary">
<doc>Returns a random number with 1 digit (default, when digits==None),
a random number with 0 to given number of digits, or a random number
with given number to given number of digits (when ``fix_len==True``).</doc>
<arguments>
<arg>digits=8</arg>
<arg>fix_len=True</arg>
</arguments>
<assign>
<var>${phone}</var>
</assign>
<msg timestamp="20210322 02:39:09.221" level="INFO">${phone} = 27620927</msg>
<status status="PASS" starttime="20210322 02:39:09.221" endtime="20210322 02:39:09.221"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>+55219${phone}</arg>
</arguments>
<assign>
<var>${phone_pix}</var>
</assign>
<msg timestamp="20210322 02:39:09.222" level="INFO">${phone_pix} = +5521927620927</msg>
<status status="PASS" starttime="20210322 02:39:09.221" endtime="20210322 02:39:09.222"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${phone_pix}</arg>
</arguments>
<msg timestamp="20210322 02:39:09.222" level="INFO">${phone_pix} = +5521927620927</msg>
<status status="PASS" starttime="20210322 02:39:09.222" endtime="20210322 02:39:09.222"></status>
</kw>
<kw name="criar holder individual ativo" library="accreditation_create_holder_active">
<kw name="conectar accreditation" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accreditation</arg>
<arg>url=${accreditation_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 02:39:09.223" level="INFO">Creating Session using : alias=accreditation, url=https://banking-accreditation-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 02:39:09.223" endtime="20210322 02:39:09.223"></status>
</kw>
<status status="PASS" starttime="20210322 02:39:09.222" endtime="20210322 02:39:09.223"></status>
</kw>
<kw name="Cpf" library="FakerLibrary">
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 02:39:09.224" level="INFO">${national_registration} = 094.632.851-05</msg>
<status status="PASS" starttime="20210322 02:39:09.224" endtime="20210322 02:39:09.224"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${national_registration}</arg>
<arg>.</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 02:39:09.224" level="INFO">${national_registration} = 094632851-05</msg>
<status status="PASS" starttime="20210322 02:39:09.224" endtime="20210322 02:39:09.224"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${national_registration}</arg>
<arg>-</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 02:39:09.225" level="INFO">${national_registration} = 09463285105</msg>
<status status="PASS" starttime="20210322 02:39:09.225" endtime="20210322 02:39:09.225"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${national_registration}</arg>
</arguments>
<msg timestamp="20210322 02:39:09.225" level="INFO">${national_registration} = 09463285105</msg>
<status status="PASS" starttime="20210322 02:39:09.225" endtime="20210322 02:39:09.225"></status>
</kw>
<kw name="Rg" library="FakerLibrary">
<doc>Brazilian RG, return plain numbers.
Check:  https://www.ngmatematica.com/2014/02/como-determinar-o-digito-verificador-do.html</doc>
<assign>
<var>${identity_card}</var>
</assign>
<msg timestamp="20210322 02:39:09.226" level="INFO">${identity_card} = 861437020</msg>
<status status="PASS" starttime="20210322 02:39:09.225" endtime="20210322 02:39:09.226"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${identity_card}</arg>
</arguments>
<msg timestamp="20210322 02:39:09.226" level="INFO">${identity_card} = 861437020</msg>
<status status="PASS" starttime="20210322 02:39:09.226" endtime="20210322 02:39:09.226"></status>
</kw>
<kw name="criar holder individual" library="accreditation_post_holder_individual">
<arguments>
<arg>holder_type=individual</arg>
<arg>holder_name=${holder_name}</arg>
<arg>email=${email}</arg>
<arg>national_registration=${national_registration}</arg>
<arg>revenue=${revenue}</arg>
<arg>birthday=${birthday}</arg>
<arg>mothers_name=${mothers_name}</arg>
<arg>identity_card=${identity_card}</arg>
<arg>pep=false</arg>
<arg>cbo=${cbo}</arg>
</arguments>
<kw name="conectar accreditation" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accreditation</arg>
<arg>url=${accreditation_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 02:39:09.228" level="INFO">Creating Session using : alias=accreditation, url=https://banking-accreditation-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 02:39:09.227" endtime="20210322 02:39:09.228"></status>
</kw>
<status status="PASS" starttime="20210322 02:39:09.227" endtime="20210322 02:39:09.228"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_type}</arg>
</arguments>
<msg timestamp="20210322 02:39:09.228" level="INFO">${holder_type} = individual</msg>
<status status="PASS" starttime="20210322 02:39:09.228" endtime="20210322 02:39:09.229"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_name}</arg>
</arguments>
<msg timestamp="20210322 02:39:09.229" level="INFO">${holder_name} = Holder de teste</msg>
<status status="PASS" starttime="20210322 02:39:09.229" endtime="20210322 02:39:09.229"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:39:09.229" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 02:39:09.229" endtime="20210322 02:39:09.229"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "${holder_type}",</arg>
<arg>"name": "${holder_name}",</arg>
<arg>"email": "${email}",</arg>
<arg>"national_registration": "${national_registration}",</arg>
<arg>"revenue": ${revenue},</arg>
<arg>"birthday": "${birthday}",</arg>
<arg>"mothers_name": "${mothers_name}",</arg>
<arg>"identity_card": "${identity_card}",</arg>
<arg>"pep": false,</arg>
<arg>"cbo": ${cbo}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 02:39:09.230" level="INFO">${body} = { "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "09463285105", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder",...</msg>
<status status="PASS" starttime="20210322 02:39:09.230" endtime="20210322 02:39:09.230"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:39:09.231" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "09463285105", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder", "identity_card": "861437020", "pep": false, "cbo": 821450 } 
json=None</msg>
<msg timestamp="20210322 02:39:10.020" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:39:09.230" endtime="20210322 02:39:10.020"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:39:10.022" level="INFO">{'id': '660c2b024d7f4d8f95188a5262a3e137', 'name': 'Holder de teste', 'revenue': 5500.0, 'email': 'teste@teste.com.br', 'status': 'waiting_info_and_documents', 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'marketplace_name': 'Marketplace de Teste', 'created_at': '2021-03-22T02:39:10.852482', 'updated_at': '2021-03-22T02:39:10.852484', 'type': 'individual', 'national_registration': '09463285105', 'birthday': '1988-04-23', 'mothers_name': 'Mãe do Holder', 'identity_card': '861437020', 'pep': False, 'cbo': '821450', '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/660c2b024d7f4d8f95188a5262a3e137', 'type': 'GET'}, 'phones': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/660c2b024d7f4d8f95188a5262a3e137/phones', 'type': 'GET'}, 'addresses': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/660c2b024d7f4d8f95188a5262a3e137/addresses', 'type': 'GET'}, 'documents': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/660c2b024d7f4d8f95188a5262a3e137/documents', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 02:39:10.021" endtime="20210322 02:39:10.023"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:39:10.024" level="INFO">cbe6137635b61e47</msg>
<status status="PASS" starttime="20210322 02:39:10.023" endtime="20210322 02:39:10.025"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${body}</arg>
</arguments>
<msg timestamp="20210322 02:39:10.026" level="INFO">{ "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "09463285105", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder", "identity_card": "861437020", "pep": false, "cbo": 821450 }</msg>
<status status="PASS" starttime="20210322 02:39:10.026" endtime="20210322 02:39:10.027"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:39:10.029" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:39:10.028" endtime="20210322 02:39:10.029"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${holder_external_key}</var>
</assign>
<msg timestamp="20210322 02:39:10.032" level="INFO">${holder_external_key} = 660c2b024d7f4d8f95188a5262a3e137</msg>
<status status="PASS" starttime="20210322 02:39:10.030" endtime="20210322 02:39:10.032"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_external_key}</arg>
</arguments>
<msg timestamp="20210322 02:39:10.034" level="INFO">${holder_external_key} = 660c2b024d7f4d8f95188a5262a3e137</msg>
<status status="PASS" starttime="20210322 02:39:10.033" endtime="20210322 02:39:10.034"></status>
</kw>
<status status="PASS" starttime="20210322 02:39:09.226" endtime="20210322 02:39:10.034"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_name}</arg>
</arguments>
<msg timestamp="20210322 02:39:10.036" level="INFO">${holder_name} = Holder de teste</msg>
<status status="PASS" starttime="20210322 02:39:10.035" endtime="20210322 02:39:10.036"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 02:39:10.038" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:39:10.037" endtime="20210322 02:39:10.038"></status>
</kw>
<kw name="criar holder phone" library="accreditation_post_holder_phone">
<arguments>
<arg>21</arg>
<arg>51</arg>
<arg>996221236</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:39:10.041" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 02:39:10.040" endtime="20210322 02:39:10.041"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"area_code": "${phone_area_code}",</arg>
<arg>"country_code": "${phone_country_code}",</arg>
<arg>"number": "${phone_number}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 02:39:10.042" level="INFO">${body} = { "area_code": "21", "country_code": "51", "number": "996221236" }</msg>
<status status="PASS" starttime="20210322 02:39:10.042" endtime="20210322 02:39:10.043"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/phones</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:39:10.045" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/660c2b024d7f4d8f95188a5262a3e137/phones, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "area_code": "21", "country_code": "51", "number": "996221236" } 
json=None</msg>
<msg timestamp="20210322 02:39:10.565" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:39:10.043" endtime="20210322 02:39:10.565"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:39:10.566" level="INFO">{'id': '95ff5b8557cf483c9797f361a55b28b4', 'area_code': '21', 'country_code': '51', 'number': '996221236', 'main': True, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/660c2b024d7f4d8f95188a5262a3e137/phones/95ff5b8557cf483c9797f361a55b28b4', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/660c2b024d7f4d8f95188a5262a3e137', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 02:39:10.566" endtime="20210322 02:39:10.566"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:39:10.567" level="INFO">d2684fa62c7b361c</msg>
<status status="PASS" starttime="20210322 02:39:10.567" endtime="20210322 02:39:10.567"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:39:10.567" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:39:10.567" endtime="20210322 02:39:10.568"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${phone_external_key}</var>
</assign>
<msg timestamp="20210322 02:39:10.569" level="INFO">${phone_external_key} = 95ff5b8557cf483c9797f361a55b28b4</msg>
<status status="PASS" starttime="20210322 02:39:10.568" endtime="20210322 02:39:10.569"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${phone_external_key}</arg>
</arguments>
<msg timestamp="20210322 02:39:10.571" level="INFO">${phone_external_key} = 95ff5b8557cf483c9797f361a55b28b4</msg>
<status status="PASS" starttime="20210322 02:39:10.570" endtime="20210322 02:39:10.571"></status>
</kw>
<status status="PASS" starttime="20210322 02:39:10.039" endtime="20210322 02:39:10.571"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 02:39:10.571" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:39:10.571" endtime="20210322 02:39:10.571"></status>
</kw>
<kw name="criar holder address" library="accreditation_post_holder_address">
<arguments>
<arg>Rio de Janeiro</arg>
<arg>Rio de Janeiro</arg>
<arg>Brasil</arg>
<arg>Bairro de Testes</arg>
<arg>Rua de Testes</arg>
<arg>90</arg>
<arg>apto 200</arg>
<arg>21550987</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:39:10.573" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 02:39:10.572" endtime="20210322 02:39:10.573"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"city": "${city}",</arg>
<arg>"state": "${state}",</arg>
<arg>"country": "${country}",</arg>
<arg>"neighborhood": "${neighborhood}",</arg>
<arg>"street": "${street}",</arg>
<arg>"number": "${number}",</arg>
<arg>"complement": "${complement}",</arg>
<arg>"postal_code": "${postal_code}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 02:39:10.573" level="INFO">${body} = { "city": "Rio de Janeiro", "state": "Rio de Janeiro", "country": "Brasil", "neighborhood": "Bairro de Testes", "street": "Rua de Testes", "number": "90", "complement": "apto 200", "postal_code": "215...</msg>
<status status="PASS" starttime="20210322 02:39:10.573" endtime="20210322 02:39:10.573"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/addresses</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:39:10.574" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/660c2b024d7f4d8f95188a5262a3e137/addresses, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "city": "Rio de Janeiro", "state": "Rio de Janeiro", "country": "Brasil", "neighborhood": "Bairro de Testes", "street": "Rua de Testes", "number": "90", "complement": "apto 200", "postal_code": "21550987" } 
json=None</msg>
<msg timestamp="20210322 02:39:10.793" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:39:10.573" endtime="20210322 02:39:10.793"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:39:10.794" level="INFO">{'id': 'f1a1b325ca91404890d45173bb4efbf8', 'street': 'Rua de Testes', 'number': '90', 'city': 'Rio de Janeiro', 'complement': 'apto 200', 'state': 'Rio de Janeiro', 'neighborhood': 'Bairro de Testes', 'postal_code': '21550987', 'country': 'Brasil', 'main': True, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/660c2b024d7f4d8f95188a5262a3e137/addresses/f1a1b325ca91404890d45173bb4efbf8', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/660c2b024d7f4d8f95188a5262a3e137', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 02:39:10.793" endtime="20210322 02:39:10.794"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:39:10.794" level="INFO">a01cce088e4ef9d7</msg>
<status status="PASS" starttime="20210322 02:39:10.794" endtime="20210322 02:39:10.795"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:39:10.795" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:39:10.795" endtime="20210322 02:39:10.795"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${address_external_key}</var>
</assign>
<msg timestamp="20210322 02:39:10.796" level="INFO">${address_external_key} = f1a1b325ca91404890d45173bb4efbf8</msg>
<status status="PASS" starttime="20210322 02:39:10.795" endtime="20210322 02:39:10.796"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${address_external_key}</arg>
</arguments>
<msg timestamp="20210322 02:39:10.796" level="INFO">${address_external_key} = f1a1b325ca91404890d45173bb4efbf8</msg>
<status status="PASS" starttime="20210322 02:39:10.796" endtime="20210322 02:39:10.796"></status>
</kw>
<status status="PASS" starttime="20210322 02:39:10.571" endtime="20210322 02:39:10.796"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 02:39:10.797" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:39:10.797" endtime="20210322 02:39:10.797"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>SELFIE</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:39:10.798" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 02:39:10.798" endtime="20210322 02:39:10.798"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 02:39:10.798" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 02:39:10.799" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 02:39:10.798" endtime="20210322 02:39:10.799"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:39:10.800" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/660c2b024d7f4d8f95188a5262a3e137/documents?type=SELFIE, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 02:39:11.088" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:39:10.800" endtime="20210322 02:39:11.088"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:39:11.090" level="INFO">{'id': '513460d3d45841be8b852f1d34598c63', 'document_type': 'selfie', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/660c2b024d7f4d8f95188a5262a3e137/documents/513460d3d45841be8b852f1d34598c63', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/660c2b024d7f4d8f95188a5262a3e137', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/660c2b024d7f4d8f95188a5262a3e137/documents/513460d3d45841be8b852f1d34598c63/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 02:39:11.089" endtime="20210322 02:39:11.090"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:39:11.092" level="INFO">fe7bca7840d9eb20</msg>
<status status="PASS" starttime="20210322 02:39:11.091" endtime="20210322 02:39:11.092"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:39:11.094" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:39:11.093" endtime="20210322 02:39:11.094"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 02:39:11.096" level="INFO">${document_external_key} = 513460d3d45841be8b852f1d34598c63</msg>
<status status="PASS" starttime="20210322 02:39:11.095" endtime="20210322 02:39:11.096"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 02:39:11.097" level="INFO">${document_external_key} = 513460d3d45841be8b852f1d34598c63</msg>
<status status="PASS" starttime="20210322 02:39:11.096" endtime="20210322 02:39:11.097"></status>
</kw>
<status status="PASS" starttime="20210322 02:39:10.797" endtime="20210322 02:39:11.097"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 02:39:11.098" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:39:11.097" endtime="20210322 02:39:11.098"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>RG_FRENTE</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:39:11.099" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 02:39:11.099" endtime="20210322 02:39:11.099"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 02:39:11.100" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 02:39:11.102" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 02:39:11.100" endtime="20210322 02:39:11.102"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:39:11.104" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/660c2b024d7f4d8f95188a5262a3e137/documents?type=RG_FRENTE, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 02:39:11.365" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:39:11.103" endtime="20210322 02:39:11.365"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:39:11.366" level="INFO">{'id': '75e72f1672354de29bf39a9885d4938e', 'document_type': 'rg_frente', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/660c2b024d7f4d8f95188a5262a3e137/documents/75e72f1672354de29bf39a9885d4938e', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/660c2b024d7f4d8f95188a5262a3e137', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/660c2b024d7f4d8f95188a5262a3e137/documents/75e72f1672354de29bf39a9885d4938e/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 02:39:11.365" endtime="20210322 02:39:11.366"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:39:11.367" level="INFO">5c31bb2f7ebb6344</msg>
<status status="PASS" starttime="20210322 02:39:11.366" endtime="20210322 02:39:11.367"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:39:11.368" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:39:11.367" endtime="20210322 02:39:11.368"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 02:39:11.369" level="INFO">${document_external_key} = 75e72f1672354de29bf39a9885d4938e</msg>
<status status="PASS" starttime="20210322 02:39:11.368" endtime="20210322 02:39:11.369"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 02:39:11.370" level="INFO">${document_external_key} = 75e72f1672354de29bf39a9885d4938e</msg>
<status status="PASS" starttime="20210322 02:39:11.370" endtime="20210322 02:39:11.370"></status>
</kw>
<status status="PASS" starttime="20210322 02:39:11.098" endtime="20210322 02:39:11.370"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 02:39:11.371" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:39:11.371" endtime="20210322 02:39:11.371"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>RG_VERSO</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:39:11.373" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 02:39:11.372" endtime="20210322 02:39:11.373"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 02:39:11.373" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 02:39:11.376" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 02:39:11.373" endtime="20210322 02:39:11.376"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:39:11.377" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/660c2b024d7f4d8f95188a5262a3e137/documents?type=RG_VERSO, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 02:39:11.651" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:39:11.376" endtime="20210322 02:39:11.651"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:39:11.653" level="INFO">{'id': '936a65722f704e918ed24c875b4008c3', 'document_type': 'rg_verso', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/660c2b024d7f4d8f95188a5262a3e137/documents/936a65722f704e918ed24c875b4008c3', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/660c2b024d7f4d8f95188a5262a3e137', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/660c2b024d7f4d8f95188a5262a3e137/documents/936a65722f704e918ed24c875b4008c3/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 02:39:11.652" endtime="20210322 02:39:11.653"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:39:11.655" level="INFO">1b8ce7c6ac183d89</msg>
<status status="PASS" starttime="20210322 02:39:11.654" endtime="20210322 02:39:11.655"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:39:11.656" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:39:11.656" endtime="20210322 02:39:11.656"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 02:39:11.658" level="INFO">${document_external_key} = 936a65722f704e918ed24c875b4008c3</msg>
<status status="PASS" starttime="20210322 02:39:11.657" endtime="20210322 02:39:11.658"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 02:39:11.660" level="INFO">${document_external_key} = 936a65722f704e918ed24c875b4008c3</msg>
<status status="PASS" starttime="20210322 02:39:11.659" endtime="20210322 02:39:11.660"></status>
</kw>
<status status="PASS" starttime="20210322 02:39:11.372" endtime="20210322 02:39:11.660"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 02:39:11.661" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:39:11.661" endtime="20210322 02:39:11.662"></status>
</kw>
<kw name="solicitar aprovação do holder" library="accreditation_request_approval">
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:39:11.664" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 02:39:11.663" endtime="20210322 02:39:11.664"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/approval</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:39:11.665" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/660c2b024d7f4d8f95188a5262a3e137/approval, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data=None 
json=None</msg>
<msg timestamp="20210322 02:39:11.942" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:39:11.664" endtime="20210322 02:39:11.942"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:39:11.944" level="INFO">{'message': 'Approval request accepted successfully. Processing analysis'}</msg>
<status status="PASS" starttime="20210322 02:39:11.943" endtime="20210322 02:39:11.945"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:39:11.946" level="INFO">7719fbf766b28da6</msg>
<status status="PASS" starttime="20210322 02:39:11.945" endtime="20210322 02:39:11.946"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:39:11.948" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:39:11.947" endtime="20210322 02:39:11.948"></status>
</kw>
<status status="PASS" starttime="20210322 02:39:11.662" endtime="20210322 02:39:11.949"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 02:39:11.951" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:39:11.950" endtime="20210322 02:39:11.951"></status>
</kw>
<kw name="recebendo notificação de aprovação" library="accreditation_risk_notification">
<kw name="Uuid 4" library="FakerLibrary">
<doc>Generates a random UUID4 string.
:param cast_to: Specify what type the UUID should be cast to. Default is `str`
:type cast_to: callable</doc>
<assign>
<var>${assessment_id}</var>
</assign>
<msg timestamp="20210322 02:39:11.954" level="INFO">${assessment_id} = a479ec59-340a-43c0-97e1-145dc62e2a49</msg>
<status status="PASS" starttime="20210322 02:39:11.953" endtime="20210322 02:39:11.954"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>year</arg>
</arguments>
<assign>
<var>${year}</var>
</assign>
<msg timestamp="20210322 02:39:11.956" level="INFO">${year} = 2021</msg>
<status status="PASS" starttime="20210322 02:39:11.955" endtime="20210322 02:39:11.956"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>month</arg>
</arguments>
<assign>
<var>${month}</var>
</assign>
<msg timestamp="20210322 02:39:11.958" level="INFO">${month} = 03</msg>
<status status="PASS" starttime="20210322 02:39:11.957" endtime="20210322 02:39:11.958"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>day</arg>
</arguments>
<assign>
<var>${day}</var>
</assign>
<msg timestamp="20210322 02:39:11.959" level="INFO">${day} = 22</msg>
<status status="PASS" starttime="20210322 02:39:11.959" endtime="20210322 02:39:11.959"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:39:11.961" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 02:39:11.960" endtime="20210322 02:39:11.961"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "risk.assessment.result",</arg>
<arg>"resource": "business.holder",</arg>
<arg>"created_at": "${year}-${month}-${day} 15:28:56.747Z",</arg>
<arg>"marketplace_id": "${marketplace_external_key}",</arg>
<arg>"object": {</arg>
<arg>"result": "APPROVED",</arg>
<arg>"holder_id": "${holder_external_key}",</arg>
<arg>"applicant_id": "${application_external_key}",</arg>
<arg>"assessment_id": "${assessment_id}"</arg>
<arg>}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 02:39:11.963" level="INFO">${body} = { "type": "risk.assessment.result", "resource": "business.holder", "created_at": "2021-03-22 15:28:56.747Z", "marketplace_id": "f71a8951368a4cc085cf7875ff44e61c", "object": { "result": "APPROVED", "ho...</msg>
<status status="PASS" starttime="20210322 02:39:11.961" endtime="20210322 02:39:11.963"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/admin/internal_operation/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/registration/approval</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:39:11.965" level="INFO">POST Request using : uri=/admin/internal_operation/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/660c2b024d7f4d8f95188a5262a3e137/registration/approval, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "risk.assessment.result", "resource": "business.holder", "created_at": "2021-03-22 15:28:56.747Z", "marketplace_id": "f71a8951368a4cc085cf7875ff44e61c", "object": { "result": "APPROVED", "holder_id": "660c2b024d7f4d8f95188a5262a3e137", "applicant_id": "bcc25a6751c14b52af1340d40dba78c5", "assessment_id": "a479ec59-340a-43c0-97e1-145dc62e2a49" } } 
json=None</msg>
<msg timestamp="20210322 02:39:12.179" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:39:11.963" endtime="20210322 02:39:12.179"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:39:12.180" level="INFO">{'message': 'Holder approved successfully'}</msg>
<status status="PASS" starttime="20210322 02:39:12.179" endtime="20210322 02:39:12.180"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:39:12.180" level="INFO">68d199b5a1923f19</msg>
<status status="PASS" starttime="20210322 02:39:12.180" endtime="20210322 02:39:12.180"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:39:12.181" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:39:12.180" endtime="20210322 02:39:12.181"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 02:39:12.181" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:39:12.181" endtime="20210322 02:39:12.181"></status>
</kw>
<status status="PASS" starttime="20210322 02:39:11.952" endtime="20210322 02:39:12.181"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 02:39:12.182" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:39:12.181" endtime="20210322 02:39:12.182"></status>
</kw>
<kw name="buscar account por holder" library="accounts_get_accounts_by_holder">
<kw name="conectar accounts" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accounts</arg>
<arg>url=${account_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 02:39:12.183" level="INFO">Creating Session using : alias=accounts, url=https://banking-accounts-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 02:39:12.182" endtime="20210322 02:39:12.183"></status>
</kw>
<status status="PASS" starttime="20210322 02:39:12.182" endtime="20210322 02:39:12.183"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accounts</arg>
<arg>/marketplaces/${marketplace_external_key}/holders/${holder_external_key}/accounts</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:39:12.183" level="INFO">GET Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/holders/660c2b024d7f4d8f95188a5262a3e137/accounts, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 02:39:12.813" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:39:12.183" endtime="20210322 02:39:12.814"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:39:12.815" level="INFO">{'items': [{'id': '8bae618ea7c94383a9a7f4d22858a114', 'holder': '660c2b024d7f4d8f95188a5262a3e137', 'balance': '0.00', 'currency': 'BRL', 'routing_number': '001', 'number': '7254540409', 'status': 'active', 'metadata': {}, 'created_at': '2021-03-22T05:39:13.003529', 'updated_at': '2021-03-22T05:39:13.003529', 'primary': True, 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'uri': '/v2/marketplaces/f71a8951368a4cc085cf7875ff44e61c/accounts/8bae618ea7c94383a9a7f4d22858a114', 'resource': 'payment_account'}], 'has_more': False, 'limit': 100, 'total_pages': 1, 'page': 1, 'offset': 0, 'total': '1', 'query_count': '1'}</msg>
<status status="PASS" starttime="20210322 02:39:12.814" endtime="20210322 02:39:12.815"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:39:12.817" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:39:12.816" endtime="20210322 02:39:12.817"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["id"]}</arg>
</arguments>
<assign>
<var>${account_external_key}</var>
</assign>
<msg timestamp="20210322 02:39:12.819" level="INFO">${account_external_key} = 8bae618ea7c94383a9a7f4d22858a114</msg>
<status status="PASS" starttime="20210322 02:39:12.818" endtime="20210322 02:39:12.819"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_external_key}</arg>
</arguments>
<msg timestamp="20210322 02:39:12.819" level="INFO">${account_external_key} = 8bae618ea7c94383a9a7f4d22858a114</msg>
<status status="PASS" starttime="20210322 02:39:12.819" endtime="20210322 02:39:12.821"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["number"]}</arg>
</arguments>
<assign>
<var>${account_number}</var>
</assign>
<msg timestamp="20210322 02:39:12.821" level="INFO">${account_number} = 7254540409</msg>
<status status="PASS" starttime="20210322 02:39:12.821" endtime="20210322 02:39:12.821"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_number}</arg>
</arguments>
<msg timestamp="20210322 02:39:12.822" level="INFO">${account_number} = 7254540409</msg>
<status status="PASS" starttime="20210322 02:39:12.822" endtime="20210322 02:39:12.822"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["routing_number"]}</arg>
</arguments>
<assign>
<var>${account_routing_number}</var>
</assign>
<msg timestamp="20210322 02:39:12.824" level="INFO">${account_routing_number} = 001</msg>
<status status="PASS" starttime="20210322 02:39:12.823" endtime="20210322 02:39:12.824"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_routing_number}</arg>
</arguments>
<msg timestamp="20210322 02:39:12.824" level="INFO">${account_routing_number} = 001</msg>
<status status="PASS" starttime="20210322 02:39:12.824" endtime="20210322 02:39:12.826"></status>
</kw>
<status status="PASS" starttime="20210322 02:39:12.182" endtime="20210322 02:39:12.826"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 02:39:12.826" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:39:12.826" endtime="20210322 02:39:12.826"></status>
</kw>
<status status="PASS" starttime="20210322 02:39:09.222" endtime="20210322 02:39:12.826"></status>
</kw>
<kw name="criar chave pix" library="pix_dict_create_entry">
<arguments>
<arg>phone</arg>
<arg>${phone_pix}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 02:39:12.828" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 02:39:12.828" endtime="20210322 02:39:12.829"></status>
</kw>
<status status="PASS" starttime="20210322 02:39:12.828" endtime="20210322 02:39:12.829"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${type}</arg>
</arguments>
<msg timestamp="20210322 02:39:12.830" level="INFO">${type} = phone</msg>
<status status="PASS" starttime="20210322 02:39:12.829" endtime="20210322 02:39:12.830"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210322 02:39:12.830" level="INFO">${value} = +5521927620927</msg>
<status status="PASS" starttime="20210322 02:39:12.830" endtime="20210322 02:39:12.830"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:39:12.831" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 02:39:12.831" endtime="20210322 02:39:12.831"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "${type}",</arg>
<arg>"value": "${value}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 02:39:12.832" level="INFO">${body} = { "type": "phone", "value": "+5521927620927" }</msg>
<status status="PASS" starttime="20210322 02:39:12.831" endtime="20210322 02:39:12.832"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:39:12.833" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/660c2b024d7f4d8f95188a5262a3e137/accounts/8bae618ea7c94383a9a7f4d22858a114/entries, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "phone", "value": "+5521927620927" } 
json=None</msg>
<msg timestamp="20210322 02:39:13.518" level="INFO">${response} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20210322 02:39:12.832" endtime="20210322 02:39:13.518"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:39:13.520" level="INFO">{'id': 'c284c7c135e7477a9ca3d0a35aae74db', 'status': 'waiting_ownership_verification', 'created_at': '2021-03-22T02:39:14.344', 'updated_at': '2021-03-22T02:39:14.344', 'key': {'value': '+5521927620927', 'type': 'phone'}, 'account': {'id': '8bae618ea7c94383a9a7f4d22858a114', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': '660c2b024d7f4d8f95188a5262a3e137', 'owner': {'name': 'Holder de teste', 'national_registration': '09463285105', 'type': 'individual'}, 'routing_number': '001', 'number': '7254540409', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}, 'resource': 'pix.entry'}</msg>
<status status="PASS" starttime="20210322 02:39:13.519" endtime="20210322 02:39:13.521"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:39:13.523" level="INFO">20e14ef45da2e805</msg>
<status status="PASS" starttime="20210322 02:39:13.522" endtime="20210322 02:39:13.523"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 02:39:13.525" level="INFO">202</msg>
<status status="PASS" starttime="20210322 02:39:13.524" endtime="20210322 02:39:13.525"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:39:13.527" level="INFO">${response} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20210322 02:39:13.526" endtime="20210322 02:39:13.527"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${entry_external_key}</var>
</assign>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:39:13.529" endtime="20210322 02:39:13.530"></status>
</kw>
<msg timestamp="20210322 02:39:13.530" level="INFO">${entry_external_key} = c284c7c135e7477a9ca3d0a35aae74db</msg>
<status status="PASS" starttime="20210322 02:39:13.528" endtime="20210322 02:39:13.531"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${entry_external_key}</arg>
</arguments>
<msg timestamp="20210322 02:39:13.532" level="INFO">${entry_external_key} = c284c7c135e7477a9ca3d0a35aae74db</msg>
<status status="PASS" starttime="20210322 02:39:13.531" endtime="20210322 02:39:13.532"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["key"]["value"]}</arg>
</arguments>
<assign>
<var>${entry_key_value}</var>
</assign>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["key"]["value"]}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:39:13.534" endtime="20210322 02:39:13.535"></status>
</kw>
<msg timestamp="20210322 02:39:13.535" level="INFO">${entry_key_value} = +5521927620927</msg>
<status status="PASS" starttime="20210322 02:39:13.532" endtime="20210322 02:39:13.535"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${entry_key_value}</arg>
</arguments>
<msg timestamp="20210322 02:39:13.536" level="INFO">${entry_key_value} = +5521927620927</msg>
<status status="PASS" starttime="20210322 02:39:13.536" endtime="20210322 02:39:13.536"></status>
</kw>
<status status="PASS" starttime="20210322 02:39:12.826" endtime="20210322 02:39:13.537"></status>
</kw>
<kw name="buscar chave pix" library="pix_dict_get_entry">
<arguments>
<arg>${holder_external_key}</arg>
<arg>${account_external_key}</arg>
<arg>${entry_external_key}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 02:39:13.539" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 02:39:13.538" endtime="20210322 02:39:13.539"></status>
</kw>
<status status="PASS" starttime="20210322 02:39:13.538" endtime="20210322 02:39:13.540"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries/${entry_external_key}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:39:13.541" level="INFO">GET Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/660c2b024d7f4d8f95188a5262a3e137/accounts/8bae618ea7c94383a9a7f4d22858a114/entries/c284c7c135e7477a9ca3d0a35aae74db, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 02:39:14.187" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:39:13.540" endtime="20210322 02:39:14.187"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:39:14.188" level="INFO">{'id': 'c284c7c135e7477a9ca3d0a35aae74db', 'status': 'waiting_ownership_verification', 'created_at': '2021-03-22T02:39:14.344', 'updated_at': '2021-03-22T02:39:14.344', 'key': {'value': '+5521927620927', 'type': 'phone'}, 'account': {'id': '8bae618ea7c94383a9a7f4d22858a114', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': '660c2b024d7f4d8f95188a5262a3e137', 'owner': {'name': 'Holder de teste', 'national_registration': '09463285105', 'type': 'individual'}, 'routing_number': '001', 'number': '7254540409', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}, 'resource': 'pix.entry'}</msg>
<status status="PASS" starttime="20210322 02:39:14.187" endtime="20210322 02:39:14.188"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:39:14.189" level="INFO">9e97f7424b0d38a1</msg>
<status status="PASS" starttime="20210322 02:39:14.189" endtime="20210322 02:39:14.189"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 02:39:14.191" level="INFO">200</msg>
<status status="PASS" starttime="20210322 02:39:14.190" endtime="20210322 02:39:14.191"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:39:14.192" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:39:14.191" endtime="20210322 02:39:14.192"></status>
</kw>
<status status="PASS" starttime="20210322 02:39:13.537" endtime="20210322 02:39:14.192"></status>
</kw>
<kw name="validar busca da chave pix" library="asserts">
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 02:39:14.194" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:39:14.194" endtime="20210322 02:39:14.195"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar status da chave</arg>
</arguments>
<msg timestamp="20210322 02:39:14.195" level="INFO">Validar status da chave</msg>
<status status="PASS" starttime="20210322 02:39:14.195" endtime="20210322 02:39:14.196"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${type}' == 'evp'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["status"]}</arg>
<arg>active</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'phone'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["status"]}</arg>
<arg>waiting_ownership_verification</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'email'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["status"]}</arg>
<arg>waiting_ownership_verification</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'national_registration'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["status"]}</arg>
<arg>active</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["status"]}</arg>
<arg>waiting_ownership_verification</arg>
</arguments>
<status status="PASS" starttime="20210322 02:39:14.198" endtime="20210322 02:39:14.200"></status>
</kw>
<status status="PASS" starttime="20210322 02:39:14.197" endtime="20210322 02:39:14.200"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando Tipo da chave PIX</arg>
</arguments>
<msg timestamp="20210322 02:39:14.201" level="INFO">Validando Tipo da chave PIX</msg>
<status status="PASS" starttime="20210322 02:39:14.201" endtime="20210322 02:39:14.201"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${type}' == 'evp'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["type"]}</arg>
<arg>${type}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'phone'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["type"]}</arg>
<arg>${type}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'email'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["type"]}</arg>
<arg>${type}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'national_registration'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["type"]}</arg>
<arg>${type}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["key"]["type"]}</arg>
<arg>${type}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:39:14.204" endtime="20210322 02:39:14.204"></status>
</kw>
<status status="PASS" starttime="20210322 02:39:14.202" endtime="20210322 02:39:14.205"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando Valor da chave PIX</arg>
</arguments>
<msg timestamp="20210322 02:39:14.205" level="INFO">Validando Valor da chave PIX</msg>
<status status="PASS" starttime="20210322 02:39:14.205" endtime="20210322 02:39:14.205"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${type}' == 'evp'</arg>
<arg>Should Not Be Empty</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'phone'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${phone_pix}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'email'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${email_pix}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'national_registration'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${national_registration}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${phone_pix}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:39:14.207" endtime="20210322 02:39:14.208"></status>
</kw>
<status status="PASS" starttime="20210322 02:39:14.206" endtime="20210322 02:39:14.208"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando dados da conta</arg>
</arguments>
<msg timestamp="20210322 02:39:14.208" level="INFO">Validando dados da conta</msg>
<status status="PASS" starttime="20210322 02:39:14.208" endtime="20210322 02:39:14.208"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["id"]}</arg>
<arg>${account_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:39:14.209" endtime="20210322 02:39:14.209"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["marketplace"]}</arg>
<arg>${marketplace_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:39:14.210" endtime="20210322 02:39:14.210"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["holder"]}</arg>
<arg>${holder_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:39:14.211" endtime="20210322 02:39:14.212"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["number"]}</arg>
<arg>${account_number}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:39:14.212" endtime="20210322 02:39:14.212"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["routing_number"]}</arg>
<arg>${account_routing_number}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:39:14.213" endtime="20210322 02:39:14.213"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["type"]}</arg>
<arg>CACC</arg>
</arguments>
<status status="PASS" starttime="20210322 02:39:14.213" endtime="20210322 02:39:14.213"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar Proprietário da Account Owner</arg>
</arguments>
<msg timestamp="20210322 02:39:14.214" level="INFO">Validar Proprietário da Account Owner</msg>
<status status="PASS" starttime="20210322 02:39:14.213" endtime="20210322 02:39:14.214"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${holder_type}' == 'individual'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["account"]["owner"]["name"]}</arg>
<arg>${holder_name}</arg>
<arg>ELSE IF</arg>
<arg>'${holder_type}' == 'business'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["account"]["owner"]["name"]}</arg>
<arg>${legal_name}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["account"]["owner"]["name"]}</arg>
<arg>${holder_name}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:39:14.215" endtime="20210322 02:39:14.215"></status>
</kw>
<status status="PASS" starttime="20210322 02:39:14.214" endtime="20210322 02:39:14.215"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar national_registration da Account Owner</arg>
</arguments>
<msg timestamp="20210322 02:39:14.216" level="INFO">Validar national_registration da Account Owner</msg>
<status status="PASS" starttime="20210322 02:39:14.215" endtime="20210322 02:39:14.216"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${holder_type}' == 'individual'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["account"]["owner"]["national_registration"]}</arg>
<arg>${national_registration}</arg>
<arg>ELSE IF</arg>
<arg>'${holder_type}' == 'business'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["account"]["owner"]["national_registration"]}</arg>
<arg>${national_registration}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["account"]["owner"]["national_registration"]}</arg>
<arg>${national_registration}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:39:14.217" endtime="20210322 02:39:14.217"></status>
</kw>
<status status="PASS" starttime="20210322 02:39:14.216" endtime="20210322 02:39:14.217"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar Holder Type do Account Owner</arg>
</arguments>
<msg timestamp="20210322 02:39:14.218" level="INFO">Validar Holder Type do Account Owner</msg>
<status status="PASS" starttime="20210322 02:39:14.217" endtime="20210322 02:39:14.218"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${holder_type}' == 'individual'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["account"]["owner"]["type"]}</arg>
<arg>${holder_type}</arg>
<arg>ELSE IF</arg>
<arg>'${holder_type}' == 'business'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["account"]["owner"]["type"]}</arg>
<arg>${holder_type}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["account"]["owner"]["type"]}</arg>
<arg>${holder_type}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:39:14.218" endtime="20210322 02:39:14.219"></status>
</kw>
<status status="PASS" starttime="20210322 02:39:14.218" endtime="20210322 02:39:14.219"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar PSP</arg>
</arguments>
<msg timestamp="20210322 02:39:14.219" level="INFO">Validar PSP</msg>
<status status="PASS" starttime="20210322 02:39:14.219" endtime="20210322 02:39:14.219"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["psp"]["code"]}</arg>
<arg>19468242</arg>
</arguments>
<status status="PASS" starttime="20210322 02:39:14.220" endtime="20210322 02:39:14.220"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["psp"]["name"]}</arg>
<arg>Zoop Tecnologia e Meios de Pagamento S.A.</arg>
</arguments>
<status status="PASS" starttime="20210322 02:39:14.220" endtime="20210322 02:39:14.221"></status>
</kw>
<status status="PASS" starttime="20210322 02:39:14.193" endtime="20210322 02:39:14.221"></status>
</kw>
<doc>Fluxo Básico</doc>
<tags>
<tag>smoke_test</tag>
</tags>
<status status="PASS" starttime="20210322 02:39:09.220" endtime="20210322 02:39:14.221" critical="yes"></status>
</test>
<test id="s1-s1-s1-t3" name="Cenário: Buscar chave de endereçamento do tipo Email">
<kw name="Email" library="FakerLibrary">
<assign>
<var>${email_pix}</var>
</assign>
<msg timestamp="20210322 02:39:14.222" level="INFO">${email_pix} = alvesfernando@bol.com.br</msg>
<status status="PASS" starttime="20210322 02:39:14.222" endtime="20210322 02:39:14.222"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${email_pix}</arg>
</arguments>
<msg timestamp="20210322 02:39:14.223" level="INFO">${email_pix} = alvesfernando@bol.com.br</msg>
<status status="PASS" starttime="20210322 02:39:14.222" endtime="20210322 02:39:14.223"></status>
</kw>
<kw name="criar holder individual ativo" library="accreditation_create_holder_active">
<kw name="conectar accreditation" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accreditation</arg>
<arg>url=${accreditation_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 02:39:14.224" level="INFO">Creating Session using : alias=accreditation, url=https://banking-accreditation-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 02:39:14.224" endtime="20210322 02:39:14.224"></status>
</kw>
<status status="PASS" starttime="20210322 02:39:14.223" endtime="20210322 02:39:14.224"></status>
</kw>
<kw name="Cpf" library="FakerLibrary">
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 02:39:14.225" level="INFO">${national_registration} = 197.568.302-12</msg>
<status status="PASS" starttime="20210322 02:39:14.225" endtime="20210322 02:39:14.225"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${national_registration}</arg>
<arg>.</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 02:39:14.226" level="INFO">${national_registration} = 197568302-12</msg>
<status status="PASS" starttime="20210322 02:39:14.225" endtime="20210322 02:39:14.226"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${national_registration}</arg>
<arg>-</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 02:39:14.227" level="INFO">${national_registration} = 19756830212</msg>
<status status="PASS" starttime="20210322 02:39:14.226" endtime="20210322 02:39:14.227"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${national_registration}</arg>
</arguments>
<msg timestamp="20210322 02:39:14.227" level="INFO">${national_registration} = 19756830212</msg>
<status status="PASS" starttime="20210322 02:39:14.227" endtime="20210322 02:39:14.227"></status>
</kw>
<kw name="Rg" library="FakerLibrary">
<doc>Brazilian RG, return plain numbers.
Check:  https://www.ngmatematica.com/2014/02/como-determinar-o-digito-verificador-do.html</doc>
<assign>
<var>${identity_card}</var>
</assign>
<msg timestamp="20210322 02:39:14.227" level="INFO">${identity_card} = 476508319</msg>
<status status="PASS" starttime="20210322 02:39:14.227" endtime="20210322 02:39:14.227"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${identity_card}</arg>
</arguments>
<msg timestamp="20210322 02:39:14.228" level="INFO">${identity_card} = 476508319</msg>
<status status="PASS" starttime="20210322 02:39:14.228" endtime="20210322 02:39:14.228"></status>
</kw>
<kw name="criar holder individual" library="accreditation_post_holder_individual">
<arguments>
<arg>holder_type=individual</arg>
<arg>holder_name=${holder_name}</arg>
<arg>email=${email}</arg>
<arg>national_registration=${national_registration}</arg>
<arg>revenue=${revenue}</arg>
<arg>birthday=${birthday}</arg>
<arg>mothers_name=${mothers_name}</arg>
<arg>identity_card=${identity_card}</arg>
<arg>pep=false</arg>
<arg>cbo=${cbo}</arg>
</arguments>
<kw name="conectar accreditation" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accreditation</arg>
<arg>url=${accreditation_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 02:39:14.230" level="INFO">Creating Session using : alias=accreditation, url=https://banking-accreditation-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 02:39:14.229" endtime="20210322 02:39:14.230"></status>
</kw>
<status status="PASS" starttime="20210322 02:39:14.229" endtime="20210322 02:39:14.230"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_type}</arg>
</arguments>
<msg timestamp="20210322 02:39:14.231" level="INFO">${holder_type} = individual</msg>
<status status="PASS" starttime="20210322 02:39:14.231" endtime="20210322 02:39:14.231"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_name}</arg>
</arguments>
<msg timestamp="20210322 02:39:14.231" level="INFO">${holder_name} = Holder de teste</msg>
<status status="PASS" starttime="20210322 02:39:14.231" endtime="20210322 02:39:14.231"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:39:14.232" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 02:39:14.232" endtime="20210322 02:39:14.232"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "${holder_type}",</arg>
<arg>"name": "${holder_name}",</arg>
<arg>"email": "${email}",</arg>
<arg>"national_registration": "${national_registration}",</arg>
<arg>"revenue": ${revenue},</arg>
<arg>"birthday": "${birthday}",</arg>
<arg>"mothers_name": "${mothers_name}",</arg>
<arg>"identity_card": "${identity_card}",</arg>
<arg>"pep": false,</arg>
<arg>"cbo": ${cbo}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 02:39:14.233" level="INFO">${body} = { "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "19756830212", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder",...</msg>
<status status="PASS" starttime="20210322 02:39:14.232" endtime="20210322 02:39:14.233"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:39:14.234" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "19756830212", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder", "identity_card": "476508319", "pep": false, "cbo": 821450 } 
json=None</msg>
<msg timestamp="20210322 02:39:14.876" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:39:14.233" endtime="20210322 02:39:14.877"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:39:14.879" level="INFO">{'id': '3bfe4673fb4349808cc29d1ab0252f3a', 'name': 'Holder de teste', 'revenue': 5500.0, 'email': 'teste@teste.com.br', 'status': 'waiting_info_and_documents', 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'marketplace_name': 'Marketplace de Teste', 'created_at': '2021-03-22T02:39:15.713263', 'updated_at': '2021-03-22T02:39:15.713266', 'type': 'individual', 'national_registration': '19756830212', 'birthday': '1988-04-23', 'mothers_name': 'Mãe do Holder', 'identity_card': '476508319', 'pep': False, 'cbo': '821450', '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/3bfe4673fb4349808cc29d1ab0252f3a', 'type': 'GET'}, 'phones': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/3bfe4673fb4349808cc29d1ab0252f3a/phones', 'type': 'GET'}, 'addresses': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/3bfe4673fb4349808cc29d1ab0252f3a/addresses', 'type': 'GET'}, 'documents': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/3bfe4673fb4349808cc29d1ab0252f3a/documents', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 02:39:14.878" endtime="20210322 02:39:14.880"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:39:14.882" level="INFO">0eb3b67112692e64</msg>
<status status="PASS" starttime="20210322 02:39:14.881" endtime="20210322 02:39:14.882"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${body}</arg>
</arguments>
<msg timestamp="20210322 02:39:14.884" level="INFO">{ "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "19756830212", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder", "identity_card": "476508319", "pep": false, "cbo": 821450 }</msg>
<status status="PASS" starttime="20210322 02:39:14.883" endtime="20210322 02:39:14.884"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:39:14.886" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:39:14.885" endtime="20210322 02:39:14.886"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${holder_external_key}</var>
</assign>
<msg timestamp="20210322 02:39:14.888" level="INFO">${holder_external_key} = 3bfe4673fb4349808cc29d1ab0252f3a</msg>
<status status="PASS" starttime="20210322 02:39:14.887" endtime="20210322 02:39:14.888"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_external_key}</arg>
</arguments>
<msg timestamp="20210322 02:39:14.889" level="INFO">${holder_external_key} = 3bfe4673fb4349808cc29d1ab0252f3a</msg>
<status status="PASS" starttime="20210322 02:39:14.888" endtime="20210322 02:39:14.889"></status>
</kw>
<status status="PASS" starttime="20210322 02:39:14.228" endtime="20210322 02:39:14.890"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_name}</arg>
</arguments>
<msg timestamp="20210322 02:39:14.891" level="INFO">${holder_name} = Holder de teste</msg>
<status status="PASS" starttime="20210322 02:39:14.890" endtime="20210322 02:39:14.891"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 02:39:14.892" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:39:14.891" endtime="20210322 02:39:14.892"></status>
</kw>
<kw name="criar holder phone" library="accreditation_post_holder_phone">
<arguments>
<arg>21</arg>
<arg>51</arg>
<arg>996221236</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:39:14.894" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 02:39:14.893" endtime="20210322 02:39:14.894"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"area_code": "${phone_area_code}",</arg>
<arg>"country_code": "${phone_country_code}",</arg>
<arg>"number": "${phone_number}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 02:39:14.895" level="INFO">${body} = { "area_code": "21", "country_code": "51", "number": "996221236" }</msg>
<status status="PASS" starttime="20210322 02:39:14.894" endtime="20210322 02:39:14.895"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/phones</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:39:14.896" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/3bfe4673fb4349808cc29d1ab0252f3a/phones, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "area_code": "21", "country_code": "51", "number": "996221236" } 
json=None</msg>
<msg timestamp="20210322 02:39:15.111" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:39:14.895" endtime="20210322 02:39:15.112"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:39:15.114" level="INFO">{'id': 'c623e806b5b14163b0449e494a32bbf6', 'area_code': '21', 'country_code': '51', 'number': '996221236', 'main': True, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/3bfe4673fb4349808cc29d1ab0252f3a/phones/c623e806b5b14163b0449e494a32bbf6', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/3bfe4673fb4349808cc29d1ab0252f3a', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 02:39:15.113" endtime="20210322 02:39:15.114"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:39:15.116" level="INFO">58fc8fd7df39350e</msg>
<status status="PASS" starttime="20210322 02:39:15.115" endtime="20210322 02:39:15.116"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:39:15.118" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:39:15.117" endtime="20210322 02:39:15.119"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${phone_external_key}</var>
</assign>
<msg timestamp="20210322 02:39:15.121" level="INFO">${phone_external_key} = c623e806b5b14163b0449e494a32bbf6</msg>
<status status="PASS" starttime="20210322 02:39:15.119" endtime="20210322 02:39:15.121"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${phone_external_key}</arg>
</arguments>
<msg timestamp="20210322 02:39:15.123" level="INFO">${phone_external_key} = c623e806b5b14163b0449e494a32bbf6</msg>
<status status="PASS" starttime="20210322 02:39:15.122" endtime="20210322 02:39:15.124"></status>
</kw>
<status status="PASS" starttime="20210322 02:39:14.893" endtime="20210322 02:39:15.124"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 02:39:15.126" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:39:15.125" endtime="20210322 02:39:15.126"></status>
</kw>
<kw name="criar holder address" library="accreditation_post_holder_address">
<arguments>
<arg>Rio de Janeiro</arg>
<arg>Rio de Janeiro</arg>
<arg>Brasil</arg>
<arg>Bairro de Testes</arg>
<arg>Rua de Testes</arg>
<arg>90</arg>
<arg>apto 200</arg>
<arg>21550987</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:39:15.129" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 02:39:15.128" endtime="20210322 02:39:15.129"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"city": "${city}",</arg>
<arg>"state": "${state}",</arg>
<arg>"country": "${country}",</arg>
<arg>"neighborhood": "${neighborhood}",</arg>
<arg>"street": "${street}",</arg>
<arg>"number": "${number}",</arg>
<arg>"complement": "${complement}",</arg>
<arg>"postal_code": "${postal_code}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 02:39:15.131" level="INFO">${body} = { "city": "Rio de Janeiro", "state": "Rio de Janeiro", "country": "Brasil", "neighborhood": "Bairro de Testes", "street": "Rua de Testes", "number": "90", "complement": "apto 200", "postal_code": "215...</msg>
<status status="PASS" starttime="20210322 02:39:15.129" endtime="20210322 02:39:15.131"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/addresses</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:39:15.132" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/3bfe4673fb4349808cc29d1ab0252f3a/addresses, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "city": "Rio de Janeiro", "state": "Rio de Janeiro", "country": "Brasil", "neighborhood": "Bairro de Testes", "street": "Rua de Testes", "number": "90", "complement": "apto 200", "postal_code": "21550987" } 
json=None</msg>
<msg timestamp="20210322 02:39:15.349" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:39:15.131" endtime="20210322 02:39:15.349"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:39:15.351" level="INFO">{'id': '87b7e08cf7c34347856fa22f1fc0d613', 'street': 'Rua de Testes', 'number': '90', 'city': 'Rio de Janeiro', 'complement': 'apto 200', 'state': 'Rio de Janeiro', 'neighborhood': 'Bairro de Testes', 'postal_code': '21550987', 'country': 'Brasil', 'main': True, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/3bfe4673fb4349808cc29d1ab0252f3a/addresses/87b7e08cf7c34347856fa22f1fc0d613', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/3bfe4673fb4349808cc29d1ab0252f3a', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 02:39:15.350" endtime="20210322 02:39:15.352"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:39:15.353" level="INFO">69fa061e237a7968</msg>
<status status="PASS" starttime="20210322 02:39:15.352" endtime="20210322 02:39:15.354"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:39:15.356" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:39:15.355" endtime="20210322 02:39:15.356"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${address_external_key}</var>
</assign>
<msg timestamp="20210322 02:39:15.359" level="INFO">${address_external_key} = 87b7e08cf7c34347856fa22f1fc0d613</msg>
<status status="PASS" starttime="20210322 02:39:15.357" endtime="20210322 02:39:15.359"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${address_external_key}</arg>
</arguments>
<msg timestamp="20210322 02:39:15.360" level="INFO">${address_external_key} = 87b7e08cf7c34347856fa22f1fc0d613</msg>
<status status="PASS" starttime="20210322 02:39:15.359" endtime="20210322 02:39:15.360"></status>
</kw>
<status status="PASS" starttime="20210322 02:39:15.127" endtime="20210322 02:39:15.360"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 02:39:15.362" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:39:15.361" endtime="20210322 02:39:15.362"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>SELFIE</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:39:15.364" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 02:39:15.363" endtime="20210322 02:39:15.364"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 02:39:15.365" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 02:39:15.367" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 02:39:15.364" endtime="20210322 02:39:15.367"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:39:15.368" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/3bfe4673fb4349808cc29d1ab0252f3a/documents?type=SELFIE, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 02:39:15.644" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:39:15.367" endtime="20210322 02:39:15.644"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:39:15.646" level="INFO">{'id': '47d367cdae384a788759089d617d52d1', 'document_type': 'selfie', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/3bfe4673fb4349808cc29d1ab0252f3a/documents/47d367cdae384a788759089d617d52d1', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/3bfe4673fb4349808cc29d1ab0252f3a', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/3bfe4673fb4349808cc29d1ab0252f3a/documents/47d367cdae384a788759089d617d52d1/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 02:39:15.645" endtime="20210322 02:39:15.647"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:39:15.649" level="INFO">05f10571d63bac84</msg>
<status status="PASS" starttime="20210322 02:39:15.648" endtime="20210322 02:39:15.649"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:39:15.651" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:39:15.650" endtime="20210322 02:39:15.652"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 02:39:15.654" level="INFO">${document_external_key} = 47d367cdae384a788759089d617d52d1</msg>
<status status="PASS" starttime="20210322 02:39:15.653" endtime="20210322 02:39:15.654"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 02:39:15.655" level="INFO">${document_external_key} = 47d367cdae384a788759089d617d52d1</msg>
<status status="PASS" starttime="20210322 02:39:15.655" endtime="20210322 02:39:15.656"></status>
</kw>
<status status="PASS" starttime="20210322 02:39:15.362" endtime="20210322 02:39:15.656"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 02:39:15.657" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:39:15.656" endtime="20210322 02:39:15.657"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>RG_FRENTE</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:39:15.659" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 02:39:15.658" endtime="20210322 02:39:15.659"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 02:39:15.660" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 02:39:15.662" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 02:39:15.659" endtime="20210322 02:39:15.662"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:39:15.663" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/3bfe4673fb4349808cc29d1ab0252f3a/documents?type=RG_FRENTE, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 02:39:15.948" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:39:15.662" endtime="20210322 02:39:15.948"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:39:15.949" level="INFO">{'id': '66a936024cfc4086ad3c86a251cbd87c', 'document_type': 'rg_frente', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/3bfe4673fb4349808cc29d1ab0252f3a/documents/66a936024cfc4086ad3c86a251cbd87c', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/3bfe4673fb4349808cc29d1ab0252f3a', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/3bfe4673fb4349808cc29d1ab0252f3a/documents/66a936024cfc4086ad3c86a251cbd87c/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 02:39:15.948" endtime="20210322 02:39:15.949"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:39:15.951" level="INFO">6664ce9ad9030b93</msg>
<status status="PASS" starttime="20210322 02:39:15.950" endtime="20210322 02:39:15.951"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:39:15.953" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:39:15.951" endtime="20210322 02:39:15.953"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 02:39:15.954" level="INFO">${document_external_key} = 66a936024cfc4086ad3c86a251cbd87c</msg>
<status status="PASS" starttime="20210322 02:39:15.953" endtime="20210322 02:39:15.954"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 02:39:15.955" level="INFO">${document_external_key} = 66a936024cfc4086ad3c86a251cbd87c</msg>
<status status="PASS" starttime="20210322 02:39:15.954" endtime="20210322 02:39:15.955"></status>
</kw>
<status status="PASS" starttime="20210322 02:39:15.658" endtime="20210322 02:39:15.955"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 02:39:15.956" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:39:15.956" endtime="20210322 02:39:15.956"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>RG_VERSO</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:39:15.958" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 02:39:15.958" endtime="20210322 02:39:15.958"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 02:39:15.959" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 02:39:15.960" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 02:39:15.958" endtime="20210322 02:39:15.961"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:39:15.962" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/3bfe4673fb4349808cc29d1ab0252f3a/documents?type=RG_VERSO, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 02:39:16.269" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:39:15.962" endtime="20210322 02:39:16.269"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:39:16.270" level="INFO">{'id': '016a489090e746508f988b6e0e9c9935', 'document_type': 'rg_verso', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/3bfe4673fb4349808cc29d1ab0252f3a/documents/016a489090e746508f988b6e0e9c9935', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/3bfe4673fb4349808cc29d1ab0252f3a', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/3bfe4673fb4349808cc29d1ab0252f3a/documents/016a489090e746508f988b6e0e9c9935/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 02:39:16.269" endtime="20210322 02:39:16.270"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:39:16.271" level="INFO">47ad29b3a145e7eb</msg>
<status status="PASS" starttime="20210322 02:39:16.270" endtime="20210322 02:39:16.271"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:39:16.271" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:39:16.271" endtime="20210322 02:39:16.272"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 02:39:16.272" level="INFO">${document_external_key} = 016a489090e746508f988b6e0e9c9935</msg>
<status status="PASS" starttime="20210322 02:39:16.272" endtime="20210322 02:39:16.273"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 02:39:16.273" level="INFO">${document_external_key} = 016a489090e746508f988b6e0e9c9935</msg>
<status status="PASS" starttime="20210322 02:39:16.273" endtime="20210322 02:39:16.273"></status>
</kw>
<status status="PASS" starttime="20210322 02:39:15.958" endtime="20210322 02:39:16.274"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 02:39:16.274" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:39:16.274" endtime="20210322 02:39:16.274"></status>
</kw>
<kw name="solicitar aprovação do holder" library="accreditation_request_approval">
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:39:16.275" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 02:39:16.275" endtime="20210322 02:39:16.275"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/approval</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:39:16.277" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/3bfe4673fb4349808cc29d1ab0252f3a/approval, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data=None 
json=None</msg>
<msg timestamp="20210322 02:39:16.581" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:39:16.276" endtime="20210322 02:39:16.581"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:39:16.584" level="INFO">{'message': 'Approval request accepted successfully. Processing analysis'}</msg>
<status status="PASS" starttime="20210322 02:39:16.582" endtime="20210322 02:39:16.584"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:39:16.586" level="INFO">b1944482f21823ae</msg>
<status status="PASS" starttime="20210322 02:39:16.584" endtime="20210322 02:39:16.586"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:39:16.588" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:39:16.587" endtime="20210322 02:39:16.588"></status>
</kw>
<status status="PASS" starttime="20210322 02:39:16.275" endtime="20210322 02:39:16.589"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 02:39:16.590" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:39:16.589" endtime="20210322 02:39:16.591"></status>
</kw>
<kw name="recebendo notificação de aprovação" library="accreditation_risk_notification">
<kw name="Uuid 4" library="FakerLibrary">
<doc>Generates a random UUID4 string.
:param cast_to: Specify what type the UUID should be cast to. Default is `str`
:type cast_to: callable</doc>
<assign>
<var>${assessment_id}</var>
</assign>
<msg timestamp="20210322 02:39:16.593" level="INFO">${assessment_id} = 771d1a5b-e912-4921-acb7-438c000984e5</msg>
<status status="PASS" starttime="20210322 02:39:16.592" endtime="20210322 02:39:16.593"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>year</arg>
</arguments>
<assign>
<var>${year}</var>
</assign>
<msg timestamp="20210322 02:39:16.594" level="INFO">${year} = 2021</msg>
<status status="PASS" starttime="20210322 02:39:16.594" endtime="20210322 02:39:16.594"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>month</arg>
</arguments>
<assign>
<var>${month}</var>
</assign>
<msg timestamp="20210322 02:39:16.595" level="INFO">${month} = 03</msg>
<status status="PASS" starttime="20210322 02:39:16.595" endtime="20210322 02:39:16.596"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>day</arg>
</arguments>
<assign>
<var>${day}</var>
</assign>
<msg timestamp="20210322 02:39:16.597" level="INFO">${day} = 22</msg>
<status status="PASS" starttime="20210322 02:39:16.596" endtime="20210322 02:39:16.597"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:39:16.598" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 02:39:16.597" endtime="20210322 02:39:16.598"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "risk.assessment.result",</arg>
<arg>"resource": "business.holder",</arg>
<arg>"created_at": "${year}-${month}-${day} 15:28:56.747Z",</arg>
<arg>"marketplace_id": "${marketplace_external_key}",</arg>
<arg>"object": {</arg>
<arg>"result": "APPROVED",</arg>
<arg>"holder_id": "${holder_external_key}",</arg>
<arg>"applicant_id": "${application_external_key}",</arg>
<arg>"assessment_id": "${assessment_id}"</arg>
<arg>}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 02:39:16.600" level="INFO">${body} = { "type": "risk.assessment.result", "resource": "business.holder", "created_at": "2021-03-22 15:28:56.747Z", "marketplace_id": "f71a8951368a4cc085cf7875ff44e61c", "object": { "result": "APPROVED", "ho...</msg>
<status status="PASS" starttime="20210322 02:39:16.599" endtime="20210322 02:39:16.600"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/admin/internal_operation/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/registration/approval</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:39:16.602" level="INFO">POST Request using : uri=/admin/internal_operation/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/3bfe4673fb4349808cc29d1ab0252f3a/registration/approval, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "risk.assessment.result", "resource": "business.holder", "created_at": "2021-03-22 15:28:56.747Z", "marketplace_id": "f71a8951368a4cc085cf7875ff44e61c", "object": { "result": "APPROVED", "holder_id": "3bfe4673fb4349808cc29d1ab0252f3a", "applicant_id": "bcc25a6751c14b52af1340d40dba78c5", "assessment_id": "771d1a5b-e912-4921-acb7-438c000984e5" } } 
json=None</msg>
<msg timestamp="20210322 02:39:16.793" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:39:16.601" endtime="20210322 02:39:16.793"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:39:16.795" level="INFO">{'message': 'Holder approved successfully'}</msg>
<status status="PASS" starttime="20210322 02:39:16.794" endtime="20210322 02:39:16.795"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:39:16.797" level="INFO">cee6e4aa14164011</msg>
<status status="PASS" starttime="20210322 02:39:16.796" endtime="20210322 02:39:16.797"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:39:16.799" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:39:16.798" endtime="20210322 02:39:16.800"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 02:39:16.802" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:39:16.801" endtime="20210322 02:39:16.802"></status>
</kw>
<status status="PASS" starttime="20210322 02:39:16.591" endtime="20210322 02:39:16.802"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 02:39:16.804" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:39:16.803" endtime="20210322 02:39:16.804"></status>
</kw>
<kw name="buscar account por holder" library="accounts_get_accounts_by_holder">
<kw name="conectar accounts" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accounts</arg>
<arg>url=${account_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 02:39:16.807" level="INFO">Creating Session using : alias=accounts, url=https://banking-accounts-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 02:39:16.806" endtime="20210322 02:39:16.808"></status>
</kw>
<status status="PASS" starttime="20210322 02:39:16.805" endtime="20210322 02:39:16.808"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accounts</arg>
<arg>/marketplaces/${marketplace_external_key}/holders/${holder_external_key}/accounts</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:39:16.809" level="INFO">GET Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/holders/3bfe4673fb4349808cc29d1ab0252f3a/accounts, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 02:39:17.458" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:39:16.808" endtime="20210322 02:39:17.458"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:39:17.461" level="INFO">{'items': [{'id': '41bbf04953dc465da10ea391a5cc81db', 'holder': '3bfe4673fb4349808cc29d1ab0252f3a', 'balance': '0.00', 'currency': 'BRL', 'routing_number': '001', 'number': '503503467', 'status': 'active', 'metadata': {}, 'created_at': '2021-03-22T05:39:17.626539', 'updated_at': '2021-03-22T05:39:17.626539', 'primary': True, 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'uri': '/v2/marketplaces/f71a8951368a4cc085cf7875ff44e61c/accounts/41bbf04953dc465da10ea391a5cc81db', 'resource': 'payment_account'}], 'has_more': False, 'limit': 100, 'total_pages': 1, 'page': 1, 'offset': 0, 'total': '1', 'query_count': '1'}</msg>
<status status="PASS" starttime="20210322 02:39:17.459" endtime="20210322 02:39:17.461"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:39:17.463" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:39:17.462" endtime="20210322 02:39:17.463"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["id"]}</arg>
</arguments>
<assign>
<var>${account_external_key}</var>
</assign>
<msg timestamp="20210322 02:39:17.465" level="INFO">${account_external_key} = 41bbf04953dc465da10ea391a5cc81db</msg>
<status status="PASS" starttime="20210322 02:39:17.464" endtime="20210322 02:39:17.465"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_external_key}</arg>
</arguments>
<msg timestamp="20210322 02:39:17.467" level="INFO">${account_external_key} = 41bbf04953dc465da10ea391a5cc81db</msg>
<status status="PASS" starttime="20210322 02:39:17.467" endtime="20210322 02:39:17.467"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["number"]}</arg>
</arguments>
<assign>
<var>${account_number}</var>
</assign>
<msg timestamp="20210322 02:39:17.468" level="INFO">${account_number} = 503503467</msg>
<status status="PASS" starttime="20210322 02:39:17.467" endtime="20210322 02:39:17.468"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_number}</arg>
</arguments>
<msg timestamp="20210322 02:39:17.469" level="INFO">${account_number} = 503503467</msg>
<status status="PASS" starttime="20210322 02:39:17.469" endtime="20210322 02:39:17.469"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["routing_number"]}</arg>
</arguments>
<assign>
<var>${account_routing_number}</var>
</assign>
<msg timestamp="20210322 02:39:17.471" level="INFO">${account_routing_number} = 001</msg>
<status status="PASS" starttime="20210322 02:39:17.470" endtime="20210322 02:39:17.471"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_routing_number}</arg>
</arguments>
<msg timestamp="20210322 02:39:17.472" level="INFO">${account_routing_number} = 001</msg>
<status status="PASS" starttime="20210322 02:39:17.471" endtime="20210322 02:39:17.472"></status>
</kw>
<status status="PASS" starttime="20210322 02:39:16.805" endtime="20210322 02:39:17.472"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 02:39:17.473" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:39:17.472" endtime="20210322 02:39:17.473"></status>
</kw>
<status status="PASS" starttime="20210322 02:39:14.223" endtime="20210322 02:39:17.473"></status>
</kw>
<kw name="criar chave pix" library="pix_dict_create_entry">
<arguments>
<arg>email</arg>
<arg>${email_pix}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 02:39:17.475" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 02:39:17.474" endtime="20210322 02:39:17.475"></status>
</kw>
<status status="PASS" starttime="20210322 02:39:17.474" endtime="20210322 02:39:17.476"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${type}</arg>
</arguments>
<msg timestamp="20210322 02:39:17.477" level="INFO">${type} = email</msg>
<status status="PASS" starttime="20210322 02:39:17.477" endtime="20210322 02:39:17.477"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210322 02:39:17.477" level="INFO">${value} = alvesfernando@bol.com.br</msg>
<status status="PASS" starttime="20210322 02:39:17.477" endtime="20210322 02:39:17.477"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:39:17.478" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 02:39:17.477" endtime="20210322 02:39:17.478"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "${type}",</arg>
<arg>"value": "${value}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 02:39:17.479" level="INFO">${body} = { "type": "email", "value": "alvesfernando@bol.com.br" }</msg>
<status status="PASS" starttime="20210322 02:39:17.479" endtime="20210322 02:39:17.479"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:39:17.480" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/3bfe4673fb4349808cc29d1ab0252f3a/accounts/41bbf04953dc465da10ea391a5cc81db/entries, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "email", "value": "alvesfernando@bol.com.br" } 
json=None</msg>
<msg timestamp="20210322 02:39:18.149" level="INFO">${response} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20210322 02:39:17.479" endtime="20210322 02:39:18.149"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:39:18.152" level="INFO">{'id': '027fbcaf6dd34ad1957314a89685e76c', 'status': 'waiting_ownership_verification', 'created_at': '2021-03-22T02:39:19.000', 'updated_at': '2021-03-22T02:39:19.000', 'key': {'value': 'alvesfernando@bol.com.br', 'type': 'email'}, 'account': {'id': '41bbf04953dc465da10ea391a5cc81db', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': '3bfe4673fb4349808cc29d1ab0252f3a', 'owner': {'name': 'Holder de teste', 'national_registration': '19756830212', 'type': 'individual'}, 'routing_number': '001', 'number': '503503467', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}, 'resource': 'pix.entry'}</msg>
<status status="PASS" starttime="20210322 02:39:18.151" endtime="20210322 02:39:18.152"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:39:18.155" level="INFO">d093a7f27b959332</msg>
<status status="PASS" starttime="20210322 02:39:18.154" endtime="20210322 02:39:18.155"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 02:39:18.156" level="INFO">202</msg>
<status status="PASS" starttime="20210322 02:39:18.156" endtime="20210322 02:39:18.158"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:39:18.160" level="INFO">${response} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20210322 02:39:18.159" endtime="20210322 02:39:18.160"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${entry_external_key}</var>
</assign>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:39:18.162" endtime="20210322 02:39:18.164"></status>
</kw>
<msg timestamp="20210322 02:39:18.164" level="INFO">${entry_external_key} = 027fbcaf6dd34ad1957314a89685e76c</msg>
<status status="PASS" starttime="20210322 02:39:18.160" endtime="20210322 02:39:18.164"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${entry_external_key}</arg>
</arguments>
<msg timestamp="20210322 02:39:18.165" level="INFO">${entry_external_key} = 027fbcaf6dd34ad1957314a89685e76c</msg>
<status status="PASS" starttime="20210322 02:39:18.165" endtime="20210322 02:39:18.165"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["key"]["value"]}</arg>
</arguments>
<assign>
<var>${entry_key_value}</var>
</assign>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["key"]["value"]}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:39:18.167" endtime="20210322 02:39:18.168"></status>
</kw>
<msg timestamp="20210322 02:39:18.169" level="INFO">${entry_key_value} = alvesfernando@bol.com.br</msg>
<status status="PASS" starttime="20210322 02:39:18.166" endtime="20210322 02:39:18.169"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${entry_key_value}</arg>
</arguments>
<msg timestamp="20210322 02:39:18.170" level="INFO">${entry_key_value} = alvesfernando@bol.com.br</msg>
<status status="PASS" starttime="20210322 02:39:18.169" endtime="20210322 02:39:18.170"></status>
</kw>
<status status="PASS" starttime="20210322 02:39:17.473" endtime="20210322 02:39:18.170"></status>
</kw>
<kw name="buscar chave pix" library="pix_dict_get_entry">
<arguments>
<arg>${holder_external_key}</arg>
<arg>${account_external_key}</arg>
<arg>${entry_external_key}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 02:39:18.173" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 02:39:18.172" endtime="20210322 02:39:18.173"></status>
</kw>
<status status="PASS" starttime="20210322 02:39:18.172" endtime="20210322 02:39:18.173"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries/${entry_external_key}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:39:18.174" level="INFO">GET Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/3bfe4673fb4349808cc29d1ab0252f3a/accounts/41bbf04953dc465da10ea391a5cc81db/entries/027fbcaf6dd34ad1957314a89685e76c, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 02:39:18.802" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:39:18.174" endtime="20210322 02:39:18.803"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:39:18.805" level="INFO">{'id': '027fbcaf6dd34ad1957314a89685e76c', 'status': 'waiting_ownership_verification', 'created_at': '2021-03-22T02:39:19.000', 'updated_at': '2021-03-22T02:39:19.000', 'key': {'value': 'alvesfernando@bol.com.br', 'type': 'email'}, 'account': {'id': '41bbf04953dc465da10ea391a5cc81db', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': '3bfe4673fb4349808cc29d1ab0252f3a', 'owner': {'name': 'Holder de teste', 'national_registration': '19756830212', 'type': 'individual'}, 'routing_number': '001', 'number': '503503467', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}, 'resource': 'pix.entry'}</msg>
<status status="PASS" starttime="20210322 02:39:18.803" endtime="20210322 02:39:18.805"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:39:18.807" level="INFO">6b97254f04c916f9</msg>
<status status="PASS" starttime="20210322 02:39:18.806" endtime="20210322 02:39:18.808"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 02:39:18.810" level="INFO">200</msg>
<status status="PASS" starttime="20210322 02:39:18.808" endtime="20210322 02:39:18.810"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:39:18.812" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:39:18.812" endtime="20210322 02:39:18.812"></status>
</kw>
<status status="PASS" starttime="20210322 02:39:18.171" endtime="20210322 02:39:18.813"></status>
</kw>
<kw name="validar busca da chave pix" library="asserts">
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 02:39:18.816" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:39:18.815" endtime="20210322 02:39:18.816"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar status da chave</arg>
</arguments>
<msg timestamp="20210322 02:39:18.817" level="INFO">Validar status da chave</msg>
<status status="PASS" starttime="20210322 02:39:18.816" endtime="20210322 02:39:18.817"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${type}' == 'evp'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["status"]}</arg>
<arg>active</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'phone'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["status"]}</arg>
<arg>waiting_ownership_verification</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'email'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["status"]}</arg>
<arg>waiting_ownership_verification</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'national_registration'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["status"]}</arg>
<arg>active</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["status"]}</arg>
<arg>waiting_ownership_verification</arg>
</arguments>
<status status="PASS" starttime="20210322 02:39:18.819" endtime="20210322 02:39:18.820"></status>
</kw>
<status status="PASS" starttime="20210322 02:39:18.818" endtime="20210322 02:39:18.820"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando Tipo da chave PIX</arg>
</arguments>
<msg timestamp="20210322 02:39:18.822" level="INFO">Validando Tipo da chave PIX</msg>
<status status="PASS" starttime="20210322 02:39:18.822" endtime="20210322 02:39:18.822"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${type}' == 'evp'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["type"]}</arg>
<arg>${type}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'phone'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["type"]}</arg>
<arg>${type}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'email'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["type"]}</arg>
<arg>${type}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'national_registration'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["type"]}</arg>
<arg>${type}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["key"]["type"]}</arg>
<arg>${type}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:39:18.824" endtime="20210322 02:39:18.826"></status>
</kw>
<status status="PASS" starttime="20210322 02:39:18.822" endtime="20210322 02:39:18.826"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando Valor da chave PIX</arg>
</arguments>
<msg timestamp="20210322 02:39:18.826" level="INFO">Validando Valor da chave PIX</msg>
<status status="PASS" starttime="20210322 02:39:18.826" endtime="20210322 02:39:18.826"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${type}' == 'evp'</arg>
<arg>Should Not Be Empty</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'phone'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${phone_pix}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'email'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${email_pix}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'national_registration'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${national_registration}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${email_pix}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:39:18.829" endtime="20210322 02:39:18.829"></status>
</kw>
<status status="PASS" starttime="20210322 02:39:18.827" endtime="20210322 02:39:18.829"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando dados da conta</arg>
</arguments>
<msg timestamp="20210322 02:39:18.829" level="INFO">Validando dados da conta</msg>
<status status="PASS" starttime="20210322 02:39:18.829" endtime="20210322 02:39:18.829"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["id"]}</arg>
<arg>${account_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:39:18.830" endtime="20210322 02:39:18.832"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["marketplace"]}</arg>
<arg>${marketplace_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:39:18.832" endtime="20210322 02:39:18.832"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["holder"]}</arg>
<arg>${holder_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:39:18.832" endtime="20210322 02:39:18.834"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["number"]}</arg>
<arg>${account_number}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:39:18.834" endtime="20210322 02:39:18.834"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["routing_number"]}</arg>
<arg>${account_routing_number}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:39:18.835" endtime="20210322 02:39:18.835"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["type"]}</arg>
<arg>CACC</arg>
</arguments>
<status status="PASS" starttime="20210322 02:39:18.836" endtime="20210322 02:39:18.837"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar Proprietário da Account Owner</arg>
</arguments>
<msg timestamp="20210322 02:39:18.837" level="INFO">Validar Proprietário da Account Owner</msg>
<status status="PASS" starttime="20210322 02:39:18.837" endtime="20210322 02:39:18.837"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${holder_type}' == 'individual'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["account"]["owner"]["name"]}</arg>
<arg>${holder_name}</arg>
<arg>ELSE IF</arg>
<arg>'${holder_type}' == 'business'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["account"]["owner"]["name"]}</arg>
<arg>${legal_name}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["account"]["owner"]["name"]}</arg>
<arg>${holder_name}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:39:18.838" endtime="20210322 02:39:18.839"></status>
</kw>
<status status="PASS" starttime="20210322 02:39:18.838" endtime="20210322 02:39:18.839"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar national_registration da Account Owner</arg>
</arguments>
<msg timestamp="20210322 02:39:18.839" level="INFO">Validar national_registration da Account Owner</msg>
<status status="PASS" starttime="20210322 02:39:18.839" endtime="20210322 02:39:18.840"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${holder_type}' == 'individual'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["account"]["owner"]["national_registration"]}</arg>
<arg>${national_registration}</arg>
<arg>ELSE IF</arg>
<arg>'${holder_type}' == 'business'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["account"]["owner"]["national_registration"]}</arg>
<arg>${national_registration}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["account"]["owner"]["national_registration"]}</arg>
<arg>${national_registration}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:39:18.840" endtime="20210322 02:39:18.841"></status>
</kw>
<status status="PASS" starttime="20210322 02:39:18.840" endtime="20210322 02:39:18.841"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar Holder Type do Account Owner</arg>
</arguments>
<msg timestamp="20210322 02:39:18.842" level="INFO">Validar Holder Type do Account Owner</msg>
<status status="PASS" starttime="20210322 02:39:18.841" endtime="20210322 02:39:18.842"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${holder_type}' == 'individual'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["account"]["owner"]["type"]}</arg>
<arg>${holder_type}</arg>
<arg>ELSE IF</arg>
<arg>'${holder_type}' == 'business'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["account"]["owner"]["type"]}</arg>
<arg>${holder_type}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["account"]["owner"]["type"]}</arg>
<arg>${holder_type}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:39:18.842" endtime="20210322 02:39:18.844"></status>
</kw>
<status status="PASS" starttime="20210322 02:39:18.842" endtime="20210322 02:39:18.844"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar PSP</arg>
</arguments>
<msg timestamp="20210322 02:39:18.844" level="INFO">Validar PSP</msg>
<status status="PASS" starttime="20210322 02:39:18.844" endtime="20210322 02:39:18.844"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["psp"]["code"]}</arg>
<arg>19468242</arg>
</arguments>
<status status="PASS" starttime="20210322 02:39:18.844" endtime="20210322 02:39:18.844"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["psp"]["name"]}</arg>
<arg>Zoop Tecnologia e Meios de Pagamento S.A.</arg>
</arguments>
<status status="PASS" starttime="20210322 02:39:18.845" endtime="20210322 02:39:18.845"></status>
</kw>
<status status="PASS" starttime="20210322 02:39:18.813" endtime="20210322 02:39:18.845"></status>
</kw>
<doc>Fluxo Básico</doc>
<tags>
<tag>regression_test</tag>
<tag>smoke_test</tag>
</tags>
<status status="PASS" starttime="20210322 02:39:14.221" endtime="20210322 02:39:18.845" critical="yes"></status>
</test>
<test id="s1-s1-s1-t4" name="Cenário: Buscar chave de endereçamento do tipo CPF">
<kw name="criar holder individual ativo" library="accreditation_create_holder_active">
<kw name="conectar accreditation" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accreditation</arg>
<arg>url=${accreditation_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 02:39:18.847" level="INFO">Creating Session using : alias=accreditation, url=https://banking-accreditation-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 02:39:18.847" endtime="20210322 02:39:18.848"></status>
</kw>
<status status="PASS" starttime="20210322 02:39:18.847" endtime="20210322 02:39:18.848"></status>
</kw>
<kw name="Cpf" library="FakerLibrary">
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 02:39:18.848" level="INFO">${national_registration} = 436.057.891-10</msg>
<status status="PASS" starttime="20210322 02:39:18.848" endtime="20210322 02:39:18.849"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${national_registration}</arg>
<arg>.</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 02:39:18.849" level="INFO">${national_registration} = 436057891-10</msg>
<status status="PASS" starttime="20210322 02:39:18.849" endtime="20210322 02:39:18.849"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${national_registration}</arg>
<arg>-</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 02:39:18.850" level="INFO">${national_registration} = 43605789110</msg>
<status status="PASS" starttime="20210322 02:39:18.850" endtime="20210322 02:39:18.850"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${national_registration}</arg>
</arguments>
<msg timestamp="20210322 02:39:18.851" level="INFO">${national_registration} = 43605789110</msg>
<status status="PASS" starttime="20210322 02:39:18.851" endtime="20210322 02:39:18.851"></status>
</kw>
<kw name="Rg" library="FakerLibrary">
<doc>Brazilian RG, return plain numbers.
Check:  https://www.ngmatematica.com/2014/02/como-determinar-o-digito-verificador-do.html</doc>
<assign>
<var>${identity_card}</var>
</assign>
<msg timestamp="20210322 02:39:18.852" level="INFO">${identity_card} = 107362545</msg>
<status status="PASS" starttime="20210322 02:39:18.851" endtime="20210322 02:39:18.852"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${identity_card}</arg>
</arguments>
<msg timestamp="20210322 02:39:18.852" level="INFO">${identity_card} = 107362545</msg>
<status status="PASS" starttime="20210322 02:39:18.852" endtime="20210322 02:39:18.852"></status>
</kw>
<kw name="criar holder individual" library="accreditation_post_holder_individual">
<arguments>
<arg>holder_type=individual</arg>
<arg>holder_name=${holder_name}</arg>
<arg>email=${email}</arg>
<arg>national_registration=${national_registration}</arg>
<arg>revenue=${revenue}</arg>
<arg>birthday=${birthday}</arg>
<arg>mothers_name=${mothers_name}</arg>
<arg>identity_card=${identity_card}</arg>
<arg>pep=false</arg>
<arg>cbo=${cbo}</arg>
</arguments>
<kw name="conectar accreditation" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accreditation</arg>
<arg>url=${accreditation_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 02:39:18.854" level="INFO">Creating Session using : alias=accreditation, url=https://banking-accreditation-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 02:39:18.854" endtime="20210322 02:39:18.855"></status>
</kw>
<status status="PASS" starttime="20210322 02:39:18.853" endtime="20210322 02:39:18.855"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_type}</arg>
</arguments>
<msg timestamp="20210322 02:39:18.857" level="INFO">${holder_type} = individual</msg>
<status status="PASS" starttime="20210322 02:39:18.855" endtime="20210322 02:39:18.857"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_name}</arg>
</arguments>
<msg timestamp="20210322 02:39:18.857" level="INFO">${holder_name} = Holder de teste</msg>
<status status="PASS" starttime="20210322 02:39:18.857" endtime="20210322 02:39:18.857"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:39:18.857" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 02:39:18.857" endtime="20210322 02:39:18.857"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "${holder_type}",</arg>
<arg>"name": "${holder_name}",</arg>
<arg>"email": "${email}",</arg>
<arg>"national_registration": "${national_registration}",</arg>
<arg>"revenue": ${revenue},</arg>
<arg>"birthday": "${birthday}",</arg>
<arg>"mothers_name": "${mothers_name}",</arg>
<arg>"identity_card": "${identity_card}",</arg>
<arg>"pep": false,</arg>
<arg>"cbo": ${cbo}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 02:39:18.858" level="INFO">${body} = { "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "43605789110", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder",...</msg>
<status status="PASS" starttime="20210322 02:39:18.857" endtime="20210322 02:39:18.858"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:39:18.859" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "43605789110", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder", "identity_card": "107362545", "pep": false, "cbo": 821450 } 
json=None</msg>
<msg timestamp="20210322 02:39:19.555" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:39:18.858" endtime="20210322 02:39:19.555"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:39:19.555" level="INFO">{'id': 'b864ed4e589c4d2bafb0fd2701ba6c02', 'name': 'Holder de teste', 'revenue': 5500.0, 'email': 'teste@teste.com.br', 'status': 'waiting_info_and_documents', 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'marketplace_name': 'Marketplace de Teste', 'created_at': '2021-03-22T02:39:20.37415', 'updated_at': '2021-03-22T02:39:20.374152', 'type': 'individual', 'national_registration': '43605789110', 'birthday': '1988-04-23', 'mothers_name': 'Mãe do Holder', 'identity_card': '107362545', 'pep': False, 'cbo': '821450', '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/b864ed4e589c4d2bafb0fd2701ba6c02', 'type': 'GET'}, 'phones': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/b864ed4e589c4d2bafb0fd2701ba6c02/phones', 'type': 'GET'}, 'addresses': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/b864ed4e589c4d2bafb0fd2701ba6c02/addresses', 'type': 'GET'}, 'documents': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/b864ed4e589c4d2bafb0fd2701ba6c02/documents', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 02:39:19.555" endtime="20210322 02:39:19.556"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:39:19.556" level="INFO">9333ddf78ba78eaa</msg>
<status status="PASS" starttime="20210322 02:39:19.556" endtime="20210322 02:39:19.556"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${body}</arg>
</arguments>
<msg timestamp="20210322 02:39:19.557" level="INFO">{ "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "43605789110", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder", "identity_card": "107362545", "pep": false, "cbo": 821450 }</msg>
<status status="PASS" starttime="20210322 02:39:19.556" endtime="20210322 02:39:19.557"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:39:19.557" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:39:19.557" endtime="20210322 02:39:19.558"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${holder_external_key}</var>
</assign>
<msg timestamp="20210322 02:39:19.558" level="INFO">${holder_external_key} = b864ed4e589c4d2bafb0fd2701ba6c02</msg>
<status status="PASS" starttime="20210322 02:39:19.558" endtime="20210322 02:39:19.558"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_external_key}</arg>
</arguments>
<msg timestamp="20210322 02:39:19.559" level="INFO">${holder_external_key} = b864ed4e589c4d2bafb0fd2701ba6c02</msg>
<status status="PASS" starttime="20210322 02:39:19.559" endtime="20210322 02:39:19.559"></status>
</kw>
<status status="PASS" starttime="20210322 02:39:18.852" endtime="20210322 02:39:19.559"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_name}</arg>
</arguments>
<msg timestamp="20210322 02:39:19.560" level="INFO">${holder_name} = Holder de teste</msg>
<status status="PASS" starttime="20210322 02:39:19.559" endtime="20210322 02:39:19.560"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 02:39:19.560" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:39:19.560" endtime="20210322 02:39:19.560"></status>
</kw>
<kw name="criar holder phone" library="accreditation_post_holder_phone">
<arguments>
<arg>21</arg>
<arg>51</arg>
<arg>996221236</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:39:19.561" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 02:39:19.561" endtime="20210322 02:39:19.561"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"area_code": "${phone_area_code}",</arg>
<arg>"country_code": "${phone_country_code}",</arg>
<arg>"number": "${phone_number}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 02:39:19.562" level="INFO">${body} = { "area_code": "21", "country_code": "51", "number": "996221236" }</msg>
<status status="PASS" starttime="20210322 02:39:19.561" endtime="20210322 02:39:19.562"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/phones</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:39:19.562" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/b864ed4e589c4d2bafb0fd2701ba6c02/phones, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "area_code": "21", "country_code": "51", "number": "996221236" } 
json=None</msg>
<msg timestamp="20210322 02:39:19.781" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:39:19.562" endtime="20210322 02:39:19.781"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:39:19.783" level="INFO">{'id': '17bfcc2de702492388ecfb3813ee9f04', 'area_code': '21', 'country_code': '51', 'number': '996221236', 'main': True, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/b864ed4e589c4d2bafb0fd2701ba6c02/phones/17bfcc2de702492388ecfb3813ee9f04', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/b864ed4e589c4d2bafb0fd2701ba6c02', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 02:39:19.781" endtime="20210322 02:39:19.783"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:39:19.785" level="INFO">d740777077730dad</msg>
<status status="PASS" starttime="20210322 02:39:19.784" endtime="20210322 02:39:19.785"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:39:19.787" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:39:19.786" endtime="20210322 02:39:19.787"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${phone_external_key}</var>
</assign>
<msg timestamp="20210322 02:39:19.789" level="INFO">${phone_external_key} = 17bfcc2de702492388ecfb3813ee9f04</msg>
<status status="PASS" starttime="20210322 02:39:19.788" endtime="20210322 02:39:19.790"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${phone_external_key}</arg>
</arguments>
<msg timestamp="20210322 02:39:19.791" level="INFO">${phone_external_key} = 17bfcc2de702492388ecfb3813ee9f04</msg>
<status status="PASS" starttime="20210322 02:39:19.790" endtime="20210322 02:39:19.791"></status>
</kw>
<status status="PASS" starttime="20210322 02:39:19.560" endtime="20210322 02:39:19.791"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 02:39:19.793" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:39:19.792" endtime="20210322 02:39:19.793"></status>
</kw>
<kw name="criar holder address" library="accreditation_post_holder_address">
<arguments>
<arg>Rio de Janeiro</arg>
<arg>Rio de Janeiro</arg>
<arg>Brasil</arg>
<arg>Bairro de Testes</arg>
<arg>Rua de Testes</arg>
<arg>90</arg>
<arg>apto 200</arg>
<arg>21550987</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:39:19.795" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 02:39:19.794" endtime="20210322 02:39:19.795"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"city": "${city}",</arg>
<arg>"state": "${state}",</arg>
<arg>"country": "${country}",</arg>
<arg>"neighborhood": "${neighborhood}",</arg>
<arg>"street": "${street}",</arg>
<arg>"number": "${number}",</arg>
<arg>"complement": "${complement}",</arg>
<arg>"postal_code": "${postal_code}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 02:39:19.797" level="INFO">${body} = { "city": "Rio de Janeiro", "state": "Rio de Janeiro", "country": "Brasil", "neighborhood": "Bairro de Testes", "street": "Rua de Testes", "number": "90", "complement": "apto 200", "postal_code": "215...</msg>
<status status="PASS" starttime="20210322 02:39:19.795" endtime="20210322 02:39:19.797"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/addresses</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:39:19.799" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/b864ed4e589c4d2bafb0fd2701ba6c02/addresses, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "city": "Rio de Janeiro", "state": "Rio de Janeiro", "country": "Brasil", "neighborhood": "Bairro de Testes", "street": "Rua de Testes", "number": "90", "complement": "apto 200", "postal_code": "21550987" } 
json=None</msg>
<msg timestamp="20210322 02:39:20.020" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:39:19.797" endtime="20210322 02:39:20.020"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:39:20.022" level="INFO">{'id': '25c5443c130949cfbd9ff217432c2cef', 'street': 'Rua de Testes', 'number': '90', 'city': 'Rio de Janeiro', 'complement': 'apto 200', 'state': 'Rio de Janeiro', 'neighborhood': 'Bairro de Testes', 'postal_code': '21550987', 'country': 'Brasil', 'main': True, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/b864ed4e589c4d2bafb0fd2701ba6c02/addresses/25c5443c130949cfbd9ff217432c2cef', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/b864ed4e589c4d2bafb0fd2701ba6c02', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 02:39:20.021" endtime="20210322 02:39:20.023"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:39:20.025" level="INFO">6dbed121a9a7b2c4</msg>
<status status="PASS" starttime="20210322 02:39:20.024" endtime="20210322 02:39:20.025"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:39:20.027" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:39:20.026" endtime="20210322 02:39:20.027"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${address_external_key}</var>
</assign>
<msg timestamp="20210322 02:39:20.030" level="INFO">${address_external_key} = 25c5443c130949cfbd9ff217432c2cef</msg>
<status status="PASS" starttime="20210322 02:39:20.028" endtime="20210322 02:39:20.030"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${address_external_key}</arg>
</arguments>
<msg timestamp="20210322 02:39:20.032" level="INFO">${address_external_key} = 25c5443c130949cfbd9ff217432c2cef</msg>
<status status="PASS" starttime="20210322 02:39:20.031" endtime="20210322 02:39:20.032"></status>
</kw>
<status status="PASS" starttime="20210322 02:39:19.793" endtime="20210322 02:39:20.033"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 02:39:20.034" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:39:20.033" endtime="20210322 02:39:20.035"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>SELFIE</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:39:20.037" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 02:39:20.036" endtime="20210322 02:39:20.037"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 02:39:20.038" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 02:39:20.041" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 02:39:20.038" endtime="20210322 02:39:20.041"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:39:20.042" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/b864ed4e589c4d2bafb0fd2701ba6c02/documents?type=SELFIE, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 02:39:20.369" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:39:20.041" endtime="20210322 02:39:20.369"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:39:20.371" level="INFO">{'id': '97adf8823bda426dbdd7162840a3de3e', 'document_type': 'selfie', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/b864ed4e589c4d2bafb0fd2701ba6c02/documents/97adf8823bda426dbdd7162840a3de3e', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/b864ed4e589c4d2bafb0fd2701ba6c02', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/b864ed4e589c4d2bafb0fd2701ba6c02/documents/97adf8823bda426dbdd7162840a3de3e/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 02:39:20.369" endtime="20210322 02:39:20.371"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:39:20.373" level="INFO">0871c97febf01eab</msg>
<status status="PASS" starttime="20210322 02:39:20.372" endtime="20210322 02:39:20.374"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:39:20.376" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:39:20.375" endtime="20210322 02:39:20.376"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 02:39:20.379" level="INFO">${document_external_key} = 97adf8823bda426dbdd7162840a3de3e</msg>
<status status="PASS" starttime="20210322 02:39:20.377" endtime="20210322 02:39:20.379"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 02:39:20.381" level="INFO">${document_external_key} = 97adf8823bda426dbdd7162840a3de3e</msg>
<status status="PASS" starttime="20210322 02:39:20.380" endtime="20210322 02:39:20.381"></status>
</kw>
<status status="PASS" starttime="20210322 02:39:20.035" endtime="20210322 02:39:20.381"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 02:39:20.383" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:39:20.382" endtime="20210322 02:39:20.384"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>RG_FRENTE</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:39:20.387" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 02:39:20.386" endtime="20210322 02:39:20.387"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 02:39:20.389" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 02:39:20.392" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 02:39:20.388" endtime="20210322 02:39:20.392"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:39:20.394" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/b864ed4e589c4d2bafb0fd2701ba6c02/documents?type=RG_FRENTE, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 02:39:20.665" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:39:20.392" endtime="20210322 02:39:20.665"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:39:20.667" level="INFO">{'id': 'a7c72cff44524f1ca63fd964a5ef35cb', 'document_type': 'rg_frente', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/b864ed4e589c4d2bafb0fd2701ba6c02/documents/a7c72cff44524f1ca63fd964a5ef35cb', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/b864ed4e589c4d2bafb0fd2701ba6c02', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/b864ed4e589c4d2bafb0fd2701ba6c02/documents/a7c72cff44524f1ca63fd964a5ef35cb/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 02:39:20.666" endtime="20210322 02:39:20.667"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:39:20.669" level="INFO">4080465e4724485d</msg>
<status status="PASS" starttime="20210322 02:39:20.668" endtime="20210322 02:39:20.670"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:39:20.671" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:39:20.670" endtime="20210322 02:39:20.672"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 02:39:20.675" level="INFO">${document_external_key} = a7c72cff44524f1ca63fd964a5ef35cb</msg>
<status status="PASS" starttime="20210322 02:39:20.673" endtime="20210322 02:39:20.675"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 02:39:20.677" level="INFO">${document_external_key} = a7c72cff44524f1ca63fd964a5ef35cb</msg>
<status status="PASS" starttime="20210322 02:39:20.676" endtime="20210322 02:39:20.677"></status>
</kw>
<status status="PASS" starttime="20210322 02:39:20.384" endtime="20210322 02:39:20.677"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 02:39:20.679" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:39:20.678" endtime="20210322 02:39:20.679"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>RG_VERSO</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:39:20.681" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 02:39:20.681" endtime="20210322 02:39:20.681"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 02:39:20.682" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 02:39:20.684" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 02:39:20.682" endtime="20210322 02:39:20.684"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:39:20.687" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/b864ed4e589c4d2bafb0fd2701ba6c02/documents?type=RG_VERSO, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 02:39:20.954" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:39:20.686" endtime="20210322 02:39:20.954"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:39:20.956" level="INFO">{'id': '0d6370f7d7684cd29f12c45ae780b781', 'document_type': 'rg_verso', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/b864ed4e589c4d2bafb0fd2701ba6c02/documents/0d6370f7d7684cd29f12c45ae780b781', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/b864ed4e589c4d2bafb0fd2701ba6c02', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/b864ed4e589c4d2bafb0fd2701ba6c02/documents/0d6370f7d7684cd29f12c45ae780b781/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 02:39:20.955" endtime="20210322 02:39:20.956"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:39:20.957" level="INFO">5991158673097989</msg>
<status status="PASS" starttime="20210322 02:39:20.957" endtime="20210322 02:39:20.957"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:39:20.958" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:39:20.958" endtime="20210322 02:39:20.958"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 02:39:20.959" level="INFO">${document_external_key} = 0d6370f7d7684cd29f12c45ae780b781</msg>
<status status="PASS" starttime="20210322 02:39:20.958" endtime="20210322 02:39:20.959"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 02:39:20.960" level="INFO">${document_external_key} = 0d6370f7d7684cd29f12c45ae780b781</msg>
<status status="PASS" starttime="20210322 02:39:20.959" endtime="20210322 02:39:20.960"></status>
</kw>
<status status="PASS" starttime="20210322 02:39:20.679" endtime="20210322 02:39:20.960"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 02:39:20.960" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:39:20.960" endtime="20210322 02:39:20.960"></status>
</kw>
<kw name="solicitar aprovação do holder" library="accreditation_request_approval">
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:39:20.961" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 02:39:20.961" endtime="20210322 02:39:20.961"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/approval</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:39:20.962" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/b864ed4e589c4d2bafb0fd2701ba6c02/approval, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data=None 
json=None</msg>
<msg timestamp="20210322 02:39:21.231" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:39:20.962" endtime="20210322 02:39:21.231"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:39:21.234" level="INFO">{'message': 'Approval request accepted successfully. Processing analysis'}</msg>
<status status="PASS" starttime="20210322 02:39:21.233" endtime="20210322 02:39:21.234"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:39:21.236" level="INFO">eb6f451b307e7c19</msg>
<status status="PASS" starttime="20210322 02:39:21.235" endtime="20210322 02:39:21.237"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:39:21.238" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:39:21.237" endtime="20210322 02:39:21.239"></status>
</kw>
<status status="PASS" starttime="20210322 02:39:20.961" endtime="20210322 02:39:21.239"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 02:39:21.240" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:39:21.239" endtime="20210322 02:39:21.240"></status>
</kw>
<kw name="recebendo notificação de aprovação" library="accreditation_risk_notification">
<kw name="Uuid 4" library="FakerLibrary">
<doc>Generates a random UUID4 string.
:param cast_to: Specify what type the UUID should be cast to. Default is `str`
:type cast_to: callable</doc>
<assign>
<var>${assessment_id}</var>
</assign>
<msg timestamp="20210322 02:39:21.242" level="INFO">${assessment_id} = 3aef7e76-ef9a-42fa-9964-969f30971bbc</msg>
<status status="PASS" starttime="20210322 02:39:21.242" endtime="20210322 02:39:21.242"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>year</arg>
</arguments>
<assign>
<var>${year}</var>
</assign>
<msg timestamp="20210322 02:39:21.243" level="INFO">${year} = 2021</msg>
<status status="PASS" starttime="20210322 02:39:21.243" endtime="20210322 02:39:21.243"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>month</arg>
</arguments>
<assign>
<var>${month}</var>
</assign>
<msg timestamp="20210322 02:39:21.244" level="INFO">${month} = 03</msg>
<status status="PASS" starttime="20210322 02:39:21.244" endtime="20210322 02:39:21.244"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>day</arg>
</arguments>
<assign>
<var>${day}</var>
</assign>
<msg timestamp="20210322 02:39:21.245" level="INFO">${day} = 22</msg>
<status status="PASS" starttime="20210322 02:39:21.245" endtime="20210322 02:39:21.245"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:39:21.246" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 02:39:21.246" endtime="20210322 02:39:21.246"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "risk.assessment.result",</arg>
<arg>"resource": "business.holder",</arg>
<arg>"created_at": "${year}-${month}-${day} 15:28:56.747Z",</arg>
<arg>"marketplace_id": "${marketplace_external_key}",</arg>
<arg>"object": {</arg>
<arg>"result": "APPROVED",</arg>
<arg>"holder_id": "${holder_external_key}",</arg>
<arg>"applicant_id": "${application_external_key}",</arg>
<arg>"assessment_id": "${assessment_id}"</arg>
<arg>}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 02:39:21.248" level="INFO">${body} = { "type": "risk.assessment.result", "resource": "business.holder", "created_at": "2021-03-22 15:28:56.747Z", "marketplace_id": "f71a8951368a4cc085cf7875ff44e61c", "object": { "result": "APPROVED", "ho...</msg>
<status status="PASS" starttime="20210322 02:39:21.247" endtime="20210322 02:39:21.248"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/admin/internal_operation/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/registration/approval</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:39:21.249" level="INFO">POST Request using : uri=/admin/internal_operation/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/b864ed4e589c4d2bafb0fd2701ba6c02/registration/approval, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "risk.assessment.result", "resource": "business.holder", "created_at": "2021-03-22 15:28:56.747Z", "marketplace_id": "f71a8951368a4cc085cf7875ff44e61c", "object": { "result": "APPROVED", "holder_id": "b864ed4e589c4d2bafb0fd2701ba6c02", "applicant_id": "bcc25a6751c14b52af1340d40dba78c5", "assessment_id": "3aef7e76-ef9a-42fa-9964-969f30971bbc" } } 
json=None</msg>
<msg timestamp="20210322 02:39:21.452" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:39:21.248" endtime="20210322 02:39:21.453"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:39:21.453" level="INFO">{'message': 'Holder approved successfully'}</msg>
<status status="PASS" starttime="20210322 02:39:21.453" endtime="20210322 02:39:21.453"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:39:21.454" level="INFO">228315646a3a0814</msg>
<status status="PASS" starttime="20210322 02:39:21.453" endtime="20210322 02:39:21.454"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:39:21.454" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:39:21.454" endtime="20210322 02:39:21.454"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 02:39:21.455" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:39:21.454" endtime="20210322 02:39:21.455"></status>
</kw>
<status status="PASS" starttime="20210322 02:39:21.241" endtime="20210322 02:39:21.455"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 02:39:21.455" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:39:21.455" endtime="20210322 02:39:21.455"></status>
</kw>
<kw name="buscar account por holder" library="accounts_get_accounts_by_holder">
<kw name="conectar accounts" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accounts</arg>
<arg>url=${account_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 02:39:21.456" level="INFO">Creating Session using : alias=accounts, url=https://banking-accounts-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 02:39:21.456" endtime="20210322 02:39:21.457"></status>
</kw>
<status status="PASS" starttime="20210322 02:39:21.456" endtime="20210322 02:39:21.457"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accounts</arg>
<arg>/marketplaces/${marketplace_external_key}/holders/${holder_external_key}/accounts</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:39:21.457" level="INFO">GET Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/holders/b864ed4e589c4d2bafb0fd2701ba6c02/accounts, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 02:39:22.096" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:39:21.457" endtime="20210322 02:39:22.096"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:39:22.096" level="INFO">{'items': [{'id': '1cf903f32d7a42c9b6f65aff3185dc06', 'holder': 'b864ed4e589c4d2bafb0fd2701ba6c02', 'balance': '0.00', 'currency': 'BRL', 'routing_number': '001', 'number': '3438941978', 'status': 'active', 'metadata': {}, 'created_at': '2021-03-22T05:39:22.283432', 'updated_at': '2021-03-22T05:39:22.283432', 'primary': True, 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'uri': '/v2/marketplaces/f71a8951368a4cc085cf7875ff44e61c/accounts/1cf903f32d7a42c9b6f65aff3185dc06', 'resource': 'payment_account'}], 'has_more': False, 'limit': 100, 'total_pages': 1, 'page': 1, 'offset': 0, 'total': '1', 'query_count': '1'}</msg>
<status status="PASS" starttime="20210322 02:39:22.096" endtime="20210322 02:39:22.096"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:39:22.097" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:39:22.096" endtime="20210322 02:39:22.097"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["id"]}</arg>
</arguments>
<assign>
<var>${account_external_key}</var>
</assign>
<msg timestamp="20210322 02:39:22.097" level="INFO">${account_external_key} = 1cf903f32d7a42c9b6f65aff3185dc06</msg>
<status status="PASS" starttime="20210322 02:39:22.097" endtime="20210322 02:39:22.097"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_external_key}</arg>
</arguments>
<msg timestamp="20210322 02:39:22.097" level="INFO">${account_external_key} = 1cf903f32d7a42c9b6f65aff3185dc06</msg>
<status status="PASS" starttime="20210322 02:39:22.097" endtime="20210322 02:39:22.097"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["number"]}</arg>
</arguments>
<assign>
<var>${account_number}</var>
</assign>
<msg timestamp="20210322 02:39:22.098" level="INFO">${account_number} = 3438941978</msg>
<status status="PASS" starttime="20210322 02:39:22.097" endtime="20210322 02:39:22.098"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_number}</arg>
</arguments>
<msg timestamp="20210322 02:39:22.098" level="INFO">${account_number} = 3438941978</msg>
<status status="PASS" starttime="20210322 02:39:22.098" endtime="20210322 02:39:22.098"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["routing_number"]}</arg>
</arguments>
<assign>
<var>${account_routing_number}</var>
</assign>
<msg timestamp="20210322 02:39:22.099" level="INFO">${account_routing_number} = 001</msg>
<status status="PASS" starttime="20210322 02:39:22.098" endtime="20210322 02:39:22.099"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_routing_number}</arg>
</arguments>
<msg timestamp="20210322 02:39:22.099" level="INFO">${account_routing_number} = 001</msg>
<status status="PASS" starttime="20210322 02:39:22.099" endtime="20210322 02:39:22.099"></status>
</kw>
<status status="PASS" starttime="20210322 02:39:21.456" endtime="20210322 02:39:22.099"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 02:39:22.100" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:39:22.099" endtime="20210322 02:39:22.100"></status>
</kw>
<status status="PASS" starttime="20210322 02:39:18.847" endtime="20210322 02:39:22.100"></status>
</kw>
<kw name="criar chave pix" library="pix_dict_create_entry">
<arguments>
<arg>national_registration</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 02:39:22.101" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 02:39:22.101" endtime="20210322 02:39:22.101"></status>
</kw>
<status status="PASS" starttime="20210322 02:39:22.101" endtime="20210322 02:39:22.102"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${type}</arg>
</arguments>
<msg timestamp="20210322 02:39:22.102" level="INFO">${type} = national_registration</msg>
<status status="PASS" starttime="20210322 02:39:22.102" endtime="20210322 02:39:22.102"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210322 02:39:22.103" level="INFO">${value} = </msg>
<status status="PASS" starttime="20210322 02:39:22.102" endtime="20210322 02:39:22.103"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:39:22.103" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 02:39:22.103" endtime="20210322 02:39:22.103"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "${type}",</arg>
<arg>"value": "${value}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 02:39:22.104" level="INFO">${body} = { "type": "national_registration", "value": "" }</msg>
<status status="PASS" starttime="20210322 02:39:22.103" endtime="20210322 02:39:22.104"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:39:22.104" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/b864ed4e589c4d2bafb0fd2701ba6c02/accounts/1cf903f32d7a42c9b6f65aff3185dc06/entries, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "national_registration", "value": "" } 
json=None</msg>
<msg timestamp="20210322 02:39:23.682" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:39:22.104" endtime="20210322 02:39:23.682"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:39:23.685" level="INFO">{'id': '4155c57a7db840a7a1a91c15c9b37f71', 'status': 'active', 'created_at': '2021-03-22T02:39:23.604', 'updated_at': '2021-03-22T02:39:23.604', 'key': {'value': '43605789110', 'type': 'national_registration'}, 'account': {'id': '1cf903f32d7a42c9b6f65aff3185dc06', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': 'b864ed4e589c4d2bafb0fd2701ba6c02', 'owner': {'name': 'Holder de teste', 'national_registration': '43605789110', 'type': 'individual'}, 'routing_number': '001', 'number': '3438941978', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}, 'resource': 'pix.entry'}</msg>
<status status="PASS" starttime="20210322 02:39:23.683" endtime="20210322 02:39:23.685"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:39:23.688" level="INFO">4074188827e8ca3d</msg>
<status status="PASS" starttime="20210322 02:39:23.686" endtime="20210322 02:39:23.689"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 02:39:23.691" level="INFO">201</msg>
<status status="PASS" starttime="20210322 02:39:23.690" endtime="20210322 02:39:23.691"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:39:23.692" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:39:23.691" endtime="20210322 02:39:23.692"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${entry_external_key}</var>
</assign>
<msg timestamp="20210322 02:39:23.694" level="INFO">${entry_external_key} = 4155c57a7db840a7a1a91c15c9b37f71</msg>
<status status="PASS" starttime="20210322 02:39:23.693" endtime="20210322 02:39:23.694"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${entry_external_key}</arg>
</arguments>
<msg timestamp="20210322 02:39:23.695" level="INFO">${entry_external_key} = 4155c57a7db840a7a1a91c15c9b37f71</msg>
<status status="PASS" starttime="20210322 02:39:23.695" endtime="20210322 02:39:23.695"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["key"]["value"]}</arg>
</arguments>
<assign>
<var>${entry_key_value}</var>
</assign>
<msg timestamp="20210322 02:39:23.697" level="INFO">${entry_key_value} = 43605789110</msg>
<status status="PASS" starttime="20210322 02:39:23.696" endtime="20210322 02:39:23.697"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${entry_key_value}</arg>
</arguments>
<msg timestamp="20210322 02:39:23.699" level="INFO">${entry_key_value} = 43605789110</msg>
<status status="PASS" starttime="20210322 02:39:23.698" endtime="20210322 02:39:23.699"></status>
</kw>
<status status="PASS" starttime="20210322 02:39:22.100" endtime="20210322 02:39:23.699"></status>
</kw>
<kw name="buscar chave pix" library="pix_dict_get_entry">
<arguments>
<arg>${holder_external_key}</arg>
<arg>${account_external_key}</arg>
<arg>${entry_external_key}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 02:39:23.702" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 02:39:23.701" endtime="20210322 02:39:23.702"></status>
</kw>
<status status="PASS" starttime="20210322 02:39:23.700" endtime="20210322 02:39:23.702"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries/${entry_external_key}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:39:23.704" level="INFO">GET Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/b864ed4e589c4d2bafb0fd2701ba6c02/accounts/1cf903f32d7a42c9b6f65aff3185dc06/entries/4155c57a7db840a7a1a91c15c9b37f71, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 02:39:24.335" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:39:23.703" endtime="20210322 02:39:24.335"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:39:24.335" level="INFO">{'id': '4155c57a7db840a7a1a91c15c9b37f71', 'status': 'active', 'created_at': '2021-03-22T02:39:23.604', 'updated_at': '2021-03-22T02:39:23.604', 'key': {'value': '43605789110', 'type': 'national_registration'}, 'account': {'id': '1cf903f32d7a42c9b6f65aff3185dc06', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': 'b864ed4e589c4d2bafb0fd2701ba6c02', 'owner': {'name': 'Holder de teste', 'national_registration': '43605789110', 'type': 'individual'}, 'routing_number': '001', 'number': '3438941978', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}, 'resource': 'pix.entry'}</msg>
<status status="PASS" starttime="20210322 02:39:24.335" endtime="20210322 02:39:24.335"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:39:24.337" level="INFO">01748155733c91e1</msg>
<status status="PASS" starttime="20210322 02:39:24.337" endtime="20210322 02:39:24.337"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 02:39:24.337" level="INFO">200</msg>
<status status="PASS" starttime="20210322 02:39:24.337" endtime="20210322 02:39:24.337"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:39:24.337" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:39:24.337" endtime="20210322 02:39:24.337"></status>
</kw>
<status status="PASS" starttime="20210322 02:39:23.699" endtime="20210322 02:39:24.337"></status>
</kw>
<kw name="validar busca da chave pix" library="asserts">
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 02:39:24.338" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:39:24.338" endtime="20210322 02:39:24.338"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar status da chave</arg>
</arguments>
<msg timestamp="20210322 02:39:24.338" level="INFO">Validar status da chave</msg>
<status status="PASS" starttime="20210322 02:39:24.338" endtime="20210322 02:39:24.339"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${type}' == 'evp'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["status"]}</arg>
<arg>active</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'phone'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["status"]}</arg>
<arg>waiting_ownership_verification</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'email'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["status"]}</arg>
<arg>waiting_ownership_verification</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'national_registration'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["status"]}</arg>
<arg>active</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["status"]}</arg>
<arg>active</arg>
</arguments>
<status status="PASS" starttime="20210322 02:39:24.339" endtime="20210322 02:39:24.340"></status>
</kw>
<status status="PASS" starttime="20210322 02:39:24.339" endtime="20210322 02:39:24.340"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando Tipo da chave PIX</arg>
</arguments>
<msg timestamp="20210322 02:39:24.340" level="INFO">Validando Tipo da chave PIX</msg>
<status status="PASS" starttime="20210322 02:39:24.340" endtime="20210322 02:39:24.340"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${type}' == 'evp'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["type"]}</arg>
<arg>${type}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'phone'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["type"]}</arg>
<arg>${type}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'email'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["type"]}</arg>
<arg>${type}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'national_registration'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["type"]}</arg>
<arg>${type}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["key"]["type"]}</arg>
<arg>${type}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:39:24.341" endtime="20210322 02:39:24.342"></status>
</kw>
<status status="PASS" starttime="20210322 02:39:24.340" endtime="20210322 02:39:24.342"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando Valor da chave PIX</arg>
</arguments>
<msg timestamp="20210322 02:39:24.342" level="INFO">Validando Valor da chave PIX</msg>
<status status="PASS" starttime="20210322 02:39:24.342" endtime="20210322 02:39:24.342"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${type}' == 'evp'</arg>
<arg>Should Not Be Empty</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'phone'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${phone_pix}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'email'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${email_pix}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'national_registration'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${national_registration}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${national_registration}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:39:24.343" endtime="20210322 02:39:24.343"></status>
</kw>
<status status="PASS" starttime="20210322 02:39:24.342" endtime="20210322 02:39:24.343"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando dados da conta</arg>
</arguments>
<msg timestamp="20210322 02:39:24.344" level="INFO">Validando dados da conta</msg>
<status status="PASS" starttime="20210322 02:39:24.344" endtime="20210322 02:39:24.344"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["id"]}</arg>
<arg>${account_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:39:24.344" endtime="20210322 02:39:24.344"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["marketplace"]}</arg>
<arg>${marketplace_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:39:24.344" endtime="20210322 02:39:24.345"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["holder"]}</arg>
<arg>${holder_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:39:24.345" endtime="20210322 02:39:24.345"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["number"]}</arg>
<arg>${account_number}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:39:24.346" endtime="20210322 02:39:24.346"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["routing_number"]}</arg>
<arg>${account_routing_number}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:39:24.346" endtime="20210322 02:39:24.346"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["type"]}</arg>
<arg>CACC</arg>
</arguments>
<status status="PASS" starttime="20210322 02:39:24.347" endtime="20210322 02:39:24.347"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar Proprietário da Account Owner</arg>
</arguments>
<msg timestamp="20210322 02:39:24.347" level="INFO">Validar Proprietário da Account Owner</msg>
<status status="PASS" starttime="20210322 02:39:24.347" endtime="20210322 02:39:24.347"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${holder_type}' == 'individual'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["account"]["owner"]["name"]}</arg>
<arg>${holder_name}</arg>
<arg>ELSE IF</arg>
<arg>'${holder_type}' == 'business'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["account"]["owner"]["name"]}</arg>
<arg>${legal_name}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["account"]["owner"]["name"]}</arg>
<arg>${holder_name}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:39:24.348" endtime="20210322 02:39:24.348"></status>
</kw>
<status status="PASS" starttime="20210322 02:39:24.347" endtime="20210322 02:39:24.348"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar national_registration da Account Owner</arg>
</arguments>
<msg timestamp="20210322 02:39:24.349" level="INFO">Validar national_registration da Account Owner</msg>
<status status="PASS" starttime="20210322 02:39:24.348" endtime="20210322 02:39:24.349"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${holder_type}' == 'individual'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["account"]["owner"]["national_registration"]}</arg>
<arg>${national_registration}</arg>
<arg>ELSE IF</arg>
<arg>'${holder_type}' == 'business'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["account"]["owner"]["national_registration"]}</arg>
<arg>${national_registration}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["account"]["owner"]["national_registration"]}</arg>
<arg>${national_registration}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:39:24.349" endtime="20210322 02:39:24.350"></status>
</kw>
<status status="PASS" starttime="20210322 02:39:24.349" endtime="20210322 02:39:24.350"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar Holder Type do Account Owner</arg>
</arguments>
<msg timestamp="20210322 02:39:24.350" level="INFO">Validar Holder Type do Account Owner</msg>
<status status="PASS" starttime="20210322 02:39:24.350" endtime="20210322 02:39:24.350"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${holder_type}' == 'individual'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["account"]["owner"]["type"]}</arg>
<arg>${holder_type}</arg>
<arg>ELSE IF</arg>
<arg>'${holder_type}' == 'business'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["account"]["owner"]["type"]}</arg>
<arg>${holder_type}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["account"]["owner"]["type"]}</arg>
<arg>${holder_type}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:39:24.350" endtime="20210322 02:39:24.351"></status>
</kw>
<status status="PASS" starttime="20210322 02:39:24.350" endtime="20210322 02:39:24.351"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar PSP</arg>
</arguments>
<msg timestamp="20210322 02:39:24.351" level="INFO">Validar PSP</msg>
<status status="PASS" starttime="20210322 02:39:24.351" endtime="20210322 02:39:24.351"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["psp"]["code"]}</arg>
<arg>19468242</arg>
</arguments>
<status status="PASS" starttime="20210322 02:39:24.351" endtime="20210322 02:39:24.352"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["psp"]["name"]}</arg>
<arg>Zoop Tecnologia e Meios de Pagamento S.A.</arg>
</arguments>
<status status="PASS" starttime="20210322 02:39:24.352" endtime="20210322 02:39:24.352"></status>
</kw>
<status status="PASS" starttime="20210322 02:39:24.337" endtime="20210322 02:39:24.352"></status>
</kw>
<doc>Fluxo Básico</doc>
<tags>
<tag>regression_test</tag>
<tag>smoke_test</tag>
</tags>
<status status="PASS" starttime="20210322 02:39:18.846" endtime="20210322 02:39:24.352" critical="yes"></status>
</test>
<test id="s1-s1-s1-t5" name="Cenário: Buscar chave de endereçamento do tipo CNPJ">
<kw name="criar holder business ativo" library="accreditation_create_holder_active">
<kw name="conectar accreditation" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accreditation</arg>
<arg>url=${accreditation_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 02:39:24.354" level="INFO">Creating Session using : alias=accreditation, url=https://banking-accreditation-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 02:39:24.354" endtime="20210322 02:39:24.354"></status>
</kw>
<status status="PASS" starttime="20210322 02:39:24.354" endtime="20210322 02:39:24.354"></status>
</kw>
<kw name="Cnpj" library="FakerLibrary">
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 02:39:24.354" level="INFO">${national_registration} = 53.780.914/0001-89</msg>
<status status="PASS" starttime="20210322 02:39:24.354" endtime="20210322 02:39:24.354"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${national_registration}</arg>
<arg>.</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 02:39:24.355" level="INFO">${national_registration} = 53780914/0001-89</msg>
<status status="PASS" starttime="20210322 02:39:24.355" endtime="20210322 02:39:24.355"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${national_registration}</arg>
<arg>-</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 02:39:24.355" level="INFO">${national_registration} = 53780914/000189</msg>
<status status="PASS" starttime="20210322 02:39:24.355" endtime="20210322 02:39:24.355"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${national_registration}</arg>
<arg>/</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 02:39:24.356" level="INFO">${national_registration} = 53780914000189</msg>
<status status="PASS" starttime="20210322 02:39:24.355" endtime="20210322 02:39:24.356"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${national_registration}</arg>
</arguments>
<msg timestamp="20210322 02:39:24.356" level="INFO">${national_registration} = 53780914000189</msg>
<status status="PASS" starttime="20210322 02:39:24.356" endtime="20210322 02:39:24.356"></status>
</kw>
<kw name="Rg" library="FakerLibrary">
<doc>Brazilian RG, return plain numbers.
Check:  https://www.ngmatematica.com/2014/02/como-determinar-o-digito-verificador-do.html</doc>
<assign>
<var>${identity_card}</var>
</assign>
<msg timestamp="20210322 02:39:24.356" level="INFO">${identity_card} = 067185320</msg>
<status status="PASS" starttime="20210322 02:39:24.356" endtime="20210322 02:39:24.357"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${identity_card}</arg>
</arguments>
<msg timestamp="20210322 02:39:24.357" level="INFO">${identity_card} = 067185320</msg>
<status status="PASS" starttime="20210322 02:39:24.357" endtime="20210322 02:39:24.357"></status>
</kw>
<kw name="criar holder business" library="accreditation_post_holder_business">
<arguments>
<arg>holder_type=business</arg>
<arg>holder_name=${holder_name}</arg>
<arg>email_business=${email_business}</arg>
<arg>national_registration=${national_registration}</arg>
<arg>revenue_business=${revenue_business}</arg>
<arg>cnae=${cnae}</arg>
<arg>legal_name=${legal_name}</arg>
<arg>establishment_format=mei</arg>
<arg>establishment_date=${establishment_date}</arg>
</arguments>
<kw name="conectar accreditation" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accreditation</arg>
<arg>url=${accreditation_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 02:39:24.359" level="INFO">Creating Session using : alias=accreditation, url=https://banking-accreditation-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 02:39:24.359" endtime="20210322 02:39:24.359"></status>
</kw>
<status status="PASS" starttime="20210322 02:39:24.359" endtime="20210322 02:39:24.359"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_type}</arg>
</arguments>
<msg timestamp="20210322 02:39:24.359" level="INFO">${holder_type} = business</msg>
<status status="PASS" starttime="20210322 02:39:24.359" endtime="20210322 02:39:24.359"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_name}</arg>
</arguments>
<msg timestamp="20210322 02:39:24.359" level="INFO">${holder_name} = Holder de teste</msg>
<status status="PASS" starttime="20210322 02:39:24.359" endtime="20210322 02:39:24.359"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${legal_name}</arg>
</arguments>
<msg timestamp="20210322 02:39:24.359" level="INFO">${legal_name} = Nome Legal da Empresa</msg>
<status status="PASS" starttime="20210322 02:39:24.359" endtime="20210322 02:39:24.359"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:39:24.360" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 02:39:24.360" endtime="20210322 02:39:24.360"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "${holder_type}",</arg>
<arg>"name": "${holder_name}",</arg>
<arg>"email": "${email_business}",</arg>
<arg>"national_registration": "${national_registration}",</arg>
<arg>"revenue": ${revenue_business},</arg>
<arg>"cnae": "${cnae}",</arg>
<arg>"legal_name": "${legal_name}",</arg>
<arg>"establishment": {</arg>
<arg>"format":"${establishment_format}",</arg>
<arg>"date":"${establishment_date}"</arg>
<arg>}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 02:39:24.360" level="INFO">${body} = { "type": "business", "name": "Holder de teste", "email": "contato@teste.com.br", "national_registration": "53780914000189", "revenue": 1005500.00, "cnae": "0111301", "legal_name": "Nome Legal da Empr...</msg>
<status status="PASS" starttime="20210322 02:39:24.360" endtime="20210322 02:39:24.360"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:39:24.361" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "business", "name": "Holder de teste", "email": "contato@teste.com.br", "national_registration": "53780914000189", "revenue": 1005500.00, "cnae": "0111301", "legal_name": "Nome Legal da Empresa", "establishment": { "format":"mei", "date":"2012-04-25" } } 
json=None</msg>
<msg timestamp="20210322 02:39:25.096" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:39:24.361" endtime="20210322 02:39:25.097"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:39:25.099" level="INFO">{'id': '0dde765585be4d6c9e7df8b7f3625682', 'name': 'Holder de teste', 'revenue': 1005500.0, 'email': 'contato@teste.com.br', 'status': 'waiting_info_and_documents', 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'marketplace_name': 'Marketplace de Teste', 'created_at': '2021-03-22T02:39:25.904731', 'updated_at': '2021-03-22T02:39:25.904733', 'type': 'business', 'national_registration': '53780914000189', 'legal_name': 'Nome Legal da Empresa', 'establishment': {'format': 'mei', 'date': '2012-04-25'}, 'cnae': '0111301', '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/0dde765585be4d6c9e7df8b7f3625682', 'type': 'GET'}, 'phones': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/0dde765585be4d6c9e7df8b7f3625682/phones', 'type': 'GET'}, 'addresses': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/0dde765585be4d6c9e7df8b7f3625682/addresses', 'type': 'GET'}, 'documents': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/0dde765585be4d6c9e7df8b7f3625682/documents', 'type': 'GET'}, 'partners': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/0dde765585be4d6c9e7df8b7f3625682/partners', 'type': 'GET'}, 'associates': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/0dde765585be4d6c9e7df8b7f3625682/associates', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 02:39:25.097" endtime="20210322 02:39:25.100"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:39:25.102" level="INFO">018afb379d87e2e9</msg>
<status status="PASS" starttime="20210322 02:39:25.101" endtime="20210322 02:39:25.102"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${body}</arg>
</arguments>
<msg timestamp="20210322 02:39:25.104" level="INFO">{ "type": "business", "name": "Holder de teste", "email": "contato@teste.com.br", "national_registration": "53780914000189", "revenue": 1005500.00, "cnae": "0111301", "legal_name": "Nome Legal da Empresa", "establishment": { "format":"mei", "date":"2012-04-25" } }</msg>
<status status="PASS" starttime="20210322 02:39:25.103" endtime="20210322 02:39:25.104"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:39:25.106" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:39:25.105" endtime="20210322 02:39:25.106"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${holder_external_key}</var>
</assign>
<msg timestamp="20210322 02:39:25.109" level="INFO">${holder_external_key} = 0dde765585be4d6c9e7df8b7f3625682</msg>
<status status="PASS" starttime="20210322 02:39:25.107" endtime="20210322 02:39:25.109"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_external_key}</arg>
</arguments>
<msg timestamp="20210322 02:39:25.111" level="INFO">${holder_external_key} = 0dde765585be4d6c9e7df8b7f3625682</msg>
<status status="PASS" starttime="20210322 02:39:25.110" endtime="20210322 02:39:25.111"></status>
</kw>
<status status="PASS" starttime="20210322 02:39:24.357" endtime="20210322 02:39:25.111"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 02:39:25.112" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:39:25.112" endtime="20210322 02:39:25.113"></status>
</kw>
<kw name="criar holder phone" library="accreditation_post_holder_phone">
<arguments>
<arg>21</arg>
<arg>51</arg>
<arg>996221236</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:39:25.115" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 02:39:25.114" endtime="20210322 02:39:25.115"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"area_code": "${phone_area_code}",</arg>
<arg>"country_code": "${phone_country_code}",</arg>
<arg>"number": "${phone_number}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 02:39:25.117" level="INFO">${body} = { "area_code": "21", "country_code": "51", "number": "996221236" }</msg>
<status status="PASS" starttime="20210322 02:39:25.115" endtime="20210322 02:39:25.117"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/phones</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:39:25.118" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/0dde765585be4d6c9e7df8b7f3625682/phones, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "area_code": "21", "country_code": "51", "number": "996221236" } 
json=None</msg>
<msg timestamp="20210322 02:39:25.343" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:39:25.117" endtime="20210322 02:39:25.343"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:39:25.345" level="INFO">{'id': '3d219b184aa34dcebd6a20d71b0deb4d', 'area_code': '21', 'country_code': '51', 'number': '996221236', 'main': True, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/0dde765585be4d6c9e7df8b7f3625682/phones/3d219b184aa34dcebd6a20d71b0deb4d', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/0dde765585be4d6c9e7df8b7f3625682', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 02:39:25.344" endtime="20210322 02:39:25.345"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:39:25.347" level="INFO">1de804a17a7cf56b</msg>
<status status="PASS" starttime="20210322 02:39:25.345" endtime="20210322 02:39:25.347"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:39:25.349" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:39:25.348" endtime="20210322 02:39:25.349"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${phone_external_key}</var>
</assign>
<msg timestamp="20210322 02:39:25.350" level="INFO">${phone_external_key} = 3d219b184aa34dcebd6a20d71b0deb4d</msg>
<status status="PASS" starttime="20210322 02:39:25.349" endtime="20210322 02:39:25.351"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${phone_external_key}</arg>
</arguments>
<msg timestamp="20210322 02:39:25.352" level="INFO">${phone_external_key} = 3d219b184aa34dcebd6a20d71b0deb4d</msg>
<status status="PASS" starttime="20210322 02:39:25.351" endtime="20210322 02:39:25.352"></status>
</kw>
<status status="PASS" starttime="20210322 02:39:25.113" endtime="20210322 02:39:25.352"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 02:39:25.353" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:39:25.353" endtime="20210322 02:39:25.353"></status>
</kw>
<kw name="criar holder address" library="accreditation_post_holder_address">
<arguments>
<arg>Rio de Janeiro</arg>
<arg>Rio de Janeiro</arg>
<arg>Brasil</arg>
<arg>Bairro de Testes</arg>
<arg>Rua de Testes</arg>
<arg>90</arg>
<arg>apto 200</arg>
<arg>21550987</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:39:25.356" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 02:39:25.355" endtime="20210322 02:39:25.356"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"city": "${city}",</arg>
<arg>"state": "${state}",</arg>
<arg>"country": "${country}",</arg>
<arg>"neighborhood": "${neighborhood}",</arg>
<arg>"street": "${street}",</arg>
<arg>"number": "${number}",</arg>
<arg>"complement": "${complement}",</arg>
<arg>"postal_code": "${postal_code}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 02:39:25.357" level="INFO">${body} = { "city": "Rio de Janeiro", "state": "Rio de Janeiro", "country": "Brasil", "neighborhood": "Bairro de Testes", "street": "Rua de Testes", "number": "90", "complement": "apto 200", "postal_code": "215...</msg>
<status status="PASS" starttime="20210322 02:39:25.356" endtime="20210322 02:39:25.357"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/addresses</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:39:25.359" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/0dde765585be4d6c9e7df8b7f3625682/addresses, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "city": "Rio de Janeiro", "state": "Rio de Janeiro", "country": "Brasil", "neighborhood": "Bairro de Testes", "street": "Rua de Testes", "number": "90", "complement": "apto 200", "postal_code": "21550987" } 
json=None</msg>
<msg timestamp="20210322 02:39:25.578" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:39:25.358" endtime="20210322 02:39:25.578"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:39:25.580" level="INFO">{'id': '7efa376ebdc947f1bef570a23df4f6f5', 'street': 'Rua de Testes', 'number': '90', 'city': 'Rio de Janeiro', 'complement': 'apto 200', 'state': 'Rio de Janeiro', 'neighborhood': 'Bairro de Testes', 'postal_code': '21550987', 'country': 'Brasil', 'main': True, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/0dde765585be4d6c9e7df8b7f3625682/addresses/7efa376ebdc947f1bef570a23df4f6f5', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/0dde765585be4d6c9e7df8b7f3625682', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 02:39:25.579" endtime="20210322 02:39:25.580"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:39:25.582" level="INFO">2e6381e7384ec214</msg>
<status status="PASS" starttime="20210322 02:39:25.581" endtime="20210322 02:39:25.582"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:39:25.584" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:39:25.583" endtime="20210322 02:39:25.584"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${address_external_key}</var>
</assign>
<msg timestamp="20210322 02:39:25.586" level="INFO">${address_external_key} = 7efa376ebdc947f1bef570a23df4f6f5</msg>
<status status="PASS" starttime="20210322 02:39:25.585" endtime="20210322 02:39:25.587"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${address_external_key}</arg>
</arguments>
<msg timestamp="20210322 02:39:25.588" level="INFO">${address_external_key} = 7efa376ebdc947f1bef570a23df4f6f5</msg>
<status status="PASS" starttime="20210322 02:39:25.587" endtime="20210322 02:39:25.589"></status>
</kw>
<status status="PASS" starttime="20210322 02:39:25.354" endtime="20210322 02:39:25.589"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 02:39:25.590" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:39:25.590" endtime="20210322 02:39:25.591"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>CCMEI</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:39:25.593" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 02:39:25.592" endtime="20210322 02:39:25.593"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 02:39:25.594" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 02:39:25.596" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 02:39:25.593" endtime="20210322 02:39:25.596"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:39:25.598" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/0dde765585be4d6c9e7df8b7f3625682/documents?type=CCMEI, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 02:39:25.898" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:39:25.597" endtime="20210322 02:39:25.898"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:39:25.901" level="INFO">{'id': '76278e2d07234474a557979b8ca017a0', 'document_type': 'ccmei', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/0dde765585be4d6c9e7df8b7f3625682/documents/76278e2d07234474a557979b8ca017a0', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/0dde765585be4d6c9e7df8b7f3625682', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/0dde765585be4d6c9e7df8b7f3625682/documents/76278e2d07234474a557979b8ca017a0/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 02:39:25.899" endtime="20210322 02:39:25.901"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:39:25.903" level="INFO">d8342112e3fa2e42</msg>
<status status="PASS" starttime="20210322 02:39:25.902" endtime="20210322 02:39:25.904"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:39:25.905" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:39:25.904" endtime="20210322 02:39:25.905"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 02:39:25.907" level="INFO">${document_external_key} = 76278e2d07234474a557979b8ca017a0</msg>
<status status="PASS" starttime="20210322 02:39:25.906" endtime="20210322 02:39:25.907"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 02:39:25.909" level="INFO">${document_external_key} = 76278e2d07234474a557979b8ca017a0</msg>
<status status="PASS" starttime="20210322 02:39:25.908" endtime="20210322 02:39:25.909"></status>
</kw>
<status status="PASS" starttime="20210322 02:39:25.592" endtime="20210322 02:39:25.909"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 02:39:25.910" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:39:25.909" endtime="20210322 02:39:25.910"></status>
</kw>
<kw name="Cpf" library="FakerLibrary">
<assign>
<var>${partner_individual_national_registration}</var>
</assign>
<msg timestamp="20210322 02:39:25.911" level="INFO">${partner_individual_national_registration} = 908.154.372-50</msg>
<status status="PASS" starttime="20210322 02:39:25.911" endtime="20210322 02:39:25.911"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${partner_individual_national_registration}</arg>
<arg>.</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${partner_individual_national_registration}</var>
</assign>
<msg timestamp="20210322 02:39:25.912" level="INFO">${partner_individual_national_registration} = 908154372-50</msg>
<status status="PASS" starttime="20210322 02:39:25.911" endtime="20210322 02:39:25.912"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${partner_individual_national_registration}</arg>
<arg>-</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${partner_individual_national_registration}</var>
</assign>
<msg timestamp="20210322 02:39:25.913" level="INFO">${partner_individual_national_registration} = 90815437250</msg>
<status status="PASS" starttime="20210322 02:39:25.912" endtime="20210322 02:39:25.913"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${partner_individual_national_registration}</arg>
</arguments>
<msg timestamp="20210322 02:39:25.914" level="INFO">${partner_individual_national_registration} = 90815437250</msg>
<status status="PASS" starttime="20210322 02:39:25.914" endtime="20210322 02:39:25.914"></status>
</kw>
<kw name="Rg" library="FakerLibrary">
<doc>Brazilian RG, return plain numbers.
Check:  https://www.ngmatematica.com/2014/02/como-determinar-o-digito-verificador-do.html</doc>
<assign>
<var>${partner_individual_identity_card}</var>
</assign>
<msg timestamp="20210322 02:39:25.915" level="INFO">${partner_individual_identity_card} = 415263074</msg>
<status status="PASS" starttime="20210322 02:39:25.915" endtime="20210322 02:39:25.915"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${partner_individual_identity_card}</arg>
</arguments>
<msg timestamp="20210322 02:39:25.916" level="INFO">${partner_individual_identity_card} = 415263074</msg>
<status status="PASS" starttime="20210322 02:39:25.915" endtime="20210322 02:39:25.916"></status>
</kw>
<kw name="criar partner individual" library="accreditation_post_partner_individual">
<arguments>
<arg>partner_individual_type=individual</arg>
<arg>partner_individual_name=${partner_individual_name}</arg>
<arg>partner_individual_email=${partner_individual_email}</arg>
<arg>partner_individual_national_registration=${partner_individual_national_registration}</arg>
<arg>partner_individual_revenue=${partner_individual_revenue}</arg>
<arg>partner_individual_birthday=${partner_individual_birthday}</arg>
<arg>partner_individual_mothers_name=${partner_individual_mothers_name}</arg>
<arg>partner_individual_identity_card=${partner_individual_identity_card}</arg>
<arg>partner_individual_pep=false</arg>
<arg>partner_individual_percentage=100</arg>
<arg>partner_individual_adm=true</arg>
<arg>partner_individual_cbo=${partner_individual_cbo}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:39:25.919" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 02:39:25.918" endtime="20210322 02:39:25.919"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "${partner_individual_type}",</arg>
<arg>"name": "${partner_individual_name}",</arg>
<arg>"email": "${partner_individual_email}",</arg>
<arg>"national_registration": "${partner_individual_national_registration}",</arg>
<arg>"revenue": ${partner_individual_revenue},</arg>
<arg>"birthday": "${partner_individual_birthday}",</arg>
<arg>"mothers_name": "${partner_individual_mothers_name}",</arg>
<arg>"identity_card": "${partner_individual_identity_card}",</arg>
<arg>"pep": false,</arg>
<arg>"percentage": ${partner_individual_percentage},</arg>
<arg>"adm": ${partner_individual_adm},</arg>
<arg>"cbo": ${partner_individual_cbo}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 02:39:25.921" level="INFO">${body} = { "type": "individual", "name": "Individual Partner de teste", "email": "teste@teste.com.br", "national_registration": "90815437250", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe...</msg>
<status status="PASS" starttime="20210322 02:39:25.919" endtime="20210322 02:39:25.921"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/partners</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:39:25.922" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/0dde765585be4d6c9e7df8b7f3625682/partners, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "individual", "name": "Individual Partner de teste", "email": "teste@teste.com.br", "national_registration": "90815437250", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Individual Partner", "identity_card": "415263074", "pep": false, "percentage": 100, "adm": true, "cbo": 821450 } 
json=None</msg>
<msg timestamp="20210322 02:39:26.157" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:39:25.921" endtime="20210322 02:39:26.157"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:39:26.159" level="INFO">{'id': '9e49e99228ed4bf4a7388de758012e27', 'name': 'Individual Partner de teste', 'revenue': 5500.0, 'email': 'teste@teste.com.br', 'created_at': '2021-03-22T02:39:26.945023', 'updated_at': '2021-03-22T02:39:26.945024', 'main': True, 'adm': True, 'percentage': 100.0, 'type': 'individual', 'national_registration': '90815437250', 'birthday': '1988-04-23', 'mothers_name': 'Mãe do Individual Partner', 'identity_card': '415263074', 'pep': False, 'cbo': '821450', '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/0dde765585be4d6c9e7df8b7f3625682/partners/9e49e99228ed4bf4a7388de758012e27', 'type': 'GET'}, 'phones': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/0dde765585be4d6c9e7df8b7f3625682/partners/9e49e99228ed4bf4a7388de758012e27/phones', 'type': 'GET'}, 'addresses': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/0dde765585be4d6c9e7df8b7f3625682/partners/9e49e99228ed4bf4a7388de758012e27/addresses', 'type': 'GET'}, 'documents': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/0dde765585be4d6c9e7df8b7f3625682/partners/9e49e99228ed4bf4a7388de758012e27/documents', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/0dde765585be4d6c9e7df8b7f3625682', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 02:39:26.157" endtime="20210322 02:39:26.159"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:39:26.160" level="INFO">0619a66b48b9855c</msg>
<status status="PASS" starttime="20210322 02:39:26.159" endtime="20210322 02:39:26.160"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:39:26.161" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:39:26.160" endtime="20210322 02:39:26.161"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${partner_external_key}</var>
</assign>
<msg timestamp="20210322 02:39:26.163" level="INFO">${partner_external_key} = 9e49e99228ed4bf4a7388de758012e27</msg>
<status status="PASS" starttime="20210322 02:39:26.162" endtime="20210322 02:39:26.163"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${partner_external_key}</arg>
</arguments>
<msg timestamp="20210322 02:39:26.164" level="INFO">${partner_external_key} = 9e49e99228ed4bf4a7388de758012e27</msg>
<status status="PASS" starttime="20210322 02:39:26.163" endtime="20210322 02:39:26.164"></status>
</kw>
<status status="PASS" starttime="20210322 02:39:25.916" endtime="20210322 02:39:26.164"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 02:39:26.165" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:39:26.164" endtime="20210322 02:39:26.165"></status>
</kw>
<kw name="criar partner phone" library="accreditation_post_partner_phone">
<arguments>
<arg>21</arg>
<arg>51</arg>
<arg>996554785</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:39:26.168" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 02:39:26.166" endtime="20210322 02:39:26.168"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"area_code": "${phone_area_code}",</arg>
<arg>"country_code": "${phone_country_code}",</arg>
<arg>"number": "${phone_number}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 02:39:26.168" level="INFO">${body} = { "area_code": "21", "country_code": "51", "number": "996554785" }</msg>
<status status="PASS" starttime="20210322 02:39:26.168" endtime="20210322 02:39:26.168"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/partners/${partner_external_key}/phones/</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:39:26.170" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/0dde765585be4d6c9e7df8b7f3625682/partners/9e49e99228ed4bf4a7388de758012e27/phones/, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "area_code": "21", "country_code": "51", "number": "996554785" } 
json=None</msg>
<msg timestamp="20210322 02:39:26.393" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:39:26.169" endtime="20210322 02:39:26.393"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:39:26.395" level="INFO">{'id': 'def5603cd3ae444982c09d7f0d65c2e7', 'area_code': '21', 'country_code': '51', 'number': '996554785', 'main': True, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/0dde765585be4d6c9e7df8b7f3625682/partners/9e49e99228ed4bf4a7388de758012e27/phones/def5603cd3ae444982c09d7f0d65c2e7', 'type': 'GET'}, 'partner': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/0dde765585be4d6c9e7df8b7f3625682/partners/9e49e99228ed4bf4a7388de758012e27', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/0dde765585be4d6c9e7df8b7f3625682', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 02:39:26.394" endtime="20210322 02:39:26.395"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:39:26.397" level="INFO">187154bc71fe3c48</msg>
<status status="PASS" starttime="20210322 02:39:26.396" endtime="20210322 02:39:26.397"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:39:26.399" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:39:26.398" endtime="20210322 02:39:26.400"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${holder_external_key}</var>
</assign>
<msg timestamp="20210322 02:39:26.403" level="INFO">${holder_external_key} = def5603cd3ae444982c09d7f0d65c2e7</msg>
<status status="PASS" starttime="20210322 02:39:26.400" endtime="20210322 02:39:26.403"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${phone_external_key}</arg>
</arguments>
<msg timestamp="20210322 02:39:26.405" level="INFO">${phone_external_key} = 3d219b184aa34dcebd6a20d71b0deb4d</msg>
<status status="PASS" starttime="20210322 02:39:26.404" endtime="20210322 02:39:26.405"></status>
</kw>
<status status="PASS" starttime="20210322 02:39:26.165" endtime="20210322 02:39:26.406"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 02:39:26.407" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:39:26.407" endtime="20210322 02:39:26.408"></status>
</kw>
<kw name="criar partner address" library="accreditation_post_partner_address">
<arguments>
<arg>Rio de Janeiro</arg>
<arg>Rio de Janeiro</arg>
<arg>Brasil</arg>
<arg>Bairro de Testes</arg>
<arg>Rua de Testes</arg>
<arg>61</arg>
<arg>apto 201</arg>
<arg>21550478</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:39:26.410" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 02:39:26.410" endtime="20210322 02:39:26.410"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"city": "${city}",</arg>
<arg>"state": "${state}",</arg>
<arg>"country": "${country}",</arg>
<arg>"neighborhood": "${neighborhood}",</arg>
<arg>"street": "${street}",</arg>
<arg>"number": "${number}",</arg>
<arg>"complement": "${complement}",</arg>
<arg>"postal_code": "${postal_code}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 02:39:26.412" level="INFO">${body} = { "city": "Rio de Janeiro", "state": "Rio de Janeiro", "country": "Brasil", "neighborhood": "Bairro de Testes", "street": "Rua de Testes", "number": "61", "complement": "apto 201", "postal_code": "215...</msg>
<status status="PASS" starttime="20210322 02:39:26.411" endtime="20210322 02:39:26.412"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/partners/${partner_external_key}/addresses</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:39:26.414" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/0dde765585be4d6c9e7df8b7f3625682/partners/9e49e99228ed4bf4a7388de758012e27/addresses, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "city": "Rio de Janeiro", "state": "Rio de Janeiro", "country": "Brasil", "neighborhood": "Bairro de Testes", "street": "Rua de Testes", "number": "61", "complement": "apto 201", "postal_code": "21550478" } 
json=None</msg>
<msg timestamp="20210322 02:39:26.636" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:39:26.413" endtime="20210322 02:39:26.636"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:39:26.638" level="INFO">{'id': '865c8d6ec3584600893aa927bb8f4091', 'street': 'Rua de Testes', 'number': '61', 'city': 'Rio de Janeiro', 'complement': 'apto 201', 'state': 'Rio de Janeiro', 'neighborhood': 'Bairro de Testes', 'postal_code': '21550478', 'country': 'Brasil', 'main': True, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/0dde765585be4d6c9e7df8b7f3625682/partners/9e49e99228ed4bf4a7388de758012e27/addresses/865c8d6ec3584600893aa927bb8f4091', 'type': 'GET'}, 'partner': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/0dde765585be4d6c9e7df8b7f3625682/partners/9e49e99228ed4bf4a7388de758012e27', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/0dde765585be4d6c9e7df8b7f3625682', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 02:39:26.637" endtime="20210322 02:39:26.639"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:39:26.640" level="INFO">7dcff3bffd216b17</msg>
<status status="PASS" starttime="20210322 02:39:26.639" endtime="20210322 02:39:26.641"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:39:26.643" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:39:26.642" endtime="20210322 02:39:26.643"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${address_external_key}</var>
</assign>
<msg timestamp="20210322 02:39:26.646" level="INFO">${address_external_key} = 865c8d6ec3584600893aa927bb8f4091</msg>
<status status="PASS" starttime="20210322 02:39:26.644" endtime="20210322 02:39:26.646"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${address_external_key}</arg>
</arguments>
<msg timestamp="20210322 02:39:26.648" level="INFO">${address_external_key} = 865c8d6ec3584600893aa927bb8f4091</msg>
<status status="PASS" starttime="20210322 02:39:26.647" endtime="20210322 02:39:26.648"></status>
</kw>
<status status="PASS" starttime="20210322 02:39:26.409" endtime="20210322 02:39:26.648"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 02:39:26.650" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:39:26.649" endtime="20210322 02:39:26.650"></status>
</kw>
<kw name="criar partner document" library="accreditation_post_partner_document">
<arguments>
<arg>SELFIE</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:39:26.653" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 02:39:26.652" endtime="20210322 02:39:26.653"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 02:39:26.654" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 02:39:26.657" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 02:39:26.653" endtime="20210322 02:39:26.657"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/partners/${partner_externaL_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:39:26.659" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/0dde765585be4d6c9e7df8b7f3625682/partners/9e49e99228ed4bf4a7388de758012e27/documents?type=SELFIE, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 02:39:26.924" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:39:26.657" endtime="20210322 02:39:26.924"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:39:26.924" level="INFO">{'id': 'dd8d2ee7f93549128bc95b7dbe733a07', 'document_type': 'selfie', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/0dde765585be4d6c9e7df8b7f3625682/partners/9e49e99228ed4bf4a7388de758012e27/documents/dd8d2ee7f93549128bc95b7dbe733a07', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/0dde765585be4d6c9e7df8b7f3625682', 'type': 'GET'}, 'partner': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/0dde765585be4d6c9e7df8b7f3625682/partners/9e49e99228ed4bf4a7388de758012e27', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/0dde765585be4d6c9e7df8b7f3625682/partners/9e49e99228ed4bf4a7388de758012e27/documents/dd8d2ee7f93549128bc95b7dbe733a07/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 02:39:26.924" endtime="20210322 02:39:26.924"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:39:26.925" level="INFO">8ca6f3972159cadc</msg>
<status status="PASS" starttime="20210322 02:39:26.925" endtime="20210322 02:39:26.925"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:39:26.925" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:39:26.925" endtime="20210322 02:39:26.925"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 02:39:26.926" level="INFO">${document_external_key} = dd8d2ee7f93549128bc95b7dbe733a07</msg>
<status status="PASS" starttime="20210322 02:39:26.926" endtime="20210322 02:39:26.926"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 02:39:26.926" level="INFO">${document_external_key} = dd8d2ee7f93549128bc95b7dbe733a07</msg>
<status status="PASS" starttime="20210322 02:39:26.926" endtime="20210322 02:39:26.927"></status>
</kw>
<status status="PASS" starttime="20210322 02:39:26.650" endtime="20210322 02:39:26.927"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 02:39:26.927" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:39:26.927" endtime="20210322 02:39:26.927"></status>
</kw>
<kw name="criar partner document" library="accreditation_post_partner_document">
<arguments>
<arg>RG_FRENTE</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:39:26.928" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 02:39:26.928" endtime="20210322 02:39:26.928"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 02:39:26.928" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 02:39:26.929" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 02:39:26.928" endtime="20210322 02:39:26.929"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/partners/${partner_externaL_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:39:26.930" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/0dde765585be4d6c9e7df8b7f3625682/partners/9e49e99228ed4bf4a7388de758012e27/documents?type=RG_FRENTE, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 02:39:27.239" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:39:26.929" endtime="20210322 02:39:27.239"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:39:27.241" level="INFO">{'id': 'ed3b3b8871e34c3ea71718de345ca2cd', 'document_type': 'rg_frente', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/0dde765585be4d6c9e7df8b7f3625682/partners/9e49e99228ed4bf4a7388de758012e27/documents/ed3b3b8871e34c3ea71718de345ca2cd', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/0dde765585be4d6c9e7df8b7f3625682', 'type': 'GET'}, 'partner': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/0dde765585be4d6c9e7df8b7f3625682/partners/9e49e99228ed4bf4a7388de758012e27', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/0dde765585be4d6c9e7df8b7f3625682/partners/9e49e99228ed4bf4a7388de758012e27/documents/ed3b3b8871e34c3ea71718de345ca2cd/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 02:39:27.240" endtime="20210322 02:39:27.241"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:39:27.243" level="INFO">510b2ef858e51454</msg>
<status status="PASS" starttime="20210322 02:39:27.242" endtime="20210322 02:39:27.243"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:39:27.245" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:39:27.244" endtime="20210322 02:39:27.245"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 02:39:27.247" level="INFO">${document_external_key} = ed3b3b8871e34c3ea71718de345ca2cd</msg>
<status status="PASS" starttime="20210322 02:39:27.245" endtime="20210322 02:39:27.247"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 02:39:27.249" level="INFO">${document_external_key} = ed3b3b8871e34c3ea71718de345ca2cd</msg>
<status status="PASS" starttime="20210322 02:39:27.248" endtime="20210322 02:39:27.249"></status>
</kw>
<status status="PASS" starttime="20210322 02:39:26.927" endtime="20210322 02:39:27.249"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 02:39:27.250" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:39:27.249" endtime="20210322 02:39:27.250"></status>
</kw>
<kw name="criar partner document" library="accreditation_post_partner_document">
<arguments>
<arg>RG_VERSO</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:39:27.252" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 02:39:27.252" endtime="20210322 02:39:27.252"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 02:39:27.253" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 02:39:27.255" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 02:39:27.253" endtime="20210322 02:39:27.255"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/partners/${partner_externaL_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:39:27.257" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/0dde765585be4d6c9e7df8b7f3625682/partners/9e49e99228ed4bf4a7388de758012e27/documents?type=RG_VERSO, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 02:39:27.555" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:39:27.256" endtime="20210322 02:39:27.555"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:39:27.557" level="INFO">{'id': '4c767356e24c4dbc817aa2b5795a7bf6', 'document_type': 'rg_verso', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/0dde765585be4d6c9e7df8b7f3625682/partners/9e49e99228ed4bf4a7388de758012e27/documents/4c767356e24c4dbc817aa2b5795a7bf6', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/0dde765585be4d6c9e7df8b7f3625682', 'type': 'GET'}, 'partner': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/0dde765585be4d6c9e7df8b7f3625682/partners/9e49e99228ed4bf4a7388de758012e27', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/0dde765585be4d6c9e7df8b7f3625682/partners/9e49e99228ed4bf4a7388de758012e27/documents/4c767356e24c4dbc817aa2b5795a7bf6/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 02:39:27.556" endtime="20210322 02:39:27.557"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:39:27.559" level="INFO">23ff97bd8280b7e1</msg>
<status status="PASS" starttime="20210322 02:39:27.558" endtime="20210322 02:39:27.560"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:39:27.562" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:39:27.561" endtime="20210322 02:39:27.562"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 02:39:27.564" level="INFO">${document_external_key} = 4c767356e24c4dbc817aa2b5795a7bf6</msg>
<status status="PASS" starttime="20210322 02:39:27.563" endtime="20210322 02:39:27.565"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 02:39:27.567" level="INFO">${document_external_key} = 4c767356e24c4dbc817aa2b5795a7bf6</msg>
<status status="PASS" starttime="20210322 02:39:27.566" endtime="20210322 02:39:27.567"></status>
</kw>
<status status="PASS" starttime="20210322 02:39:27.251" endtime="20210322 02:39:27.567"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 02:39:27.569" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:39:27.568" endtime="20210322 02:39:27.569"></status>
</kw>
<kw name="solicitar aprovação do holder" library="accreditation_request_approval">
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:39:27.572" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 02:39:27.571" endtime="20210322 02:39:27.572"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/approval</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:39:27.574" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/0dde765585be4d6c9e7df8b7f3625682/approval, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data=None 
json=None</msg>
<msg timestamp="20210322 02:39:27.857" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:39:27.573" endtime="20210322 02:39:27.857"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:39:27.859" level="INFO">{'message': 'Approval request accepted successfully. Processing analysis'}</msg>
<status status="PASS" starttime="20210322 02:39:27.858" endtime="20210322 02:39:27.859"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:39:27.861" level="INFO">49297e5996fa9922</msg>
<status status="PASS" starttime="20210322 02:39:27.860" endtime="20210322 02:39:27.861"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:39:27.863" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:39:27.862" endtime="20210322 02:39:27.864"></status>
</kw>
<status status="PASS" starttime="20210322 02:39:27.570" endtime="20210322 02:39:27.864"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 02:39:27.865" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:39:27.864" endtime="20210322 02:39:27.865"></status>
</kw>
<kw name="recebendo notificação de aprovação" library="accreditation_risk_notification">
<kw name="Uuid 4" library="FakerLibrary">
<doc>Generates a random UUID4 string.
:param cast_to: Specify what type the UUID should be cast to. Default is `str`
:type cast_to: callable</doc>
<assign>
<var>${assessment_id}</var>
</assign>
<msg timestamp="20210322 02:39:27.867" level="INFO">${assessment_id} = fbeafc7c-3598-4501-9390-3d649e7f8605</msg>
<status status="PASS" starttime="20210322 02:39:27.867" endtime="20210322 02:39:27.867"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>year</arg>
</arguments>
<assign>
<var>${year}</var>
</assign>
<msg timestamp="20210322 02:39:27.868" level="INFO">${year} = 2021</msg>
<status status="PASS" starttime="20210322 02:39:27.868" endtime="20210322 02:39:27.868"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>month</arg>
</arguments>
<assign>
<var>${month}</var>
</assign>
<msg timestamp="20210322 02:39:27.869" level="INFO">${month} = 03</msg>
<status status="PASS" starttime="20210322 02:39:27.869" endtime="20210322 02:39:27.870"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>day</arg>
</arguments>
<assign>
<var>${day}</var>
</assign>
<msg timestamp="20210322 02:39:27.870" level="INFO">${day} = 22</msg>
<status status="PASS" starttime="20210322 02:39:27.870" endtime="20210322 02:39:27.870"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:39:27.871" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 02:39:27.871" endtime="20210322 02:39:27.871"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "risk.assessment.result",</arg>
<arg>"resource": "business.holder",</arg>
<arg>"created_at": "${year}-${month}-${day} 15:28:56.747Z",</arg>
<arg>"marketplace_id": "${marketplace_external_key}",</arg>
<arg>"object": {</arg>
<arg>"result": "APPROVED",</arg>
<arg>"holder_id": "${holder_external_key}",</arg>
<arg>"applicant_id": "${application_external_key}",</arg>
<arg>"assessment_id": "${assessment_id}"</arg>
<arg>}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 02:39:27.873" level="INFO">${body} = { "type": "risk.assessment.result", "resource": "business.holder", "created_at": "2021-03-22 15:28:56.747Z", "marketplace_id": "f71a8951368a4cc085cf7875ff44e61c", "object": { "result": "APPROVED", "ho...</msg>
<status status="PASS" starttime="20210322 02:39:27.872" endtime="20210322 02:39:27.873"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/admin/internal_operation/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/registration/approval</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:39:27.874" level="INFO">POST Request using : uri=/admin/internal_operation/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/0dde765585be4d6c9e7df8b7f3625682/registration/approval, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "risk.assessment.result", "resource": "business.holder", "created_at": "2021-03-22 15:28:56.747Z", "marketplace_id": "f71a8951368a4cc085cf7875ff44e61c", "object": { "result": "APPROVED", "holder_id": "0dde765585be4d6c9e7df8b7f3625682", "applicant_id": "bcc25a6751c14b52af1340d40dba78c5", "assessment_id": "fbeafc7c-3598-4501-9390-3d649e7f8605" } } 
json=None</msg>
<msg timestamp="20210322 02:39:28.094" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:39:27.873" endtime="20210322 02:39:28.095"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:39:28.097" level="INFO">{'message': 'Holder approved successfully'}</msg>
<status status="PASS" starttime="20210322 02:39:28.095" endtime="20210322 02:39:28.097"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:39:28.099" level="INFO">83d7bfe16b028a10</msg>
<status status="PASS" starttime="20210322 02:39:28.098" endtime="20210322 02:39:28.099"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:39:28.101" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:39:28.100" endtime="20210322 02:39:28.101"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 02:39:28.103" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:39:28.102" endtime="20210322 02:39:28.103"></status>
</kw>
<status status="PASS" starttime="20210322 02:39:27.866" endtime="20210322 02:39:28.104"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 02:39:28.106" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:39:28.105" endtime="20210322 02:39:28.106"></status>
</kw>
<kw name="buscar account por holder" library="accounts_get_accounts_by_holder">
<kw name="conectar accounts" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accounts</arg>
<arg>url=${account_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 02:39:28.109" level="INFO">Creating Session using : alias=accounts, url=https://banking-accounts-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 02:39:28.108" endtime="20210322 02:39:28.110"></status>
</kw>
<status status="PASS" starttime="20210322 02:39:28.107" endtime="20210322 02:39:28.110"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accounts</arg>
<arg>/marketplaces/${marketplace_external_key}/holders/${holder_external_key}/accounts</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:39:28.111" level="INFO">GET Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/holders/0dde765585be4d6c9e7df8b7f3625682/accounts, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 02:39:28.755" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:39:28.110" endtime="20210322 02:39:28.755"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:39:28.755" level="INFO">{'items': [{'id': 'fee42bdfa22149cba1cc8487ab1090b7', 'holder': '0dde765585be4d6c9e7df8b7f3625682', 'balance': '0.00', 'currency': 'BRL', 'routing_number': '001', 'number': '5552034600', 'status': 'active', 'metadata': {}, 'created_at': '2021-03-22T05:39:28.90766', 'updated_at': '2021-03-22T05:39:28.90766', 'primary': True, 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'uri': '/v2/marketplaces/f71a8951368a4cc085cf7875ff44e61c/accounts/fee42bdfa22149cba1cc8487ab1090b7', 'resource': 'payment_account'}], 'has_more': False, 'limit': 100, 'total_pages': 1, 'page': 1, 'offset': 0, 'total': '1', 'query_count': '1'}</msg>
<status status="PASS" starttime="20210322 02:39:28.755" endtime="20210322 02:39:28.756"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:39:28.756" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:39:28.756" endtime="20210322 02:39:28.756"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["id"]}</arg>
</arguments>
<assign>
<var>${account_external_key}</var>
</assign>
<msg timestamp="20210322 02:39:28.758" level="INFO">${account_external_key} = fee42bdfa22149cba1cc8487ab1090b7</msg>
<status status="PASS" starttime="20210322 02:39:28.757" endtime="20210322 02:39:28.758"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_external_key}</arg>
</arguments>
<msg timestamp="20210322 02:39:28.758" level="INFO">${account_external_key} = fee42bdfa22149cba1cc8487ab1090b7</msg>
<status status="PASS" starttime="20210322 02:39:28.758" endtime="20210322 02:39:28.758"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["number"]}</arg>
</arguments>
<assign>
<var>${account_number}</var>
</assign>
<msg timestamp="20210322 02:39:28.759" level="INFO">${account_number} = 5552034600</msg>
<status status="PASS" starttime="20210322 02:39:28.759" endtime="20210322 02:39:28.759"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_number}</arg>
</arguments>
<msg timestamp="20210322 02:39:28.760" level="INFO">${account_number} = 5552034600</msg>
<status status="PASS" starttime="20210322 02:39:28.759" endtime="20210322 02:39:28.760"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["routing_number"]}</arg>
</arguments>
<assign>
<var>${account_routing_number}</var>
</assign>
<msg timestamp="20210322 02:39:28.761" level="INFO">${account_routing_number} = 001</msg>
<status status="PASS" starttime="20210322 02:39:28.760" endtime="20210322 02:39:28.761"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_routing_number}</arg>
</arguments>
<msg timestamp="20210322 02:39:28.761" level="INFO">${account_routing_number} = 001</msg>
<status status="PASS" starttime="20210322 02:39:28.761" endtime="20210322 02:39:28.761"></status>
</kw>
<status status="PASS" starttime="20210322 02:39:28.107" endtime="20210322 02:39:28.761"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 02:39:28.762" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:39:28.762" endtime="20210322 02:39:28.762"></status>
</kw>
<status status="PASS" starttime="20210322 02:39:24.354" endtime="20210322 02:39:28.762"></status>
</kw>
<kw name="criar chave pix" library="pix_dict_create_entry">
<arguments>
<arg>national_registration</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 02:39:28.764" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 02:39:28.763" endtime="20210322 02:39:28.764"></status>
</kw>
<status status="PASS" starttime="20210322 02:39:28.763" endtime="20210322 02:39:28.764"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${type}</arg>
</arguments>
<msg timestamp="20210322 02:39:28.765" level="INFO">${type} = national_registration</msg>
<status status="PASS" starttime="20210322 02:39:28.764" endtime="20210322 02:39:28.765"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210322 02:39:28.765" level="INFO">${value} = </msg>
<status status="PASS" starttime="20210322 02:39:28.765" endtime="20210322 02:39:28.765"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:39:28.766" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 02:39:28.765" endtime="20210322 02:39:28.766"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "${type}",</arg>
<arg>"value": "${value}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 02:39:28.766" level="INFO">${body} = { "type": "national_registration", "value": "" }</msg>
<status status="PASS" starttime="20210322 02:39:28.766" endtime="20210322 02:39:28.766"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:39:28.767" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/0dde765585be4d6c9e7df8b7f3625682/accounts/fee42bdfa22149cba1cc8487ab1090b7/entries, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "national_registration", "value": "" } 
json=None</msg>
<msg timestamp="20210322 02:39:30.328" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:39:28.767" endtime="20210322 02:39:30.329"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:39:30.331" level="INFO">{'id': '9c19877bb28342d6b8c552680dd0057c', 'status': 'active', 'created_at': '2021-03-22T02:39:30.265', 'updated_at': '2021-03-22T02:39:30.265', 'key': {'value': '53780914000189', 'type': 'national_registration'}, 'account': {'id': 'fee42bdfa22149cba1cc8487ab1090b7', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': '0dde765585be4d6c9e7df8b7f3625682', 'owner': {'name': 'Nome Legal da Empresa', 'national_registration': '53780914000189', 'type': 'business'}, 'routing_number': '001', 'number': '5552034600', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}, 'resource': 'pix.entry'}</msg>
<status status="PASS" starttime="20210322 02:39:30.330" endtime="20210322 02:39:30.332"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:39:30.335" level="INFO">2db9ad49cbb181ca</msg>
<status status="PASS" starttime="20210322 02:39:30.333" endtime="20210322 02:39:30.335"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 02:39:30.337" level="INFO">201</msg>
<status status="PASS" starttime="20210322 02:39:30.336" endtime="20210322 02:39:30.338"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:39:30.339" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:39:30.339" endtime="20210322 02:39:30.339"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${entry_external_key}</var>
</assign>
<msg timestamp="20210322 02:39:30.342" level="INFO">${entry_external_key} = 9c19877bb28342d6b8c552680dd0057c</msg>
<status status="PASS" starttime="20210322 02:39:30.340" endtime="20210322 02:39:30.342"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${entry_external_key}</arg>
</arguments>
<msg timestamp="20210322 02:39:30.343" level="INFO">${entry_external_key} = 9c19877bb28342d6b8c552680dd0057c</msg>
<status status="PASS" starttime="20210322 02:39:30.342" endtime="20210322 02:39:30.343"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["key"]["value"]}</arg>
</arguments>
<assign>
<var>${entry_key_value}</var>
</assign>
<msg timestamp="20210322 02:39:30.344" level="INFO">${entry_key_value} = 53780914000189</msg>
<status status="PASS" starttime="20210322 02:39:30.343" endtime="20210322 02:39:30.344"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${entry_key_value}</arg>
</arguments>
<msg timestamp="20210322 02:39:30.345" level="INFO">${entry_key_value} = 53780914000189</msg>
<status status="PASS" starttime="20210322 02:39:30.345" endtime="20210322 02:39:30.345"></status>
</kw>
<status status="PASS" starttime="20210322 02:39:28.762" endtime="20210322 02:39:30.345"></status>
</kw>
<kw name="buscar chave pix" library="pix_dict_get_entry">
<arguments>
<arg>${holder_external_key}</arg>
<arg>${account_external_key}</arg>
<arg>${entry_external_key}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 02:39:30.346" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 02:39:30.346" endtime="20210322 02:39:30.346"></status>
</kw>
<status status="PASS" starttime="20210322 02:39:30.345" endtime="20210322 02:39:30.346"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries/${entry_external_key}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:39:30.347" level="INFO">GET Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/0dde765585be4d6c9e7df8b7f3625682/accounts/fee42bdfa22149cba1cc8487ab1090b7/entries/9c19877bb28342d6b8c552680dd0057c, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 02:39:30.991" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:39:30.346" endtime="20210322 02:39:30.991"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:39:30.994" level="INFO">{'id': '9c19877bb28342d6b8c552680dd0057c', 'status': 'active', 'created_at': '2021-03-22T02:39:30.265', 'updated_at': '2021-03-22T02:39:30.265', 'key': {'value': '53780914000189', 'type': 'national_registration'}, 'account': {'id': 'fee42bdfa22149cba1cc8487ab1090b7', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': '0dde765585be4d6c9e7df8b7f3625682', 'owner': {'name': 'Nome Legal da Empresa', 'national_registration': '53780914000189', 'type': 'business'}, 'routing_number': '001', 'number': '5552034600', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}, 'resource': 'pix.entry'}</msg>
<status status="PASS" starttime="20210322 02:39:30.993" endtime="20210322 02:39:30.994"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:39:30.996" level="INFO">6380cda35ba10a38</msg>
<status status="PASS" starttime="20210322 02:39:30.996" endtime="20210322 02:39:30.996"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 02:39:30.998" level="INFO">200</msg>
<status status="PASS" starttime="20210322 02:39:30.997" endtime="20210322 02:39:30.998"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:39:30.999" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:39:30.999" endtime="20210322 02:39:31.000"></status>
</kw>
<status status="PASS" starttime="20210322 02:39:30.345" endtime="20210322 02:39:31.000"></status>
</kw>
<kw name="validar busca da chave pix" library="asserts">
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 02:39:31.002" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:39:31.001" endtime="20210322 02:39:31.002"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar status da chave</arg>
</arguments>
<msg timestamp="20210322 02:39:31.003" level="INFO">Validar status da chave</msg>
<status status="PASS" starttime="20210322 02:39:31.003" endtime="20210322 02:39:31.003"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${type}' == 'evp'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["status"]}</arg>
<arg>active</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'phone'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["status"]}</arg>
<arg>waiting_ownership_verification</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'email'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["status"]}</arg>
<arg>waiting_ownership_verification</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'national_registration'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["status"]}</arg>
<arg>active</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["status"]}</arg>
<arg>active</arg>
</arguments>
<status status="PASS" starttime="20210322 02:39:31.005" endtime="20210322 02:39:31.006"></status>
</kw>
<status status="PASS" starttime="20210322 02:39:31.004" endtime="20210322 02:39:31.006"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando Tipo da chave PIX</arg>
</arguments>
<msg timestamp="20210322 02:39:31.007" level="INFO">Validando Tipo da chave PIX</msg>
<status status="PASS" starttime="20210322 02:39:31.006" endtime="20210322 02:39:31.007"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${type}' == 'evp'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["type"]}</arg>
<arg>${type}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'phone'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["type"]}</arg>
<arg>${type}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'email'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["type"]}</arg>
<arg>${type}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'national_registration'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["type"]}</arg>
<arg>${type}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["key"]["type"]}</arg>
<arg>${type}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:39:31.010" endtime="20210322 02:39:31.010"></status>
</kw>
<status status="PASS" starttime="20210322 02:39:31.007" endtime="20210322 02:39:31.010"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando Valor da chave PIX</arg>
</arguments>
<msg timestamp="20210322 02:39:31.011" level="INFO">Validando Valor da chave PIX</msg>
<status status="PASS" starttime="20210322 02:39:31.011" endtime="20210322 02:39:31.011"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${type}' == 'evp'</arg>
<arg>Should Not Be Empty</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'phone'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${phone_pix}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'email'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${email_pix}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'national_registration'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${national_registration}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${national_registration}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:39:31.013" endtime="20210322 02:39:31.013"></status>
</kw>
<status status="PASS" starttime="20210322 02:39:31.011" endtime="20210322 02:39:31.013"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando dados da conta</arg>
</arguments>
<msg timestamp="20210322 02:39:31.014" level="INFO">Validando dados da conta</msg>
<status status="PASS" starttime="20210322 02:39:31.014" endtime="20210322 02:39:31.014"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["id"]}</arg>
<arg>${account_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:39:31.014" endtime="20210322 02:39:31.015"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["marketplace"]}</arg>
<arg>${marketplace_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:39:31.015" endtime="20210322 02:39:31.015"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["holder"]}</arg>
<arg>${holder_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:39:31.016" endtime="20210322 02:39:31.016"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["number"]}</arg>
<arg>${account_number}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:39:31.016" endtime="20210322 02:39:31.017"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["routing_number"]}</arg>
<arg>${account_routing_number}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:39:31.017" endtime="20210322 02:39:31.018"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["type"]}</arg>
<arg>CACC</arg>
</arguments>
<status status="PASS" starttime="20210322 02:39:31.018" endtime="20210322 02:39:31.018"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar Proprietário da Account Owner</arg>
</arguments>
<msg timestamp="20210322 02:39:31.019" level="INFO">Validar Proprietário da Account Owner</msg>
<status status="PASS" starttime="20210322 02:39:31.018" endtime="20210322 02:39:31.019"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${holder_type}' == 'individual'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["account"]["owner"]["name"]}</arg>
<arg>${holder_name}</arg>
<arg>ELSE IF</arg>
<arg>'${holder_type}' == 'business'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["account"]["owner"]["name"]}</arg>
<arg>${legal_name}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["account"]["owner"]["name"]}</arg>
<arg>${legal_name}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:39:31.019" endtime="20210322 02:39:31.020"></status>
</kw>
<status status="PASS" starttime="20210322 02:39:31.019" endtime="20210322 02:39:31.020"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar national_registration da Account Owner</arg>
</arguments>
<msg timestamp="20210322 02:39:31.020" level="INFO">Validar national_registration da Account Owner</msg>
<status status="PASS" starttime="20210322 02:39:31.020" endtime="20210322 02:39:31.021"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${holder_type}' == 'individual'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["account"]["owner"]["national_registration"]}</arg>
<arg>${national_registration}</arg>
<arg>ELSE IF</arg>
<arg>'${holder_type}' == 'business'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["account"]["owner"]["national_registration"]}</arg>
<arg>${national_registration}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["account"]["owner"]["national_registration"]}</arg>
<arg>${national_registration}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:39:31.021" endtime="20210322 02:39:31.022"></status>
</kw>
<status status="PASS" starttime="20210322 02:39:31.021" endtime="20210322 02:39:31.022"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar Holder Type do Account Owner</arg>
</arguments>
<msg timestamp="20210322 02:39:31.022" level="INFO">Validar Holder Type do Account Owner</msg>
<status status="PASS" starttime="20210322 02:39:31.022" endtime="20210322 02:39:31.022"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${holder_type}' == 'individual'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["account"]["owner"]["type"]}</arg>
<arg>${holder_type}</arg>
<arg>ELSE IF</arg>
<arg>'${holder_type}' == 'business'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["account"]["owner"]["type"]}</arg>
<arg>${holder_type}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["account"]["owner"]["type"]}</arg>
<arg>${holder_type}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:39:31.023" endtime="20210322 02:39:31.024"></status>
</kw>
<status status="PASS" starttime="20210322 02:39:31.023" endtime="20210322 02:39:31.024"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar PSP</arg>
</arguments>
<msg timestamp="20210322 02:39:31.024" level="INFO">Validar PSP</msg>
<status status="PASS" starttime="20210322 02:39:31.024" endtime="20210322 02:39:31.024"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["psp"]["code"]}</arg>
<arg>19468242</arg>
</arguments>
<status status="PASS" starttime="20210322 02:39:31.024" endtime="20210322 02:39:31.025"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["psp"]["name"]}</arg>
<arg>Zoop Tecnologia e Meios de Pagamento S.A.</arg>
</arguments>
<status status="PASS" starttime="20210322 02:39:31.025" endtime="20210322 02:39:31.025"></status>
</kw>
<status status="PASS" starttime="20210322 02:39:31.000" endtime="20210322 02:39:31.026"></status>
</kw>
<doc>Fluxo Básico</doc>
<tags>
<tag>regression_test</tag>
<tag>smoke_test</tag>
</tags>
<status status="PASS" starttime="20210322 02:39:24.353" endtime="20210322 02:39:31.026" critical="yes"></status>
</test>
<doc>Funcionalidade: Criar Chave de Endereçamento
Eu, como um Holder, portador de uma conta ativa em Banking
Desejo criar uma chave de endereçamento PIX associada à minha conta</doc>
<status status="PASS" starttime="20210322 02:39:02.726" endtime="20210322 02:39:31.027"></status>
</suite>
<suite id="s1-s1-s2" name="Confirmação de Propriedade" source="C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\tests\pix-dict\diretorio\Confirmação de Propriedade.robot">
<test id="s1-s1-s2-t1" name="Cenário: Confirmar propriedade de chave de endereçamento do tipo Phone">
<kw name="Random Number" library="FakerLibrary">
<doc>Returns a random number with 1 digit (default, when digits==None),
a random number with 0 to given number of digits, or a random number
with given number to given number of digits (when ``fix_len==True``).</doc>
<arguments>
<arg>digits=8</arg>
<arg>fix_len=True</arg>
</arguments>
<assign>
<var>${phone}</var>
</assign>
<msg timestamp="20210322 02:39:31.089" level="INFO">${phone} = 35994044</msg>
<status status="PASS" starttime="20210322 02:39:31.089" endtime="20210322 02:39:31.089"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>+55219${phone}</arg>
</arguments>
<assign>
<var>${phone_pix}</var>
</assign>
<msg timestamp="20210322 02:39:31.089" level="INFO">${phone_pix} = +5521935994044</msg>
<status status="PASS" starttime="20210322 02:39:31.089" endtime="20210322 02:39:31.089"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${phone_pix}</arg>
</arguments>
<msg timestamp="20210322 02:39:31.090" level="INFO">${phone_pix} = +5521935994044</msg>
<status status="PASS" starttime="20210322 02:39:31.090" endtime="20210322 02:39:31.090"></status>
</kw>
<kw name="criar holder individual ativo" library="accreditation_create_holder_active">
<kw name="conectar accreditation" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accreditation</arg>
<arg>url=${accreditation_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 02:39:31.092" level="INFO">Creating Session using : alias=accreditation, url=https://banking-accreditation-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 02:39:31.091" endtime="20210322 02:39:31.092"></status>
</kw>
<status status="PASS" starttime="20210322 02:39:31.091" endtime="20210322 02:39:31.092"></status>
</kw>
<kw name="Cpf" library="FakerLibrary">
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 02:39:31.093" level="INFO">${national_registration} = 534.061.978-84</msg>
<status status="PASS" starttime="20210322 02:39:31.092" endtime="20210322 02:39:31.093"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${national_registration}</arg>
<arg>.</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 02:39:31.094" level="INFO">${national_registration} = 534061978-84</msg>
<status status="PASS" starttime="20210322 02:39:31.093" endtime="20210322 02:39:31.094"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${national_registration}</arg>
<arg>-</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 02:39:31.094" level="INFO">${national_registration} = 53406197884</msg>
<status status="PASS" starttime="20210322 02:39:31.094" endtime="20210322 02:39:31.094"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${national_registration}</arg>
</arguments>
<msg timestamp="20210322 02:39:31.095" level="INFO">${national_registration} = 53406197884</msg>
<status status="PASS" starttime="20210322 02:39:31.095" endtime="20210322 02:39:31.095"></status>
</kw>
<kw name="Rg" library="FakerLibrary">
<doc>Brazilian RG, return plain numbers.
Check:  https://www.ngmatematica.com/2014/02/como-determinar-o-digito-verificador-do.html</doc>
<assign>
<var>${identity_card}</var>
</assign>
<msg timestamp="20210322 02:39:31.096" level="INFO">${identity_card} = 461875238</msg>
<status status="PASS" starttime="20210322 02:39:31.095" endtime="20210322 02:39:31.096"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${identity_card}</arg>
</arguments>
<msg timestamp="20210322 02:39:31.096" level="INFO">${identity_card} = 461875238</msg>
<status status="PASS" starttime="20210322 02:39:31.096" endtime="20210322 02:39:31.096"></status>
</kw>
<kw name="criar holder individual" library="accreditation_post_holder_individual">
<arguments>
<arg>holder_type=individual</arg>
<arg>holder_name=${holder_name}</arg>
<arg>email=${email}</arg>
<arg>national_registration=${national_registration}</arg>
<arg>revenue=${revenue}</arg>
<arg>birthday=${birthday}</arg>
<arg>mothers_name=${mothers_name}</arg>
<arg>identity_card=${identity_card}</arg>
<arg>pep=false</arg>
<arg>cbo=${cbo}</arg>
</arguments>
<kw name="conectar accreditation" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accreditation</arg>
<arg>url=${accreditation_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 02:39:31.098" level="INFO">Creating Session using : alias=accreditation, url=https://banking-accreditation-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 02:39:31.098" endtime="20210322 02:39:31.099"></status>
</kw>
<status status="PASS" starttime="20210322 02:39:31.098" endtime="20210322 02:39:31.099"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_type}</arg>
</arguments>
<msg timestamp="20210322 02:39:31.100" level="INFO">${holder_type} = individual</msg>
<status status="PASS" starttime="20210322 02:39:31.099" endtime="20210322 02:39:31.100"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_name}</arg>
</arguments>
<msg timestamp="20210322 02:39:31.100" level="INFO">${holder_name} = Holder de teste</msg>
<status status="PASS" starttime="20210322 02:39:31.100" endtime="20210322 02:39:31.100"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:39:31.101" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 02:39:31.101" endtime="20210322 02:39:31.101"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "${holder_type}",</arg>
<arg>"name": "${holder_name}",</arg>
<arg>"email": "${email}",</arg>
<arg>"national_registration": "${national_registration}",</arg>
<arg>"revenue": ${revenue},</arg>
<arg>"birthday": "${birthday}",</arg>
<arg>"mothers_name": "${mothers_name}",</arg>
<arg>"identity_card": "${identity_card}",</arg>
<arg>"pep": false,</arg>
<arg>"cbo": ${cbo}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 02:39:31.102" level="INFO">${body} = { "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "53406197884", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder",...</msg>
<status status="PASS" starttime="20210322 02:39:31.102" endtime="20210322 02:39:31.102"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:39:31.103" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "53406197884", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder", "identity_card": "461875238", "pep": false, "cbo": 821450 } 
json=None</msg>
<msg timestamp="20210322 02:39:31.758" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:39:31.103" endtime="20210322 02:39:31.758"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:39:31.760" level="INFO">{'id': 'a4a951a8ed6649eb8d7ad47f03cdff06', 'name': 'Holder de teste', 'revenue': 5500.0, 'email': 'teste@teste.com.br', 'status': 'waiting_info_and_documents', 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'marketplace_name': 'Marketplace de Teste', 'created_at': '2021-03-22T02:39:32.584491', 'updated_at': '2021-03-22T02:39:32.584493', 'type': 'individual', 'national_registration': '53406197884', 'birthday': '1988-04-23', 'mothers_name': 'Mãe do Holder', 'identity_card': '461875238', 'pep': False, 'cbo': '821450', '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/a4a951a8ed6649eb8d7ad47f03cdff06', 'type': 'GET'}, 'phones': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/a4a951a8ed6649eb8d7ad47f03cdff06/phones', 'type': 'GET'}, 'addresses': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/a4a951a8ed6649eb8d7ad47f03cdff06/addresses', 'type': 'GET'}, 'documents': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/a4a951a8ed6649eb8d7ad47f03cdff06/documents', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 02:39:31.759" endtime="20210322 02:39:31.760"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:39:31.761" level="INFO">cd685ecbfaf5ebe9</msg>
<status status="PASS" starttime="20210322 02:39:31.761" endtime="20210322 02:39:31.761"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${body}</arg>
</arguments>
<msg timestamp="20210322 02:39:31.762" level="INFO">{ "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "53406197884", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder", "identity_card": "461875238", "pep": false, "cbo": 821450 }</msg>
<status status="PASS" starttime="20210322 02:39:31.762" endtime="20210322 02:39:31.763"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:39:31.765" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:39:31.763" endtime="20210322 02:39:31.765"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${holder_external_key}</var>
</assign>
<msg timestamp="20210322 02:39:31.766" level="INFO">${holder_external_key} = a4a951a8ed6649eb8d7ad47f03cdff06</msg>
<status status="PASS" starttime="20210322 02:39:31.765" endtime="20210322 02:39:31.766"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_external_key}</arg>
</arguments>
<msg timestamp="20210322 02:39:31.767" level="INFO">${holder_external_key} = a4a951a8ed6649eb8d7ad47f03cdff06</msg>
<status status="PASS" starttime="20210322 02:39:31.766" endtime="20210322 02:39:31.768"></status>
</kw>
<status status="PASS" starttime="20210322 02:39:31.097" endtime="20210322 02:39:31.768"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_name}</arg>
</arguments>
<msg timestamp="20210322 02:39:31.768" level="INFO">${holder_name} = Holder de teste</msg>
<status status="PASS" starttime="20210322 02:39:31.768" endtime="20210322 02:39:31.768"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 02:39:31.770" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:39:31.768" endtime="20210322 02:39:31.770"></status>
</kw>
<kw name="criar holder phone" library="accreditation_post_holder_phone">
<arguments>
<arg>21</arg>
<arg>51</arg>
<arg>996221236</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:39:31.771" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 02:39:31.770" endtime="20210322 02:39:31.771"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"area_code": "${phone_area_code}",</arg>
<arg>"country_code": "${phone_country_code}",</arg>
<arg>"number": "${phone_number}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 02:39:31.773" level="INFO">${body} = { "area_code": "21", "country_code": "51", "number": "996221236" }</msg>
<status status="PASS" starttime="20210322 02:39:31.771" endtime="20210322 02:39:31.773"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/phones</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:39:31.773" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/a4a951a8ed6649eb8d7ad47f03cdff06/phones, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "area_code": "21", "country_code": "51", "number": "996221236" } 
json=None</msg>
<msg timestamp="20210322 02:39:32.017" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:39:31.773" endtime="20210322 02:39:32.017"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:39:32.019" level="INFO">{'id': '36ae6f94a65e4e68b74a2efd1e35341b', 'area_code': '21', 'country_code': '51', 'number': '996221236', 'main': True, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/a4a951a8ed6649eb8d7ad47f03cdff06/phones/36ae6f94a65e4e68b74a2efd1e35341b', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/a4a951a8ed6649eb8d7ad47f03cdff06', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 02:39:32.018" endtime="20210322 02:39:32.019"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:39:32.020" level="INFO">9f9683c00291363e</msg>
<status status="PASS" starttime="20210322 02:39:32.019" endtime="20210322 02:39:32.020"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:39:32.021" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:39:32.021" endtime="20210322 02:39:32.021"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${phone_external_key}</var>
</assign>
<msg timestamp="20210322 02:39:32.023" level="INFO">${phone_external_key} = 36ae6f94a65e4e68b74a2efd1e35341b</msg>
<status status="PASS" starttime="20210322 02:39:32.022" endtime="20210322 02:39:32.023"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${phone_external_key}</arg>
</arguments>
<msg timestamp="20210322 02:39:32.024" level="INFO">${phone_external_key} = 36ae6f94a65e4e68b74a2efd1e35341b</msg>
<status status="PASS" starttime="20210322 02:39:32.023" endtime="20210322 02:39:32.024"></status>
</kw>
<status status="PASS" starttime="20210322 02:39:31.770" endtime="20210322 02:39:32.024"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 02:39:32.025" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:39:32.025" endtime="20210322 02:39:32.025"></status>
</kw>
<kw name="criar holder address" library="accreditation_post_holder_address">
<arguments>
<arg>Rio de Janeiro</arg>
<arg>Rio de Janeiro</arg>
<arg>Brasil</arg>
<arg>Bairro de Testes</arg>
<arg>Rua de Testes</arg>
<arg>90</arg>
<arg>apto 200</arg>
<arg>21550987</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:39:32.027" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 02:39:32.026" endtime="20210322 02:39:32.027"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"city": "${city}",</arg>
<arg>"state": "${state}",</arg>
<arg>"country": "${country}",</arg>
<arg>"neighborhood": "${neighborhood}",</arg>
<arg>"street": "${street}",</arg>
<arg>"number": "${number}",</arg>
<arg>"complement": "${complement}",</arg>
<arg>"postal_code": "${postal_code}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 02:39:32.028" level="INFO">${body} = { "city": "Rio de Janeiro", "state": "Rio de Janeiro", "country": "Brasil", "neighborhood": "Bairro de Testes", "street": "Rua de Testes", "number": "90", "complement": "apto 200", "postal_code": "215...</msg>
<status status="PASS" starttime="20210322 02:39:32.027" endtime="20210322 02:39:32.028"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/addresses</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:39:32.030" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/a4a951a8ed6649eb8d7ad47f03cdff06/addresses, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "city": "Rio de Janeiro", "state": "Rio de Janeiro", "country": "Brasil", "neighborhood": "Bairro de Testes", "street": "Rua de Testes", "number": "90", "complement": "apto 200", "postal_code": "21550987" } 
json=None</msg>
<msg timestamp="20210322 02:39:32.300" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:39:32.029" endtime="20210322 02:39:32.300"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:39:32.302" level="INFO">{'id': '626c7db846e84e48bd2d0b611c5aa5e5', 'street': 'Rua de Testes', 'number': '90', 'city': 'Rio de Janeiro', 'complement': 'apto 200', 'state': 'Rio de Janeiro', 'neighborhood': 'Bairro de Testes', 'postal_code': '21550987', 'country': 'Brasil', 'main': True, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/a4a951a8ed6649eb8d7ad47f03cdff06/addresses/626c7db846e84e48bd2d0b611c5aa5e5', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/a4a951a8ed6649eb8d7ad47f03cdff06', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 02:39:32.301" endtime="20210322 02:39:32.303"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:39:32.305" level="INFO">7215ce5305fc4ec2</msg>
<status status="PASS" starttime="20210322 02:39:32.303" endtime="20210322 02:39:32.305"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:39:32.307" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:39:32.306" endtime="20210322 02:39:32.307"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${address_external_key}</var>
</assign>
<msg timestamp="20210322 02:39:32.310" level="INFO">${address_external_key} = 626c7db846e84e48bd2d0b611c5aa5e5</msg>
<status status="PASS" starttime="20210322 02:39:32.308" endtime="20210322 02:39:32.310"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${address_external_key}</arg>
</arguments>
<msg timestamp="20210322 02:39:32.311" level="INFO">${address_external_key} = 626c7db846e84e48bd2d0b611c5aa5e5</msg>
<status status="PASS" starttime="20210322 02:39:32.310" endtime="20210322 02:39:32.311"></status>
</kw>
<status status="PASS" starttime="20210322 02:39:32.026" endtime="20210322 02:39:32.311"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 02:39:32.313" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:39:32.312" endtime="20210322 02:39:32.313"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>SELFIE</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:39:32.315" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 02:39:32.314" endtime="20210322 02:39:32.315"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 02:39:32.316" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 02:39:32.318" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 02:39:32.315" endtime="20210322 02:39:32.318"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:39:32.320" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/a4a951a8ed6649eb8d7ad47f03cdff06/documents?type=SELFIE, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 02:39:32.608" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:39:32.318" endtime="20210322 02:39:32.609"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:39:32.611" level="INFO">{'id': 'dc3eadde4c694b42ab436643f2b81196', 'document_type': 'selfie', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/a4a951a8ed6649eb8d7ad47f03cdff06/documents/dc3eadde4c694b42ab436643f2b81196', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/a4a951a8ed6649eb8d7ad47f03cdff06', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/a4a951a8ed6649eb8d7ad47f03cdff06/documents/dc3eadde4c694b42ab436643f2b81196/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 02:39:32.609" endtime="20210322 02:39:32.611"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:39:32.613" level="INFO">0b7e375da0f74dd5</msg>
<status status="PASS" starttime="20210322 02:39:32.612" endtime="20210322 02:39:32.614"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:39:32.616" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:39:32.614" endtime="20210322 02:39:32.616"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 02:39:32.618" level="INFO">${document_external_key} = dc3eadde4c694b42ab436643f2b81196</msg>
<status status="PASS" starttime="20210322 02:39:32.617" endtime="20210322 02:39:32.618"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 02:39:32.620" level="INFO">${document_external_key} = dc3eadde4c694b42ab436643f2b81196</msg>
<status status="PASS" starttime="20210322 02:39:32.619" endtime="20210322 02:39:32.620"></status>
</kw>
<status status="PASS" starttime="20210322 02:39:32.313" endtime="20210322 02:39:32.622"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 02:39:32.622" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:39:32.622" endtime="20210322 02:39:32.623"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>RG_FRENTE</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:39:32.625" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 02:39:32.625" endtime="20210322 02:39:32.625"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 02:39:32.627" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 02:39:32.630" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 02:39:32.627" endtime="20210322 02:39:32.630"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:39:32.632" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/a4a951a8ed6649eb8d7ad47f03cdff06/documents?type=RG_FRENTE, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 02:39:32.887" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:39:32.630" endtime="20210322 02:39:32.887"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:39:32.888" level="INFO">{'id': '666a445a4f4d4e848ffe3057be55a415', 'document_type': 'rg_frente', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/a4a951a8ed6649eb8d7ad47f03cdff06/documents/666a445a4f4d4e848ffe3057be55a415', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/a4a951a8ed6649eb8d7ad47f03cdff06', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/a4a951a8ed6649eb8d7ad47f03cdff06/documents/666a445a4f4d4e848ffe3057be55a415/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 02:39:32.887" endtime="20210322 02:39:32.888"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:39:32.889" level="INFO">61bbd731bfdb58d8</msg>
<status status="PASS" starttime="20210322 02:39:32.888" endtime="20210322 02:39:32.889"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:39:32.890" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:39:32.889" endtime="20210322 02:39:32.890"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 02:39:32.891" level="INFO">${document_external_key} = 666a445a4f4d4e848ffe3057be55a415</msg>
<status status="PASS" starttime="20210322 02:39:32.890" endtime="20210322 02:39:32.891"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 02:39:32.892" level="INFO">${document_external_key} = 666a445a4f4d4e848ffe3057be55a415</msg>
<status status="PASS" starttime="20210322 02:39:32.891" endtime="20210322 02:39:32.892"></status>
</kw>
<status status="PASS" starttime="20210322 02:39:32.625" endtime="20210322 02:39:32.892"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 02:39:32.893" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:39:32.893" endtime="20210322 02:39:32.894"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>RG_VERSO</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:39:32.895" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 02:39:32.895" endtime="20210322 02:39:32.895"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 02:39:32.896" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 02:39:32.898" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 02:39:32.896" endtime="20210322 02:39:32.898"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:39:32.900" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/a4a951a8ed6649eb8d7ad47f03cdff06/documents?type=RG_VERSO, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 02:39:33.145" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:39:32.899" endtime="20210322 02:39:33.145"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:39:33.148" level="INFO">{'id': '506ae110e5794960b1c00ea1877e4782', 'document_type': 'rg_verso', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/a4a951a8ed6649eb8d7ad47f03cdff06/documents/506ae110e5794960b1c00ea1877e4782', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/a4a951a8ed6649eb8d7ad47f03cdff06', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/a4a951a8ed6649eb8d7ad47f03cdff06/documents/506ae110e5794960b1c00ea1877e4782/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 02:39:33.146" endtime="20210322 02:39:33.148"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:39:33.150" level="INFO">fbb9c642aace5aec</msg>
<status status="PASS" starttime="20210322 02:39:33.149" endtime="20210322 02:39:33.150"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:39:33.152" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:39:33.151" endtime="20210322 02:39:33.152"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 02:39:33.154" level="INFO">${document_external_key} = 506ae110e5794960b1c00ea1877e4782</msg>
<status status="PASS" starttime="20210322 02:39:33.152" endtime="20210322 02:39:33.154"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 02:39:33.155" level="INFO">${document_external_key} = 506ae110e5794960b1c00ea1877e4782</msg>
<status status="PASS" starttime="20210322 02:39:33.154" endtime="20210322 02:39:33.155"></status>
</kw>
<status status="PASS" starttime="20210322 02:39:32.894" endtime="20210322 02:39:33.155"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 02:39:33.156" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:39:33.156" endtime="20210322 02:39:33.156"></status>
</kw>
<kw name="solicitar aprovação do holder" library="accreditation_request_approval">
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:39:33.158" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 02:39:33.158" endtime="20210322 02:39:33.158"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/approval</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:39:33.159" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/a4a951a8ed6649eb8d7ad47f03cdff06/approval, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data=None 
json=None</msg>
<msg timestamp="20210322 02:39:33.433" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:39:33.159" endtime="20210322 02:39:33.433"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:39:33.435" level="INFO">{'message': 'Approval request accepted successfully. Processing analysis'}</msg>
<status status="PASS" starttime="20210322 02:39:33.434" endtime="20210322 02:39:33.435"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:39:33.435" level="INFO">680b18acfeb8e464</msg>
<status status="PASS" starttime="20210322 02:39:33.435" endtime="20210322 02:39:33.436"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:39:33.436" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:39:33.436" endtime="20210322 02:39:33.436"></status>
</kw>
<status status="PASS" starttime="20210322 02:39:33.157" endtime="20210322 02:39:33.437"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 02:39:33.437" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:39:33.437" endtime="20210322 02:39:33.438"></status>
</kw>
<kw name="recebendo notificação de aprovação" library="accreditation_risk_notification">
<kw name="Uuid 4" library="FakerLibrary">
<doc>Generates a random UUID4 string.
:param cast_to: Specify what type the UUID should be cast to. Default is `str`
:type cast_to: callable</doc>
<assign>
<var>${assessment_id}</var>
</assign>
<msg timestamp="20210322 02:39:33.439" level="INFO">${assessment_id} = e29968aa-90ac-427f-87d3-30978c434faf</msg>
<status status="PASS" starttime="20210322 02:39:33.439" endtime="20210322 02:39:33.439"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>year</arg>
</arguments>
<assign>
<var>${year}</var>
</assign>
<msg timestamp="20210322 02:39:33.440" level="INFO">${year} = 2021</msg>
<status status="PASS" starttime="20210322 02:39:33.439" endtime="20210322 02:39:33.440"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>month</arg>
</arguments>
<assign>
<var>${month}</var>
</assign>
<msg timestamp="20210322 02:39:33.440" level="INFO">${month} = 03</msg>
<status status="PASS" starttime="20210322 02:39:33.440" endtime="20210322 02:39:33.440"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>day</arg>
</arguments>
<assign>
<var>${day}</var>
</assign>
<msg timestamp="20210322 02:39:33.441" level="INFO">${day} = 22</msg>
<status status="PASS" starttime="20210322 02:39:33.441" endtime="20210322 02:39:33.441"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:39:33.442" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 02:39:33.441" endtime="20210322 02:39:33.442"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "risk.assessment.result",</arg>
<arg>"resource": "business.holder",</arg>
<arg>"created_at": "${year}-${month}-${day} 15:28:56.747Z",</arg>
<arg>"marketplace_id": "${marketplace_external_key}",</arg>
<arg>"object": {</arg>
<arg>"result": "APPROVED",</arg>
<arg>"holder_id": "${holder_external_key}",</arg>
<arg>"applicant_id": "${application_external_key}",</arg>
<arg>"assessment_id": "${assessment_id}"</arg>
<arg>}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 02:39:33.443" level="INFO">${body} = { "type": "risk.assessment.result", "resource": "business.holder", "created_at": "2021-03-22 15:28:56.747Z", "marketplace_id": "f71a8951368a4cc085cf7875ff44e61c", "object": { "result": "APPROVED", "ho...</msg>
<status status="PASS" starttime="20210322 02:39:33.442" endtime="20210322 02:39:33.443"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/admin/internal_operation/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/registration/approval</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:39:33.444" level="INFO">POST Request using : uri=/admin/internal_operation/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/a4a951a8ed6649eb8d7ad47f03cdff06/registration/approval, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "risk.assessment.result", "resource": "business.holder", "created_at": "2021-03-22 15:28:56.747Z", "marketplace_id": "f71a8951368a4cc085cf7875ff44e61c", "object": { "result": "APPROVED", "holder_id": "a4a951a8ed6649eb8d7ad47f03cdff06", "applicant_id": "bcc25a6751c14b52af1340d40dba78c5", "assessment_id": "e29968aa-90ac-427f-87d3-30978c434faf" } } 
json=None</msg>
<msg timestamp="20210322 02:39:33.637" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:39:33.443" endtime="20210322 02:39:33.637"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:39:33.639" level="INFO">{'message': 'Holder approved successfully'}</msg>
<status status="PASS" starttime="20210322 02:39:33.638" endtime="20210322 02:39:33.639"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:39:33.641" level="INFO">f4a0afc10f650aef</msg>
<status status="PASS" starttime="20210322 02:39:33.640" endtime="20210322 02:39:33.641"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:39:33.643" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:39:33.642" endtime="20210322 02:39:33.643"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 02:39:33.645" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:39:33.644" endtime="20210322 02:39:33.646"></status>
</kw>
<status status="PASS" starttime="20210322 02:39:33.438" endtime="20210322 02:39:33.646"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 02:39:33.648" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:39:33.647" endtime="20210322 02:39:33.649"></status>
</kw>
<kw name="buscar account por holder" library="accounts_get_accounts_by_holder">
<kw name="conectar accounts" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accounts</arg>
<arg>url=${account_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 02:39:33.653" level="INFO">Creating Session using : alias=accounts, url=https://banking-accounts-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 02:39:33.652" endtime="20210322 02:39:33.654"></status>
</kw>
<status status="PASS" starttime="20210322 02:39:33.651" endtime="20210322 02:39:33.655"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accounts</arg>
<arg>/marketplaces/${marketplace_external_key}/holders/${holder_external_key}/accounts</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:39:33.656" level="INFO">GET Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/holders/a4a951a8ed6649eb8d7ad47f03cdff06/accounts, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 02:39:34.302" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:39:33.655" endtime="20210322 02:39:34.302"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:39:34.305" level="INFO">{'items': [{'id': '2eab84def02243ada98bba6ec64173e6', 'holder': 'a4a951a8ed6649eb8d7ad47f03cdff06', 'balance': '0.00', 'currency': 'BRL', 'routing_number': '001', 'number': '8369118989', 'status': 'active', 'metadata': {}, 'created_at': '2021-03-22T05:39:34.466377', 'updated_at': '2021-03-22T05:39:34.466377', 'primary': True, 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'uri': '/v2/marketplaces/f71a8951368a4cc085cf7875ff44e61c/accounts/2eab84def02243ada98bba6ec64173e6', 'resource': 'payment_account'}], 'has_more': False, 'limit': 100, 'total_pages': 1, 'page': 1, 'offset': 0, 'total': '1', 'query_count': '1'}</msg>
<status status="PASS" starttime="20210322 02:39:34.303" endtime="20210322 02:39:34.305"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:39:34.308" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:39:34.306" endtime="20210322 02:39:34.308"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["id"]}</arg>
</arguments>
<assign>
<var>${account_external_key}</var>
</assign>
<msg timestamp="20210322 02:39:34.310" level="INFO">${account_external_key} = 2eab84def02243ada98bba6ec64173e6</msg>
<status status="PASS" starttime="20210322 02:39:34.309" endtime="20210322 02:39:34.312"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_external_key}</arg>
</arguments>
<msg timestamp="20210322 02:39:34.313" level="INFO">${account_external_key} = 2eab84def02243ada98bba6ec64173e6</msg>
<status status="PASS" starttime="20210322 02:39:34.312" endtime="20210322 02:39:34.313"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["number"]}</arg>
</arguments>
<assign>
<var>${account_number}</var>
</assign>
<msg timestamp="20210322 02:39:34.315" level="INFO">${account_number} = 8369118989</msg>
<status status="PASS" starttime="20210322 02:39:34.314" endtime="20210322 02:39:34.316"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_number}</arg>
</arguments>
<msg timestamp="20210322 02:39:34.317" level="INFO">${account_number} = 8369118989</msg>
<status status="PASS" starttime="20210322 02:39:34.316" endtime="20210322 02:39:34.317"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["routing_number"]}</arg>
</arguments>
<assign>
<var>${account_routing_number}</var>
</assign>
<msg timestamp="20210322 02:39:34.318" level="INFO">${account_routing_number} = 001</msg>
<status status="PASS" starttime="20210322 02:39:34.318" endtime="20210322 02:39:34.318"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_routing_number}</arg>
</arguments>
<msg timestamp="20210322 02:39:34.319" level="INFO">${account_routing_number} = 001</msg>
<status status="PASS" starttime="20210322 02:39:34.319" endtime="20210322 02:39:34.319"></status>
</kw>
<status status="PASS" starttime="20210322 02:39:33.649" endtime="20210322 02:39:34.320"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 02:39:34.321" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:39:34.321" endtime="20210322 02:39:34.321"></status>
</kw>
<status status="PASS" starttime="20210322 02:39:31.090" endtime="20210322 02:39:34.321"></status>
</kw>
<kw name="criar chave pix" library="pix_dict_create_entry">
<arguments>
<arg>phone</arg>
<arg>${phone_pix}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 02:39:34.324" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 02:39:34.324" endtime="20210322 02:39:34.325"></status>
</kw>
<status status="PASS" starttime="20210322 02:39:34.323" endtime="20210322 02:39:34.325"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${type}</arg>
</arguments>
<msg timestamp="20210322 02:39:34.327" level="INFO">${type} = phone</msg>
<status status="PASS" starttime="20210322 02:39:34.326" endtime="20210322 02:39:34.327"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210322 02:39:34.327" level="INFO">${value} = +5521935994044</msg>
<status status="PASS" starttime="20210322 02:39:34.327" endtime="20210322 02:39:34.327"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:39:34.328" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 02:39:34.327" endtime="20210322 02:39:34.328"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "${type}",</arg>
<arg>"value": "${value}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 02:39:34.328" level="INFO">${body} = { "type": "phone", "value": "+5521935994044" }</msg>
<status status="PASS" starttime="20210322 02:39:34.328" endtime="20210322 02:39:34.329"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:39:34.330" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/a4a951a8ed6649eb8d7ad47f03cdff06/accounts/2eab84def02243ada98bba6ec64173e6/entries, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "phone", "value": "+5521935994044" } 
json=None</msg>
<msg timestamp="20210322 02:39:34.990" level="INFO">${response} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20210322 02:39:34.329" endtime="20210322 02:39:34.990"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:39:34.991" level="INFO">{'id': '8ca461b0bdf04b2c8b6816dae520783a', 'status': 'waiting_ownership_verification', 'created_at': '2021-03-22T02:39:35.840', 'updated_at': '2021-03-22T02:39:35.840', 'key': {'value': '+5521935994044', 'type': 'phone'}, 'account': {'id': '2eab84def02243ada98bba6ec64173e6', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': 'a4a951a8ed6649eb8d7ad47f03cdff06', 'owner': {'name': 'Holder de teste', 'national_registration': '53406197884', 'type': 'individual'}, 'routing_number': '001', 'number': '8369118989', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}, 'resource': 'pix.entry'}</msg>
<status status="PASS" starttime="20210322 02:39:34.991" endtime="20210322 02:39:34.991"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:39:34.991" level="INFO">3fdcb15fee3574d6</msg>
<status status="PASS" starttime="20210322 02:39:34.991" endtime="20210322 02:39:34.991"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 02:39:34.992" level="INFO">202</msg>
<status status="PASS" starttime="20210322 02:39:34.992" endtime="20210322 02:39:34.993"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:39:34.993" level="INFO">${response} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20210322 02:39:34.993" endtime="20210322 02:39:34.993"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${entry_external_key}</var>
</assign>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:39:34.993" endtime="20210322 02:39:34.993"></status>
</kw>
<msg timestamp="20210322 02:39:34.993" level="INFO">${entry_external_key} = 8ca461b0bdf04b2c8b6816dae520783a</msg>
<status status="PASS" starttime="20210322 02:39:34.993" endtime="20210322 02:39:34.993"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${entry_external_key}</arg>
</arguments>
<msg timestamp="20210322 02:39:34.993" level="INFO">${entry_external_key} = 8ca461b0bdf04b2c8b6816dae520783a</msg>
<status status="PASS" starttime="20210322 02:39:34.993" endtime="20210322 02:39:34.994"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["key"]["value"]}</arg>
</arguments>
<assign>
<var>${entry_key_value}</var>
</assign>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["key"]["value"]}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:39:34.994" endtime="20210322 02:39:34.994"></status>
</kw>
<msg timestamp="20210322 02:39:34.994" level="INFO">${entry_key_value} = +5521935994044</msg>
<status status="PASS" starttime="20210322 02:39:34.994" endtime="20210322 02:39:34.994"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${entry_key_value}</arg>
</arguments>
<msg timestamp="20210322 02:39:34.995" level="INFO">${entry_key_value} = +5521935994044</msg>
<status status="PASS" starttime="20210322 02:39:34.995" endtime="20210322 02:39:34.995"></status>
</kw>
<status status="PASS" starttime="20210322 02:39:34.321" endtime="20210322 02:39:34.995"></status>
</kw>
<kw name="validar criação da chave pix" library="asserts">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando status_code</arg>
</arguments>
<msg timestamp="20210322 02:39:34.996" level="INFO">Validando status_code</msg>
<status status="PASS" starttime="20210322 02:39:34.996" endtime="20210322 02:39:34.996"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${type}' == 'evp'</arg>
<arg>Should Be Equal As Integers</arg>
<arg>${response.status_code}</arg>
<arg>201</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'phone'</arg>
<arg>Should Be Equal As Integers</arg>
<arg>${response.status_code}</arg>
<arg>202</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'email'</arg>
<arg>Should Be Equal As Integers</arg>
<arg>${response.status_code}</arg>
<arg>202</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'national_registration'</arg>
<arg>Should Be Equal As Integers</arg>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>202</arg>
</arguments>
<msg timestamp="20210322 02:39:34.996" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:39:34.996" endtime="20210322 02:39:34.997"></status>
</kw>
<status status="PASS" starttime="20210322 02:39:34.996" endtime="20210322 02:39:34.997"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar status da chave</arg>
</arguments>
<msg timestamp="20210322 02:39:34.997" level="INFO">Validar status da chave</msg>
<status status="PASS" starttime="20210322 02:39:34.997" endtime="20210322 02:39:34.997"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${type}' == 'evp'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["status"]}</arg>
<arg>active</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'phone'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["status"]}</arg>
<arg>waiting_ownership_verification</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'email'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["status"]}</arg>
<arg>waiting_ownership_verification</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'national_registration'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["status"]}</arg>
<arg>active</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["status"]}</arg>
<arg>waiting_ownership_verification</arg>
</arguments>
<status status="PASS" starttime="20210322 02:39:34.997" endtime="20210322 02:39:34.998"></status>
</kw>
<status status="PASS" starttime="20210322 02:39:34.997" endtime="20210322 02:39:34.998"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando Tipo da chave PIX</arg>
</arguments>
<msg timestamp="20210322 02:39:34.998" level="INFO">Validando Tipo da chave PIX</msg>
<status status="PASS" starttime="20210322 02:39:34.998" endtime="20210322 02:39:34.998"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${type}' == 'evp'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["type"]}</arg>
<arg>${type}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'phone'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["type"]}</arg>
<arg>${type}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'email'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["type"]}</arg>
<arg>${type}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'national_registration'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["type"]}</arg>
<arg>${type}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["key"]["type"]}</arg>
<arg>${type}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:39:34.999" endtime="20210322 02:39:34.999"></status>
</kw>
<status status="PASS" starttime="20210322 02:39:34.998" endtime="20210322 02:39:34.999"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando Valor da chave PIX</arg>
</arguments>
<msg timestamp="20210322 02:39:34.999" level="INFO">Validando Valor da chave PIX</msg>
<status status="PASS" starttime="20210322 02:39:34.999" endtime="20210322 02:39:34.999"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${type}' == 'evp'</arg>
<arg>Should Not Be Empty</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'phone'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${phone_pix}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'email'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${email_pix}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'national_registration'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${national_registration}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${phone_pix}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:39:35.000" endtime="20210322 02:39:35.001"></status>
</kw>
<status status="PASS" starttime="20210322 02:39:34.999" endtime="20210322 02:39:35.001"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando dados da conta</arg>
</arguments>
<msg timestamp="20210322 02:39:35.001" level="INFO">Validando dados da conta</msg>
<status status="PASS" starttime="20210322 02:39:35.001" endtime="20210322 02:39:35.001"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["id"]}</arg>
<arg>${account_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:39:35.001" endtime="20210322 02:39:35.001"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["marketplace"]}</arg>
<arg>${marketplace_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:39:35.001" endtime="20210322 02:39:35.002"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["holder"]}</arg>
<arg>${holder_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:39:35.002" endtime="20210322 02:39:35.002"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["number"]}</arg>
<arg>${account_number}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:39:35.002" endtime="20210322 02:39:35.003"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["routing_number"]}</arg>
<arg>${account_routing_number}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:39:35.003" endtime="20210322 02:39:35.003"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["type"]}</arg>
<arg>CACC</arg>
</arguments>
<status status="PASS" starttime="20210322 02:39:35.003" endtime="20210322 02:39:35.003"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar Proprietário da Account Owner</arg>
</arguments>
<msg timestamp="20210322 02:39:35.004" level="INFO">Validar Proprietário da Account Owner</msg>
<status status="PASS" starttime="20210322 02:39:35.004" endtime="20210322 02:39:35.004"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${holder_type}' == 'individual'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["account"]["owner"]["name"]}</arg>
<arg>${holder_name}</arg>
<arg>ELSE IF</arg>
<arg>'${holder_type}' == 'business'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["account"]["owner"]["name"]}</arg>
<arg>${legal_name}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["account"]["owner"]["name"]}</arg>
<arg>${holder_name}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:39:35.004" endtime="20210322 02:39:35.005"></status>
</kw>
<status status="PASS" starttime="20210322 02:39:35.004" endtime="20210322 02:39:35.005"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar national_registration da Account Owner</arg>
</arguments>
<msg timestamp="20210322 02:39:35.005" level="INFO">Validar national_registration da Account Owner</msg>
<status status="PASS" starttime="20210322 02:39:35.005" endtime="20210322 02:39:35.005"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${holder_type}' == 'individual'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["account"]["owner"]["national_registration"]}</arg>
<arg>${national_registration}</arg>
<arg>ELSE IF</arg>
<arg>'${holder_type}' == 'business'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["account"]["owner"]["national_registration"]}</arg>
<arg>${national_registration}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["account"]["owner"]["national_registration"]}</arg>
<arg>${national_registration}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:39:35.006" endtime="20210322 02:39:35.006"></status>
</kw>
<status status="PASS" starttime="20210322 02:39:35.005" endtime="20210322 02:39:35.006"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar Holder Type do Account Owner</arg>
</arguments>
<msg timestamp="20210322 02:39:35.006" level="INFO">Validar Holder Type do Account Owner</msg>
<status status="PASS" starttime="20210322 02:39:35.006" endtime="20210322 02:39:35.006"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${holder_type}' == 'individual'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["account"]["owner"]["type"]}</arg>
<arg>${holder_type}</arg>
<arg>ELSE IF</arg>
<arg>'${holder_type}' == 'business'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["account"]["owner"]["type"]}</arg>
<arg>${holder_type}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["account"]["owner"]["type"]}</arg>
<arg>${holder_type}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:39:35.007" endtime="20210322 02:39:35.007"></status>
</kw>
<status status="PASS" starttime="20210322 02:39:35.006" endtime="20210322 02:39:35.007"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar PSP</arg>
</arguments>
<msg timestamp="20210322 02:39:35.007" level="INFO">Validar PSP</msg>
<status status="PASS" starttime="20210322 02:39:35.007" endtime="20210322 02:39:35.007"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["psp"]["code"]}</arg>
<arg>19468242</arg>
</arguments>
<status status="PASS" starttime="20210322 02:39:35.008" endtime="20210322 02:39:35.008"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["psp"]["name"]}</arg>
<arg>Zoop Tecnologia e Meios de Pagamento S.A.</arg>
</arguments>
<status status="PASS" starttime="20210322 02:39:35.008" endtime="20210322 02:39:35.008"></status>
</kw>
<status status="PASS" starttime="20210322 02:39:34.995" endtime="20210322 02:39:35.008"></status>
</kw>
<kw name="buscar verification code" library="pix_dict_verification_code">
<arguments>
<arg>${holder_external_key}</arg>
<arg>${account_external_key}</arg>
<arg>${entry_external_key}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 02:39:35.009" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 02:39:35.009" endtime="20210322 02:39:35.009"></status>
</kw>
<status status="PASS" starttime="20210322 02:39:35.009" endtime="20210322 02:39:35.010"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/admin/internal_operation/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries/${entry_external_key}/code</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:39:35.011" level="INFO">GET Request using : uri=/admin/internal_operation/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/a4a951a8ed6649eb8d7ad47f03cdff06/accounts/2eab84def02243ada98bba6ec64173e6/entries/8ca461b0bdf04b2c8b6816dae520783a/code, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 02:39:35.628" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:39:35.010" endtime="20210322 02:39:35.628"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:39:35.629" level="INFO">{'code': '4876'}</msg>
<status status="PASS" starttime="20210322 02:39:35.628" endtime="20210322 02:39:35.629"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:39:35.629" level="INFO">20f21fb23598dbf6</msg>
<status status="PASS" starttime="20210322 02:39:35.629" endtime="20210322 02:39:35.629"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 02:39:35.629" level="INFO">200</msg>
<status status="PASS" starttime="20210322 02:39:35.629" endtime="20210322 02:39:35.629"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:39:35.629" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:39:35.629" endtime="20210322 02:39:35.629"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["code"]}</arg>
</arguments>
<assign>
<var>${verification_code}</var>
</assign>
<msg timestamp="20210322 02:39:35.630" level="INFO">${verification_code} = 4876</msg>
<status status="PASS" starttime="20210322 02:39:35.630" endtime="20210322 02:39:35.630"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${verification_code}</arg>
</arguments>
<msg timestamp="20210322 02:39:35.630" level="INFO">${verification_code} = 4876</msg>
<status status="PASS" starttime="20210322 02:39:35.630" endtime="20210322 02:39:35.630"></status>
</kw>
<status status="PASS" starttime="20210322 02:39:35.008" endtime="20210322 02:39:35.630"></status>
</kw>
<kw name="confirmar propriedade da chave pix" library="pix_dict_confirm_propriety">
<arguments>
<arg>${verification_code}</arg>
<arg>${holder_external_key}</arg>
<arg>${account_external_key}</arg>
<arg>${entry_external_key}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 02:39:35.631" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 02:39:35.631" endtime="20210322 02:39:35.632"></status>
</kw>
<status status="PASS" starttime="20210322 02:39:35.631" endtime="20210322 02:39:35.632"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:39:35.632" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 02:39:35.632" endtime="20210322 02:39:35.632"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"code": "${verification_code}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 02:39:35.632" level="INFO">${body} = { "code": "4876" }</msg>
<status status="PASS" starttime="20210322 02:39:35.632" endtime="20210322 02:39:35.632"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries/${entry_external_key}/ownership</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:39:35.633" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/a4a951a8ed6649eb8d7ad47f03cdff06/accounts/2eab84def02243ada98bba6ec64173e6/entries/8ca461b0bdf04b2c8b6816dae520783a/ownership, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "code": "4876" } 
json=None</msg>
<msg timestamp="20210322 02:39:37.269" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:39:35.633" endtime="20210322 02:39:37.269"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:39:37.270" level="INFO">{'id': '8ca461b0bdf04b2c8b6816dae520783a', 'status': 'active', 'created_at': '2021-03-22T02:39:35.840', 'updated_at': '2021-03-22T02:39:38.133', 'key': {'value': '+5521935994044', 'type': 'phone'}, 'account': {'id': '2eab84def02243ada98bba6ec64173e6', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': 'a4a951a8ed6649eb8d7ad47f03cdff06', 'owner': {'name': 'Holder de teste', 'national_registration': '53406197884', 'type': 'individual'}, 'routing_number': '001', 'number': '8369118989', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}, 'resource': 'pix.entry'}</msg>
<status status="PASS" starttime="20210322 02:39:37.269" endtime="20210322 02:39:37.270"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:39:37.270" level="INFO">f19d9c600fcf3dab</msg>
<status status="PASS" starttime="20210322 02:39:37.270" endtime="20210322 02:39:37.270"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 02:39:37.271" level="INFO">201</msg>
<status status="PASS" starttime="20210322 02:39:37.271" endtime="20210322 02:39:37.271"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:39:37.272" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:39:37.271" endtime="20210322 02:39:37.272"></status>
</kw>
<status status="PASS" starttime="20210322 02:39:35.631" endtime="20210322 02:39:37.272"></status>
</kw>
<kw name="validar ativação da chave de endereçamento" library="asserts">
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["status"]}</arg>
<arg>active</arg>
</arguments>
<status status="PASS" starttime="20210322 02:39:37.272" endtime="20210322 02:39:37.273"></status>
</kw>
<status status="PASS" starttime="20210322 02:39:37.272" endtime="20210322 02:39:37.273"></status>
</kw>
<doc>Fluxo de Exceção</doc>
<tags>
<tag>smoke_test</tag>
</tags>
<status status="PASS" starttime="20210322 02:39:31.087" endtime="20210322 02:39:37.273" critical="yes"></status>
</test>
<test id="s1-s1-s2-t2" name="Cenário: Confirmar propriedade de chave de endereçamento do tipo Email">
<kw name="Email" library="FakerLibrary">
<assign>
<var>${email_pix}</var>
</assign>
<msg timestamp="20210322 02:39:37.275" level="INFO">${email_pix} = ana-luizaramos@uol.com.br</msg>
<status status="PASS" starttime="20210322 02:39:37.274" endtime="20210322 02:39:37.275"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${email_pix}</arg>
</arguments>
<msg timestamp="20210322 02:39:37.275" level="INFO">${email_pix} = ana-luizaramos@uol.com.br</msg>
<status status="PASS" starttime="20210322 02:39:37.275" endtime="20210322 02:39:37.275"></status>
</kw>
<kw name="criar holder individual ativo" library="accreditation_create_holder_active">
<kw name="conectar accreditation" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accreditation</arg>
<arg>url=${accreditation_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 02:39:37.277" level="INFO">Creating Session using : alias=accreditation, url=https://banking-accreditation-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 02:39:37.276" endtime="20210322 02:39:37.277"></status>
</kw>
<status status="PASS" starttime="20210322 02:39:37.276" endtime="20210322 02:39:37.277"></status>
</kw>
<kw name="Cpf" library="FakerLibrary">
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 02:39:37.278" level="INFO">${national_registration} = 876.495.321-19</msg>
<status status="PASS" starttime="20210322 02:39:37.278" endtime="20210322 02:39:37.278"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${national_registration}</arg>
<arg>.</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 02:39:37.279" level="INFO">${national_registration} = 876495321-19</msg>
<status status="PASS" starttime="20210322 02:39:37.278" endtime="20210322 02:39:37.279"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${national_registration}</arg>
<arg>-</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 02:39:37.279" level="INFO">${national_registration} = 87649532119</msg>
<status status="PASS" starttime="20210322 02:39:37.279" endtime="20210322 02:39:37.279"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${national_registration}</arg>
</arguments>
<msg timestamp="20210322 02:39:37.280" level="INFO">${national_registration} = 87649532119</msg>
<status status="PASS" starttime="20210322 02:39:37.280" endtime="20210322 02:39:37.280"></status>
</kw>
<kw name="Rg" library="FakerLibrary">
<doc>Brazilian RG, return plain numbers.
Check:  https://www.ngmatematica.com/2014/02/como-determinar-o-digito-verificador-do.html</doc>
<assign>
<var>${identity_card}</var>
</assign>
<msg timestamp="20210322 02:39:37.281" level="INFO">${identity_card} = 074568218</msg>
<status status="PASS" starttime="20210322 02:39:37.280" endtime="20210322 02:39:37.281"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${identity_card}</arg>
</arguments>
<msg timestamp="20210322 02:39:37.281" level="INFO">${identity_card} = 074568218</msg>
<status status="PASS" starttime="20210322 02:39:37.281" endtime="20210322 02:39:37.282"></status>
</kw>
<kw name="criar holder individual" library="accreditation_post_holder_individual">
<arguments>
<arg>holder_type=individual</arg>
<arg>holder_name=${holder_name}</arg>
<arg>email=${email}</arg>
<arg>national_registration=${national_registration}</arg>
<arg>revenue=${revenue}</arg>
<arg>birthday=${birthday}</arg>
<arg>mothers_name=${mothers_name}</arg>
<arg>identity_card=${identity_card}</arg>
<arg>pep=false</arg>
<arg>cbo=${cbo}</arg>
</arguments>
<kw name="conectar accreditation" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accreditation</arg>
<arg>url=${accreditation_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 02:39:37.283" level="INFO">Creating Session using : alias=accreditation, url=https://banking-accreditation-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 02:39:37.283" endtime="20210322 02:39:37.283"></status>
</kw>
<status status="PASS" starttime="20210322 02:39:37.282" endtime="20210322 02:39:37.283"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_type}</arg>
</arguments>
<msg timestamp="20210322 02:39:37.284" level="INFO">${holder_type} = individual</msg>
<status status="PASS" starttime="20210322 02:39:37.284" endtime="20210322 02:39:37.284"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_name}</arg>
</arguments>
<msg timestamp="20210322 02:39:37.285" level="INFO">${holder_name} = Holder de teste</msg>
<status status="PASS" starttime="20210322 02:39:37.284" endtime="20210322 02:39:37.285"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:39:37.285" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 02:39:37.285" endtime="20210322 02:39:37.285"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "${holder_type}",</arg>
<arg>"name": "${holder_name}",</arg>
<arg>"email": "${email}",</arg>
<arg>"national_registration": "${national_registration}",</arg>
<arg>"revenue": ${revenue},</arg>
<arg>"birthday": "${birthday}",</arg>
<arg>"mothers_name": "${mothers_name}",</arg>
<arg>"identity_card": "${identity_card}",</arg>
<arg>"pep": false,</arg>
<arg>"cbo": ${cbo}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 02:39:37.286" level="INFO">${body} = { "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "87649532119", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder",...</msg>
<status status="PASS" starttime="20210322 02:39:37.286" endtime="20210322 02:39:37.286"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:39:37.286" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "87649532119", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder", "identity_card": "074568218", "pep": false, "cbo": 821450 } 
json=None</msg>
<msg timestamp="20210322 02:39:37.945" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:39:37.286" endtime="20210322 02:39:37.945"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:39:37.950" level="INFO">{'id': 'e89da41f44474b34b01d37154468b941', 'name': 'Holder de teste', 'revenue': 5500.0, 'email': 'teste@teste.com.br', 'status': 'waiting_info_and_documents', 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'marketplace_name': 'Marketplace de Teste', 'created_at': '2021-03-22T02:39:38.75516', 'updated_at': '2021-03-22T02:39:38.755162', 'type': 'individual', 'national_registration': '87649532119', 'birthday': '1988-04-23', 'mothers_name': 'Mãe do Holder', 'identity_card': '074568218', 'pep': False, 'cbo': '821450', '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/e89da41f44474b34b01d37154468b941', 'type': 'GET'}, 'phones': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/e89da41f44474b34b01d37154468b941/phones', 'type': 'GET'}, 'addresses': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/e89da41f44474b34b01d37154468b941/addresses', 'type': 'GET'}, 'documents': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/e89da41f44474b34b01d37154468b941/documents', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 02:39:37.946" endtime="20210322 02:39:37.951"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:39:37.959" level="INFO">2b8c00ee86df8207</msg>
<status status="PASS" starttime="20210322 02:39:37.956" endtime="20210322 02:39:37.960"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${body}</arg>
</arguments>
<msg timestamp="20210322 02:39:37.961" level="INFO">{ "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "87649532119", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder", "identity_card": "074568218", "pep": false, "cbo": 821450 }</msg>
<status status="PASS" starttime="20210322 02:39:37.960" endtime="20210322 02:39:37.962"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:39:37.964" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:39:37.963" endtime="20210322 02:39:37.964"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${holder_external_key}</var>
</assign>
<msg timestamp="20210322 02:39:37.966" level="INFO">${holder_external_key} = e89da41f44474b34b01d37154468b941</msg>
<status status="PASS" starttime="20210322 02:39:37.965" endtime="20210322 02:39:37.966"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_external_key}</arg>
</arguments>
<msg timestamp="20210322 02:39:37.967" level="INFO">${holder_external_key} = e89da41f44474b34b01d37154468b941</msg>
<status status="PASS" starttime="20210322 02:39:37.967" endtime="20210322 02:39:37.967"></status>
</kw>
<status status="PASS" starttime="20210322 02:39:37.282" endtime="20210322 02:39:37.968"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_name}</arg>
</arguments>
<msg timestamp="20210322 02:39:37.969" level="INFO">${holder_name} = Holder de teste</msg>
<status status="PASS" starttime="20210322 02:39:37.968" endtime="20210322 02:39:37.970"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 02:39:37.971" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:39:37.970" endtime="20210322 02:39:37.971"></status>
</kw>
<kw name="criar holder phone" library="accreditation_post_holder_phone">
<arguments>
<arg>21</arg>
<arg>51</arg>
<arg>996221236</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:39:37.973" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 02:39:37.973" endtime="20210322 02:39:37.973"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"area_code": "${phone_area_code}",</arg>
<arg>"country_code": "${phone_country_code}",</arg>
<arg>"number": "${phone_number}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 02:39:37.974" level="INFO">${body} = { "area_code": "21", "country_code": "51", "number": "996221236" }</msg>
<status status="PASS" starttime="20210322 02:39:37.974" endtime="20210322 02:39:37.974"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/phones</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:39:37.975" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/e89da41f44474b34b01d37154468b941/phones, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "area_code": "21", "country_code": "51", "number": "996221236" } 
json=None</msg>
<msg timestamp="20210322 02:39:38.242" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:39:37.974" endtime="20210322 02:39:38.242"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:39:38.244" level="INFO">{'id': 'c1f654437d6f46be801a9aed6836f38b', 'area_code': '21', 'country_code': '51', 'number': '996221236', 'main': True, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/e89da41f44474b34b01d37154468b941/phones/c1f654437d6f46be801a9aed6836f38b', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/e89da41f44474b34b01d37154468b941', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 02:39:38.243" endtime="20210322 02:39:38.244"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:39:38.246" level="INFO">9e9bcb0a30094b33</msg>
<status status="PASS" starttime="20210322 02:39:38.245" endtime="20210322 02:39:38.247"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:39:38.248" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:39:38.247" endtime="20210322 02:39:38.249"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${phone_external_key}</var>
</assign>
<msg timestamp="20210322 02:39:38.251" level="INFO">${phone_external_key} = c1f654437d6f46be801a9aed6836f38b</msg>
<status status="PASS" starttime="20210322 02:39:38.249" endtime="20210322 02:39:38.252"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${phone_external_key}</arg>
</arguments>
<msg timestamp="20210322 02:39:38.259" level="INFO">${phone_external_key} = c1f654437d6f46be801a9aed6836f38b</msg>
<status status="PASS" starttime="20210322 02:39:38.253" endtime="20210322 02:39:38.264"></status>
</kw>
<status status="PASS" starttime="20210322 02:39:37.972" endtime="20210322 02:39:38.265"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 02:39:38.271" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:39:38.266" endtime="20210322 02:39:38.272"></status>
</kw>
<kw name="criar holder address" library="accreditation_post_holder_address">
<arguments>
<arg>Rio de Janeiro</arg>
<arg>Rio de Janeiro</arg>
<arg>Brasil</arg>
<arg>Bairro de Testes</arg>
<arg>Rua de Testes</arg>
<arg>90</arg>
<arg>apto 200</arg>
<arg>21550987</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:39:38.275" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 02:39:38.275" endtime="20210322 02:39:38.276"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"city": "${city}",</arg>
<arg>"state": "${state}",</arg>
<arg>"country": "${country}",</arg>
<arg>"neighborhood": "${neighborhood}",</arg>
<arg>"street": "${street}",</arg>
<arg>"number": "${number}",</arg>
<arg>"complement": "${complement}",</arg>
<arg>"postal_code": "${postal_code}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 02:39:38.278" level="INFO">${body} = { "city": "Rio de Janeiro", "state": "Rio de Janeiro", "country": "Brasil", "neighborhood": "Bairro de Testes", "street": "Rua de Testes", "number": "90", "complement": "apto 200", "postal_code": "215...</msg>
<status status="PASS" starttime="20210322 02:39:38.276" endtime="20210322 02:39:38.278"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/addresses</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:39:38.280" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/e89da41f44474b34b01d37154468b941/addresses, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "city": "Rio de Janeiro", "state": "Rio de Janeiro", "country": "Brasil", "neighborhood": "Bairro de Testes", "street": "Rua de Testes", "number": "90", "complement": "apto 200", "postal_code": "21550987" } 
json=None</msg>
<msg timestamp="20210322 02:39:38.492" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:39:38.279" endtime="20210322 02:39:38.494"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:39:38.494" level="INFO">{'id': '8365b28e8d394a0c986df9e1834a17ba', 'street': 'Rua de Testes', 'number': '90', 'city': 'Rio de Janeiro', 'complement': 'apto 200', 'state': 'Rio de Janeiro', 'neighborhood': 'Bairro de Testes', 'postal_code': '21550987', 'country': 'Brasil', 'main': True, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/e89da41f44474b34b01d37154468b941/addresses/8365b28e8d394a0c986df9e1834a17ba', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/e89da41f44474b34b01d37154468b941', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 02:39:38.494" endtime="20210322 02:39:38.494"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:39:38.495" level="INFO">45d100350cec614e</msg>
<status status="PASS" starttime="20210322 02:39:38.494" endtime="20210322 02:39:38.497"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:39:38.497" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:39:38.497" endtime="20210322 02:39:38.497"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${address_external_key}</var>
</assign>
<msg timestamp="20210322 02:39:38.498" level="INFO">${address_external_key} = 8365b28e8d394a0c986df9e1834a17ba</msg>
<status status="PASS" starttime="20210322 02:39:38.497" endtime="20210322 02:39:38.498"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${address_external_key}</arg>
</arguments>
<msg timestamp="20210322 02:39:38.500" level="INFO">${address_external_key} = 8365b28e8d394a0c986df9e1834a17ba</msg>
<status status="PASS" starttime="20210322 02:39:38.499" endtime="20210322 02:39:38.500"></status>
</kw>
<status status="PASS" starttime="20210322 02:39:38.273" endtime="20210322 02:39:38.500"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 02:39:38.501" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:39:38.500" endtime="20210322 02:39:38.501"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>SELFIE</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:39:38.502" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 02:39:38.502" endtime="20210322 02:39:38.502"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 02:39:38.503" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 02:39:38.504" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 02:39:38.502" endtime="20210322 02:39:38.504"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:39:38.505" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/e89da41f44474b34b01d37154468b941/documents?type=SELFIE, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 02:39:38.768" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:39:38.504" endtime="20210322 02:39:38.768"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:39:38.771" level="INFO">{'id': '885280d825c54075b61cbf6e6a32cd2f', 'document_type': 'selfie', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/e89da41f44474b34b01d37154468b941/documents/885280d825c54075b61cbf6e6a32cd2f', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/e89da41f44474b34b01d37154468b941', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/e89da41f44474b34b01d37154468b941/documents/885280d825c54075b61cbf6e6a32cd2f/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 02:39:38.769" endtime="20210322 02:39:38.771"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:39:38.773" level="INFO">9e5f5bab27144b81</msg>
<status status="PASS" starttime="20210322 02:39:38.773" endtime="20210322 02:39:38.774"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:39:38.776" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:39:38.775" endtime="20210322 02:39:38.776"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 02:39:38.778" level="INFO">${document_external_key} = 885280d825c54075b61cbf6e6a32cd2f</msg>
<status status="PASS" starttime="20210322 02:39:38.777" endtime="20210322 02:39:38.779"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 02:39:38.780" level="INFO">${document_external_key} = 885280d825c54075b61cbf6e6a32cd2f</msg>
<status status="PASS" starttime="20210322 02:39:38.779" endtime="20210322 02:39:38.780"></status>
</kw>
<status status="PASS" starttime="20210322 02:39:38.501" endtime="20210322 02:39:38.781"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 02:39:38.782" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:39:38.782" endtime="20210322 02:39:38.783"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>RG_FRENTE</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:39:38.786" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 02:39:38.785" endtime="20210322 02:39:38.786"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 02:39:38.787" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 02:39:38.790" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 02:39:38.787" endtime="20210322 02:39:38.790"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:39:38.792" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/e89da41f44474b34b01d37154468b941/documents?type=RG_FRENTE, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 02:39:39.072" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:39:38.790" endtime="20210322 02:39:39.072"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:39:39.073" level="INFO">{'id': '2cadc85244ef4cf8b166ec0d9e99d4e4', 'document_type': 'rg_frente', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/e89da41f44474b34b01d37154468b941/documents/2cadc85244ef4cf8b166ec0d9e99d4e4', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/e89da41f44474b34b01d37154468b941', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/e89da41f44474b34b01d37154468b941/documents/2cadc85244ef4cf8b166ec0d9e99d4e4/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 02:39:39.073" endtime="20210322 02:39:39.073"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:39:39.073" level="INFO">3ea8dc52b8715ba1</msg>
<status status="PASS" starttime="20210322 02:39:39.073" endtime="20210322 02:39:39.073"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:39:39.074" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:39:39.073" endtime="20210322 02:39:39.074"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 02:39:39.074" level="INFO">${document_external_key} = 2cadc85244ef4cf8b166ec0d9e99d4e4</msg>
<status status="PASS" starttime="20210322 02:39:39.074" endtime="20210322 02:39:39.074"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 02:39:39.075" level="INFO">${document_external_key} = 2cadc85244ef4cf8b166ec0d9e99d4e4</msg>
<status status="PASS" starttime="20210322 02:39:39.074" endtime="20210322 02:39:39.075"></status>
</kw>
<status status="PASS" starttime="20210322 02:39:38.783" endtime="20210322 02:39:39.075"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 02:39:39.075" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:39:39.075" endtime="20210322 02:39:39.075"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>RG_VERSO</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:39:39.076" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 02:39:39.076" endtime="20210322 02:39:39.076"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 02:39:39.076" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 02:39:39.077" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 02:39:39.076" endtime="20210322 02:39:39.077"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:39:39.078" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/e89da41f44474b34b01d37154468b941/documents?type=RG_VERSO, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 02:39:39.342" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:39:39.077" endtime="20210322 02:39:39.342"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:39:39.344" level="INFO">{'id': '8faad391e8494b34ad2f4b800f53d37b', 'document_type': 'rg_verso', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/e89da41f44474b34b01d37154468b941/documents/8faad391e8494b34ad2f4b800f53d37b', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/e89da41f44474b34b01d37154468b941', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/e89da41f44474b34b01d37154468b941/documents/8faad391e8494b34ad2f4b800f53d37b/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 02:39:39.344" endtime="20210322 02:39:39.344"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:39:39.344" level="INFO">ef45f7badf02bdb5</msg>
<status status="PASS" starttime="20210322 02:39:39.344" endtime="20210322 02:39:39.344"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:39:39.345" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:39:39.345" endtime="20210322 02:39:39.345"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 02:39:39.346" level="INFO">${document_external_key} = 8faad391e8494b34ad2f4b800f53d37b</msg>
<status status="PASS" starttime="20210322 02:39:39.346" endtime="20210322 02:39:39.346"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 02:39:39.348" level="INFO">${document_external_key} = 8faad391e8494b34ad2f4b800f53d37b</msg>
<status status="PASS" starttime="20210322 02:39:39.348" endtime="20210322 02:39:39.348"></status>
</kw>
<status status="PASS" starttime="20210322 02:39:39.075" endtime="20210322 02:39:39.348"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 02:39:39.348" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:39:39.348" endtime="20210322 02:39:39.349"></status>
</kw>
<kw name="solicitar aprovação do holder" library="accreditation_request_approval">
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:39:39.350" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 02:39:39.350" endtime="20210322 02:39:39.350"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/approval</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:39:39.351" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/e89da41f44474b34b01d37154468b941/approval, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data=None 
json=None</msg>
<msg timestamp="20210322 02:39:39.678" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:39:39.351" endtime="20210322 02:39:39.678"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:39:39.679" level="INFO">{'message': 'Approval request accepted successfully. Processing analysis'}</msg>
<status status="PASS" starttime="20210322 02:39:39.678" endtime="20210322 02:39:39.679"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:39:39.679" level="INFO">9e8ad9f093e6cd1d</msg>
<status status="PASS" starttime="20210322 02:39:39.679" endtime="20210322 02:39:39.679"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:39:39.679" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:39:39.679" endtime="20210322 02:39:39.679"></status>
</kw>
<status status="PASS" starttime="20210322 02:39:39.350" endtime="20210322 02:39:39.680"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 02:39:39.680" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:39:39.680" endtime="20210322 02:39:39.680"></status>
</kw>
<kw name="recebendo notificação de aprovação" library="accreditation_risk_notification">
<kw name="Uuid 4" library="FakerLibrary">
<doc>Generates a random UUID4 string.
:param cast_to: Specify what type the UUID should be cast to. Default is `str`
:type cast_to: callable</doc>
<assign>
<var>${assessment_id}</var>
</assign>
<msg timestamp="20210322 02:39:39.681" level="INFO">${assessment_id} = c10cca0f-e592-4fde-b198-08b5e67363ad</msg>
<status status="PASS" starttime="20210322 02:39:39.680" endtime="20210322 02:39:39.681"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>year</arg>
</arguments>
<assign>
<var>${year}</var>
</assign>
<msg timestamp="20210322 02:39:39.681" level="INFO">${year} = 2021</msg>
<status status="PASS" starttime="20210322 02:39:39.681" endtime="20210322 02:39:39.681"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>month</arg>
</arguments>
<assign>
<var>${month}</var>
</assign>
<msg timestamp="20210322 02:39:39.681" level="INFO">${month} = 03</msg>
<status status="PASS" starttime="20210322 02:39:39.681" endtime="20210322 02:39:39.681"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>day</arg>
</arguments>
<assign>
<var>${day}</var>
</assign>
<msg timestamp="20210322 02:39:39.682" level="INFO">${day} = 22</msg>
<status status="PASS" starttime="20210322 02:39:39.681" endtime="20210322 02:39:39.682"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:39:39.682" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 02:39:39.682" endtime="20210322 02:39:39.682"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "risk.assessment.result",</arg>
<arg>"resource": "business.holder",</arg>
<arg>"created_at": "${year}-${month}-${day} 15:28:56.747Z",</arg>
<arg>"marketplace_id": "${marketplace_external_key}",</arg>
<arg>"object": {</arg>
<arg>"result": "APPROVED",</arg>
<arg>"holder_id": "${holder_external_key}",</arg>
<arg>"applicant_id": "${application_external_key}",</arg>
<arg>"assessment_id": "${assessment_id}"</arg>
<arg>}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 02:39:39.682" level="INFO">${body} = { "type": "risk.assessment.result", "resource": "business.holder", "created_at": "2021-03-22 15:28:56.747Z", "marketplace_id": "f71a8951368a4cc085cf7875ff44e61c", "object": { "result": "APPROVED", "ho...</msg>
<status status="PASS" starttime="20210322 02:39:39.682" endtime="20210322 02:39:39.683"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/admin/internal_operation/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/registration/approval</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:39:39.683" level="INFO">POST Request using : uri=/admin/internal_operation/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/e89da41f44474b34b01d37154468b941/registration/approval, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "risk.assessment.result", "resource": "business.holder", "created_at": "2021-03-22 15:28:56.747Z", "marketplace_id": "f71a8951368a4cc085cf7875ff44e61c", "object": { "result": "APPROVED", "holder_id": "e89da41f44474b34b01d37154468b941", "applicant_id": "bcc25a6751c14b52af1340d40dba78c5", "assessment_id": "c10cca0f-e592-4fde-b198-08b5e67363ad" } } 
json=None</msg>
<msg timestamp="20210322 02:39:39.893" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:39:39.683" endtime="20210322 02:39:39.893"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:39:39.896" level="INFO">{'message': 'Holder approved successfully'}</msg>
<status status="PASS" starttime="20210322 02:39:39.895" endtime="20210322 02:39:39.897"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:39:39.898" level="INFO">75f80622c3dc6742</msg>
<status status="PASS" starttime="20210322 02:39:39.897" endtime="20210322 02:39:39.899"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:39:39.900" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:39:39.899" endtime="20210322 02:39:39.902"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 02:39:39.904" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:39:39.902" endtime="20210322 02:39:39.904"></status>
</kw>
<status status="PASS" starttime="20210322 02:39:39.680" endtime="20210322 02:39:39.904"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 02:39:39.906" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:39:39.905" endtime="20210322 02:39:39.906"></status>
</kw>
<kw name="buscar account por holder" library="accounts_get_accounts_by_holder">
<kw name="conectar accounts" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accounts</arg>
<arg>url=${account_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 02:39:39.909" level="INFO">Creating Session using : alias=accounts, url=https://banking-accounts-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 02:39:39.908" endtime="20210322 02:39:39.909"></status>
</kw>
<status status="PASS" starttime="20210322 02:39:39.907" endtime="20210322 02:39:39.910"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accounts</arg>
<arg>/marketplaces/${marketplace_external_key}/holders/${holder_external_key}/accounts</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:39:39.911" level="INFO">GET Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/holders/e89da41f44474b34b01d37154468b941/accounts, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 02:39:40.617" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:39:39.910" endtime="20210322 02:39:40.618"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:39:40.620" level="INFO">{'items': [{'id': '752887914556435cb3ad67308deeff69', 'holder': 'e89da41f44474b34b01d37154468b941', 'balance': '0.00', 'currency': 'BRL', 'routing_number': '001', 'number': '8818594434', 'status': 'active', 'metadata': {}, 'created_at': '2021-03-22T05:39:40.720479', 'updated_at': '2021-03-22T05:39:40.720479', 'primary': True, 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'uri': '/v2/marketplaces/f71a8951368a4cc085cf7875ff44e61c/accounts/752887914556435cb3ad67308deeff69', 'resource': 'payment_account'}], 'has_more': False, 'limit': 100, 'total_pages': 1, 'page': 1, 'offset': 0, 'total': '1', 'query_count': '1'}</msg>
<status status="PASS" starttime="20210322 02:39:40.619" endtime="20210322 02:39:40.620"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:39:40.623" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:39:40.621" endtime="20210322 02:39:40.623"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["id"]}</arg>
</arguments>
<assign>
<var>${account_external_key}</var>
</assign>
<msg timestamp="20210322 02:39:40.626" level="INFO">${account_external_key} = 752887914556435cb3ad67308deeff69</msg>
<status status="PASS" starttime="20210322 02:39:40.623" endtime="20210322 02:39:40.626"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_external_key}</arg>
</arguments>
<msg timestamp="20210322 02:39:40.628" level="INFO">${account_external_key} = 752887914556435cb3ad67308deeff69</msg>
<status status="PASS" starttime="20210322 02:39:40.627" endtime="20210322 02:39:40.628"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["number"]}</arg>
</arguments>
<assign>
<var>${account_number}</var>
</assign>
<msg timestamp="20210322 02:39:40.630" level="INFO">${account_number} = 8818594434</msg>
<status status="PASS" starttime="20210322 02:39:40.629" endtime="20210322 02:39:40.630"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_number}</arg>
</arguments>
<msg timestamp="20210322 02:39:40.632" level="INFO">${account_number} = 8818594434</msg>
<status status="PASS" starttime="20210322 02:39:40.630" endtime="20210322 02:39:40.632"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["routing_number"]}</arg>
</arguments>
<assign>
<var>${account_routing_number}</var>
</assign>
<msg timestamp="20210322 02:39:40.633" level="INFO">${account_routing_number} = 001</msg>
<status status="PASS" starttime="20210322 02:39:40.632" endtime="20210322 02:39:40.633"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_routing_number}</arg>
</arguments>
<msg timestamp="20210322 02:39:40.634" level="INFO">${account_routing_number} = 001</msg>
<status status="PASS" starttime="20210322 02:39:40.633" endtime="20210322 02:39:40.635"></status>
</kw>
<status status="PASS" starttime="20210322 02:39:39.907" endtime="20210322 02:39:40.635"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 02:39:40.635" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:39:40.635" endtime="20210322 02:39:40.636"></status>
</kw>
<status status="PASS" starttime="20210322 02:39:37.276" endtime="20210322 02:39:40.636"></status>
</kw>
<kw name="criar chave pix" library="pix_dict_create_entry">
<arguments>
<arg>email</arg>
<arg>${email_pix}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 02:39:40.638" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 02:39:40.638" endtime="20210322 02:39:40.639"></status>
</kw>
<status status="PASS" starttime="20210322 02:39:40.637" endtime="20210322 02:39:40.639"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${type}</arg>
</arguments>
<msg timestamp="20210322 02:39:40.640" level="INFO">${type} = email</msg>
<status status="PASS" starttime="20210322 02:39:40.640" endtime="20210322 02:39:40.640"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210322 02:39:40.640" level="INFO">${value} = ana-luizaramos@uol.com.br</msg>
<status status="PASS" starttime="20210322 02:39:40.640" endtime="20210322 02:39:40.641"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:39:40.641" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 02:39:40.641" endtime="20210322 02:39:40.641"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "${type}",</arg>
<arg>"value": "${value}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 02:39:40.642" level="INFO">${body} = { "type": "email", "value": "ana-luizaramos@uol.com.br" }</msg>
<status status="PASS" starttime="20210322 02:39:40.642" endtime="20210322 02:39:40.642"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:39:40.643" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/e89da41f44474b34b01d37154468b941/accounts/752887914556435cb3ad67308deeff69/entries, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "email", "value": "ana-luizaramos@uol.com.br" } 
json=None</msg>
<msg timestamp="20210322 02:39:41.299" level="INFO">${response} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20210322 02:39:40.643" endtime="20210322 02:39:41.299"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:39:41.300" level="INFO">{'id': '96978660200c4303a730e12e70edd4fe', 'status': 'waiting_ownership_verification', 'created_at': '2021-03-22T02:39:42.146', 'updated_at': '2021-03-22T02:39:42.146', 'key': {'value': 'ana-luizaramos@uol.com.br', 'type': 'email'}, 'account': {'id': '752887914556435cb3ad67308deeff69', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': 'e89da41f44474b34b01d37154468b941', 'owner': {'name': 'Holder de teste', 'national_registration': '87649532119', 'type': 'individual'}, 'routing_number': '001', 'number': '8818594434', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}, 'resource': 'pix.entry'}</msg>
<status status="PASS" starttime="20210322 02:39:41.300" endtime="20210322 02:39:41.302"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:39:41.302" level="INFO">c7a9cf16910314bd</msg>
<status status="PASS" starttime="20210322 02:39:41.302" endtime="20210322 02:39:41.302"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 02:39:41.304" level="INFO">202</msg>
<status status="PASS" starttime="20210322 02:39:41.303" endtime="20210322 02:39:41.304"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:39:41.305" level="INFO">${response} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20210322 02:39:41.304" endtime="20210322 02:39:41.305"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${entry_external_key}</var>
</assign>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:39:41.307" endtime="20210322 02:39:41.307"></status>
</kw>
<msg timestamp="20210322 02:39:41.307" level="INFO">${entry_external_key} = 96978660200c4303a730e12e70edd4fe</msg>
<status status="PASS" starttime="20210322 02:39:41.305" endtime="20210322 02:39:41.307"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${entry_external_key}</arg>
</arguments>
<msg timestamp="20210322 02:39:41.308" level="INFO">${entry_external_key} = 96978660200c4303a730e12e70edd4fe</msg>
<status status="PASS" starttime="20210322 02:39:41.308" endtime="20210322 02:39:41.309"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["key"]["value"]}</arg>
</arguments>
<assign>
<var>${entry_key_value}</var>
</assign>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["key"]["value"]}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:39:41.310" endtime="20210322 02:39:41.311"></status>
</kw>
<msg timestamp="20210322 02:39:41.311" level="INFO">${entry_key_value} = ana-luizaramos@uol.com.br</msg>
<status status="PASS" starttime="20210322 02:39:41.309" endtime="20210322 02:39:41.311"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${entry_key_value}</arg>
</arguments>
<msg timestamp="20210322 02:39:41.312" level="INFO">${entry_key_value} = ana-luizaramos@uol.com.br</msg>
<status status="PASS" starttime="20210322 02:39:41.311" endtime="20210322 02:39:41.312"></status>
</kw>
<status status="PASS" starttime="20210322 02:39:40.636" endtime="20210322 02:39:41.312"></status>
</kw>
<kw name="validar criação da chave pix" library="asserts">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando status_code</arg>
</arguments>
<msg timestamp="20210322 02:39:41.313" level="INFO">Validando status_code</msg>
<status status="PASS" starttime="20210322 02:39:41.313" endtime="20210322 02:39:41.313"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${type}' == 'evp'</arg>
<arg>Should Be Equal As Integers</arg>
<arg>${response.status_code}</arg>
<arg>201</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'phone'</arg>
<arg>Should Be Equal As Integers</arg>
<arg>${response.status_code}</arg>
<arg>202</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'email'</arg>
<arg>Should Be Equal As Integers</arg>
<arg>${response.status_code}</arg>
<arg>202</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'national_registration'</arg>
<arg>Should Be Equal As Integers</arg>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>202</arg>
</arguments>
<msg timestamp="20210322 02:39:41.315" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:39:41.314" endtime="20210322 02:39:41.315"></status>
</kw>
<status status="PASS" starttime="20210322 02:39:41.313" endtime="20210322 02:39:41.315"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar status da chave</arg>
</arguments>
<msg timestamp="20210322 02:39:41.315" level="INFO">Validar status da chave</msg>
<status status="PASS" starttime="20210322 02:39:41.315" endtime="20210322 02:39:41.316"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${type}' == 'evp'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["status"]}</arg>
<arg>active</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'phone'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["status"]}</arg>
<arg>waiting_ownership_verification</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'email'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["status"]}</arg>
<arg>waiting_ownership_verification</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'national_registration'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["status"]}</arg>
<arg>active</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["status"]}</arg>
<arg>waiting_ownership_verification</arg>
</arguments>
<status status="PASS" starttime="20210322 02:39:41.317" endtime="20210322 02:39:41.318"></status>
</kw>
<status status="PASS" starttime="20210322 02:39:41.316" endtime="20210322 02:39:41.318"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando Tipo da chave PIX</arg>
</arguments>
<msg timestamp="20210322 02:39:41.318" level="INFO">Validando Tipo da chave PIX</msg>
<status status="PASS" starttime="20210322 02:39:41.318" endtime="20210322 02:39:41.318"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${type}' == 'evp'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["type"]}</arg>
<arg>${type}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'phone'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["type"]}</arg>
<arg>${type}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'email'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["type"]}</arg>
<arg>${type}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'national_registration'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["type"]}</arg>
<arg>${type}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["key"]["type"]}</arg>
<arg>${type}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:39:41.320" endtime="20210322 02:39:41.320"></status>
</kw>
<status status="PASS" starttime="20210322 02:39:41.318" endtime="20210322 02:39:41.320"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando Valor da chave PIX</arg>
</arguments>
<msg timestamp="20210322 02:39:41.320" level="INFO">Validando Valor da chave PIX</msg>
<status status="PASS" starttime="20210322 02:39:41.320" endtime="20210322 02:39:41.320"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${type}' == 'evp'</arg>
<arg>Should Not Be Empty</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'phone'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${phone_pix}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'email'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${email_pix}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'national_registration'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${national_registration}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${email_pix}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:39:41.321" endtime="20210322 02:39:41.322"></status>
</kw>
<status status="PASS" starttime="20210322 02:39:41.320" endtime="20210322 02:39:41.322"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando dados da conta</arg>
</arguments>
<msg timestamp="20210322 02:39:41.322" level="INFO">Validando dados da conta</msg>
<status status="PASS" starttime="20210322 02:39:41.322" endtime="20210322 02:39:41.322"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["id"]}</arg>
<arg>${account_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:39:41.322" endtime="20210322 02:39:41.323"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["marketplace"]}</arg>
<arg>${marketplace_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:39:41.323" endtime="20210322 02:39:41.324"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["holder"]}</arg>
<arg>${holder_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:39:41.324" endtime="20210322 02:39:41.324"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["number"]}</arg>
<arg>${account_number}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:39:41.324" endtime="20210322 02:39:41.325"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["routing_number"]}</arg>
<arg>${account_routing_number}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:39:41.325" endtime="20210322 02:39:41.326"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["type"]}</arg>
<arg>CACC</arg>
</arguments>
<status status="PASS" starttime="20210322 02:39:41.326" endtime="20210322 02:39:41.326"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar Proprietário da Account Owner</arg>
</arguments>
<msg timestamp="20210322 02:39:41.326" level="INFO">Validar Proprietário da Account Owner</msg>
<status status="PASS" starttime="20210322 02:39:41.326" endtime="20210322 02:39:41.327"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${holder_type}' == 'individual'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["account"]["owner"]["name"]}</arg>
<arg>${holder_name}</arg>
<arg>ELSE IF</arg>
<arg>'${holder_type}' == 'business'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["account"]["owner"]["name"]}</arg>
<arg>${legal_name}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["account"]["owner"]["name"]}</arg>
<arg>${holder_name}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:39:41.327" endtime="20210322 02:39:41.328"></status>
</kw>
<status status="PASS" starttime="20210322 02:39:41.327" endtime="20210322 02:39:41.328"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar national_registration da Account Owner</arg>
</arguments>
<msg timestamp="20210322 02:39:41.328" level="INFO">Validar national_registration da Account Owner</msg>
<status status="PASS" starttime="20210322 02:39:41.328" endtime="20210322 02:39:41.328"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${holder_type}' == 'individual'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["account"]["owner"]["national_registration"]}</arg>
<arg>${national_registration}</arg>
<arg>ELSE IF</arg>
<arg>'${holder_type}' == 'business'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["account"]["owner"]["national_registration"]}</arg>
<arg>${national_registration}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["account"]["owner"]["national_registration"]}</arg>
<arg>${national_registration}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:39:41.329" endtime="20210322 02:39:41.329"></status>
</kw>
<status status="PASS" starttime="20210322 02:39:41.328" endtime="20210322 02:39:41.329"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar Holder Type do Account Owner</arg>
</arguments>
<msg timestamp="20210322 02:39:41.330" level="INFO">Validar Holder Type do Account Owner</msg>
<status status="PASS" starttime="20210322 02:39:41.330" endtime="20210322 02:39:41.330"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${holder_type}' == 'individual'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["account"]["owner"]["type"]}</arg>
<arg>${holder_type}</arg>
<arg>ELSE IF</arg>
<arg>'${holder_type}' == 'business'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["account"]["owner"]["type"]}</arg>
<arg>${holder_type}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["account"]["owner"]["type"]}</arg>
<arg>${holder_type}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:39:41.330" endtime="20210322 02:39:41.331"></status>
</kw>
<status status="PASS" starttime="20210322 02:39:41.330" endtime="20210322 02:39:41.331"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar PSP</arg>
</arguments>
<msg timestamp="20210322 02:39:41.331" level="INFO">Validar PSP</msg>
<status status="PASS" starttime="20210322 02:39:41.331" endtime="20210322 02:39:41.331"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["psp"]["code"]}</arg>
<arg>19468242</arg>
</arguments>
<status status="PASS" starttime="20210322 02:39:41.331" endtime="20210322 02:39:41.332"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["psp"]["name"]}</arg>
<arg>Zoop Tecnologia e Meios de Pagamento S.A.</arg>
</arguments>
<status status="PASS" starttime="20210322 02:39:41.332" endtime="20210322 02:39:41.332"></status>
</kw>
<status status="PASS" starttime="20210322 02:39:41.312" endtime="20210322 02:39:41.332"></status>
</kw>
<kw name="buscar verification code" library="pix_dict_verification_code">
<arguments>
<arg>${holder_external_key}</arg>
<arg>${account_external_key}</arg>
<arg>${entry_external_key}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 02:39:41.334" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 02:39:41.334" endtime="20210322 02:39:41.334"></status>
</kw>
<status status="PASS" starttime="20210322 02:39:41.334" endtime="20210322 02:39:41.335"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/admin/internal_operation/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries/${entry_external_key}/code</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:39:41.335" level="INFO">GET Request using : uri=/admin/internal_operation/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/e89da41f44474b34b01d37154468b941/accounts/752887914556435cb3ad67308deeff69/entries/96978660200c4303a730e12e70edd4fe/code, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 02:39:41.942" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:39:41.335" endtime="20210322 02:39:41.942"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:39:41.943" level="INFO">{'code': '1526'}</msg>
<status status="PASS" starttime="20210322 02:39:41.943" endtime="20210322 02:39:41.944"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:39:41.945" level="INFO">50b7ce3dbaeab0fe</msg>
<status status="PASS" starttime="20210322 02:39:41.944" endtime="20210322 02:39:41.945"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 02:39:41.946" level="INFO">200</msg>
<status status="PASS" starttime="20210322 02:39:41.945" endtime="20210322 02:39:41.946"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:39:41.947" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:39:41.947" endtime="20210322 02:39:41.947"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["code"]}</arg>
</arguments>
<assign>
<var>${verification_code}</var>
</assign>
<msg timestamp="20210322 02:39:41.949" level="INFO">${verification_code} = 1526</msg>
<status status="PASS" starttime="20210322 02:39:41.948" endtime="20210322 02:39:41.949"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${verification_code}</arg>
</arguments>
<msg timestamp="20210322 02:39:41.949" level="INFO">${verification_code} = 1526</msg>
<status status="PASS" starttime="20210322 02:39:41.949" endtime="20210322 02:39:41.950"></status>
</kw>
<status status="PASS" starttime="20210322 02:39:41.334" endtime="20210322 02:39:41.950"></status>
</kw>
<kw name="confirmar propriedade da chave pix" library="pix_dict_confirm_propriety">
<arguments>
<arg>${verification_code}</arg>
<arg>${holder_external_key}</arg>
<arg>${account_external_key}</arg>
<arg>${entry_external_key}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 02:39:41.952" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 02:39:41.952" endtime="20210322 02:39:41.953"></status>
</kw>
<status status="PASS" starttime="20210322 02:39:41.951" endtime="20210322 02:39:41.954"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:39:41.954" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 02:39:41.954" endtime="20210322 02:39:41.955"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"code": "${verification_code}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 02:39:41.955" level="INFO">${body} = { "code": "1526" }</msg>
<status status="PASS" starttime="20210322 02:39:41.955" endtime="20210322 02:39:41.955"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries/${entry_external_key}/ownership</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:39:41.956" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/e89da41f44474b34b01d37154468b941/accounts/752887914556435cb3ad67308deeff69/entries/96978660200c4303a730e12e70edd4fe/ownership, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "code": "1526" } 
json=None</msg>
<msg timestamp="20210322 02:39:43.468" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:39:41.956" endtime="20210322 02:39:43.468"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:39:43.469" level="INFO">{'id': '96978660200c4303a730e12e70edd4fe', 'status': 'active', 'created_at': '2021-03-22T02:39:42.146', 'updated_at': '2021-03-22T02:39:44.329', 'key': {'value': 'ana-luizaramos@uol.com.br', 'type': 'email'}, 'account': {'id': '752887914556435cb3ad67308deeff69', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': 'e89da41f44474b34b01d37154468b941', 'owner': {'name': 'Holder de teste', 'national_registration': '87649532119', 'type': 'individual'}, 'routing_number': '001', 'number': '8818594434', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}, 'resource': 'pix.entry'}</msg>
<status status="PASS" starttime="20210322 02:39:43.468" endtime="20210322 02:39:43.469"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:39:43.470" level="INFO">30fd82b2a69d9a8d</msg>
<status status="PASS" starttime="20210322 02:39:43.469" endtime="20210322 02:39:43.470"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 02:39:43.470" level="INFO">201</msg>
<status status="PASS" starttime="20210322 02:39:43.470" endtime="20210322 02:39:43.470"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:39:43.471" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:39:43.471" endtime="20210322 02:39:43.471"></status>
</kw>
<status status="PASS" starttime="20210322 02:39:41.950" endtime="20210322 02:39:43.471"></status>
</kw>
<kw name="validar ativação da chave de endereçamento" library="asserts">
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["status"]}</arg>
<arg>active</arg>
</arguments>
<status status="PASS" starttime="20210322 02:39:43.472" endtime="20210322 02:39:43.472"></status>
</kw>
<status status="PASS" starttime="20210322 02:39:43.471" endtime="20210322 02:39:43.472"></status>
</kw>
<doc>Fluxo de Exceção</doc>
<tags>
<tag>smoke_test</tag>
</tags>
<status status="PASS" starttime="20210322 02:39:37.273" endtime="20210322 02:39:43.473" critical="yes"></status>
</test>
<test id="s1-s1-s2-t3" name="Cenário: Reenviar código de verificação">
<kw name="Email" library="FakerLibrary">
<assign>
<var>${email_pix}</var>
</assign>
<msg timestamp="20210322 02:39:43.474" level="INFO">${email_pix} = gustavo-henrique34@duarte.br</msg>
<status status="PASS" starttime="20210322 02:39:43.474" endtime="20210322 02:39:43.474"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${email_pix}</arg>
</arguments>
<msg timestamp="20210322 02:39:43.475" level="INFO">${email_pix} = gustavo-henrique34@duarte.br</msg>
<status status="PASS" starttime="20210322 02:39:43.474" endtime="20210322 02:39:43.475"></status>
</kw>
<kw name="criar holder individual ativo" library="accreditation_create_holder_active">
<kw name="conectar accreditation" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accreditation</arg>
<arg>url=${accreditation_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 02:39:43.476" level="INFO">Creating Session using : alias=accreditation, url=https://banking-accreditation-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 02:39:43.476" endtime="20210322 02:39:43.477"></status>
</kw>
<status status="PASS" starttime="20210322 02:39:43.475" endtime="20210322 02:39:43.477"></status>
</kw>
<kw name="Cpf" library="FakerLibrary">
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 02:39:43.477" level="INFO">${national_registration} = 521.036.478-07</msg>
<status status="PASS" starttime="20210322 02:39:43.477" endtime="20210322 02:39:43.477"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${national_registration}</arg>
<arg>.</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 02:39:43.478" level="INFO">${national_registration} = 521036478-07</msg>
<status status="PASS" starttime="20210322 02:39:43.477" endtime="20210322 02:39:43.478"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${national_registration}</arg>
<arg>-</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 02:39:43.478" level="INFO">${national_registration} = 52103647807</msg>
<status status="PASS" starttime="20210322 02:39:43.478" endtime="20210322 02:39:43.478"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${national_registration}</arg>
</arguments>
<msg timestamp="20210322 02:39:43.479" level="INFO">${national_registration} = 52103647807</msg>
<status status="PASS" starttime="20210322 02:39:43.479" endtime="20210322 02:39:43.479"></status>
</kw>
<kw name="Rg" library="FakerLibrary">
<doc>Brazilian RG, return plain numbers.
Check:  https://www.ngmatematica.com/2014/02/como-determinar-o-digito-verificador-do.html</doc>
<assign>
<var>${identity_card}</var>
</assign>
<msg timestamp="20210322 02:39:43.480" level="INFO">${identity_card} = 841630574</msg>
<status status="PASS" starttime="20210322 02:39:43.479" endtime="20210322 02:39:43.480"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${identity_card}</arg>
</arguments>
<msg timestamp="20210322 02:39:43.480" level="INFO">${identity_card} = 841630574</msg>
<status status="PASS" starttime="20210322 02:39:43.480" endtime="20210322 02:39:43.480"></status>
</kw>
<kw name="criar holder individual" library="accreditation_post_holder_individual">
<arguments>
<arg>holder_type=individual</arg>
<arg>holder_name=${holder_name}</arg>
<arg>email=${email}</arg>
<arg>national_registration=${national_registration}</arg>
<arg>revenue=${revenue}</arg>
<arg>birthday=${birthday}</arg>
<arg>mothers_name=${mothers_name}</arg>
<arg>identity_card=${identity_card}</arg>
<arg>pep=false</arg>
<arg>cbo=${cbo}</arg>
</arguments>
<kw name="conectar accreditation" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accreditation</arg>
<arg>url=${accreditation_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 02:39:43.486" level="INFO">Creating Session using : alias=accreditation, url=https://banking-accreditation-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 02:39:43.485" endtime="20210322 02:39:43.486"></status>
</kw>
<status status="PASS" starttime="20210322 02:39:43.484" endtime="20210322 02:39:43.486"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_type}</arg>
</arguments>
<msg timestamp="20210322 02:39:43.487" level="INFO">${holder_type} = individual</msg>
<status status="PASS" starttime="20210322 02:39:43.486" endtime="20210322 02:39:43.487"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_name}</arg>
</arguments>
<msg timestamp="20210322 02:39:43.487" level="INFO">${holder_name} = Holder de teste</msg>
<status status="PASS" starttime="20210322 02:39:43.487" endtime="20210322 02:39:43.487"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:39:43.488" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 02:39:43.487" endtime="20210322 02:39:43.488"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "${holder_type}",</arg>
<arg>"name": "${holder_name}",</arg>
<arg>"email": "${email}",</arg>
<arg>"national_registration": "${national_registration}",</arg>
<arg>"revenue": ${revenue},</arg>
<arg>"birthday": "${birthday}",</arg>
<arg>"mothers_name": "${mothers_name}",</arg>
<arg>"identity_card": "${identity_card}",</arg>
<arg>"pep": false,</arg>
<arg>"cbo": ${cbo}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 02:39:43.488" level="INFO">${body} = { "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "52103647807", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder",...</msg>
<status status="PASS" starttime="20210322 02:39:43.488" endtime="20210322 02:39:43.489"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:39:43.489" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "52103647807", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder", "identity_card": "841630574", "pep": false, "cbo": 821450 } 
json=None</msg>
<msg timestamp="20210322 02:39:44.149" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:39:43.489" endtime="20210322 02:39:44.149"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:39:44.150" level="INFO">{'id': 'a390fc4fcb0f4f03b7772a200abcf5ff', 'name': 'Holder de teste', 'revenue': 5500.0, 'email': 'teste@teste.com.br', 'status': 'waiting_info_and_documents', 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'marketplace_name': 'Marketplace de Teste', 'created_at': '2021-03-22T02:39:44.988454', 'updated_at': '2021-03-22T02:39:44.988457', 'type': 'individual', 'national_registration': '52103647807', 'birthday': '1988-04-23', 'mothers_name': 'Mãe do Holder', 'identity_card': '841630574', 'pep': False, 'cbo': '821450', '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/a390fc4fcb0f4f03b7772a200abcf5ff', 'type': 'GET'}, 'phones': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/a390fc4fcb0f4f03b7772a200abcf5ff/phones', 'type': 'GET'}, 'addresses': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/a390fc4fcb0f4f03b7772a200abcf5ff/addresses', 'type': 'GET'}, 'documents': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/a390fc4fcb0f4f03b7772a200abcf5ff/documents', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 02:39:44.149" endtime="20210322 02:39:44.150"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:39:44.151" level="INFO">8b4e772459691e51</msg>
<status status="PASS" starttime="20210322 02:39:44.150" endtime="20210322 02:39:44.151"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${body}</arg>
</arguments>
<msg timestamp="20210322 02:39:44.151" level="INFO">{ "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "52103647807", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder", "identity_card": "841630574", "pep": false, "cbo": 821450 }</msg>
<status status="PASS" starttime="20210322 02:39:44.151" endtime="20210322 02:39:44.152"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:39:44.152" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:39:44.152" endtime="20210322 02:39:44.152"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${holder_external_key}</var>
</assign>
<msg timestamp="20210322 02:39:44.153" level="INFO">${holder_external_key} = a390fc4fcb0f4f03b7772a200abcf5ff</msg>
<status status="PASS" starttime="20210322 02:39:44.153" endtime="20210322 02:39:44.153"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_external_key}</arg>
</arguments>
<msg timestamp="20210322 02:39:44.154" level="INFO">${holder_external_key} = a390fc4fcb0f4f03b7772a200abcf5ff</msg>
<status status="PASS" starttime="20210322 02:39:44.153" endtime="20210322 02:39:44.154"></status>
</kw>
<status status="PASS" starttime="20210322 02:39:43.482" endtime="20210322 02:39:44.154"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_name}</arg>
</arguments>
<msg timestamp="20210322 02:39:44.155" level="INFO">${holder_name} = Holder de teste</msg>
<status status="PASS" starttime="20210322 02:39:44.154" endtime="20210322 02:39:44.155"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 02:39:44.155" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:39:44.155" endtime="20210322 02:39:44.155"></status>
</kw>
<kw name="criar holder phone" library="accreditation_post_holder_phone">
<arguments>
<arg>21</arg>
<arg>51</arg>
<arg>996221236</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:39:44.156" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 02:39:44.156" endtime="20210322 02:39:44.156"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"area_code": "${phone_area_code}",</arg>
<arg>"country_code": "${phone_country_code}",</arg>
<arg>"number": "${phone_number}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 02:39:44.157" level="INFO">${body} = { "area_code": "21", "country_code": "51", "number": "996221236" }</msg>
<status status="PASS" starttime="20210322 02:39:44.157" endtime="20210322 02:39:44.157"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/phones</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:39:44.157" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/a390fc4fcb0f4f03b7772a200abcf5ff/phones, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "area_code": "21", "country_code": "51", "number": "996221236" } 
json=None</msg>
<msg timestamp="20210322 02:39:44.486" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:39:44.157" endtime="20210322 02:39:44.486"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:39:44.488" level="INFO">{'id': 'ef6b0464208d4a19959ecb104805373b', 'area_code': '21', 'country_code': '51', 'number': '996221236', 'main': True, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/a390fc4fcb0f4f03b7772a200abcf5ff/phones/ef6b0464208d4a19959ecb104805373b', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/a390fc4fcb0f4f03b7772a200abcf5ff', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 02:39:44.486" endtime="20210322 02:39:44.488"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:39:44.489" level="INFO">a2ae79bdb36b12fd</msg>
<status status="PASS" starttime="20210322 02:39:44.489" endtime="20210322 02:39:44.489"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:39:44.490" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:39:44.490" endtime="20210322 02:39:44.490"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${phone_external_key}</var>
</assign>
<msg timestamp="20210322 02:39:44.491" level="INFO">${phone_external_key} = ef6b0464208d4a19959ecb104805373b</msg>
<status status="PASS" starttime="20210322 02:39:44.491" endtime="20210322 02:39:44.491"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${phone_external_key}</arg>
</arguments>
<msg timestamp="20210322 02:39:44.492" level="INFO">${phone_external_key} = ef6b0464208d4a19959ecb104805373b</msg>
<status status="PASS" starttime="20210322 02:39:44.491" endtime="20210322 02:39:44.492"></status>
</kw>
<status status="PASS" starttime="20210322 02:39:44.155" endtime="20210322 02:39:44.492"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 02:39:44.493" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:39:44.492" endtime="20210322 02:39:44.493"></status>
</kw>
<kw name="criar holder address" library="accreditation_post_holder_address">
<arguments>
<arg>Rio de Janeiro</arg>
<arg>Rio de Janeiro</arg>
<arg>Brasil</arg>
<arg>Bairro de Testes</arg>
<arg>Rua de Testes</arg>
<arg>90</arg>
<arg>apto 200</arg>
<arg>21550987</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:39:44.494" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 02:39:44.494" endtime="20210322 02:39:44.494"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"city": "${city}",</arg>
<arg>"state": "${state}",</arg>
<arg>"country": "${country}",</arg>
<arg>"neighborhood": "${neighborhood}",</arg>
<arg>"street": "${street}",</arg>
<arg>"number": "${number}",</arg>
<arg>"complement": "${complement}",</arg>
<arg>"postal_code": "${postal_code}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 02:39:44.495" level="INFO">${body} = { "city": "Rio de Janeiro", "state": "Rio de Janeiro", "country": "Brasil", "neighborhood": "Bairro de Testes", "street": "Rua de Testes", "number": "90", "complement": "apto 200", "postal_code": "215...</msg>
<status status="PASS" starttime="20210322 02:39:44.494" endtime="20210322 02:39:44.495"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/addresses</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:39:44.496" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/a390fc4fcb0f4f03b7772a200abcf5ff/addresses, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "city": "Rio de Janeiro", "state": "Rio de Janeiro", "country": "Brasil", "neighborhood": "Bairro de Testes", "street": "Rua de Testes", "number": "90", "complement": "apto 200", "postal_code": "21550987" } 
json=None</msg>
<msg timestamp="20210322 02:39:44.706" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:39:44.495" endtime="20210322 02:39:44.706"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:39:44.707" level="INFO">{'id': '27490b70e1bd401aa2f58a73945a9aaf', 'street': 'Rua de Testes', 'number': '90', 'city': 'Rio de Janeiro', 'complement': 'apto 200', 'state': 'Rio de Janeiro', 'neighborhood': 'Bairro de Testes', 'postal_code': '21550987', 'country': 'Brasil', 'main': True, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/a390fc4fcb0f4f03b7772a200abcf5ff/addresses/27490b70e1bd401aa2f58a73945a9aaf', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/a390fc4fcb0f4f03b7772a200abcf5ff', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 02:39:44.706" endtime="20210322 02:39:44.707"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:39:44.707" level="INFO">4fd8cf2f2ed1cd83</msg>
<status status="PASS" starttime="20210322 02:39:44.707" endtime="20210322 02:39:44.707"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:39:44.708" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:39:44.707" endtime="20210322 02:39:44.708"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${address_external_key}</var>
</assign>
<msg timestamp="20210322 02:39:44.708" level="INFO">${address_external_key} = 27490b70e1bd401aa2f58a73945a9aaf</msg>
<status status="PASS" starttime="20210322 02:39:44.708" endtime="20210322 02:39:44.708"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${address_external_key}</arg>
</arguments>
<msg timestamp="20210322 02:39:44.709" level="INFO">${address_external_key} = 27490b70e1bd401aa2f58a73945a9aaf</msg>
<status status="PASS" starttime="20210322 02:39:44.708" endtime="20210322 02:39:44.709"></status>
</kw>
<status status="PASS" starttime="20210322 02:39:44.493" endtime="20210322 02:39:44.709"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 02:39:44.709" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:39:44.709" endtime="20210322 02:39:44.709"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>SELFIE</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:39:44.710" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 02:39:44.710" endtime="20210322 02:39:44.710"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 02:39:44.710" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 02:39:44.712" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 02:39:44.710" endtime="20210322 02:39:44.712"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:39:44.712" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/a390fc4fcb0f4f03b7772a200abcf5ff/documents?type=SELFIE, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 02:39:44.989" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:39:44.712" endtime="20210322 02:39:44.989"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:39:44.989" level="INFO">{'id': 'c45dec6d8a94444f95f5a56413a89f3c', 'document_type': 'selfie', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/a390fc4fcb0f4f03b7772a200abcf5ff/documents/c45dec6d8a94444f95f5a56413a89f3c', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/a390fc4fcb0f4f03b7772a200abcf5ff', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/a390fc4fcb0f4f03b7772a200abcf5ff/documents/c45dec6d8a94444f95f5a56413a89f3c/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 02:39:44.989" endtime="20210322 02:39:44.989"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:39:44.989" level="INFO">b4df6949c86aaa40</msg>
<status status="PASS" starttime="20210322 02:39:44.989" endtime="20210322 02:39:44.989"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:39:44.990" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:39:44.989" endtime="20210322 02:39:44.990"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 02:39:44.990" level="INFO">${document_external_key} = c45dec6d8a94444f95f5a56413a89f3c</msg>
<status status="PASS" starttime="20210322 02:39:44.990" endtime="20210322 02:39:44.990"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 02:39:44.991" level="INFO">${document_external_key} = c45dec6d8a94444f95f5a56413a89f3c</msg>
<status status="PASS" starttime="20210322 02:39:44.990" endtime="20210322 02:39:44.991"></status>
</kw>
<status status="PASS" starttime="20210322 02:39:44.709" endtime="20210322 02:39:44.991"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 02:39:44.991" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:39:44.991" endtime="20210322 02:39:44.991"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>RG_FRENTE</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:39:44.992" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 02:39:44.991" endtime="20210322 02:39:44.992"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 02:39:44.992" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 02:39:44.993" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 02:39:44.992" endtime="20210322 02:39:44.993"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:39:44.994" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/a390fc4fcb0f4f03b7772a200abcf5ff/documents?type=RG_FRENTE, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 02:39:45.243" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:39:44.993" endtime="20210322 02:39:45.243"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:39:45.246" level="INFO">{'id': '73d5f6689bbb4561a392c80d6dabb6ef', 'document_type': 'rg_frente', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/a390fc4fcb0f4f03b7772a200abcf5ff/documents/73d5f6689bbb4561a392c80d6dabb6ef', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/a390fc4fcb0f4f03b7772a200abcf5ff', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/a390fc4fcb0f4f03b7772a200abcf5ff/documents/73d5f6689bbb4561a392c80d6dabb6ef/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 02:39:45.244" endtime="20210322 02:39:45.246"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:39:45.247" level="INFO">c0ceb39703bde0e9</msg>
<status status="PASS" starttime="20210322 02:39:45.247" endtime="20210322 02:39:45.248"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:39:45.249" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:39:45.248" endtime="20210322 02:39:45.249"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 02:39:45.251" level="INFO">${document_external_key} = 73d5f6689bbb4561a392c80d6dabb6ef</msg>
<status status="PASS" starttime="20210322 02:39:45.250" endtime="20210322 02:39:45.251"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 02:39:45.252" level="INFO">${document_external_key} = 73d5f6689bbb4561a392c80d6dabb6ef</msg>
<status status="PASS" starttime="20210322 02:39:45.252" endtime="20210322 02:39:45.252"></status>
</kw>
<status status="PASS" starttime="20210322 02:39:44.991" endtime="20210322 02:39:45.253"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 02:39:45.253" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:39:45.253" endtime="20210322 02:39:45.254"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>RG_VERSO</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:39:45.255" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 02:39:45.255" endtime="20210322 02:39:45.255"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 02:39:45.256" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 02:39:45.258" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 02:39:45.256" endtime="20210322 02:39:45.258"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:39:45.259" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/a390fc4fcb0f4f03b7772a200abcf5ff/documents?type=RG_VERSO, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 02:39:45.516" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:39:45.258" endtime="20210322 02:39:45.516"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:39:45.517" level="INFO">{'id': '11d649ec52b848a49d6d20889db1cda9', 'document_type': 'rg_verso', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/a390fc4fcb0f4f03b7772a200abcf5ff/documents/11d649ec52b848a49d6d20889db1cda9', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/a390fc4fcb0f4f03b7772a200abcf5ff', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/a390fc4fcb0f4f03b7772a200abcf5ff/documents/11d649ec52b848a49d6d20889db1cda9/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 02:39:45.516" endtime="20210322 02:39:45.517"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:39:45.519" level="INFO">3054eb23a6b448a6</msg>
<status status="PASS" starttime="20210322 02:39:45.518" endtime="20210322 02:39:45.519"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:39:45.520" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:39:45.519" endtime="20210322 02:39:45.520"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 02:39:45.522" level="INFO">${document_external_key} = 11d649ec52b848a49d6d20889db1cda9</msg>
<status status="PASS" starttime="20210322 02:39:45.521" endtime="20210322 02:39:45.522"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 02:39:45.523" level="INFO">${document_external_key} = 11d649ec52b848a49d6d20889db1cda9</msg>
<status status="PASS" starttime="20210322 02:39:45.523" endtime="20210322 02:39:45.524"></status>
</kw>
<status status="PASS" starttime="20210322 02:39:45.254" endtime="20210322 02:39:45.524"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 02:39:45.525" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:39:45.524" endtime="20210322 02:39:45.525"></status>
</kw>
<kw name="solicitar aprovação do holder" library="accreditation_request_approval">
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:39:45.527" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 02:39:45.527" endtime="20210322 02:39:45.527"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/approval</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:39:45.528" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/a390fc4fcb0f4f03b7772a200abcf5ff/approval, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data=None 
json=None</msg>
<msg timestamp="20210322 02:39:45.807" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:39:45.528" endtime="20210322 02:39:45.807"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:39:45.808" level="INFO">{'message': 'Approval request accepted successfully. Processing analysis'}</msg>
<status status="PASS" starttime="20210322 02:39:45.807" endtime="20210322 02:39:45.808"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:39:45.808" level="INFO">382fbc056414f462</msg>
<status status="PASS" starttime="20210322 02:39:45.808" endtime="20210322 02:39:45.808"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:39:45.809" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:39:45.809" endtime="20210322 02:39:45.809"></status>
</kw>
<status status="PASS" starttime="20210322 02:39:45.526" endtime="20210322 02:39:45.809"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 02:39:45.810" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:39:45.810" endtime="20210322 02:39:45.811"></status>
</kw>
<kw name="recebendo notificação de aprovação" library="accreditation_risk_notification">
<kw name="Uuid 4" library="FakerLibrary">
<doc>Generates a random UUID4 string.
:param cast_to: Specify what type the UUID should be cast to. Default is `str`
:type cast_to: callable</doc>
<assign>
<var>${assessment_id}</var>
</assign>
<msg timestamp="20210322 02:39:45.812" level="INFO">${assessment_id} = 0a6788c9-13a1-4312-9789-e69d680ded6b</msg>
<status status="PASS" starttime="20210322 02:39:45.812" endtime="20210322 02:39:45.812"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>year</arg>
</arguments>
<assign>
<var>${year}</var>
</assign>
<msg timestamp="20210322 02:39:45.812" level="INFO">${year} = 2021</msg>
<status status="PASS" starttime="20210322 02:39:45.812" endtime="20210322 02:39:45.813"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>month</arg>
</arguments>
<assign>
<var>${month}</var>
</assign>
<msg timestamp="20210322 02:39:45.813" level="INFO">${month} = 03</msg>
<status status="PASS" starttime="20210322 02:39:45.813" endtime="20210322 02:39:45.813"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>day</arg>
</arguments>
<assign>
<var>${day}</var>
</assign>
<msg timestamp="20210322 02:39:45.814" level="INFO">${day} = 22</msg>
<status status="PASS" starttime="20210322 02:39:45.813" endtime="20210322 02:39:45.814"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:39:45.814" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 02:39:45.814" endtime="20210322 02:39:45.814"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "risk.assessment.result",</arg>
<arg>"resource": "business.holder",</arg>
<arg>"created_at": "${year}-${month}-${day} 15:28:56.747Z",</arg>
<arg>"marketplace_id": "${marketplace_external_key}",</arg>
<arg>"object": {</arg>
<arg>"result": "APPROVED",</arg>
<arg>"holder_id": "${holder_external_key}",</arg>
<arg>"applicant_id": "${application_external_key}",</arg>
<arg>"assessment_id": "${assessment_id}"</arg>
<arg>}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 02:39:45.815" level="INFO">${body} = { "type": "risk.assessment.result", "resource": "business.holder", "created_at": "2021-03-22 15:28:56.747Z", "marketplace_id": "f71a8951368a4cc085cf7875ff44e61c", "object": { "result": "APPROVED", "ho...</msg>
<status status="PASS" starttime="20210322 02:39:45.815" endtime="20210322 02:39:45.815"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/admin/internal_operation/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/registration/approval</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:39:45.816" level="INFO">POST Request using : uri=/admin/internal_operation/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/a390fc4fcb0f4f03b7772a200abcf5ff/registration/approval, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "risk.assessment.result", "resource": "business.holder", "created_at": "2021-03-22 15:28:56.747Z", "marketplace_id": "f71a8951368a4cc085cf7875ff44e61c", "object": { "result": "APPROVED", "holder_id": "a390fc4fcb0f4f03b7772a200abcf5ff", "applicant_id": "bcc25a6751c14b52af1340d40dba78c5", "assessment_id": "0a6788c9-13a1-4312-9789-e69d680ded6b" } } 
json=None</msg>
<msg timestamp="20210322 02:39:46.014" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:39:45.815" endtime="20210322 02:39:46.015"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:39:46.015" level="INFO">{'message': 'Holder approved successfully'}</msg>
<status status="PASS" starttime="20210322 02:39:46.015" endtime="20210322 02:39:46.016"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:39:46.016" level="INFO">14bdcd4ba41a9992</msg>
<status status="PASS" starttime="20210322 02:39:46.016" endtime="20210322 02:39:46.016"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:39:46.017" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:39:46.017" endtime="20210322 02:39:46.017"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 02:39:46.019" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:39:46.018" endtime="20210322 02:39:46.019"></status>
</kw>
<status status="PASS" starttime="20210322 02:39:45.811" endtime="20210322 02:39:46.019"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 02:39:46.021" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:39:46.020" endtime="20210322 02:39:46.021"></status>
</kw>
<kw name="buscar account por holder" library="accounts_get_accounts_by_holder">
<kw name="conectar accounts" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accounts</arg>
<arg>url=${account_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 02:39:46.024" level="INFO">Creating Session using : alias=accounts, url=https://banking-accounts-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 02:39:46.024" endtime="20210322 02:39:46.025"></status>
</kw>
<status status="PASS" starttime="20210322 02:39:46.023" endtime="20210322 02:39:46.025"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accounts</arg>
<arg>/marketplaces/${marketplace_external_key}/holders/${holder_external_key}/accounts</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:39:46.026" level="INFO">GET Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/holders/a390fc4fcb0f4f03b7772a200abcf5ff/accounts, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 02:39:46.651" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:39:46.025" endtime="20210322 02:39:46.651"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:39:46.652" level="INFO">{'items': [{'id': '0d237e7746b6451788033a75c31caae6', 'holder': 'a390fc4fcb0f4f03b7772a200abcf5ff', 'balance': '0.00', 'currency': 'BRL', 'routing_number': '001', 'number': '6478578522', 'status': 'active', 'metadata': {}, 'created_at': '2021-03-22T05:39:46.840987', 'updated_at': '2021-03-22T05:39:46.840987', 'primary': True, 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'uri': '/v2/marketplaces/f71a8951368a4cc085cf7875ff44e61c/accounts/0d237e7746b6451788033a75c31caae6', 'resource': 'payment_account'}], 'has_more': False, 'limit': 100, 'total_pages': 1, 'page': 1, 'offset': 0, 'total': '1', 'query_count': '1'}</msg>
<status status="PASS" starttime="20210322 02:39:46.652" endtime="20210322 02:39:46.652"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:39:46.653" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:39:46.653" endtime="20210322 02:39:46.653"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["id"]}</arg>
</arguments>
<assign>
<var>${account_external_key}</var>
</assign>
<msg timestamp="20210322 02:39:46.654" level="INFO">${account_external_key} = 0d237e7746b6451788033a75c31caae6</msg>
<status status="PASS" starttime="20210322 02:39:46.653" endtime="20210322 02:39:46.654"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_external_key}</arg>
</arguments>
<msg timestamp="20210322 02:39:46.655" level="INFO">${account_external_key} = 0d237e7746b6451788033a75c31caae6</msg>
<status status="PASS" starttime="20210322 02:39:46.655" endtime="20210322 02:39:46.655"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["number"]}</arg>
</arguments>
<assign>
<var>${account_number}</var>
</assign>
<msg timestamp="20210322 02:39:46.656" level="INFO">${account_number} = 6478578522</msg>
<status status="PASS" starttime="20210322 02:39:46.655" endtime="20210322 02:39:46.656"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_number}</arg>
</arguments>
<msg timestamp="20210322 02:39:46.657" level="INFO">${account_number} = 6478578522</msg>
<status status="PASS" starttime="20210322 02:39:46.657" endtime="20210322 02:39:46.657"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["routing_number"]}</arg>
</arguments>
<assign>
<var>${account_routing_number}</var>
</assign>
<msg timestamp="20210322 02:39:46.658" level="INFO">${account_routing_number} = 001</msg>
<status status="PASS" starttime="20210322 02:39:46.657" endtime="20210322 02:39:46.658"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_routing_number}</arg>
</arguments>
<msg timestamp="20210322 02:39:46.659" level="INFO">${account_routing_number} = 001</msg>
<status status="PASS" starttime="20210322 02:39:46.659" endtime="20210322 02:39:46.659"></status>
</kw>
<status status="PASS" starttime="20210322 02:39:46.022" endtime="20210322 02:39:46.659"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 02:39:46.660" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:39:46.660" endtime="20210322 02:39:46.660"></status>
</kw>
<status status="PASS" starttime="20210322 02:39:43.475" endtime="20210322 02:39:46.660"></status>
</kw>
<kw name="criar chave pix" library="pix_dict_create_entry">
<arguments>
<arg>email</arg>
<arg>${email_pix}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 02:39:46.662" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 02:39:46.662" endtime="20210322 02:39:46.663"></status>
</kw>
<status status="PASS" starttime="20210322 02:39:46.661" endtime="20210322 02:39:46.663"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${type}</arg>
</arguments>
<msg timestamp="20210322 02:39:46.664" level="INFO">${type} = email</msg>
<status status="PASS" starttime="20210322 02:39:46.663" endtime="20210322 02:39:46.664"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210322 02:39:46.665" level="INFO">${value} = gustavo-henrique34@duarte.br</msg>
<status status="PASS" starttime="20210322 02:39:46.664" endtime="20210322 02:39:46.665"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:39:46.665" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 02:39:46.665" endtime="20210322 02:39:46.665"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "${type}",</arg>
<arg>"value": "${value}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 02:39:46.666" level="INFO">${body} = { "type": "email", "value": "gustavo-henrique34@duarte.br" }</msg>
<status status="PASS" starttime="20210322 02:39:46.666" endtime="20210322 02:39:46.666"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:39:46.667" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/a390fc4fcb0f4f03b7772a200abcf5ff/accounts/0d237e7746b6451788033a75c31caae6/entries, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "email", "value": "gustavo-henrique34@duarte.br" } 
json=None</msg>
<msg timestamp="20210322 02:39:47.286" level="INFO">${response} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20210322 02:39:46.666" endtime="20210322 02:39:47.286"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:39:47.287" level="INFO">{'id': 'ac6b3d493e4d41c6ac7b6499619cc2c3', 'status': 'waiting_ownership_verification', 'created_at': '2021-03-22T02:39:48.136', 'updated_at': '2021-03-22T02:39:48.136', 'key': {'value': 'gustavo-henrique34@duarte.br', 'type': 'email'}, 'account': {'id': '0d237e7746b6451788033a75c31caae6', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': 'a390fc4fcb0f4f03b7772a200abcf5ff', 'owner': {'name': 'Holder de teste', 'national_registration': '52103647807', 'type': 'individual'}, 'routing_number': '001', 'number': '6478578522', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}, 'resource': 'pix.entry'}</msg>
<status status="PASS" starttime="20210322 02:39:47.286" endtime="20210322 02:39:47.287"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:39:47.288" level="INFO">e082c52bb22ba31b</msg>
<status status="PASS" starttime="20210322 02:39:47.287" endtime="20210322 02:39:47.288"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 02:39:47.288" level="INFO">202</msg>
<status status="PASS" starttime="20210322 02:39:47.288" endtime="20210322 02:39:47.288"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:39:47.291" level="INFO">${response} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20210322 02:39:47.289" endtime="20210322 02:39:47.291"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${entry_external_key}</var>
</assign>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:39:47.291" endtime="20210322 02:39:47.292"></status>
</kw>
<msg timestamp="20210322 02:39:47.293" level="INFO">${entry_external_key} = ac6b3d493e4d41c6ac7b6499619cc2c3</msg>
<status status="PASS" starttime="20210322 02:39:47.291" endtime="20210322 02:39:47.293"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${entry_external_key}</arg>
</arguments>
<msg timestamp="20210322 02:39:47.293" level="INFO">${entry_external_key} = ac6b3d493e4d41c6ac7b6499619cc2c3</msg>
<status status="PASS" starttime="20210322 02:39:47.293" endtime="20210322 02:39:47.293"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["key"]["value"]}</arg>
</arguments>
<assign>
<var>${entry_key_value}</var>
</assign>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["key"]["value"]}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:39:47.293" endtime="20210322 02:39:47.294"></status>
</kw>
<msg timestamp="20210322 02:39:47.294" level="INFO">${entry_key_value} = gustavo-henrique34@duarte.br</msg>
<status status="PASS" starttime="20210322 02:39:47.293" endtime="20210322 02:39:47.294"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${entry_key_value}</arg>
</arguments>
<msg timestamp="20210322 02:39:47.295" level="INFO">${entry_key_value} = gustavo-henrique34@duarte.br</msg>
<status status="PASS" starttime="20210322 02:39:47.294" endtime="20210322 02:39:47.295"></status>
</kw>
<status status="PASS" starttime="20210322 02:39:46.661" endtime="20210322 02:39:47.295"></status>
</kw>
<kw name="validar criação da chave pix" library="asserts">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando status_code</arg>
</arguments>
<msg timestamp="20210322 02:39:47.296" level="INFO">Validando status_code</msg>
<status status="PASS" starttime="20210322 02:39:47.296" endtime="20210322 02:39:47.296"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${type}' == 'evp'</arg>
<arg>Should Be Equal As Integers</arg>
<arg>${response.status_code}</arg>
<arg>201</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'phone'</arg>
<arg>Should Be Equal As Integers</arg>
<arg>${response.status_code}</arg>
<arg>202</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'email'</arg>
<arg>Should Be Equal As Integers</arg>
<arg>${response.status_code}</arg>
<arg>202</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'national_registration'</arg>
<arg>Should Be Equal As Integers</arg>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>202</arg>
</arguments>
<msg timestamp="20210322 02:39:47.298" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:39:47.297" endtime="20210322 02:39:47.298"></status>
</kw>
<status status="PASS" starttime="20210322 02:39:47.296" endtime="20210322 02:39:47.298"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar status da chave</arg>
</arguments>
<msg timestamp="20210322 02:39:47.298" level="INFO">Validar status da chave</msg>
<status status="PASS" starttime="20210322 02:39:47.298" endtime="20210322 02:39:47.298"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${type}' == 'evp'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["status"]}</arg>
<arg>active</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'phone'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["status"]}</arg>
<arg>waiting_ownership_verification</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'email'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["status"]}</arg>
<arg>waiting_ownership_verification</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'national_registration'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["status"]}</arg>
<arg>active</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["status"]}</arg>
<arg>waiting_ownership_verification</arg>
</arguments>
<status status="PASS" starttime="20210322 02:39:47.299" endtime="20210322 02:39:47.300"></status>
</kw>
<status status="PASS" starttime="20210322 02:39:47.299" endtime="20210322 02:39:47.300"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando Tipo da chave PIX</arg>
</arguments>
<msg timestamp="20210322 02:39:47.300" level="INFO">Validando Tipo da chave PIX</msg>
<status status="PASS" starttime="20210322 02:39:47.300" endtime="20210322 02:39:47.300"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${type}' == 'evp'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["type"]}</arg>
<arg>${type}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'phone'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["type"]}</arg>
<arg>${type}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'email'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["type"]}</arg>
<arg>${type}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'national_registration'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["type"]}</arg>
<arg>${type}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["key"]["type"]}</arg>
<arg>${type}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:39:47.302" endtime="20210322 02:39:47.302"></status>
</kw>
<status status="PASS" starttime="20210322 02:39:47.301" endtime="20210322 02:39:47.302"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando Valor da chave PIX</arg>
</arguments>
<msg timestamp="20210322 02:39:47.302" level="INFO">Validando Valor da chave PIX</msg>
<status status="PASS" starttime="20210322 02:39:47.302" endtime="20210322 02:39:47.302"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${type}' == 'evp'</arg>
<arg>Should Not Be Empty</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'phone'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${phone_pix}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'email'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${email_pix}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'national_registration'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${national_registration}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${email_pix}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:39:47.303" endtime="20210322 02:39:47.303"></status>
</kw>
<status status="PASS" starttime="20210322 02:39:47.302" endtime="20210322 02:39:47.303"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando dados da conta</arg>
</arguments>
<msg timestamp="20210322 02:39:47.304" level="INFO">Validando dados da conta</msg>
<status status="PASS" starttime="20210322 02:39:47.304" endtime="20210322 02:39:47.304"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["id"]}</arg>
<arg>${account_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:39:47.304" endtime="20210322 02:39:47.304"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["marketplace"]}</arg>
<arg>${marketplace_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:39:47.304" endtime="20210322 02:39:47.305"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["holder"]}</arg>
<arg>${holder_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:39:47.305" endtime="20210322 02:39:47.305"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["number"]}</arg>
<arg>${account_number}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:39:47.305" endtime="20210322 02:39:47.306"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["routing_number"]}</arg>
<arg>${account_routing_number}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:39:47.306" endtime="20210322 02:39:47.306"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["type"]}</arg>
<arg>CACC</arg>
</arguments>
<status status="PASS" starttime="20210322 02:39:47.306" endtime="20210322 02:39:47.307"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar Proprietário da Account Owner</arg>
</arguments>
<msg timestamp="20210322 02:39:47.307" level="INFO">Validar Proprietário da Account Owner</msg>
<status status="PASS" starttime="20210322 02:39:47.307" endtime="20210322 02:39:47.307"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${holder_type}' == 'individual'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["account"]["owner"]["name"]}</arg>
<arg>${holder_name}</arg>
<arg>ELSE IF</arg>
<arg>'${holder_type}' == 'business'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["account"]["owner"]["name"]}</arg>
<arg>${legal_name}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["account"]["owner"]["name"]}</arg>
<arg>${holder_name}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:39:47.308" endtime="20210322 02:39:47.308"></status>
</kw>
<status status="PASS" starttime="20210322 02:39:47.307" endtime="20210322 02:39:47.308"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar national_registration da Account Owner</arg>
</arguments>
<msg timestamp="20210322 02:39:47.308" level="INFO">Validar national_registration da Account Owner</msg>
<status status="PASS" starttime="20210322 02:39:47.308" endtime="20210322 02:39:47.308"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${holder_type}' == 'individual'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["account"]["owner"]["national_registration"]}</arg>
<arg>${national_registration}</arg>
<arg>ELSE IF</arg>
<arg>'${holder_type}' == 'business'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["account"]["owner"]["national_registration"]}</arg>
<arg>${national_registration}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["account"]["owner"]["national_registration"]}</arg>
<arg>${national_registration}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:39:47.309" endtime="20210322 02:39:47.309"></status>
</kw>
<status status="PASS" starttime="20210322 02:39:47.308" endtime="20210322 02:39:47.309"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar Holder Type do Account Owner</arg>
</arguments>
<msg timestamp="20210322 02:39:47.309" level="INFO">Validar Holder Type do Account Owner</msg>
<status status="PASS" starttime="20210322 02:39:47.309" endtime="20210322 02:39:47.309"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${holder_type}' == 'individual'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["account"]["owner"]["type"]}</arg>
<arg>${holder_type}</arg>
<arg>ELSE IF</arg>
<arg>'${holder_type}' == 'business'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["account"]["owner"]["type"]}</arg>
<arg>${holder_type}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["account"]["owner"]["type"]}</arg>
<arg>${holder_type}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:39:47.310" endtime="20210322 02:39:47.310"></status>
</kw>
<status status="PASS" starttime="20210322 02:39:47.310" endtime="20210322 02:39:47.310"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar PSP</arg>
</arguments>
<msg timestamp="20210322 02:39:47.311" level="INFO">Validar PSP</msg>
<status status="PASS" starttime="20210322 02:39:47.311" endtime="20210322 02:39:47.311"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["psp"]["code"]}</arg>
<arg>19468242</arg>
</arguments>
<status status="PASS" starttime="20210322 02:39:47.311" endtime="20210322 02:39:47.311"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["psp"]["name"]}</arg>
<arg>Zoop Tecnologia e Meios de Pagamento S.A.</arg>
</arguments>
<status status="PASS" starttime="20210322 02:39:47.311" endtime="20210322 02:39:47.311"></status>
</kw>
<status status="PASS" starttime="20210322 02:39:47.295" endtime="20210322 02:39:47.312"></status>
</kw>
<kw name="reenviar verification code" library="pix_dict_resend_verification_code">
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 02:39:47.313" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 02:39:47.312" endtime="20210322 02:39:47.313"></status>
</kw>
<status status="PASS" starttime="20210322 02:39:47.312" endtime="20210322 02:39:47.313"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:39:47.313" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 02:39:47.313" endtime="20210322 02:39:47.313"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries/${entry_external_key}/ownership/resend</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:39:47.314" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/a390fc4fcb0f4f03b7772a200abcf5ff/accounts/0d237e7746b6451788033a75c31caae6/entries/ac6b3d493e4d41c6ac7b6499619cc2c3/ownership/resend, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data=None 
json=None</msg>
<msg timestamp="20210322 02:39:47.891" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:39:47.313" endtime="20210322 02:39:47.891"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:39:47.892" level="INFO">{'message': 'Ownership verification code recreated and sent successfully'}</msg>
<status status="PASS" starttime="20210322 02:39:47.891" endtime="20210322 02:39:47.892"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:39:47.892" level="INFO">67f6a95a4ca8d45c</msg>
<status status="PASS" starttime="20210322 02:39:47.892" endtime="20210322 02:39:47.892"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 02:39:47.893" level="INFO">200</msg>
<status status="PASS" starttime="20210322 02:39:47.892" endtime="20210322 02:39:47.893"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:39:47.893" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:39:47.893" endtime="20210322 02:39:47.893"></status>
</kw>
<status status="PASS" starttime="20210322 02:39:47.312" endtime="20210322 02:39:47.893"></status>
</kw>
<kw name="validar reenvio do codigo de verificação" library="asserts">
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 02:39:47.894" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:39:47.894" endtime="20210322 02:39:47.894"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["message"]}</arg>
<arg>Ownership verification code recreated and sent successfully</arg>
</arguments>
<status status="PASS" starttime="20210322 02:39:47.894" endtime="20210322 02:39:47.895"></status>
</kw>
<status status="PASS" starttime="20210322 02:39:47.893" endtime="20210322 02:39:47.895"></status>
</kw>
<kw name="buscar verification code" library="pix_dict_verification_code">
<arguments>
<arg>${holder_external_key}</arg>
<arg>${account_external_key}</arg>
<arg>${entry_external_key}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 02:39:47.896" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 02:39:47.895" endtime="20210322 02:39:47.896"></status>
</kw>
<status status="PASS" starttime="20210322 02:39:47.895" endtime="20210322 02:39:47.896"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/admin/internal_operation/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries/${entry_external_key}/code</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:39:47.896" level="INFO">GET Request using : uri=/admin/internal_operation/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/a390fc4fcb0f4f03b7772a200abcf5ff/accounts/0d237e7746b6451788033a75c31caae6/entries/ac6b3d493e4d41c6ac7b6499619cc2c3/code, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 02:39:48.497" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:39:47.896" endtime="20210322 02:39:48.497"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:39:48.498" level="INFO">{'code': '0240'}</msg>
<status status="PASS" starttime="20210322 02:39:48.497" endtime="20210322 02:39:48.498"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:39:48.499" level="INFO">7d29f36340f1dff0</msg>
<status status="PASS" starttime="20210322 02:39:48.499" endtime="20210322 02:39:48.500"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 02:39:48.501" level="INFO">200</msg>
<status status="PASS" starttime="20210322 02:39:48.500" endtime="20210322 02:39:48.501"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:39:48.502" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:39:48.501" endtime="20210322 02:39:48.502"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["code"]}</arg>
</arguments>
<assign>
<var>${verification_code}</var>
</assign>
<msg timestamp="20210322 02:39:48.504" level="INFO">${verification_code} = 0240</msg>
<status status="PASS" starttime="20210322 02:39:48.502" endtime="20210322 02:39:48.504"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${verification_code}</arg>
</arguments>
<msg timestamp="20210322 02:39:48.505" level="INFO">${verification_code} = 0240</msg>
<status status="PASS" starttime="20210322 02:39:48.505" endtime="20210322 02:39:48.505"></status>
</kw>
<status status="PASS" starttime="20210322 02:39:47.895" endtime="20210322 02:39:48.506"></status>
</kw>
<kw name="confirmar propriedade da chave pix" library="pix_dict_confirm_propriety">
<arguments>
<arg>${verification_code}</arg>
<arg>${holder_external_key}</arg>
<arg>${account_external_key}</arg>
<arg>${entry_external_key}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 02:39:48.509" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 02:39:48.508" endtime="20210322 02:39:48.510"></status>
</kw>
<status status="PASS" starttime="20210322 02:39:48.507" endtime="20210322 02:39:48.510"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:39:48.511" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 02:39:48.510" endtime="20210322 02:39:48.511"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"code": "${verification_code}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 02:39:48.512" level="INFO">${body} = { "code": "0240" }</msg>
<status status="PASS" starttime="20210322 02:39:48.511" endtime="20210322 02:39:48.512"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries/${entry_external_key}/ownership</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:39:48.513" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/a390fc4fcb0f4f03b7772a200abcf5ff/accounts/0d237e7746b6451788033a75c31caae6/entries/ac6b3d493e4d41c6ac7b6499619cc2c3/ownership, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "code": "0240" } 
json=None</msg>
<msg timestamp="20210322 02:39:50.161" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:39:48.512" endtime="20210322 02:39:50.161"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:39:50.162" level="INFO">{'id': 'ac6b3d493e4d41c6ac7b6499619cc2c3', 'status': 'active', 'created_at': '2021-03-22T02:39:48.136', 'updated_at': '2021-03-22T02:39:51.022', 'key': {'value': 'gustavo-henrique34@duarte.br', 'type': 'email'}, 'account': {'id': '0d237e7746b6451788033a75c31caae6', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': 'a390fc4fcb0f4f03b7772a200abcf5ff', 'owner': {'name': 'Holder de teste', 'national_registration': '52103647807', 'type': 'individual'}, 'routing_number': '001', 'number': '6478578522', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}, 'resource': 'pix.entry'}</msg>
<status status="PASS" starttime="20210322 02:39:50.161" endtime="20210322 02:39:50.162"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:39:50.162" level="INFO">48c52c08f17a10d9</msg>
<status status="PASS" starttime="20210322 02:39:50.162" endtime="20210322 02:39:50.162"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 02:39:50.163" level="INFO">201</msg>
<status status="PASS" starttime="20210322 02:39:50.162" endtime="20210322 02:39:50.163"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:39:50.163" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:39:50.163" endtime="20210322 02:39:50.163"></status>
</kw>
<status status="PASS" starttime="20210322 02:39:48.506" endtime="20210322 02:39:50.163"></status>
</kw>
<kw name="validar ativação da chave de endereçamento" library="asserts">
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["status"]}</arg>
<arg>active</arg>
</arguments>
<status status="PASS" starttime="20210322 02:39:50.164" endtime="20210322 02:39:50.164"></status>
</kw>
<status status="PASS" starttime="20210322 02:39:50.164" endtime="20210322 02:39:50.165"></status>
</kw>
<doc>Fluxo Alternativo</doc>
<tags>
<tag>smoke_test</tag>
</tags>
<status status="PASS" starttime="20210322 02:39:43.473" endtime="20210322 02:39:50.165" critical="yes"></status>
</test>
<test id="s1-s1-s2-t4" name="Cenário: Confirmar proprierdade de de chave de endereçamento utilizando o código de verificação inválido">
<kw name="Random Number" library="FakerLibrary">
<doc>Returns a random number with 1 digit (default, when digits==None),
a random number with 0 to given number of digits, or a random number
with given number to given number of digits (when ``fix_len==True``).</doc>
<arguments>
<arg>digits=8</arg>
<arg>fix_len=True</arg>
</arguments>
<assign>
<var>${phone}</var>
</assign>
<msg timestamp="20210322 02:39:50.166" level="INFO">${phone} = 45157474</msg>
<status status="PASS" starttime="20210322 02:39:50.166" endtime="20210322 02:39:50.166"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>+55219${phone}</arg>
</arguments>
<assign>
<var>${phone_pix}</var>
</assign>
<msg timestamp="20210322 02:39:50.167" level="INFO">${phone_pix} = +5521945157474</msg>
<status status="PASS" starttime="20210322 02:39:50.167" endtime="20210322 02:39:50.167"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${phone_pix}</arg>
</arguments>
<msg timestamp="20210322 02:39:50.168" level="INFO">${phone_pix} = +5521945157474</msg>
<status status="PASS" starttime="20210322 02:39:50.167" endtime="20210322 02:39:50.168"></status>
</kw>
<kw name="criar holder individual ativo" library="accreditation_create_holder_active">
<kw name="conectar accreditation" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accreditation</arg>
<arg>url=${accreditation_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 02:39:50.169" level="INFO">Creating Session using : alias=accreditation, url=https://banking-accreditation-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 02:39:50.168" endtime="20210322 02:39:50.169"></status>
</kw>
<status status="PASS" starttime="20210322 02:39:50.168" endtime="20210322 02:39:50.169"></status>
</kw>
<kw name="Cpf" library="FakerLibrary">
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 02:39:50.170" level="INFO">${national_registration} = 075.463.928-29</msg>
<status status="PASS" starttime="20210322 02:39:50.169" endtime="20210322 02:39:50.170"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${national_registration}</arg>
<arg>.</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 02:39:50.170" level="INFO">${national_registration} = 075463928-29</msg>
<status status="PASS" starttime="20210322 02:39:50.170" endtime="20210322 02:39:50.170"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${national_registration}</arg>
<arg>-</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 02:39:50.171" level="INFO">${national_registration} = 07546392829</msg>
<status status="PASS" starttime="20210322 02:39:50.171" endtime="20210322 02:39:50.171"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${national_registration}</arg>
</arguments>
<msg timestamp="20210322 02:39:50.171" level="INFO">${national_registration} = 07546392829</msg>
<status status="PASS" starttime="20210322 02:39:50.171" endtime="20210322 02:39:50.172"></status>
</kw>
<kw name="Rg" library="FakerLibrary">
<doc>Brazilian RG, return plain numbers.
Check:  https://www.ngmatematica.com/2014/02/como-determinar-o-digito-verificador-do.html</doc>
<assign>
<var>${identity_card}</var>
</assign>
<msg timestamp="20210322 02:39:50.172" level="INFO">${identity_card} = 764523016</msg>
<status status="PASS" starttime="20210322 02:39:50.172" endtime="20210322 02:39:50.172"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${identity_card}</arg>
</arguments>
<msg timestamp="20210322 02:39:50.172" level="INFO">${identity_card} = 764523016</msg>
<status status="PASS" starttime="20210322 02:39:50.172" endtime="20210322 02:39:50.172"></status>
</kw>
<kw name="criar holder individual" library="accreditation_post_holder_individual">
<arguments>
<arg>holder_type=individual</arg>
<arg>holder_name=${holder_name}</arg>
<arg>email=${email}</arg>
<arg>national_registration=${national_registration}</arg>
<arg>revenue=${revenue}</arg>
<arg>birthday=${birthday}</arg>
<arg>mothers_name=${mothers_name}</arg>
<arg>identity_card=${identity_card}</arg>
<arg>pep=false</arg>
<arg>cbo=${cbo}</arg>
</arguments>
<kw name="conectar accreditation" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accreditation</arg>
<arg>url=${accreditation_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 02:39:50.174" level="INFO">Creating Session using : alias=accreditation, url=https://banking-accreditation-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 02:39:50.174" endtime="20210322 02:39:50.174"></status>
</kw>
<status status="PASS" starttime="20210322 02:39:50.173" endtime="20210322 02:39:50.174"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_type}</arg>
</arguments>
<msg timestamp="20210322 02:39:50.175" level="INFO">${holder_type} = individual</msg>
<status status="PASS" starttime="20210322 02:39:50.174" endtime="20210322 02:39:50.175"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_name}</arg>
</arguments>
<msg timestamp="20210322 02:39:50.175" level="INFO">${holder_name} = Holder de teste</msg>
<status status="PASS" starttime="20210322 02:39:50.175" endtime="20210322 02:39:50.175"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:39:50.176" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 02:39:50.175" endtime="20210322 02:39:50.176"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "${holder_type}",</arg>
<arg>"name": "${holder_name}",</arg>
<arg>"email": "${email}",</arg>
<arg>"national_registration": "${national_registration}",</arg>
<arg>"revenue": ${revenue},</arg>
<arg>"birthday": "${birthday}",</arg>
<arg>"mothers_name": "${mothers_name}",</arg>
<arg>"identity_card": "${identity_card}",</arg>
<arg>"pep": false,</arg>
<arg>"cbo": ${cbo}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 02:39:50.176" level="INFO">${body} = { "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "07546392829", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder",...</msg>
<status status="PASS" starttime="20210322 02:39:50.176" endtime="20210322 02:39:50.176"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:39:50.177" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "07546392829", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder", "identity_card": "764523016", "pep": false, "cbo": 821450 } 
json=None</msg>
<msg timestamp="20210322 02:39:50.814" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:39:50.177" endtime="20210322 02:39:50.814"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:39:50.814" level="INFO">{'id': 'c596a9cfea6b4b9c99ced5f1d579a2c1', 'name': 'Holder de teste', 'revenue': 5500.0, 'email': 'teste@teste.com.br', 'status': 'waiting_info_and_documents', 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'marketplace_name': 'Marketplace de Teste', 'created_at': '2021-03-22T02:39:51.652725', 'updated_at': '2021-03-22T02:39:51.652727', 'type': 'individual', 'national_registration': '07546392829', 'birthday': '1988-04-23', 'mothers_name': 'Mãe do Holder', 'identity_card': '764523016', 'pep': False, 'cbo': '821450', '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/c596a9cfea6b4b9c99ced5f1d579a2c1', 'type': 'GET'}, 'phones': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/c596a9cfea6b4b9c99ced5f1d579a2c1/phones', 'type': 'GET'}, 'addresses': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/c596a9cfea6b4b9c99ced5f1d579a2c1/addresses', 'type': 'GET'}, 'documents': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/c596a9cfea6b4b9c99ced5f1d579a2c1/documents', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 02:39:50.814" endtime="20210322 02:39:50.814"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:39:50.815" level="INFO">587f3671a11afa26</msg>
<status status="PASS" starttime="20210322 02:39:50.815" endtime="20210322 02:39:50.815"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${body}</arg>
</arguments>
<msg timestamp="20210322 02:39:50.815" level="INFO">{ "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "07546392829", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder", "identity_card": "764523016", "pep": false, "cbo": 821450 }</msg>
<status status="PASS" starttime="20210322 02:39:50.815" endtime="20210322 02:39:50.816"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:39:50.816" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:39:50.816" endtime="20210322 02:39:50.816"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${holder_external_key}</var>
</assign>
<msg timestamp="20210322 02:39:50.817" level="INFO">${holder_external_key} = c596a9cfea6b4b9c99ced5f1d579a2c1</msg>
<status status="PASS" starttime="20210322 02:39:50.816" endtime="20210322 02:39:50.817"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_external_key}</arg>
</arguments>
<msg timestamp="20210322 02:39:50.817" level="INFO">${holder_external_key} = c596a9cfea6b4b9c99ced5f1d579a2c1</msg>
<status status="PASS" starttime="20210322 02:39:50.817" endtime="20210322 02:39:50.817"></status>
</kw>
<status status="PASS" starttime="20210322 02:39:50.173" endtime="20210322 02:39:50.817"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_name}</arg>
</arguments>
<msg timestamp="20210322 02:39:50.819" level="INFO">${holder_name} = Holder de teste</msg>
<status status="PASS" starttime="20210322 02:39:50.818" endtime="20210322 02:39:50.819"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 02:39:50.820" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:39:50.819" endtime="20210322 02:39:50.820"></status>
</kw>
<kw name="criar holder phone" library="accreditation_post_holder_phone">
<arguments>
<arg>21</arg>
<arg>51</arg>
<arg>996221236</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:39:50.821" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 02:39:50.820" endtime="20210322 02:39:50.821"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"area_code": "${phone_area_code}",</arg>
<arg>"country_code": "${phone_country_code}",</arg>
<arg>"number": "${phone_number}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 02:39:50.821" level="INFO">${body} = { "area_code": "21", "country_code": "51", "number": "996221236" }</msg>
<status status="PASS" starttime="20210322 02:39:50.821" endtime="20210322 02:39:50.821"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/phones</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:39:50.822" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/c596a9cfea6b4b9c99ced5f1d579a2c1/phones, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "area_code": "21", "country_code": "51", "number": "996221236" } 
json=None</msg>
<msg timestamp="20210322 02:39:51.043" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:39:50.822" endtime="20210322 02:39:51.043"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:39:51.043" level="INFO">{'id': '4d70637120ef4398ab46a982d97afc88', 'area_code': '21', 'country_code': '51', 'number': '996221236', 'main': True, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/c596a9cfea6b4b9c99ced5f1d579a2c1/phones/4d70637120ef4398ab46a982d97afc88', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/c596a9cfea6b4b9c99ced5f1d579a2c1', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 02:39:51.043" endtime="20210322 02:39:51.043"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:39:51.044" level="INFO">959c5e1430c774fb</msg>
<status status="PASS" starttime="20210322 02:39:51.044" endtime="20210322 02:39:51.044"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:39:51.044" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:39:51.044" endtime="20210322 02:39:51.044"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${phone_external_key}</var>
</assign>
<msg timestamp="20210322 02:39:51.045" level="INFO">${phone_external_key} = 4d70637120ef4398ab46a982d97afc88</msg>
<status status="PASS" starttime="20210322 02:39:51.045" endtime="20210322 02:39:51.045"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${phone_external_key}</arg>
</arguments>
<msg timestamp="20210322 02:39:51.046" level="INFO">${phone_external_key} = 4d70637120ef4398ab46a982d97afc88</msg>
<status status="PASS" starttime="20210322 02:39:51.046" endtime="20210322 02:39:51.046"></status>
</kw>
<status status="PASS" starttime="20210322 02:39:50.820" endtime="20210322 02:39:51.046"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 02:39:51.047" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:39:51.046" endtime="20210322 02:39:51.047"></status>
</kw>
<kw name="criar holder address" library="accreditation_post_holder_address">
<arguments>
<arg>Rio de Janeiro</arg>
<arg>Rio de Janeiro</arg>
<arg>Brasil</arg>
<arg>Bairro de Testes</arg>
<arg>Rua de Testes</arg>
<arg>90</arg>
<arg>apto 200</arg>
<arg>21550987</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:39:51.048" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 02:39:51.048" endtime="20210322 02:39:51.048"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"city": "${city}",</arg>
<arg>"state": "${state}",</arg>
<arg>"country": "${country}",</arg>
<arg>"neighborhood": "${neighborhood}",</arg>
<arg>"street": "${street}",</arg>
<arg>"number": "${number}",</arg>
<arg>"complement": "${complement}",</arg>
<arg>"postal_code": "${postal_code}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 02:39:51.049" level="INFO">${body} = { "city": "Rio de Janeiro", "state": "Rio de Janeiro", "country": "Brasil", "neighborhood": "Bairro de Testes", "street": "Rua de Testes", "number": "90", "complement": "apto 200", "postal_code": "215...</msg>
<status status="PASS" starttime="20210322 02:39:51.048" endtime="20210322 02:39:51.049"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/addresses</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:39:51.050" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/c596a9cfea6b4b9c99ced5f1d579a2c1/addresses, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "city": "Rio de Janeiro", "state": "Rio de Janeiro", "country": "Brasil", "neighborhood": "Bairro de Testes", "street": "Rua de Testes", "number": "90", "complement": "apto 200", "postal_code": "21550987" } 
json=None</msg>
<msg timestamp="20210322 02:39:51.286" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:39:51.049" endtime="20210322 02:39:51.286"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:39:51.287" level="INFO">{'id': 'a77bf9b352064ef4a7b63d208a7350d0', 'street': 'Rua de Testes', 'number': '90', 'city': 'Rio de Janeiro', 'complement': 'apto 200', 'state': 'Rio de Janeiro', 'neighborhood': 'Bairro de Testes', 'postal_code': '21550987', 'country': 'Brasil', 'main': True, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/c596a9cfea6b4b9c99ced5f1d579a2c1/addresses/a77bf9b352064ef4a7b63d208a7350d0', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/c596a9cfea6b4b9c99ced5f1d579a2c1', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 02:39:51.286" endtime="20210322 02:39:51.287"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:39:51.287" level="INFO">13a3183ee641a180</msg>
<status status="PASS" starttime="20210322 02:39:51.287" endtime="20210322 02:39:51.287"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:39:51.288" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:39:51.287" endtime="20210322 02:39:51.288"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${address_external_key}</var>
</assign>
<msg timestamp="20210322 02:39:51.289" level="INFO">${address_external_key} = a77bf9b352064ef4a7b63d208a7350d0</msg>
<status status="PASS" starttime="20210322 02:39:51.288" endtime="20210322 02:39:51.289"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${address_external_key}</arg>
</arguments>
<msg timestamp="20210322 02:39:51.289" level="INFO">${address_external_key} = a77bf9b352064ef4a7b63d208a7350d0</msg>
<status status="PASS" starttime="20210322 02:39:51.289" endtime="20210322 02:39:51.289"></status>
</kw>
<status status="PASS" starttime="20210322 02:39:51.047" endtime="20210322 02:39:51.289"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 02:39:51.290" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:39:51.290" endtime="20210322 02:39:51.290"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>SELFIE</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:39:51.291" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 02:39:51.291" endtime="20210322 02:39:51.291"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 02:39:51.291" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 02:39:51.293" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 02:39:51.291" endtime="20210322 02:39:51.293"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:39:51.294" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/c596a9cfea6b4b9c99ced5f1d579a2c1/documents?type=SELFIE, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 02:39:51.594" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:39:51.293" endtime="20210322 02:39:51.594"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:39:51.594" level="INFO">{'id': '8af75d227470465190fc9d9feffabc20', 'document_type': 'selfie', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/c596a9cfea6b4b9c99ced5f1d579a2c1/documents/8af75d227470465190fc9d9feffabc20', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/c596a9cfea6b4b9c99ced5f1d579a2c1', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/c596a9cfea6b4b9c99ced5f1d579a2c1/documents/8af75d227470465190fc9d9feffabc20/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 02:39:51.594" endtime="20210322 02:39:51.595"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:39:51.595" level="INFO">0275fc2f00f59e6e</msg>
<status status="PASS" starttime="20210322 02:39:51.595" endtime="20210322 02:39:51.595"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:39:51.596" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:39:51.595" endtime="20210322 02:39:51.596"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 02:39:51.596" level="INFO">${document_external_key} = 8af75d227470465190fc9d9feffabc20</msg>
<status status="PASS" starttime="20210322 02:39:51.596" endtime="20210322 02:39:51.596"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 02:39:51.596" level="INFO">${document_external_key} = 8af75d227470465190fc9d9feffabc20</msg>
<status status="PASS" starttime="20210322 02:39:51.596" endtime="20210322 02:39:51.597"></status>
</kw>
<status status="PASS" starttime="20210322 02:39:51.290" endtime="20210322 02:39:51.597"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 02:39:51.597" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:39:51.597" endtime="20210322 02:39:51.597"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>RG_FRENTE</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:39:51.598" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 02:39:51.598" endtime="20210322 02:39:51.598"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 02:39:51.598" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 02:39:51.599" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 02:39:51.598" endtime="20210322 02:39:51.599"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:39:51.600" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/c596a9cfea6b4b9c99ced5f1d579a2c1/documents?type=RG_FRENTE, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 02:39:51.930" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:39:51.599" endtime="20210322 02:39:51.930"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:39:51.931" level="INFO">{'id': '02d5f971d3fe49e0804db32fdc776fa5', 'document_type': 'rg_frente', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/c596a9cfea6b4b9c99ced5f1d579a2c1/documents/02d5f971d3fe49e0804db32fdc776fa5', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/c596a9cfea6b4b9c99ced5f1d579a2c1', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/c596a9cfea6b4b9c99ced5f1d579a2c1/documents/02d5f971d3fe49e0804db32fdc776fa5/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 02:39:51.931" endtime="20210322 02:39:51.931"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:39:51.931" level="INFO">51e63f7efe67355d</msg>
<status status="PASS" starttime="20210322 02:39:51.931" endtime="20210322 02:39:51.931"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:39:51.932" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:39:51.931" endtime="20210322 02:39:51.932"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 02:39:51.932" level="INFO">${document_external_key} = 02d5f971d3fe49e0804db32fdc776fa5</msg>
<status status="PASS" starttime="20210322 02:39:51.932" endtime="20210322 02:39:51.932"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 02:39:51.933" level="INFO">${document_external_key} = 02d5f971d3fe49e0804db32fdc776fa5</msg>
<status status="PASS" starttime="20210322 02:39:51.933" endtime="20210322 02:39:51.933"></status>
</kw>
<status status="PASS" starttime="20210322 02:39:51.597" endtime="20210322 02:39:51.933"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 02:39:51.933" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:39:51.933" endtime="20210322 02:39:51.933"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>RG_VERSO</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:39:51.934" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 02:39:51.934" endtime="20210322 02:39:51.934"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 02:39:51.935" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 02:39:51.936" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 02:39:51.935" endtime="20210322 02:39:51.936"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:39:51.937" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/c596a9cfea6b4b9c99ced5f1d579a2c1/documents?type=RG_VERSO, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 02:39:52.260" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:39:51.936" endtime="20210322 02:39:52.260"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:39:52.263" level="INFO">{'id': '04d7b96d139e430ba26e93ece299e9c3', 'document_type': 'rg_verso', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/c596a9cfea6b4b9c99ced5f1d579a2c1/documents/04d7b96d139e430ba26e93ece299e9c3', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/c596a9cfea6b4b9c99ced5f1d579a2c1', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/c596a9cfea6b4b9c99ced5f1d579a2c1/documents/04d7b96d139e430ba26e93ece299e9c3/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 02:39:52.261" endtime="20210322 02:39:52.264"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:39:52.265" level="INFO">e3157cfcd8d0cdfa</msg>
<status status="PASS" starttime="20210322 02:39:52.264" endtime="20210322 02:39:52.265"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:39:52.267" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:39:52.266" endtime="20210322 02:39:52.267"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 02:39:52.270" level="INFO">${document_external_key} = 04d7b96d139e430ba26e93ece299e9c3</msg>
<status status="PASS" starttime="20210322 02:39:52.268" endtime="20210322 02:39:52.270"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 02:39:52.272" level="INFO">${document_external_key} = 04d7b96d139e430ba26e93ece299e9c3</msg>
<status status="PASS" starttime="20210322 02:39:52.271" endtime="20210322 02:39:52.272"></status>
</kw>
<status status="PASS" starttime="20210322 02:39:51.934" endtime="20210322 02:39:52.273"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 02:39:52.274" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:39:52.273" endtime="20210322 02:39:52.274"></status>
</kw>
<kw name="solicitar aprovação do holder" library="accreditation_request_approval">
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:39:52.277" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 02:39:52.276" endtime="20210322 02:39:52.277"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/approval</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:39:52.278" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/c596a9cfea6b4b9c99ced5f1d579a2c1/approval, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data=None 
json=None</msg>
<msg timestamp="20210322 02:39:52.585" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:39:52.277" endtime="20210322 02:39:52.586"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:39:52.587" level="INFO">{'message': 'Approval request accepted successfully. Processing analysis'}</msg>
<status status="PASS" starttime="20210322 02:39:52.586" endtime="20210322 02:39:52.588"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:39:52.589" level="INFO">298b2dabc3cb6402</msg>
<status status="PASS" starttime="20210322 02:39:52.588" endtime="20210322 02:39:52.589"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:39:52.591" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:39:52.590" endtime="20210322 02:39:52.591"></status>
</kw>
<status status="PASS" starttime="20210322 02:39:52.275" endtime="20210322 02:39:52.591"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 02:39:52.592" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:39:52.592" endtime="20210322 02:39:52.592"></status>
</kw>
<kw name="recebendo notificação de aprovação" library="accreditation_risk_notification">
<kw name="Uuid 4" library="FakerLibrary">
<doc>Generates a random UUID4 string.
:param cast_to: Specify what type the UUID should be cast to. Default is `str`
:type cast_to: callable</doc>
<assign>
<var>${assessment_id}</var>
</assign>
<msg timestamp="20210322 02:39:52.594" level="INFO">${assessment_id} = 64548fa0-969f-42b1-a91d-05d84a5420c8</msg>
<status status="PASS" starttime="20210322 02:39:52.594" endtime="20210322 02:39:52.594"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>year</arg>
</arguments>
<assign>
<var>${year}</var>
</assign>
<msg timestamp="20210322 02:39:52.595" level="INFO">${year} = 2021</msg>
<status status="PASS" starttime="20210322 02:39:52.595" endtime="20210322 02:39:52.595"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>month</arg>
</arguments>
<assign>
<var>${month}</var>
</assign>
<msg timestamp="20210322 02:39:52.596" level="INFO">${month} = 03</msg>
<status status="PASS" starttime="20210322 02:39:52.595" endtime="20210322 02:39:52.596"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>day</arg>
</arguments>
<assign>
<var>${day}</var>
</assign>
<msg timestamp="20210322 02:39:52.597" level="INFO">${day} = 22</msg>
<status status="PASS" starttime="20210322 02:39:52.596" endtime="20210322 02:39:52.597"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:39:52.598" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 02:39:52.597" endtime="20210322 02:39:52.598"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "risk.assessment.result",</arg>
<arg>"resource": "business.holder",</arg>
<arg>"created_at": "${year}-${month}-${day} 15:28:56.747Z",</arg>
<arg>"marketplace_id": "${marketplace_external_key}",</arg>
<arg>"object": {</arg>
<arg>"result": "APPROVED",</arg>
<arg>"holder_id": "${holder_external_key}",</arg>
<arg>"applicant_id": "${application_external_key}",</arg>
<arg>"assessment_id": "${assessment_id}"</arg>
<arg>}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 02:39:52.599" level="INFO">${body} = { "type": "risk.assessment.result", "resource": "business.holder", "created_at": "2021-03-22 15:28:56.747Z", "marketplace_id": "f71a8951368a4cc085cf7875ff44e61c", "object": { "result": "APPROVED", "ho...</msg>
<status status="PASS" starttime="20210322 02:39:52.598" endtime="20210322 02:39:52.599"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/admin/internal_operation/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/registration/approval</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:39:52.600" level="INFO">POST Request using : uri=/admin/internal_operation/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/c596a9cfea6b4b9c99ced5f1d579a2c1/registration/approval, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "risk.assessment.result", "resource": "business.holder", "created_at": "2021-03-22 15:28:56.747Z", "marketplace_id": "f71a8951368a4cc085cf7875ff44e61c", "object": { "result": "APPROVED", "holder_id": "c596a9cfea6b4b9c99ced5f1d579a2c1", "applicant_id": "bcc25a6751c14b52af1340d40dba78c5", "assessment_id": "64548fa0-969f-42b1-a91d-05d84a5420c8" } } 
json=None</msg>
<msg timestamp="20210322 02:39:52.806" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:39:52.599" endtime="20210322 02:39:52.806"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:39:52.807" level="INFO">{'message': 'Holder approved successfully'}</msg>
<status status="PASS" starttime="20210322 02:39:52.807" endtime="20210322 02:39:52.807"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:39:52.808" level="INFO">dc0132b6aa2eba09</msg>
<status status="PASS" starttime="20210322 02:39:52.808" endtime="20210322 02:39:52.808"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:39:52.809" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:39:52.809" endtime="20210322 02:39:52.810"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 02:39:52.811" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:39:52.810" endtime="20210322 02:39:52.811"></status>
</kw>
<status status="PASS" starttime="20210322 02:39:52.593" endtime="20210322 02:39:52.811"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 02:39:52.812" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:39:52.811" endtime="20210322 02:39:52.812"></status>
</kw>
<kw name="buscar account por holder" library="accounts_get_accounts_by_holder">
<kw name="conectar accounts" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accounts</arg>
<arg>url=${account_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 02:39:52.813" level="INFO">Creating Session using : alias=accounts, url=https://banking-accounts-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 02:39:52.813" endtime="20210322 02:39:52.814"></status>
</kw>
<status status="PASS" starttime="20210322 02:39:52.812" endtime="20210322 02:39:52.814"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accounts</arg>
<arg>/marketplaces/${marketplace_external_key}/holders/${holder_external_key}/accounts</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:39:52.815" level="INFO">GET Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/holders/c596a9cfea6b4b9c99ced5f1d579a2c1/accounts, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 02:39:53.404" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:39:52.814" endtime="20210322 02:39:53.404"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:39:53.405" level="INFO">{'items': [{'id': '9f36357d091d47b888ff0f9a37158c87', 'holder': 'c596a9cfea6b4b9c99ced5f1d579a2c1', 'balance': '0.00', 'currency': 'BRL', 'routing_number': '001', 'number': '5177788832', 'status': 'active', 'metadata': {}, 'created_at': '2021-03-22T05:39:53.634659', 'updated_at': '2021-03-22T05:39:53.634659', 'primary': True, 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'uri': '/v2/marketplaces/f71a8951368a4cc085cf7875ff44e61c/accounts/9f36357d091d47b888ff0f9a37158c87', 'resource': 'payment_account'}], 'has_more': False, 'limit': 100, 'total_pages': 1, 'page': 1, 'offset': 0, 'total': '1', 'query_count': '1'}</msg>
<status status="PASS" starttime="20210322 02:39:53.405" endtime="20210322 02:39:53.406"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:39:53.407" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:39:53.406" endtime="20210322 02:39:53.407"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["id"]}</arg>
</arguments>
<assign>
<var>${account_external_key}</var>
</assign>
<msg timestamp="20210322 02:39:53.408" level="INFO">${account_external_key} = 9f36357d091d47b888ff0f9a37158c87</msg>
<status status="PASS" starttime="20210322 02:39:53.407" endtime="20210322 02:39:53.408"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_external_key}</arg>
</arguments>
<msg timestamp="20210322 02:39:53.409" level="INFO">${account_external_key} = 9f36357d091d47b888ff0f9a37158c87</msg>
<status status="PASS" starttime="20210322 02:39:53.409" endtime="20210322 02:39:53.409"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["number"]}</arg>
</arguments>
<assign>
<var>${account_number}</var>
</assign>
<msg timestamp="20210322 02:39:53.409" level="INFO">${account_number} = 5177788832</msg>
<status status="PASS" starttime="20210322 02:39:53.409" endtime="20210322 02:39:53.409"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_number}</arg>
</arguments>
<msg timestamp="20210322 02:39:53.410" level="INFO">${account_number} = 5177788832</msg>
<status status="PASS" starttime="20210322 02:39:53.409" endtime="20210322 02:39:53.410"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["routing_number"]}</arg>
</arguments>
<assign>
<var>${account_routing_number}</var>
</assign>
<msg timestamp="20210322 02:39:53.410" level="INFO">${account_routing_number} = 001</msg>
<status status="PASS" starttime="20210322 02:39:53.410" endtime="20210322 02:39:53.410"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_routing_number}</arg>
</arguments>
<msg timestamp="20210322 02:39:53.411" level="INFO">${account_routing_number} = 001</msg>
<status status="PASS" starttime="20210322 02:39:53.410" endtime="20210322 02:39:53.411"></status>
</kw>
<status status="PASS" starttime="20210322 02:39:52.812" endtime="20210322 02:39:53.411"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 02:39:53.411" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:39:53.411" endtime="20210322 02:39:53.411"></status>
</kw>
<status status="PASS" starttime="20210322 02:39:50.168" endtime="20210322 02:39:53.411"></status>
</kw>
<kw name="criar chave pix" library="pix_dict_create_entry">
<arguments>
<arg>phone</arg>
<arg>${phone_pix}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 02:39:53.412" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 02:39:53.412" endtime="20210322 02:39:53.412"></status>
</kw>
<status status="PASS" starttime="20210322 02:39:53.412" endtime="20210322 02:39:53.413"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${type}</arg>
</arguments>
<msg timestamp="20210322 02:39:53.413" level="INFO">${type} = phone</msg>
<status status="PASS" starttime="20210322 02:39:53.413" endtime="20210322 02:39:53.413"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210322 02:39:53.413" level="INFO">${value} = +5521945157474</msg>
<status status="PASS" starttime="20210322 02:39:53.413" endtime="20210322 02:39:53.413"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:39:53.414" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 02:39:53.413" endtime="20210322 02:39:53.414"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "${type}",</arg>
<arg>"value": "${value}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 02:39:53.414" level="INFO">${body} = { "type": "phone", "value": "+5521945157474" }</msg>
<status status="PASS" starttime="20210322 02:39:53.414" endtime="20210322 02:39:53.414"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:39:53.415" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/c596a9cfea6b4b9c99ced5f1d579a2c1/accounts/9f36357d091d47b888ff0f9a37158c87/entries, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "phone", "value": "+5521945157474" } 
json=None</msg>
<msg timestamp="20210322 02:39:54.081" level="INFO">${response} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20210322 02:39:53.414" endtime="20210322 02:39:54.081"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:39:54.082" level="INFO">{'id': '2ef6d022bdcf4a099b754dd4a117d7e9', 'status': 'waiting_ownership_verification', 'created_at': '2021-03-22T02:39:54.933', 'updated_at': '2021-03-22T02:39:54.933', 'key': {'value': '+5521945157474', 'type': 'phone'}, 'account': {'id': '9f36357d091d47b888ff0f9a37158c87', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': 'c596a9cfea6b4b9c99ced5f1d579a2c1', 'owner': {'name': 'Holder de teste', 'national_registration': '07546392829', 'type': 'individual'}, 'routing_number': '001', 'number': '5177788832', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}, 'resource': 'pix.entry'}</msg>
<status status="PASS" starttime="20210322 02:39:54.081" endtime="20210322 02:39:54.082"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:39:54.083" level="INFO">0c1bd59048496736</msg>
<status status="PASS" starttime="20210322 02:39:54.083" endtime="20210322 02:39:54.084"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 02:39:54.085" level="INFO">202</msg>
<status status="PASS" starttime="20210322 02:39:54.084" endtime="20210322 02:39:54.085"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:39:54.086" level="INFO">${response} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20210322 02:39:54.085" endtime="20210322 02:39:54.086"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${entry_external_key}</var>
</assign>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:39:54.087" endtime="20210322 02:39:54.088"></status>
</kw>
<msg timestamp="20210322 02:39:54.088" level="INFO">${entry_external_key} = 2ef6d022bdcf4a099b754dd4a117d7e9</msg>
<status status="PASS" starttime="20210322 02:39:54.086" endtime="20210322 02:39:54.088"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${entry_external_key}</arg>
</arguments>
<msg timestamp="20210322 02:39:54.089" level="INFO">${entry_external_key} = 2ef6d022bdcf4a099b754dd4a117d7e9</msg>
<status status="PASS" starttime="20210322 02:39:54.089" endtime="20210322 02:39:54.089"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["key"]["value"]}</arg>
</arguments>
<assign>
<var>${entry_key_value}</var>
</assign>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["key"]["value"]}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:39:54.091" endtime="20210322 02:39:54.092"></status>
</kw>
<msg timestamp="20210322 02:39:54.092" level="INFO">${entry_key_value} = +5521945157474</msg>
<status status="PASS" starttime="20210322 02:39:54.091" endtime="20210322 02:39:54.092"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${entry_key_value}</arg>
</arguments>
<msg timestamp="20210322 02:39:54.093" level="INFO">${entry_key_value} = +5521945157474</msg>
<status status="PASS" starttime="20210322 02:39:54.092" endtime="20210322 02:39:54.093"></status>
</kw>
<status status="PASS" starttime="20210322 02:39:53.411" endtime="20210322 02:39:54.093"></status>
</kw>
<kw name="validar criação da chave pix" library="asserts">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando status_code</arg>
</arguments>
<msg timestamp="20210322 02:39:54.095" level="INFO">Validando status_code</msg>
<status status="PASS" starttime="20210322 02:39:54.095" endtime="20210322 02:39:54.095"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${type}' == 'evp'</arg>
<arg>Should Be Equal As Integers</arg>
<arg>${response.status_code}</arg>
<arg>201</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'phone'</arg>
<arg>Should Be Equal As Integers</arg>
<arg>${response.status_code}</arg>
<arg>202</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'email'</arg>
<arg>Should Be Equal As Integers</arg>
<arg>${response.status_code}</arg>
<arg>202</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'national_registration'</arg>
<arg>Should Be Equal As Integers</arg>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>202</arg>
</arguments>
<msg timestamp="20210322 02:39:54.097" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:39:54.097" endtime="20210322 02:39:54.097"></status>
</kw>
<status status="PASS" starttime="20210322 02:39:54.096" endtime="20210322 02:39:54.097"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar status da chave</arg>
</arguments>
<msg timestamp="20210322 02:39:54.098" level="INFO">Validar status da chave</msg>
<status status="PASS" starttime="20210322 02:39:54.098" endtime="20210322 02:39:54.098"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${type}' == 'evp'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["status"]}</arg>
<arg>active</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'phone'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["status"]}</arg>
<arg>waiting_ownership_verification</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'email'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["status"]}</arg>
<arg>waiting_ownership_verification</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'national_registration'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["status"]}</arg>
<arg>active</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["status"]}</arg>
<arg>waiting_ownership_verification</arg>
</arguments>
<status status="PASS" starttime="20210322 02:39:54.100" endtime="20210322 02:39:54.100"></status>
</kw>
<status status="PASS" starttime="20210322 02:39:54.100" endtime="20210322 02:39:54.100"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando Tipo da chave PIX</arg>
</arguments>
<msg timestamp="20210322 02:39:54.101" level="INFO">Validando Tipo da chave PIX</msg>
<status status="PASS" starttime="20210322 02:39:54.101" endtime="20210322 02:39:54.101"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${type}' == 'evp'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["type"]}</arg>
<arg>${type}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'phone'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["type"]}</arg>
<arg>${type}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'email'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["type"]}</arg>
<arg>${type}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'national_registration'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["type"]}</arg>
<arg>${type}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["key"]["type"]}</arg>
<arg>${type}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:39:54.102" endtime="20210322 02:39:54.103"></status>
</kw>
<status status="PASS" starttime="20210322 02:39:54.101" endtime="20210322 02:39:54.103"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando Valor da chave PIX</arg>
</arguments>
<msg timestamp="20210322 02:39:54.104" level="INFO">Validando Valor da chave PIX</msg>
<status status="PASS" starttime="20210322 02:39:54.104" endtime="20210322 02:39:54.104"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${type}' == 'evp'</arg>
<arg>Should Not Be Empty</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'phone'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${phone_pix}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'email'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${email_pix}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'national_registration'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${national_registration}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${phone_pix}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:39:54.106" endtime="20210322 02:39:54.107"></status>
</kw>
<status status="PASS" starttime="20210322 02:39:54.104" endtime="20210322 02:39:54.107"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando dados da conta</arg>
</arguments>
<msg timestamp="20210322 02:39:54.107" level="INFO">Validando dados da conta</msg>
<status status="PASS" starttime="20210322 02:39:54.107" endtime="20210322 02:39:54.107"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["id"]}</arg>
<arg>${account_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:39:54.107" endtime="20210322 02:39:54.108"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["marketplace"]}</arg>
<arg>${marketplace_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:39:54.108" endtime="20210322 02:39:54.108"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["holder"]}</arg>
<arg>${holder_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:39:54.109" endtime="20210322 02:39:54.110"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["number"]}</arg>
<arg>${account_number}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:39:54.110" endtime="20210322 02:39:54.110"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["routing_number"]}</arg>
<arg>${account_routing_number}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:39:54.110" endtime="20210322 02:39:54.112"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["type"]}</arg>
<arg>CACC</arg>
</arguments>
<status status="PASS" starttime="20210322 02:39:54.112" endtime="20210322 02:39:54.112"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar Proprietário da Account Owner</arg>
</arguments>
<msg timestamp="20210322 02:39:54.112" level="INFO">Validar Proprietário da Account Owner</msg>
<status status="PASS" starttime="20210322 02:39:54.112" endtime="20210322 02:39:54.112"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${holder_type}' == 'individual'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["account"]["owner"]["name"]}</arg>
<arg>${holder_name}</arg>
<arg>ELSE IF</arg>
<arg>'${holder_type}' == 'business'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["account"]["owner"]["name"]}</arg>
<arg>${legal_name}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["account"]["owner"]["name"]}</arg>
<arg>${holder_name}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:39:54.113" endtime="20210322 02:39:54.114"></status>
</kw>
<status status="PASS" starttime="20210322 02:39:54.113" endtime="20210322 02:39:54.114"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar national_registration da Account Owner</arg>
</arguments>
<msg timestamp="20210322 02:39:54.114" level="INFO">Validar national_registration da Account Owner</msg>
<status status="PASS" starttime="20210322 02:39:54.114" endtime="20210322 02:39:54.115"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${holder_type}' == 'individual'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["account"]["owner"]["national_registration"]}</arg>
<arg>${national_registration}</arg>
<arg>ELSE IF</arg>
<arg>'${holder_type}' == 'business'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["account"]["owner"]["national_registration"]}</arg>
<arg>${national_registration}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["account"]["owner"]["national_registration"]}</arg>
<arg>${national_registration}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:39:54.115" endtime="20210322 02:39:54.117"></status>
</kw>
<status status="PASS" starttime="20210322 02:39:54.115" endtime="20210322 02:39:54.117"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar Holder Type do Account Owner</arg>
</arguments>
<msg timestamp="20210322 02:39:54.118" level="INFO">Validar Holder Type do Account Owner</msg>
<status status="PASS" starttime="20210322 02:39:54.117" endtime="20210322 02:39:54.118"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${holder_type}' == 'individual'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["account"]["owner"]["type"]}</arg>
<arg>${holder_type}</arg>
<arg>ELSE IF</arg>
<arg>'${holder_type}' == 'business'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["account"]["owner"]["type"]}</arg>
<arg>${holder_type}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["account"]["owner"]["type"]}</arg>
<arg>${holder_type}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:39:54.120" endtime="20210322 02:39:54.120"></status>
</kw>
<status status="PASS" starttime="20210322 02:39:54.118" endtime="20210322 02:39:54.120"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar PSP</arg>
</arguments>
<msg timestamp="20210322 02:39:54.120" level="INFO">Validar PSP</msg>
<status status="PASS" starttime="20210322 02:39:54.120" endtime="20210322 02:39:54.120"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["psp"]["code"]}</arg>
<arg>19468242</arg>
</arguments>
<status status="PASS" starttime="20210322 02:39:54.120" endtime="20210322 02:39:54.121"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["psp"]["name"]}</arg>
<arg>Zoop Tecnologia e Meios de Pagamento S.A.</arg>
</arguments>
<status status="PASS" starttime="20210322 02:39:54.121" endtime="20210322 02:39:54.121"></status>
</kw>
<status status="PASS" starttime="20210322 02:39:54.095" endtime="20210322 02:39:54.121"></status>
</kw>
<kw name="buscar verification code" library="pix_dict_verification_code">
<arguments>
<arg>${holder_external_key}</arg>
<arg>${account_external_key}</arg>
<arg>${entry_external_key}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 02:39:54.124" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 02:39:54.124" endtime="20210322 02:39:54.124"></status>
</kw>
<status status="PASS" starttime="20210322 02:39:54.122" endtime="20210322 02:39:54.124"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/admin/internal_operation/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries/${entry_external_key}/code</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:39:54.125" level="INFO">GET Request using : uri=/admin/internal_operation/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/c596a9cfea6b4b9c99ced5f1d579a2c1/accounts/9f36357d091d47b888ff0f9a37158c87/entries/2ef6d022bdcf4a099b754dd4a117d7e9/code, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 02:39:54.753" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:39:54.124" endtime="20210322 02:39:54.753"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:39:54.754" level="INFO">{'code': '7683'}</msg>
<status status="PASS" starttime="20210322 02:39:54.753" endtime="20210322 02:39:54.754"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:39:54.755" level="INFO">57cde99edf9c80b9</msg>
<status status="PASS" starttime="20210322 02:39:54.754" endtime="20210322 02:39:54.755"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 02:39:54.756" level="INFO">200</msg>
<status status="PASS" starttime="20210322 02:39:54.756" endtime="20210322 02:39:54.756"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:39:54.757" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:39:54.757" endtime="20210322 02:39:54.757"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["code"]}</arg>
</arguments>
<assign>
<var>${verification_code}</var>
</assign>
<msg timestamp="20210322 02:39:54.759" level="INFO">${verification_code} = 7683</msg>
<status status="PASS" starttime="20210322 02:39:54.758" endtime="20210322 02:39:54.759"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${verification_code}</arg>
</arguments>
<msg timestamp="20210322 02:39:54.760" level="INFO">${verification_code} = 7683</msg>
<status status="PASS" starttime="20210322 02:39:54.760" endtime="20210322 02:39:54.760"></status>
</kw>
<status status="PASS" starttime="20210322 02:39:54.122" endtime="20210322 02:39:54.760"></status>
</kw>
<kw name="confirmar propriedade da chave pix" library="pix_dict_confirm_propriety">
<arguments>
<arg>123abc</arg>
<arg>${holder_external_key}</arg>
<arg>${account_external_key}</arg>
<arg>${entry_external_key}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 02:39:54.762" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 02:39:54.762" endtime="20210322 02:39:54.763"></status>
</kw>
<status status="PASS" starttime="20210322 02:39:54.761" endtime="20210322 02:39:54.763"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:39:54.764" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 02:39:54.763" endtime="20210322 02:39:54.764"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"code": "${verification_code}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 02:39:54.764" level="INFO">${body} = { "code": "123abc" }</msg>
<status status="PASS" starttime="20210322 02:39:54.764" endtime="20210322 02:39:54.764"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries/${entry_external_key}/ownership</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:39:54.765" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/c596a9cfea6b4b9c99ced5f1d579a2c1/accounts/9f36357d091d47b888ff0f9a37158c87/entries/2ef6d022bdcf4a099b754dd4a117d7e9/ownership, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "code": "123abc" } 
json=None</msg>
<msg timestamp="20210322 02:39:55.333" level="INFO">${response} = &lt;Response [404]&gt;</msg>
<status status="PASS" starttime="20210322 02:39:54.765" endtime="20210322 02:39:55.333"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:39:55.334" level="INFO">{'code': 3003, 'status': 'not_found', 'type': 'not_found', 'message': 'Ownership entry not found', 'category': 'business', 'status_code': 404}</msg>
<status status="PASS" starttime="20210322 02:39:55.334" endtime="20210322 02:39:55.334"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:39:55.335" level="INFO">9398a06a595103d1</msg>
<status status="PASS" starttime="20210322 02:39:55.334" endtime="20210322 02:39:55.335"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 02:39:55.335" level="INFO">404</msg>
<status status="PASS" starttime="20210322 02:39:55.335" endtime="20210322 02:39:55.336"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:39:55.336" level="INFO">${response} = &lt;Response [404]&gt;</msg>
<status status="PASS" starttime="20210322 02:39:55.336" endtime="20210322 02:39:55.336"></status>
</kw>
<status status="PASS" starttime="20210322 02:39:54.761" endtime="20210322 02:39:55.336"></status>
</kw>
<kw name="validar not found" library="asserts">
<arguments>
<arg>Ownership entry not found</arg>
<arg>3003</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando response nor found</arg>
</arguments>
<msg timestamp="20210322 02:39:55.337" level="INFO">Validando response nor found</msg>
<status status="PASS" starttime="20210322 02:39:55.337" endtime="20210322 02:39:55.337"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>404</arg>
</arguments>
<msg timestamp="20210322 02:39:55.338" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:39:55.338" endtime="20210322 02:39:55.338"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["status"]}</arg>
<arg>not_found</arg>
</arguments>
<status status="PASS" starttime="20210322 02:39:55.338" endtime="20210322 02:39:55.339"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["category"]}</arg>
<arg>business</arg>
</arguments>
<status status="PASS" starttime="20210322 02:39:55.339" endtime="20210322 02:39:55.339"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.json()["code"]}</arg>
<arg>${message_code}</arg>
</arguments>
<msg timestamp="20210322 02:39:55.340" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:39:55.340" endtime="20210322 02:39:55.340"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.json()["status_code"]}</arg>
<arg>404</arg>
</arguments>
<msg timestamp="20210322 02:39:55.341" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:39:55.340" endtime="20210322 02:39:55.341"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["message"]}</arg>
<arg>${message}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:39:55.341" endtime="20210322 02:39:55.341"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["type"]}</arg>
<arg>not_found</arg>
</arguments>
<status status="PASS" starttime="20210322 02:39:55.342" endtime="20210322 02:39:55.342"></status>
</kw>
<status status="PASS" starttime="20210322 02:39:55.337" endtime="20210322 02:39:55.342"></status>
</kw>
<doc>Fluxo de Exceção</doc>
<tags>
<tag>smoke_test</tag>
</tags>
<status status="PASS" starttime="20210322 02:39:50.165" endtime="20210322 02:39:55.342" critical="yes"></status>
</test>
<test id="s1-s1-s2-t5" name="Cenário: Confirmar proprierdade de de chave de endereçamento utilizando sem informar o código de verificação">
<kw name="Random Number" library="FakerLibrary">
<doc>Returns a random number with 1 digit (default, when digits==None),
a random number with 0 to given number of digits, or a random number
with given number to given number of digits (when ``fix_len==True``).</doc>
<arguments>
<arg>digits=8</arg>
<arg>fix_len=True</arg>
</arguments>
<assign>
<var>${phone}</var>
</assign>
<msg timestamp="20210322 02:39:55.344" level="INFO">${phone} = 84867990</msg>
<status status="PASS" starttime="20210322 02:39:55.344" endtime="20210322 02:39:55.344"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>+55219${phone}</arg>
</arguments>
<assign>
<var>${phone_pix}</var>
</assign>
<msg timestamp="20210322 02:39:55.344" level="INFO">${phone_pix} = +5521984867990</msg>
<status status="PASS" starttime="20210322 02:39:55.344" endtime="20210322 02:39:55.344"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${phone_pix}</arg>
</arguments>
<msg timestamp="20210322 02:39:55.345" level="INFO">${phone_pix} = +5521984867990</msg>
<status status="PASS" starttime="20210322 02:39:55.345" endtime="20210322 02:39:55.345"></status>
</kw>
<kw name="criar holder individual ativo" library="accreditation_create_holder_active">
<kw name="conectar accreditation" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accreditation</arg>
<arg>url=${accreditation_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 02:39:55.346" level="INFO">Creating Session using : alias=accreditation, url=https://banking-accreditation-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 02:39:55.345" endtime="20210322 02:39:55.346"></status>
</kw>
<status status="PASS" starttime="20210322 02:39:55.345" endtime="20210322 02:39:55.346"></status>
</kw>
<kw name="Cpf" library="FakerLibrary">
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 02:39:55.346" level="INFO">${national_registration} = 049.753.186-01</msg>
<status status="PASS" starttime="20210322 02:39:55.346" endtime="20210322 02:39:55.346"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${national_registration}</arg>
<arg>.</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 02:39:55.347" level="INFO">${national_registration} = 049753186-01</msg>
<status status="PASS" starttime="20210322 02:39:55.346" endtime="20210322 02:39:55.347"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${national_registration}</arg>
<arg>-</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 02:39:55.347" level="INFO">${national_registration} = 04975318601</msg>
<status status="PASS" starttime="20210322 02:39:55.347" endtime="20210322 02:39:55.347"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${national_registration}</arg>
</arguments>
<msg timestamp="20210322 02:39:55.347" level="INFO">${national_registration} = 04975318601</msg>
<status status="PASS" starttime="20210322 02:39:55.347" endtime="20210322 02:39:55.347"></status>
</kw>
<kw name="Rg" library="FakerLibrary">
<doc>Brazilian RG, return plain numbers.
Check:  https://www.ngmatematica.com/2014/02/como-determinar-o-digito-verificador-do.html</doc>
<assign>
<var>${identity_card}</var>
</assign>
<msg timestamp="20210322 02:39:55.348" level="INFO">${identity_card} = 654721385</msg>
<status status="PASS" starttime="20210322 02:39:55.348" endtime="20210322 02:39:55.348"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${identity_card}</arg>
</arguments>
<msg timestamp="20210322 02:39:55.348" level="INFO">${identity_card} = 654721385</msg>
<status status="PASS" starttime="20210322 02:39:55.348" endtime="20210322 02:39:55.348"></status>
</kw>
<kw name="criar holder individual" library="accreditation_post_holder_individual">
<arguments>
<arg>holder_type=individual</arg>
<arg>holder_name=${holder_name}</arg>
<arg>email=${email}</arg>
<arg>national_registration=${national_registration}</arg>
<arg>revenue=${revenue}</arg>
<arg>birthday=${birthday}</arg>
<arg>mothers_name=${mothers_name}</arg>
<arg>identity_card=${identity_card}</arg>
<arg>pep=false</arg>
<arg>cbo=${cbo}</arg>
</arguments>
<kw name="conectar accreditation" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accreditation</arg>
<arg>url=${accreditation_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 02:39:55.350" level="INFO">Creating Session using : alias=accreditation, url=https://banking-accreditation-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 02:39:55.349" endtime="20210322 02:39:55.350"></status>
</kw>
<status status="PASS" starttime="20210322 02:39:55.349" endtime="20210322 02:39:55.350"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_type}</arg>
</arguments>
<msg timestamp="20210322 02:39:55.350" level="INFO">${holder_type} = individual</msg>
<status status="PASS" starttime="20210322 02:39:55.350" endtime="20210322 02:39:55.350"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_name}</arg>
</arguments>
<msg timestamp="20210322 02:39:55.351" level="INFO">${holder_name} = Holder de teste</msg>
<status status="PASS" starttime="20210322 02:39:55.350" endtime="20210322 02:39:55.351"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:39:55.351" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 02:39:55.351" endtime="20210322 02:39:55.351"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "${holder_type}",</arg>
<arg>"name": "${holder_name}",</arg>
<arg>"email": "${email}",</arg>
<arg>"national_registration": "${national_registration}",</arg>
<arg>"revenue": ${revenue},</arg>
<arg>"birthday": "${birthday}",</arg>
<arg>"mothers_name": "${mothers_name}",</arg>
<arg>"identity_card": "${identity_card}",</arg>
<arg>"pep": false,</arg>
<arg>"cbo": ${cbo}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 02:39:55.352" level="INFO">${body} = { "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "04975318601", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder",...</msg>
<status status="PASS" starttime="20210322 02:39:55.351" endtime="20210322 02:39:55.352"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:39:55.353" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "04975318601", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder", "identity_card": "654721385", "pep": false, "cbo": 821450 } 
json=None</msg>
<msg timestamp="20210322 02:39:55.975" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:39:55.353" endtime="20210322 02:39:55.975"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:39:55.977" level="INFO">{'id': 'd6c7c86497284bdd8c271132079b37fe', 'name': 'Holder de teste', 'revenue': 5500.0, 'email': 'teste@teste.com.br', 'status': 'waiting_info_and_documents', 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'marketplace_name': 'Marketplace de Teste', 'created_at': '2021-03-22T02:39:56.814561', 'updated_at': '2021-03-22T02:39:56.814563', 'type': 'individual', 'national_registration': '04975318601', 'birthday': '1988-04-23', 'mothers_name': 'Mãe do Holder', 'identity_card': '654721385', 'pep': False, 'cbo': '821450', '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/d6c7c86497284bdd8c271132079b37fe', 'type': 'GET'}, 'phones': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/d6c7c86497284bdd8c271132079b37fe/phones', 'type': 'GET'}, 'addresses': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/d6c7c86497284bdd8c271132079b37fe/addresses', 'type': 'GET'}, 'documents': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/d6c7c86497284bdd8c271132079b37fe/documents', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 02:39:55.976" endtime="20210322 02:39:55.977"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:39:55.977" level="INFO">ee423ed754f0f6a7</msg>
<status status="PASS" starttime="20210322 02:39:55.977" endtime="20210322 02:39:55.977"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${body}</arg>
</arguments>
<msg timestamp="20210322 02:39:55.978" level="INFO">{ "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "04975318601", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder", "identity_card": "654721385", "pep": false, "cbo": 821450 }</msg>
<status status="PASS" starttime="20210322 02:39:55.977" endtime="20210322 02:39:55.978"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:39:55.978" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:39:55.978" endtime="20210322 02:39:55.978"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${holder_external_key}</var>
</assign>
<msg timestamp="20210322 02:39:55.979" level="INFO">${holder_external_key} = d6c7c86497284bdd8c271132079b37fe</msg>
<status status="PASS" starttime="20210322 02:39:55.978" endtime="20210322 02:39:55.979"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_external_key}</arg>
</arguments>
<msg timestamp="20210322 02:39:55.979" level="INFO">${holder_external_key} = d6c7c86497284bdd8c271132079b37fe</msg>
<status status="PASS" starttime="20210322 02:39:55.979" endtime="20210322 02:39:55.979"></status>
</kw>
<status status="PASS" starttime="20210322 02:39:55.348" endtime="20210322 02:39:55.979"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_name}</arg>
</arguments>
<msg timestamp="20210322 02:39:55.980" level="INFO">${holder_name} = Holder de teste</msg>
<status status="PASS" starttime="20210322 02:39:55.979" endtime="20210322 02:39:55.980"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 02:39:55.981" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:39:55.980" endtime="20210322 02:39:55.981"></status>
</kw>
<kw name="criar holder phone" library="accreditation_post_holder_phone">
<arguments>
<arg>21</arg>
<arg>51</arg>
<arg>996221236</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:39:55.981" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 02:39:55.981" endtime="20210322 02:39:55.981"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"area_code": "${phone_area_code}",</arg>
<arg>"country_code": "${phone_country_code}",</arg>
<arg>"number": "${phone_number}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 02:39:55.982" level="INFO">${body} = { "area_code": "21", "country_code": "51", "number": "996221236" }</msg>
<status status="PASS" starttime="20210322 02:39:55.982" endtime="20210322 02:39:55.982"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/phones</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:39:55.983" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/d6c7c86497284bdd8c271132079b37fe/phones, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "area_code": "21", "country_code": "51", "number": "996221236" } 
json=None</msg>
<msg timestamp="20210322 02:39:56.386" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:39:55.982" endtime="20210322 02:39:56.386"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:39:56.387" level="INFO">{'id': 'bd4c6c2cea4645a6981b7b4b26aaefaf', 'area_code': '21', 'country_code': '51', 'number': '996221236', 'main': True, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/d6c7c86497284bdd8c271132079b37fe/phones/bd4c6c2cea4645a6981b7b4b26aaefaf', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/d6c7c86497284bdd8c271132079b37fe', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 02:39:56.386" endtime="20210322 02:39:56.387"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:39:56.388" level="INFO">4f509fa2ddd20fac</msg>
<status status="PASS" starttime="20210322 02:39:56.388" endtime="20210322 02:39:56.388"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:39:56.389" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:39:56.389" endtime="20210322 02:39:56.389"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${phone_external_key}</var>
</assign>
<msg timestamp="20210322 02:39:56.390" level="INFO">${phone_external_key} = bd4c6c2cea4645a6981b7b4b26aaefaf</msg>
<status status="PASS" starttime="20210322 02:39:56.389" endtime="20210322 02:39:56.390"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${phone_external_key}</arg>
</arguments>
<msg timestamp="20210322 02:39:56.390" level="INFO">${phone_external_key} = bd4c6c2cea4645a6981b7b4b26aaefaf</msg>
<status status="PASS" starttime="20210322 02:39:56.390" endtime="20210322 02:39:56.391"></status>
</kw>
<status status="PASS" starttime="20210322 02:39:55.981" endtime="20210322 02:39:56.391"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 02:39:56.391" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:39:56.391" endtime="20210322 02:39:56.391"></status>
</kw>
<kw name="criar holder address" library="accreditation_post_holder_address">
<arguments>
<arg>Rio de Janeiro</arg>
<arg>Rio de Janeiro</arg>
<arg>Brasil</arg>
<arg>Bairro de Testes</arg>
<arg>Rua de Testes</arg>
<arg>90</arg>
<arg>apto 200</arg>
<arg>21550987</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:39:56.393" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 02:39:56.392" endtime="20210322 02:39:56.393"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"city": "${city}",</arg>
<arg>"state": "${state}",</arg>
<arg>"country": "${country}",</arg>
<arg>"neighborhood": "${neighborhood}",</arg>
<arg>"street": "${street}",</arg>
<arg>"number": "${number}",</arg>
<arg>"complement": "${complement}",</arg>
<arg>"postal_code": "${postal_code}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 02:39:56.393" level="INFO">${body} = { "city": "Rio de Janeiro", "state": "Rio de Janeiro", "country": "Brasil", "neighborhood": "Bairro de Testes", "street": "Rua de Testes", "number": "90", "complement": "apto 200", "postal_code": "215...</msg>
<status status="PASS" starttime="20210322 02:39:56.393" endtime="20210322 02:39:56.393"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/addresses</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:39:56.394" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/d6c7c86497284bdd8c271132079b37fe/addresses, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "city": "Rio de Janeiro", "state": "Rio de Janeiro", "country": "Brasil", "neighborhood": "Bairro de Testes", "street": "Rua de Testes", "number": "90", "complement": "apto 200", "postal_code": "21550987" } 
json=None</msg>
<msg timestamp="20210322 02:39:56.638" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:39:56.393" endtime="20210322 02:39:56.638"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:39:56.638" level="INFO">{'id': '8d2256c0e17646d39c463fc230e00431', 'street': 'Rua de Testes', 'number': '90', 'city': 'Rio de Janeiro', 'complement': 'apto 200', 'state': 'Rio de Janeiro', 'neighborhood': 'Bairro de Testes', 'postal_code': '21550987', 'country': 'Brasil', 'main': True, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/d6c7c86497284bdd8c271132079b37fe/addresses/8d2256c0e17646d39c463fc230e00431', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/d6c7c86497284bdd8c271132079b37fe', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 02:39:56.638" endtime="20210322 02:39:56.639"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:39:56.639" level="INFO">e5be87727b4468fa</msg>
<status status="PASS" starttime="20210322 02:39:56.639" endtime="20210322 02:39:56.639"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:39:56.640" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:39:56.639" endtime="20210322 02:39:56.640"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${address_external_key}</var>
</assign>
<msg timestamp="20210322 02:39:56.640" level="INFO">${address_external_key} = 8d2256c0e17646d39c463fc230e00431</msg>
<status status="PASS" starttime="20210322 02:39:56.640" endtime="20210322 02:39:56.640"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${address_external_key}</arg>
</arguments>
<msg timestamp="20210322 02:39:56.640" level="INFO">${address_external_key} = 8d2256c0e17646d39c463fc230e00431</msg>
<status status="PASS" starttime="20210322 02:39:56.640" endtime="20210322 02:39:56.640"></status>
</kw>
<status status="PASS" starttime="20210322 02:39:56.391" endtime="20210322 02:39:56.641"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 02:39:56.641" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:39:56.641" endtime="20210322 02:39:56.641"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>SELFIE</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:39:56.642" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 02:39:56.641" endtime="20210322 02:39:56.642"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 02:39:56.642" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 02:39:56.643" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 02:39:56.642" endtime="20210322 02:39:56.643"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:39:56.643" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/d6c7c86497284bdd8c271132079b37fe/documents?type=SELFIE, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 02:39:56.938" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:39:56.643" endtime="20210322 02:39:56.938"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:39:56.940" level="INFO">{'id': 'a40d3386c66d4932afdafa12d83fb007', 'document_type': 'selfie', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/d6c7c86497284bdd8c271132079b37fe/documents/a40d3386c66d4932afdafa12d83fb007', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/d6c7c86497284bdd8c271132079b37fe', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/d6c7c86497284bdd8c271132079b37fe/documents/a40d3386c66d4932afdafa12d83fb007/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 02:39:56.939" endtime="20210322 02:39:56.940"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:39:56.941" level="INFO">a8fe76b85d634692</msg>
<status status="PASS" starttime="20210322 02:39:56.940" endtime="20210322 02:39:56.941"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:39:56.942" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:39:56.942" endtime="20210322 02:39:56.943"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 02:39:56.944" level="INFO">${document_external_key} = a40d3386c66d4932afdafa12d83fb007</msg>
<status status="PASS" starttime="20210322 02:39:56.943" endtime="20210322 02:39:56.944"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 02:39:56.946" level="INFO">${document_external_key} = a40d3386c66d4932afdafa12d83fb007</msg>
<status status="PASS" starttime="20210322 02:39:56.945" endtime="20210322 02:39:56.946"></status>
</kw>
<status status="PASS" starttime="20210322 02:39:56.641" endtime="20210322 02:39:56.946"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 02:39:56.947" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:39:56.946" endtime="20210322 02:39:56.947"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>RG_FRENTE</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:39:56.948" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 02:39:56.948" endtime="20210322 02:39:56.948"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 02:39:56.949" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 02:39:56.952" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 02:39:56.949" endtime="20210322 02:39:56.952"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:39:56.952" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/d6c7c86497284bdd8c271132079b37fe/documents?type=RG_FRENTE, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 02:39:57.295" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:39:56.952" endtime="20210322 02:39:57.295"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:39:57.297" level="INFO">{'id': '543b984bbbb44397a6255a4b537093e5', 'document_type': 'rg_frente', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/d6c7c86497284bdd8c271132079b37fe/documents/543b984bbbb44397a6255a4b537093e5', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/d6c7c86497284bdd8c271132079b37fe', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/d6c7c86497284bdd8c271132079b37fe/documents/543b984bbbb44397a6255a4b537093e5/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 02:39:57.296" endtime="20210322 02:39:57.297"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:39:57.299" level="INFO">2d5f200d8d876172</msg>
<status status="PASS" starttime="20210322 02:39:57.298" endtime="20210322 02:39:57.300"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:39:57.301" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:39:57.300" endtime="20210322 02:39:57.302"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 02:39:57.304" level="INFO">${document_external_key} = 543b984bbbb44397a6255a4b537093e5</msg>
<status status="PASS" starttime="20210322 02:39:57.302" endtime="20210322 02:39:57.304"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 02:39:57.305" level="INFO">${document_external_key} = 543b984bbbb44397a6255a4b537093e5</msg>
<status status="PASS" starttime="20210322 02:39:57.304" endtime="20210322 02:39:57.305"></status>
</kw>
<status status="PASS" starttime="20210322 02:39:56.947" endtime="20210322 02:39:57.305"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 02:39:57.307" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:39:57.306" endtime="20210322 02:39:57.307"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>RG_VERSO</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:39:57.309" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 02:39:57.308" endtime="20210322 02:39:57.309"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 02:39:57.310" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 02:39:57.312" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 02:39:57.310" endtime="20210322 02:39:57.312"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:39:57.314" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/d6c7c86497284bdd8c271132079b37fe/documents?type=RG_VERSO, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 02:39:57.603" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:39:57.313" endtime="20210322 02:39:57.604"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:39:57.606" level="INFO">{'id': 'fde804e393d8434ca0784bc185b2cd17', 'document_type': 'rg_verso', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/d6c7c86497284bdd8c271132079b37fe/documents/fde804e393d8434ca0784bc185b2cd17', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/d6c7c86497284bdd8c271132079b37fe', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/d6c7c86497284bdd8c271132079b37fe/documents/fde804e393d8434ca0784bc185b2cd17/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 02:39:57.605" endtime="20210322 02:39:57.606"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:39:57.607" level="INFO">39ececea444181c3</msg>
<status status="PASS" starttime="20210322 02:39:57.607" endtime="20210322 02:39:57.607"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:39:57.608" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:39:57.608" endtime="20210322 02:39:57.609"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 02:39:57.610" level="INFO">${document_external_key} = fde804e393d8434ca0784bc185b2cd17</msg>
<status status="PASS" starttime="20210322 02:39:57.609" endtime="20210322 02:39:57.610"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 02:39:57.612" level="INFO">${document_external_key} = fde804e393d8434ca0784bc185b2cd17</msg>
<status status="PASS" starttime="20210322 02:39:57.611" endtime="20210322 02:39:57.612"></status>
</kw>
<status status="PASS" starttime="20210322 02:39:57.307" endtime="20210322 02:39:57.612"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 02:39:57.613" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:39:57.612" endtime="20210322 02:39:57.613"></status>
</kw>
<kw name="solicitar aprovação do holder" library="accreditation_request_approval">
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:39:57.615" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 02:39:57.615" endtime="20210322 02:39:57.615"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/approval</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:39:57.616" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/d6c7c86497284bdd8c271132079b37fe/approval, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data=None 
json=None</msg>
<msg timestamp="20210322 02:39:57.969" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:39:57.616" endtime="20210322 02:39:57.969"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:39:57.970" level="INFO">{'message': 'Approval request accepted successfully. Processing analysis'}</msg>
<status status="PASS" starttime="20210322 02:39:57.969" endtime="20210322 02:39:57.970"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:39:57.971" level="INFO">2794a6a5045b0560</msg>
<status status="PASS" starttime="20210322 02:39:57.970" endtime="20210322 02:39:57.971"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:39:57.971" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:39:57.971" endtime="20210322 02:39:57.971"></status>
</kw>
<status status="PASS" starttime="20210322 02:39:57.614" endtime="20210322 02:39:57.972"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 02:39:57.973" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:39:57.972" endtime="20210322 02:39:57.973"></status>
</kw>
<kw name="recebendo notificação de aprovação" library="accreditation_risk_notification">
<kw name="Uuid 4" library="FakerLibrary">
<doc>Generates a random UUID4 string.
:param cast_to: Specify what type the UUID should be cast to. Default is `str`
:type cast_to: callable</doc>
<assign>
<var>${assessment_id}</var>
</assign>
<msg timestamp="20210322 02:39:57.973" level="INFO">${assessment_id} = b7d7ac81-cc9e-49b8-b2fe-f5e2e5ee3c5b</msg>
<status status="PASS" starttime="20210322 02:39:57.973" endtime="20210322 02:39:57.973"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>year</arg>
</arguments>
<assign>
<var>${year}</var>
</assign>
<msg timestamp="20210322 02:39:57.974" level="INFO">${year} = 2021</msg>
<status status="PASS" starttime="20210322 02:39:57.973" endtime="20210322 02:39:57.974"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>month</arg>
</arguments>
<assign>
<var>${month}</var>
</assign>
<msg timestamp="20210322 02:39:57.974" level="INFO">${month} = 03</msg>
<status status="PASS" starttime="20210322 02:39:57.974" endtime="20210322 02:39:57.974"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>day</arg>
</arguments>
<assign>
<var>${day}</var>
</assign>
<msg timestamp="20210322 02:39:57.975" level="INFO">${day} = 22</msg>
<status status="PASS" starttime="20210322 02:39:57.974" endtime="20210322 02:39:57.975"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:39:57.975" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 02:39:57.975" endtime="20210322 02:39:57.975"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "risk.assessment.result",</arg>
<arg>"resource": "business.holder",</arg>
<arg>"created_at": "${year}-${month}-${day} 15:28:56.747Z",</arg>
<arg>"marketplace_id": "${marketplace_external_key}",</arg>
<arg>"object": {</arg>
<arg>"result": "APPROVED",</arg>
<arg>"holder_id": "${holder_external_key}",</arg>
<arg>"applicant_id": "${application_external_key}",</arg>
<arg>"assessment_id": "${assessment_id}"</arg>
<arg>}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 02:39:57.977" level="INFO">${body} = { "type": "risk.assessment.result", "resource": "business.holder", "created_at": "2021-03-22 15:28:56.747Z", "marketplace_id": "f71a8951368a4cc085cf7875ff44e61c", "object": { "result": "APPROVED", "ho...</msg>
<status status="PASS" starttime="20210322 02:39:57.976" endtime="20210322 02:39:57.977"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/admin/internal_operation/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/registration/approval</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:39:57.978" level="INFO">POST Request using : uri=/admin/internal_operation/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/d6c7c86497284bdd8c271132079b37fe/registration/approval, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "risk.assessment.result", "resource": "business.holder", "created_at": "2021-03-22 15:28:56.747Z", "marketplace_id": "f71a8951368a4cc085cf7875ff44e61c", "object": { "result": "APPROVED", "holder_id": "d6c7c86497284bdd8c271132079b37fe", "applicant_id": "bcc25a6751c14b52af1340d40dba78c5", "assessment_id": "b7d7ac81-cc9e-49b8-b2fe-f5e2e5ee3c5b" } } 
json=None</msg>
<msg timestamp="20210322 02:39:58.181" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:39:57.977" endtime="20210322 02:39:58.182"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:39:58.184" level="INFO">{'message': 'Holder approved successfully'}</msg>
<status status="PASS" starttime="20210322 02:39:58.183" endtime="20210322 02:39:58.184"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:39:58.186" level="INFO">dfedd5fcc777600f</msg>
<status status="PASS" starttime="20210322 02:39:58.185" endtime="20210322 02:39:58.186"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:39:58.188" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:39:58.187" endtime="20210322 02:39:58.188"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 02:39:58.190" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:39:58.189" endtime="20210322 02:39:58.190"></status>
</kw>
<status status="PASS" starttime="20210322 02:39:57.973" endtime="20210322 02:39:58.190"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 02:39:58.192" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:39:58.191" endtime="20210322 02:39:58.192"></status>
</kw>
<kw name="buscar account por holder" library="accounts_get_accounts_by_holder">
<kw name="conectar accounts" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accounts</arg>
<arg>url=${account_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 02:39:58.194" level="INFO">Creating Session using : alias=accounts, url=https://banking-accounts-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 02:39:58.194" endtime="20210322 02:39:58.195"></status>
</kw>
<status status="PASS" starttime="20210322 02:39:58.193" endtime="20210322 02:39:58.195"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accounts</arg>
<arg>/marketplaces/${marketplace_external_key}/holders/${holder_external_key}/accounts</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:39:58.196" level="INFO">GET Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/holders/d6c7c86497284bdd8c271132079b37fe/accounts, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 02:39:58.807" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:39:58.196" endtime="20210322 02:39:58.807"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:39:58.807" level="INFO">{'items': [{'id': 'e10a886e9e494d18ab010360826a691b', 'holder': 'd6c7c86497284bdd8c271132079b37fe', 'balance': '0.00', 'currency': 'BRL', 'routing_number': '001', 'number': '6735642549', 'status': 'active', 'metadata': {}, 'created_at': '2021-03-22T05:39:59.008237', 'updated_at': '2021-03-22T05:39:59.008237', 'primary': True, 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'uri': '/v2/marketplaces/f71a8951368a4cc085cf7875ff44e61c/accounts/e10a886e9e494d18ab010360826a691b', 'resource': 'payment_account'}], 'has_more': False, 'limit': 100, 'total_pages': 1, 'page': 1, 'offset': 0, 'total': '1', 'query_count': '1'}</msg>
<status status="PASS" starttime="20210322 02:39:58.807" endtime="20210322 02:39:58.808"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:39:58.808" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:39:58.808" endtime="20210322 02:39:58.809"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["id"]}</arg>
</arguments>
<assign>
<var>${account_external_key}</var>
</assign>
<msg timestamp="20210322 02:39:58.810" level="INFO">${account_external_key} = e10a886e9e494d18ab010360826a691b</msg>
<status status="PASS" starttime="20210322 02:39:58.809" endtime="20210322 02:39:58.811"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_external_key}</arg>
</arguments>
<msg timestamp="20210322 02:39:58.812" level="INFO">${account_external_key} = e10a886e9e494d18ab010360826a691b</msg>
<status status="PASS" starttime="20210322 02:39:58.811" endtime="20210322 02:39:58.812"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["number"]}</arg>
</arguments>
<assign>
<var>${account_number}</var>
</assign>
<msg timestamp="20210322 02:39:58.813" level="INFO">${account_number} = 6735642549</msg>
<status status="PASS" starttime="20210322 02:39:58.813" endtime="20210322 02:39:58.813"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_number}</arg>
</arguments>
<msg timestamp="20210322 02:39:58.814" level="INFO">${account_number} = 6735642549</msg>
<status status="PASS" starttime="20210322 02:39:58.814" endtime="20210322 02:39:58.814"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["routing_number"]}</arg>
</arguments>
<assign>
<var>${account_routing_number}</var>
</assign>
<msg timestamp="20210322 02:39:58.816" level="INFO">${account_routing_number} = 001</msg>
<status status="PASS" starttime="20210322 02:39:58.815" endtime="20210322 02:39:58.816"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_routing_number}</arg>
</arguments>
<msg timestamp="20210322 02:39:58.817" level="INFO">${account_routing_number} = 001</msg>
<status status="PASS" starttime="20210322 02:39:58.817" endtime="20210322 02:39:58.817"></status>
</kw>
<status status="PASS" starttime="20210322 02:39:58.192" endtime="20210322 02:39:58.817"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 02:39:58.817" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:39:58.817" endtime="20210322 02:39:58.818"></status>
</kw>
<status status="PASS" starttime="20210322 02:39:55.345" endtime="20210322 02:39:58.818"></status>
</kw>
<kw name="criar chave pix" library="pix_dict_create_entry">
<arguments>
<arg>phone</arg>
<arg>${phone_pix}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 02:39:58.820" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 02:39:58.819" endtime="20210322 02:39:58.820"></status>
</kw>
<status status="PASS" starttime="20210322 02:39:58.819" endtime="20210322 02:39:58.820"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${type}</arg>
</arguments>
<msg timestamp="20210322 02:39:58.821" level="INFO">${type} = phone</msg>
<status status="PASS" starttime="20210322 02:39:58.821" endtime="20210322 02:39:58.821"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210322 02:39:58.822" level="INFO">${value} = +5521984867990</msg>
<status status="PASS" starttime="20210322 02:39:58.822" endtime="20210322 02:39:58.822"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:39:58.823" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 02:39:58.822" endtime="20210322 02:39:58.823"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "${type}",</arg>
<arg>"value": "${value}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 02:39:58.823" level="INFO">${body} = { "type": "phone", "value": "+5521984867990" }</msg>
<status status="PASS" starttime="20210322 02:39:58.823" endtime="20210322 02:39:58.824"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:39:58.824" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/d6c7c86497284bdd8c271132079b37fe/accounts/e10a886e9e494d18ab010360826a691b/entries, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "phone", "value": "+5521984867990" } 
json=None</msg>
<msg timestamp="20210322 02:39:59.554" level="INFO">${response} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20210322 02:39:58.824" endtime="20210322 02:39:59.554"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:39:59.556" level="INFO">{'id': 'b6fb95baedab4cd2b8b2680d652b8525', 'status': 'waiting_ownership_verification', 'created_at': '2021-03-22T02:40:00.381', 'updated_at': '2021-03-22T02:40:00.381', 'key': {'value': '+5521984867990', 'type': 'phone'}, 'account': {'id': 'e10a886e9e494d18ab010360826a691b', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': 'd6c7c86497284bdd8c271132079b37fe', 'owner': {'name': 'Holder de teste', 'national_registration': '04975318601', 'type': 'individual'}, 'routing_number': '001', 'number': '6735642549', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}, 'resource': 'pix.entry'}</msg>
<status status="PASS" starttime="20210322 02:39:59.554" endtime="20210322 02:39:59.556"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:39:59.557" level="INFO">4796e832621097c7</msg>
<status status="PASS" starttime="20210322 02:39:59.556" endtime="20210322 02:39:59.557"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 02:39:59.558" level="INFO">202</msg>
<status status="PASS" starttime="20210322 02:39:59.558" endtime="20210322 02:39:59.558"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:39:59.560" level="INFO">${response} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20210322 02:39:59.560" endtime="20210322 02:39:59.560"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${entry_external_key}</var>
</assign>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:39:59.561" endtime="20210322 02:39:59.563"></status>
</kw>
<msg timestamp="20210322 02:39:59.563" level="INFO">${entry_external_key} = b6fb95baedab4cd2b8b2680d652b8525</msg>
<status status="PASS" starttime="20210322 02:39:59.560" endtime="20210322 02:39:59.563"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${entry_external_key}</arg>
</arguments>
<msg timestamp="20210322 02:39:59.563" level="INFO">${entry_external_key} = b6fb95baedab4cd2b8b2680d652b8525</msg>
<status status="PASS" starttime="20210322 02:39:59.563" endtime="20210322 02:39:59.563"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["key"]["value"]}</arg>
</arguments>
<assign>
<var>${entry_key_value}</var>
</assign>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["key"]["value"]}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:39:59.565" endtime="20210322 02:39:59.566"></status>
</kw>
<msg timestamp="20210322 02:39:59.566" level="INFO">${entry_key_value} = +5521984867990</msg>
<status status="PASS" starttime="20210322 02:39:59.565" endtime="20210322 02:39:59.566"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${entry_key_value}</arg>
</arguments>
<msg timestamp="20210322 02:39:59.567" level="INFO">${entry_key_value} = +5521984867990</msg>
<status status="PASS" starttime="20210322 02:39:59.566" endtime="20210322 02:39:59.567"></status>
</kw>
<status status="PASS" starttime="20210322 02:39:58.818" endtime="20210322 02:39:59.567"></status>
</kw>
<kw name="validar criação da chave pix" library="asserts">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando status_code</arg>
</arguments>
<msg timestamp="20210322 02:39:59.569" level="INFO">Validando status_code</msg>
<status status="PASS" starttime="20210322 02:39:59.568" endtime="20210322 02:39:59.569"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${type}' == 'evp'</arg>
<arg>Should Be Equal As Integers</arg>
<arg>${response.status_code}</arg>
<arg>201</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'phone'</arg>
<arg>Should Be Equal As Integers</arg>
<arg>${response.status_code}</arg>
<arg>202</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'email'</arg>
<arg>Should Be Equal As Integers</arg>
<arg>${response.status_code}</arg>
<arg>202</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'national_registration'</arg>
<arg>Should Be Equal As Integers</arg>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>202</arg>
</arguments>
<msg timestamp="20210322 02:39:59.571" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:39:59.570" endtime="20210322 02:39:59.571"></status>
</kw>
<status status="PASS" starttime="20210322 02:39:59.569" endtime="20210322 02:39:59.571"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar status da chave</arg>
</arguments>
<msg timestamp="20210322 02:39:59.573" level="INFO">Validar status da chave</msg>
<status status="PASS" starttime="20210322 02:39:59.571" endtime="20210322 02:39:59.573"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${type}' == 'evp'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["status"]}</arg>
<arg>active</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'phone'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["status"]}</arg>
<arg>waiting_ownership_verification</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'email'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["status"]}</arg>
<arg>waiting_ownership_verification</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'national_registration'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["status"]}</arg>
<arg>active</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["status"]}</arg>
<arg>waiting_ownership_verification</arg>
</arguments>
<status status="PASS" starttime="20210322 02:39:59.573" endtime="20210322 02:39:59.574"></status>
</kw>
<status status="PASS" starttime="20210322 02:39:59.573" endtime="20210322 02:39:59.574"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando Tipo da chave PIX</arg>
</arguments>
<msg timestamp="20210322 02:39:59.574" level="INFO">Validando Tipo da chave PIX</msg>
<status status="PASS" starttime="20210322 02:39:59.574" endtime="20210322 02:39:59.575"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${type}' == 'evp'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["type"]}</arg>
<arg>${type}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'phone'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["type"]}</arg>
<arg>${type}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'email'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["type"]}</arg>
<arg>${type}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'national_registration'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["type"]}</arg>
<arg>${type}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["key"]["type"]}</arg>
<arg>${type}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:39:59.576" endtime="20210322 02:39:59.577"></status>
</kw>
<status status="PASS" starttime="20210322 02:39:59.575" endtime="20210322 02:39:59.577"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando Valor da chave PIX</arg>
</arguments>
<msg timestamp="20210322 02:39:59.577" level="INFO">Validando Valor da chave PIX</msg>
<status status="PASS" starttime="20210322 02:39:59.577" endtime="20210322 02:39:59.577"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${type}' == 'evp'</arg>
<arg>Should Not Be Empty</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'phone'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${phone_pix}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'email'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${email_pix}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'national_registration'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${national_registration}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${phone_pix}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:39:59.578" endtime="20210322 02:39:59.579"></status>
</kw>
<status status="PASS" starttime="20210322 02:39:59.578" endtime="20210322 02:39:59.579"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando dados da conta</arg>
</arguments>
<msg timestamp="20210322 02:39:59.579" level="INFO">Validando dados da conta</msg>
<status status="PASS" starttime="20210322 02:39:59.579" endtime="20210322 02:39:59.581"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["id"]}</arg>
<arg>${account_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:39:59.581" endtime="20210322 02:39:59.581"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["marketplace"]}</arg>
<arg>${marketplace_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:39:59.581" endtime="20210322 02:39:59.581"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["holder"]}</arg>
<arg>${holder_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:39:59.582" endtime="20210322 02:39:59.583"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["number"]}</arg>
<arg>${account_number}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:39:59.583" endtime="20210322 02:39:59.584"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["routing_number"]}</arg>
<arg>${account_routing_number}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:39:59.584" endtime="20210322 02:39:59.584"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["type"]}</arg>
<arg>CACC</arg>
</arguments>
<status status="PASS" starttime="20210322 02:39:59.585" endtime="20210322 02:39:59.585"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar Proprietário da Account Owner</arg>
</arguments>
<msg timestamp="20210322 02:39:59.585" level="INFO">Validar Proprietário da Account Owner</msg>
<status status="PASS" starttime="20210322 02:39:59.585" endtime="20210322 02:39:59.585"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${holder_type}' == 'individual'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["account"]["owner"]["name"]}</arg>
<arg>${holder_name}</arg>
<arg>ELSE IF</arg>
<arg>'${holder_type}' == 'business'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["account"]["owner"]["name"]}</arg>
<arg>${legal_name}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["account"]["owner"]["name"]}</arg>
<arg>${holder_name}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:39:59.587" endtime="20210322 02:39:59.587"></status>
</kw>
<status status="PASS" starttime="20210322 02:39:59.587" endtime="20210322 02:39:59.587"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar national_registration da Account Owner</arg>
</arguments>
<msg timestamp="20210322 02:39:59.587" level="INFO">Validar national_registration da Account Owner</msg>
<status status="PASS" starttime="20210322 02:39:59.587" endtime="20210322 02:39:59.587"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${holder_type}' == 'individual'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["account"]["owner"]["national_registration"]}</arg>
<arg>${national_registration}</arg>
<arg>ELSE IF</arg>
<arg>'${holder_type}' == 'business'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["account"]["owner"]["national_registration"]}</arg>
<arg>${national_registration}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["account"]["owner"]["national_registration"]}</arg>
<arg>${national_registration}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:39:59.588" endtime="20210322 02:39:59.589"></status>
</kw>
<status status="PASS" starttime="20210322 02:39:59.588" endtime="20210322 02:39:59.589"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar Holder Type do Account Owner</arg>
</arguments>
<msg timestamp="20210322 02:39:59.589" level="INFO">Validar Holder Type do Account Owner</msg>
<status status="PASS" starttime="20210322 02:39:59.589" endtime="20210322 02:39:59.589"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${holder_type}' == 'individual'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["account"]["owner"]["type"]}</arg>
<arg>${holder_type}</arg>
<arg>ELSE IF</arg>
<arg>'${holder_type}' == 'business'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["account"]["owner"]["type"]}</arg>
<arg>${holder_type}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["account"]["owner"]["type"]}</arg>
<arg>${holder_type}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:39:59.590" endtime="20210322 02:39:59.590"></status>
</kw>
<status status="PASS" starttime="20210322 02:39:59.589" endtime="20210322 02:39:59.590"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar PSP</arg>
</arguments>
<msg timestamp="20210322 02:39:59.591" level="INFO">Validar PSP</msg>
<status status="PASS" starttime="20210322 02:39:59.591" endtime="20210322 02:39:59.591"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["psp"]["code"]}</arg>
<arg>19468242</arg>
</arguments>
<status status="PASS" starttime="20210322 02:39:59.591" endtime="20210322 02:39:59.593"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["psp"]["name"]}</arg>
<arg>Zoop Tecnologia e Meios de Pagamento S.A.</arg>
</arguments>
<status status="PASS" starttime="20210322 02:39:59.593" endtime="20210322 02:39:59.593"></status>
</kw>
<status status="PASS" starttime="20210322 02:39:59.568" endtime="20210322 02:39:59.593"></status>
</kw>
<kw name="buscar verification code" library="pix_dict_verification_code">
<arguments>
<arg>${holder_external_key}</arg>
<arg>${account_external_key}</arg>
<arg>${entry_external_key}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 02:39:59.594" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 02:39:59.594" endtime="20210322 02:39:59.595"></status>
</kw>
<status status="PASS" starttime="20210322 02:39:59.593" endtime="20210322 02:39:59.595"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/admin/internal_operation/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries/${entry_external_key}/code</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:39:59.595" level="INFO">GET Request using : uri=/admin/internal_operation/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/d6c7c86497284bdd8c271132079b37fe/accounts/e10a886e9e494d18ab010360826a691b/entries/b6fb95baedab4cd2b8b2680d652b8525/code, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 02:40:00.198" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:39:59.595" endtime="20210322 02:40:00.198"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:40:00.199" level="INFO">{'code': '3870'}</msg>
<status status="PASS" starttime="20210322 02:40:00.198" endtime="20210322 02:40:00.199"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:40:00.200" level="INFO">3e54a581fb681e29</msg>
<status status="PASS" starttime="20210322 02:40:00.199" endtime="20210322 02:40:00.200"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 02:40:00.200" level="INFO">200</msg>
<status status="PASS" starttime="20210322 02:40:00.200" endtime="20210322 02:40:00.201"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:40:00.201" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:40:00.201" endtime="20210322 02:40:00.202"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["code"]}</arg>
</arguments>
<assign>
<var>${verification_code}</var>
</assign>
<msg timestamp="20210322 02:40:00.203" level="INFO">${verification_code} = 3870</msg>
<status status="PASS" starttime="20210322 02:40:00.202" endtime="20210322 02:40:00.203"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${verification_code}</arg>
</arguments>
<msg timestamp="20210322 02:40:00.203" level="INFO">${verification_code} = 3870</msg>
<status status="PASS" starttime="20210322 02:40:00.203" endtime="20210322 02:40:00.204"></status>
</kw>
<status status="PASS" starttime="20210322 02:39:59.593" endtime="20210322 02:40:00.204"></status>
</kw>
<kw name="confirmar propriedade da chave pix" library="pix_dict_confirm_propriety">
<arguments>
<arg>${EMPTY}</arg>
<arg>${holder_external_key}</arg>
<arg>${account_external_key}</arg>
<arg>${entry_external_key}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 02:40:00.205" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 02:40:00.205" endtime="20210322 02:40:00.206"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:00.205" endtime="20210322 02:40:00.206"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:40:00.207" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 02:40:00.206" endtime="20210322 02:40:00.207"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"code": "${verification_code}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 02:40:00.207" level="INFO">${body} = { "code": "" }</msg>
<status status="PASS" starttime="20210322 02:40:00.207" endtime="20210322 02:40:00.207"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries/${entry_external_key}/ownership</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:40:00.208" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/d6c7c86497284bdd8c271132079b37fe/accounts/e10a886e9e494d18ab010360826a691b/entries/b6fb95baedab4cd2b8b2680d652b8525/ownership, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "code": "" } 
json=None</msg>
<msg timestamp="20210322 02:40:00.852" level="INFO">${response} = &lt;Response [404]&gt;</msg>
<status status="PASS" starttime="20210322 02:40:00.208" endtime="20210322 02:40:00.852"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:40:00.855" level="INFO">{'code': 3003, 'status': 'not_found', 'type': 'not_found', 'message': 'Ownership entry not found', 'category': 'business', 'status_code': 404}</msg>
<status status="PASS" starttime="20210322 02:40:00.853" endtime="20210322 02:40:00.855"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:40:00.857" level="INFO">523aa4bc7aa37668</msg>
<status status="PASS" starttime="20210322 02:40:00.856" endtime="20210322 02:40:00.857"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 02:40:00.858" level="INFO">404</msg>
<status status="PASS" starttime="20210322 02:40:00.858" endtime="20210322 02:40:00.858"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:40:00.860" level="INFO">${response} = &lt;Response [404]&gt;</msg>
<status status="PASS" starttime="20210322 02:40:00.859" endtime="20210322 02:40:00.860"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:00.204" endtime="20210322 02:40:00.860"></status>
</kw>
<kw name="validar not found" library="asserts">
<arguments>
<arg>Ownership entry not found</arg>
<arg>3003</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando response nor found</arg>
</arguments>
<msg timestamp="20210322 02:40:00.862" level="INFO">Validando response nor found</msg>
<status status="PASS" starttime="20210322 02:40:00.862" endtime="20210322 02:40:00.862"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>404</arg>
</arguments>
<msg timestamp="20210322 02:40:00.863" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:40:00.863" endtime="20210322 02:40:00.864"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["status"]}</arg>
<arg>not_found</arg>
</arguments>
<status status="PASS" starttime="20210322 02:40:00.864" endtime="20210322 02:40:00.865"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["category"]}</arg>
<arg>business</arg>
</arguments>
<status status="PASS" starttime="20210322 02:40:00.865" endtime="20210322 02:40:00.866"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.json()["code"]}</arg>
<arg>${message_code}</arg>
</arguments>
<msg timestamp="20210322 02:40:00.867" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:40:00.866" endtime="20210322 02:40:00.867"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.json()["status_code"]}</arg>
<arg>404</arg>
</arguments>
<msg timestamp="20210322 02:40:00.868" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:40:00.867" endtime="20210322 02:40:00.868"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["message"]}</arg>
<arg>${message}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:40:00.869" endtime="20210322 02:40:00.869"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["type"]}</arg>
<arg>not_found</arg>
</arguments>
<status status="PASS" starttime="20210322 02:40:00.869" endtime="20210322 02:40:00.870"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:00.861" endtime="20210322 02:40:00.870"></status>
</kw>
<doc>Fluxo de Exceção</doc>
<tags>
<tag>smoke_test</tag>
</tags>
<status status="PASS" starttime="20210322 02:39:55.343" endtime="20210322 02:40:00.870" critical="yes"></status>
</test>
<doc>Funcionalidade: Confirmação de Propriedade de Chave de Endereçamento
Eu, como um Holder, portador de uma conta ativa em Banking
E portador de uma chave de endereçamento do tipo Email ou Telefone
Desejo confirmar a propriedade da chave de endereçamento</doc>
<status status="PASS" starttime="20210322 02:39:31.029" endtime="20210322 02:40:00.871"></status>
</suite>
<suite id="s1-s1-s3" name="Criar Chave de Endereçamento" source="C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\tests\pix-dict\diretorio\Criar Chave de Endereçamento.robot">
<test id="s1-s1-s3-t1" name="Cenário: Criando Chave de Endereçamento do tipo EVP">
<kw name="criar holder individual ativo" library="accreditation_create_holder_active">
<kw name="conectar accreditation" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accreditation</arg>
<arg>url=${accreditation_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 02:40:00.931" level="INFO">Creating Session using : alias=accreditation, url=https://banking-accreditation-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 02:40:00.931" endtime="20210322 02:40:00.932"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:00.931" endtime="20210322 02:40:00.932"></status>
</kw>
<kw name="Cpf" library="FakerLibrary">
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 02:40:00.932" level="INFO">${national_registration} = 015.367.924-70</msg>
<status status="PASS" starttime="20210322 02:40:00.932" endtime="20210322 02:40:00.932"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${national_registration}</arg>
<arg>.</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 02:40:00.933" level="INFO">${national_registration} = 015367924-70</msg>
<status status="PASS" starttime="20210322 02:40:00.933" endtime="20210322 02:40:00.933"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${national_registration}</arg>
<arg>-</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 02:40:00.934" level="INFO">${national_registration} = 01536792470</msg>
<status status="PASS" starttime="20210322 02:40:00.934" endtime="20210322 02:40:00.934"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${national_registration}</arg>
</arguments>
<msg timestamp="20210322 02:40:00.935" level="INFO">${national_registration} = 01536792470</msg>
<status status="PASS" starttime="20210322 02:40:00.934" endtime="20210322 02:40:00.935"></status>
</kw>
<kw name="Rg" library="FakerLibrary">
<doc>Brazilian RG, return plain numbers.
Check:  https://www.ngmatematica.com/2014/02/como-determinar-o-digito-verificador-do.html</doc>
<assign>
<var>${identity_card}</var>
</assign>
<msg timestamp="20210322 02:40:00.936" level="INFO">${identity_card} = 571368207</msg>
<status status="PASS" starttime="20210322 02:40:00.935" endtime="20210322 02:40:00.936"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${identity_card}</arg>
</arguments>
<msg timestamp="20210322 02:40:00.936" level="INFO">${identity_card} = 571368207</msg>
<status status="PASS" starttime="20210322 02:40:00.936" endtime="20210322 02:40:00.936"></status>
</kw>
<kw name="criar holder individual" library="accreditation_post_holder_individual">
<arguments>
<arg>holder_type=individual</arg>
<arg>holder_name=${holder_name}</arg>
<arg>email=${email}</arg>
<arg>national_registration=${national_registration}</arg>
<arg>revenue=${revenue}</arg>
<arg>birthday=${birthday}</arg>
<arg>mothers_name=${mothers_name}</arg>
<arg>identity_card=${identity_card}</arg>
<arg>pep=false</arg>
<arg>cbo=${cbo}</arg>
</arguments>
<kw name="conectar accreditation" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accreditation</arg>
<arg>url=${accreditation_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 02:40:00.939" level="INFO">Creating Session using : alias=accreditation, url=https://banking-accreditation-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 02:40:00.939" endtime="20210322 02:40:00.940"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:00.938" endtime="20210322 02:40:00.940"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_type}</arg>
</arguments>
<msg timestamp="20210322 02:40:00.940" level="INFO">${holder_type} = individual</msg>
<status status="PASS" starttime="20210322 02:40:00.940" endtime="20210322 02:40:00.940"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_name}</arg>
</arguments>
<msg timestamp="20210322 02:40:00.941" level="INFO">${holder_name} = Holder de teste</msg>
<status status="PASS" starttime="20210322 02:40:00.941" endtime="20210322 02:40:00.941"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:40:00.941" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 02:40:00.941" endtime="20210322 02:40:00.941"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "${holder_type}",</arg>
<arg>"name": "${holder_name}",</arg>
<arg>"email": "${email}",</arg>
<arg>"national_registration": "${national_registration}",</arg>
<arg>"revenue": ${revenue},</arg>
<arg>"birthday": "${birthday}",</arg>
<arg>"mothers_name": "${mothers_name}",</arg>
<arg>"identity_card": "${identity_card}",</arg>
<arg>"pep": false,</arg>
<arg>"cbo": ${cbo}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 02:40:00.942" level="INFO">${body} = { "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "01536792470", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder",...</msg>
<status status="PASS" starttime="20210322 02:40:00.942" endtime="20210322 02:40:00.942"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:40:00.943" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "01536792470", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder", "identity_card": "571368207", "pep": false, "cbo": 821450 } 
json=None</msg>
<msg timestamp="20210322 02:40:01.607" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:40:00.943" endtime="20210322 02:40:01.608"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:40:01.610" level="INFO">{'id': 'ea01803b31be48479e304fed7fc5cd14', 'name': 'Holder de teste', 'revenue': 5500.0, 'email': 'teste@teste.com.br', 'status': 'waiting_info_and_documents', 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'marketplace_name': 'Marketplace de Teste', 'created_at': '2021-03-22T02:40:02.439661', 'updated_at': '2021-03-22T02:40:02.439663', 'type': 'individual', 'national_registration': '01536792470', 'birthday': '1988-04-23', 'mothers_name': 'Mãe do Holder', 'identity_card': '571368207', 'pep': False, 'cbo': '821450', '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/ea01803b31be48479e304fed7fc5cd14', 'type': 'GET'}, 'phones': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/ea01803b31be48479e304fed7fc5cd14/phones', 'type': 'GET'}, 'addresses': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/ea01803b31be48479e304fed7fc5cd14/addresses', 'type': 'GET'}, 'documents': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/ea01803b31be48479e304fed7fc5cd14/documents', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 02:40:01.609" endtime="20210322 02:40:01.610"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:40:01.612" level="INFO">413a3f175e634c30</msg>
<status status="PASS" starttime="20210322 02:40:01.611" endtime="20210322 02:40:01.612"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${body}</arg>
</arguments>
<msg timestamp="20210322 02:40:01.614" level="INFO">{ "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "01536792470", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder", "identity_card": "571368207", "pep": false, "cbo": 821450 }</msg>
<status status="PASS" starttime="20210322 02:40:01.613" endtime="20210322 02:40:01.614"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:40:01.616" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:40:01.615" endtime="20210322 02:40:01.617"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${holder_external_key}</var>
</assign>
<msg timestamp="20210322 02:40:01.620" level="INFO">${holder_external_key} = ea01803b31be48479e304fed7fc5cd14</msg>
<status status="PASS" starttime="20210322 02:40:01.617" endtime="20210322 02:40:01.620"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_external_key}</arg>
</arguments>
<msg timestamp="20210322 02:40:01.621" level="INFO">${holder_external_key} = ea01803b31be48479e304fed7fc5cd14</msg>
<status status="PASS" starttime="20210322 02:40:01.620" endtime="20210322 02:40:01.621"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:00.937" endtime="20210322 02:40:01.622"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_name}</arg>
</arguments>
<msg timestamp="20210322 02:40:01.623" level="INFO">${holder_name} = Holder de teste</msg>
<status status="PASS" starttime="20210322 02:40:01.622" endtime="20210322 02:40:01.623"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 02:40:01.624" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:40:01.623" endtime="20210322 02:40:01.624"></status>
</kw>
<kw name="criar holder phone" library="accreditation_post_holder_phone">
<arguments>
<arg>21</arg>
<arg>51</arg>
<arg>996221236</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:40:01.626" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 02:40:01.625" endtime="20210322 02:40:01.626"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"area_code": "${phone_area_code}",</arg>
<arg>"country_code": "${phone_country_code}",</arg>
<arg>"number": "${phone_number}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 02:40:01.627" level="INFO">${body} = { "area_code": "21", "country_code": "51", "number": "996221236" }</msg>
<status status="PASS" starttime="20210322 02:40:01.626" endtime="20210322 02:40:01.627"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/phones</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:40:01.628" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/ea01803b31be48479e304fed7fc5cd14/phones, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "area_code": "21", "country_code": "51", "number": "996221236" } 
json=None</msg>
<msg timestamp="20210322 02:40:01.842" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:40:01.627" endtime="20210322 02:40:01.842"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:40:01.844" level="INFO">{'id': '2bbee99984304d6ab1a2eb6a202e61fe', 'area_code': '21', 'country_code': '51', 'number': '996221236', 'main': True, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/ea01803b31be48479e304fed7fc5cd14/phones/2bbee99984304d6ab1a2eb6a202e61fe', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/ea01803b31be48479e304fed7fc5cd14', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 02:40:01.843" endtime="20210322 02:40:01.844"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:40:01.845" level="INFO">f41216d2a7e7d11c</msg>
<status status="PASS" starttime="20210322 02:40:01.845" endtime="20210322 02:40:01.845"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:40:01.847" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:40:01.846" endtime="20210322 02:40:01.847"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${phone_external_key}</var>
</assign>
<msg timestamp="20210322 02:40:01.848" level="INFO">${phone_external_key} = 2bbee99984304d6ab1a2eb6a202e61fe</msg>
<status status="PASS" starttime="20210322 02:40:01.847" endtime="20210322 02:40:01.848"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${phone_external_key}</arg>
</arguments>
<msg timestamp="20210322 02:40:01.849" level="INFO">${phone_external_key} = 2bbee99984304d6ab1a2eb6a202e61fe</msg>
<status status="PASS" starttime="20210322 02:40:01.849" endtime="20210322 02:40:01.849"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:01.625" endtime="20210322 02:40:01.850"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 02:40:01.850" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:40:01.850" endtime="20210322 02:40:01.851"></status>
</kw>
<kw name="criar holder address" library="accreditation_post_holder_address">
<arguments>
<arg>Rio de Janeiro</arg>
<arg>Rio de Janeiro</arg>
<arg>Brasil</arg>
<arg>Bairro de Testes</arg>
<arg>Rua de Testes</arg>
<arg>90</arg>
<arg>apto 200</arg>
<arg>21550987</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:40:01.853" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 02:40:01.852" endtime="20210322 02:40:01.853"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"city": "${city}",</arg>
<arg>"state": "${state}",</arg>
<arg>"country": "${country}",</arg>
<arg>"neighborhood": "${neighborhood}",</arg>
<arg>"street": "${street}",</arg>
<arg>"number": "${number}",</arg>
<arg>"complement": "${complement}",</arg>
<arg>"postal_code": "${postal_code}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 02:40:01.855" level="INFO">${body} = { "city": "Rio de Janeiro", "state": "Rio de Janeiro", "country": "Brasil", "neighborhood": "Bairro de Testes", "street": "Rua de Testes", "number": "90", "complement": "apto 200", "postal_code": "215...</msg>
<status status="PASS" starttime="20210322 02:40:01.853" endtime="20210322 02:40:01.855"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/addresses</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:40:01.856" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/ea01803b31be48479e304fed7fc5cd14/addresses, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "city": "Rio de Janeiro", "state": "Rio de Janeiro", "country": "Brasil", "neighborhood": "Bairro de Testes", "street": "Rua de Testes", "number": "90", "complement": "apto 200", "postal_code": "21550987" } 
json=None</msg>
<msg timestamp="20210322 02:40:02.073" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:40:01.855" endtime="20210322 02:40:02.073"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:40:02.075" level="INFO">{'id': '51eeac82a47b46feb528582227931485', 'street': 'Rua de Testes', 'number': '90', 'city': 'Rio de Janeiro', 'complement': 'apto 200', 'state': 'Rio de Janeiro', 'neighborhood': 'Bairro de Testes', 'postal_code': '21550987', 'country': 'Brasil', 'main': True, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/ea01803b31be48479e304fed7fc5cd14/addresses/51eeac82a47b46feb528582227931485', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/ea01803b31be48479e304fed7fc5cd14', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 02:40:02.074" endtime="20210322 02:40:02.075"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:40:02.076" level="INFO">a366b6f8b24757f2</msg>
<status status="PASS" starttime="20210322 02:40:02.075" endtime="20210322 02:40:02.076"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:40:02.077" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:40:02.077" endtime="20210322 02:40:02.077"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${address_external_key}</var>
</assign>
<msg timestamp="20210322 02:40:02.079" level="INFO">${address_external_key} = 51eeac82a47b46feb528582227931485</msg>
<status status="PASS" starttime="20210322 02:40:02.078" endtime="20210322 02:40:02.079"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${address_external_key}</arg>
</arguments>
<msg timestamp="20210322 02:40:02.080" level="INFO">${address_external_key} = 51eeac82a47b46feb528582227931485</msg>
<status status="PASS" starttime="20210322 02:40:02.080" endtime="20210322 02:40:02.080"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:01.851" endtime="20210322 02:40:02.081"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 02:40:02.082" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:40:02.081" endtime="20210322 02:40:02.082"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>SELFIE</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:40:02.084" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 02:40:02.083" endtime="20210322 02:40:02.084"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 02:40:02.085" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 02:40:02.087" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 02:40:02.084" endtime="20210322 02:40:02.087"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:40:02.089" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/ea01803b31be48479e304fed7fc5cd14/documents?type=SELFIE, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 02:40:02.359" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:40:02.088" endtime="20210322 02:40:02.359"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:40:02.362" level="INFO">{'id': 'bf8ba23e85d0463ebe41e0075000ec18', 'document_type': 'selfie', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/ea01803b31be48479e304fed7fc5cd14/documents/bf8ba23e85d0463ebe41e0075000ec18', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/ea01803b31be48479e304fed7fc5cd14', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/ea01803b31be48479e304fed7fc5cd14/documents/bf8ba23e85d0463ebe41e0075000ec18/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 02:40:02.360" endtime="20210322 02:40:02.362"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:40:02.364" level="INFO">e06ad01456d10eb7</msg>
<status status="PASS" starttime="20210322 02:40:02.363" endtime="20210322 02:40:02.364"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:40:02.366" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:40:02.365" endtime="20210322 02:40:02.367"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 02:40:02.370" level="INFO">${document_external_key} = bf8ba23e85d0463ebe41e0075000ec18</msg>
<status status="PASS" starttime="20210322 02:40:02.369" endtime="20210322 02:40:02.370"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 02:40:02.372" level="INFO">${document_external_key} = bf8ba23e85d0463ebe41e0075000ec18</msg>
<status status="PASS" starttime="20210322 02:40:02.372" endtime="20210322 02:40:02.372"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:02.082" endtime="20210322 02:40:02.373"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 02:40:02.374" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:40:02.374" endtime="20210322 02:40:02.374"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>RG_FRENTE</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:40:02.377" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 02:40:02.377" endtime="20210322 02:40:02.377"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 02:40:02.378" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 02:40:02.381" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 02:40:02.377" endtime="20210322 02:40:02.381"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:40:02.383" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/ea01803b31be48479e304fed7fc5cd14/documents?type=RG_FRENTE, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 02:40:02.655" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:40:02.381" endtime="20210322 02:40:02.655"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:40:02.657" level="INFO">{'id': '4a3d21705030494f88439507af815f6c', 'document_type': 'rg_frente', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/ea01803b31be48479e304fed7fc5cd14/documents/4a3d21705030494f88439507af815f6c', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/ea01803b31be48479e304fed7fc5cd14', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/ea01803b31be48479e304fed7fc5cd14/documents/4a3d21705030494f88439507af815f6c/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 02:40:02.656" endtime="20210322 02:40:02.658"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:40:02.659" level="INFO">0fd3af4bfa50571c</msg>
<status status="PASS" starttime="20210322 02:40:02.658" endtime="20210322 02:40:02.660"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:40:02.662" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:40:02.660" endtime="20210322 02:40:02.662"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 02:40:02.664" level="INFO">${document_external_key} = 4a3d21705030494f88439507af815f6c</msg>
<status status="PASS" starttime="20210322 02:40:02.663" endtime="20210322 02:40:02.664"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 02:40:02.666" level="INFO">${document_external_key} = 4a3d21705030494f88439507af815f6c</msg>
<status status="PASS" starttime="20210322 02:40:02.665" endtime="20210322 02:40:02.666"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:02.375" endtime="20210322 02:40:02.666"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 02:40:02.668" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:40:02.667" endtime="20210322 02:40:02.668"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>RG_VERSO</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:40:02.670" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 02:40:02.669" endtime="20210322 02:40:02.670"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 02:40:02.671" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 02:40:02.674" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 02:40:02.671" endtime="20210322 02:40:02.674"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:40:02.676" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/ea01803b31be48479e304fed7fc5cd14/documents?type=RG_VERSO, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 02:40:02.955" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:40:02.674" endtime="20210322 02:40:02.956"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:40:02.958" level="INFO">{'id': '903efca59246445f8c9d6add92c1df86', 'document_type': 'rg_verso', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/ea01803b31be48479e304fed7fc5cd14/documents/903efca59246445f8c9d6add92c1df86', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/ea01803b31be48479e304fed7fc5cd14', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/ea01803b31be48479e304fed7fc5cd14/documents/903efca59246445f8c9d6add92c1df86/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 02:40:02.957" endtime="20210322 02:40:02.959"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:40:02.960" level="INFO">e1e2e47a70620ca5</msg>
<status status="PASS" starttime="20210322 02:40:02.959" endtime="20210322 02:40:02.960"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:40:02.961" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:40:02.961" endtime="20210322 02:40:02.962"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 02:40:02.963" level="INFO">${document_external_key} = 903efca59246445f8c9d6add92c1df86</msg>
<status status="PASS" starttime="20210322 02:40:02.962" endtime="20210322 02:40:02.963"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 02:40:02.964" level="INFO">${document_external_key} = 903efca59246445f8c9d6add92c1df86</msg>
<status status="PASS" starttime="20210322 02:40:02.964" endtime="20210322 02:40:02.964"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:02.669" endtime="20210322 02:40:02.965"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 02:40:02.966" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:40:02.965" endtime="20210322 02:40:02.966"></status>
</kw>
<kw name="solicitar aprovação do holder" library="accreditation_request_approval">
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:40:02.967" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 02:40:02.967" endtime="20210322 02:40:02.967"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/approval</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:40:02.968" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/ea01803b31be48479e304fed7fc5cd14/approval, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data=None 
json=None</msg>
<msg timestamp="20210322 02:40:03.311" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:40:02.968" endtime="20210322 02:40:03.312"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:40:03.314" level="INFO">{'message': 'Approval request accepted successfully. Processing analysis'}</msg>
<status status="PASS" starttime="20210322 02:40:03.313" endtime="20210322 02:40:03.315"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:40:03.316" level="INFO">6f5ba85fa131b5f7</msg>
<status status="PASS" starttime="20210322 02:40:03.315" endtime="20210322 02:40:03.316"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:40:03.318" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:40:03.317" endtime="20210322 02:40:03.318"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:02.966" endtime="20210322 02:40:03.318"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 02:40:03.320" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:40:03.319" endtime="20210322 02:40:03.320"></status>
</kw>
<kw name="recebendo notificação de aprovação" library="accreditation_risk_notification">
<kw name="Uuid 4" library="FakerLibrary">
<doc>Generates a random UUID4 string.
:param cast_to: Specify what type the UUID should be cast to. Default is `str`
:type cast_to: callable</doc>
<assign>
<var>${assessment_id}</var>
</assign>
<msg timestamp="20210322 02:40:03.322" level="INFO">${assessment_id} = eec4fea1-c861-4ce1-bd10-2a1731d8bf05</msg>
<status status="PASS" starttime="20210322 02:40:03.321" endtime="20210322 02:40:03.322"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>year</arg>
</arguments>
<assign>
<var>${year}</var>
</assign>
<msg timestamp="20210322 02:40:03.323" level="INFO">${year} = 2021</msg>
<status status="PASS" starttime="20210322 02:40:03.323" endtime="20210322 02:40:03.323"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>month</arg>
</arguments>
<assign>
<var>${month}</var>
</assign>
<msg timestamp="20210322 02:40:03.324" level="INFO">${month} = 03</msg>
<status status="PASS" starttime="20210322 02:40:03.324" endtime="20210322 02:40:03.324"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>day</arg>
</arguments>
<assign>
<var>${day}</var>
</assign>
<msg timestamp="20210322 02:40:03.326" level="INFO">${day} = 22</msg>
<status status="PASS" starttime="20210322 02:40:03.325" endtime="20210322 02:40:03.326"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:40:03.327" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 02:40:03.326" endtime="20210322 02:40:03.327"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "risk.assessment.result",</arg>
<arg>"resource": "business.holder",</arg>
<arg>"created_at": "${year}-${month}-${day} 15:28:56.747Z",</arg>
<arg>"marketplace_id": "${marketplace_external_key}",</arg>
<arg>"object": {</arg>
<arg>"result": "APPROVED",</arg>
<arg>"holder_id": "${holder_external_key}",</arg>
<arg>"applicant_id": "${application_external_key}",</arg>
<arg>"assessment_id": "${assessment_id}"</arg>
<arg>}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 02:40:03.329" level="INFO">${body} = { "type": "risk.assessment.result", "resource": "business.holder", "created_at": "2021-03-22 15:28:56.747Z", "marketplace_id": "f71a8951368a4cc085cf7875ff44e61c", "object": { "result": "APPROVED", "ho...</msg>
<status status="PASS" starttime="20210322 02:40:03.327" endtime="20210322 02:40:03.329"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/admin/internal_operation/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/registration/approval</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:40:03.330" level="INFO">POST Request using : uri=/admin/internal_operation/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/ea01803b31be48479e304fed7fc5cd14/registration/approval, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "risk.assessment.result", "resource": "business.holder", "created_at": "2021-03-22 15:28:56.747Z", "marketplace_id": "f71a8951368a4cc085cf7875ff44e61c", "object": { "result": "APPROVED", "holder_id": "ea01803b31be48479e304fed7fc5cd14", "applicant_id": "bcc25a6751c14b52af1340d40dba78c5", "assessment_id": "eec4fea1-c861-4ce1-bd10-2a1731d8bf05" } } 
json=None</msg>
<msg timestamp="20210322 02:40:03.530" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:40:03.329" endtime="20210322 02:40:03.530"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:40:03.531" level="INFO">{'message': 'Holder approved successfully'}</msg>
<status status="PASS" starttime="20210322 02:40:03.531" endtime="20210322 02:40:03.531"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:40:03.532" level="INFO">ddaa514ebef005b2</msg>
<status status="PASS" starttime="20210322 02:40:03.531" endtime="20210322 02:40:03.532"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:40:03.532" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:40:03.532" endtime="20210322 02:40:03.532"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 02:40:03.533" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:40:03.533" endtime="20210322 02:40:03.533"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:03.320" endtime="20210322 02:40:03.533"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 02:40:03.534" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:40:03.533" endtime="20210322 02:40:03.534"></status>
</kw>
<kw name="buscar account por holder" library="accounts_get_accounts_by_holder">
<kw name="conectar accounts" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accounts</arg>
<arg>url=${account_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 02:40:03.535" level="INFO">Creating Session using : alias=accounts, url=https://banking-accounts-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 02:40:03.535" endtime="20210322 02:40:03.536"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:03.534" endtime="20210322 02:40:03.536"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accounts</arg>
<arg>/marketplaces/${marketplace_external_key}/holders/${holder_external_key}/accounts</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:40:03.537" level="INFO">GET Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/holders/ea01803b31be48479e304fed7fc5cd14/accounts, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 02:40:04.158" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:40:03.536" endtime="20210322 02:40:04.158"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:40:04.159" level="INFO">{'items': [{'id': '780fb713683f4b36a2a22e3ed975e2c1', 'holder': 'ea01803b31be48479e304fed7fc5cd14', 'balance': '0.00', 'currency': 'BRL', 'routing_number': '001', 'number': '474458944', 'status': 'active', 'metadata': {}, 'created_at': '2021-03-22T05:40:04.356879', 'updated_at': '2021-03-22T05:40:04.356879', 'primary': True, 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'uri': '/v2/marketplaces/f71a8951368a4cc085cf7875ff44e61c/accounts/780fb713683f4b36a2a22e3ed975e2c1', 'resource': 'payment_account'}], 'has_more': False, 'limit': 100, 'total_pages': 1, 'page': 1, 'offset': 0, 'total': '1', 'query_count': '1'}</msg>
<status status="PASS" starttime="20210322 02:40:04.158" endtime="20210322 02:40:04.159"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:40:04.161" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:40:04.160" endtime="20210322 02:40:04.162"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["id"]}</arg>
</arguments>
<assign>
<var>${account_external_key}</var>
</assign>
<msg timestamp="20210322 02:40:04.164" level="INFO">${account_external_key} = 780fb713683f4b36a2a22e3ed975e2c1</msg>
<status status="PASS" starttime="20210322 02:40:04.162" endtime="20210322 02:40:04.164"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_external_key}</arg>
</arguments>
<msg timestamp="20210322 02:40:04.167" level="INFO">${account_external_key} = 780fb713683f4b36a2a22e3ed975e2c1</msg>
<status status="PASS" starttime="20210322 02:40:04.165" endtime="20210322 02:40:04.167"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["number"]}</arg>
</arguments>
<assign>
<var>${account_number}</var>
</assign>
<msg timestamp="20210322 02:40:04.169" level="INFO">${account_number} = 474458944</msg>
<status status="PASS" starttime="20210322 02:40:04.167" endtime="20210322 02:40:04.169"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_number}</arg>
</arguments>
<msg timestamp="20210322 02:40:04.170" level="INFO">${account_number} = 474458944</msg>
<status status="PASS" starttime="20210322 02:40:04.169" endtime="20210322 02:40:04.171"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["routing_number"]}</arg>
</arguments>
<assign>
<var>${account_routing_number}</var>
</assign>
<msg timestamp="20210322 02:40:04.172" level="INFO">${account_routing_number} = 001</msg>
<status status="PASS" starttime="20210322 02:40:04.171" endtime="20210322 02:40:04.172"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_routing_number}</arg>
</arguments>
<msg timestamp="20210322 02:40:04.173" level="INFO">${account_routing_number} = 001</msg>
<status status="PASS" starttime="20210322 02:40:04.173" endtime="20210322 02:40:04.173"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:03.534" endtime="20210322 02:40:04.175"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 02:40:04.175" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:40:04.175" endtime="20210322 02:40:04.175"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:00.930" endtime="20210322 02:40:04.175"></status>
</kw>
<kw name="criar chave pix" library="pix_dict_create_entry">
<arguments>
<arg>type=evp</arg>
<arg>value=${EMPTY}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 02:40:04.179" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 02:40:04.177" endtime="20210322 02:40:04.179"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:04.177" endtime="20210322 02:40:04.179"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${type}</arg>
</arguments>
<msg timestamp="20210322 02:40:04.179" level="INFO">${type} = evp</msg>
<status status="PASS" starttime="20210322 02:40:04.179" endtime="20210322 02:40:04.180"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210322 02:40:04.180" level="INFO">${value} = </msg>
<status status="PASS" starttime="20210322 02:40:04.180" endtime="20210322 02:40:04.181"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:40:04.182" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 02:40:04.181" endtime="20210322 02:40:04.182"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "${type}",</arg>
<arg>"value": "${value}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 02:40:04.184" level="INFO">${body} = { "type": "evp", "value": "" }</msg>
<status status="PASS" starttime="20210322 02:40:04.182" endtime="20210322 02:40:04.184"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:40:04.184" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/ea01803b31be48479e304fed7fc5cd14/accounts/780fb713683f4b36a2a22e3ed975e2c1/entries, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "evp", "value": "" } 
json=None</msg>
<msg timestamp="20210322 02:40:05.903" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:40:04.184" endtime="20210322 02:40:05.903"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:40:05.905" level="INFO">{'id': '16dab744b46d47b0af0d7adcee3444a7', 'status': 'active', 'created_at': '2021-03-22T02:40:05.719', 'updated_at': '2021-03-22T02:40:06.765', 'key': {'value': '246e2797-dd05-4539-8d6a-911732dad954', 'type': 'evp'}, 'account': {'id': '780fb713683f4b36a2a22e3ed975e2c1', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': 'ea01803b31be48479e304fed7fc5cd14', 'owner': {'name': 'Holder de teste', 'national_registration': '01536792470', 'type': 'individual'}, 'routing_number': '001', 'number': '474458944', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}, 'resource': 'pix.entry'}</msg>
<status status="PASS" starttime="20210322 02:40:05.904" endtime="20210322 02:40:05.905"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:40:05.907" level="INFO">8ce5c087c6ab39aa</msg>
<status status="PASS" starttime="20210322 02:40:05.906" endtime="20210322 02:40:05.907"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 02:40:05.909" level="INFO">201</msg>
<status status="PASS" starttime="20210322 02:40:05.908" endtime="20210322 02:40:05.909"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:40:05.911" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:40:05.910" endtime="20210322 02:40:05.911"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${entry_external_key}</var>
</assign>
<msg timestamp="20210322 02:40:05.913" level="INFO">${entry_external_key} = 16dab744b46d47b0af0d7adcee3444a7</msg>
<status status="PASS" starttime="20210322 02:40:05.912" endtime="20210322 02:40:05.914"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${entry_external_key}</arg>
</arguments>
<msg timestamp="20210322 02:40:05.915" level="INFO">${entry_external_key} = 16dab744b46d47b0af0d7adcee3444a7</msg>
<status status="PASS" starttime="20210322 02:40:05.914" endtime="20210322 02:40:05.915"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["key"]["value"]}</arg>
</arguments>
<assign>
<var>${entry_key_value}</var>
</assign>
<msg timestamp="20210322 02:40:05.917" level="INFO">${entry_key_value} = 246e2797-dd05-4539-8d6a-911732dad954</msg>
<status status="PASS" starttime="20210322 02:40:05.916" endtime="20210322 02:40:05.917"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${entry_key_value}</arg>
</arguments>
<msg timestamp="20210322 02:40:05.918" level="INFO">${entry_key_value} = 246e2797-dd05-4539-8d6a-911732dad954</msg>
<status status="PASS" starttime="20210322 02:40:05.918" endtime="20210322 02:40:05.918"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:04.177" endtime="20210322 02:40:05.919"></status>
</kw>
<kw name="validar criação da chave pix" library="asserts">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando status_code</arg>
</arguments>
<msg timestamp="20210322 02:40:05.920" level="INFO">Validando status_code</msg>
<status status="PASS" starttime="20210322 02:40:05.920" endtime="20210322 02:40:05.921"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${type}' == 'evp'</arg>
<arg>Should Be Equal As Integers</arg>
<arg>${response.status_code}</arg>
<arg>201</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'phone'</arg>
<arg>Should Be Equal As Integers</arg>
<arg>${response.status_code}</arg>
<arg>202</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'email'</arg>
<arg>Should Be Equal As Integers</arg>
<arg>${response.status_code}</arg>
<arg>202</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'national_registration'</arg>
<arg>Should Be Equal As Integers</arg>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 02:40:05.923" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:40:05.922" endtime="20210322 02:40:05.924"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:05.921" endtime="20210322 02:40:05.924"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar status da chave</arg>
</arguments>
<msg timestamp="20210322 02:40:05.925" level="INFO">Validar status da chave</msg>
<status status="PASS" starttime="20210322 02:40:05.924" endtime="20210322 02:40:05.925"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${type}' == 'evp'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["status"]}</arg>
<arg>active</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'phone'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["status"]}</arg>
<arg>waiting_ownership_verification</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'email'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["status"]}</arg>
<arg>waiting_ownership_verification</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'national_registration'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["status"]}</arg>
<arg>active</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["status"]}</arg>
<arg>active</arg>
</arguments>
<status status="PASS" starttime="20210322 02:40:05.926" endtime="20210322 02:40:05.927"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:05.925" endtime="20210322 02:40:05.927"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando Tipo da chave PIX</arg>
</arguments>
<msg timestamp="20210322 02:40:05.928" level="INFO">Validando Tipo da chave PIX</msg>
<status status="PASS" starttime="20210322 02:40:05.927" endtime="20210322 02:40:05.928"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${type}' == 'evp'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["type"]}</arg>
<arg>${type}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'phone'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["type"]}</arg>
<arg>${type}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'email'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["type"]}</arg>
<arg>${type}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'national_registration'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["type"]}</arg>
<arg>${type}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["key"]["type"]}</arg>
<arg>${type}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:40:05.929" endtime="20210322 02:40:05.930"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:05.928" endtime="20210322 02:40:05.930"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando Valor da chave PIX</arg>
</arguments>
<msg timestamp="20210322 02:40:05.930" level="INFO">Validando Valor da chave PIX</msg>
<status status="PASS" starttime="20210322 02:40:05.930" endtime="20210322 02:40:05.930"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${type}' == 'evp'</arg>
<arg>Should Not Be Empty</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'phone'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${phone_pix}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'email'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${email_pix}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'national_registration'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${national_registration}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${response.json()["key"]["value"]}</arg>
</arguments>
<msg timestamp="20210322 02:40:05.932" level="INFO">Length is 36</msg>
<status status="PASS" starttime="20210322 02:40:05.931" endtime="20210322 02:40:05.932"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:05.931" endtime="20210322 02:40:05.932"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando dados da conta</arg>
</arguments>
<msg timestamp="20210322 02:40:05.932" level="INFO">Validando dados da conta</msg>
<status status="PASS" starttime="20210322 02:40:05.932" endtime="20210322 02:40:05.933"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["id"]}</arg>
<arg>${account_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:40:05.933" endtime="20210322 02:40:05.934"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["marketplace"]}</arg>
<arg>${marketplace_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:40:05.934" endtime="20210322 02:40:05.934"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["holder"]}</arg>
<arg>${holder_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:40:05.935" endtime="20210322 02:40:05.936"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["number"]}</arg>
<arg>${account_number}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:40:05.936" endtime="20210322 02:40:05.936"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["routing_number"]}</arg>
<arg>${account_routing_number}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:40:05.937" endtime="20210322 02:40:05.938"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["type"]}</arg>
<arg>CACC</arg>
</arguments>
<status status="PASS" starttime="20210322 02:40:05.938" endtime="20210322 02:40:05.938"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar Proprietário da Account Owner</arg>
</arguments>
<msg timestamp="20210322 02:40:05.939" level="INFO">Validar Proprietário da Account Owner</msg>
<status status="PASS" starttime="20210322 02:40:05.939" endtime="20210322 02:40:05.939"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${holder_type}' == 'individual'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["account"]["owner"]["name"]}</arg>
<arg>${holder_name}</arg>
<arg>ELSE IF</arg>
<arg>'${holder_type}' == 'business'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["account"]["owner"]["name"]}</arg>
<arg>${legal_name}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["account"]["owner"]["name"]}</arg>
<arg>${holder_name}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:40:05.940" endtime="20210322 02:40:05.941"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:05.939" endtime="20210322 02:40:05.941"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar national_registration da Account Owner</arg>
</arguments>
<msg timestamp="20210322 02:40:05.941" level="INFO">Validar national_registration da Account Owner</msg>
<status status="PASS" starttime="20210322 02:40:05.941" endtime="20210322 02:40:05.942"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${holder_type}' == 'individual'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["account"]["owner"]["national_registration"]}</arg>
<arg>${national_registration}</arg>
<arg>ELSE IF</arg>
<arg>'${holder_type}' == 'business'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["account"]["owner"]["national_registration"]}</arg>
<arg>${national_registration}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["account"]["owner"]["national_registration"]}</arg>
<arg>${national_registration}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:40:05.943" endtime="20210322 02:40:05.943"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:05.942" endtime="20210322 02:40:05.943"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar Holder Type do Account Owner</arg>
</arguments>
<msg timestamp="20210322 02:40:05.944" level="INFO">Validar Holder Type do Account Owner</msg>
<status status="PASS" starttime="20210322 02:40:05.944" endtime="20210322 02:40:05.944"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${holder_type}' == 'individual'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["account"]["owner"]["type"]}</arg>
<arg>${holder_type}</arg>
<arg>ELSE IF</arg>
<arg>'${holder_type}' == 'business'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["account"]["owner"]["type"]}</arg>
<arg>${holder_type}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["account"]["owner"]["type"]}</arg>
<arg>${holder_type}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:40:05.945" endtime="20210322 02:40:05.945"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:05.944" endtime="20210322 02:40:05.946"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar PSP</arg>
</arguments>
<msg timestamp="20210322 02:40:05.946" level="INFO">Validar PSP</msg>
<status status="PASS" starttime="20210322 02:40:05.946" endtime="20210322 02:40:05.946"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["psp"]["code"]}</arg>
<arg>19468242</arg>
</arguments>
<status status="PASS" starttime="20210322 02:40:05.946" endtime="20210322 02:40:05.947"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["psp"]["name"]}</arg>
<arg>Zoop Tecnologia e Meios de Pagamento S.A.</arg>
</arguments>
<status status="PASS" starttime="20210322 02:40:05.947" endtime="20210322 02:40:05.948"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:05.919" endtime="20210322 02:40:05.948"></status>
</kw>
<doc>Fluxo Básico</doc>
<tags>
<tag>regression_test</tag>
<tag>smoke_test</tag>
</tags>
<status status="PASS" starttime="20210322 02:40:00.929" endtime="20210322 02:40:05.948" critical="yes"></status>
</test>
<test id="s1-s1-s3-t2" name="Cenário: Criando Chave de Endereçamento do tipo Telefone">
<kw name="Random Number" library="FakerLibrary">
<doc>Returns a random number with 1 digit (default, when digits==None),
a random number with 0 to given number of digits, or a random number
with given number to given number of digits (when ``fix_len==True``).</doc>
<arguments>
<arg>digits=8</arg>
<arg>fix_len=True</arg>
</arguments>
<assign>
<var>${phone}</var>
</assign>
<msg timestamp="20210322 02:40:05.950" level="INFO">${phone} = 73194349</msg>
<status status="PASS" starttime="20210322 02:40:05.949" endtime="20210322 02:40:05.950"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>+55219${phone}</arg>
</arguments>
<assign>
<var>${phone_pix}</var>
</assign>
<msg timestamp="20210322 02:40:05.950" level="INFO">${phone_pix} = +5521973194349</msg>
<status status="PASS" starttime="20210322 02:40:05.950" endtime="20210322 02:40:05.951"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${phone_pix}</arg>
</arguments>
<msg timestamp="20210322 02:40:05.951" level="INFO">${phone_pix} = +5521973194349</msg>
<status status="PASS" starttime="20210322 02:40:05.951" endtime="20210322 02:40:05.951"></status>
</kw>
<kw name="criar holder individual ativo" library="accreditation_create_holder_active">
<kw name="conectar accreditation" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accreditation</arg>
<arg>url=${accreditation_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 02:40:05.953" level="INFO">Creating Session using : alias=accreditation, url=https://banking-accreditation-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 02:40:05.953" endtime="20210322 02:40:05.954"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:05.953" endtime="20210322 02:40:05.954"></status>
</kw>
<kw name="Cpf" library="FakerLibrary">
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 02:40:05.955" level="INFO">${national_registration} = 068.413.957-00</msg>
<status status="PASS" starttime="20210322 02:40:05.954" endtime="20210322 02:40:05.955"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${national_registration}</arg>
<arg>.</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 02:40:05.955" level="INFO">${national_registration} = 068413957-00</msg>
<status status="PASS" starttime="20210322 02:40:05.955" endtime="20210322 02:40:05.955"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${national_registration}</arg>
<arg>-</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 02:40:05.956" level="INFO">${national_registration} = 06841395700</msg>
<status status="PASS" starttime="20210322 02:40:05.956" endtime="20210322 02:40:05.956"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${national_registration}</arg>
</arguments>
<msg timestamp="20210322 02:40:05.957" level="INFO">${national_registration} = 06841395700</msg>
<status status="PASS" starttime="20210322 02:40:05.957" endtime="20210322 02:40:05.957"></status>
</kw>
<kw name="Rg" library="FakerLibrary">
<doc>Brazilian RG, return plain numbers.
Check:  https://www.ngmatematica.com/2014/02/como-determinar-o-digito-verificador-do.html</doc>
<assign>
<var>${identity_card}</var>
</assign>
<msg timestamp="20210322 02:40:05.958" level="INFO">${identity_card} = 046871524</msg>
<status status="PASS" starttime="20210322 02:40:05.957" endtime="20210322 02:40:05.958"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${identity_card}</arg>
</arguments>
<msg timestamp="20210322 02:40:05.958" level="INFO">${identity_card} = 046871524</msg>
<status status="PASS" starttime="20210322 02:40:05.958" endtime="20210322 02:40:05.959"></status>
</kw>
<kw name="criar holder individual" library="accreditation_post_holder_individual">
<arguments>
<arg>holder_type=individual</arg>
<arg>holder_name=${holder_name}</arg>
<arg>email=${email}</arg>
<arg>national_registration=${national_registration}</arg>
<arg>revenue=${revenue}</arg>
<arg>birthday=${birthday}</arg>
<arg>mothers_name=${mothers_name}</arg>
<arg>identity_card=${identity_card}</arg>
<arg>pep=false</arg>
<arg>cbo=${cbo}</arg>
</arguments>
<kw name="conectar accreditation" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accreditation</arg>
<arg>url=${accreditation_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 02:40:05.961" level="INFO">Creating Session using : alias=accreditation, url=https://banking-accreditation-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 02:40:05.960" endtime="20210322 02:40:05.961"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:05.960" endtime="20210322 02:40:05.961"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_type}</arg>
</arguments>
<msg timestamp="20210322 02:40:05.962" level="INFO">${holder_type} = individual</msg>
<status status="PASS" starttime="20210322 02:40:05.962" endtime="20210322 02:40:05.962"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_name}</arg>
</arguments>
<msg timestamp="20210322 02:40:05.963" level="INFO">${holder_name} = Holder de teste</msg>
<status status="PASS" starttime="20210322 02:40:05.962" endtime="20210322 02:40:05.963"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:40:05.964" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 02:40:05.963" endtime="20210322 02:40:05.964"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "${holder_type}",</arg>
<arg>"name": "${holder_name}",</arg>
<arg>"email": "${email}",</arg>
<arg>"national_registration": "${national_registration}",</arg>
<arg>"revenue": ${revenue},</arg>
<arg>"birthday": "${birthday}",</arg>
<arg>"mothers_name": "${mothers_name}",</arg>
<arg>"identity_card": "${identity_card}",</arg>
<arg>"pep": false,</arg>
<arg>"cbo": ${cbo}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 02:40:05.965" level="INFO">${body} = { "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "06841395700", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder",...</msg>
<status status="PASS" starttime="20210322 02:40:05.964" endtime="20210322 02:40:05.965"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:40:05.966" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "06841395700", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder", "identity_card": "046871524", "pep": false, "cbo": 821450 } 
json=None</msg>
<msg timestamp="20210322 02:40:06.634" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:40:05.965" endtime="20210322 02:40:06.634"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:40:06.635" level="INFO">{'id': '4e53f860bba44435a79235e78ff2dc81', 'name': 'Holder de teste', 'revenue': 5500.0, 'email': 'teste@teste.com.br', 'status': 'waiting_info_and_documents', 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'marketplace_name': 'Marketplace de Teste', 'created_at': '2021-03-22T02:40:07.470821', 'updated_at': '2021-03-22T02:40:07.470823', 'type': 'individual', 'national_registration': '06841395700', 'birthday': '1988-04-23', 'mothers_name': 'Mãe do Holder', 'identity_card': '046871524', 'pep': False, 'cbo': '821450', '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/4e53f860bba44435a79235e78ff2dc81', 'type': 'GET'}, 'phones': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/4e53f860bba44435a79235e78ff2dc81/phones', 'type': 'GET'}, 'addresses': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/4e53f860bba44435a79235e78ff2dc81/addresses', 'type': 'GET'}, 'documents': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/4e53f860bba44435a79235e78ff2dc81/documents', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 02:40:06.634" endtime="20210322 02:40:06.635"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:40:06.636" level="INFO">e2528f45b9c551ee</msg>
<status status="PASS" starttime="20210322 02:40:06.636" endtime="20210322 02:40:06.636"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${body}</arg>
</arguments>
<msg timestamp="20210322 02:40:06.637" level="INFO">{ "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "06841395700", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder", "identity_card": "046871524", "pep": false, "cbo": 821450 }</msg>
<status status="PASS" starttime="20210322 02:40:06.637" endtime="20210322 02:40:06.637"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:40:06.638" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:40:06.638" endtime="20210322 02:40:06.638"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${holder_external_key}</var>
</assign>
<msg timestamp="20210322 02:40:06.640" level="INFO">${holder_external_key} = 4e53f860bba44435a79235e78ff2dc81</msg>
<status status="PASS" starttime="20210322 02:40:06.639" endtime="20210322 02:40:06.640"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_external_key}</arg>
</arguments>
<msg timestamp="20210322 02:40:06.641" level="INFO">${holder_external_key} = 4e53f860bba44435a79235e78ff2dc81</msg>
<status status="PASS" starttime="20210322 02:40:06.640" endtime="20210322 02:40:06.641"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:05.959" endtime="20210322 02:40:06.641"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_name}</arg>
</arguments>
<msg timestamp="20210322 02:40:06.642" level="INFO">${holder_name} = Holder de teste</msg>
<status status="PASS" starttime="20210322 02:40:06.641" endtime="20210322 02:40:06.642"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 02:40:06.643" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:40:06.642" endtime="20210322 02:40:06.643"></status>
</kw>
<kw name="criar holder phone" library="accreditation_post_holder_phone">
<arguments>
<arg>21</arg>
<arg>51</arg>
<arg>996221236</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:40:06.645" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 02:40:06.644" endtime="20210322 02:40:06.645"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"area_code": "${phone_area_code}",</arg>
<arg>"country_code": "${phone_country_code}",</arg>
<arg>"number": "${phone_number}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 02:40:06.646" level="INFO">${body} = { "area_code": "21", "country_code": "51", "number": "996221236" }</msg>
<status status="PASS" starttime="20210322 02:40:06.645" endtime="20210322 02:40:06.646"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/phones</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:40:06.647" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/4e53f860bba44435a79235e78ff2dc81/phones, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "area_code": "21", "country_code": "51", "number": "996221236" } 
json=None</msg>
<msg timestamp="20210322 02:40:06.869" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:40:06.647" endtime="20210322 02:40:06.869"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:40:06.873" level="INFO">{'id': '1f2164e27b394def81f59e02dd7d4113', 'area_code': '21', 'country_code': '51', 'number': '996221236', 'main': True, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/4e53f860bba44435a79235e78ff2dc81/phones/1f2164e27b394def81f59e02dd7d4113', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/4e53f860bba44435a79235e78ff2dc81', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 02:40:06.871" endtime="20210322 02:40:06.873"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:40:06.875" level="INFO">bd60c6098ed90cac</msg>
<status status="PASS" starttime="20210322 02:40:06.874" endtime="20210322 02:40:06.875"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:40:06.876" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:40:06.875" endtime="20210322 02:40:06.876"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${phone_external_key}</var>
</assign>
<msg timestamp="20210322 02:40:06.879" level="INFO">${phone_external_key} = 1f2164e27b394def81f59e02dd7d4113</msg>
<status status="PASS" starttime="20210322 02:40:06.876" endtime="20210322 02:40:06.879"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${phone_external_key}</arg>
</arguments>
<msg timestamp="20210322 02:40:06.879" level="INFO">${phone_external_key} = 1f2164e27b394def81f59e02dd7d4113</msg>
<status status="PASS" starttime="20210322 02:40:06.879" endtime="20210322 02:40:06.879"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:06.643" endtime="20210322 02:40:06.879"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 02:40:06.881" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:40:06.881" endtime="20210322 02:40:06.882"></status>
</kw>
<kw name="criar holder address" library="accreditation_post_holder_address">
<arguments>
<arg>Rio de Janeiro</arg>
<arg>Rio de Janeiro</arg>
<arg>Brasil</arg>
<arg>Bairro de Testes</arg>
<arg>Rua de Testes</arg>
<arg>90</arg>
<arg>apto 200</arg>
<arg>21550987</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:40:06.884" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 02:40:06.883" endtime="20210322 02:40:06.884"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"city": "${city}",</arg>
<arg>"state": "${state}",</arg>
<arg>"country": "${country}",</arg>
<arg>"neighborhood": "${neighborhood}",</arg>
<arg>"street": "${street}",</arg>
<arg>"number": "${number}",</arg>
<arg>"complement": "${complement}",</arg>
<arg>"postal_code": "${postal_code}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 02:40:06.885" level="INFO">${body} = { "city": "Rio de Janeiro", "state": "Rio de Janeiro", "country": "Brasil", "neighborhood": "Bairro de Testes", "street": "Rua de Testes", "number": "90", "complement": "apto 200", "postal_code": "215...</msg>
<status status="PASS" starttime="20210322 02:40:06.884" endtime="20210322 02:40:06.885"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/addresses</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:40:06.886" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/4e53f860bba44435a79235e78ff2dc81/addresses, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "city": "Rio de Janeiro", "state": "Rio de Janeiro", "country": "Brasil", "neighborhood": "Bairro de Testes", "street": "Rua de Testes", "number": "90", "complement": "apto 200", "postal_code": "21550987" } 
json=None</msg>
<msg timestamp="20210322 02:40:07.099" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:40:06.885" endtime="20210322 02:40:07.099"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:40:07.100" level="INFO">{'id': 'dc172eda520a4c6abd309c1dde78d797', 'street': 'Rua de Testes', 'number': '90', 'city': 'Rio de Janeiro', 'complement': 'apto 200', 'state': 'Rio de Janeiro', 'neighborhood': 'Bairro de Testes', 'postal_code': '21550987', 'country': 'Brasil', 'main': True, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/4e53f860bba44435a79235e78ff2dc81/addresses/dc172eda520a4c6abd309c1dde78d797', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/4e53f860bba44435a79235e78ff2dc81', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 02:40:07.099" endtime="20210322 02:40:07.100"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:40:07.101" level="INFO">b2d35bcb6abe0f5e</msg>
<status status="PASS" starttime="20210322 02:40:07.101" endtime="20210322 02:40:07.102"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:40:07.103" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:40:07.102" endtime="20210322 02:40:07.103"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${address_external_key}</var>
</assign>
<msg timestamp="20210322 02:40:07.104" level="INFO">${address_external_key} = dc172eda520a4c6abd309c1dde78d797</msg>
<status status="PASS" starttime="20210322 02:40:07.103" endtime="20210322 02:40:07.104"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${address_external_key}</arg>
</arguments>
<msg timestamp="20210322 02:40:07.105" level="INFO">${address_external_key} = dc172eda520a4c6abd309c1dde78d797</msg>
<status status="PASS" starttime="20210322 02:40:07.105" endtime="20210322 02:40:07.106"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:06.882" endtime="20210322 02:40:07.106"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 02:40:07.107" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:40:07.106" endtime="20210322 02:40:07.107"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>SELFIE</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:40:07.109" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 02:40:07.108" endtime="20210322 02:40:07.109"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 02:40:07.110" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 02:40:07.112" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 02:40:07.109" endtime="20210322 02:40:07.112"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:40:07.113" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/4e53f860bba44435a79235e78ff2dc81/documents?type=SELFIE, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 02:40:07.384" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:40:07.112" endtime="20210322 02:40:07.384"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:40:07.387" level="INFO">{'id': '8926009b1db442a785f153b60733babc', 'document_type': 'selfie', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/4e53f860bba44435a79235e78ff2dc81/documents/8926009b1db442a785f153b60733babc', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/4e53f860bba44435a79235e78ff2dc81', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/4e53f860bba44435a79235e78ff2dc81/documents/8926009b1db442a785f153b60733babc/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 02:40:07.385" endtime="20210322 02:40:07.388"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:40:07.391" level="INFO">9de9fd54643b04a7</msg>
<status status="PASS" starttime="20210322 02:40:07.389" endtime="20210322 02:40:07.391"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:40:07.393" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:40:07.392" endtime="20210322 02:40:07.393"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 02:40:07.395" level="INFO">${document_external_key} = 8926009b1db442a785f153b60733babc</msg>
<status status="PASS" starttime="20210322 02:40:07.394" endtime="20210322 02:40:07.395"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 02:40:07.397" level="INFO">${document_external_key} = 8926009b1db442a785f153b60733babc</msg>
<status status="PASS" starttime="20210322 02:40:07.396" endtime="20210322 02:40:07.397"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:07.107" endtime="20210322 02:40:07.397"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 02:40:07.398" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:40:07.397" endtime="20210322 02:40:07.398"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>RG_FRENTE</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:40:07.401" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 02:40:07.400" endtime="20210322 02:40:07.401"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 02:40:07.402" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 02:40:07.405" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 02:40:07.402" endtime="20210322 02:40:07.405"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:40:07.406" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/4e53f860bba44435a79235e78ff2dc81/documents?type=RG_FRENTE, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 02:40:07.659" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:40:07.405" endtime="20210322 02:40:07.660"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:40:07.662" level="INFO">{'id': '12b4d3e2ec3a43f7bbf34bc5f4d86a19', 'document_type': 'rg_frente', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/4e53f860bba44435a79235e78ff2dc81/documents/12b4d3e2ec3a43f7bbf34bc5f4d86a19', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/4e53f860bba44435a79235e78ff2dc81', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/4e53f860bba44435a79235e78ff2dc81/documents/12b4d3e2ec3a43f7bbf34bc5f4d86a19/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 02:40:07.661" endtime="20210322 02:40:07.662"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:40:07.664" level="INFO">9217c02dca11b52d</msg>
<status status="PASS" starttime="20210322 02:40:07.663" endtime="20210322 02:40:07.664"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:40:07.666" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:40:07.665" endtime="20210322 02:40:07.666"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 02:40:07.669" level="INFO">${document_external_key} = 12b4d3e2ec3a43f7bbf34bc5f4d86a19</msg>
<status status="PASS" starttime="20210322 02:40:07.667" endtime="20210322 02:40:07.669"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 02:40:07.671" level="INFO">${document_external_key} = 12b4d3e2ec3a43f7bbf34bc5f4d86a19</msg>
<status status="PASS" starttime="20210322 02:40:07.670" endtime="20210322 02:40:07.671"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:07.399" endtime="20210322 02:40:07.672"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 02:40:07.672" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:40:07.672" endtime="20210322 02:40:07.673"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>RG_VERSO</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:40:07.675" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 02:40:07.675" endtime="20210322 02:40:07.676"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 02:40:07.676" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 02:40:07.678" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 02:40:07.676" endtime="20210322 02:40:07.679"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:40:07.680" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/4e53f860bba44435a79235e78ff2dc81/documents?type=RG_VERSO, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 02:40:07.927" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:40:07.679" endtime="20210322 02:40:07.928"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:40:07.930" level="INFO">{'id': '7e8c90dad90840c08dce54d1035c42b5', 'document_type': 'rg_verso', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/4e53f860bba44435a79235e78ff2dc81/documents/7e8c90dad90840c08dce54d1035c42b5', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/4e53f860bba44435a79235e78ff2dc81', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/4e53f860bba44435a79235e78ff2dc81/documents/7e8c90dad90840c08dce54d1035c42b5/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 02:40:07.929" endtime="20210322 02:40:07.930"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:40:07.932" level="INFO">ceee25c736502c44</msg>
<status status="PASS" starttime="20210322 02:40:07.931" endtime="20210322 02:40:07.932"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:40:07.933" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:40:07.932" endtime="20210322 02:40:07.933"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 02:40:07.936" level="INFO">${document_external_key} = 7e8c90dad90840c08dce54d1035c42b5</msg>
<status status="PASS" starttime="20210322 02:40:07.934" endtime="20210322 02:40:07.936"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 02:40:07.937" level="INFO">${document_external_key} = 7e8c90dad90840c08dce54d1035c42b5</msg>
<status status="PASS" starttime="20210322 02:40:07.936" endtime="20210322 02:40:07.937"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:07.673" endtime="20210322 02:40:07.937"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 02:40:07.938" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:40:07.938" endtime="20210322 02:40:07.938"></status>
</kw>
<kw name="solicitar aprovação do holder" library="accreditation_request_approval">
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:40:07.939" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 02:40:07.939" endtime="20210322 02:40:07.939"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/approval</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:40:07.941" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/4e53f860bba44435a79235e78ff2dc81/approval, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data=None 
json=None</msg>
<msg timestamp="20210322 02:40:08.229" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:40:07.940" endtime="20210322 02:40:08.229"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:40:08.230" level="INFO">{'message': 'Approval request accepted successfully. Processing analysis'}</msg>
<status status="PASS" starttime="20210322 02:40:08.229" endtime="20210322 02:40:08.230"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:40:08.231" level="INFO">226083148b4034a9</msg>
<status status="PASS" starttime="20210322 02:40:08.231" endtime="20210322 02:40:08.232"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:40:08.233" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:40:08.232" endtime="20210322 02:40:08.233"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:07.938" endtime="20210322 02:40:08.234"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 02:40:08.235" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:40:08.234" endtime="20210322 02:40:08.235"></status>
</kw>
<kw name="recebendo notificação de aprovação" library="accreditation_risk_notification">
<kw name="Uuid 4" library="FakerLibrary">
<doc>Generates a random UUID4 string.
:param cast_to: Specify what type the UUID should be cast to. Default is `str`
:type cast_to: callable</doc>
<assign>
<var>${assessment_id}</var>
</assign>
<msg timestamp="20210322 02:40:08.237" level="INFO">${assessment_id} = f808132d-0080-4268-b789-6fb295ebc66d</msg>
<status status="PASS" starttime="20210322 02:40:08.236" endtime="20210322 02:40:08.237"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>year</arg>
</arguments>
<assign>
<var>${year}</var>
</assign>
<msg timestamp="20210322 02:40:08.238" level="INFO">${year} = 2021</msg>
<status status="PASS" starttime="20210322 02:40:08.237" endtime="20210322 02:40:08.238"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>month</arg>
</arguments>
<assign>
<var>${month}</var>
</assign>
<msg timestamp="20210322 02:40:08.239" level="INFO">${month} = 03</msg>
<status status="PASS" starttime="20210322 02:40:08.238" endtime="20210322 02:40:08.239"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>day</arg>
</arguments>
<assign>
<var>${day}</var>
</assign>
<msg timestamp="20210322 02:40:08.241" level="INFO">${day} = 22</msg>
<status status="PASS" starttime="20210322 02:40:08.240" endtime="20210322 02:40:08.241"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:40:08.242" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 02:40:08.241" endtime="20210322 02:40:08.242"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "risk.assessment.result",</arg>
<arg>"resource": "business.holder",</arg>
<arg>"created_at": "${year}-${month}-${day} 15:28:56.747Z",</arg>
<arg>"marketplace_id": "${marketplace_external_key}",</arg>
<arg>"object": {</arg>
<arg>"result": "APPROVED",</arg>
<arg>"holder_id": "${holder_external_key}",</arg>
<arg>"applicant_id": "${application_external_key}",</arg>
<arg>"assessment_id": "${assessment_id}"</arg>
<arg>}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 02:40:08.243" level="INFO">${body} = { "type": "risk.assessment.result", "resource": "business.holder", "created_at": "2021-03-22 15:28:56.747Z", "marketplace_id": "f71a8951368a4cc085cf7875ff44e61c", "object": { "result": "APPROVED", "ho...</msg>
<status status="PASS" starttime="20210322 02:40:08.242" endtime="20210322 02:40:08.243"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/admin/internal_operation/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/registration/approval</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:40:08.244" level="INFO">POST Request using : uri=/admin/internal_operation/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/4e53f860bba44435a79235e78ff2dc81/registration/approval, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "risk.assessment.result", "resource": "business.holder", "created_at": "2021-03-22 15:28:56.747Z", "marketplace_id": "f71a8951368a4cc085cf7875ff44e61c", "object": { "result": "APPROVED", "holder_id": "4e53f860bba44435a79235e78ff2dc81", "applicant_id": "bcc25a6751c14b52af1340d40dba78c5", "assessment_id": "f808132d-0080-4268-b789-6fb295ebc66d" } } 
json=None</msg>
<msg timestamp="20210322 02:40:08.448" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:40:08.243" endtime="20210322 02:40:08.448"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:40:08.450" level="INFO">{'message': 'Holder approved successfully'}</msg>
<status status="PASS" starttime="20210322 02:40:08.449" endtime="20210322 02:40:08.450"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:40:08.451" level="INFO">1f20f30870c23305</msg>
<status status="PASS" starttime="20210322 02:40:08.450" endtime="20210322 02:40:08.451"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:40:08.452" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:40:08.452" endtime="20210322 02:40:08.452"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 02:40:08.453" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:40:08.453" endtime="20210322 02:40:08.453"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:08.235" endtime="20210322 02:40:08.454"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 02:40:08.454" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:40:08.454" endtime="20210322 02:40:08.455"></status>
</kw>
<kw name="buscar account por holder" library="accounts_get_accounts_by_holder">
<kw name="conectar accounts" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accounts</arg>
<arg>url=${account_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 02:40:08.457" level="INFO">Creating Session using : alias=accounts, url=https://banking-accounts-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 02:40:08.456" endtime="20210322 02:40:08.457"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:08.456" endtime="20210322 02:40:08.457"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accounts</arg>
<arg>/marketplaces/${marketplace_external_key}/holders/${holder_external_key}/accounts</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:40:08.458" level="INFO">GET Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/holders/4e53f860bba44435a79235e78ff2dc81/accounts, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 02:40:09.076" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:40:08.458" endtime="20210322 02:40:09.076"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:40:09.076" level="INFO">{'items': [{'id': '8fd102dac0f7462d89574aeebfd24f18', 'holder': '4e53f860bba44435a79235e78ff2dc81', 'balance': '0.00', 'currency': 'BRL', 'routing_number': '001', 'number': '9035707049', 'status': 'active', 'metadata': {}, 'created_at': '2021-03-22T05:40:09.275508', 'updated_at': '2021-03-22T05:40:09.275508', 'primary': True, 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'uri': '/v2/marketplaces/f71a8951368a4cc085cf7875ff44e61c/accounts/8fd102dac0f7462d89574aeebfd24f18', 'resource': 'payment_account'}], 'has_more': False, 'limit': 100, 'total_pages': 1, 'page': 1, 'offset': 0, 'total': '1', 'query_count': '1'}</msg>
<status status="PASS" starttime="20210322 02:40:09.076" endtime="20210322 02:40:09.076"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:40:09.077" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:40:09.076" endtime="20210322 02:40:09.077"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["id"]}</arg>
</arguments>
<assign>
<var>${account_external_key}</var>
</assign>
<msg timestamp="20210322 02:40:09.077" level="INFO">${account_external_key} = 8fd102dac0f7462d89574aeebfd24f18</msg>
<status status="PASS" starttime="20210322 02:40:09.077" endtime="20210322 02:40:09.077"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_external_key}</arg>
</arguments>
<msg timestamp="20210322 02:40:09.078" level="INFO">${account_external_key} = 8fd102dac0f7462d89574aeebfd24f18</msg>
<status status="PASS" starttime="20210322 02:40:09.077" endtime="20210322 02:40:09.078"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["number"]}</arg>
</arguments>
<assign>
<var>${account_number}</var>
</assign>
<msg timestamp="20210322 02:40:09.078" level="INFO">${account_number} = 9035707049</msg>
<status status="PASS" starttime="20210322 02:40:09.078" endtime="20210322 02:40:09.078"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_number}</arg>
</arguments>
<msg timestamp="20210322 02:40:09.079" level="INFO">${account_number} = 9035707049</msg>
<status status="PASS" starttime="20210322 02:40:09.079" endtime="20210322 02:40:09.079"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["routing_number"]}</arg>
</arguments>
<assign>
<var>${account_routing_number}</var>
</assign>
<msg timestamp="20210322 02:40:09.079" level="INFO">${account_routing_number} = 001</msg>
<status status="PASS" starttime="20210322 02:40:09.079" endtime="20210322 02:40:09.079"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_routing_number}</arg>
</arguments>
<msg timestamp="20210322 02:40:09.080" level="INFO">${account_routing_number} = 001</msg>
<status status="PASS" starttime="20210322 02:40:09.080" endtime="20210322 02:40:09.080"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:08.455" endtime="20210322 02:40:09.080"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 02:40:09.080" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:40:09.080" endtime="20210322 02:40:09.080"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:05.952" endtime="20210322 02:40:09.080"></status>
</kw>
<kw name="criar chave pix" library="pix_dict_create_entry">
<arguments>
<arg>type=phone</arg>
<arg>value=${phone_pix}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 02:40:09.081" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 02:40:09.081" endtime="20210322 02:40:09.082"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:09.081" endtime="20210322 02:40:09.082"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${type}</arg>
</arguments>
<msg timestamp="20210322 02:40:09.083" level="INFO">${type} = phone</msg>
<status status="PASS" starttime="20210322 02:40:09.082" endtime="20210322 02:40:09.083"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210322 02:40:09.083" level="INFO">${value} = +5521973194349</msg>
<status status="PASS" starttime="20210322 02:40:09.083" endtime="20210322 02:40:09.083"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:40:09.084" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 02:40:09.084" endtime="20210322 02:40:09.084"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "${type}",</arg>
<arg>"value": "${value}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 02:40:09.084" level="INFO">${body} = { "type": "phone", "value": "+5521973194349" }</msg>
<status status="PASS" starttime="20210322 02:40:09.084" endtime="20210322 02:40:09.084"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:40:09.085" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/4e53f860bba44435a79235e78ff2dc81/accounts/8fd102dac0f7462d89574aeebfd24f18/entries, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "phone", "value": "+5521973194349" } 
json=None</msg>
<msg timestamp="20210322 02:40:09.748" level="INFO">${response} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20210322 02:40:09.084" endtime="20210322 02:40:09.748"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:40:09.751" level="INFO">{'id': 'ea6ef177221e4b0f90a64d2100cc596b', 'status': 'waiting_ownership_verification', 'created_at': '2021-03-22T02:40:10.591', 'updated_at': '2021-03-22T02:40:10.591', 'key': {'value': '+5521973194349', 'type': 'phone'}, 'account': {'id': '8fd102dac0f7462d89574aeebfd24f18', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': '4e53f860bba44435a79235e78ff2dc81', 'owner': {'name': 'Holder de teste', 'national_registration': '06841395700', 'type': 'individual'}, 'routing_number': '001', 'number': '9035707049', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}, 'resource': 'pix.entry'}</msg>
<status status="PASS" starttime="20210322 02:40:09.749" endtime="20210322 02:40:09.751"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:40:09.753" level="INFO">778b8e022d5c5d67</msg>
<status status="PASS" starttime="20210322 02:40:09.752" endtime="20210322 02:40:09.754"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 02:40:09.755" level="INFO">202</msg>
<status status="PASS" starttime="20210322 02:40:09.754" endtime="20210322 02:40:09.756"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:40:09.758" level="INFO">${response} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20210322 02:40:09.757" endtime="20210322 02:40:09.758"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${entry_external_key}</var>
</assign>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:40:09.760" endtime="20210322 02:40:09.761"></status>
</kw>
<msg timestamp="20210322 02:40:09.762" level="INFO">${entry_external_key} = ea6ef177221e4b0f90a64d2100cc596b</msg>
<status status="PASS" starttime="20210322 02:40:09.759" endtime="20210322 02:40:09.762"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${entry_external_key}</arg>
</arguments>
<msg timestamp="20210322 02:40:09.763" level="INFO">${entry_external_key} = ea6ef177221e4b0f90a64d2100cc596b</msg>
<status status="PASS" starttime="20210322 02:40:09.762" endtime="20210322 02:40:09.763"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["key"]["value"]}</arg>
</arguments>
<assign>
<var>${entry_key_value}</var>
</assign>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["key"]["value"]}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:40:09.765" endtime="20210322 02:40:09.766"></status>
</kw>
<msg timestamp="20210322 02:40:09.766" level="INFO">${entry_key_value} = +5521973194349</msg>
<status status="PASS" starttime="20210322 02:40:09.764" endtime="20210322 02:40:09.766"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${entry_key_value}</arg>
</arguments>
<msg timestamp="20210322 02:40:09.767" level="INFO">${entry_key_value} = +5521973194349</msg>
<status status="PASS" starttime="20210322 02:40:09.766" endtime="20210322 02:40:09.767"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:09.081" endtime="20210322 02:40:09.767"></status>
</kw>
<kw name="validar criação da chave pix" library="asserts">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando status_code</arg>
</arguments>
<msg timestamp="20210322 02:40:09.769" level="INFO">Validando status_code</msg>
<status status="PASS" starttime="20210322 02:40:09.768" endtime="20210322 02:40:09.769"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${type}' == 'evp'</arg>
<arg>Should Be Equal As Integers</arg>
<arg>${response.status_code}</arg>
<arg>201</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'phone'</arg>
<arg>Should Be Equal As Integers</arg>
<arg>${response.status_code}</arg>
<arg>202</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'email'</arg>
<arg>Should Be Equal As Integers</arg>
<arg>${response.status_code}</arg>
<arg>202</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'national_registration'</arg>
<arg>Should Be Equal As Integers</arg>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>202</arg>
</arguments>
<msg timestamp="20210322 02:40:09.772" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:40:09.771" endtime="20210322 02:40:09.772"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:09.769" endtime="20210322 02:40:09.772"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar status da chave</arg>
</arguments>
<msg timestamp="20210322 02:40:09.773" level="INFO">Validar status da chave</msg>
<status status="PASS" starttime="20210322 02:40:09.772" endtime="20210322 02:40:09.773"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${type}' == 'evp'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["status"]}</arg>
<arg>active</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'phone'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["status"]}</arg>
<arg>waiting_ownership_verification</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'email'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["status"]}</arg>
<arg>waiting_ownership_verification</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'national_registration'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["status"]}</arg>
<arg>active</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["status"]}</arg>
<arg>waiting_ownership_verification</arg>
</arguments>
<status status="PASS" starttime="20210322 02:40:09.775" endtime="20210322 02:40:09.776"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:09.773" endtime="20210322 02:40:09.777"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando Tipo da chave PIX</arg>
</arguments>
<msg timestamp="20210322 02:40:09.778" level="INFO">Validando Tipo da chave PIX</msg>
<status status="PASS" starttime="20210322 02:40:09.777" endtime="20210322 02:40:09.778"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${type}' == 'evp'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["type"]}</arg>
<arg>${type}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'phone'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["type"]}</arg>
<arg>${type}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'email'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["type"]}</arg>
<arg>${type}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'national_registration'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["type"]}</arg>
<arg>${type}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["key"]["type"]}</arg>
<arg>${type}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:40:09.780" endtime="20210322 02:40:09.781"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:09.779" endtime="20210322 02:40:09.781"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando Valor da chave PIX</arg>
</arguments>
<msg timestamp="20210322 02:40:09.782" level="INFO">Validando Valor da chave PIX</msg>
<status status="PASS" starttime="20210322 02:40:09.781" endtime="20210322 02:40:09.782"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${type}' == 'evp'</arg>
<arg>Should Not Be Empty</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'phone'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${phone_pix}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'email'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${email_pix}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'national_registration'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${national_registration}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${phone_pix}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:40:09.783" endtime="20210322 02:40:09.784"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:09.782" endtime="20210322 02:40:09.784"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando dados da conta</arg>
</arguments>
<msg timestamp="20210322 02:40:09.784" level="INFO">Validando dados da conta</msg>
<status status="PASS" starttime="20210322 02:40:09.784" endtime="20210322 02:40:09.784"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["id"]}</arg>
<arg>${account_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:40:09.785" endtime="20210322 02:40:09.785"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["marketplace"]}</arg>
<arg>${marketplace_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:40:09.786" endtime="20210322 02:40:09.786"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["holder"]}</arg>
<arg>${holder_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:40:09.787" endtime="20210322 02:40:09.787"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["number"]}</arg>
<arg>${account_number}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:40:09.788" endtime="20210322 02:40:09.788"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["routing_number"]}</arg>
<arg>${account_routing_number}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:40:09.788" endtime="20210322 02:40:09.789"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["type"]}</arg>
<arg>CACC</arg>
</arguments>
<status status="PASS" starttime="20210322 02:40:09.789" endtime="20210322 02:40:09.790"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar Proprietário da Account Owner</arg>
</arguments>
<msg timestamp="20210322 02:40:09.791" level="INFO">Validar Proprietário da Account Owner</msg>
<status status="PASS" starttime="20210322 02:40:09.790" endtime="20210322 02:40:09.791"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${holder_type}' == 'individual'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["account"]["owner"]["name"]}</arg>
<arg>${holder_name}</arg>
<arg>ELSE IF</arg>
<arg>'${holder_type}' == 'business'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["account"]["owner"]["name"]}</arg>
<arg>${legal_name}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["account"]["owner"]["name"]}</arg>
<arg>${holder_name}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:40:09.792" endtime="20210322 02:40:09.793"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:09.791" endtime="20210322 02:40:09.793"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar national_registration da Account Owner</arg>
</arguments>
<msg timestamp="20210322 02:40:09.793" level="INFO">Validar national_registration da Account Owner</msg>
<status status="PASS" starttime="20210322 02:40:09.793" endtime="20210322 02:40:09.793"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${holder_type}' == 'individual'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["account"]["owner"]["national_registration"]}</arg>
<arg>${national_registration}</arg>
<arg>ELSE IF</arg>
<arg>'${holder_type}' == 'business'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["account"]["owner"]["national_registration"]}</arg>
<arg>${national_registration}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["account"]["owner"]["national_registration"]}</arg>
<arg>${national_registration}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:40:09.794" endtime="20210322 02:40:09.795"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:09.794" endtime="20210322 02:40:09.795"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar Holder Type do Account Owner</arg>
</arguments>
<msg timestamp="20210322 02:40:09.796" level="INFO">Validar Holder Type do Account Owner</msg>
<status status="PASS" starttime="20210322 02:40:09.796" endtime="20210322 02:40:09.796"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${holder_type}' == 'individual'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["account"]["owner"]["type"]}</arg>
<arg>${holder_type}</arg>
<arg>ELSE IF</arg>
<arg>'${holder_type}' == 'business'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["account"]["owner"]["type"]}</arg>
<arg>${holder_type}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["account"]["owner"]["type"]}</arg>
<arg>${holder_type}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:40:09.797" endtime="20210322 02:40:09.798"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:09.796" endtime="20210322 02:40:09.798"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar PSP</arg>
</arguments>
<msg timestamp="20210322 02:40:09.798" level="INFO">Validar PSP</msg>
<status status="PASS" starttime="20210322 02:40:09.798" endtime="20210322 02:40:09.798"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["psp"]["code"]}</arg>
<arg>19468242</arg>
</arguments>
<status status="PASS" starttime="20210322 02:40:09.799" endtime="20210322 02:40:09.799"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["psp"]["name"]}</arg>
<arg>Zoop Tecnologia e Meios de Pagamento S.A.</arg>
</arguments>
<status status="PASS" starttime="20210322 02:40:09.799" endtime="20210322 02:40:09.800"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:09.767" endtime="20210322 02:40:09.800"></status>
</kw>
<doc>Fluxo Básico</doc>
<tags>
<tag>regression_test</tag>
<tag>smoke_test</tag>
</tags>
<status status="PASS" starttime="20210322 02:40:05.948" endtime="20210322 02:40:09.800" critical="yes"></status>
</test>
<test id="s1-s1-s3-t3" name="Cenário: Criando Chave de Endereçamento do tipo Email">
<kw name="Email" library="FakerLibrary">
<assign>
<var>${email_pix}</var>
</assign>
<msg timestamp="20210322 02:40:09.802" level="INFO">${email_pix} = alexiada-rocha@silveira.com</msg>
<status status="PASS" starttime="20210322 02:40:09.802" endtime="20210322 02:40:09.802"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${email_pix}</arg>
</arguments>
<msg timestamp="20210322 02:40:09.803" level="INFO">${email_pix} = alexiada-rocha@silveira.com</msg>
<status status="PASS" starttime="20210322 02:40:09.803" endtime="20210322 02:40:09.803"></status>
</kw>
<kw name="criar holder individual ativo" library="accreditation_create_holder_active">
<kw name="conectar accreditation" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accreditation</arg>
<arg>url=${accreditation_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 02:40:09.805" level="INFO">Creating Session using : alias=accreditation, url=https://banking-accreditation-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 02:40:09.805" endtime="20210322 02:40:09.805"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:09.804" endtime="20210322 02:40:09.806"></status>
</kw>
<kw name="Cpf" library="FakerLibrary">
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 02:40:09.806" level="INFO">${national_registration} = 012.846.739-87</msg>
<status status="PASS" starttime="20210322 02:40:09.806" endtime="20210322 02:40:09.806"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${national_registration}</arg>
<arg>.</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 02:40:09.807" level="INFO">${national_registration} = 012846739-87</msg>
<status status="PASS" starttime="20210322 02:40:09.807" endtime="20210322 02:40:09.807"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${national_registration}</arg>
<arg>-</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 02:40:09.808" level="INFO">${national_registration} = 01284673987</msg>
<status status="PASS" starttime="20210322 02:40:09.807" endtime="20210322 02:40:09.808"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${national_registration}</arg>
</arguments>
<msg timestamp="20210322 02:40:09.809" level="INFO">${national_registration} = 01284673987</msg>
<status status="PASS" starttime="20210322 02:40:09.808" endtime="20210322 02:40:09.809"></status>
</kw>
<kw name="Rg" library="FakerLibrary">
<doc>Brazilian RG, return plain numbers.
Check:  https://www.ngmatematica.com/2014/02/como-determinar-o-digito-verificador-do.html</doc>
<assign>
<var>${identity_card}</var>
</assign>
<msg timestamp="20210322 02:40:09.809" level="INFO">${identity_card} = 032716588</msg>
<status status="PASS" starttime="20210322 02:40:09.809" endtime="20210322 02:40:09.809"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${identity_card}</arg>
</arguments>
<msg timestamp="20210322 02:40:09.810" level="INFO">${identity_card} = 032716588</msg>
<status status="PASS" starttime="20210322 02:40:09.810" endtime="20210322 02:40:09.810"></status>
</kw>
<kw name="criar holder individual" library="accreditation_post_holder_individual">
<arguments>
<arg>holder_type=individual</arg>
<arg>holder_name=${holder_name}</arg>
<arg>email=${email}</arg>
<arg>national_registration=${national_registration}</arg>
<arg>revenue=${revenue}</arg>
<arg>birthday=${birthday}</arg>
<arg>mothers_name=${mothers_name}</arg>
<arg>identity_card=${identity_card}</arg>
<arg>pep=false</arg>
<arg>cbo=${cbo}</arg>
</arguments>
<kw name="conectar accreditation" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accreditation</arg>
<arg>url=${accreditation_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 02:40:09.813" level="INFO">Creating Session using : alias=accreditation, url=https://banking-accreditation-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 02:40:09.812" endtime="20210322 02:40:09.813"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:09.812" endtime="20210322 02:40:09.813"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_type}</arg>
</arguments>
<msg timestamp="20210322 02:40:09.814" level="INFO">${holder_type} = individual</msg>
<status status="PASS" starttime="20210322 02:40:09.814" endtime="20210322 02:40:09.814"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_name}</arg>
</arguments>
<msg timestamp="20210322 02:40:09.815" level="INFO">${holder_name} = Holder de teste</msg>
<status status="PASS" starttime="20210322 02:40:09.815" endtime="20210322 02:40:09.815"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:40:09.816" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 02:40:09.815" endtime="20210322 02:40:09.816"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "${holder_type}",</arg>
<arg>"name": "${holder_name}",</arg>
<arg>"email": "${email}",</arg>
<arg>"national_registration": "${national_registration}",</arg>
<arg>"revenue": ${revenue},</arg>
<arg>"birthday": "${birthday}",</arg>
<arg>"mothers_name": "${mothers_name}",</arg>
<arg>"identity_card": "${identity_card}",</arg>
<arg>"pep": false,</arg>
<arg>"cbo": ${cbo}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 02:40:09.817" level="INFO">${body} = { "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "01284673987", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder",...</msg>
<status status="PASS" starttime="20210322 02:40:09.816" endtime="20210322 02:40:09.817"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:40:09.818" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "01284673987", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder", "identity_card": "032716588", "pep": false, "cbo": 821450 } 
json=None</msg>
<msg timestamp="20210322 02:40:10.488" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:40:09.817" endtime="20210322 02:40:10.488"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:40:10.491" level="INFO">{'id': 'fb363862415b4412912926555341a159', 'name': 'Holder de teste', 'revenue': 5500.0, 'email': 'teste@teste.com.br', 'status': 'waiting_info_and_documents', 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'marketplace_name': 'Marketplace de Teste', 'created_at': '2021-03-22T02:40:11.313102', 'updated_at': '2021-03-22T02:40:11.313104', 'type': 'individual', 'national_registration': '01284673987', 'birthday': '1988-04-23', 'mothers_name': 'Mãe do Holder', 'identity_card': '032716588', 'pep': False, 'cbo': '821450', '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/fb363862415b4412912926555341a159', 'type': 'GET'}, 'phones': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/fb363862415b4412912926555341a159/phones', 'type': 'GET'}, 'addresses': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/fb363862415b4412912926555341a159/addresses', 'type': 'GET'}, 'documents': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/fb363862415b4412912926555341a159/documents', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 02:40:10.489" endtime="20210322 02:40:10.491"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:40:10.493" level="INFO">b99bc80861dfdc3b</msg>
<status status="PASS" starttime="20210322 02:40:10.492" endtime="20210322 02:40:10.493"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${body}</arg>
</arguments>
<msg timestamp="20210322 02:40:10.494" level="INFO">{ "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "01284673987", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder", "identity_card": "032716588", "pep": false, "cbo": 821450 }</msg>
<status status="PASS" starttime="20210322 02:40:10.494" endtime="20210322 02:40:10.494"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:40:10.496" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:40:10.495" endtime="20210322 02:40:10.496"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${holder_external_key}</var>
</assign>
<msg timestamp="20210322 02:40:10.498" level="INFO">${holder_external_key} = fb363862415b4412912926555341a159</msg>
<status status="PASS" starttime="20210322 02:40:10.496" endtime="20210322 02:40:10.498"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_external_key}</arg>
</arguments>
<msg timestamp="20210322 02:40:10.499" level="INFO">${holder_external_key} = fb363862415b4412912926555341a159</msg>
<status status="PASS" starttime="20210322 02:40:10.498" endtime="20210322 02:40:10.499"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:09.810" endtime="20210322 02:40:10.499"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_name}</arg>
</arguments>
<msg timestamp="20210322 02:40:10.500" level="INFO">${holder_name} = Holder de teste</msg>
<status status="PASS" starttime="20210322 02:40:10.500" endtime="20210322 02:40:10.501"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 02:40:10.502" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:40:10.501" endtime="20210322 02:40:10.502"></status>
</kw>
<kw name="criar holder phone" library="accreditation_post_holder_phone">
<arguments>
<arg>21</arg>
<arg>51</arg>
<arg>996221236</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:40:10.504" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 02:40:10.503" endtime="20210322 02:40:10.504"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"area_code": "${phone_area_code}",</arg>
<arg>"country_code": "${phone_country_code}",</arg>
<arg>"number": "${phone_number}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 02:40:10.505" level="INFO">${body} = { "area_code": "21", "country_code": "51", "number": "996221236" }</msg>
<status status="PASS" starttime="20210322 02:40:10.505" endtime="20210322 02:40:10.505"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/phones</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:40:10.506" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/fb363862415b4412912926555341a159/phones, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "area_code": "21", "country_code": "51", "number": "996221236" } 
json=None</msg>
<msg timestamp="20210322 02:40:10.721" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:40:10.505" endtime="20210322 02:40:10.721"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:40:10.723" level="INFO">{'id': '13314fb517314839952a1374740b6804', 'area_code': '21', 'country_code': '51', 'number': '996221236', 'main': True, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/fb363862415b4412912926555341a159/phones/13314fb517314839952a1374740b6804', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/fb363862415b4412912926555341a159', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 02:40:10.723" endtime="20210322 02:40:10.724"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:40:10.726" level="INFO">95c381bfbdaacbba</msg>
<status status="PASS" starttime="20210322 02:40:10.725" endtime="20210322 02:40:10.726"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:40:10.728" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:40:10.728" endtime="20210322 02:40:10.728"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${phone_external_key}</var>
</assign>
<msg timestamp="20210322 02:40:10.730" level="INFO">${phone_external_key} = 13314fb517314839952a1374740b6804</msg>
<status status="PASS" starttime="20210322 02:40:10.729" endtime="20210322 02:40:10.730"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${phone_external_key}</arg>
</arguments>
<msg timestamp="20210322 02:40:10.732" level="INFO">${phone_external_key} = 13314fb517314839952a1374740b6804</msg>
<status status="PASS" starttime="20210322 02:40:10.731" endtime="20210322 02:40:10.732"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:10.502" endtime="20210322 02:40:10.732"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 02:40:10.733" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:40:10.733" endtime="20210322 02:40:10.733"></status>
</kw>
<kw name="criar holder address" library="accreditation_post_holder_address">
<arguments>
<arg>Rio de Janeiro</arg>
<arg>Rio de Janeiro</arg>
<arg>Brasil</arg>
<arg>Bairro de Testes</arg>
<arg>Rua de Testes</arg>
<arg>90</arg>
<arg>apto 200</arg>
<arg>21550987</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:40:10.735" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 02:40:10.735" endtime="20210322 02:40:10.735"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"city": "${city}",</arg>
<arg>"state": "${state}",</arg>
<arg>"country": "${country}",</arg>
<arg>"neighborhood": "${neighborhood}",</arg>
<arg>"street": "${street}",</arg>
<arg>"number": "${number}",</arg>
<arg>"complement": "${complement}",</arg>
<arg>"postal_code": "${postal_code}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 02:40:10.737" level="INFO">${body} = { "city": "Rio de Janeiro", "state": "Rio de Janeiro", "country": "Brasil", "neighborhood": "Bairro de Testes", "street": "Rua de Testes", "number": "90", "complement": "apto 200", "postal_code": "215...</msg>
<status status="PASS" starttime="20210322 02:40:10.736" endtime="20210322 02:40:10.737"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/addresses</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:40:10.738" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/fb363862415b4412912926555341a159/addresses, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "city": "Rio de Janeiro", "state": "Rio de Janeiro", "country": "Brasil", "neighborhood": "Bairro de Testes", "street": "Rua de Testes", "number": "90", "complement": "apto 200", "postal_code": "21550987" } 
json=None</msg>
<msg timestamp="20210322 02:40:10.953" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:40:10.737" endtime="20210322 02:40:10.953"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:40:10.956" level="INFO">{'id': '3f72600e95104ebaa21b58d300073fbc', 'street': 'Rua de Testes', 'number': '90', 'city': 'Rio de Janeiro', 'complement': 'apto 200', 'state': 'Rio de Janeiro', 'neighborhood': 'Bairro de Testes', 'postal_code': '21550987', 'country': 'Brasil', 'main': True, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/fb363862415b4412912926555341a159/addresses/3f72600e95104ebaa21b58d300073fbc', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/fb363862415b4412912926555341a159', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 02:40:10.954" endtime="20210322 02:40:10.956"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:40:10.958" level="INFO">c6733ac0585670cf</msg>
<status status="PASS" starttime="20210322 02:40:10.957" endtime="20210322 02:40:10.958"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:40:10.959" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:40:10.958" endtime="20210322 02:40:10.959"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${address_external_key}</var>
</assign>
<msg timestamp="20210322 02:40:10.961" level="INFO">${address_external_key} = 3f72600e95104ebaa21b58d300073fbc</msg>
<status status="PASS" starttime="20210322 02:40:10.960" endtime="20210322 02:40:10.961"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${address_external_key}</arg>
</arguments>
<msg timestamp="20210322 02:40:10.962" level="INFO">${address_external_key} = 3f72600e95104ebaa21b58d300073fbc</msg>
<status status="PASS" starttime="20210322 02:40:10.962" endtime="20210322 02:40:10.962"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:10.734" endtime="20210322 02:40:10.963"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 02:40:10.964" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:40:10.963" endtime="20210322 02:40:10.964"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>SELFIE</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:40:10.965" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 02:40:10.965" endtime="20210322 02:40:10.965"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 02:40:10.966" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 02:40:10.968" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 02:40:10.966" endtime="20210322 02:40:10.968"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:40:10.970" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/fb363862415b4412912926555341a159/documents?type=SELFIE, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 02:40:11.251" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:40:10.969" endtime="20210322 02:40:11.251"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:40:11.254" level="INFO">{'id': '1e89c8fe1a734a0188fcaffbf325da7e', 'document_type': 'selfie', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/fb363862415b4412912926555341a159/documents/1e89c8fe1a734a0188fcaffbf325da7e', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/fb363862415b4412912926555341a159', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/fb363862415b4412912926555341a159/documents/1e89c8fe1a734a0188fcaffbf325da7e/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 02:40:11.252" endtime="20210322 02:40:11.254"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:40:11.255" level="INFO">bec54a64ed87701e</msg>
<status status="PASS" starttime="20210322 02:40:11.254" endtime="20210322 02:40:11.255"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:40:11.257" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:40:11.256" endtime="20210322 02:40:11.257"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 02:40:11.259" level="INFO">${document_external_key} = 1e89c8fe1a734a0188fcaffbf325da7e</msg>
<status status="PASS" starttime="20210322 02:40:11.258" endtime="20210322 02:40:11.259"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 02:40:11.260" level="INFO">${document_external_key} = 1e89c8fe1a734a0188fcaffbf325da7e</msg>
<status status="PASS" starttime="20210322 02:40:11.259" endtime="20210322 02:40:11.260"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:10.964" endtime="20210322 02:40:11.260"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 02:40:11.261" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:40:11.260" endtime="20210322 02:40:11.261"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>RG_FRENTE</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:40:11.263" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 02:40:11.262" endtime="20210322 02:40:11.263"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 02:40:11.263" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 02:40:11.265" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 02:40:11.263" endtime="20210322 02:40:11.265"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:40:11.267" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/fb363862415b4412912926555341a159/documents?type=RG_FRENTE, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 02:40:11.525" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:40:11.266" endtime="20210322 02:40:11.525"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:40:11.526" level="INFO">{'id': '5363fe4889d54c35bdb6fc29ce8cd765', 'document_type': 'rg_frente', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/fb363862415b4412912926555341a159/documents/5363fe4889d54c35bdb6fc29ce8cd765', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/fb363862415b4412912926555341a159', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/fb363862415b4412912926555341a159/documents/5363fe4889d54c35bdb6fc29ce8cd765/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 02:40:11.526" endtime="20210322 02:40:11.526"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:40:11.528" level="INFO">12fc9cba80cc251b</msg>
<status status="PASS" starttime="20210322 02:40:11.527" endtime="20210322 02:40:11.528"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:40:11.529" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:40:11.528" endtime="20210322 02:40:11.529"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 02:40:11.531" level="INFO">${document_external_key} = 5363fe4889d54c35bdb6fc29ce8cd765</msg>
<status status="PASS" starttime="20210322 02:40:11.529" endtime="20210322 02:40:11.531"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 02:40:11.532" level="INFO">${document_external_key} = 5363fe4889d54c35bdb6fc29ce8cd765</msg>
<status status="PASS" starttime="20210322 02:40:11.531" endtime="20210322 02:40:11.532"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:11.261" endtime="20210322 02:40:11.532"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 02:40:11.533" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:40:11.533" endtime="20210322 02:40:11.534"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>RG_VERSO</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:40:11.536" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 02:40:11.535" endtime="20210322 02:40:11.536"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 02:40:11.537" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 02:40:11.539" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 02:40:11.536" endtime="20210322 02:40:11.539"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:40:11.541" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/fb363862415b4412912926555341a159/documents?type=RG_VERSO, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 02:40:11.794" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:40:11.540" endtime="20210322 02:40:11.795"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:40:11.797" level="INFO">{'id': '88383ced14284eaf9823a124ae9aa0b7', 'document_type': 'rg_verso', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/fb363862415b4412912926555341a159/documents/88383ced14284eaf9823a124ae9aa0b7', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/fb363862415b4412912926555341a159', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/fb363862415b4412912926555341a159/documents/88383ced14284eaf9823a124ae9aa0b7/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 02:40:11.796" endtime="20210322 02:40:11.797"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:40:11.799" level="INFO">c70054a883de3097</msg>
<status status="PASS" starttime="20210322 02:40:11.798" endtime="20210322 02:40:11.799"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:40:11.800" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:40:11.799" endtime="20210322 02:40:11.800"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 02:40:11.802" level="INFO">${document_external_key} = 88383ced14284eaf9823a124ae9aa0b7</msg>
<status status="PASS" starttime="20210322 02:40:11.801" endtime="20210322 02:40:11.803"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 02:40:11.804" level="INFO">${document_external_key} = 88383ced14284eaf9823a124ae9aa0b7</msg>
<status status="PASS" starttime="20210322 02:40:11.803" endtime="20210322 02:40:11.804"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:11.534" endtime="20210322 02:40:11.805"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 02:40:11.805" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:40:11.805" endtime="20210322 02:40:11.806"></status>
</kw>
<kw name="solicitar aprovação do holder" library="accreditation_request_approval">
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:40:11.807" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 02:40:11.807" endtime="20210322 02:40:11.807"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/approval</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:40:11.808" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/fb363862415b4412912926555341a159/approval, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data=None 
json=None</msg>
<msg timestamp="20210322 02:40:12.098" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:40:11.808" endtime="20210322 02:40:12.098"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:40:12.099" level="INFO">{'message': 'Approval request accepted successfully. Processing analysis'}</msg>
<status status="PASS" starttime="20210322 02:40:12.099" endtime="20210322 02:40:12.099"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:40:12.099" level="INFO">8943d59669aef202</msg>
<status status="PASS" starttime="20210322 02:40:12.099" endtime="20210322 02:40:12.099"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:40:12.100" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:40:12.100" endtime="20210322 02:40:12.100"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:11.806" endtime="20210322 02:40:12.100"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 02:40:12.101" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:40:12.100" endtime="20210322 02:40:12.101"></status>
</kw>
<kw name="recebendo notificação de aprovação" library="accreditation_risk_notification">
<kw name="Uuid 4" library="FakerLibrary">
<doc>Generates a random UUID4 string.
:param cast_to: Specify what type the UUID should be cast to. Default is `str`
:type cast_to: callable</doc>
<assign>
<var>${assessment_id}</var>
</assign>
<msg timestamp="20210322 02:40:12.102" level="INFO">${assessment_id} = 3728029d-41d8-440e-9cd8-7a97a2730422</msg>
<status status="PASS" starttime="20210322 02:40:12.101" endtime="20210322 02:40:12.102"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>year</arg>
</arguments>
<assign>
<var>${year}</var>
</assign>
<msg timestamp="20210322 02:40:12.102" level="INFO">${year} = 2021</msg>
<status status="PASS" starttime="20210322 02:40:12.102" endtime="20210322 02:40:12.102"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>month</arg>
</arguments>
<assign>
<var>${month}</var>
</assign>
<msg timestamp="20210322 02:40:12.104" level="INFO">${month} = 03</msg>
<status status="PASS" starttime="20210322 02:40:12.104" endtime="20210322 02:40:12.104"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>day</arg>
</arguments>
<assign>
<var>${day}</var>
</assign>
<msg timestamp="20210322 02:40:12.104" level="INFO">${day} = 22</msg>
<status status="PASS" starttime="20210322 02:40:12.104" endtime="20210322 02:40:12.104"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:40:12.105" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 02:40:12.105" endtime="20210322 02:40:12.105"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "risk.assessment.result",</arg>
<arg>"resource": "business.holder",</arg>
<arg>"created_at": "${year}-${month}-${day} 15:28:56.747Z",</arg>
<arg>"marketplace_id": "${marketplace_external_key}",</arg>
<arg>"object": {</arg>
<arg>"result": "APPROVED",</arg>
<arg>"holder_id": "${holder_external_key}",</arg>
<arg>"applicant_id": "${application_external_key}",</arg>
<arg>"assessment_id": "${assessment_id}"</arg>
<arg>}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 02:40:12.105" level="INFO">${body} = { "type": "risk.assessment.result", "resource": "business.holder", "created_at": "2021-03-22 15:28:56.747Z", "marketplace_id": "f71a8951368a4cc085cf7875ff44e61c", "object": { "result": "APPROVED", "ho...</msg>
<status status="PASS" starttime="20210322 02:40:12.105" endtime="20210322 02:40:12.106"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/admin/internal_operation/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/registration/approval</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:40:12.106" level="INFO">POST Request using : uri=/admin/internal_operation/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/fb363862415b4412912926555341a159/registration/approval, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "risk.assessment.result", "resource": "business.holder", "created_at": "2021-03-22 15:28:56.747Z", "marketplace_id": "f71a8951368a4cc085cf7875ff44e61c", "object": { "result": "APPROVED", "holder_id": "fb363862415b4412912926555341a159", "applicant_id": "bcc25a6751c14b52af1340d40dba78c5", "assessment_id": "3728029d-41d8-440e-9cd8-7a97a2730422" } } 
json=None</msg>
<msg timestamp="20210322 02:40:12.307" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:40:12.106" endtime="20210322 02:40:12.307"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:40:12.307" level="INFO">{'message': 'Holder approved successfully'}</msg>
<status status="PASS" starttime="20210322 02:40:12.307" endtime="20210322 02:40:12.307"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:40:12.308" level="INFO">826e6e2668730b5e</msg>
<status status="PASS" starttime="20210322 02:40:12.307" endtime="20210322 02:40:12.308"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:40:12.308" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:40:12.308" endtime="20210322 02:40:12.308"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 02:40:12.309" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:40:12.308" endtime="20210322 02:40:12.309"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:12.101" endtime="20210322 02:40:12.309"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 02:40:12.309" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:40:12.309" endtime="20210322 02:40:12.309"></status>
</kw>
<kw name="buscar account por holder" library="accounts_get_accounts_by_holder">
<kw name="conectar accounts" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accounts</arg>
<arg>url=${account_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 02:40:12.310" level="INFO">Creating Session using : alias=accounts, url=https://banking-accounts-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 02:40:12.310" endtime="20210322 02:40:12.311"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:12.310" endtime="20210322 02:40:12.311"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accounts</arg>
<arg>/marketplaces/${marketplace_external_key}/holders/${holder_external_key}/accounts</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:40:12.312" level="INFO">GET Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/holders/fb363862415b4412912926555341a159/accounts, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 02:40:12.925" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:40:12.311" endtime="20210322 02:40:12.925"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:40:12.927" level="INFO">{'items': [{'id': '823cb3009bc14b9f9bc8b5811640b39a', 'holder': 'fb363862415b4412912926555341a159', 'balance': '0.00', 'currency': 'BRL', 'routing_number': '001', 'number': '4868072107', 'status': 'active', 'metadata': {}, 'created_at': '2021-03-22T05:40:13.142383', 'updated_at': '2021-03-22T05:40:13.142383', 'primary': True, 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'uri': '/v2/marketplaces/f71a8951368a4cc085cf7875ff44e61c/accounts/823cb3009bc14b9f9bc8b5811640b39a', 'resource': 'payment_account'}], 'has_more': False, 'limit': 100, 'total_pages': 1, 'page': 1, 'offset': 0, 'total': '1', 'query_count': '1'}</msg>
<status status="PASS" starttime="20210322 02:40:12.926" endtime="20210322 02:40:12.927"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:40:12.928" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:40:12.928" endtime="20210322 02:40:12.929"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["id"]}</arg>
</arguments>
<assign>
<var>${account_external_key}</var>
</assign>
<msg timestamp="20210322 02:40:12.930" level="INFO">${account_external_key} = 823cb3009bc14b9f9bc8b5811640b39a</msg>
<status status="PASS" starttime="20210322 02:40:12.929" endtime="20210322 02:40:12.930"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_external_key}</arg>
</arguments>
<msg timestamp="20210322 02:40:12.932" level="INFO">${account_external_key} = 823cb3009bc14b9f9bc8b5811640b39a</msg>
<status status="PASS" starttime="20210322 02:40:12.931" endtime="20210322 02:40:12.932"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["number"]}</arg>
</arguments>
<assign>
<var>${account_number}</var>
</assign>
<msg timestamp="20210322 02:40:12.934" level="INFO">${account_number} = 4868072107</msg>
<status status="PASS" starttime="20210322 02:40:12.932" endtime="20210322 02:40:12.934"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_number}</arg>
</arguments>
<msg timestamp="20210322 02:40:12.935" level="INFO">${account_number} = 4868072107</msg>
<status status="PASS" starttime="20210322 02:40:12.934" endtime="20210322 02:40:12.935"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["routing_number"]}</arg>
</arguments>
<assign>
<var>${account_routing_number}</var>
</assign>
<msg timestamp="20210322 02:40:12.938" level="INFO">${account_routing_number} = 001</msg>
<status status="PASS" starttime="20210322 02:40:12.936" endtime="20210322 02:40:12.938"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_routing_number}</arg>
</arguments>
<msg timestamp="20210322 02:40:12.939" level="INFO">${account_routing_number} = 001</msg>
<status status="PASS" starttime="20210322 02:40:12.939" endtime="20210322 02:40:12.940"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:12.310" endtime="20210322 02:40:12.940"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 02:40:12.941" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:40:12.940" endtime="20210322 02:40:12.941"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:09.804" endtime="20210322 02:40:12.941"></status>
</kw>
<kw name="criar chave pix" library="pix_dict_create_entry">
<arguments>
<arg>type=email</arg>
<arg>value=${email_pix}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 02:40:12.942" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 02:40:12.942" endtime="20210322 02:40:12.943"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:12.942" endtime="20210322 02:40:12.943"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${type}</arg>
</arguments>
<msg timestamp="20210322 02:40:12.943" level="INFO">${type} = email</msg>
<status status="PASS" starttime="20210322 02:40:12.943" endtime="20210322 02:40:12.943"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210322 02:40:12.944" level="INFO">${value} = alexiada-rocha@silveira.com</msg>
<status status="PASS" starttime="20210322 02:40:12.944" endtime="20210322 02:40:12.944"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:40:12.944" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 02:40:12.944" endtime="20210322 02:40:12.944"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "${type}",</arg>
<arg>"value": "${value}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 02:40:12.945" level="INFO">${body} = { "type": "email", "value": "alexiada-rocha@silveira.com" }</msg>
<status status="PASS" starttime="20210322 02:40:12.944" endtime="20210322 02:40:12.945"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:40:12.945" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/fb363862415b4412912926555341a159/accounts/823cb3009bc14b9f9bc8b5811640b39a/entries, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "email", "value": "alexiada-rocha@silveira.com" } 
json=None</msg>
<msg timestamp="20210322 02:40:13.609" level="INFO">${response} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20210322 02:40:12.945" endtime="20210322 02:40:13.610"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:40:13.610" level="INFO">{'id': 'f828f1aa0f4d4140b1add15860b29607', 'status': 'waiting_ownership_verification', 'created_at': '2021-03-22T02:40:14.457', 'updated_at': '2021-03-22T02:40:14.457', 'key': {'value': 'alexiada-rocha@silveira.com', 'type': 'email'}, 'account': {'id': '823cb3009bc14b9f9bc8b5811640b39a', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': 'fb363862415b4412912926555341a159', 'owner': {'name': 'Holder de teste', 'national_registration': '01284673987', 'type': 'individual'}, 'routing_number': '001', 'number': '4868072107', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}, 'resource': 'pix.entry'}</msg>
<status status="PASS" starttime="20210322 02:40:13.610" endtime="20210322 02:40:13.610"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:40:13.611" level="INFO">083cc82a573dde41</msg>
<status status="PASS" starttime="20210322 02:40:13.610" endtime="20210322 02:40:13.611"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 02:40:13.611" level="INFO">202</msg>
<status status="PASS" starttime="20210322 02:40:13.611" endtime="20210322 02:40:13.611"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:40:13.612" level="INFO">${response} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20210322 02:40:13.612" endtime="20210322 02:40:13.612"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${entry_external_key}</var>
</assign>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:40:13.612" endtime="20210322 02:40:13.613"></status>
</kw>
<msg timestamp="20210322 02:40:13.613" level="INFO">${entry_external_key} = f828f1aa0f4d4140b1add15860b29607</msg>
<status status="PASS" starttime="20210322 02:40:13.612" endtime="20210322 02:40:13.613"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${entry_external_key}</arg>
</arguments>
<msg timestamp="20210322 02:40:13.613" level="INFO">${entry_external_key} = f828f1aa0f4d4140b1add15860b29607</msg>
<status status="PASS" starttime="20210322 02:40:13.613" endtime="20210322 02:40:13.614"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["key"]["value"]}</arg>
</arguments>
<assign>
<var>${entry_key_value}</var>
</assign>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["key"]["value"]}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:40:13.614" endtime="20210322 02:40:13.615"></status>
</kw>
<msg timestamp="20210322 02:40:13.615" level="INFO">${entry_key_value} = alexiada-rocha@silveira.com</msg>
<status status="PASS" starttime="20210322 02:40:13.614" endtime="20210322 02:40:13.615"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${entry_key_value}</arg>
</arguments>
<msg timestamp="20210322 02:40:13.615" level="INFO">${entry_key_value} = alexiada-rocha@silveira.com</msg>
<status status="PASS" starttime="20210322 02:40:13.615" endtime="20210322 02:40:13.616"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:12.941" endtime="20210322 02:40:13.616"></status>
</kw>
<kw name="validar criação da chave pix" library="asserts">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando status_code</arg>
</arguments>
<msg timestamp="20210322 02:40:13.616" level="INFO">Validando status_code</msg>
<status status="PASS" starttime="20210322 02:40:13.616" endtime="20210322 02:40:13.616"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${type}' == 'evp'</arg>
<arg>Should Be Equal As Integers</arg>
<arg>${response.status_code}</arg>
<arg>201</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'phone'</arg>
<arg>Should Be Equal As Integers</arg>
<arg>${response.status_code}</arg>
<arg>202</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'email'</arg>
<arg>Should Be Equal As Integers</arg>
<arg>${response.status_code}</arg>
<arg>202</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'national_registration'</arg>
<arg>Should Be Equal As Integers</arg>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>202</arg>
</arguments>
<msg timestamp="20210322 02:40:13.618" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:40:13.618" endtime="20210322 02:40:13.618"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:13.617" endtime="20210322 02:40:13.618"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar status da chave</arg>
</arguments>
<msg timestamp="20210322 02:40:13.618" level="INFO">Validar status da chave</msg>
<status status="PASS" starttime="20210322 02:40:13.618" endtime="20210322 02:40:13.619"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${type}' == 'evp'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["status"]}</arg>
<arg>active</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'phone'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["status"]}</arg>
<arg>waiting_ownership_verification</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'email'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["status"]}</arg>
<arg>waiting_ownership_verification</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'national_registration'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["status"]}</arg>
<arg>active</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["status"]}</arg>
<arg>waiting_ownership_verification</arg>
</arguments>
<status status="PASS" starttime="20210322 02:40:13.620" endtime="20210322 02:40:13.620"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:13.619" endtime="20210322 02:40:13.620"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando Tipo da chave PIX</arg>
</arguments>
<msg timestamp="20210322 02:40:13.621" level="INFO">Validando Tipo da chave PIX</msg>
<status status="PASS" starttime="20210322 02:40:13.621" endtime="20210322 02:40:13.621"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${type}' == 'evp'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["type"]}</arg>
<arg>${type}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'phone'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["type"]}</arg>
<arg>${type}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'email'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["type"]}</arg>
<arg>${type}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'national_registration'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["type"]}</arg>
<arg>${type}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["key"]["type"]}</arg>
<arg>${type}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:40:13.622" endtime="20210322 02:40:13.622"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:13.621" endtime="20210322 02:40:13.622"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando Valor da chave PIX</arg>
</arguments>
<msg timestamp="20210322 02:40:13.623" level="INFO">Validando Valor da chave PIX</msg>
<status status="PASS" starttime="20210322 02:40:13.622" endtime="20210322 02:40:13.623"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${type}' == 'evp'</arg>
<arg>Should Not Be Empty</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'phone'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${phone_pix}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'email'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${email_pix}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'national_registration'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${national_registration}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${email_pix}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:40:13.623" endtime="20210322 02:40:13.624"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:13.623" endtime="20210322 02:40:13.624"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando dados da conta</arg>
</arguments>
<msg timestamp="20210322 02:40:13.624" level="INFO">Validando dados da conta</msg>
<status status="PASS" starttime="20210322 02:40:13.624" endtime="20210322 02:40:13.624"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["id"]}</arg>
<arg>${account_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:40:13.624" endtime="20210322 02:40:13.625"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["marketplace"]}</arg>
<arg>${marketplace_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:40:13.625" endtime="20210322 02:40:13.625"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["holder"]}</arg>
<arg>${holder_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:40:13.625" endtime="20210322 02:40:13.626"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["number"]}</arg>
<arg>${account_number}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:40:13.626" endtime="20210322 02:40:13.626"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["routing_number"]}</arg>
<arg>${account_routing_number}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:40:13.627" endtime="20210322 02:40:13.627"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["type"]}</arg>
<arg>CACC</arg>
</arguments>
<status status="PASS" starttime="20210322 02:40:13.627" endtime="20210322 02:40:13.627"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar Proprietário da Account Owner</arg>
</arguments>
<msg timestamp="20210322 02:40:13.628" level="INFO">Validar Proprietário da Account Owner</msg>
<status status="PASS" starttime="20210322 02:40:13.628" endtime="20210322 02:40:13.628"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${holder_type}' == 'individual'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["account"]["owner"]["name"]}</arg>
<arg>${holder_name}</arg>
<arg>ELSE IF</arg>
<arg>'${holder_type}' == 'business'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["account"]["owner"]["name"]}</arg>
<arg>${legal_name}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["account"]["owner"]["name"]}</arg>
<arg>${holder_name}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:40:13.628" endtime="20210322 02:40:13.629"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:13.628" endtime="20210322 02:40:13.629"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar national_registration da Account Owner</arg>
</arguments>
<msg timestamp="20210322 02:40:13.629" level="INFO">Validar national_registration da Account Owner</msg>
<status status="PASS" starttime="20210322 02:40:13.629" endtime="20210322 02:40:13.629"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${holder_type}' == 'individual'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["account"]["owner"]["national_registration"]}</arg>
<arg>${national_registration}</arg>
<arg>ELSE IF</arg>
<arg>'${holder_type}' == 'business'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["account"]["owner"]["national_registration"]}</arg>
<arg>${national_registration}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["account"]["owner"]["national_registration"]}</arg>
<arg>${national_registration}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:40:13.630" endtime="20210322 02:40:13.630"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:13.629" endtime="20210322 02:40:13.630"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar Holder Type do Account Owner</arg>
</arguments>
<msg timestamp="20210322 02:40:13.631" level="INFO">Validar Holder Type do Account Owner</msg>
<status status="PASS" starttime="20210322 02:40:13.630" endtime="20210322 02:40:13.631"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${holder_type}' == 'individual'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["account"]["owner"]["type"]}</arg>
<arg>${holder_type}</arg>
<arg>ELSE IF</arg>
<arg>'${holder_type}' == 'business'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["account"]["owner"]["type"]}</arg>
<arg>${holder_type}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["account"]["owner"]["type"]}</arg>
<arg>${holder_type}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:40:13.631" endtime="20210322 02:40:13.632"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:13.631" endtime="20210322 02:40:13.632"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar PSP</arg>
</arguments>
<msg timestamp="20210322 02:40:13.632" level="INFO">Validar PSP</msg>
<status status="PASS" starttime="20210322 02:40:13.632" endtime="20210322 02:40:13.632"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["psp"]["code"]}</arg>
<arg>19468242</arg>
</arguments>
<status status="PASS" starttime="20210322 02:40:13.632" endtime="20210322 02:40:13.632"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["psp"]["name"]}</arg>
<arg>Zoop Tecnologia e Meios de Pagamento S.A.</arg>
</arguments>
<status status="PASS" starttime="20210322 02:40:13.633" endtime="20210322 02:40:13.633"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:13.616" endtime="20210322 02:40:13.633"></status>
</kw>
<doc>Fluxo Básico</doc>
<tags>
<tag>regression_test</tag>
<tag>smoke_test</tag>
</tags>
<status status="PASS" starttime="20210322 02:40:09.801" endtime="20210322 02:40:13.633" critical="yes"></status>
</test>
<test id="s1-s1-s3-t4" name="Cenário: Criando Chave de Endereçamento do tipo CPF">
<kw name="criar holder individual ativo" library="accreditation_create_holder_active">
<kw name="conectar accreditation" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accreditation</arg>
<arg>url=${accreditation_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 02:40:13.635" level="INFO">Creating Session using : alias=accreditation, url=https://banking-accreditation-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 02:40:13.634" endtime="20210322 02:40:13.635"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:13.634" endtime="20210322 02:40:13.635"></status>
</kw>
<kw name="Cpf" library="FakerLibrary">
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 02:40:13.636" level="INFO">${national_registration} = 108.357.964-93</msg>
<status status="PASS" starttime="20210322 02:40:13.635" endtime="20210322 02:40:13.636"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${national_registration}</arg>
<arg>.</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 02:40:13.636" level="INFO">${national_registration} = 108357964-93</msg>
<status status="PASS" starttime="20210322 02:40:13.636" endtime="20210322 02:40:13.636"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${national_registration}</arg>
<arg>-</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 02:40:13.637" level="INFO">${national_registration} = 10835796493</msg>
<status status="PASS" starttime="20210322 02:40:13.636" endtime="20210322 02:40:13.637"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${national_registration}</arg>
</arguments>
<msg timestamp="20210322 02:40:13.637" level="INFO">${national_registration} = 10835796493</msg>
<status status="PASS" starttime="20210322 02:40:13.637" endtime="20210322 02:40:13.637"></status>
</kw>
<kw name="Rg" library="FakerLibrary">
<doc>Brazilian RG, return plain numbers.
Check:  https://www.ngmatematica.com/2014/02/como-determinar-o-digito-verificador-do.html</doc>
<assign>
<var>${identity_card}</var>
</assign>
<msg timestamp="20210322 02:40:13.637" level="INFO">${identity_card} = 845321705</msg>
<status status="PASS" starttime="20210322 02:40:13.637" endtime="20210322 02:40:13.637"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${identity_card}</arg>
</arguments>
<msg timestamp="20210322 02:40:13.638" level="INFO">${identity_card} = 845321705</msg>
<status status="PASS" starttime="20210322 02:40:13.638" endtime="20210322 02:40:13.638"></status>
</kw>
<kw name="criar holder individual" library="accreditation_post_holder_individual">
<arguments>
<arg>holder_type=individual</arg>
<arg>holder_name=${holder_name}</arg>
<arg>email=${email}</arg>
<arg>national_registration=${national_registration}</arg>
<arg>revenue=${revenue}</arg>
<arg>birthday=${birthday}</arg>
<arg>mothers_name=${mothers_name}</arg>
<arg>identity_card=${identity_card}</arg>
<arg>pep=false</arg>
<arg>cbo=${cbo}</arg>
</arguments>
<kw name="conectar accreditation" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accreditation</arg>
<arg>url=${accreditation_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 02:40:13.639" level="INFO">Creating Session using : alias=accreditation, url=https://banking-accreditation-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 02:40:13.639" endtime="20210322 02:40:13.639"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:13.639" endtime="20210322 02:40:13.639"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_type}</arg>
</arguments>
<msg timestamp="20210322 02:40:13.640" level="INFO">${holder_type} = individual</msg>
<status status="PASS" starttime="20210322 02:40:13.639" endtime="20210322 02:40:13.640"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_name}</arg>
</arguments>
<msg timestamp="20210322 02:40:13.640" level="INFO">${holder_name} = Holder de teste</msg>
<status status="PASS" starttime="20210322 02:40:13.640" endtime="20210322 02:40:13.640"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:40:13.641" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 02:40:13.640" endtime="20210322 02:40:13.641"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "${holder_type}",</arg>
<arg>"name": "${holder_name}",</arg>
<arg>"email": "${email}",</arg>
<arg>"national_registration": "${national_registration}",</arg>
<arg>"revenue": ${revenue},</arg>
<arg>"birthday": "${birthday}",</arg>
<arg>"mothers_name": "${mothers_name}",</arg>
<arg>"identity_card": "${identity_card}",</arg>
<arg>"pep": false,</arg>
<arg>"cbo": ${cbo}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 02:40:13.641" level="INFO">${body} = { "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "10835796493", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder",...</msg>
<status status="PASS" starttime="20210322 02:40:13.641" endtime="20210322 02:40:13.641"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:40:13.642" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "10835796493", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder", "identity_card": "845321705", "pep": false, "cbo": 821450 } 
json=None</msg>
<msg timestamp="20210322 02:40:14.294" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:40:13.641" endtime="20210322 02:40:14.294"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:40:14.297" level="INFO">{'id': '193abe25d8574bdca85e8b0c46114aff', 'name': 'Holder de teste', 'revenue': 5500.0, 'email': 'teste@teste.com.br', 'status': 'waiting_info_and_documents', 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'marketplace_name': 'Marketplace de Teste', 'created_at': '2021-03-22T02:40:15.127955', 'updated_at': '2021-03-22T02:40:15.127956', 'type': 'individual', 'national_registration': '10835796493', 'birthday': '1988-04-23', 'mothers_name': 'Mãe do Holder', 'identity_card': '845321705', 'pep': False, 'cbo': '821450', '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/193abe25d8574bdca85e8b0c46114aff', 'type': 'GET'}, 'phones': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/193abe25d8574bdca85e8b0c46114aff/phones', 'type': 'GET'}, 'addresses': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/193abe25d8574bdca85e8b0c46114aff/addresses', 'type': 'GET'}, 'documents': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/193abe25d8574bdca85e8b0c46114aff/documents', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 02:40:14.295" endtime="20210322 02:40:14.297"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:40:14.298" level="INFO">42eb7dd33858b4e0</msg>
<status status="PASS" starttime="20210322 02:40:14.298" endtime="20210322 02:40:14.298"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${body}</arg>
</arguments>
<msg timestamp="20210322 02:40:14.299" level="INFO">{ "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "10835796493", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder", "identity_card": "845321705", "pep": false, "cbo": 821450 }</msg>
<status status="PASS" starttime="20210322 02:40:14.299" endtime="20210322 02:40:14.300"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:40:14.301" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:40:14.300" endtime="20210322 02:40:14.301"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${holder_external_key}</var>
</assign>
<msg timestamp="20210322 02:40:14.303" level="INFO">${holder_external_key} = 193abe25d8574bdca85e8b0c46114aff</msg>
<status status="PASS" starttime="20210322 02:40:14.302" endtime="20210322 02:40:14.303"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_external_key}</arg>
</arguments>
<msg timestamp="20210322 02:40:14.304" level="INFO">${holder_external_key} = 193abe25d8574bdca85e8b0c46114aff</msg>
<status status="PASS" starttime="20210322 02:40:14.303" endtime="20210322 02:40:14.304"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:13.638" endtime="20210322 02:40:14.304"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_name}</arg>
</arguments>
<msg timestamp="20210322 02:40:14.305" level="INFO">${holder_name} = Holder de teste</msg>
<status status="PASS" starttime="20210322 02:40:14.305" endtime="20210322 02:40:14.305"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 02:40:14.306" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:40:14.306" endtime="20210322 02:40:14.306"></status>
</kw>
<kw name="criar holder phone" library="accreditation_post_holder_phone">
<arguments>
<arg>21</arg>
<arg>51</arg>
<arg>996221236</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:40:14.308" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 02:40:14.308" endtime="20210322 02:40:14.309"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"area_code": "${phone_area_code}",</arg>
<arg>"country_code": "${phone_country_code}",</arg>
<arg>"number": "${phone_number}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 02:40:14.309" level="INFO">${body} = { "area_code": "21", "country_code": "51", "number": "996221236" }</msg>
<status status="PASS" starttime="20210322 02:40:14.309" endtime="20210322 02:40:14.309"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/phones</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:40:14.310" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/193abe25d8574bdca85e8b0c46114aff/phones, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "area_code": "21", "country_code": "51", "number": "996221236" } 
json=None</msg>
<msg timestamp="20210322 02:40:14.598" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:40:14.310" endtime="20210322 02:40:14.599"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:40:14.601" level="INFO">{'id': 'd41c1582542641128feee2e4a229f3ed', 'area_code': '21', 'country_code': '51', 'number': '996221236', 'main': True, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/193abe25d8574bdca85e8b0c46114aff/phones/d41c1582542641128feee2e4a229f3ed', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/193abe25d8574bdca85e8b0c46114aff', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 02:40:14.600" endtime="20210322 02:40:14.601"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:40:14.602" level="INFO">bc55bf7258f974ec</msg>
<status status="PASS" starttime="20210322 02:40:14.602" endtime="20210322 02:40:14.603"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:40:14.604" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:40:14.604" endtime="20210322 02:40:14.604"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${phone_external_key}</var>
</assign>
<msg timestamp="20210322 02:40:14.606" level="INFO">${phone_external_key} = d41c1582542641128feee2e4a229f3ed</msg>
<status status="PASS" starttime="20210322 02:40:14.605" endtime="20210322 02:40:14.606"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${phone_external_key}</arg>
</arguments>
<msg timestamp="20210322 02:40:14.607" level="INFO">${phone_external_key} = d41c1582542641128feee2e4a229f3ed</msg>
<status status="PASS" starttime="20210322 02:40:14.606" endtime="20210322 02:40:14.607"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:14.307" endtime="20210322 02:40:14.608"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 02:40:14.608" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:40:14.608" endtime="20210322 02:40:14.608"></status>
</kw>
<kw name="criar holder address" library="accreditation_post_holder_address">
<arguments>
<arg>Rio de Janeiro</arg>
<arg>Rio de Janeiro</arg>
<arg>Brasil</arg>
<arg>Bairro de Testes</arg>
<arg>Rua de Testes</arg>
<arg>90</arg>
<arg>apto 200</arg>
<arg>21550987</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:40:14.610" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 02:40:14.610" endtime="20210322 02:40:14.611"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"city": "${city}",</arg>
<arg>"state": "${state}",</arg>
<arg>"country": "${country}",</arg>
<arg>"neighborhood": "${neighborhood}",</arg>
<arg>"street": "${street}",</arg>
<arg>"number": "${number}",</arg>
<arg>"complement": "${complement}",</arg>
<arg>"postal_code": "${postal_code}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 02:40:14.611" level="INFO">${body} = { "city": "Rio de Janeiro", "state": "Rio de Janeiro", "country": "Brasil", "neighborhood": "Bairro de Testes", "street": "Rua de Testes", "number": "90", "complement": "apto 200", "postal_code": "215...</msg>
<status status="PASS" starttime="20210322 02:40:14.611" endtime="20210322 02:40:14.611"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/addresses</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:40:14.612" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/193abe25d8574bdca85e8b0c46114aff/addresses, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "city": "Rio de Janeiro", "state": "Rio de Janeiro", "country": "Brasil", "neighborhood": "Bairro de Testes", "street": "Rua de Testes", "number": "90", "complement": "apto 200", "postal_code": "21550987" } 
json=None</msg>
<msg timestamp="20210322 02:40:14.826" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:40:14.611" endtime="20210322 02:40:14.826"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:40:14.829" level="INFO">{'id': '6c16535e7564462b88f78020bdbb759c', 'street': 'Rua de Testes', 'number': '90', 'city': 'Rio de Janeiro', 'complement': 'apto 200', 'state': 'Rio de Janeiro', 'neighborhood': 'Bairro de Testes', 'postal_code': '21550987', 'country': 'Brasil', 'main': True, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/193abe25d8574bdca85e8b0c46114aff/addresses/6c16535e7564462b88f78020bdbb759c', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/193abe25d8574bdca85e8b0c46114aff', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 02:40:14.828" endtime="20210322 02:40:14.830"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:40:14.831" level="INFO">a368c0727095f181</msg>
<status status="PASS" starttime="20210322 02:40:14.831" endtime="20210322 02:40:14.831"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:40:14.833" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:40:14.832" endtime="20210322 02:40:14.833"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${address_external_key}</var>
</assign>
<msg timestamp="20210322 02:40:14.835" level="INFO">${address_external_key} = 6c16535e7564462b88f78020bdbb759c</msg>
<status status="PASS" starttime="20210322 02:40:14.834" endtime="20210322 02:40:14.835"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${address_external_key}</arg>
</arguments>
<msg timestamp="20210322 02:40:14.836" level="INFO">${address_external_key} = 6c16535e7564462b88f78020bdbb759c</msg>
<status status="PASS" starttime="20210322 02:40:14.835" endtime="20210322 02:40:14.836"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:14.609" endtime="20210322 02:40:14.836"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 02:40:14.837" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:40:14.837" endtime="20210322 02:40:14.837"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>SELFIE</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:40:14.839" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 02:40:14.839" endtime="20210322 02:40:14.839"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 02:40:14.840" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 02:40:14.842" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 02:40:14.839" endtime="20210322 02:40:14.842"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:40:14.843" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/193abe25d8574bdca85e8b0c46114aff/documents?type=SELFIE, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 02:40:15.117" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:40:14.842" endtime="20210322 02:40:15.117"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:40:15.119" level="INFO">{'id': '5f6ece2e0e6f4b9ea978a1b31cad3bcd', 'document_type': 'selfie', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/193abe25d8574bdca85e8b0c46114aff/documents/5f6ece2e0e6f4b9ea978a1b31cad3bcd', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/193abe25d8574bdca85e8b0c46114aff', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/193abe25d8574bdca85e8b0c46114aff/documents/5f6ece2e0e6f4b9ea978a1b31cad3bcd/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 02:40:15.118" endtime="20210322 02:40:15.119"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:40:15.120" level="INFO">7686751bd924f862</msg>
<status status="PASS" starttime="20210322 02:40:15.119" endtime="20210322 02:40:15.120"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:40:15.121" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:40:15.120" endtime="20210322 02:40:15.121"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 02:40:15.122" level="INFO">${document_external_key} = 5f6ece2e0e6f4b9ea978a1b31cad3bcd</msg>
<status status="PASS" starttime="20210322 02:40:15.121" endtime="20210322 02:40:15.122"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 02:40:15.123" level="INFO">${document_external_key} = 5f6ece2e0e6f4b9ea978a1b31cad3bcd</msg>
<status status="PASS" starttime="20210322 02:40:15.123" endtime="20210322 02:40:15.123"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:14.838" endtime="20210322 02:40:15.124"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 02:40:15.125" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:40:15.124" endtime="20210322 02:40:15.125"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>RG_FRENTE</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:40:15.127" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 02:40:15.127" endtime="20210322 02:40:15.127"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 02:40:15.128" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 02:40:15.130" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 02:40:15.127" endtime="20210322 02:40:15.130"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:40:15.131" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/193abe25d8574bdca85e8b0c46114aff/documents?type=RG_FRENTE, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 02:40:15.383" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:40:15.130" endtime="20210322 02:40:15.384"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:40:15.386" level="INFO">{'id': '27cbbc5427b34793816d661e03808554', 'document_type': 'rg_frente', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/193abe25d8574bdca85e8b0c46114aff/documents/27cbbc5427b34793816d661e03808554', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/193abe25d8574bdca85e8b0c46114aff', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/193abe25d8574bdca85e8b0c46114aff/documents/27cbbc5427b34793816d661e03808554/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 02:40:15.385" endtime="20210322 02:40:15.387"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:40:15.389" level="INFO">bdf2fab1ca46e41c</msg>
<status status="PASS" starttime="20210322 02:40:15.387" endtime="20210322 02:40:15.389"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:40:15.391" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:40:15.390" endtime="20210322 02:40:15.392"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 02:40:15.395" level="INFO">${document_external_key} = 27cbbc5427b34793816d661e03808554</msg>
<status status="PASS" starttime="20210322 02:40:15.393" endtime="20210322 02:40:15.395"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 02:40:15.397" level="INFO">${document_external_key} = 27cbbc5427b34793816d661e03808554</msg>
<status status="PASS" starttime="20210322 02:40:15.396" endtime="20210322 02:40:15.397"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:15.125" endtime="20210322 02:40:15.397"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 02:40:15.399" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:40:15.399" endtime="20210322 02:40:15.399"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>RG_VERSO</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:40:15.402" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 02:40:15.401" endtime="20210322 02:40:15.402"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 02:40:15.403" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 02:40:15.407" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 02:40:15.403" endtime="20210322 02:40:15.407"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:40:15.409" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/193abe25d8574bdca85e8b0c46114aff/documents?type=RG_VERSO, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 02:40:15.672" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:40:15.407" endtime="20210322 02:40:15.672"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:40:15.675" level="INFO">{'id': 'af5fc545b5c545d0badaf64b7f457de7', 'document_type': 'rg_verso', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/193abe25d8574bdca85e8b0c46114aff/documents/af5fc545b5c545d0badaf64b7f457de7', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/193abe25d8574bdca85e8b0c46114aff', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/193abe25d8574bdca85e8b0c46114aff/documents/af5fc545b5c545d0badaf64b7f457de7/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 02:40:15.673" endtime="20210322 02:40:15.675"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:40:15.678" level="INFO">aebe29138e11b0fa</msg>
<status status="PASS" starttime="20210322 02:40:15.677" endtime="20210322 02:40:15.678"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:40:15.680" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:40:15.679" endtime="20210322 02:40:15.681"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 02:40:15.683" level="INFO">${document_external_key} = af5fc545b5c545d0badaf64b7f457de7</msg>
<status status="PASS" starttime="20210322 02:40:15.681" endtime="20210322 02:40:15.683"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 02:40:15.684" level="INFO">${document_external_key} = af5fc545b5c545d0badaf64b7f457de7</msg>
<status status="PASS" starttime="20210322 02:40:15.683" endtime="20210322 02:40:15.684"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:15.400" endtime="20210322 02:40:15.684"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 02:40:15.686" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:40:15.685" endtime="20210322 02:40:15.686"></status>
</kw>
<kw name="solicitar aprovação do holder" library="accreditation_request_approval">
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:40:15.688" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 02:40:15.687" endtime="20210322 02:40:15.688"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/approval</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:40:15.689" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/193abe25d8574bdca85e8b0c46114aff/approval, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data=None 
json=None</msg>
<msg timestamp="20210322 02:40:15.965" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:40:15.688" endtime="20210322 02:40:15.965"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:40:15.965" level="INFO">{'message': 'Approval request accepted successfully. Processing analysis'}</msg>
<status status="PASS" starttime="20210322 02:40:15.965" endtime="20210322 02:40:15.966"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:40:15.966" level="INFO">3b0f76ad1b5e3adc</msg>
<status status="PASS" starttime="20210322 02:40:15.966" endtime="20210322 02:40:15.966"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:40:15.967" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:40:15.966" endtime="20210322 02:40:15.967"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:15.687" endtime="20210322 02:40:15.967"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 02:40:15.967" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:40:15.967" endtime="20210322 02:40:15.967"></status>
</kw>
<kw name="recebendo notificação de aprovação" library="accreditation_risk_notification">
<kw name="Uuid 4" library="FakerLibrary">
<doc>Generates a random UUID4 string.
:param cast_to: Specify what type the UUID should be cast to. Default is `str`
:type cast_to: callable</doc>
<assign>
<var>${assessment_id}</var>
</assign>
<msg timestamp="20210322 02:40:15.968" level="INFO">${assessment_id} = ab57c5f5-03b1-484a-b144-154e083c0c90</msg>
<status status="PASS" starttime="20210322 02:40:15.968" endtime="20210322 02:40:15.968"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>year</arg>
</arguments>
<assign>
<var>${year}</var>
</assign>
<msg timestamp="20210322 02:40:15.969" level="INFO">${year} = 2021</msg>
<status status="PASS" starttime="20210322 02:40:15.969" endtime="20210322 02:40:15.969"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>month</arg>
</arguments>
<assign>
<var>${month}</var>
</assign>
<msg timestamp="20210322 02:40:15.970" level="INFO">${month} = 03</msg>
<status status="PASS" starttime="20210322 02:40:15.970" endtime="20210322 02:40:15.970"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>day</arg>
</arguments>
<assign>
<var>${day}</var>
</assign>
<msg timestamp="20210322 02:40:15.971" level="INFO">${day} = 22</msg>
<status status="PASS" starttime="20210322 02:40:15.970" endtime="20210322 02:40:15.971"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:40:15.971" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 02:40:15.971" endtime="20210322 02:40:15.971"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "risk.assessment.result",</arg>
<arg>"resource": "business.holder",</arg>
<arg>"created_at": "${year}-${month}-${day} 15:28:56.747Z",</arg>
<arg>"marketplace_id": "${marketplace_external_key}",</arg>
<arg>"object": {</arg>
<arg>"result": "APPROVED",</arg>
<arg>"holder_id": "${holder_external_key}",</arg>
<arg>"applicant_id": "${application_external_key}",</arg>
<arg>"assessment_id": "${assessment_id}"</arg>
<arg>}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 02:40:15.972" level="INFO">${body} = { "type": "risk.assessment.result", "resource": "business.holder", "created_at": "2021-03-22 15:28:56.747Z", "marketplace_id": "f71a8951368a4cc085cf7875ff44e61c", "object": { "result": "APPROVED", "ho...</msg>
<status status="PASS" starttime="20210322 02:40:15.971" endtime="20210322 02:40:15.972"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/admin/internal_operation/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/registration/approval</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:40:15.973" level="INFO">POST Request using : uri=/admin/internal_operation/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/193abe25d8574bdca85e8b0c46114aff/registration/approval, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "risk.assessment.result", "resource": "business.holder", "created_at": "2021-03-22 15:28:56.747Z", "marketplace_id": "f71a8951368a4cc085cf7875ff44e61c", "object": { "result": "APPROVED", "holder_id": "193abe25d8574bdca85e8b0c46114aff", "applicant_id": "bcc25a6751c14b52af1340d40dba78c5", "assessment_id": "ab57c5f5-03b1-484a-b144-154e083c0c90" } } 
json=None</msg>
<msg timestamp="20210322 02:40:16.164" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:40:15.972" endtime="20210322 02:40:16.164"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:40:16.164" level="INFO">{'message': 'Holder approved successfully'}</msg>
<status status="PASS" starttime="20210322 02:40:16.164" endtime="20210322 02:40:16.164"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:40:16.165" level="INFO">446a1a29b5bdb43d</msg>
<status status="PASS" starttime="20210322 02:40:16.164" endtime="20210322 02:40:16.165"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:40:16.165" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:40:16.165" endtime="20210322 02:40:16.165"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 02:40:16.166" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:40:16.166" endtime="20210322 02:40:16.166"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:15.968" endtime="20210322 02:40:16.166"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 02:40:16.166" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:40:16.166" endtime="20210322 02:40:16.166"></status>
</kw>
<kw name="buscar account por holder" library="accounts_get_accounts_by_holder">
<kw name="conectar accounts" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accounts</arg>
<arg>url=${account_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 02:40:16.167" level="INFO">Creating Session using : alias=accounts, url=https://banking-accounts-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 02:40:16.167" endtime="20210322 02:40:16.167"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:16.167" endtime="20210322 02:40:16.168"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accounts</arg>
<arg>/marketplaces/${marketplace_external_key}/holders/${holder_external_key}/accounts</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:40:16.168" level="INFO">GET Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/holders/193abe25d8574bdca85e8b0c46114aff/accounts, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 02:40:16.818" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:40:16.168" endtime="20210322 02:40:16.818"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:40:16.819" level="INFO">{'items': [{'id': 'd587b2274e914fbc8076b3aa68862ef5', 'holder': '193abe25d8574bdca85e8b0c46114aff', 'balance': '0.00', 'currency': 'BRL', 'routing_number': '001', 'number': '3796026366', 'status': 'active', 'metadata': {}, 'created_at': '2021-03-22T05:40:16.997146', 'updated_at': '2021-03-22T05:40:16.997146', 'primary': True, 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'uri': '/v2/marketplaces/f71a8951368a4cc085cf7875ff44e61c/accounts/d587b2274e914fbc8076b3aa68862ef5', 'resource': 'payment_account'}], 'has_more': False, 'limit': 100, 'total_pages': 1, 'page': 1, 'offset': 0, 'total': '1', 'query_count': '1'}</msg>
<status status="PASS" starttime="20210322 02:40:16.818" endtime="20210322 02:40:16.820"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:40:16.821" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:40:16.820" endtime="20210322 02:40:16.821"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["id"]}</arg>
</arguments>
<assign>
<var>${account_external_key}</var>
</assign>
<msg timestamp="20210322 02:40:16.823" level="INFO">${account_external_key} = d587b2274e914fbc8076b3aa68862ef5</msg>
<status status="PASS" starttime="20210322 02:40:16.822" endtime="20210322 02:40:16.823"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_external_key}</arg>
</arguments>
<msg timestamp="20210322 02:40:16.824" level="INFO">${account_external_key} = d587b2274e914fbc8076b3aa68862ef5</msg>
<status status="PASS" starttime="20210322 02:40:16.823" endtime="20210322 02:40:16.824"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["number"]}</arg>
</arguments>
<assign>
<var>${account_number}</var>
</assign>
<msg timestamp="20210322 02:40:16.825" level="INFO">${account_number} = 3796026366</msg>
<status status="PASS" starttime="20210322 02:40:16.824" endtime="20210322 02:40:16.825"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_number}</arg>
</arguments>
<msg timestamp="20210322 02:40:16.826" level="INFO">${account_number} = 3796026366</msg>
<status status="PASS" starttime="20210322 02:40:16.826" endtime="20210322 02:40:16.826"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["routing_number"]}</arg>
</arguments>
<assign>
<var>${account_routing_number}</var>
</assign>
<msg timestamp="20210322 02:40:16.827" level="INFO">${account_routing_number} = 001</msg>
<status status="PASS" starttime="20210322 02:40:16.827" endtime="20210322 02:40:16.827"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_routing_number}</arg>
</arguments>
<msg timestamp="20210322 02:40:16.828" level="INFO">${account_routing_number} = 001</msg>
<status status="PASS" starttime="20210322 02:40:16.828" endtime="20210322 02:40:16.828"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:16.166" endtime="20210322 02:40:16.828"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 02:40:16.829" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:40:16.829" endtime="20210322 02:40:16.829"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:13.634" endtime="20210322 02:40:16.829"></status>
</kw>
<kw name="criar chave pix" library="pix_dict_create_entry">
<arguments>
<arg>type=national_registration</arg>
<arg>value=${EMPTY}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 02:40:16.831" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 02:40:16.831" endtime="20210322 02:40:16.832"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:16.830" endtime="20210322 02:40:16.832"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${type}</arg>
</arguments>
<msg timestamp="20210322 02:40:16.833" level="INFO">${type} = national_registration</msg>
<status status="PASS" starttime="20210322 02:40:16.832" endtime="20210322 02:40:16.833"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210322 02:40:16.833" level="INFO">${value} = </msg>
<status status="PASS" starttime="20210322 02:40:16.833" endtime="20210322 02:40:16.833"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:40:16.834" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 02:40:16.834" endtime="20210322 02:40:16.834"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "${type}",</arg>
<arg>"value": "${value}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 02:40:16.835" level="INFO">${body} = { "type": "national_registration", "value": "" }</msg>
<status status="PASS" starttime="20210322 02:40:16.834" endtime="20210322 02:40:16.835"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:40:16.836" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/193abe25d8574bdca85e8b0c46114aff/accounts/d587b2274e914fbc8076b3aa68862ef5/entries, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "national_registration", "value": "" } 
json=None</msg>
<msg timestamp="20210322 02:40:18.432" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:40:16.835" endtime="20210322 02:40:18.432"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:40:18.432" level="INFO">{'id': '3b8441d633934e09b67dd45aaaad595d', 'status': 'active', 'created_at': '2021-03-22T02:40:18.334', 'updated_at': '2021-03-22T02:40:18.334', 'key': {'value': '10835796493', 'type': 'national_registration'}, 'account': {'id': 'd587b2274e914fbc8076b3aa68862ef5', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': '193abe25d8574bdca85e8b0c46114aff', 'owner': {'name': 'Holder de teste', 'national_registration': '10835796493', 'type': 'individual'}, 'routing_number': '001', 'number': '3796026366', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}, 'resource': 'pix.entry'}</msg>
<status status="PASS" starttime="20210322 02:40:18.432" endtime="20210322 02:40:18.433"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:40:18.433" level="INFO">7cbc3c9fc3eb4060</msg>
<status status="PASS" starttime="20210322 02:40:18.433" endtime="20210322 02:40:18.433"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 02:40:18.433" level="INFO">201</msg>
<status status="PASS" starttime="20210322 02:40:18.433" endtime="20210322 02:40:18.433"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:40:18.434" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:40:18.434" endtime="20210322 02:40:18.434"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${entry_external_key}</var>
</assign>
<msg timestamp="20210322 02:40:18.434" level="INFO">${entry_external_key} = 3b8441d633934e09b67dd45aaaad595d</msg>
<status status="PASS" starttime="20210322 02:40:18.434" endtime="20210322 02:40:18.434"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${entry_external_key}</arg>
</arguments>
<msg timestamp="20210322 02:40:18.435" level="INFO">${entry_external_key} = 3b8441d633934e09b67dd45aaaad595d</msg>
<status status="PASS" starttime="20210322 02:40:18.435" endtime="20210322 02:40:18.435"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["key"]["value"]}</arg>
</arguments>
<assign>
<var>${entry_key_value}</var>
</assign>
<msg timestamp="20210322 02:40:18.435" level="INFO">${entry_key_value} = 10835796493</msg>
<status status="PASS" starttime="20210322 02:40:18.435" endtime="20210322 02:40:18.435"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${entry_key_value}</arg>
</arguments>
<msg timestamp="20210322 02:40:18.436" level="INFO">${entry_key_value} = 10835796493</msg>
<status status="PASS" starttime="20210322 02:40:18.436" endtime="20210322 02:40:18.436"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:16.830" endtime="20210322 02:40:18.436"></status>
</kw>
<kw name="validar criação da chave pix" library="asserts">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando status_code</arg>
</arguments>
<msg timestamp="20210322 02:40:18.436" level="INFO">Validando status_code</msg>
<status status="PASS" starttime="20210322 02:40:18.436" endtime="20210322 02:40:18.436"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${type}' == 'evp'</arg>
<arg>Should Be Equal As Integers</arg>
<arg>${response.status_code}</arg>
<arg>201</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'phone'</arg>
<arg>Should Be Equal As Integers</arg>
<arg>${response.status_code}</arg>
<arg>202</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'email'</arg>
<arg>Should Be Equal As Integers</arg>
<arg>${response.status_code}</arg>
<arg>202</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'national_registration'</arg>
<arg>Should Be Equal As Integers</arg>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 02:40:18.437" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:40:18.437" endtime="20210322 02:40:18.437"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:18.437" endtime="20210322 02:40:18.437"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar status da chave</arg>
</arguments>
<msg timestamp="20210322 02:40:18.438" level="INFO">Validar status da chave</msg>
<status status="PASS" starttime="20210322 02:40:18.438" endtime="20210322 02:40:18.438"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${type}' == 'evp'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["status"]}</arg>
<arg>active</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'phone'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["status"]}</arg>
<arg>waiting_ownership_verification</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'email'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["status"]}</arg>
<arg>waiting_ownership_verification</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'national_registration'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["status"]}</arg>
<arg>active</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["status"]}</arg>
<arg>active</arg>
</arguments>
<status status="PASS" starttime="20210322 02:40:18.438" endtime="20210322 02:40:18.439"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:18.438" endtime="20210322 02:40:18.439"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando Tipo da chave PIX</arg>
</arguments>
<msg timestamp="20210322 02:40:18.439" level="INFO">Validando Tipo da chave PIX</msg>
<status status="PASS" starttime="20210322 02:40:18.439" endtime="20210322 02:40:18.439"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${type}' == 'evp'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["type"]}</arg>
<arg>${type}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'phone'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["type"]}</arg>
<arg>${type}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'email'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["type"]}</arg>
<arg>${type}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'national_registration'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["type"]}</arg>
<arg>${type}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["key"]["type"]}</arg>
<arg>${type}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:40:18.440" endtime="20210322 02:40:18.440"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:18.439" endtime="20210322 02:40:18.440"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando Valor da chave PIX</arg>
</arguments>
<msg timestamp="20210322 02:40:18.440" level="INFO">Validando Valor da chave PIX</msg>
<status status="PASS" starttime="20210322 02:40:18.440" endtime="20210322 02:40:18.441"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${type}' == 'evp'</arg>
<arg>Should Not Be Empty</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'phone'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${phone_pix}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'email'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${email_pix}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'national_registration'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${national_registration}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${national_registration}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:40:18.441" endtime="20210322 02:40:18.441"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:18.441" endtime="20210322 02:40:18.442"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando dados da conta</arg>
</arguments>
<msg timestamp="20210322 02:40:18.442" level="INFO">Validando dados da conta</msg>
<status status="PASS" starttime="20210322 02:40:18.442" endtime="20210322 02:40:18.442"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["id"]}</arg>
<arg>${account_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:40:18.442" endtime="20210322 02:40:18.442"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["marketplace"]}</arg>
<arg>${marketplace_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:40:18.442" endtime="20210322 02:40:18.443"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["holder"]}</arg>
<arg>${holder_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:40:18.443" endtime="20210322 02:40:18.443"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["number"]}</arg>
<arg>${account_number}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:40:18.443" endtime="20210322 02:40:18.444"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["routing_number"]}</arg>
<arg>${account_routing_number}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:40:18.444" endtime="20210322 02:40:18.444"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["type"]}</arg>
<arg>CACC</arg>
</arguments>
<status status="PASS" starttime="20210322 02:40:18.444" endtime="20210322 02:40:18.444"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar Proprietário da Account Owner</arg>
</arguments>
<msg timestamp="20210322 02:40:18.445" level="INFO">Validar Proprietário da Account Owner</msg>
<status status="PASS" starttime="20210322 02:40:18.445" endtime="20210322 02:40:18.445"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${holder_type}' == 'individual'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["account"]["owner"]["name"]}</arg>
<arg>${holder_name}</arg>
<arg>ELSE IF</arg>
<arg>'${holder_type}' == 'business'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["account"]["owner"]["name"]}</arg>
<arg>${legal_name}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["account"]["owner"]["name"]}</arg>
<arg>${holder_name}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:40:18.446" endtime="20210322 02:40:18.446"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:18.445" endtime="20210322 02:40:18.446"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar national_registration da Account Owner</arg>
</arguments>
<msg timestamp="20210322 02:40:18.446" level="INFO">Validar national_registration da Account Owner</msg>
<status status="PASS" starttime="20210322 02:40:18.446" endtime="20210322 02:40:18.446"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${holder_type}' == 'individual'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["account"]["owner"]["national_registration"]}</arg>
<arg>${national_registration}</arg>
<arg>ELSE IF</arg>
<arg>'${holder_type}' == 'business'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["account"]["owner"]["national_registration"]}</arg>
<arg>${national_registration}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["account"]["owner"]["national_registration"]}</arg>
<arg>${national_registration}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:40:18.447" endtime="20210322 02:40:18.447"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:18.446" endtime="20210322 02:40:18.447"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar Holder Type do Account Owner</arg>
</arguments>
<msg timestamp="20210322 02:40:18.447" level="INFO">Validar Holder Type do Account Owner</msg>
<status status="PASS" starttime="20210322 02:40:18.447" endtime="20210322 02:40:18.447"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${holder_type}' == 'individual'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["account"]["owner"]["type"]}</arg>
<arg>${holder_type}</arg>
<arg>ELSE IF</arg>
<arg>'${holder_type}' == 'business'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["account"]["owner"]["type"]}</arg>
<arg>${holder_type}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["account"]["owner"]["type"]}</arg>
<arg>${holder_type}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:40:18.448" endtime="20210322 02:40:18.448"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:18.448" endtime="20210322 02:40:18.448"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar PSP</arg>
</arguments>
<msg timestamp="20210322 02:40:18.449" level="INFO">Validar PSP</msg>
<status status="PASS" starttime="20210322 02:40:18.448" endtime="20210322 02:40:18.449"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["psp"]["code"]}</arg>
<arg>19468242</arg>
</arguments>
<status status="PASS" starttime="20210322 02:40:18.449" endtime="20210322 02:40:18.449"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["psp"]["name"]}</arg>
<arg>Zoop Tecnologia e Meios de Pagamento S.A.</arg>
</arguments>
<status status="PASS" starttime="20210322 02:40:18.449" endtime="20210322 02:40:18.450"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:18.436" endtime="20210322 02:40:18.450"></status>
</kw>
<doc>Fluxo Básico</doc>
<tags>
<tag>regression_test</tag>
<tag>smoke_test</tag>
</tags>
<status status="PASS" starttime="20210322 02:40:13.633" endtime="20210322 02:40:18.450" critical="yes"></status>
</test>
<test id="s1-s1-s3-t5" name="Cenário: Criando Chave de Endereçamento do tipo CNPJ">
<kw name="criar holder business ativo" library="accreditation_create_holder_active">
<kw name="conectar accreditation" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accreditation</arg>
<arg>url=${accreditation_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 02:40:18.451" level="INFO">Creating Session using : alias=accreditation, url=https://banking-accreditation-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 02:40:18.451" endtime="20210322 02:40:18.452"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:18.451" endtime="20210322 02:40:18.452"></status>
</kw>
<kw name="Cnpj" library="FakerLibrary">
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 02:40:18.452" level="INFO">${national_registration} = 70.835.264/0001-40</msg>
<status status="PASS" starttime="20210322 02:40:18.452" endtime="20210322 02:40:18.452"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${national_registration}</arg>
<arg>.</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 02:40:18.453" level="INFO">${national_registration} = 70835264/0001-40</msg>
<status status="PASS" starttime="20210322 02:40:18.452" endtime="20210322 02:40:18.453"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${national_registration}</arg>
<arg>-</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 02:40:18.453" level="INFO">${national_registration} = 70835264/000140</msg>
<status status="PASS" starttime="20210322 02:40:18.453" endtime="20210322 02:40:18.453"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${national_registration}</arg>
<arg>/</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 02:40:18.453" level="INFO">${national_registration} = 70835264000140</msg>
<status status="PASS" starttime="20210322 02:40:18.453" endtime="20210322 02:40:18.453"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${national_registration}</arg>
</arguments>
<msg timestamp="20210322 02:40:18.454" level="INFO">${national_registration} = 70835264000140</msg>
<status status="PASS" starttime="20210322 02:40:18.454" endtime="20210322 02:40:18.454"></status>
</kw>
<kw name="Rg" library="FakerLibrary">
<doc>Brazilian RG, return plain numbers.
Check:  https://www.ngmatematica.com/2014/02/como-determinar-o-digito-verificador-do.html</doc>
<assign>
<var>${identity_card}</var>
</assign>
<msg timestamp="20210322 02:40:18.454" level="INFO">${identity_card} = 341570862</msg>
<status status="PASS" starttime="20210322 02:40:18.454" endtime="20210322 02:40:18.454"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${identity_card}</arg>
</arguments>
<msg timestamp="20210322 02:40:18.454" level="INFO">${identity_card} = 341570862</msg>
<status status="PASS" starttime="20210322 02:40:18.454" endtime="20210322 02:40:18.454"></status>
</kw>
<kw name="criar holder business" library="accreditation_post_holder_business">
<arguments>
<arg>holder_type=business</arg>
<arg>holder_name=${holder_name}</arg>
<arg>email_business=${email_business}</arg>
<arg>national_registration=${national_registration}</arg>
<arg>revenue_business=${revenue_business}</arg>
<arg>cnae=${cnae}</arg>
<arg>legal_name=${legal_name}</arg>
<arg>establishment_format=mei</arg>
<arg>establishment_date=${establishment_date}</arg>
</arguments>
<kw name="conectar accreditation" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accreditation</arg>
<arg>url=${accreditation_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 02:40:18.456" level="INFO">Creating Session using : alias=accreditation, url=https://banking-accreditation-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 02:40:18.455" endtime="20210322 02:40:18.456"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:18.455" endtime="20210322 02:40:18.456"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_type}</arg>
</arguments>
<msg timestamp="20210322 02:40:18.456" level="INFO">${holder_type} = business</msg>
<status status="PASS" starttime="20210322 02:40:18.456" endtime="20210322 02:40:18.457"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_name}</arg>
</arguments>
<msg timestamp="20210322 02:40:18.457" level="INFO">${holder_name} = Holder de teste</msg>
<status status="PASS" starttime="20210322 02:40:18.457" endtime="20210322 02:40:18.457"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${legal_name}</arg>
</arguments>
<msg timestamp="20210322 02:40:18.457" level="INFO">${legal_name} = Nome Legal da Empresa</msg>
<status status="PASS" starttime="20210322 02:40:18.457" endtime="20210322 02:40:18.457"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:40:18.458" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 02:40:18.457" endtime="20210322 02:40:18.458"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "${holder_type}",</arg>
<arg>"name": "${holder_name}",</arg>
<arg>"email": "${email_business}",</arg>
<arg>"national_registration": "${national_registration}",</arg>
<arg>"revenue": ${revenue_business},</arg>
<arg>"cnae": "${cnae}",</arg>
<arg>"legal_name": "${legal_name}",</arg>
<arg>"establishment": {</arg>
<arg>"format":"${establishment_format}",</arg>
<arg>"date":"${establishment_date}"</arg>
<arg>}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 02:40:18.458" level="INFO">${body} = { "type": "business", "name": "Holder de teste", "email": "contato@teste.com.br", "national_registration": "70835264000140", "revenue": 1005500.00, "cnae": "0111301", "legal_name": "Nome Legal da Empr...</msg>
<status status="PASS" starttime="20210322 02:40:18.458" endtime="20210322 02:40:18.458"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:40:18.459" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "business", "name": "Holder de teste", "email": "contato@teste.com.br", "national_registration": "70835264000140", "revenue": 1005500.00, "cnae": "0111301", "legal_name": "Nome Legal da Empresa", "establishment": { "format":"mei", "date":"2012-04-25" } } 
json=None</msg>
<msg timestamp="20210322 02:40:19.104" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:40:18.459" endtime="20210322 02:40:19.104"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:40:19.106" level="INFO">{'id': 'aafd5de01a894e8da9650b156e096c00', 'name': 'Holder de teste', 'revenue': 1005500.0, 'email': 'contato@teste.com.br', 'status': 'waiting_info_and_documents', 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'marketplace_name': 'Marketplace de Teste', 'created_at': '2021-03-22T02:40:19.902004', 'updated_at': '2021-03-22T02:40:19.902006', 'type': 'business', 'national_registration': '70835264000140', 'legal_name': 'Nome Legal da Empresa', 'establishment': {'format': 'mei', 'date': '2012-04-25'}, 'cnae': '0111301', '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/aafd5de01a894e8da9650b156e096c00', 'type': 'GET'}, 'phones': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/aafd5de01a894e8da9650b156e096c00/phones', 'type': 'GET'}, 'addresses': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/aafd5de01a894e8da9650b156e096c00/addresses', 'type': 'GET'}, 'documents': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/aafd5de01a894e8da9650b156e096c00/documents', 'type': 'GET'}, 'partners': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/aafd5de01a894e8da9650b156e096c00/partners', 'type': 'GET'}, 'associates': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/aafd5de01a894e8da9650b156e096c00/associates', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 02:40:19.105" endtime="20210322 02:40:19.107"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:40:19.109" level="INFO">1838e13839e4ac50</msg>
<status status="PASS" starttime="20210322 02:40:19.108" endtime="20210322 02:40:19.109"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${body}</arg>
</arguments>
<msg timestamp="20210322 02:40:19.111" level="INFO">{ "type": "business", "name": "Holder de teste", "email": "contato@teste.com.br", "national_registration": "70835264000140", "revenue": 1005500.00, "cnae": "0111301", "legal_name": "Nome Legal da Empresa", "establishment": { "format":"mei", "date":"2012-04-25" } }</msg>
<status status="PASS" starttime="20210322 02:40:19.110" endtime="20210322 02:40:19.111"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:40:19.113" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:40:19.112" endtime="20210322 02:40:19.114"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${holder_external_key}</var>
</assign>
<msg timestamp="20210322 02:40:19.116" level="INFO">${holder_external_key} = aafd5de01a894e8da9650b156e096c00</msg>
<status status="PASS" starttime="20210322 02:40:19.114" endtime="20210322 02:40:19.116"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_external_key}</arg>
</arguments>
<msg timestamp="20210322 02:40:19.117" level="INFO">${holder_external_key} = aafd5de01a894e8da9650b156e096c00</msg>
<status status="PASS" starttime="20210322 02:40:19.117" endtime="20210322 02:40:19.118"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:18.455" endtime="20210322 02:40:19.118"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 02:40:19.120" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:40:19.118" endtime="20210322 02:40:19.120"></status>
</kw>
<kw name="criar holder phone" library="accreditation_post_holder_phone">
<arguments>
<arg>21</arg>
<arg>51</arg>
<arg>996221236</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:40:19.122" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 02:40:19.121" endtime="20210322 02:40:19.122"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"area_code": "${phone_area_code}",</arg>
<arg>"country_code": "${phone_country_code}",</arg>
<arg>"number": "${phone_number}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 02:40:19.123" level="INFO">${body} = { "area_code": "21", "country_code": "51", "number": "996221236" }</msg>
<status status="PASS" starttime="20210322 02:40:19.122" endtime="20210322 02:40:19.123"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/phones</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:40:19.125" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/aafd5de01a894e8da9650b156e096c00/phones, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "area_code": "21", "country_code": "51", "number": "996221236" } 
json=None</msg>
<msg timestamp="20210322 02:40:19.342" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:40:19.124" endtime="20210322 02:40:19.342"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:40:19.343" level="INFO">{'id': 'ed523038414242a5a4084d857b89978d', 'area_code': '21', 'country_code': '51', 'number': '996221236', 'main': True, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/aafd5de01a894e8da9650b156e096c00/phones/ed523038414242a5a4084d857b89978d', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/aafd5de01a894e8da9650b156e096c00', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 02:40:19.342" endtime="20210322 02:40:19.343"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:40:19.344" level="INFO">76ac172e20dd4f90</msg>
<status status="PASS" starttime="20210322 02:40:19.343" endtime="20210322 02:40:19.344"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:40:19.345" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:40:19.345" endtime="20210322 02:40:19.346"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${phone_external_key}</var>
</assign>
<msg timestamp="20210322 02:40:19.347" level="INFO">${phone_external_key} = ed523038414242a5a4084d857b89978d</msg>
<status status="PASS" starttime="20210322 02:40:19.346" endtime="20210322 02:40:19.347"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${phone_external_key}</arg>
</arguments>
<msg timestamp="20210322 02:40:19.348" level="INFO">${phone_external_key} = ed523038414242a5a4084d857b89978d</msg>
<status status="PASS" starttime="20210322 02:40:19.348" endtime="20210322 02:40:19.348"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:19.120" endtime="20210322 02:40:19.349"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 02:40:19.350" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:40:19.349" endtime="20210322 02:40:19.350"></status>
</kw>
<kw name="criar holder address" library="accreditation_post_holder_address">
<arguments>
<arg>Rio de Janeiro</arg>
<arg>Rio de Janeiro</arg>
<arg>Brasil</arg>
<arg>Bairro de Testes</arg>
<arg>Rua de Testes</arg>
<arg>90</arg>
<arg>apto 200</arg>
<arg>21550987</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:40:19.353" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 02:40:19.352" endtime="20210322 02:40:19.353"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"city": "${city}",</arg>
<arg>"state": "${state}",</arg>
<arg>"country": "${country}",</arg>
<arg>"neighborhood": "${neighborhood}",</arg>
<arg>"street": "${street}",</arg>
<arg>"number": "${number}",</arg>
<arg>"complement": "${complement}",</arg>
<arg>"postal_code": "${postal_code}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 02:40:19.353" level="INFO">${body} = { "city": "Rio de Janeiro", "state": "Rio de Janeiro", "country": "Brasil", "neighborhood": "Bairro de Testes", "street": "Rua de Testes", "number": "90", "complement": "apto 200", "postal_code": "215...</msg>
<status status="PASS" starttime="20210322 02:40:19.353" endtime="20210322 02:40:19.353"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/addresses</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:40:19.355" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/aafd5de01a894e8da9650b156e096c00/addresses, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "city": "Rio de Janeiro", "state": "Rio de Janeiro", "country": "Brasil", "neighborhood": "Bairro de Testes", "street": "Rua de Testes", "number": "90", "complement": "apto 200", "postal_code": "21550987" } 
json=None</msg>
<msg timestamp="20210322 02:40:19.573" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:40:19.353" endtime="20210322 02:40:19.573"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:40:19.575" level="INFO">{'id': '9840ee1ff33943d88d82e5fdd6059ade', 'street': 'Rua de Testes', 'number': '90', 'city': 'Rio de Janeiro', 'complement': 'apto 200', 'state': 'Rio de Janeiro', 'neighborhood': 'Bairro de Testes', 'postal_code': '21550987', 'country': 'Brasil', 'main': True, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/aafd5de01a894e8da9650b156e096c00/addresses/9840ee1ff33943d88d82e5fdd6059ade', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/aafd5de01a894e8da9650b156e096c00', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 02:40:19.574" endtime="20210322 02:40:19.575"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:40:19.576" level="INFO">ea62c34f2be19bc4</msg>
<status status="PASS" starttime="20210322 02:40:19.576" endtime="20210322 02:40:19.577"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:40:19.579" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:40:19.578" endtime="20210322 02:40:19.579"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${address_external_key}</var>
</assign>
<msg timestamp="20210322 02:40:19.580" level="INFO">${address_external_key} = 9840ee1ff33943d88d82e5fdd6059ade</msg>
<status status="PASS" starttime="20210322 02:40:19.579" endtime="20210322 02:40:19.580"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${address_external_key}</arg>
</arguments>
<msg timestamp="20210322 02:40:19.580" level="INFO">${address_external_key} = 9840ee1ff33943d88d82e5fdd6059ade</msg>
<status status="PASS" starttime="20210322 02:40:19.580" endtime="20210322 02:40:19.581"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:19.350" endtime="20210322 02:40:19.581"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 02:40:19.581" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:40:19.581" endtime="20210322 02:40:19.581"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>CCMEI</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:40:19.582" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 02:40:19.582" endtime="20210322 02:40:19.582"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 02:40:19.583" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 02:40:19.584" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 02:40:19.582" endtime="20210322 02:40:19.584"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:40:19.586" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/aafd5de01a894e8da9650b156e096c00/documents?type=CCMEI, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 02:40:19.862" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:40:19.585" endtime="20210322 02:40:19.862"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:40:19.864" level="INFO">{'id': '28454cb4ba6e468b8682e82eb230a802', 'document_type': 'ccmei', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/aafd5de01a894e8da9650b156e096c00/documents/28454cb4ba6e468b8682e82eb230a802', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/aafd5de01a894e8da9650b156e096c00', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/aafd5de01a894e8da9650b156e096c00/documents/28454cb4ba6e468b8682e82eb230a802/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 02:40:19.863" endtime="20210322 02:40:19.864"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:40:19.864" level="INFO">d5a8a5420b9ebf1a</msg>
<status status="PASS" starttime="20210322 02:40:19.864" endtime="20210322 02:40:19.864"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:40:19.865" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:40:19.864" endtime="20210322 02:40:19.865"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 02:40:19.865" level="INFO">${document_external_key} = 28454cb4ba6e468b8682e82eb230a802</msg>
<status status="PASS" starttime="20210322 02:40:19.865" endtime="20210322 02:40:19.866"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 02:40:19.868" level="INFO">${document_external_key} = 28454cb4ba6e468b8682e82eb230a802</msg>
<status status="PASS" starttime="20210322 02:40:19.866" endtime="20210322 02:40:19.868"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:19.582" endtime="20210322 02:40:19.868"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 02:40:19.869" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:40:19.869" endtime="20210322 02:40:19.869"></status>
</kw>
<kw name="Cpf" library="FakerLibrary">
<assign>
<var>${partner_individual_national_registration}</var>
</assign>
<msg timestamp="20210322 02:40:19.870" level="INFO">${partner_individual_national_registration} = 395.128.476-55</msg>
<status status="PASS" starttime="20210322 02:40:19.870" endtime="20210322 02:40:19.870"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${partner_individual_national_registration}</arg>
<arg>.</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${partner_individual_national_registration}</var>
</assign>
<msg timestamp="20210322 02:40:19.871" level="INFO">${partner_individual_national_registration} = 395128476-55</msg>
<status status="PASS" starttime="20210322 02:40:19.870" endtime="20210322 02:40:19.871"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${partner_individual_national_registration}</arg>
<arg>-</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${partner_individual_national_registration}</var>
</assign>
<msg timestamp="20210322 02:40:19.874" level="INFO">${partner_individual_national_registration} = 39512847655</msg>
<status status="PASS" starttime="20210322 02:40:19.873" endtime="20210322 02:40:19.874"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${partner_individual_national_registration}</arg>
</arguments>
<msg timestamp="20210322 02:40:19.874" level="INFO">${partner_individual_national_registration} = 39512847655</msg>
<status status="PASS" starttime="20210322 02:40:19.874" endtime="20210322 02:40:19.875"></status>
</kw>
<kw name="Rg" library="FakerLibrary">
<doc>Brazilian RG, return plain numbers.
Check:  https://www.ngmatematica.com/2014/02/como-determinar-o-digito-verificador-do.html</doc>
<assign>
<var>${partner_individual_identity_card}</var>
</assign>
<msg timestamp="20210322 02:40:19.875" level="INFO">${partner_individual_identity_card} = 876345124</msg>
<status status="PASS" starttime="20210322 02:40:19.875" endtime="20210322 02:40:19.875"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${partner_individual_identity_card}</arg>
</arguments>
<msg timestamp="20210322 02:40:19.876" level="INFO">${partner_individual_identity_card} = 876345124</msg>
<status status="PASS" starttime="20210322 02:40:19.875" endtime="20210322 02:40:19.876"></status>
</kw>
<kw name="criar partner individual" library="accreditation_post_partner_individual">
<arguments>
<arg>partner_individual_type=individual</arg>
<arg>partner_individual_name=${partner_individual_name}</arg>
<arg>partner_individual_email=${partner_individual_email}</arg>
<arg>partner_individual_national_registration=${partner_individual_national_registration}</arg>
<arg>partner_individual_revenue=${partner_individual_revenue}</arg>
<arg>partner_individual_birthday=${partner_individual_birthday}</arg>
<arg>partner_individual_mothers_name=${partner_individual_mothers_name}</arg>
<arg>partner_individual_identity_card=${partner_individual_identity_card}</arg>
<arg>partner_individual_pep=false</arg>
<arg>partner_individual_percentage=100</arg>
<arg>partner_individual_adm=true</arg>
<arg>partner_individual_cbo=${partner_individual_cbo}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:40:19.879" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 02:40:19.879" endtime="20210322 02:40:19.879"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "${partner_individual_type}",</arg>
<arg>"name": "${partner_individual_name}",</arg>
<arg>"email": "${partner_individual_email}",</arg>
<arg>"national_registration": "${partner_individual_national_registration}",</arg>
<arg>"revenue": ${partner_individual_revenue},</arg>
<arg>"birthday": "${partner_individual_birthday}",</arg>
<arg>"mothers_name": "${partner_individual_mothers_name}",</arg>
<arg>"identity_card": "${partner_individual_identity_card}",</arg>
<arg>"pep": false,</arg>
<arg>"percentage": ${partner_individual_percentage},</arg>
<arg>"adm": ${partner_individual_adm},</arg>
<arg>"cbo": ${partner_individual_cbo}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 02:40:19.881" level="INFO">${body} = { "type": "individual", "name": "Individual Partner de teste", "email": "teste@teste.com.br", "national_registration": "39512847655", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe...</msg>
<status status="PASS" starttime="20210322 02:40:19.880" endtime="20210322 02:40:19.881"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/partners</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:40:19.882" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/aafd5de01a894e8da9650b156e096c00/partners, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "individual", "name": "Individual Partner de teste", "email": "teste@teste.com.br", "national_registration": "39512847655", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Individual Partner", "identity_card": "876345124", "pep": false, "percentage": 100, "adm": true, "cbo": 821450 } 
json=None</msg>
<msg timestamp="20210322 02:40:20.140" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:40:19.881" endtime="20210322 02:40:20.140"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:40:20.143" level="INFO">{'id': 'e4b147ce996e4a4b918c3bb9de033e29', 'name': 'Individual Partner de teste', 'revenue': 5500.0, 'email': 'teste@teste.com.br', 'created_at': '2021-03-22T02:40:20.894824', 'updated_at': '2021-03-22T02:40:20.894826', 'main': True, 'adm': True, 'percentage': 100.0, 'type': 'individual', 'national_registration': '39512847655', 'birthday': '1988-04-23', 'mothers_name': 'Mãe do Individual Partner', 'identity_card': '876345124', 'pep': False, 'cbo': '821450', '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/aafd5de01a894e8da9650b156e096c00/partners/e4b147ce996e4a4b918c3bb9de033e29', 'type': 'GET'}, 'phones': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/aafd5de01a894e8da9650b156e096c00/partners/e4b147ce996e4a4b918c3bb9de033e29/phones', 'type': 'GET'}, 'addresses': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/aafd5de01a894e8da9650b156e096c00/partners/e4b147ce996e4a4b918c3bb9de033e29/addresses', 'type': 'GET'}, 'documents': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/aafd5de01a894e8da9650b156e096c00/partners/e4b147ce996e4a4b918c3bb9de033e29/documents', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/aafd5de01a894e8da9650b156e096c00', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 02:40:20.141" endtime="20210322 02:40:20.143"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:40:20.143" level="INFO">595e007b77c3e89b</msg>
<status status="PASS" starttime="20210322 02:40:20.143" endtime="20210322 02:40:20.143"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:40:20.144" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:40:20.143" endtime="20210322 02:40:20.145"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${partner_external_key}</var>
</assign>
<msg timestamp="20210322 02:40:20.146" level="INFO">${partner_external_key} = e4b147ce996e4a4b918c3bb9de033e29</msg>
<status status="PASS" starttime="20210322 02:40:20.145" endtime="20210322 02:40:20.147"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${partner_external_key}</arg>
</arguments>
<msg timestamp="20210322 02:40:20.148" level="INFO">${partner_external_key} = e4b147ce996e4a4b918c3bb9de033e29</msg>
<status status="PASS" starttime="20210322 02:40:20.147" endtime="20210322 02:40:20.149"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:19.877" endtime="20210322 02:40:20.149"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 02:40:20.150" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:40:20.149" endtime="20210322 02:40:20.150"></status>
</kw>
<kw name="criar partner phone" library="accreditation_post_partner_phone">
<arguments>
<arg>21</arg>
<arg>51</arg>
<arg>996554785</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:40:20.150" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 02:40:20.150" endtime="20210322 02:40:20.150"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"area_code": "${phone_area_code}",</arg>
<arg>"country_code": "${phone_country_code}",</arg>
<arg>"number": "${phone_number}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 02:40:20.151" level="INFO">${body} = { "area_code": "21", "country_code": "51", "number": "996554785" }</msg>
<status status="PASS" starttime="20210322 02:40:20.151" endtime="20210322 02:40:20.151"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/partners/${partner_external_key}/phones/</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:40:20.152" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/aafd5de01a894e8da9650b156e096c00/partners/e4b147ce996e4a4b918c3bb9de033e29/phones/, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "area_code": "21", "country_code": "51", "number": "996554785" } 
json=None</msg>
<msg timestamp="20210322 02:40:20.371" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:40:20.152" endtime="20210322 02:40:20.371"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:40:20.372" level="INFO">{'id': '147ad2d9cec845d194f0ad1d2972a888', 'area_code': '21', 'country_code': '51', 'number': '996554785', 'main': True, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/aafd5de01a894e8da9650b156e096c00/partners/e4b147ce996e4a4b918c3bb9de033e29/phones/147ad2d9cec845d194f0ad1d2972a888', 'type': 'GET'}, 'partner': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/aafd5de01a894e8da9650b156e096c00/partners/e4b147ce996e4a4b918c3bb9de033e29', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/aafd5de01a894e8da9650b156e096c00', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 02:40:20.371" endtime="20210322 02:40:20.372"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:40:20.373" level="INFO">a9a73134a50177f5</msg>
<status status="PASS" starttime="20210322 02:40:20.373" endtime="20210322 02:40:20.373"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:40:20.374" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:40:20.374" endtime="20210322 02:40:20.374"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${holder_external_key}</var>
</assign>
<msg timestamp="20210322 02:40:20.376" level="INFO">${holder_external_key} = 147ad2d9cec845d194f0ad1d2972a888</msg>
<status status="PASS" starttime="20210322 02:40:20.375" endtime="20210322 02:40:20.376"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${phone_external_key}</arg>
</arguments>
<msg timestamp="20210322 02:40:20.376" level="INFO">${phone_external_key} = ed523038414242a5a4084d857b89978d</msg>
<status status="PASS" starttime="20210322 02:40:20.376" endtime="20210322 02:40:20.377"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:20.150" endtime="20210322 02:40:20.377"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 02:40:20.378" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:40:20.377" endtime="20210322 02:40:20.378"></status>
</kw>
<kw name="criar partner address" library="accreditation_post_partner_address">
<arguments>
<arg>Rio de Janeiro</arg>
<arg>Rio de Janeiro</arg>
<arg>Brasil</arg>
<arg>Bairro de Testes</arg>
<arg>Rua de Testes</arg>
<arg>61</arg>
<arg>apto 201</arg>
<arg>21550478</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:40:20.380" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 02:40:20.379" endtime="20210322 02:40:20.380"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"city": "${city}",</arg>
<arg>"state": "${state}",</arg>
<arg>"country": "${country}",</arg>
<arg>"neighborhood": "${neighborhood}",</arg>
<arg>"street": "${street}",</arg>
<arg>"number": "${number}",</arg>
<arg>"complement": "${complement}",</arg>
<arg>"postal_code": "${postal_code}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 02:40:20.381" level="INFO">${body} = { "city": "Rio de Janeiro", "state": "Rio de Janeiro", "country": "Brasil", "neighborhood": "Bairro de Testes", "street": "Rua de Testes", "number": "61", "complement": "apto 201", "postal_code": "215...</msg>
<status status="PASS" starttime="20210322 02:40:20.380" endtime="20210322 02:40:20.381"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/partners/${partner_external_key}/addresses</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:40:20.382" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/aafd5de01a894e8da9650b156e096c00/partners/e4b147ce996e4a4b918c3bb9de033e29/addresses, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "city": "Rio de Janeiro", "state": "Rio de Janeiro", "country": "Brasil", "neighborhood": "Bairro de Testes", "street": "Rua de Testes", "number": "61", "complement": "apto 201", "postal_code": "21550478" } 
json=None</msg>
<msg timestamp="20210322 02:40:20.611" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:40:20.382" endtime="20210322 02:40:20.612"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:40:20.613" level="INFO">{'id': '0b5bc3502371419393dc0faaa94f3048', 'street': 'Rua de Testes', 'number': '61', 'city': 'Rio de Janeiro', 'complement': 'apto 201', 'state': 'Rio de Janeiro', 'neighborhood': 'Bairro de Testes', 'postal_code': '21550478', 'country': 'Brasil', 'main': True, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/aafd5de01a894e8da9650b156e096c00/partners/e4b147ce996e4a4b918c3bb9de033e29/addresses/0b5bc3502371419393dc0faaa94f3048', 'type': 'GET'}, 'partner': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/aafd5de01a894e8da9650b156e096c00/partners/e4b147ce996e4a4b918c3bb9de033e29', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/aafd5de01a894e8da9650b156e096c00', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 02:40:20.612" endtime="20210322 02:40:20.613"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:40:20.615" level="INFO">a77a4c3628411577</msg>
<status status="PASS" starttime="20210322 02:40:20.614" endtime="20210322 02:40:20.615"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:40:20.616" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:40:20.616" endtime="20210322 02:40:20.617"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${address_external_key}</var>
</assign>
<msg timestamp="20210322 02:40:20.618" level="INFO">${address_external_key} = 0b5bc3502371419393dc0faaa94f3048</msg>
<status status="PASS" starttime="20210322 02:40:20.617" endtime="20210322 02:40:20.618"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${address_external_key}</arg>
</arguments>
<msg timestamp="20210322 02:40:20.619" level="INFO">${address_external_key} = 0b5bc3502371419393dc0faaa94f3048</msg>
<status status="PASS" starttime="20210322 02:40:20.619" endtime="20210322 02:40:20.619"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:20.378" endtime="20210322 02:40:20.620"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 02:40:20.621" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:40:20.620" endtime="20210322 02:40:20.621"></status>
</kw>
<kw name="criar partner document" library="accreditation_post_partner_document">
<arguments>
<arg>SELFIE</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:40:20.622" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 02:40:20.622" endtime="20210322 02:40:20.622"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 02:40:20.623" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 02:40:20.625" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 02:40:20.623" endtime="20210322 02:40:20.625"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/partners/${partner_externaL_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:40:20.626" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/aafd5de01a894e8da9650b156e096c00/partners/e4b147ce996e4a4b918c3bb9de033e29/documents?type=SELFIE, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 02:40:20.886" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:40:20.625" endtime="20210322 02:40:20.886"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:40:20.888" level="INFO">{'id': '6d2ff826608e4c9d87fa5b9ddbbfd59c', 'document_type': 'selfie', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/aafd5de01a894e8da9650b156e096c00/partners/e4b147ce996e4a4b918c3bb9de033e29/documents/6d2ff826608e4c9d87fa5b9ddbbfd59c', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/aafd5de01a894e8da9650b156e096c00', 'type': 'GET'}, 'partner': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/aafd5de01a894e8da9650b156e096c00/partners/e4b147ce996e4a4b918c3bb9de033e29', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/aafd5de01a894e8da9650b156e096c00/partners/e4b147ce996e4a4b918c3bb9de033e29/documents/6d2ff826608e4c9d87fa5b9ddbbfd59c/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 02:40:20.886" endtime="20210322 02:40:20.888"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:40:20.892" level="INFO">396414c0864d8ae1</msg>
<status status="PASS" starttime="20210322 02:40:20.890" endtime="20210322 02:40:20.892"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:40:20.894" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:40:20.892" endtime="20210322 02:40:20.894"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 02:40:20.896" level="INFO">${document_external_key} = 6d2ff826608e4c9d87fa5b9ddbbfd59c</msg>
<status status="PASS" starttime="20210322 02:40:20.894" endtime="20210322 02:40:20.896"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 02:40:20.899" level="INFO">${document_external_key} = 6d2ff826608e4c9d87fa5b9ddbbfd59c</msg>
<status status="PASS" starttime="20210322 02:40:20.897" endtime="20210322 02:40:20.899"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:20.621" endtime="20210322 02:40:20.901"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 02:40:20.902" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:40:20.901" endtime="20210322 02:40:20.902"></status>
</kw>
<kw name="criar partner document" library="accreditation_post_partner_document">
<arguments>
<arg>RG_FRENTE</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:40:20.906" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 02:40:20.905" endtime="20210322 02:40:20.906"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 02:40:20.907" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 02:40:20.910" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 02:40:20.906" endtime="20210322 02:40:20.910"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/partners/${partner_externaL_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:40:20.911" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/aafd5de01a894e8da9650b156e096c00/partners/e4b147ce996e4a4b918c3bb9de033e29/documents?type=RG_FRENTE, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 02:40:21.175" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:40:20.910" endtime="20210322 02:40:21.175"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:40:21.176" level="INFO">{'id': '9f03a0b4b5dd48bfb22f5b8b9003e10a', 'document_type': 'rg_frente', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/aafd5de01a894e8da9650b156e096c00/partners/e4b147ce996e4a4b918c3bb9de033e29/documents/9f03a0b4b5dd48bfb22f5b8b9003e10a', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/aafd5de01a894e8da9650b156e096c00', 'type': 'GET'}, 'partner': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/aafd5de01a894e8da9650b156e096c00/partners/e4b147ce996e4a4b918c3bb9de033e29', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/aafd5de01a894e8da9650b156e096c00/partners/e4b147ce996e4a4b918c3bb9de033e29/documents/9f03a0b4b5dd48bfb22f5b8b9003e10a/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 02:40:21.175" endtime="20210322 02:40:21.176"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:40:21.177" level="INFO">d969cb847a862390</msg>
<status status="PASS" starttime="20210322 02:40:21.177" endtime="20210322 02:40:21.178"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:40:21.178" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:40:21.178" endtime="20210322 02:40:21.179"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 02:40:21.180" level="INFO">${document_external_key} = 9f03a0b4b5dd48bfb22f5b8b9003e10a</msg>
<status status="PASS" starttime="20210322 02:40:21.179" endtime="20210322 02:40:21.180"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 02:40:21.181" level="INFO">${document_external_key} = 9f03a0b4b5dd48bfb22f5b8b9003e10a</msg>
<status status="PASS" starttime="20210322 02:40:21.180" endtime="20210322 02:40:21.181"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:20.903" endtime="20210322 02:40:21.181"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 02:40:21.182" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:40:21.182" endtime="20210322 02:40:21.182"></status>
</kw>
<kw name="criar partner document" library="accreditation_post_partner_document">
<arguments>
<arg>RG_VERSO</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:40:21.183" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 02:40:21.183" endtime="20210322 02:40:21.183"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 02:40:21.184" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 02:40:21.186" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 02:40:21.184" endtime="20210322 02:40:21.186"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/partners/${partner_externaL_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:40:21.187" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/aafd5de01a894e8da9650b156e096c00/partners/e4b147ce996e4a4b918c3bb9de033e29/documents?type=RG_VERSO, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 02:40:21.441" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:40:21.186" endtime="20210322 02:40:21.441"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:40:21.442" level="INFO">{'id': '15fd3f7acef74ad195fb77219c006a16', 'document_type': 'rg_verso', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/aafd5de01a894e8da9650b156e096c00/partners/e4b147ce996e4a4b918c3bb9de033e29/documents/15fd3f7acef74ad195fb77219c006a16', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/aafd5de01a894e8da9650b156e096c00', 'type': 'GET'}, 'partner': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/aafd5de01a894e8da9650b156e096c00/partners/e4b147ce996e4a4b918c3bb9de033e29', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/aafd5de01a894e8da9650b156e096c00/partners/e4b147ce996e4a4b918c3bb9de033e29/documents/15fd3f7acef74ad195fb77219c006a16/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 02:40:21.441" endtime="20210322 02:40:21.442"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:40:21.442" level="INFO">e0997baed33e3d25</msg>
<status status="PASS" starttime="20210322 02:40:21.442" endtime="20210322 02:40:21.442"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:40:21.443" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:40:21.442" endtime="20210322 02:40:21.443"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 02:40:21.443" level="INFO">${document_external_key} = 15fd3f7acef74ad195fb77219c006a16</msg>
<status status="PASS" starttime="20210322 02:40:21.443" endtime="20210322 02:40:21.443"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 02:40:21.444" level="INFO">${document_external_key} = 15fd3f7acef74ad195fb77219c006a16</msg>
<status status="PASS" starttime="20210322 02:40:21.444" endtime="20210322 02:40:21.444"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:21.182" endtime="20210322 02:40:21.444"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 02:40:21.444" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:40:21.444" endtime="20210322 02:40:21.445"></status>
</kw>
<kw name="solicitar aprovação do holder" library="accreditation_request_approval">
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:40:21.445" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 02:40:21.445" endtime="20210322 02:40:21.446"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/approval</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:40:21.446" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/aafd5de01a894e8da9650b156e096c00/approval, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data=None 
json=None</msg>
<msg timestamp="20210322 02:40:21.728" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:40:21.446" endtime="20210322 02:40:21.728"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:40:21.730" level="INFO">{'message': 'Approval request accepted successfully. Processing analysis'}</msg>
<status status="PASS" starttime="20210322 02:40:21.729" endtime="20210322 02:40:21.731"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:40:21.732" level="INFO">b016a404666ef901</msg>
<status status="PASS" starttime="20210322 02:40:21.731" endtime="20210322 02:40:21.733"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:40:21.735" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:40:21.733" endtime="20210322 02:40:21.735"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:21.445" endtime="20210322 02:40:21.735"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 02:40:21.737" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:40:21.736" endtime="20210322 02:40:21.737"></status>
</kw>
<kw name="recebendo notificação de aprovação" library="accreditation_risk_notification">
<kw name="Uuid 4" library="FakerLibrary">
<doc>Generates a random UUID4 string.
:param cast_to: Specify what type the UUID should be cast to. Default is `str`
:type cast_to: callable</doc>
<assign>
<var>${assessment_id}</var>
</assign>
<msg timestamp="20210322 02:40:21.739" level="INFO">${assessment_id} = 4a7493b8-7460-43f5-beb0-d9f1a943a36e</msg>
<status status="PASS" starttime="20210322 02:40:21.739" endtime="20210322 02:40:21.739"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>year</arg>
</arguments>
<assign>
<var>${year}</var>
</assign>
<msg timestamp="20210322 02:40:21.740" level="INFO">${year} = 2021</msg>
<status status="PASS" starttime="20210322 02:40:21.740" endtime="20210322 02:40:21.740"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>month</arg>
</arguments>
<assign>
<var>${month}</var>
</assign>
<msg timestamp="20210322 02:40:21.741" level="INFO">${month} = 03</msg>
<status status="PASS" starttime="20210322 02:40:21.741" endtime="20210322 02:40:21.742"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>day</arg>
</arguments>
<assign>
<var>${day}</var>
</assign>
<msg timestamp="20210322 02:40:21.743" level="INFO">${day} = 22</msg>
<status status="PASS" starttime="20210322 02:40:21.742" endtime="20210322 02:40:21.743"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:40:21.744" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 02:40:21.743" endtime="20210322 02:40:21.744"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "risk.assessment.result",</arg>
<arg>"resource": "business.holder",</arg>
<arg>"created_at": "${year}-${month}-${day} 15:28:56.747Z",</arg>
<arg>"marketplace_id": "${marketplace_external_key}",</arg>
<arg>"object": {</arg>
<arg>"result": "APPROVED",</arg>
<arg>"holder_id": "${holder_external_key}",</arg>
<arg>"applicant_id": "${application_external_key}",</arg>
<arg>"assessment_id": "${assessment_id}"</arg>
<arg>}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 02:40:21.745" level="INFO">${body} = { "type": "risk.assessment.result", "resource": "business.holder", "created_at": "2021-03-22 15:28:56.747Z", "marketplace_id": "f71a8951368a4cc085cf7875ff44e61c", "object": { "result": "APPROVED", "ho...</msg>
<status status="PASS" starttime="20210322 02:40:21.744" endtime="20210322 02:40:21.745"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/admin/internal_operation/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/registration/approval</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:40:21.746" level="INFO">POST Request using : uri=/admin/internal_operation/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/aafd5de01a894e8da9650b156e096c00/registration/approval, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "risk.assessment.result", "resource": "business.holder", "created_at": "2021-03-22 15:28:56.747Z", "marketplace_id": "f71a8951368a4cc085cf7875ff44e61c", "object": { "result": "APPROVED", "holder_id": "aafd5de01a894e8da9650b156e096c00", "applicant_id": "bcc25a6751c14b52af1340d40dba78c5", "assessment_id": "4a7493b8-7460-43f5-beb0-d9f1a943a36e" } } 
json=None</msg>
<msg timestamp="20210322 02:40:21.947" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:40:21.745" endtime="20210322 02:40:21.947"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:40:21.948" level="INFO">{'message': 'Holder approved successfully'}</msg>
<status status="PASS" starttime="20210322 02:40:21.948" endtime="20210322 02:40:21.948"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:40:21.950" level="INFO">582378b1954e80f0</msg>
<status status="PASS" starttime="20210322 02:40:21.949" endtime="20210322 02:40:21.950"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:40:21.951" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:40:21.951" endtime="20210322 02:40:21.952"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 02:40:21.953" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:40:21.952" endtime="20210322 02:40:21.953"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:21.738" endtime="20210322 02:40:21.954"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 02:40:21.955" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:40:21.954" endtime="20210322 02:40:21.955"></status>
</kw>
<kw name="buscar account por holder" library="accounts_get_accounts_by_holder">
<kw name="conectar accounts" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accounts</arg>
<arg>url=${account_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 02:40:21.957" level="INFO">Creating Session using : alias=accounts, url=https://banking-accounts-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 02:40:21.956" endtime="20210322 02:40:21.958"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:21.956" endtime="20210322 02:40:21.958"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accounts</arg>
<arg>/marketplaces/${marketplace_external_key}/holders/${holder_external_key}/accounts</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:40:21.959" level="INFO">GET Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/holders/aafd5de01a894e8da9650b156e096c00/accounts, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 02:40:22.601" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:40:21.958" endtime="20210322 02:40:22.601"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:40:22.604" level="INFO">{'items': [{'id': '5d17bb5c36e44d99b1c04e1c158affb5', 'holder': 'aafd5de01a894e8da9650b156e096c00', 'balance': '0.00', 'currency': 'BRL', 'routing_number': '001', 'number': '3360252302', 'status': 'active', 'metadata': {}, 'created_at': '2021-03-22T05:40:22.778821', 'updated_at': '2021-03-22T05:40:22.778821', 'primary': True, 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'uri': '/v2/marketplaces/f71a8951368a4cc085cf7875ff44e61c/accounts/5d17bb5c36e44d99b1c04e1c158affb5', 'resource': 'payment_account'}], 'has_more': False, 'limit': 100, 'total_pages': 1, 'page': 1, 'offset': 0, 'total': '1', 'query_count': '1'}</msg>
<status status="PASS" starttime="20210322 02:40:22.602" endtime="20210322 02:40:22.604"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:40:22.607" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:40:22.605" endtime="20210322 02:40:22.607"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["id"]}</arg>
</arguments>
<assign>
<var>${account_external_key}</var>
</assign>
<msg timestamp="20210322 02:40:22.608" level="INFO">${account_external_key} = 5d17bb5c36e44d99b1c04e1c158affb5</msg>
<status status="PASS" starttime="20210322 02:40:22.607" endtime="20210322 02:40:22.609"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_external_key}</arg>
</arguments>
<msg timestamp="20210322 02:40:22.610" level="INFO">${account_external_key} = 5d17bb5c36e44d99b1c04e1c158affb5</msg>
<status status="PASS" starttime="20210322 02:40:22.609" endtime="20210322 02:40:22.610"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["number"]}</arg>
</arguments>
<assign>
<var>${account_number}</var>
</assign>
<msg timestamp="20210322 02:40:22.612" level="INFO">${account_number} = 3360252302</msg>
<status status="PASS" starttime="20210322 02:40:22.611" endtime="20210322 02:40:22.612"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_number}</arg>
</arguments>
<msg timestamp="20210322 02:40:22.614" level="INFO">${account_number} = 3360252302</msg>
<status status="PASS" starttime="20210322 02:40:22.614" endtime="20210322 02:40:22.615"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["routing_number"]}</arg>
</arguments>
<assign>
<var>${account_routing_number}</var>
</assign>
<msg timestamp="20210322 02:40:22.617" level="INFO">${account_routing_number} = 001</msg>
<status status="PASS" starttime="20210322 02:40:22.616" endtime="20210322 02:40:22.617"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_routing_number}</arg>
</arguments>
<msg timestamp="20210322 02:40:22.619" level="INFO">${account_routing_number} = 001</msg>
<status status="PASS" starttime="20210322 02:40:22.619" endtime="20210322 02:40:22.620"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:21.955" endtime="20210322 02:40:22.620"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 02:40:22.620" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:40:22.620" endtime="20210322 02:40:22.621"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:18.450" endtime="20210322 02:40:22.621"></status>
</kw>
<kw name="criar chave pix" library="pix_dict_create_entry">
<arguments>
<arg>type=national_registration</arg>
<arg>value=${EMPTY}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 02:40:22.624" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 02:40:22.623" endtime="20210322 02:40:22.625"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:22.623" endtime="20210322 02:40:22.625"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${type}</arg>
</arguments>
<msg timestamp="20210322 02:40:22.626" level="INFO">${type} = national_registration</msg>
<status status="PASS" starttime="20210322 02:40:22.625" endtime="20210322 02:40:22.627"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210322 02:40:22.627" level="INFO">${value} = </msg>
<status status="PASS" starttime="20210322 02:40:22.627" endtime="20210322 02:40:22.627"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:40:22.628" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 02:40:22.628" endtime="20210322 02:40:22.628"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "${type}",</arg>
<arg>"value": "${value}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 02:40:22.628" level="INFO">${body} = { "type": "national_registration", "value": "" }</msg>
<status status="PASS" starttime="20210322 02:40:22.628" endtime="20210322 02:40:22.628"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:40:22.631" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/aafd5de01a894e8da9650b156e096c00/accounts/5d17bb5c36e44d99b1c04e1c158affb5/entries, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "national_registration", "value": "" } 
json=None</msg>
<msg timestamp="20210322 02:40:24.193" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:40:22.629" endtime="20210322 02:40:24.193"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:40:24.193" level="INFO">{'id': '1ebc9f95f0354a81b262447a8bdffe91', 'status': 'active', 'created_at': '2021-03-22T02:40:24.121', 'updated_at': '2021-03-22T02:40:24.121', 'key': {'value': '70835264000140', 'type': 'national_registration'}, 'account': {'id': '5d17bb5c36e44d99b1c04e1c158affb5', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': 'aafd5de01a894e8da9650b156e096c00', 'owner': {'name': 'Nome Legal da Empresa', 'national_registration': '70835264000140', 'type': 'business'}, 'routing_number': '001', 'number': '3360252302', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}, 'resource': 'pix.entry'}</msg>
<status status="PASS" starttime="20210322 02:40:24.193" endtime="20210322 02:40:24.193"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:40:24.194" level="INFO">125654b86475d40a</msg>
<status status="PASS" starttime="20210322 02:40:24.194" endtime="20210322 02:40:24.194"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 02:40:24.194" level="INFO">201</msg>
<status status="PASS" starttime="20210322 02:40:24.194" endtime="20210322 02:40:24.194"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:40:24.195" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:40:24.194" endtime="20210322 02:40:24.195"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${entry_external_key}</var>
</assign>
<msg timestamp="20210322 02:40:24.195" level="INFO">${entry_external_key} = 1ebc9f95f0354a81b262447a8bdffe91</msg>
<status status="PASS" starttime="20210322 02:40:24.195" endtime="20210322 02:40:24.195"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${entry_external_key}</arg>
</arguments>
<msg timestamp="20210322 02:40:24.196" level="INFO">${entry_external_key} = 1ebc9f95f0354a81b262447a8bdffe91</msg>
<status status="PASS" starttime="20210322 02:40:24.195" endtime="20210322 02:40:24.196"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["key"]["value"]}</arg>
</arguments>
<assign>
<var>${entry_key_value}</var>
</assign>
<msg timestamp="20210322 02:40:24.196" level="INFO">${entry_key_value} = 70835264000140</msg>
<status status="PASS" starttime="20210322 02:40:24.196" endtime="20210322 02:40:24.196"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${entry_key_value}</arg>
</arguments>
<msg timestamp="20210322 02:40:24.197" level="INFO">${entry_key_value} = 70835264000140</msg>
<status status="PASS" starttime="20210322 02:40:24.196" endtime="20210322 02:40:24.197"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:22.622" endtime="20210322 02:40:24.197"></status>
</kw>
<kw name="validar criação da chave pix" library="asserts">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando status_code</arg>
</arguments>
<msg timestamp="20210322 02:40:24.197" level="INFO">Validando status_code</msg>
<status status="PASS" starttime="20210322 02:40:24.197" endtime="20210322 02:40:24.197"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${type}' == 'evp'</arg>
<arg>Should Be Equal As Integers</arg>
<arg>${response.status_code}</arg>
<arg>201</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'phone'</arg>
<arg>Should Be Equal As Integers</arg>
<arg>${response.status_code}</arg>
<arg>202</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'email'</arg>
<arg>Should Be Equal As Integers</arg>
<arg>${response.status_code}</arg>
<arg>202</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'national_registration'</arg>
<arg>Should Be Equal As Integers</arg>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 02:40:24.198" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:40:24.198" endtime="20210322 02:40:24.198"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:24.197" endtime="20210322 02:40:24.198"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar status da chave</arg>
</arguments>
<msg timestamp="20210322 02:40:24.199" level="INFO">Validar status da chave</msg>
<status status="PASS" starttime="20210322 02:40:24.199" endtime="20210322 02:40:24.199"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${type}' == 'evp'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["status"]}</arg>
<arg>active</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'phone'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["status"]}</arg>
<arg>waiting_ownership_verification</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'email'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["status"]}</arg>
<arg>waiting_ownership_verification</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'national_registration'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["status"]}</arg>
<arg>active</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["status"]}</arg>
<arg>active</arg>
</arguments>
<status status="PASS" starttime="20210322 02:40:24.199" endtime="20210322 02:40:24.200"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:24.199" endtime="20210322 02:40:24.200"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando Tipo da chave PIX</arg>
</arguments>
<msg timestamp="20210322 02:40:24.200" level="INFO">Validando Tipo da chave PIX</msg>
<status status="PASS" starttime="20210322 02:40:24.200" endtime="20210322 02:40:24.200"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${type}' == 'evp'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["type"]}</arg>
<arg>${type}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'phone'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["type"]}</arg>
<arg>${type}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'email'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["type"]}</arg>
<arg>${type}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'national_registration'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["type"]}</arg>
<arg>${type}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["key"]["type"]}</arg>
<arg>${type}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:40:24.201" endtime="20210322 02:40:24.201"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:24.200" endtime="20210322 02:40:24.201"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando Valor da chave PIX</arg>
</arguments>
<msg timestamp="20210322 02:40:24.201" level="INFO">Validando Valor da chave PIX</msg>
<status status="PASS" starttime="20210322 02:40:24.201" endtime="20210322 02:40:24.202"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${type}' == 'evp'</arg>
<arg>Should Not Be Empty</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'phone'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${phone_pix}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'email'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${email_pix}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'national_registration'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${national_registration}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${national_registration}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:40:24.202" endtime="20210322 02:40:24.203"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:24.202" endtime="20210322 02:40:24.203"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando dados da conta</arg>
</arguments>
<msg timestamp="20210322 02:40:24.203" level="INFO">Validando dados da conta</msg>
<status status="PASS" starttime="20210322 02:40:24.203" endtime="20210322 02:40:24.203"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["id"]}</arg>
<arg>${account_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:40:24.204" endtime="20210322 02:40:24.204"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["marketplace"]}</arg>
<arg>${marketplace_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:40:24.204" endtime="20210322 02:40:24.204"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["holder"]}</arg>
<arg>${holder_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:40:24.204" endtime="20210322 02:40:24.205"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["number"]}</arg>
<arg>${account_number}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:40:24.205" endtime="20210322 02:40:24.205"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["routing_number"]}</arg>
<arg>${account_routing_number}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:40:24.205" endtime="20210322 02:40:24.206"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["type"]}</arg>
<arg>CACC</arg>
</arguments>
<status status="PASS" starttime="20210322 02:40:24.206" endtime="20210322 02:40:24.206"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar Proprietário da Account Owner</arg>
</arguments>
<msg timestamp="20210322 02:40:24.207" level="INFO">Validar Proprietário da Account Owner</msg>
<status status="PASS" starttime="20210322 02:40:24.206" endtime="20210322 02:40:24.207"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${holder_type}' == 'individual'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["account"]["owner"]["name"]}</arg>
<arg>${holder_name}</arg>
<arg>ELSE IF</arg>
<arg>'${holder_type}' == 'business'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["account"]["owner"]["name"]}</arg>
<arg>${legal_name}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["account"]["owner"]["name"]}</arg>
<arg>${legal_name}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:40:24.207" endtime="20210322 02:40:24.208"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:24.207" endtime="20210322 02:40:24.208"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar national_registration da Account Owner</arg>
</arguments>
<msg timestamp="20210322 02:40:24.208" level="INFO">Validar national_registration da Account Owner</msg>
<status status="PASS" starttime="20210322 02:40:24.208" endtime="20210322 02:40:24.208"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${holder_type}' == 'individual'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["account"]["owner"]["national_registration"]}</arg>
<arg>${national_registration}</arg>
<arg>ELSE IF</arg>
<arg>'${holder_type}' == 'business'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["account"]["owner"]["national_registration"]}</arg>
<arg>${national_registration}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["account"]["owner"]["national_registration"]}</arg>
<arg>${national_registration}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:40:24.208" endtime="20210322 02:40:24.209"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:24.208" endtime="20210322 02:40:24.209"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar Holder Type do Account Owner</arg>
</arguments>
<msg timestamp="20210322 02:40:24.209" level="INFO">Validar Holder Type do Account Owner</msg>
<status status="PASS" starttime="20210322 02:40:24.209" endtime="20210322 02:40:24.209"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${holder_type}' == 'individual'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["account"]["owner"]["type"]}</arg>
<arg>${holder_type}</arg>
<arg>ELSE IF</arg>
<arg>'${holder_type}' == 'business'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["account"]["owner"]["type"]}</arg>
<arg>${holder_type}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["account"]["owner"]["type"]}</arg>
<arg>${holder_type}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:40:24.210" endtime="20210322 02:40:24.210"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:24.209" endtime="20210322 02:40:24.210"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar PSP</arg>
</arguments>
<msg timestamp="20210322 02:40:24.210" level="INFO">Validar PSP</msg>
<status status="PASS" starttime="20210322 02:40:24.210" endtime="20210322 02:40:24.210"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["psp"]["code"]}</arg>
<arg>19468242</arg>
</arguments>
<status status="PASS" starttime="20210322 02:40:24.211" endtime="20210322 02:40:24.211"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["psp"]["name"]}</arg>
<arg>Zoop Tecnologia e Meios de Pagamento S.A.</arg>
</arguments>
<status status="PASS" starttime="20210322 02:40:24.211" endtime="20210322 02:40:24.211"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:24.197" endtime="20210322 02:40:24.211"></status>
</kw>
<doc>Fluxo Básico</doc>
<tags>
<tag>regression_test</tag>
<tag>smoke_test</tag>
</tags>
<status status="PASS" starttime="20210322 02:40:18.450" endtime="20210322 02:40:24.211" critical="yes"></status>
</test>
<doc>Funcionalidade: Criar Chave de Endereçamento
Eu, como um Holder, portador de uma conta ativa em Banking
Desejo criar uma chave de endereçamento PIX associada à minha conta</doc>
<status status="PASS" starttime="20210322 02:40:00.875" endtime="20210322 02:40:24.212"></status>
</suite>
<suite id="s1-s1-s4" name="Excluir Chave de Endereçamento" source="C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\tests\pix-dict\diretorio\Excluir Chave de Endereçamento.robot">
<test id="s1-s1-s4-t1" name="Cenário: Excluir chave de endereçamento EVP">
<kw name="criar holder individual ativo" library="accreditation_create_holder_active">
<kw name="conectar accreditation" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accreditation</arg>
<arg>url=${accreditation_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 02:40:24.255" level="INFO">Creating Session using : alias=accreditation, url=https://banking-accreditation-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 02:40:24.255" endtime="20210322 02:40:24.255"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:24.254" endtime="20210322 02:40:24.256"></status>
</kw>
<kw name="Cpf" library="FakerLibrary">
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 02:40:24.256" level="INFO">${national_registration} = 539.761.402-52</msg>
<status status="PASS" starttime="20210322 02:40:24.256" endtime="20210322 02:40:24.256"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${national_registration}</arg>
<arg>.</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 02:40:24.256" level="INFO">${national_registration} = 539761402-52</msg>
<status status="PASS" starttime="20210322 02:40:24.256" endtime="20210322 02:40:24.256"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${national_registration}</arg>
<arg>-</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 02:40:24.257" level="INFO">${national_registration} = 53976140252</msg>
<status status="PASS" starttime="20210322 02:40:24.257" endtime="20210322 02:40:24.257"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${national_registration}</arg>
</arguments>
<msg timestamp="20210322 02:40:24.257" level="INFO">${national_registration} = 53976140252</msg>
<status status="PASS" starttime="20210322 02:40:24.257" endtime="20210322 02:40:24.257"></status>
</kw>
<kw name="Rg" library="FakerLibrary">
<doc>Brazilian RG, return plain numbers.
Check:  https://www.ngmatematica.com/2014/02/como-determinar-o-digito-verificador-do.html</doc>
<assign>
<var>${identity_card}</var>
</assign>
<msg timestamp="20210322 02:40:24.258" level="INFO">${identity_card} = 521843674</msg>
<status status="PASS" starttime="20210322 02:40:24.257" endtime="20210322 02:40:24.258"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${identity_card}</arg>
</arguments>
<msg timestamp="20210322 02:40:24.258" level="INFO">${identity_card} = 521843674</msg>
<status status="PASS" starttime="20210322 02:40:24.258" endtime="20210322 02:40:24.258"></status>
</kw>
<kw name="criar holder individual" library="accreditation_post_holder_individual">
<arguments>
<arg>holder_type=individual</arg>
<arg>holder_name=${holder_name}</arg>
<arg>email=${email}</arg>
<arg>national_registration=${national_registration}</arg>
<arg>revenue=${revenue}</arg>
<arg>birthday=${birthday}</arg>
<arg>mothers_name=${mothers_name}</arg>
<arg>identity_card=${identity_card}</arg>
<arg>pep=false</arg>
<arg>cbo=${cbo}</arg>
</arguments>
<kw name="conectar accreditation" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accreditation</arg>
<arg>url=${accreditation_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 02:40:24.261" level="INFO">Creating Session using : alias=accreditation, url=https://banking-accreditation-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 02:40:24.260" endtime="20210322 02:40:24.261"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:24.260" endtime="20210322 02:40:24.261"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_type}</arg>
</arguments>
<msg timestamp="20210322 02:40:24.261" level="INFO">${holder_type} = individual</msg>
<status status="PASS" starttime="20210322 02:40:24.261" endtime="20210322 02:40:24.261"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_name}</arg>
</arguments>
<msg timestamp="20210322 02:40:24.262" level="INFO">${holder_name} = Holder de teste</msg>
<status status="PASS" starttime="20210322 02:40:24.262" endtime="20210322 02:40:24.262"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:40:24.262" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 02:40:24.262" endtime="20210322 02:40:24.262"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "${holder_type}",</arg>
<arg>"name": "${holder_name}",</arg>
<arg>"email": "${email}",</arg>
<arg>"national_registration": "${national_registration}",</arg>
<arg>"revenue": ${revenue},</arg>
<arg>"birthday": "${birthday}",</arg>
<arg>"mothers_name": "${mothers_name}",</arg>
<arg>"identity_card": "${identity_card}",</arg>
<arg>"pep": false,</arg>
<arg>"cbo": ${cbo}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 02:40:24.263" level="INFO">${body} = { "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "53976140252", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder",...</msg>
<status status="PASS" starttime="20210322 02:40:24.262" endtime="20210322 02:40:24.263"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:40:24.264" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "53976140252", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder", "identity_card": "521843674", "pep": false, "cbo": 821450 } 
json=None</msg>
<msg timestamp="20210322 02:40:24.892" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:40:24.263" endtime="20210322 02:40:24.892"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:40:24.893" level="INFO">{'id': '050a212e0da649a7911fb423fed81556', 'name': 'Holder de teste', 'revenue': 5500.0, 'email': 'teste@teste.com.br', 'status': 'waiting_info_and_documents', 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'marketplace_name': 'Marketplace de Teste', 'created_at': '2021-03-22T02:40:25.727966', 'updated_at': '2021-03-22T02:40:25.727968', 'type': 'individual', 'national_registration': '53976140252', 'birthday': '1988-04-23', 'mothers_name': 'Mãe do Holder', 'identity_card': '521843674', 'pep': False, 'cbo': '821450', '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/050a212e0da649a7911fb423fed81556', 'type': 'GET'}, 'phones': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/050a212e0da649a7911fb423fed81556/phones', 'type': 'GET'}, 'addresses': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/050a212e0da649a7911fb423fed81556/addresses', 'type': 'GET'}, 'documents': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/050a212e0da649a7911fb423fed81556/documents', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 02:40:24.893" endtime="20210322 02:40:24.893"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:40:24.893" level="INFO">d8243f737b98dad4</msg>
<status status="PASS" starttime="20210322 02:40:24.893" endtime="20210322 02:40:24.893"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${body}</arg>
</arguments>
<msg timestamp="20210322 02:40:24.894" level="INFO">{ "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "53976140252", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder", "identity_card": "521843674", "pep": false, "cbo": 821450 }</msg>
<status status="PASS" starttime="20210322 02:40:24.894" endtime="20210322 02:40:24.894"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:40:24.894" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:40:24.894" endtime="20210322 02:40:24.894"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${holder_external_key}</var>
</assign>
<msg timestamp="20210322 02:40:24.895" level="INFO">${holder_external_key} = 050a212e0da649a7911fb423fed81556</msg>
<status status="PASS" starttime="20210322 02:40:24.895" endtime="20210322 02:40:24.895"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_external_key}</arg>
</arguments>
<msg timestamp="20210322 02:40:24.895" level="INFO">${holder_external_key} = 050a212e0da649a7911fb423fed81556</msg>
<status status="PASS" starttime="20210322 02:40:24.895" endtime="20210322 02:40:24.895"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:24.258" endtime="20210322 02:40:24.895"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_name}</arg>
</arguments>
<msg timestamp="20210322 02:40:24.896" level="INFO">${holder_name} = Holder de teste</msg>
<status status="PASS" starttime="20210322 02:40:24.896" endtime="20210322 02:40:24.896"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 02:40:24.896" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:40:24.896" endtime="20210322 02:40:24.896"></status>
</kw>
<kw name="criar holder phone" library="accreditation_post_holder_phone">
<arguments>
<arg>21</arg>
<arg>51</arg>
<arg>996221236</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:40:24.897" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 02:40:24.897" endtime="20210322 02:40:24.897"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"area_code": "${phone_area_code}",</arg>
<arg>"country_code": "${phone_country_code}",</arg>
<arg>"number": "${phone_number}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 02:40:24.898" level="INFO">${body} = { "area_code": "21", "country_code": "51", "number": "996221236" }</msg>
<status status="PASS" starttime="20210322 02:40:24.897" endtime="20210322 02:40:24.898"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/phones</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:40:24.898" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/050a212e0da649a7911fb423fed81556/phones, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "area_code": "21", "country_code": "51", "number": "996221236" } 
json=None</msg>
<msg timestamp="20210322 02:40:25.111" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:40:24.898" endtime="20210322 02:40:25.111"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:40:25.113" level="INFO">{'id': 'd39a3b79820449179f019834787b575e', 'area_code': '21', 'country_code': '51', 'number': '996221236', 'main': True, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/050a212e0da649a7911fb423fed81556/phones/d39a3b79820449179f019834787b575e', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/050a212e0da649a7911fb423fed81556', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 02:40:25.111" endtime="20210322 02:40:25.113"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:40:25.114" level="INFO">72c88af181e23a30</msg>
<status status="PASS" starttime="20210322 02:40:25.113" endtime="20210322 02:40:25.114"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:40:25.116" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:40:25.115" endtime="20210322 02:40:25.116"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${phone_external_key}</var>
</assign>
<msg timestamp="20210322 02:40:25.118" level="INFO">${phone_external_key} = d39a3b79820449179f019834787b575e</msg>
<status status="PASS" starttime="20210322 02:40:25.116" endtime="20210322 02:40:25.118"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${phone_external_key}</arg>
</arguments>
<msg timestamp="20210322 02:40:25.120" level="INFO">${phone_external_key} = d39a3b79820449179f019834787b575e</msg>
<status status="PASS" starttime="20210322 02:40:25.119" endtime="20210322 02:40:25.120"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:24.896" endtime="20210322 02:40:25.120"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 02:40:25.122" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:40:25.121" endtime="20210322 02:40:25.122"></status>
</kw>
<kw name="criar holder address" library="accreditation_post_holder_address">
<arguments>
<arg>Rio de Janeiro</arg>
<arg>Rio de Janeiro</arg>
<arg>Brasil</arg>
<arg>Bairro de Testes</arg>
<arg>Rua de Testes</arg>
<arg>90</arg>
<arg>apto 200</arg>
<arg>21550987</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:40:25.124" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 02:40:25.123" endtime="20210322 02:40:25.124"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"city": "${city}",</arg>
<arg>"state": "${state}",</arg>
<arg>"country": "${country}",</arg>
<arg>"neighborhood": "${neighborhood}",</arg>
<arg>"street": "${street}",</arg>
<arg>"number": "${number}",</arg>
<arg>"complement": "${complement}",</arg>
<arg>"postal_code": "${postal_code}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 02:40:25.126" level="INFO">${body} = { "city": "Rio de Janeiro", "state": "Rio de Janeiro", "country": "Brasil", "neighborhood": "Bairro de Testes", "street": "Rua de Testes", "number": "90", "complement": "apto 200", "postal_code": "215...</msg>
<status status="PASS" starttime="20210322 02:40:25.124" endtime="20210322 02:40:25.126"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/addresses</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:40:25.127" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/050a212e0da649a7911fb423fed81556/addresses, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "city": "Rio de Janeiro", "state": "Rio de Janeiro", "country": "Brasil", "neighborhood": "Bairro de Testes", "street": "Rua de Testes", "number": "90", "complement": "apto 200", "postal_code": "21550987" } 
json=None</msg>
<msg timestamp="20210322 02:40:25.347" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:40:25.126" endtime="20210322 02:40:25.347"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:40:25.348" level="INFO">{'id': 'f6701726030a457496e17fad6996b583', 'street': 'Rua de Testes', 'number': '90', 'city': 'Rio de Janeiro', 'complement': 'apto 200', 'state': 'Rio de Janeiro', 'neighborhood': 'Bairro de Testes', 'postal_code': '21550987', 'country': 'Brasil', 'main': True, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/050a212e0da649a7911fb423fed81556/addresses/f6701726030a457496e17fad6996b583', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/050a212e0da649a7911fb423fed81556', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 02:40:25.348" endtime="20210322 02:40:25.349"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:40:25.349" level="INFO">60eba0f5ad41810c</msg>
<status status="PASS" starttime="20210322 02:40:25.349" endtime="20210322 02:40:25.349"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:40:25.350" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:40:25.350" endtime="20210322 02:40:25.350"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${address_external_key}</var>
</assign>
<msg timestamp="20210322 02:40:25.351" level="INFO">${address_external_key} = f6701726030a457496e17fad6996b583</msg>
<status status="PASS" starttime="20210322 02:40:25.350" endtime="20210322 02:40:25.351"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${address_external_key}</arg>
</arguments>
<msg timestamp="20210322 02:40:25.352" level="INFO">${address_external_key} = f6701726030a457496e17fad6996b583</msg>
<status status="PASS" starttime="20210322 02:40:25.352" endtime="20210322 02:40:25.352"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:25.122" endtime="20210322 02:40:25.353"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 02:40:25.353" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:40:25.353" endtime="20210322 02:40:25.353"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>SELFIE</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:40:25.354" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 02:40:25.354" endtime="20210322 02:40:25.354"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 02:40:25.355" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 02:40:25.356" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 02:40:25.355" endtime="20210322 02:40:25.356"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:40:25.357" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/050a212e0da649a7911fb423fed81556/documents?type=SELFIE, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 02:40:25.623" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:40:25.357" endtime="20210322 02:40:25.623"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:40:25.625" level="INFO">{'id': '57c4c35e2da2491ba5610f4ec3e4abd5', 'document_type': 'selfie', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/050a212e0da649a7911fb423fed81556/documents/57c4c35e2da2491ba5610f4ec3e4abd5', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/050a212e0da649a7911fb423fed81556', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/050a212e0da649a7911fb423fed81556/documents/57c4c35e2da2491ba5610f4ec3e4abd5/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 02:40:25.624" endtime="20210322 02:40:25.625"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:40:25.627" level="INFO">b382d9926bc89c28</msg>
<status status="PASS" starttime="20210322 02:40:25.626" endtime="20210322 02:40:25.627"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:40:25.628" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:40:25.627" endtime="20210322 02:40:25.628"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 02:40:25.630" level="INFO">${document_external_key} = 57c4c35e2da2491ba5610f4ec3e4abd5</msg>
<status status="PASS" starttime="20210322 02:40:25.629" endtime="20210322 02:40:25.630"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 02:40:25.631" level="INFO">${document_external_key} = 57c4c35e2da2491ba5610f4ec3e4abd5</msg>
<status status="PASS" starttime="20210322 02:40:25.631" endtime="20210322 02:40:25.631"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:25.354" endtime="20210322 02:40:25.631"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 02:40:25.632" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:40:25.632" endtime="20210322 02:40:25.633"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>RG_FRENTE</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:40:25.634" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 02:40:25.634" endtime="20210322 02:40:25.634"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 02:40:25.635" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 02:40:25.637" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 02:40:25.635" endtime="20210322 02:40:25.637"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:40:25.639" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/050a212e0da649a7911fb423fed81556/documents?type=RG_FRENTE, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 02:40:25.894" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:40:25.638" endtime="20210322 02:40:25.894"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:40:25.894" level="INFO">{'id': '2b1dadc5cb3046149594b533ca509a6a', 'document_type': 'rg_frente', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/050a212e0da649a7911fb423fed81556/documents/2b1dadc5cb3046149594b533ca509a6a', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/050a212e0da649a7911fb423fed81556', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/050a212e0da649a7911fb423fed81556/documents/2b1dadc5cb3046149594b533ca509a6a/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 02:40:25.894" endtime="20210322 02:40:25.895"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:40:25.895" level="INFO">daac0c7ce78b2167</msg>
<status status="PASS" starttime="20210322 02:40:25.895" endtime="20210322 02:40:25.895"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:40:25.895" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:40:25.895" endtime="20210322 02:40:25.895"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 02:40:25.896" level="INFO">${document_external_key} = 2b1dadc5cb3046149594b533ca509a6a</msg>
<status status="PASS" starttime="20210322 02:40:25.896" endtime="20210322 02:40:25.896"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 02:40:25.897" level="INFO">${document_external_key} = 2b1dadc5cb3046149594b533ca509a6a</msg>
<status status="PASS" starttime="20210322 02:40:25.896" endtime="20210322 02:40:25.897"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:25.633" endtime="20210322 02:40:25.897"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 02:40:25.897" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:40:25.897" endtime="20210322 02:40:25.897"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>RG_VERSO</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:40:25.898" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 02:40:25.898" endtime="20210322 02:40:25.898"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 02:40:25.898" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 02:40:25.899" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 02:40:25.898" endtime="20210322 02:40:25.899"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:40:25.900" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/050a212e0da649a7911fb423fed81556/documents?type=RG_VERSO, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 02:40:26.184" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:40:25.900" endtime="20210322 02:40:26.184"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:40:26.186" level="INFO">{'id': 'f571a84f573043e19615e99cccd45700', 'document_type': 'rg_verso', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/050a212e0da649a7911fb423fed81556/documents/f571a84f573043e19615e99cccd45700', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/050a212e0da649a7911fb423fed81556', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/050a212e0da649a7911fb423fed81556/documents/f571a84f573043e19615e99cccd45700/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 02:40:26.185" endtime="20210322 02:40:26.187"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:40:26.188" level="INFO">f6dcb56345edbd74</msg>
<status status="PASS" starttime="20210322 02:40:26.187" endtime="20210322 02:40:26.188"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:40:26.190" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:40:26.189" endtime="20210322 02:40:26.190"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 02:40:26.191" level="INFO">${document_external_key} = f571a84f573043e19615e99cccd45700</msg>
<status status="PASS" starttime="20210322 02:40:26.191" endtime="20210322 02:40:26.191"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 02:40:26.193" level="INFO">${document_external_key} = f571a84f573043e19615e99cccd45700</msg>
<status status="PASS" starttime="20210322 02:40:26.192" endtime="20210322 02:40:26.193"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:25.897" endtime="20210322 02:40:26.193"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 02:40:26.194" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:40:26.193" endtime="20210322 02:40:26.194"></status>
</kw>
<kw name="solicitar aprovação do holder" library="accreditation_request_approval">
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:40:26.195" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 02:40:26.195" endtime="20210322 02:40:26.196"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/approval</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:40:26.197" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/050a212e0da649a7911fb423fed81556/approval, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data=None 
json=None</msg>
<msg timestamp="20210322 02:40:26.502" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:40:26.196" endtime="20210322 02:40:26.502"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:40:26.503" level="INFO">{'message': 'Approval request accepted successfully. Processing analysis'}</msg>
<status status="PASS" starttime="20210322 02:40:26.503" endtime="20210322 02:40:26.503"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:40:26.503" level="INFO">940e38770d88bfea</msg>
<status status="PASS" starttime="20210322 02:40:26.503" endtime="20210322 02:40:26.503"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:40:26.504" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:40:26.504" endtime="20210322 02:40:26.504"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:26.194" endtime="20210322 02:40:26.504"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 02:40:26.504" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:40:26.504" endtime="20210322 02:40:26.504"></status>
</kw>
<kw name="recebendo notificação de aprovação" library="accreditation_risk_notification">
<kw name="Uuid 4" library="FakerLibrary">
<doc>Generates a random UUID4 string.
:param cast_to: Specify what type the UUID should be cast to. Default is `str`
:type cast_to: callable</doc>
<assign>
<var>${assessment_id}</var>
</assign>
<msg timestamp="20210322 02:40:26.505" level="INFO">${assessment_id} = 1a3aa224-faa3-4471-9489-9a8911fbc5de</msg>
<status status="PASS" starttime="20210322 02:40:26.505" endtime="20210322 02:40:26.505"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>year</arg>
</arguments>
<assign>
<var>${year}</var>
</assign>
<msg timestamp="20210322 02:40:26.505" level="INFO">${year} = 2021</msg>
<status status="PASS" starttime="20210322 02:40:26.505" endtime="20210322 02:40:26.505"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>month</arg>
</arguments>
<assign>
<var>${month}</var>
</assign>
<msg timestamp="20210322 02:40:26.506" level="INFO">${month} = 03</msg>
<status status="PASS" starttime="20210322 02:40:26.505" endtime="20210322 02:40:26.506"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>day</arg>
</arguments>
<assign>
<var>${day}</var>
</assign>
<msg timestamp="20210322 02:40:26.507" level="INFO">${day} = 22</msg>
<status status="PASS" starttime="20210322 02:40:26.506" endtime="20210322 02:40:26.507"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:40:26.508" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 02:40:26.507" endtime="20210322 02:40:26.508"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "risk.assessment.result",</arg>
<arg>"resource": "business.holder",</arg>
<arg>"created_at": "${year}-${month}-${day} 15:28:56.747Z",</arg>
<arg>"marketplace_id": "${marketplace_external_key}",</arg>
<arg>"object": {</arg>
<arg>"result": "APPROVED",</arg>
<arg>"holder_id": "${holder_external_key}",</arg>
<arg>"applicant_id": "${application_external_key}",</arg>
<arg>"assessment_id": "${assessment_id}"</arg>
<arg>}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 02:40:26.509" level="INFO">${body} = { "type": "risk.assessment.result", "resource": "business.holder", "created_at": "2021-03-22 15:28:56.747Z", "marketplace_id": "f71a8951368a4cc085cf7875ff44e61c", "object": { "result": "APPROVED", "ho...</msg>
<status status="PASS" starttime="20210322 02:40:26.508" endtime="20210322 02:40:26.509"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/admin/internal_operation/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/registration/approval</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:40:26.509" level="INFO">POST Request using : uri=/admin/internal_operation/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/050a212e0da649a7911fb423fed81556/registration/approval, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "risk.assessment.result", "resource": "business.holder", "created_at": "2021-03-22 15:28:56.747Z", "marketplace_id": "f71a8951368a4cc085cf7875ff44e61c", "object": { "result": "APPROVED", "holder_id": "050a212e0da649a7911fb423fed81556", "applicant_id": "bcc25a6751c14b52af1340d40dba78c5", "assessment_id": "1a3aa224-faa3-4471-9489-9a8911fbc5de" } } 
json=None</msg>
<msg timestamp="20210322 02:40:26.718" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:40:26.509" endtime="20210322 02:40:26.718"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:40:26.719" level="INFO">{'message': 'Holder approved successfully'}</msg>
<status status="PASS" starttime="20210322 02:40:26.719" endtime="20210322 02:40:26.719"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:40:26.720" level="INFO">3fdc6355260ff412</msg>
<status status="PASS" starttime="20210322 02:40:26.719" endtime="20210322 02:40:26.720"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:40:26.720" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:40:26.720" endtime="20210322 02:40:26.720"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 02:40:26.721" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:40:26.720" endtime="20210322 02:40:26.721"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:26.505" endtime="20210322 02:40:26.721"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 02:40:26.721" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:40:26.721" endtime="20210322 02:40:26.721"></status>
</kw>
<kw name="buscar account por holder" library="accounts_get_accounts_by_holder">
<kw name="conectar accounts" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accounts</arg>
<arg>url=${account_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 02:40:26.722" level="INFO">Creating Session using : alias=accounts, url=https://banking-accounts-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 02:40:26.722" endtime="20210322 02:40:26.722"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:26.722" endtime="20210322 02:40:26.722"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accounts</arg>
<arg>/marketplaces/${marketplace_external_key}/holders/${holder_external_key}/accounts</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:40:26.723" level="INFO">GET Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/holders/050a212e0da649a7911fb423fed81556/accounts, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 02:40:27.340" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:40:26.723" endtime="20210322 02:40:27.340"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:40:27.342" level="INFO">{'items': [{'id': 'a71abe4dfd2d4d7eb1d9df9605f74051', 'holder': '050a212e0da649a7911fb423fed81556', 'balance': '0.00', 'currency': 'BRL', 'routing_number': '001', 'number': '9118738173', 'status': 'active', 'metadata': {}, 'created_at': '2021-03-22T05:40:27.54266', 'updated_at': '2021-03-22T05:40:27.54266', 'primary': True, 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'uri': '/v2/marketplaces/f71a8951368a4cc085cf7875ff44e61c/accounts/a71abe4dfd2d4d7eb1d9df9605f74051', 'resource': 'payment_account'}], 'has_more': False, 'limit': 100, 'total_pages': 1, 'page': 1, 'offset': 0, 'total': '1', 'query_count': '1'}</msg>
<status status="PASS" starttime="20210322 02:40:27.341" endtime="20210322 02:40:27.342"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:40:27.343" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:40:27.343" endtime="20210322 02:40:27.344"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["id"]}</arg>
</arguments>
<assign>
<var>${account_external_key}</var>
</assign>
<msg timestamp="20210322 02:40:27.345" level="INFO">${account_external_key} = a71abe4dfd2d4d7eb1d9df9605f74051</msg>
<status status="PASS" starttime="20210322 02:40:27.345" endtime="20210322 02:40:27.346"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_external_key}</arg>
</arguments>
<msg timestamp="20210322 02:40:27.347" level="INFO">${account_external_key} = a71abe4dfd2d4d7eb1d9df9605f74051</msg>
<status status="PASS" starttime="20210322 02:40:27.346" endtime="20210322 02:40:27.347"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["number"]}</arg>
</arguments>
<assign>
<var>${account_number}</var>
</assign>
<msg timestamp="20210322 02:40:27.349" level="INFO">${account_number} = 9118738173</msg>
<status status="PASS" starttime="20210322 02:40:27.347" endtime="20210322 02:40:27.349"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_number}</arg>
</arguments>
<msg timestamp="20210322 02:40:27.350" level="INFO">${account_number} = 9118738173</msg>
<status status="PASS" starttime="20210322 02:40:27.350" endtime="20210322 02:40:27.350"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["routing_number"]}</arg>
</arguments>
<assign>
<var>${account_routing_number}</var>
</assign>
<msg timestamp="20210322 02:40:27.352" level="INFO">${account_routing_number} = 001</msg>
<status status="PASS" starttime="20210322 02:40:27.351" endtime="20210322 02:40:27.352"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_routing_number}</arg>
</arguments>
<msg timestamp="20210322 02:40:27.354" level="INFO">${account_routing_number} = 001</msg>
<status status="PASS" starttime="20210322 02:40:27.352" endtime="20210322 02:40:27.354"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:26.721" endtime="20210322 02:40:27.354"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 02:40:27.354" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:40:27.354" endtime="20210322 02:40:27.355"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:24.254" endtime="20210322 02:40:27.355"></status>
</kw>
<kw name="criar chave pix" library="pix_dict_create_entry">
<arguments>
<arg>evp</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 02:40:27.357" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 02:40:27.356" endtime="20210322 02:40:27.358"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:27.356" endtime="20210322 02:40:27.358"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${type}</arg>
</arguments>
<msg timestamp="20210322 02:40:27.359" level="INFO">${type} = evp</msg>
<status status="PASS" starttime="20210322 02:40:27.358" endtime="20210322 02:40:27.359"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210322 02:40:27.360" level="INFO">${value} = </msg>
<status status="PASS" starttime="20210322 02:40:27.360" endtime="20210322 02:40:27.360"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:40:27.361" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 02:40:27.361" endtime="20210322 02:40:27.361"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "${type}",</arg>
<arg>"value": "${value}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 02:40:27.362" level="INFO">${body} = { "type": "evp", "value": "" }</msg>
<status status="PASS" starttime="20210322 02:40:27.362" endtime="20210322 02:40:27.362"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:40:27.364" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/050a212e0da649a7911fb423fed81556/accounts/a71abe4dfd2d4d7eb1d9df9605f74051/entries, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "evp", "value": "" } 
json=None</msg>
<msg timestamp="20210322 02:40:28.881" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:40:27.363" endtime="20210322 02:40:28.881"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:40:28.883" level="INFO">{'id': '2dbbfefcdd29433f97fd35b03ab7983f', 'status': 'active', 'created_at': '2021-03-22T02:40:28.851', 'updated_at': '2021-03-22T02:40:29.746', 'key': {'value': '72b63e6c-5a44-4933-b8e4-636a278f7caa', 'type': 'evp'}, 'account': {'id': 'a71abe4dfd2d4d7eb1d9df9605f74051', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': '050a212e0da649a7911fb423fed81556', 'owner': {'name': 'Holder de teste', 'national_registration': '53976140252', 'type': 'individual'}, 'routing_number': '001', 'number': '9118738173', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}, 'resource': 'pix.entry'}</msg>
<status status="PASS" starttime="20210322 02:40:28.882" endtime="20210322 02:40:28.883"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:40:28.884" level="INFO">6b14eaa7f563010b</msg>
<status status="PASS" starttime="20210322 02:40:28.883" endtime="20210322 02:40:28.884"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 02:40:28.885" level="INFO">201</msg>
<status status="PASS" starttime="20210322 02:40:28.884" endtime="20210322 02:40:28.885"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:40:28.886" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:40:28.885" endtime="20210322 02:40:28.886"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${entry_external_key}</var>
</assign>
<msg timestamp="20210322 02:40:28.888" level="INFO">${entry_external_key} = 2dbbfefcdd29433f97fd35b03ab7983f</msg>
<status status="PASS" starttime="20210322 02:40:28.887" endtime="20210322 02:40:28.888"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${entry_external_key}</arg>
</arguments>
<msg timestamp="20210322 02:40:28.889" level="INFO">${entry_external_key} = 2dbbfefcdd29433f97fd35b03ab7983f</msg>
<status status="PASS" starttime="20210322 02:40:28.888" endtime="20210322 02:40:28.889"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["key"]["value"]}</arg>
</arguments>
<assign>
<var>${entry_key_value}</var>
</assign>
<msg timestamp="20210322 02:40:28.890" level="INFO">${entry_key_value} = 72b63e6c-5a44-4933-b8e4-636a278f7caa</msg>
<status status="PASS" starttime="20210322 02:40:28.889" endtime="20210322 02:40:28.890"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${entry_key_value}</arg>
</arguments>
<msg timestamp="20210322 02:40:28.891" level="INFO">${entry_key_value} = 72b63e6c-5a44-4933-b8e4-636a278f7caa</msg>
<status status="PASS" starttime="20210322 02:40:28.890" endtime="20210322 02:40:28.891"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:27.355" endtime="20210322 02:40:28.891"></status>
</kw>
<kw name="validar criação da chave pix" library="asserts">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando status_code</arg>
</arguments>
<msg timestamp="20210322 02:40:28.892" level="INFO">Validando status_code</msg>
<status status="PASS" starttime="20210322 02:40:28.892" endtime="20210322 02:40:28.892"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${type}' == 'evp'</arg>
<arg>Should Be Equal As Integers</arg>
<arg>${response.status_code}</arg>
<arg>201</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'phone'</arg>
<arg>Should Be Equal As Integers</arg>
<arg>${response.status_code}</arg>
<arg>202</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'email'</arg>
<arg>Should Be Equal As Integers</arg>
<arg>${response.status_code}</arg>
<arg>202</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'national_registration'</arg>
<arg>Should Be Equal As Integers</arg>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 02:40:28.894" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:40:28.893" endtime="20210322 02:40:28.894"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:28.893" endtime="20210322 02:40:28.894"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar status da chave</arg>
</arguments>
<msg timestamp="20210322 02:40:28.894" level="INFO">Validar status da chave</msg>
<status status="PASS" starttime="20210322 02:40:28.894" endtime="20210322 02:40:28.894"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${type}' == 'evp'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["status"]}</arg>
<arg>active</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'phone'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["status"]}</arg>
<arg>waiting_ownership_verification</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'email'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["status"]}</arg>
<arg>waiting_ownership_verification</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'national_registration'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["status"]}</arg>
<arg>active</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["status"]}</arg>
<arg>active</arg>
</arguments>
<status status="PASS" starttime="20210322 02:40:28.896" endtime="20210322 02:40:28.896"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:28.895" endtime="20210322 02:40:28.896"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando Tipo da chave PIX</arg>
</arguments>
<msg timestamp="20210322 02:40:28.896" level="INFO">Validando Tipo da chave PIX</msg>
<status status="PASS" starttime="20210322 02:40:28.896" endtime="20210322 02:40:28.896"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${type}' == 'evp'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["type"]}</arg>
<arg>${type}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'phone'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["type"]}</arg>
<arg>${type}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'email'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["type"]}</arg>
<arg>${type}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'national_registration'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["type"]}</arg>
<arg>${type}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["key"]["type"]}</arg>
<arg>${type}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:40:28.897" endtime="20210322 02:40:28.897"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:28.896" endtime="20210322 02:40:28.897"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando Valor da chave PIX</arg>
</arguments>
<msg timestamp="20210322 02:40:28.897" level="INFO">Validando Valor da chave PIX</msg>
<status status="PASS" starttime="20210322 02:40:28.897" endtime="20210322 02:40:28.897"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${type}' == 'evp'</arg>
<arg>Should Not Be Empty</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'phone'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${phone_pix}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'email'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${email_pix}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'national_registration'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${national_registration}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${response.json()["key"]["value"]}</arg>
</arguments>
<msg timestamp="20210322 02:40:28.898" level="INFO">Length is 36</msg>
<status status="PASS" starttime="20210322 02:40:28.898" endtime="20210322 02:40:28.898"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:28.898" endtime="20210322 02:40:28.898"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando dados da conta</arg>
</arguments>
<msg timestamp="20210322 02:40:28.898" level="INFO">Validando dados da conta</msg>
<status status="PASS" starttime="20210322 02:40:28.898" endtime="20210322 02:40:28.899"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["id"]}</arg>
<arg>${account_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:40:28.899" endtime="20210322 02:40:28.899"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["marketplace"]}</arg>
<arg>${marketplace_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:40:28.899" endtime="20210322 02:40:28.899"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["holder"]}</arg>
<arg>${holder_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:40:28.900" endtime="20210322 02:40:28.900"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["number"]}</arg>
<arg>${account_number}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:40:28.900" endtime="20210322 02:40:28.900"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["routing_number"]}</arg>
<arg>${account_routing_number}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:40:28.900" endtime="20210322 02:40:28.901"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["type"]}</arg>
<arg>CACC</arg>
</arguments>
<status status="PASS" starttime="20210322 02:40:28.901" endtime="20210322 02:40:28.901"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar Proprietário da Account Owner</arg>
</arguments>
<msg timestamp="20210322 02:40:28.901" level="INFO">Validar Proprietário da Account Owner</msg>
<status status="PASS" starttime="20210322 02:40:28.901" endtime="20210322 02:40:28.901"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${holder_type}' == 'individual'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["account"]["owner"]["name"]}</arg>
<arg>${holder_name}</arg>
<arg>ELSE IF</arg>
<arg>'${holder_type}' == 'business'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["account"]["owner"]["name"]}</arg>
<arg>${legal_name}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["account"]["owner"]["name"]}</arg>
<arg>${holder_name}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:40:28.902" endtime="20210322 02:40:28.902"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:28.902" endtime="20210322 02:40:28.903"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar national_registration da Account Owner</arg>
</arguments>
<msg timestamp="20210322 02:40:28.903" level="INFO">Validar national_registration da Account Owner</msg>
<status status="PASS" starttime="20210322 02:40:28.903" endtime="20210322 02:40:28.903"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${holder_type}' == 'individual'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["account"]["owner"]["national_registration"]}</arg>
<arg>${national_registration}</arg>
<arg>ELSE IF</arg>
<arg>'${holder_type}' == 'business'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["account"]["owner"]["national_registration"]}</arg>
<arg>${national_registration}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["account"]["owner"]["national_registration"]}</arg>
<arg>${national_registration}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:40:28.904" endtime="20210322 02:40:28.904"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:28.903" endtime="20210322 02:40:28.904"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar Holder Type do Account Owner</arg>
</arguments>
<msg timestamp="20210322 02:40:28.905" level="INFO">Validar Holder Type do Account Owner</msg>
<status status="PASS" starttime="20210322 02:40:28.905" endtime="20210322 02:40:28.905"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${holder_type}' == 'individual'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["account"]["owner"]["type"]}</arg>
<arg>${holder_type}</arg>
<arg>ELSE IF</arg>
<arg>'${holder_type}' == 'business'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["account"]["owner"]["type"]}</arg>
<arg>${holder_type}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["account"]["owner"]["type"]}</arg>
<arg>${holder_type}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:40:28.905" endtime="20210322 02:40:28.906"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:28.905" endtime="20210322 02:40:28.906"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar PSP</arg>
</arguments>
<msg timestamp="20210322 02:40:28.906" level="INFO">Validar PSP</msg>
<status status="PASS" starttime="20210322 02:40:28.906" endtime="20210322 02:40:28.906"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["psp"]["code"]}</arg>
<arg>19468242</arg>
</arguments>
<status status="PASS" starttime="20210322 02:40:28.906" endtime="20210322 02:40:28.906"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["psp"]["name"]}</arg>
<arg>Zoop Tecnologia e Meios de Pagamento S.A.</arg>
</arguments>
<status status="PASS" starttime="20210322 02:40:28.906" endtime="20210322 02:40:28.907"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:28.891" endtime="20210322 02:40:28.907"></status>
</kw>
<kw name="excluir chave pix" library="pix_dict_delete_entry">
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 02:40:28.908" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 02:40:28.907" endtime="20210322 02:40:28.908"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:28.907" endtime="20210322 02:40:28.908"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:40:28.908" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 02:40:28.908" endtime="20210322 02:40:28.908"></status>
</kw>
<kw name="Delete Request" library="RequestsLibrary">
<doc>Send a DELETE request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries/${entry_external_key}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:40:28.909" level="INFO">DELETE Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/050a212e0da649a7911fb423fed81556/accounts/a71abe4dfd2d4d7eb1d9df9605f74051/entries/2dbbfefcdd29433f97fd35b03ab7983f, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data=None 
json=None</msg>
<msg timestamp="20210322 02:40:30.307" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:40:28.909" endtime="20210322 02:40:30.307"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:40:30.309" level="INFO">{'message': 'Entry removed successfully'}</msg>
<status status="PASS" starttime="20210322 02:40:30.308" endtime="20210322 02:40:30.310"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:40:30.311" level="INFO">46ceed5c77ec1ab2</msg>
<status status="PASS" starttime="20210322 02:40:30.310" endtime="20210322 02:40:30.312"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 02:40:30.314" level="INFO">200</msg>
<status status="PASS" starttime="20210322 02:40:30.313" endtime="20210322 02:40:30.314"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:40:30.316" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:40:30.315" endtime="20210322 02:40:30.316"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:28.907" endtime="20210322 02:40:30.316"></status>
</kw>
<kw name="validar exclusão da chave pix" library="asserts">
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 02:40:30.320" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:40:30.319" endtime="20210322 02:40:30.320"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["message"]}</arg>
<arg>Entry removed successfully</arg>
</arguments>
<status status="PASS" starttime="20210322 02:40:30.320" endtime="20210322 02:40:30.321"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:30.317" endtime="20210322 02:40:30.322"></status>
</kw>
<doc>Fluxo Básico</doc>
<tags>
<tag>regression_test</tag>
<tag>smoke_test</tag>
</tags>
<status status="PASS" starttime="20210322 02:40:24.253" endtime="20210322 02:40:30.322" critical="yes"></status>
</test>
<test id="s1-s1-s4-t2" name="Cenário: Excluir Chave de Endereçamento do tipo Telefone">
<kw name="Random Number" library="FakerLibrary">
<doc>Returns a random number with 1 digit (default, when digits==None),
a random number with 0 to given number of digits, or a random number
with given number to given number of digits (when ``fix_len==True``).</doc>
<arguments>
<arg>digits=8</arg>
<arg>fix_len=True</arg>
</arguments>
<assign>
<var>${phone}</var>
</assign>
<msg timestamp="20210322 02:40:30.325" level="INFO">${phone} = 51515750</msg>
<status status="PASS" starttime="20210322 02:40:30.324" endtime="20210322 02:40:30.325"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>+55219${phone}</arg>
</arguments>
<assign>
<var>${phone_pix}</var>
</assign>
<msg timestamp="20210322 02:40:30.326" level="INFO">${phone_pix} = +5521951515750</msg>
<status status="PASS" starttime="20210322 02:40:30.326" endtime="20210322 02:40:30.326"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${phone_pix}</arg>
</arguments>
<msg timestamp="20210322 02:40:30.328" level="INFO">${phone_pix} = +5521951515750</msg>
<status status="PASS" starttime="20210322 02:40:30.327" endtime="20210322 02:40:30.328"></status>
</kw>
<kw name="criar holder individual ativo" library="accreditation_create_holder_active">
<kw name="conectar accreditation" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accreditation</arg>
<arg>url=${accreditation_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 02:40:30.330" level="INFO">Creating Session using : alias=accreditation, url=https://banking-accreditation-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 02:40:30.330" endtime="20210322 02:40:30.331"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:30.329" endtime="20210322 02:40:30.331"></status>
</kw>
<kw name="Cpf" library="FakerLibrary">
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 02:40:30.332" level="INFO">${national_registration} = 830.475.621-80</msg>
<status status="PASS" starttime="20210322 02:40:30.332" endtime="20210322 02:40:30.332"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${national_registration}</arg>
<arg>.</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 02:40:30.333" level="INFO">${national_registration} = 830475621-80</msg>
<status status="PASS" starttime="20210322 02:40:30.333" endtime="20210322 02:40:30.333"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${national_registration}</arg>
<arg>-</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 02:40:30.334" level="INFO">${national_registration} = 83047562180</msg>
<status status="PASS" starttime="20210322 02:40:30.334" endtime="20210322 02:40:30.334"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${national_registration}</arg>
</arguments>
<msg timestamp="20210322 02:40:30.335" level="INFO">${national_registration} = 83047562180</msg>
<status status="PASS" starttime="20210322 02:40:30.335" endtime="20210322 02:40:30.335"></status>
</kw>
<kw name="Rg" library="FakerLibrary">
<doc>Brazilian RG, return plain numbers.
Check:  https://www.ngmatematica.com/2014/02/como-determinar-o-digito-verificador-do.html</doc>
<assign>
<var>${identity_card}</var>
</assign>
<msg timestamp="20210322 02:40:30.336" level="INFO">${identity_card} = 05684721X</msg>
<status status="PASS" starttime="20210322 02:40:30.336" endtime="20210322 02:40:30.336"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${identity_card}</arg>
</arguments>
<msg timestamp="20210322 02:40:30.337" level="INFO">${identity_card} = 05684721X</msg>
<status status="PASS" starttime="20210322 02:40:30.337" endtime="20210322 02:40:30.338"></status>
</kw>
<kw name="criar holder individual" library="accreditation_post_holder_individual">
<arguments>
<arg>holder_type=individual</arg>
<arg>holder_name=${holder_name}</arg>
<arg>email=${email}</arg>
<arg>national_registration=${national_registration}</arg>
<arg>revenue=${revenue}</arg>
<arg>birthday=${birthday}</arg>
<arg>mothers_name=${mothers_name}</arg>
<arg>identity_card=${identity_card}</arg>
<arg>pep=false</arg>
<arg>cbo=${cbo}</arg>
</arguments>
<kw name="conectar accreditation" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accreditation</arg>
<arg>url=${accreditation_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 02:40:30.341" level="INFO">Creating Session using : alias=accreditation, url=https://banking-accreditation-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 02:40:30.340" endtime="20210322 02:40:30.341"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:30.340" endtime="20210322 02:40:30.342"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_type}</arg>
</arguments>
<msg timestamp="20210322 02:40:30.343" level="INFO">${holder_type} = individual</msg>
<status status="PASS" starttime="20210322 02:40:30.342" endtime="20210322 02:40:30.343"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_name}</arg>
</arguments>
<msg timestamp="20210322 02:40:30.344" level="INFO">${holder_name} = Holder de teste</msg>
<status status="PASS" starttime="20210322 02:40:30.343" endtime="20210322 02:40:30.344"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:40:30.345" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 02:40:30.344" endtime="20210322 02:40:30.345"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "${holder_type}",</arg>
<arg>"name": "${holder_name}",</arg>
<arg>"email": "${email}",</arg>
<arg>"national_registration": "${national_registration}",</arg>
<arg>"revenue": ${revenue},</arg>
<arg>"birthday": "${birthday}",</arg>
<arg>"mothers_name": "${mothers_name}",</arg>
<arg>"identity_card": "${identity_card}",</arg>
<arg>"pep": false,</arg>
<arg>"cbo": ${cbo}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 02:40:30.346" level="INFO">${body} = { "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "83047562180", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder",...</msg>
<status status="PASS" starttime="20210322 02:40:30.345" endtime="20210322 02:40:30.346"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:40:30.348" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "83047562180", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder", "identity_card": "05684721X", "pep": false, "cbo": 821450 } 
json=None</msg>
<msg timestamp="20210322 02:40:31.010" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:40:30.347" endtime="20210322 02:40:31.010"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:40:31.012" level="INFO">{'id': '7839640a7a0b4d6ca98e64c2dfcd764e', 'name': 'Holder de teste', 'revenue': 5500.0, 'email': 'teste@teste.com.br', 'status': 'waiting_info_and_documents', 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'marketplace_name': 'Marketplace de Teste', 'created_at': '2021-03-22T02:40:31.843512', 'updated_at': '2021-03-22T02:40:31.843515', 'type': 'individual', 'national_registration': '83047562180', 'birthday': '1988-04-23', 'mothers_name': 'Mãe do Holder', 'identity_card': '05684721X', 'pep': False, 'cbo': '821450', '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/7839640a7a0b4d6ca98e64c2dfcd764e', 'type': 'GET'}, 'phones': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/7839640a7a0b4d6ca98e64c2dfcd764e/phones', 'type': 'GET'}, 'addresses': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/7839640a7a0b4d6ca98e64c2dfcd764e/addresses', 'type': 'GET'}, 'documents': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/7839640a7a0b4d6ca98e64c2dfcd764e/documents', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 02:40:31.011" endtime="20210322 02:40:31.012"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:40:31.013" level="INFO">b0d06e5f1fc1d5cd</msg>
<status status="PASS" starttime="20210322 02:40:31.013" endtime="20210322 02:40:31.014"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${body}</arg>
</arguments>
<msg timestamp="20210322 02:40:31.014" level="INFO">{ "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "83047562180", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder", "identity_card": "05684721X", "pep": false, "cbo": 821450 }</msg>
<status status="PASS" starttime="20210322 02:40:31.014" endtime="20210322 02:40:31.015"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:40:31.016" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:40:31.015" endtime="20210322 02:40:31.016"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${holder_external_key}</var>
</assign>
<msg timestamp="20210322 02:40:31.018" level="INFO">${holder_external_key} = 7839640a7a0b4d6ca98e64c2dfcd764e</msg>
<status status="PASS" starttime="20210322 02:40:31.017" endtime="20210322 02:40:31.018"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_external_key}</arg>
</arguments>
<msg timestamp="20210322 02:40:31.019" level="INFO">${holder_external_key} = 7839640a7a0b4d6ca98e64c2dfcd764e</msg>
<status status="PASS" starttime="20210322 02:40:31.018" endtime="20210322 02:40:31.019"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:30.338" endtime="20210322 02:40:31.020"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_name}</arg>
</arguments>
<msg timestamp="20210322 02:40:31.021" level="INFO">${holder_name} = Holder de teste</msg>
<status status="PASS" starttime="20210322 02:40:31.020" endtime="20210322 02:40:31.021"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 02:40:31.022" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:40:31.021" endtime="20210322 02:40:31.022"></status>
</kw>
<kw name="criar holder phone" library="accreditation_post_holder_phone">
<arguments>
<arg>21</arg>
<arg>51</arg>
<arg>996221236</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:40:31.024" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 02:40:31.024" endtime="20210322 02:40:31.024"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"area_code": "${phone_area_code}",</arg>
<arg>"country_code": "${phone_country_code}",</arg>
<arg>"number": "${phone_number}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 02:40:31.026" level="INFO">${body} = { "area_code": "21", "country_code": "51", "number": "996221236" }</msg>
<status status="PASS" starttime="20210322 02:40:31.025" endtime="20210322 02:40:31.026"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/phones</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:40:31.027" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/7839640a7a0b4d6ca98e64c2dfcd764e/phones, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "area_code": "21", "country_code": "51", "number": "996221236" } 
json=None</msg>
<msg timestamp="20210322 02:40:31.242" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:40:31.026" endtime="20210322 02:40:31.242"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:40:31.245" level="INFO">{'id': '45e6f493780641eba904ee33bfbf4cec', 'area_code': '21', 'country_code': '51', 'number': '996221236', 'main': True, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/7839640a7a0b4d6ca98e64c2dfcd764e/phones/45e6f493780641eba904ee33bfbf4cec', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/7839640a7a0b4d6ca98e64c2dfcd764e', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 02:40:31.243" endtime="20210322 02:40:31.246"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:40:31.248" level="INFO">b461f3517d0aacc3</msg>
<status status="PASS" starttime="20210322 02:40:31.246" endtime="20210322 02:40:31.248"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:40:31.251" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:40:31.249" endtime="20210322 02:40:31.252"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${phone_external_key}</var>
</assign>
<msg timestamp="20210322 02:40:31.256" level="INFO">${phone_external_key} = 45e6f493780641eba904ee33bfbf4cec</msg>
<status status="PASS" starttime="20210322 02:40:31.254" endtime="20210322 02:40:31.257"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${phone_external_key}</arg>
</arguments>
<msg timestamp="20210322 02:40:31.261" level="INFO">${phone_external_key} = 45e6f493780641eba904ee33bfbf4cec</msg>
<status status="PASS" starttime="20210322 02:40:31.258" endtime="20210322 02:40:31.262"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:31.023" endtime="20210322 02:40:31.263"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 02:40:31.265" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:40:31.264" endtime="20210322 02:40:31.266"></status>
</kw>
<kw name="criar holder address" library="accreditation_post_holder_address">
<arguments>
<arg>Rio de Janeiro</arg>
<arg>Rio de Janeiro</arg>
<arg>Brasil</arg>
<arg>Bairro de Testes</arg>
<arg>Rua de Testes</arg>
<arg>90</arg>
<arg>apto 200</arg>
<arg>21550987</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:40:31.273" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 02:40:31.270" endtime="20210322 02:40:31.273"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"city": "${city}",</arg>
<arg>"state": "${state}",</arg>
<arg>"country": "${country}",</arg>
<arg>"neighborhood": "${neighborhood}",</arg>
<arg>"street": "${street}",</arg>
<arg>"number": "${number}",</arg>
<arg>"complement": "${complement}",</arg>
<arg>"postal_code": "${postal_code}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 02:40:31.277" level="INFO">${body} = { "city": "Rio de Janeiro", "state": "Rio de Janeiro", "country": "Brasil", "neighborhood": "Bairro de Testes", "street": "Rua de Testes", "number": "90", "complement": "apto 200", "postal_code": "215...</msg>
<status status="PASS" starttime="20210322 02:40:31.274" endtime="20210322 02:40:31.277"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/addresses</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:40:31.281" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/7839640a7a0b4d6ca98e64c2dfcd764e/addresses, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "city": "Rio de Janeiro", "state": "Rio de Janeiro", "country": "Brasil", "neighborhood": "Bairro de Testes", "street": "Rua de Testes", "number": "90", "complement": "apto 200", "postal_code": "21550987" } 
json=None</msg>
<msg timestamp="20210322 02:40:31.542" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:40:31.278" endtime="20210322 02:40:31.542"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:40:31.543" level="INFO">{'id': 'e045f72cde1f48a6a883e99373382fb7', 'street': 'Rua de Testes', 'number': '90', 'city': 'Rio de Janeiro', 'complement': 'apto 200', 'state': 'Rio de Janeiro', 'neighborhood': 'Bairro de Testes', 'postal_code': '21550987', 'country': 'Brasil', 'main': True, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/7839640a7a0b4d6ca98e64c2dfcd764e/addresses/e045f72cde1f48a6a883e99373382fb7', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/7839640a7a0b4d6ca98e64c2dfcd764e', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 02:40:31.543" endtime="20210322 02:40:31.543"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:40:31.544" level="INFO">7c7ff6ab697853cd</msg>
<status status="PASS" starttime="20210322 02:40:31.544" endtime="20210322 02:40:31.544"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:40:31.545" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:40:31.545" endtime="20210322 02:40:31.545"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${address_external_key}</var>
</assign>
<msg timestamp="20210322 02:40:31.546" level="INFO">${address_external_key} = e045f72cde1f48a6a883e99373382fb7</msg>
<status status="PASS" starttime="20210322 02:40:31.545" endtime="20210322 02:40:31.546"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${address_external_key}</arg>
</arguments>
<msg timestamp="20210322 02:40:31.547" level="INFO">${address_external_key} = e045f72cde1f48a6a883e99373382fb7</msg>
<status status="PASS" starttime="20210322 02:40:31.547" endtime="20210322 02:40:31.547"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:31.267" endtime="20210322 02:40:31.547"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 02:40:31.548" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:40:31.548" endtime="20210322 02:40:31.548"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>SELFIE</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:40:31.549" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 02:40:31.549" endtime="20210322 02:40:31.550"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 02:40:31.550" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 02:40:31.552" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 02:40:31.550" endtime="20210322 02:40:31.552"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:40:31.554" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/7839640a7a0b4d6ca98e64c2dfcd764e/documents?type=SELFIE, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 02:40:31.874" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:40:31.553" endtime="20210322 02:40:31.874"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:40:31.875" level="INFO">{'id': '71842ee48e5d465fbf4c1c65460320a9', 'document_type': 'selfie', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/7839640a7a0b4d6ca98e64c2dfcd764e/documents/71842ee48e5d465fbf4c1c65460320a9', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/7839640a7a0b4d6ca98e64c2dfcd764e', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/7839640a7a0b4d6ca98e64c2dfcd764e/documents/71842ee48e5d465fbf4c1c65460320a9/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 02:40:31.874" endtime="20210322 02:40:31.875"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:40:31.875" level="INFO">e30629beed2f250e</msg>
<status status="PASS" starttime="20210322 02:40:31.875" endtime="20210322 02:40:31.875"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:40:31.875" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:40:31.875" endtime="20210322 02:40:31.875"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 02:40:31.876" level="INFO">${document_external_key} = 71842ee48e5d465fbf4c1c65460320a9</msg>
<status status="PASS" starttime="20210322 02:40:31.876" endtime="20210322 02:40:31.876"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 02:40:31.876" level="INFO">${document_external_key} = 71842ee48e5d465fbf4c1c65460320a9</msg>
<status status="PASS" starttime="20210322 02:40:31.876" endtime="20210322 02:40:31.876"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:31.549" endtime="20210322 02:40:31.877"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 02:40:31.877" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:40:31.877" endtime="20210322 02:40:31.877"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>RG_FRENTE</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:40:31.878" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 02:40:31.878" endtime="20210322 02:40:31.878"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 02:40:31.878" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 02:40:31.879" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 02:40:31.878" endtime="20210322 02:40:31.879"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:40:31.880" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/7839640a7a0b4d6ca98e64c2dfcd764e/documents?type=RG_FRENTE, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 02:40:32.191" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:40:31.880" endtime="20210322 02:40:32.191"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:40:32.191" level="INFO">{'id': '3e92047a283541c5a2ef1ac37eab50e8', 'document_type': 'rg_frente', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/7839640a7a0b4d6ca98e64c2dfcd764e/documents/3e92047a283541c5a2ef1ac37eab50e8', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/7839640a7a0b4d6ca98e64c2dfcd764e', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/7839640a7a0b4d6ca98e64c2dfcd764e/documents/3e92047a283541c5a2ef1ac37eab50e8/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 02:40:32.191" endtime="20210322 02:40:32.192"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:40:32.192" level="INFO">4e58632f47fa26e8</msg>
<status status="PASS" starttime="20210322 02:40:32.192" endtime="20210322 02:40:32.192"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:40:32.192" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:40:32.192" endtime="20210322 02:40:32.192"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 02:40:32.193" level="INFO">${document_external_key} = 3e92047a283541c5a2ef1ac37eab50e8</msg>
<status status="PASS" starttime="20210322 02:40:32.192" endtime="20210322 02:40:32.193"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 02:40:32.193" level="INFO">${document_external_key} = 3e92047a283541c5a2ef1ac37eab50e8</msg>
<status status="PASS" starttime="20210322 02:40:32.193" endtime="20210322 02:40:32.193"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:31.877" endtime="20210322 02:40:32.193"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 02:40:32.194" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:40:32.193" endtime="20210322 02:40:32.194"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>RG_VERSO</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:40:32.194" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 02:40:32.194" endtime="20210322 02:40:32.194"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 02:40:32.195" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 02:40:32.196" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 02:40:32.194" endtime="20210322 02:40:32.196"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:40:32.196" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/7839640a7a0b4d6ca98e64c2dfcd764e/documents?type=RG_VERSO, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 02:40:32.468" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:40:32.196" endtime="20210322 02:40:32.468"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:40:32.470" level="INFO">{'id': '2b79a746fc304189a2382fd4e11cae28', 'document_type': 'rg_verso', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/7839640a7a0b4d6ca98e64c2dfcd764e/documents/2b79a746fc304189a2382fd4e11cae28', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/7839640a7a0b4d6ca98e64c2dfcd764e', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/7839640a7a0b4d6ca98e64c2dfcd764e/documents/2b79a746fc304189a2382fd4e11cae28/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 02:40:32.469" endtime="20210322 02:40:32.471"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:40:32.472" level="INFO">bd198632c7c219f0</msg>
<status status="PASS" starttime="20210322 02:40:32.471" endtime="20210322 02:40:32.472"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:40:32.474" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:40:32.473" endtime="20210322 02:40:32.474"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 02:40:32.476" level="INFO">${document_external_key} = 2b79a746fc304189a2382fd4e11cae28</msg>
<status status="PASS" starttime="20210322 02:40:32.474" endtime="20210322 02:40:32.476"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 02:40:32.477" level="INFO">${document_external_key} = 2b79a746fc304189a2382fd4e11cae28</msg>
<status status="PASS" starttime="20210322 02:40:32.476" endtime="20210322 02:40:32.477"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:32.194" endtime="20210322 02:40:32.477"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 02:40:32.479" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:40:32.478" endtime="20210322 02:40:32.479"></status>
</kw>
<kw name="solicitar aprovação do holder" library="accreditation_request_approval">
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:40:32.480" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 02:40:32.480" endtime="20210322 02:40:32.480"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/approval</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:40:32.481" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/7839640a7a0b4d6ca98e64c2dfcd764e/approval, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data=None 
json=None</msg>
<msg timestamp="20210322 02:40:32.753" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:40:32.481" endtime="20210322 02:40:32.753"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:40:32.755" level="INFO">{'message': 'Approval request accepted successfully. Processing analysis'}</msg>
<status status="PASS" starttime="20210322 02:40:32.754" endtime="20210322 02:40:32.755"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:40:32.756" level="INFO">7303e3f4b3913998</msg>
<status status="PASS" starttime="20210322 02:40:32.755" endtime="20210322 02:40:32.756"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:40:32.756" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:40:32.756" endtime="20210322 02:40:32.757"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:32.479" endtime="20210322 02:40:32.757"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 02:40:32.758" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:40:32.757" endtime="20210322 02:40:32.758"></status>
</kw>
<kw name="recebendo notificação de aprovação" library="accreditation_risk_notification">
<kw name="Uuid 4" library="FakerLibrary">
<doc>Generates a random UUID4 string.
:param cast_to: Specify what type the UUID should be cast to. Default is `str`
:type cast_to: callable</doc>
<assign>
<var>${assessment_id}</var>
</assign>
<msg timestamp="20210322 02:40:32.759" level="INFO">${assessment_id} = dec6b69d-5a3c-4045-b1ca-eef7e70a548f</msg>
<status status="PASS" starttime="20210322 02:40:32.759" endtime="20210322 02:40:32.759"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>year</arg>
</arguments>
<assign>
<var>${year}</var>
</assign>
<msg timestamp="20210322 02:40:32.759" level="INFO">${year} = 2021</msg>
<status status="PASS" starttime="20210322 02:40:32.759" endtime="20210322 02:40:32.759"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>month</arg>
</arguments>
<assign>
<var>${month}</var>
</assign>
<msg timestamp="20210322 02:40:32.761" level="INFO">${month} = 03</msg>
<status status="PASS" starttime="20210322 02:40:32.761" endtime="20210322 02:40:32.761"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>day</arg>
</arguments>
<assign>
<var>${day}</var>
</assign>
<msg timestamp="20210322 02:40:32.762" level="INFO">${day} = 22</msg>
<status status="PASS" starttime="20210322 02:40:32.761" endtime="20210322 02:40:32.762"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:40:32.764" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 02:40:32.762" endtime="20210322 02:40:32.764"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "risk.assessment.result",</arg>
<arg>"resource": "business.holder",</arg>
<arg>"created_at": "${year}-${month}-${day} 15:28:56.747Z",</arg>
<arg>"marketplace_id": "${marketplace_external_key}",</arg>
<arg>"object": {</arg>
<arg>"result": "APPROVED",</arg>
<arg>"holder_id": "${holder_external_key}",</arg>
<arg>"applicant_id": "${application_external_key}",</arg>
<arg>"assessment_id": "${assessment_id}"</arg>
<arg>}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 02:40:32.765" level="INFO">${body} = { "type": "risk.assessment.result", "resource": "business.holder", "created_at": "2021-03-22 15:28:56.747Z", "marketplace_id": "f71a8951368a4cc085cf7875ff44e61c", "object": { "result": "APPROVED", "ho...</msg>
<status status="PASS" starttime="20210322 02:40:32.764" endtime="20210322 02:40:32.765"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/admin/internal_operation/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/registration/approval</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:40:32.767" level="INFO">POST Request using : uri=/admin/internal_operation/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/7839640a7a0b4d6ca98e64c2dfcd764e/registration/approval, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "risk.assessment.result", "resource": "business.holder", "created_at": "2021-03-22 15:28:56.747Z", "marketplace_id": "f71a8951368a4cc085cf7875ff44e61c", "object": { "result": "APPROVED", "holder_id": "7839640a7a0b4d6ca98e64c2dfcd764e", "applicant_id": "bcc25a6751c14b52af1340d40dba78c5", "assessment_id": "dec6b69d-5a3c-4045-b1ca-eef7e70a548f" } } 
json=None</msg>
<msg timestamp="20210322 02:40:32.970" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:40:32.766" endtime="20210322 02:40:32.970"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:40:32.972" level="INFO">{'message': 'Holder approved successfully'}</msg>
<status status="PASS" starttime="20210322 02:40:32.971" endtime="20210322 02:40:32.972"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:40:32.974" level="INFO">4fee1ee6e4b20c6f</msg>
<status status="PASS" starttime="20210322 02:40:32.973" endtime="20210322 02:40:32.974"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:40:32.975" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:40:32.974" endtime="20210322 02:40:32.975"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 02:40:32.976" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:40:32.976" endtime="20210322 02:40:32.976"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:32.758" endtime="20210322 02:40:32.977"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 02:40:32.978" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:40:32.977" endtime="20210322 02:40:32.978"></status>
</kw>
<kw name="buscar account por holder" library="accounts_get_accounts_by_holder">
<kw name="conectar accounts" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accounts</arg>
<arg>url=${account_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 02:40:32.980" level="INFO">Creating Session using : alias=accounts, url=https://banking-accounts-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 02:40:32.980" endtime="20210322 02:40:32.981"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:32.979" endtime="20210322 02:40:32.982"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accounts</arg>
<arg>/marketplaces/${marketplace_external_key}/holders/${holder_external_key}/accounts</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:40:32.983" level="INFO">GET Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/holders/7839640a7a0b4d6ca98e64c2dfcd764e/accounts, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 02:40:33.650" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:40:32.982" endtime="20210322 02:40:33.650"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:40:33.653" level="INFO">{'items': [{'id': '229512379bbf4ce293e6d507efe161be', 'holder': '7839640a7a0b4d6ca98e64c2dfcd764e', 'balance': '0.00', 'currency': 'BRL', 'routing_number': '001', 'number': '4421693108', 'status': 'active', 'metadata': {}, 'created_at': '2021-03-22T05:40:33.796031', 'updated_at': '2021-03-22T05:40:33.796031', 'primary': True, 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'uri': '/v2/marketplaces/f71a8951368a4cc085cf7875ff44e61c/accounts/229512379bbf4ce293e6d507efe161be', 'resource': 'payment_account'}], 'has_more': False, 'limit': 100, 'total_pages': 1, 'page': 1, 'offset': 0, 'total': '1', 'query_count': '1'}</msg>
<status status="PASS" starttime="20210322 02:40:33.652" endtime="20210322 02:40:33.654"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:40:33.655" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:40:33.655" endtime="20210322 02:40:33.656"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["id"]}</arg>
</arguments>
<assign>
<var>${account_external_key}</var>
</assign>
<msg timestamp="20210322 02:40:33.657" level="INFO">${account_external_key} = 229512379bbf4ce293e6d507efe161be</msg>
<status status="PASS" starttime="20210322 02:40:33.656" endtime="20210322 02:40:33.658"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_external_key}</arg>
</arguments>
<msg timestamp="20210322 02:40:33.659" level="INFO">${account_external_key} = 229512379bbf4ce293e6d507efe161be</msg>
<status status="PASS" starttime="20210322 02:40:33.658" endtime="20210322 02:40:33.659"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["number"]}</arg>
</arguments>
<assign>
<var>${account_number}</var>
</assign>
<msg timestamp="20210322 02:40:33.660" level="INFO">${account_number} = 4421693108</msg>
<status status="PASS" starttime="20210322 02:40:33.659" endtime="20210322 02:40:33.660"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_number}</arg>
</arguments>
<msg timestamp="20210322 02:40:33.662" level="INFO">${account_number} = 4421693108</msg>
<status status="PASS" starttime="20210322 02:40:33.661" endtime="20210322 02:40:33.662"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["routing_number"]}</arg>
</arguments>
<assign>
<var>${account_routing_number}</var>
</assign>
<msg timestamp="20210322 02:40:33.663" level="INFO">${account_routing_number} = 001</msg>
<status status="PASS" starttime="20210322 02:40:33.662" endtime="20210322 02:40:33.663"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_routing_number}</arg>
</arguments>
<msg timestamp="20210322 02:40:33.664" level="INFO">${account_routing_number} = 001</msg>
<status status="PASS" starttime="20210322 02:40:33.664" endtime="20210322 02:40:33.664"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:32.978" endtime="20210322 02:40:33.664"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 02:40:33.665" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:40:33.665" endtime="20210322 02:40:33.665"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:30.328" endtime="20210322 02:40:33.665"></status>
</kw>
<kw name="criar chave pix" library="pix_dict_create_entry">
<arguments>
<arg>phone</arg>
<arg>${phone_pix}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 02:40:33.667" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 02:40:33.667" endtime="20210322 02:40:33.668"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:33.666" endtime="20210322 02:40:33.668"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${type}</arg>
</arguments>
<msg timestamp="20210322 02:40:33.669" level="INFO">${type} = phone</msg>
<status status="PASS" starttime="20210322 02:40:33.668" endtime="20210322 02:40:33.669"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210322 02:40:33.669" level="INFO">${value} = +5521951515750</msg>
<status status="PASS" starttime="20210322 02:40:33.669" endtime="20210322 02:40:33.669"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:40:33.670" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 02:40:33.670" endtime="20210322 02:40:33.670"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "${type}",</arg>
<arg>"value": "${value}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 02:40:33.671" level="INFO">${body} = { "type": "phone", "value": "+5521951515750" }</msg>
<status status="PASS" starttime="20210322 02:40:33.670" endtime="20210322 02:40:33.671"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:40:33.672" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/7839640a7a0b4d6ca98e64c2dfcd764e/accounts/229512379bbf4ce293e6d507efe161be/entries, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "phone", "value": "+5521951515750" } 
json=None</msg>
<msg timestamp="20210322 02:40:34.325" level="INFO">${response} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20210322 02:40:33.671" endtime="20210322 02:40:34.325"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:40:34.325" level="INFO">{'id': '1887397298804f619c6ecb33442b97ba', 'status': 'waiting_ownership_verification', 'created_at': '2021-03-22T02:40:35.168', 'updated_at': '2021-03-22T02:40:35.168', 'key': {'value': '+5521951515750', 'type': 'phone'}, 'account': {'id': '229512379bbf4ce293e6d507efe161be', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': '7839640a7a0b4d6ca98e64c2dfcd764e', 'owner': {'name': 'Holder de teste', 'national_registration': '83047562180', 'type': 'individual'}, 'routing_number': '001', 'number': '4421693108', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}, 'resource': 'pix.entry'}</msg>
<status status="PASS" starttime="20210322 02:40:34.325" endtime="20210322 02:40:34.325"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:40:34.326" level="INFO">bb795ba5af140f29</msg>
<status status="PASS" starttime="20210322 02:40:34.325" endtime="20210322 02:40:34.326"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 02:40:34.326" level="INFO">202</msg>
<status status="PASS" starttime="20210322 02:40:34.326" endtime="20210322 02:40:34.326"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:40:34.327" level="INFO">${response} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20210322 02:40:34.326" endtime="20210322 02:40:34.327"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${entry_external_key}</var>
</assign>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:40:34.327" endtime="20210322 02:40:34.328"></status>
</kw>
<msg timestamp="20210322 02:40:34.328" level="INFO">${entry_external_key} = 1887397298804f619c6ecb33442b97ba</msg>
<status status="PASS" starttime="20210322 02:40:34.327" endtime="20210322 02:40:34.328"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${entry_external_key}</arg>
</arguments>
<msg timestamp="20210322 02:40:34.328" level="INFO">${entry_external_key} = 1887397298804f619c6ecb33442b97ba</msg>
<status status="PASS" starttime="20210322 02:40:34.328" endtime="20210322 02:40:34.328"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["key"]["value"]}</arg>
</arguments>
<assign>
<var>${entry_key_value}</var>
</assign>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["key"]["value"]}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:40:34.329" endtime="20210322 02:40:34.329"></status>
</kw>
<msg timestamp="20210322 02:40:34.329" level="INFO">${entry_key_value} = +5521951515750</msg>
<status status="PASS" starttime="20210322 02:40:34.328" endtime="20210322 02:40:34.329"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${entry_key_value}</arg>
</arguments>
<msg timestamp="20210322 02:40:34.329" level="INFO">${entry_key_value} = +5521951515750</msg>
<status status="PASS" starttime="20210322 02:40:34.329" endtime="20210322 02:40:34.329"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:33.666" endtime="20210322 02:40:34.329"></status>
</kw>
<kw name="validar criação da chave pix" library="asserts">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando status_code</arg>
</arguments>
<msg timestamp="20210322 02:40:34.330" level="INFO">Validando status_code</msg>
<status status="PASS" starttime="20210322 02:40:34.330" endtime="20210322 02:40:34.330"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${type}' == 'evp'</arg>
<arg>Should Be Equal As Integers</arg>
<arg>${response.status_code}</arg>
<arg>201</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'phone'</arg>
<arg>Should Be Equal As Integers</arg>
<arg>${response.status_code}</arg>
<arg>202</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'email'</arg>
<arg>Should Be Equal As Integers</arg>
<arg>${response.status_code}</arg>
<arg>202</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'national_registration'</arg>
<arg>Should Be Equal As Integers</arg>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>202</arg>
</arguments>
<msg timestamp="20210322 02:40:34.331" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:40:34.331" endtime="20210322 02:40:34.331"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:34.331" endtime="20210322 02:40:34.331"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar status da chave</arg>
</arguments>
<msg timestamp="20210322 02:40:34.331" level="INFO">Validar status da chave</msg>
<status status="PASS" starttime="20210322 02:40:34.331" endtime="20210322 02:40:34.331"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${type}' == 'evp'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["status"]}</arg>
<arg>active</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'phone'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["status"]}</arg>
<arg>waiting_ownership_verification</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'email'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["status"]}</arg>
<arg>waiting_ownership_verification</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'national_registration'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["status"]}</arg>
<arg>active</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["status"]}</arg>
<arg>waiting_ownership_verification</arg>
</arguments>
<status status="PASS" starttime="20210322 02:40:34.332" endtime="20210322 02:40:34.332"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:34.332" endtime="20210322 02:40:34.332"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando Tipo da chave PIX</arg>
</arguments>
<msg timestamp="20210322 02:40:34.333" level="INFO">Validando Tipo da chave PIX</msg>
<status status="PASS" starttime="20210322 02:40:34.332" endtime="20210322 02:40:34.333"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${type}' == 'evp'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["type"]}</arg>
<arg>${type}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'phone'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["type"]}</arg>
<arg>${type}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'email'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["type"]}</arg>
<arg>${type}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'national_registration'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["type"]}</arg>
<arg>${type}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["key"]["type"]}</arg>
<arg>${type}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:40:34.333" endtime="20210322 02:40:34.334"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:34.333" endtime="20210322 02:40:34.334"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando Valor da chave PIX</arg>
</arguments>
<msg timestamp="20210322 02:40:34.334" level="INFO">Validando Valor da chave PIX</msg>
<status status="PASS" starttime="20210322 02:40:34.334" endtime="20210322 02:40:34.334"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${type}' == 'evp'</arg>
<arg>Should Not Be Empty</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'phone'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${phone_pix}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'email'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${email_pix}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'national_registration'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${national_registration}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${phone_pix}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:40:34.335" endtime="20210322 02:40:34.335"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:34.334" endtime="20210322 02:40:34.335"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando dados da conta</arg>
</arguments>
<msg timestamp="20210322 02:40:34.335" level="INFO">Validando dados da conta</msg>
<status status="PASS" starttime="20210322 02:40:34.335" endtime="20210322 02:40:34.335"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["id"]}</arg>
<arg>${account_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:40:34.336" endtime="20210322 02:40:34.336"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["marketplace"]}</arg>
<arg>${marketplace_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:40:34.336" endtime="20210322 02:40:34.336"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["holder"]}</arg>
<arg>${holder_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:40:34.337" endtime="20210322 02:40:34.337"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["number"]}</arg>
<arg>${account_number}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:40:34.337" endtime="20210322 02:40:34.337"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["routing_number"]}</arg>
<arg>${account_routing_number}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:40:34.337" endtime="20210322 02:40:34.338"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["type"]}</arg>
<arg>CACC</arg>
</arguments>
<status status="PASS" starttime="20210322 02:40:34.338" endtime="20210322 02:40:34.338"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar Proprietário da Account Owner</arg>
</arguments>
<msg timestamp="20210322 02:40:34.338" level="INFO">Validar Proprietário da Account Owner</msg>
<status status="PASS" starttime="20210322 02:40:34.338" endtime="20210322 02:40:34.338"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${holder_type}' == 'individual'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["account"]["owner"]["name"]}</arg>
<arg>${holder_name}</arg>
<arg>ELSE IF</arg>
<arg>'${holder_type}' == 'business'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["account"]["owner"]["name"]}</arg>
<arg>${legal_name}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["account"]["owner"]["name"]}</arg>
<arg>${holder_name}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:40:34.339" endtime="20210322 02:40:34.339"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:34.339" endtime="20210322 02:40:34.339"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar national_registration da Account Owner</arg>
</arguments>
<msg timestamp="20210322 02:40:34.340" level="INFO">Validar national_registration da Account Owner</msg>
<status status="PASS" starttime="20210322 02:40:34.340" endtime="20210322 02:40:34.340"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${holder_type}' == 'individual'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["account"]["owner"]["national_registration"]}</arg>
<arg>${national_registration}</arg>
<arg>ELSE IF</arg>
<arg>'${holder_type}' == 'business'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["account"]["owner"]["national_registration"]}</arg>
<arg>${national_registration}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["account"]["owner"]["national_registration"]}</arg>
<arg>${national_registration}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:40:34.340" endtime="20210322 02:40:34.341"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:34.340" endtime="20210322 02:40:34.341"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar Holder Type do Account Owner</arg>
</arguments>
<msg timestamp="20210322 02:40:34.341" level="INFO">Validar Holder Type do Account Owner</msg>
<status status="PASS" starttime="20210322 02:40:34.341" endtime="20210322 02:40:34.341"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${holder_type}' == 'individual'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["account"]["owner"]["type"]}</arg>
<arg>${holder_type}</arg>
<arg>ELSE IF</arg>
<arg>'${holder_type}' == 'business'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["account"]["owner"]["type"]}</arg>
<arg>${holder_type}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["account"]["owner"]["type"]}</arg>
<arg>${holder_type}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:40:34.341" endtime="20210322 02:40:34.342"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:34.341" endtime="20210322 02:40:34.342"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar PSP</arg>
</arguments>
<msg timestamp="20210322 02:40:34.342" level="INFO">Validar PSP</msg>
<status status="PASS" starttime="20210322 02:40:34.342" endtime="20210322 02:40:34.342"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["psp"]["code"]}</arg>
<arg>19468242</arg>
</arguments>
<status status="PASS" starttime="20210322 02:40:34.342" endtime="20210322 02:40:34.342"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["psp"]["name"]}</arg>
<arg>Zoop Tecnologia e Meios de Pagamento S.A.</arg>
</arguments>
<status status="PASS" starttime="20210322 02:40:34.343" endtime="20210322 02:40:34.343"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:34.330" endtime="20210322 02:40:34.343"></status>
</kw>
<kw name="excluir chave pix" library="pix_dict_delete_entry">
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 02:40:34.344" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 02:40:34.344" endtime="20210322 02:40:34.344"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:34.343" endtime="20210322 02:40:34.344"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:40:34.344" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 02:40:34.344" endtime="20210322 02:40:34.345"></status>
</kw>
<kw name="Delete Request" library="RequestsLibrary">
<doc>Send a DELETE request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries/${entry_external_key}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:40:34.345" level="INFO">DELETE Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/7839640a7a0b4d6ca98e64c2dfcd764e/accounts/229512379bbf4ce293e6d507efe161be/entries/1887397298804f619c6ecb33442b97ba, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data=None 
json=None</msg>
<msg timestamp="20210322 02:40:34.970" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:40:34.345" endtime="20210322 02:40:34.970"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:40:34.971" level="INFO">{'message': 'Entry removed successfully'}</msg>
<status status="PASS" starttime="20210322 02:40:34.971" endtime="20210322 02:40:34.972"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:40:34.973" level="INFO">a233977541afe642</msg>
<status status="PASS" starttime="20210322 02:40:34.972" endtime="20210322 02:40:34.973"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 02:40:34.974" level="INFO">200</msg>
<status status="PASS" starttime="20210322 02:40:34.973" endtime="20210322 02:40:34.974"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:40:34.975" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:40:34.975" endtime="20210322 02:40:34.975"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:34.343" endtime="20210322 02:40:34.976"></status>
</kw>
<kw name="validar exclusão da chave pix" library="asserts">
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 02:40:34.977" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:40:34.977" endtime="20210322 02:40:34.978"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["message"]}</arg>
<arg>Entry removed successfully</arg>
</arguments>
<status status="PASS" starttime="20210322 02:40:34.978" endtime="20210322 02:40:34.979"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:34.976" endtime="20210322 02:40:34.979"></status>
</kw>
<doc>Fluxo Básico</doc>
<tags>
<tag>regression_test</tag>
<tag>smoke_test</tag>
</tags>
<status status="PASS" starttime="20210322 02:40:30.323" endtime="20210322 02:40:34.979" critical="yes"></status>
</test>
<test id="s1-s1-s4-t3" name="Cenário: Excluir Chave de Endereçamento do tipo Email">
<kw name="Email" library="FakerLibrary">
<assign>
<var>${email_pix}</var>
</assign>
<msg timestamp="20210322 02:40:34.981" level="INFO">${email_pix} = joao-guilherme90@gmail.com</msg>
<status status="PASS" starttime="20210322 02:40:34.981" endtime="20210322 02:40:34.981"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${email_pix}</arg>
</arguments>
<msg timestamp="20210322 02:40:34.982" level="INFO">${email_pix} = joao-guilherme90@gmail.com</msg>
<status status="PASS" starttime="20210322 02:40:34.982" endtime="20210322 02:40:34.982"></status>
</kw>
<kw name="criar holder individual ativo" library="accreditation_create_holder_active">
<kw name="conectar accreditation" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accreditation</arg>
<arg>url=${accreditation_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 02:40:34.984" level="INFO">Creating Session using : alias=accreditation, url=https://banking-accreditation-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 02:40:34.984" endtime="20210322 02:40:34.984"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:34.983" endtime="20210322 02:40:34.985"></status>
</kw>
<kw name="Cpf" library="FakerLibrary">
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 02:40:34.985" level="INFO">${national_registration} = 234.958.607-38</msg>
<status status="PASS" starttime="20210322 02:40:34.985" endtime="20210322 02:40:34.985"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${national_registration}</arg>
<arg>.</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 02:40:34.986" level="INFO">${national_registration} = 234958607-38</msg>
<status status="PASS" starttime="20210322 02:40:34.986" endtime="20210322 02:40:34.986"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${national_registration}</arg>
<arg>-</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 02:40:34.987" level="INFO">${national_registration} = 23495860738</msg>
<status status="PASS" starttime="20210322 02:40:34.986" endtime="20210322 02:40:34.987"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${national_registration}</arg>
</arguments>
<msg timestamp="20210322 02:40:34.988" level="INFO">${national_registration} = 23495860738</msg>
<status status="PASS" starttime="20210322 02:40:34.987" endtime="20210322 02:40:34.988"></status>
</kw>
<kw name="Rg" library="FakerLibrary">
<doc>Brazilian RG, return plain numbers.
Check:  https://www.ngmatematica.com/2014/02/como-determinar-o-digito-verificador-do.html</doc>
<assign>
<var>${identity_card}</var>
</assign>
<msg timestamp="20210322 02:40:34.988" level="INFO">${identity_card} = 140583269</msg>
<status status="PASS" starttime="20210322 02:40:34.988" endtime="20210322 02:40:34.988"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${identity_card}</arg>
</arguments>
<msg timestamp="20210322 02:40:34.989" level="INFO">${identity_card} = 140583269</msg>
<status status="PASS" starttime="20210322 02:40:34.989" endtime="20210322 02:40:34.989"></status>
</kw>
<kw name="criar holder individual" library="accreditation_post_holder_individual">
<arguments>
<arg>holder_type=individual</arg>
<arg>holder_name=${holder_name}</arg>
<arg>email=${email}</arg>
<arg>national_registration=${national_registration}</arg>
<arg>revenue=${revenue}</arg>
<arg>birthday=${birthday}</arg>
<arg>mothers_name=${mothers_name}</arg>
<arg>identity_card=${identity_card}</arg>
<arg>pep=false</arg>
<arg>cbo=${cbo}</arg>
</arguments>
<kw name="conectar accreditation" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accreditation</arg>
<arg>url=${accreditation_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 02:40:34.991" level="INFO">Creating Session using : alias=accreditation, url=https://banking-accreditation-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 02:40:34.991" endtime="20210322 02:40:34.991"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:34.990" endtime="20210322 02:40:34.991"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_type}</arg>
</arguments>
<msg timestamp="20210322 02:40:34.992" level="INFO">${holder_type} = individual</msg>
<status status="PASS" starttime="20210322 02:40:34.992" endtime="20210322 02:40:34.992"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_name}</arg>
</arguments>
<msg timestamp="20210322 02:40:34.993" level="INFO">${holder_name} = Holder de teste</msg>
<status status="PASS" starttime="20210322 02:40:34.992" endtime="20210322 02:40:34.993"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:40:34.993" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 02:40:34.993" endtime="20210322 02:40:34.993"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "${holder_type}",</arg>
<arg>"name": "${holder_name}",</arg>
<arg>"email": "${email}",</arg>
<arg>"national_registration": "${national_registration}",</arg>
<arg>"revenue": ${revenue},</arg>
<arg>"birthday": "${birthday}",</arg>
<arg>"mothers_name": "${mothers_name}",</arg>
<arg>"identity_card": "${identity_card}",</arg>
<arg>"pep": false,</arg>
<arg>"cbo": ${cbo}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 02:40:34.994" level="INFO">${body} = { "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "23495860738", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder",...</msg>
<status status="PASS" starttime="20210322 02:40:34.993" endtime="20210322 02:40:34.994"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:40:34.995" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "23495860738", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder", "identity_card": "140583269", "pep": false, "cbo": 821450 } 
json=None</msg>
<msg timestamp="20210322 02:40:35.651" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:40:34.994" endtime="20210322 02:40:35.651"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:40:35.653" level="INFO">{'id': 'd450b1c532dd4d339aa12ea5d1d0a307', 'name': 'Holder de teste', 'revenue': 5500.0, 'email': 'teste@teste.com.br', 'status': 'waiting_info_and_documents', 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'marketplace_name': 'Marketplace de Teste', 'created_at': '2021-03-22T02:40:36.481675', 'updated_at': '2021-03-22T02:40:36.481678', 'type': 'individual', 'national_registration': '23495860738', 'birthday': '1988-04-23', 'mothers_name': 'Mãe do Holder', 'identity_card': '140583269', 'pep': False, 'cbo': '821450', '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/d450b1c532dd4d339aa12ea5d1d0a307', 'type': 'GET'}, 'phones': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/d450b1c532dd4d339aa12ea5d1d0a307/phones', 'type': 'GET'}, 'addresses': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/d450b1c532dd4d339aa12ea5d1d0a307/addresses', 'type': 'GET'}, 'documents': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/d450b1c532dd4d339aa12ea5d1d0a307/documents', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 02:40:35.652" endtime="20210322 02:40:35.654"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:40:35.655" level="INFO">c0245f2d452aaf93</msg>
<status status="PASS" starttime="20210322 02:40:35.654" endtime="20210322 02:40:35.656"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${body}</arg>
</arguments>
<msg timestamp="20210322 02:40:35.657" level="INFO">{ "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "23495860738", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder", "identity_card": "140583269", "pep": false, "cbo": 821450 }</msg>
<status status="PASS" starttime="20210322 02:40:35.656" endtime="20210322 02:40:35.657"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:40:35.659" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:40:35.658" endtime="20210322 02:40:35.659"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${holder_external_key}</var>
</assign>
<msg timestamp="20210322 02:40:35.662" level="INFO">${holder_external_key} = d450b1c532dd4d339aa12ea5d1d0a307</msg>
<status status="PASS" starttime="20210322 02:40:35.660" endtime="20210322 02:40:35.662"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_external_key}</arg>
</arguments>
<msg timestamp="20210322 02:40:35.664" level="INFO">${holder_external_key} = d450b1c532dd4d339aa12ea5d1d0a307</msg>
<status status="PASS" starttime="20210322 02:40:35.663" endtime="20210322 02:40:35.664"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:34.989" endtime="20210322 02:40:35.664"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_name}</arg>
</arguments>
<msg timestamp="20210322 02:40:35.665" level="INFO">${holder_name} = Holder de teste</msg>
<status status="PASS" starttime="20210322 02:40:35.665" endtime="20210322 02:40:35.665"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 02:40:35.667" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:40:35.666" endtime="20210322 02:40:35.667"></status>
</kw>
<kw name="criar holder phone" library="accreditation_post_holder_phone">
<arguments>
<arg>21</arg>
<arg>51</arg>
<arg>996221236</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:40:35.670" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 02:40:35.669" endtime="20210322 02:40:35.670"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"area_code": "${phone_area_code}",</arg>
<arg>"country_code": "${phone_country_code}",</arg>
<arg>"number": "${phone_number}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 02:40:35.671" level="INFO">${body} = { "area_code": "21", "country_code": "51", "number": "996221236" }</msg>
<status status="PASS" starttime="20210322 02:40:35.670" endtime="20210322 02:40:35.671"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/phones</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:40:35.672" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/d450b1c532dd4d339aa12ea5d1d0a307/phones, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "area_code": "21", "country_code": "51", "number": "996221236" } 
json=None</msg>
<msg timestamp="20210322 02:40:35.892" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:40:35.671" endtime="20210322 02:40:35.893"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:40:35.894" level="INFO">{'id': '293126299c664b2591934eb8f301ac01', 'area_code': '21', 'country_code': '51', 'number': '996221236', 'main': True, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/d450b1c532dd4d339aa12ea5d1d0a307/phones/293126299c664b2591934eb8f301ac01', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/d450b1c532dd4d339aa12ea5d1d0a307', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 02:40:35.893" endtime="20210322 02:40:35.894"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:40:35.895" level="INFO">beaa617ab7c16202</msg>
<status status="PASS" starttime="20210322 02:40:35.895" endtime="20210322 02:40:35.896"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:40:35.897" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:40:35.896" endtime="20210322 02:40:35.897"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${phone_external_key}</var>
</assign>
<msg timestamp="20210322 02:40:35.898" level="INFO">${phone_external_key} = 293126299c664b2591934eb8f301ac01</msg>
<status status="PASS" starttime="20210322 02:40:35.897" endtime="20210322 02:40:35.898"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${phone_external_key}</arg>
</arguments>
<msg timestamp="20210322 02:40:35.899" level="INFO">${phone_external_key} = 293126299c664b2591934eb8f301ac01</msg>
<status status="PASS" starttime="20210322 02:40:35.899" endtime="20210322 02:40:35.899"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:35.667" endtime="20210322 02:40:35.899"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 02:40:35.900" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:40:35.900" endtime="20210322 02:40:35.901"></status>
</kw>
<kw name="criar holder address" library="accreditation_post_holder_address">
<arguments>
<arg>Rio de Janeiro</arg>
<arg>Rio de Janeiro</arg>
<arg>Brasil</arg>
<arg>Bairro de Testes</arg>
<arg>Rua de Testes</arg>
<arg>90</arg>
<arg>apto 200</arg>
<arg>21550987</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:40:35.902" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 02:40:35.902" endtime="20210322 02:40:35.902"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"city": "${city}",</arg>
<arg>"state": "${state}",</arg>
<arg>"country": "${country}",</arg>
<arg>"neighborhood": "${neighborhood}",</arg>
<arg>"street": "${street}",</arg>
<arg>"number": "${number}",</arg>
<arg>"complement": "${complement}",</arg>
<arg>"postal_code": "${postal_code}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 02:40:35.904" level="INFO">${body} = { "city": "Rio de Janeiro", "state": "Rio de Janeiro", "country": "Brasil", "neighborhood": "Bairro de Testes", "street": "Rua de Testes", "number": "90", "complement": "apto 200", "postal_code": "215...</msg>
<status status="PASS" starttime="20210322 02:40:35.903" endtime="20210322 02:40:35.904"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/addresses</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:40:35.905" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/d450b1c532dd4d339aa12ea5d1d0a307/addresses, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "city": "Rio de Janeiro", "state": "Rio de Janeiro", "country": "Brasil", "neighborhood": "Bairro de Testes", "street": "Rua de Testes", "number": "90", "complement": "apto 200", "postal_code": "21550987" } 
json=None</msg>
<msg timestamp="20210322 02:40:36.123" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:40:35.904" endtime="20210322 02:40:36.123"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:40:36.124" level="INFO">{'id': 'acfd759a887a4211842b3a4605f74fd0', 'street': 'Rua de Testes', 'number': '90', 'city': 'Rio de Janeiro', 'complement': 'apto 200', 'state': 'Rio de Janeiro', 'neighborhood': 'Bairro de Testes', 'postal_code': '21550987', 'country': 'Brasil', 'main': True, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/d450b1c532dd4d339aa12ea5d1d0a307/addresses/acfd759a887a4211842b3a4605f74fd0', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/d450b1c532dd4d339aa12ea5d1d0a307', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 02:40:36.124" endtime="20210322 02:40:36.124"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:40:36.125" level="INFO">1ac6b46fb8998424</msg>
<status status="PASS" starttime="20210322 02:40:36.125" endtime="20210322 02:40:36.125"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:40:36.126" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:40:36.126" endtime="20210322 02:40:36.126"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${address_external_key}</var>
</assign>
<msg timestamp="20210322 02:40:36.128" level="INFO">${address_external_key} = acfd759a887a4211842b3a4605f74fd0</msg>
<status status="PASS" starttime="20210322 02:40:36.127" endtime="20210322 02:40:36.128"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${address_external_key}</arg>
</arguments>
<msg timestamp="20210322 02:40:36.129" level="INFO">${address_external_key} = acfd759a887a4211842b3a4605f74fd0</msg>
<status status="PASS" starttime="20210322 02:40:36.128" endtime="20210322 02:40:36.129"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:35.901" endtime="20210322 02:40:36.129"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 02:40:36.130" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:40:36.129" endtime="20210322 02:40:36.130"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>SELFIE</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:40:36.132" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 02:40:36.131" endtime="20210322 02:40:36.132"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 02:40:36.132" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 02:40:36.134" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 02:40:36.132" endtime="20210322 02:40:36.134"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:40:36.136" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/d450b1c532dd4d339aa12ea5d1d0a307/documents?type=SELFIE, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 02:40:36.408" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:40:36.135" endtime="20210322 02:40:36.408"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:40:36.410" level="INFO">{'id': '1aac7238250349fcb89319be74141357', 'document_type': 'selfie', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/d450b1c532dd4d339aa12ea5d1d0a307/documents/1aac7238250349fcb89319be74141357', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/d450b1c532dd4d339aa12ea5d1d0a307', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/d450b1c532dd4d339aa12ea5d1d0a307/documents/1aac7238250349fcb89319be74141357/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 02:40:36.409" endtime="20210322 02:40:36.411"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:40:36.412" level="INFO">c829c343308163aa</msg>
<status status="PASS" starttime="20210322 02:40:36.411" endtime="20210322 02:40:36.412"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:40:36.414" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:40:36.413" endtime="20210322 02:40:36.414"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 02:40:36.416" level="INFO">${document_external_key} = 1aac7238250349fcb89319be74141357</msg>
<status status="PASS" starttime="20210322 02:40:36.415" endtime="20210322 02:40:36.416"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 02:40:36.418" level="INFO">${document_external_key} = 1aac7238250349fcb89319be74141357</msg>
<status status="PASS" starttime="20210322 02:40:36.417" endtime="20210322 02:40:36.418"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:36.130" endtime="20210322 02:40:36.418"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 02:40:36.420" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:40:36.419" endtime="20210322 02:40:36.420"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>RG_FRENTE</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:40:36.422" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 02:40:36.422" endtime="20210322 02:40:36.422"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 02:40:36.423" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 02:40:36.426" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 02:40:36.423" endtime="20210322 02:40:36.426"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:40:36.428" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/d450b1c532dd4d339aa12ea5d1d0a307/documents?type=RG_FRENTE, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 02:40:36.758" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:40:36.426" endtime="20210322 02:40:36.758"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:40:36.758" level="INFO">{'id': '7630732e9a8c4edfb55b5aa9ed58423a', 'document_type': 'rg_frente', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/d450b1c532dd4d339aa12ea5d1d0a307/documents/7630732e9a8c4edfb55b5aa9ed58423a', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/d450b1c532dd4d339aa12ea5d1d0a307', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/d450b1c532dd4d339aa12ea5d1d0a307/documents/7630732e9a8c4edfb55b5aa9ed58423a/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 02:40:36.758" endtime="20210322 02:40:36.758"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:40:36.759" level="INFO">fe8d3e9a7722301a</msg>
<status status="PASS" starttime="20210322 02:40:36.759" endtime="20210322 02:40:36.759"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:40:36.759" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:40:36.759" endtime="20210322 02:40:36.760"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 02:40:36.760" level="INFO">${document_external_key} = 7630732e9a8c4edfb55b5aa9ed58423a</msg>
<status status="PASS" starttime="20210322 02:40:36.760" endtime="20210322 02:40:36.760"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 02:40:36.761" level="INFO">${document_external_key} = 7630732e9a8c4edfb55b5aa9ed58423a</msg>
<status status="PASS" starttime="20210322 02:40:36.761" endtime="20210322 02:40:36.761"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:36.420" endtime="20210322 02:40:36.761"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 02:40:36.762" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:40:36.761" endtime="20210322 02:40:36.762"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>RG_VERSO</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:40:36.763" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 02:40:36.762" endtime="20210322 02:40:36.763"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 02:40:36.763" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 02:40:36.765" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 02:40:36.763" endtime="20210322 02:40:36.765"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:40:36.766" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/d450b1c532dd4d339aa12ea5d1d0a307/documents?type=RG_VERSO, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 02:40:37.016" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:40:36.765" endtime="20210322 02:40:37.016"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:40:37.017" level="INFO">{'id': '5747b734d6e54a51b67b53a97bea3e94', 'document_type': 'rg_verso', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/d450b1c532dd4d339aa12ea5d1d0a307/documents/5747b734d6e54a51b67b53a97bea3e94', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/d450b1c532dd4d339aa12ea5d1d0a307', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/d450b1c532dd4d339aa12ea5d1d0a307/documents/5747b734d6e54a51b67b53a97bea3e94/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 02:40:37.016" endtime="20210322 02:40:37.017"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:40:37.017" level="INFO">2cd5e0a3c6ae50dd</msg>
<status status="PASS" starttime="20210322 02:40:37.017" endtime="20210322 02:40:37.017"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:40:37.018" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:40:37.017" endtime="20210322 02:40:37.018"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 02:40:37.019" level="INFO">${document_external_key} = 5747b734d6e54a51b67b53a97bea3e94</msg>
<status status="PASS" starttime="20210322 02:40:37.019" endtime="20210322 02:40:37.019"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 02:40:37.020" level="INFO">${document_external_key} = 5747b734d6e54a51b67b53a97bea3e94</msg>
<status status="PASS" starttime="20210322 02:40:37.019" endtime="20210322 02:40:37.020"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:36.762" endtime="20210322 02:40:37.020"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 02:40:37.020" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:40:37.020" endtime="20210322 02:40:37.020"></status>
</kw>
<kw name="solicitar aprovação do holder" library="accreditation_request_approval">
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:40:37.021" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 02:40:37.021" endtime="20210322 02:40:37.021"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/approval</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:40:37.022" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/d450b1c532dd4d339aa12ea5d1d0a307/approval, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data=None 
json=None</msg>
<msg timestamp="20210322 02:40:37.316" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:40:37.022" endtime="20210322 02:40:37.317"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:40:37.319" level="INFO">{'message': 'Approval request accepted successfully. Processing analysis'}</msg>
<status status="PASS" starttime="20210322 02:40:37.318" endtime="20210322 02:40:37.320"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:40:37.322" level="INFO">b88e087c06505ea6</msg>
<status status="PASS" starttime="20210322 02:40:37.321" endtime="20210322 02:40:37.322"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:40:37.325" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:40:37.323" endtime="20210322 02:40:37.325"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:37.021" endtime="20210322 02:40:37.325"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 02:40:37.327" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:40:37.326" endtime="20210322 02:40:37.327"></status>
</kw>
<kw name="recebendo notificação de aprovação" library="accreditation_risk_notification">
<kw name="Uuid 4" library="FakerLibrary">
<doc>Generates a random UUID4 string.
:param cast_to: Specify what type the UUID should be cast to. Default is `str`
:type cast_to: callable</doc>
<assign>
<var>${assessment_id}</var>
</assign>
<msg timestamp="20210322 02:40:37.329" level="INFO">${assessment_id} = c9607ae9-7677-4aa4-951a-34326fe53de6</msg>
<status status="PASS" starttime="20210322 02:40:37.329" endtime="20210322 02:40:37.329"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>year</arg>
</arguments>
<assign>
<var>${year}</var>
</assign>
<msg timestamp="20210322 02:40:37.330" level="INFO">${year} = 2021</msg>
<status status="PASS" starttime="20210322 02:40:37.330" endtime="20210322 02:40:37.331"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>month</arg>
</arguments>
<assign>
<var>${month}</var>
</assign>
<msg timestamp="20210322 02:40:37.332" level="INFO">${month} = 03</msg>
<status status="PASS" starttime="20210322 02:40:37.331" endtime="20210322 02:40:37.332"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>day</arg>
</arguments>
<assign>
<var>${day}</var>
</assign>
<msg timestamp="20210322 02:40:37.333" level="INFO">${day} = 22</msg>
<status status="PASS" starttime="20210322 02:40:37.332" endtime="20210322 02:40:37.334"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:40:37.335" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 02:40:37.334" endtime="20210322 02:40:37.335"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "risk.assessment.result",</arg>
<arg>"resource": "business.holder",</arg>
<arg>"created_at": "${year}-${month}-${day} 15:28:56.747Z",</arg>
<arg>"marketplace_id": "${marketplace_external_key}",</arg>
<arg>"object": {</arg>
<arg>"result": "APPROVED",</arg>
<arg>"holder_id": "${holder_external_key}",</arg>
<arg>"applicant_id": "${application_external_key}",</arg>
<arg>"assessment_id": "${assessment_id}"</arg>
<arg>}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 02:40:37.338" level="INFO">${body} = { "type": "risk.assessment.result", "resource": "business.holder", "created_at": "2021-03-22 15:28:56.747Z", "marketplace_id": "f71a8951368a4cc085cf7875ff44e61c", "object": { "result": "APPROVED", "ho...</msg>
<status status="PASS" starttime="20210322 02:40:37.336" endtime="20210322 02:40:37.338"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/admin/internal_operation/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/registration/approval</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:40:37.339" level="INFO">POST Request using : uri=/admin/internal_operation/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/d450b1c532dd4d339aa12ea5d1d0a307/registration/approval, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "risk.assessment.result", "resource": "business.holder", "created_at": "2021-03-22 15:28:56.747Z", "marketplace_id": "f71a8951368a4cc085cf7875ff44e61c", "object": { "result": "APPROVED", "holder_id": "d450b1c532dd4d339aa12ea5d1d0a307", "applicant_id": "bcc25a6751c14b52af1340d40dba78c5", "assessment_id": "c9607ae9-7677-4aa4-951a-34326fe53de6" } } 
json=None</msg>
<msg timestamp="20210322 02:40:37.547" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:40:37.339" endtime="20210322 02:40:37.547"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:40:37.549" level="INFO">{'message': 'Holder approved successfully'}</msg>
<status status="PASS" starttime="20210322 02:40:37.548" endtime="20210322 02:40:37.550"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:40:37.552" level="INFO">1414107c70619bb7</msg>
<status status="PASS" starttime="20210322 02:40:37.551" endtime="20210322 02:40:37.552"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:40:37.554" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:40:37.553" endtime="20210322 02:40:37.555"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 02:40:37.556" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:40:37.555" endtime="20210322 02:40:37.557"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:37.328" endtime="20210322 02:40:37.557"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 02:40:37.559" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:40:37.558" endtime="20210322 02:40:37.560"></status>
</kw>
<kw name="buscar account por holder" library="accounts_get_accounts_by_holder">
<kw name="conectar accounts" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accounts</arg>
<arg>url=${account_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 02:40:37.563" level="INFO">Creating Session using : alias=accounts, url=https://banking-accounts-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 02:40:37.562" endtime="20210322 02:40:37.564"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:37.561" endtime="20210322 02:40:37.564"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accounts</arg>
<arg>/marketplaces/${marketplace_external_key}/holders/${holder_external_key}/accounts</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:40:37.565" level="INFO">GET Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/holders/d450b1c532dd4d339aa12ea5d1d0a307/accounts, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 02:40:38.209" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:40:37.564" endtime="20210322 02:40:38.209"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:40:38.210" level="INFO">{'items': [{'id': '1b30c5d6ecd34982ae363f5d43ae3c3b', 'holder': 'd450b1c532dd4d339aa12ea5d1d0a307', 'balance': '0.00', 'currency': 'BRL', 'routing_number': '001', 'number': '1331678721', 'status': 'active', 'metadata': {}, 'created_at': '2021-03-22T05:40:38.374369', 'updated_at': '2021-03-22T05:40:38.374369', 'primary': True, 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'uri': '/v2/marketplaces/f71a8951368a4cc085cf7875ff44e61c/accounts/1b30c5d6ecd34982ae363f5d43ae3c3b', 'resource': 'payment_account'}], 'has_more': False, 'limit': 100, 'total_pages': 1, 'page': 1, 'offset': 0, 'total': '1', 'query_count': '1'}</msg>
<status status="PASS" starttime="20210322 02:40:38.210" endtime="20210322 02:40:38.211"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:40:38.212" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:40:38.211" endtime="20210322 02:40:38.212"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["id"]}</arg>
</arguments>
<assign>
<var>${account_external_key}</var>
</assign>
<msg timestamp="20210322 02:40:38.214" level="INFO">${account_external_key} = 1b30c5d6ecd34982ae363f5d43ae3c3b</msg>
<status status="PASS" starttime="20210322 02:40:38.213" endtime="20210322 02:40:38.214"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_external_key}</arg>
</arguments>
<msg timestamp="20210322 02:40:38.215" level="INFO">${account_external_key} = 1b30c5d6ecd34982ae363f5d43ae3c3b</msg>
<status status="PASS" starttime="20210322 02:40:38.214" endtime="20210322 02:40:38.215"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["number"]}</arg>
</arguments>
<assign>
<var>${account_number}</var>
</assign>
<msg timestamp="20210322 02:40:38.216" level="INFO">${account_number} = 1331678721</msg>
<status status="PASS" starttime="20210322 02:40:38.215" endtime="20210322 02:40:38.216"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_number}</arg>
</arguments>
<msg timestamp="20210322 02:40:38.218" level="INFO">${account_number} = 1331678721</msg>
<status status="PASS" starttime="20210322 02:40:38.217" endtime="20210322 02:40:38.218"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["routing_number"]}</arg>
</arguments>
<assign>
<var>${account_routing_number}</var>
</assign>
<msg timestamp="20210322 02:40:38.219" level="INFO">${account_routing_number} = 001</msg>
<status status="PASS" starttime="20210322 02:40:38.218" endtime="20210322 02:40:38.219"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_routing_number}</arg>
</arguments>
<msg timestamp="20210322 02:40:38.221" level="INFO">${account_routing_number} = 001</msg>
<status status="PASS" starttime="20210322 02:40:38.220" endtime="20210322 02:40:38.221"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:37.560" endtime="20210322 02:40:38.221"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 02:40:38.222" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:40:38.221" endtime="20210322 02:40:38.222"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:34.982" endtime="20210322 02:40:38.222"></status>
</kw>
<kw name="criar chave pix" library="pix_dict_create_entry">
<arguments>
<arg>email</arg>
<arg>${email_pix}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 02:40:38.224" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 02:40:38.223" endtime="20210322 02:40:38.224"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:38.223" endtime="20210322 02:40:38.224"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${type}</arg>
</arguments>
<msg timestamp="20210322 02:40:38.225" level="INFO">${type} = email</msg>
<status status="PASS" starttime="20210322 02:40:38.224" endtime="20210322 02:40:38.225"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210322 02:40:38.225" level="INFO">${value} = joao-guilherme90@gmail.com</msg>
<status status="PASS" starttime="20210322 02:40:38.225" endtime="20210322 02:40:38.226"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:40:38.226" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 02:40:38.226" endtime="20210322 02:40:38.226"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "${type}",</arg>
<arg>"value": "${value}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 02:40:38.227" level="INFO">${body} = { "type": "email", "value": "joao-guilherme90@gmail.com" }</msg>
<status status="PASS" starttime="20210322 02:40:38.226" endtime="20210322 02:40:38.227"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:40:38.227" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/d450b1c532dd4d339aa12ea5d1d0a307/accounts/1b30c5d6ecd34982ae363f5d43ae3c3b/entries, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "email", "value": "joao-guilherme90@gmail.com" } 
json=None</msg>
<msg timestamp="20210322 02:40:38.866" level="INFO">${response} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20210322 02:40:38.227" endtime="20210322 02:40:38.866"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:40:38.866" level="INFO">{'id': '00e1bc35662c4e8bb63e7ce0234c398e', 'status': 'waiting_ownership_verification', 'created_at': '2021-03-22T02:40:39.718', 'updated_at': '2021-03-22T02:40:39.718', 'key': {'value': 'joao-guilherme90@gmail.com', 'type': 'email'}, 'account': {'id': '1b30c5d6ecd34982ae363f5d43ae3c3b', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': 'd450b1c532dd4d339aa12ea5d1d0a307', 'owner': {'name': 'Holder de teste', 'national_registration': '23495860738', 'type': 'individual'}, 'routing_number': '001', 'number': '1331678721', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}, 'resource': 'pix.entry'}</msg>
<status status="PASS" starttime="20210322 02:40:38.866" endtime="20210322 02:40:38.866"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:40:38.867" level="INFO">91d73e34dc835cf5</msg>
<status status="PASS" starttime="20210322 02:40:38.867" endtime="20210322 02:40:38.867"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 02:40:38.868" level="INFO">202</msg>
<status status="PASS" starttime="20210322 02:40:38.867" endtime="20210322 02:40:38.868"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:40:38.868" level="INFO">${response} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20210322 02:40:38.868" endtime="20210322 02:40:38.869"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${entry_external_key}</var>
</assign>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:40:38.869" endtime="20210322 02:40:38.870"></status>
</kw>
<msg timestamp="20210322 02:40:38.870" level="INFO">${entry_external_key} = 00e1bc35662c4e8bb63e7ce0234c398e</msg>
<status status="PASS" starttime="20210322 02:40:38.869" endtime="20210322 02:40:38.870"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${entry_external_key}</arg>
</arguments>
<msg timestamp="20210322 02:40:38.870" level="INFO">${entry_external_key} = 00e1bc35662c4e8bb63e7ce0234c398e</msg>
<status status="PASS" starttime="20210322 02:40:38.870" endtime="20210322 02:40:38.870"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["key"]["value"]}</arg>
</arguments>
<assign>
<var>${entry_key_value}</var>
</assign>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["key"]["value"]}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:40:38.871" endtime="20210322 02:40:38.872"></status>
</kw>
<msg timestamp="20210322 02:40:38.872" level="INFO">${entry_key_value} = joao-guilherme90@gmail.com</msg>
<status status="PASS" starttime="20210322 02:40:38.871" endtime="20210322 02:40:38.872"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${entry_key_value}</arg>
</arguments>
<msg timestamp="20210322 02:40:38.872" level="INFO">${entry_key_value} = joao-guilherme90@gmail.com</msg>
<status status="PASS" starttime="20210322 02:40:38.872" endtime="20210322 02:40:38.872"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:38.222" endtime="20210322 02:40:38.873"></status>
</kw>
<kw name="validar criação da chave pix" library="asserts">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando status_code</arg>
</arguments>
<msg timestamp="20210322 02:40:38.873" level="INFO">Validando status_code</msg>
<status status="PASS" starttime="20210322 02:40:38.873" endtime="20210322 02:40:38.873"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${type}' == 'evp'</arg>
<arg>Should Be Equal As Integers</arg>
<arg>${response.status_code}</arg>
<arg>201</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'phone'</arg>
<arg>Should Be Equal As Integers</arg>
<arg>${response.status_code}</arg>
<arg>202</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'email'</arg>
<arg>Should Be Equal As Integers</arg>
<arg>${response.status_code}</arg>
<arg>202</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'national_registration'</arg>
<arg>Should Be Equal As Integers</arg>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>202</arg>
</arguments>
<msg timestamp="20210322 02:40:38.874" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:40:38.874" endtime="20210322 02:40:38.874"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:38.873" endtime="20210322 02:40:38.875"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar status da chave</arg>
</arguments>
<msg timestamp="20210322 02:40:38.875" level="INFO">Validar status da chave</msg>
<status status="PASS" starttime="20210322 02:40:38.875" endtime="20210322 02:40:38.875"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${type}' == 'evp'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["status"]}</arg>
<arg>active</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'phone'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["status"]}</arg>
<arg>waiting_ownership_verification</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'email'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["status"]}</arg>
<arg>waiting_ownership_verification</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'national_registration'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["status"]}</arg>
<arg>active</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["status"]}</arg>
<arg>waiting_ownership_verification</arg>
</arguments>
<status status="PASS" starttime="20210322 02:40:38.876" endtime="20210322 02:40:38.876"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:38.875" endtime="20210322 02:40:38.876"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando Tipo da chave PIX</arg>
</arguments>
<msg timestamp="20210322 02:40:38.876" level="INFO">Validando Tipo da chave PIX</msg>
<status status="PASS" starttime="20210322 02:40:38.876" endtime="20210322 02:40:38.876"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${type}' == 'evp'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["type"]}</arg>
<arg>${type}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'phone'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["type"]}</arg>
<arg>${type}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'email'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["type"]}</arg>
<arg>${type}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'national_registration'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["type"]}</arg>
<arg>${type}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["key"]["type"]}</arg>
<arg>${type}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:40:38.877" endtime="20210322 02:40:38.878"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:38.877" endtime="20210322 02:40:38.878"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando Valor da chave PIX</arg>
</arguments>
<msg timestamp="20210322 02:40:38.878" level="INFO">Validando Valor da chave PIX</msg>
<status status="PASS" starttime="20210322 02:40:38.878" endtime="20210322 02:40:38.878"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${type}' == 'evp'</arg>
<arg>Should Not Be Empty</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'phone'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${phone_pix}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'email'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${email_pix}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'national_registration'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${national_registration}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${email_pix}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:40:38.879" endtime="20210322 02:40:38.879"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:38.878" endtime="20210322 02:40:38.879"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando dados da conta</arg>
</arguments>
<msg timestamp="20210322 02:40:38.879" level="INFO">Validando dados da conta</msg>
<status status="PASS" starttime="20210322 02:40:38.879" endtime="20210322 02:40:38.879"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["id"]}</arg>
<arg>${account_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:40:38.880" endtime="20210322 02:40:38.880"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["marketplace"]}</arg>
<arg>${marketplace_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:40:38.880" endtime="20210322 02:40:38.880"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["holder"]}</arg>
<arg>${holder_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:40:38.881" endtime="20210322 02:40:38.881"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["number"]}</arg>
<arg>${account_number}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:40:38.881" endtime="20210322 02:40:38.881"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["routing_number"]}</arg>
<arg>${account_routing_number}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:40:38.881" endtime="20210322 02:40:38.892"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["type"]}</arg>
<arg>CACC</arg>
</arguments>
<status status="PASS" starttime="20210322 02:40:38.892" endtime="20210322 02:40:38.892"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar Proprietário da Account Owner</arg>
</arguments>
<msg timestamp="20210322 02:40:38.892" level="INFO">Validar Proprietário da Account Owner</msg>
<status status="PASS" starttime="20210322 02:40:38.892" endtime="20210322 02:40:38.893"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${holder_type}' == 'individual'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["account"]["owner"]["name"]}</arg>
<arg>${holder_name}</arg>
<arg>ELSE IF</arg>
<arg>'${holder_type}' == 'business'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["account"]["owner"]["name"]}</arg>
<arg>${legal_name}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["account"]["owner"]["name"]}</arg>
<arg>${holder_name}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:40:38.893" endtime="20210322 02:40:38.894"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:38.893" endtime="20210322 02:40:38.894"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar national_registration da Account Owner</arg>
</arguments>
<msg timestamp="20210322 02:40:38.894" level="INFO">Validar national_registration da Account Owner</msg>
<status status="PASS" starttime="20210322 02:40:38.894" endtime="20210322 02:40:38.894"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${holder_type}' == 'individual'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["account"]["owner"]["national_registration"]}</arg>
<arg>${national_registration}</arg>
<arg>ELSE IF</arg>
<arg>'${holder_type}' == 'business'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["account"]["owner"]["national_registration"]}</arg>
<arg>${national_registration}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["account"]["owner"]["national_registration"]}</arg>
<arg>${national_registration}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:40:38.894" endtime="20210322 02:40:38.895"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:38.894" endtime="20210322 02:40:38.895"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar Holder Type do Account Owner</arg>
</arguments>
<msg timestamp="20210322 02:40:38.895" level="INFO">Validar Holder Type do Account Owner</msg>
<status status="PASS" starttime="20210322 02:40:38.895" endtime="20210322 02:40:38.895"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${holder_type}' == 'individual'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["account"]["owner"]["type"]}</arg>
<arg>${holder_type}</arg>
<arg>ELSE IF</arg>
<arg>'${holder_type}' == 'business'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["account"]["owner"]["type"]}</arg>
<arg>${holder_type}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["account"]["owner"]["type"]}</arg>
<arg>${holder_type}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:40:38.896" endtime="20210322 02:40:38.896"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:38.895" endtime="20210322 02:40:38.896"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar PSP</arg>
</arguments>
<msg timestamp="20210322 02:40:38.896" level="INFO">Validar PSP</msg>
<status status="PASS" starttime="20210322 02:40:38.896" endtime="20210322 02:40:38.896"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["psp"]["code"]}</arg>
<arg>19468242</arg>
</arguments>
<status status="PASS" starttime="20210322 02:40:38.896" endtime="20210322 02:40:38.897"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["psp"]["name"]}</arg>
<arg>Zoop Tecnologia e Meios de Pagamento S.A.</arg>
</arguments>
<status status="PASS" starttime="20210322 02:40:38.897" endtime="20210322 02:40:38.897"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:38.873" endtime="20210322 02:40:38.897"></status>
</kw>
<kw name="excluir chave pix" library="pix_dict_delete_entry">
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 02:40:38.898" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 02:40:38.898" endtime="20210322 02:40:38.898"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:38.898" endtime="20210322 02:40:38.898"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:40:38.899" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 02:40:38.899" endtime="20210322 02:40:38.899"></status>
</kw>
<kw name="Delete Request" library="RequestsLibrary">
<doc>Send a DELETE request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries/${entry_external_key}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:40:38.899" level="INFO">DELETE Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/d450b1c532dd4d339aa12ea5d1d0a307/accounts/1b30c5d6ecd34982ae363f5d43ae3c3b/entries/00e1bc35662c4e8bb63e7ce0234c398e, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data=None 
json=None</msg>
<msg timestamp="20210322 02:40:39.529" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:40:38.899" endtime="20210322 02:40:39.529"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:40:39.529" level="INFO">{'message': 'Entry removed successfully'}</msg>
<status status="PASS" starttime="20210322 02:40:39.529" endtime="20210322 02:40:39.529"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:40:39.530" level="INFO">b26cf9ee7aba6d39</msg>
<status status="PASS" starttime="20210322 02:40:39.530" endtime="20210322 02:40:39.530"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 02:40:39.530" level="INFO">200</msg>
<status status="PASS" starttime="20210322 02:40:39.530" endtime="20210322 02:40:39.530"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:40:39.531" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:40:39.531" endtime="20210322 02:40:39.531"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:38.897" endtime="20210322 02:40:39.531"></status>
</kw>
<kw name="validar exclusão da chave pix" library="asserts">
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 02:40:39.532" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:40:39.531" endtime="20210322 02:40:39.532"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["message"]}</arg>
<arg>Entry removed successfully</arg>
</arguments>
<status status="PASS" starttime="20210322 02:40:39.532" endtime="20210322 02:40:39.532"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:39.531" endtime="20210322 02:40:39.532"></status>
</kw>
<doc>Fluxo Básico</doc>
<tags>
<tag>regression_test</tag>
<tag>smoke_test</tag>
</tags>
<status status="PASS" starttime="20210322 02:40:34.980" endtime="20210322 02:40:39.532" critical="yes"></status>
</test>
<test id="s1-s1-s4-t4" name="Cenário: Excluir Chave de Endereçamento do tipo CPF">
<kw name="criar holder individual ativo" library="accreditation_create_holder_active">
<kw name="conectar accreditation" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accreditation</arg>
<arg>url=${accreditation_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 02:40:39.534" level="INFO">Creating Session using : alias=accreditation, url=https://banking-accreditation-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 02:40:39.534" endtime="20210322 02:40:39.534"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:39.533" endtime="20210322 02:40:39.534"></status>
</kw>
<kw name="Cpf" library="FakerLibrary">
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 02:40:39.534" level="INFO">${national_registration} = 053.286.974-56</msg>
<status status="PASS" starttime="20210322 02:40:39.534" endtime="20210322 02:40:39.535"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${national_registration}</arg>
<arg>.</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 02:40:39.535" level="INFO">${national_registration} = 053286974-56</msg>
<status status="PASS" starttime="20210322 02:40:39.535" endtime="20210322 02:40:39.535"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${national_registration}</arg>
<arg>-</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 02:40:39.536" level="INFO">${national_registration} = 05328697456</msg>
<status status="PASS" starttime="20210322 02:40:39.535" endtime="20210322 02:40:39.536"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${national_registration}</arg>
</arguments>
<msg timestamp="20210322 02:40:39.536" level="INFO">${national_registration} = 05328697456</msg>
<status status="PASS" starttime="20210322 02:40:39.536" endtime="20210322 02:40:39.536"></status>
</kw>
<kw name="Rg" library="FakerLibrary">
<doc>Brazilian RG, return plain numbers.
Check:  https://www.ngmatematica.com/2014/02/como-determinar-o-digito-verificador-do.html</doc>
<assign>
<var>${identity_card}</var>
</assign>
<msg timestamp="20210322 02:40:39.537" level="INFO">${identity_card} = 738620452</msg>
<status status="PASS" starttime="20210322 02:40:39.536" endtime="20210322 02:40:39.537"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${identity_card}</arg>
</arguments>
<msg timestamp="20210322 02:40:39.537" level="INFO">${identity_card} = 738620452</msg>
<status status="PASS" starttime="20210322 02:40:39.537" endtime="20210322 02:40:39.537"></status>
</kw>
<kw name="criar holder individual" library="accreditation_post_holder_individual">
<arguments>
<arg>holder_type=individual</arg>
<arg>holder_name=${holder_name}</arg>
<arg>email=${email}</arg>
<arg>national_registration=${national_registration}</arg>
<arg>revenue=${revenue}</arg>
<arg>birthday=${birthday}</arg>
<arg>mothers_name=${mothers_name}</arg>
<arg>identity_card=${identity_card}</arg>
<arg>pep=false</arg>
<arg>cbo=${cbo}</arg>
</arguments>
<kw name="conectar accreditation" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accreditation</arg>
<arg>url=${accreditation_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 02:40:39.539" level="INFO">Creating Session using : alias=accreditation, url=https://banking-accreditation-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 02:40:39.539" endtime="20210322 02:40:39.539"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:39.538" endtime="20210322 02:40:39.539"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_type}</arg>
</arguments>
<msg timestamp="20210322 02:40:39.540" level="INFO">${holder_type} = individual</msg>
<status status="PASS" starttime="20210322 02:40:39.540" endtime="20210322 02:40:39.540"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_name}</arg>
</arguments>
<msg timestamp="20210322 02:40:39.540" level="INFO">${holder_name} = Holder de teste</msg>
<status status="PASS" starttime="20210322 02:40:39.540" endtime="20210322 02:40:39.540"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:40:39.541" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 02:40:39.540" endtime="20210322 02:40:39.541"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "${holder_type}",</arg>
<arg>"name": "${holder_name}",</arg>
<arg>"email": "${email}",</arg>
<arg>"national_registration": "${national_registration}",</arg>
<arg>"revenue": ${revenue},</arg>
<arg>"birthday": "${birthday}",</arg>
<arg>"mothers_name": "${mothers_name}",</arg>
<arg>"identity_card": "${identity_card}",</arg>
<arg>"pep": false,</arg>
<arg>"cbo": ${cbo}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 02:40:39.541" level="INFO">${body} = { "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "05328697456", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder",...</msg>
<status status="PASS" starttime="20210322 02:40:39.541" endtime="20210322 02:40:39.541"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:40:39.542" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "05328697456", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder", "identity_card": "738620452", "pep": false, "cbo": 821450 } 
json=None</msg>
<msg timestamp="20210322 02:40:40.174" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:40:39.542" endtime="20210322 02:40:40.174"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:40:40.175" level="INFO">{'id': '62a895811eb042fda6b473a191988ef4', 'name': 'Holder de teste', 'revenue': 5500.0, 'email': 'teste@teste.com.br', 'status': 'waiting_info_and_documents', 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'marketplace_name': 'Marketplace de Teste', 'created_at': '2021-03-22T02:40:41.006817', 'updated_at': '2021-03-22T02:40:41.006818', 'type': 'individual', 'national_registration': '05328697456', 'birthday': '1988-04-23', 'mothers_name': 'Mãe do Holder', 'identity_card': '738620452', 'pep': False, 'cbo': '821450', '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/62a895811eb042fda6b473a191988ef4', 'type': 'GET'}, 'phones': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/62a895811eb042fda6b473a191988ef4/phones', 'type': 'GET'}, 'addresses': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/62a895811eb042fda6b473a191988ef4/addresses', 'type': 'GET'}, 'documents': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/62a895811eb042fda6b473a191988ef4/documents', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 02:40:40.174" endtime="20210322 02:40:40.175"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:40:40.176" level="INFO">504c9d4f873369bd</msg>
<status status="PASS" starttime="20210322 02:40:40.175" endtime="20210322 02:40:40.176"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${body}</arg>
</arguments>
<msg timestamp="20210322 02:40:40.177" level="INFO">{ "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "05328697456", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder", "identity_card": "738620452", "pep": false, "cbo": 821450 }</msg>
<status status="PASS" starttime="20210322 02:40:40.177" endtime="20210322 02:40:40.177"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:40:40.177" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:40:40.177" endtime="20210322 02:40:40.177"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${holder_external_key}</var>
</assign>
<msg timestamp="20210322 02:40:40.178" level="INFO">${holder_external_key} = 62a895811eb042fda6b473a191988ef4</msg>
<status status="PASS" starttime="20210322 02:40:40.178" endtime="20210322 02:40:40.178"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_external_key}</arg>
</arguments>
<msg timestamp="20210322 02:40:40.179" level="INFO">${holder_external_key} = 62a895811eb042fda6b473a191988ef4</msg>
<status status="PASS" starttime="20210322 02:40:40.179" endtime="20210322 02:40:40.179"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:39.537" endtime="20210322 02:40:40.179"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_name}</arg>
</arguments>
<msg timestamp="20210322 02:40:40.180" level="INFO">${holder_name} = Holder de teste</msg>
<status status="PASS" starttime="20210322 02:40:40.180" endtime="20210322 02:40:40.180"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 02:40:40.181" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:40:40.181" endtime="20210322 02:40:40.181"></status>
</kw>
<kw name="criar holder phone" library="accreditation_post_holder_phone">
<arguments>
<arg>21</arg>
<arg>51</arg>
<arg>996221236</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:40:40.182" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 02:40:40.182" endtime="20210322 02:40:40.182"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"area_code": "${phone_area_code}",</arg>
<arg>"country_code": "${phone_country_code}",</arg>
<arg>"number": "${phone_number}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 02:40:40.183" level="INFO">${body} = { "area_code": "21", "country_code": "51", "number": "996221236" }</msg>
<status status="PASS" starttime="20210322 02:40:40.182" endtime="20210322 02:40:40.183"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/phones</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:40:40.184" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/62a895811eb042fda6b473a191988ef4/phones, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "area_code": "21", "country_code": "51", "number": "996221236" } 
json=None</msg>
<msg timestamp="20210322 02:40:40.407" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:40:40.183" endtime="20210322 02:40:40.407"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:40:40.408" level="INFO">{'id': '61767b76a746404dac591dbc524786a4', 'area_code': '21', 'country_code': '51', 'number': '996221236', 'main': True, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/62a895811eb042fda6b473a191988ef4/phones/61767b76a746404dac591dbc524786a4', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/62a895811eb042fda6b473a191988ef4', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 02:40:40.408" endtime="20210322 02:40:40.408"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:40:40.409" level="INFO">e2835be8f04d7447</msg>
<status status="PASS" starttime="20210322 02:40:40.408" endtime="20210322 02:40:40.409"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:40:40.410" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:40:40.409" endtime="20210322 02:40:40.410"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${phone_external_key}</var>
</assign>
<msg timestamp="20210322 02:40:40.411" level="INFO">${phone_external_key} = 61767b76a746404dac591dbc524786a4</msg>
<status status="PASS" starttime="20210322 02:40:40.410" endtime="20210322 02:40:40.411"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${phone_external_key}</arg>
</arguments>
<msg timestamp="20210322 02:40:40.411" level="INFO">${phone_external_key} = 61767b76a746404dac591dbc524786a4</msg>
<status status="PASS" starttime="20210322 02:40:40.411" endtime="20210322 02:40:40.411"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:40.181" endtime="20210322 02:40:40.412"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 02:40:40.412" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:40:40.412" endtime="20210322 02:40:40.412"></status>
</kw>
<kw name="criar holder address" library="accreditation_post_holder_address">
<arguments>
<arg>Rio de Janeiro</arg>
<arg>Rio de Janeiro</arg>
<arg>Brasil</arg>
<arg>Bairro de Testes</arg>
<arg>Rua de Testes</arg>
<arg>90</arg>
<arg>apto 200</arg>
<arg>21550987</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:40:40.413" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 02:40:40.413" endtime="20210322 02:40:40.413"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"city": "${city}",</arg>
<arg>"state": "${state}",</arg>
<arg>"country": "${country}",</arg>
<arg>"neighborhood": "${neighborhood}",</arg>
<arg>"street": "${street}",</arg>
<arg>"number": "${number}",</arg>
<arg>"complement": "${complement}",</arg>
<arg>"postal_code": "${postal_code}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 02:40:40.414" level="INFO">${body} = { "city": "Rio de Janeiro", "state": "Rio de Janeiro", "country": "Brasil", "neighborhood": "Bairro de Testes", "street": "Rua de Testes", "number": "90", "complement": "apto 200", "postal_code": "215...</msg>
<status status="PASS" starttime="20210322 02:40:40.414" endtime="20210322 02:40:40.414"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/addresses</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:40:40.415" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/62a895811eb042fda6b473a191988ef4/addresses, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "city": "Rio de Janeiro", "state": "Rio de Janeiro", "country": "Brasil", "neighborhood": "Bairro de Testes", "street": "Rua de Testes", "number": "90", "complement": "apto 200", "postal_code": "21550987" } 
json=None</msg>
<msg timestamp="20210322 02:40:40.643" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:40:40.415" endtime="20210322 02:40:40.643"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:40:40.646" level="INFO">{'id': 'c95a57fa86824679855987123dd81718', 'street': 'Rua de Testes', 'number': '90', 'city': 'Rio de Janeiro', 'complement': 'apto 200', 'state': 'Rio de Janeiro', 'neighborhood': 'Bairro de Testes', 'postal_code': '21550987', 'country': 'Brasil', 'main': True, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/62a895811eb042fda6b473a191988ef4/addresses/c95a57fa86824679855987123dd81718', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/62a895811eb042fda6b473a191988ef4', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 02:40:40.644" endtime="20210322 02:40:40.646"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:40:40.648" level="INFO">2a3c4e4ad16ee5f8</msg>
<status status="PASS" starttime="20210322 02:40:40.647" endtime="20210322 02:40:40.648"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:40:40.650" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:40:40.649" endtime="20210322 02:40:40.651"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${address_external_key}</var>
</assign>
<msg timestamp="20210322 02:40:40.653" level="INFO">${address_external_key} = c95a57fa86824679855987123dd81718</msg>
<status status="PASS" starttime="20210322 02:40:40.651" endtime="20210322 02:40:40.653"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${address_external_key}</arg>
</arguments>
<msg timestamp="20210322 02:40:40.655" level="INFO">${address_external_key} = c95a57fa86824679855987123dd81718</msg>
<status status="PASS" starttime="20210322 02:40:40.654" endtime="20210322 02:40:40.656"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:40.412" endtime="20210322 02:40:40.656"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 02:40:40.657" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:40:40.656" endtime="20210322 02:40:40.657"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>SELFIE</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:40:40.659" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 02:40:40.658" endtime="20210322 02:40:40.659"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 02:40:40.659" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 02:40:40.662" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 02:40:40.659" endtime="20210322 02:40:40.662"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:40:40.663" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/62a895811eb042fda6b473a191988ef4/documents?type=SELFIE, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 02:40:40.919" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:40:40.662" endtime="20210322 02:40:40.919"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:40:40.921" level="INFO">{'id': 'd00f05e9382340c9ab05563f8bf5d94b', 'document_type': 'selfie', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/62a895811eb042fda6b473a191988ef4/documents/d00f05e9382340c9ab05563f8bf5d94b', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/62a895811eb042fda6b473a191988ef4', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/62a895811eb042fda6b473a191988ef4/documents/d00f05e9382340c9ab05563f8bf5d94b/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 02:40:40.919" endtime="20210322 02:40:40.921"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:40:40.922" level="INFO">02197d67d22bba80</msg>
<status status="PASS" starttime="20210322 02:40:40.922" endtime="20210322 02:40:40.923"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:40:40.924" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:40:40.923" endtime="20210322 02:40:40.924"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 02:40:40.925" level="INFO">${document_external_key} = d00f05e9382340c9ab05563f8bf5d94b</msg>
<status status="PASS" starttime="20210322 02:40:40.924" endtime="20210322 02:40:40.925"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 02:40:40.926" level="INFO">${document_external_key} = d00f05e9382340c9ab05563f8bf5d94b</msg>
<status status="PASS" starttime="20210322 02:40:40.926" endtime="20210322 02:40:40.927"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:40.657" endtime="20210322 02:40:40.928"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 02:40:40.928" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:40:40.928" endtime="20210322 02:40:40.928"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>RG_FRENTE</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:40:40.929" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 02:40:40.929" endtime="20210322 02:40:40.929"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 02:40:40.930" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 02:40:40.932" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 02:40:40.930" endtime="20210322 02:40:40.932"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:40:40.933" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/62a895811eb042fda6b473a191988ef4/documents?type=RG_FRENTE, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 02:40:41.220" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:40:40.932" endtime="20210322 02:40:41.220"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:40:41.223" level="INFO">{'id': 'b4bef9358924490bbc2dc9c506dedd24', 'document_type': 'rg_frente', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/62a895811eb042fda6b473a191988ef4/documents/b4bef9358924490bbc2dc9c506dedd24', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/62a895811eb042fda6b473a191988ef4', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/62a895811eb042fda6b473a191988ef4/documents/b4bef9358924490bbc2dc9c506dedd24/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 02:40:41.221" endtime="20210322 02:40:41.223"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:40:41.224" level="INFO">342508a517b76af3</msg>
<status status="PASS" starttime="20210322 02:40:41.224" endtime="20210322 02:40:41.225"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:40:41.226" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:40:41.225" endtime="20210322 02:40:41.226"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 02:40:41.228" level="INFO">${document_external_key} = b4bef9358924490bbc2dc9c506dedd24</msg>
<status status="PASS" starttime="20210322 02:40:41.226" endtime="20210322 02:40:41.228"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 02:40:41.229" level="INFO">${document_external_key} = b4bef9358924490bbc2dc9c506dedd24</msg>
<status status="PASS" starttime="20210322 02:40:41.228" endtime="20210322 02:40:41.229"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:40.928" endtime="20210322 02:40:41.229"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 02:40:41.230" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:40:41.230" endtime="20210322 02:40:41.230"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>RG_VERSO</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:40:41.232" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 02:40:41.232" endtime="20210322 02:40:41.232"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 02:40:41.233" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 02:40:41.235" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 02:40:41.232" endtime="20210322 02:40:41.235"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:40:41.237" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/62a895811eb042fda6b473a191988ef4/documents?type=RG_VERSO, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 02:40:41.503" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:40:41.236" endtime="20210322 02:40:41.503"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:40:41.505" level="INFO">{'id': 'ef483ffb2c084e5bb206b6c6b9972bcf', 'document_type': 'rg_verso', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/62a895811eb042fda6b473a191988ef4/documents/ef483ffb2c084e5bb206b6c6b9972bcf', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/62a895811eb042fda6b473a191988ef4', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/62a895811eb042fda6b473a191988ef4/documents/ef483ffb2c084e5bb206b6c6b9972bcf/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 02:40:41.504" endtime="20210322 02:40:41.506"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:40:41.508" level="INFO">b091947529defbc4</msg>
<status status="PASS" starttime="20210322 02:40:41.507" endtime="20210322 02:40:41.508"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:40:41.510" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:40:41.509" endtime="20210322 02:40:41.510"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 02:40:41.512" level="INFO">${document_external_key} = ef483ffb2c084e5bb206b6c6b9972bcf</msg>
<status status="PASS" starttime="20210322 02:40:41.511" endtime="20210322 02:40:41.513"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 02:40:41.514" level="INFO">${document_external_key} = ef483ffb2c084e5bb206b6c6b9972bcf</msg>
<status status="PASS" starttime="20210322 02:40:41.513" endtime="20210322 02:40:41.514"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:41.231" endtime="20210322 02:40:41.514"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 02:40:41.515" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:40:41.515" endtime="20210322 02:40:41.515"></status>
</kw>
<kw name="solicitar aprovação do holder" library="accreditation_request_approval">
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:40:41.517" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 02:40:41.517" endtime="20210322 02:40:41.517"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/approval</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:40:41.518" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/62a895811eb042fda6b473a191988ef4/approval, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data=None 
json=None</msg>
<msg timestamp="20210322 02:40:41.806" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:40:41.518" endtime="20210322 02:40:41.806"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:40:41.807" level="INFO">{'message': 'Approval request accepted successfully. Processing analysis'}</msg>
<status status="PASS" starttime="20210322 02:40:41.807" endtime="20210322 02:40:41.809"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:40:41.809" level="INFO">1ffd1e6c6d150604</msg>
<status status="PASS" starttime="20210322 02:40:41.809" endtime="20210322 02:40:41.809"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:40:41.810" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:40:41.810" endtime="20210322 02:40:41.810"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:41.516" endtime="20210322 02:40:41.811"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 02:40:41.812" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:40:41.811" endtime="20210322 02:40:41.812"></status>
</kw>
<kw name="recebendo notificação de aprovação" library="accreditation_risk_notification">
<kw name="Uuid 4" library="FakerLibrary">
<doc>Generates a random UUID4 string.
:param cast_to: Specify what type the UUID should be cast to. Default is `str`
:type cast_to: callable</doc>
<assign>
<var>${assessment_id}</var>
</assign>
<msg timestamp="20210322 02:40:41.814" level="INFO">${assessment_id} = 84b5ae80-66e6-42df-953d-d5194d6987c4</msg>
<status status="PASS" starttime="20210322 02:40:41.814" endtime="20210322 02:40:41.814"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>year</arg>
</arguments>
<assign>
<var>${year}</var>
</assign>
<msg timestamp="20210322 02:40:41.815" level="INFO">${year} = 2021</msg>
<status status="PASS" starttime="20210322 02:40:41.814" endtime="20210322 02:40:41.815"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>month</arg>
</arguments>
<assign>
<var>${month}</var>
</assign>
<msg timestamp="20210322 02:40:41.816" level="INFO">${month} = 03</msg>
<status status="PASS" starttime="20210322 02:40:41.815" endtime="20210322 02:40:41.816"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>day</arg>
</arguments>
<assign>
<var>${day}</var>
</assign>
<msg timestamp="20210322 02:40:41.816" level="INFO">${day} = 22</msg>
<status status="PASS" starttime="20210322 02:40:41.816" endtime="20210322 02:40:41.817"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:40:41.817" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 02:40:41.817" endtime="20210322 02:40:41.817"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "risk.assessment.result",</arg>
<arg>"resource": "business.holder",</arg>
<arg>"created_at": "${year}-${month}-${day} 15:28:56.747Z",</arg>
<arg>"marketplace_id": "${marketplace_external_key}",</arg>
<arg>"object": {</arg>
<arg>"result": "APPROVED",</arg>
<arg>"holder_id": "${holder_external_key}",</arg>
<arg>"applicant_id": "${application_external_key}",</arg>
<arg>"assessment_id": "${assessment_id}"</arg>
<arg>}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 02:40:41.819" level="INFO">${body} = { "type": "risk.assessment.result", "resource": "business.holder", "created_at": "2021-03-22 15:28:56.747Z", "marketplace_id": "f71a8951368a4cc085cf7875ff44e61c", "object": { "result": "APPROVED", "ho...</msg>
<status status="PASS" starttime="20210322 02:40:41.818" endtime="20210322 02:40:41.819"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/admin/internal_operation/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/registration/approval</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:40:41.820" level="INFO">POST Request using : uri=/admin/internal_operation/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/62a895811eb042fda6b473a191988ef4/registration/approval, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "risk.assessment.result", "resource": "business.holder", "created_at": "2021-03-22 15:28:56.747Z", "marketplace_id": "f71a8951368a4cc085cf7875ff44e61c", "object": { "result": "APPROVED", "holder_id": "62a895811eb042fda6b473a191988ef4", "applicant_id": "bcc25a6751c14b52af1340d40dba78c5", "assessment_id": "84b5ae80-66e6-42df-953d-d5194d6987c4" } } 
json=None</msg>
<msg timestamp="20210322 02:40:42.070" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:40:41.819" endtime="20210322 02:40:42.070"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:40:42.072" level="INFO">{'message': 'Holder approved successfully'}</msg>
<status status="PASS" starttime="20210322 02:40:42.071" endtime="20210322 02:40:42.072"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:40:42.073" level="INFO">14d3ade6f72924fa</msg>
<status status="PASS" starttime="20210322 02:40:42.073" endtime="20210322 02:40:42.074"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:40:42.075" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:40:42.074" endtime="20210322 02:40:42.075"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 02:40:42.076" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:40:42.076" endtime="20210322 02:40:42.076"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:41.813" endtime="20210322 02:40:42.077"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 02:40:42.077" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:40:42.077" endtime="20210322 02:40:42.078"></status>
</kw>
<kw name="buscar account por holder" library="accounts_get_accounts_by_holder">
<kw name="conectar accounts" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accounts</arg>
<arg>url=${account_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 02:40:42.080" level="INFO">Creating Session using : alias=accounts, url=https://banking-accounts-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 02:40:42.079" endtime="20210322 02:40:42.081"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:42.079" endtime="20210322 02:40:42.081"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accounts</arg>
<arg>/marketplaces/${marketplace_external_key}/holders/${holder_external_key}/accounts</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:40:42.082" level="INFO">GET Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/holders/62a895811eb042fda6b473a191988ef4/accounts, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 02:40:42.701" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:40:42.081" endtime="20210322 02:40:42.702"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:40:42.704" level="INFO">{'items': [{'id': '2d7a850e52d14067bd16f174bfe9e8b6', 'holder': '62a895811eb042fda6b473a191988ef4', 'balance': '0.00', 'currency': 'BRL', 'routing_number': '001', 'number': '3432102730', 'status': 'active', 'metadata': {}, 'created_at': '2021-03-22T05:40:42.8658', 'updated_at': '2021-03-22T05:40:42.8658', 'primary': True, 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'uri': '/v2/marketplaces/f71a8951368a4cc085cf7875ff44e61c/accounts/2d7a850e52d14067bd16f174bfe9e8b6', 'resource': 'payment_account'}], 'has_more': False, 'limit': 100, 'total_pages': 1, 'page': 1, 'offset': 0, 'total': '1', 'query_count': '1'}</msg>
<status status="PASS" starttime="20210322 02:40:42.702" endtime="20210322 02:40:42.704"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:40:42.706" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:40:42.705" endtime="20210322 02:40:42.707"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["id"]}</arg>
</arguments>
<assign>
<var>${account_external_key}</var>
</assign>
<msg timestamp="20210322 02:40:42.709" level="INFO">${account_external_key} = 2d7a850e52d14067bd16f174bfe9e8b6</msg>
<status status="PASS" starttime="20210322 02:40:42.708" endtime="20210322 02:40:42.709"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_external_key}</arg>
</arguments>
<msg timestamp="20210322 02:40:42.711" level="INFO">${account_external_key} = 2d7a850e52d14067bd16f174bfe9e8b6</msg>
<status status="PASS" starttime="20210322 02:40:42.710" endtime="20210322 02:40:42.711"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["number"]}</arg>
</arguments>
<assign>
<var>${account_number}</var>
</assign>
<msg timestamp="20210322 02:40:42.713" level="INFO">${account_number} = 3432102730</msg>
<status status="PASS" starttime="20210322 02:40:42.711" endtime="20210322 02:40:42.713"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_number}</arg>
</arguments>
<msg timestamp="20210322 02:40:42.714" level="INFO">${account_number} = 3432102730</msg>
<status status="PASS" starttime="20210322 02:40:42.714" endtime="20210322 02:40:42.715"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["routing_number"]}</arg>
</arguments>
<assign>
<var>${account_routing_number}</var>
</assign>
<msg timestamp="20210322 02:40:42.716" level="INFO">${account_routing_number} = 001</msg>
<status status="PASS" starttime="20210322 02:40:42.715" endtime="20210322 02:40:42.717"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_routing_number}</arg>
</arguments>
<msg timestamp="20210322 02:40:42.718" level="INFO">${account_routing_number} = 001</msg>
<status status="PASS" starttime="20210322 02:40:42.717" endtime="20210322 02:40:42.718"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:42.078" endtime="20210322 02:40:42.718"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 02:40:42.720" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:40:42.719" endtime="20210322 02:40:42.720"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:39.533" endtime="20210322 02:40:42.720"></status>
</kw>
<kw name="criar chave pix" library="pix_dict_create_entry">
<arguments>
<arg>national_registration</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 02:40:42.723" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 02:40:42.722" endtime="20210322 02:40:42.723"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:42.721" endtime="20210322 02:40:42.723"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${type}</arg>
</arguments>
<msg timestamp="20210322 02:40:42.724" level="INFO">${type} = national_registration</msg>
<status status="PASS" starttime="20210322 02:40:42.724" endtime="20210322 02:40:42.724"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210322 02:40:42.725" level="INFO">${value} = </msg>
<status status="PASS" starttime="20210322 02:40:42.724" endtime="20210322 02:40:42.725"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:40:42.726" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 02:40:42.725" endtime="20210322 02:40:42.726"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "${type}",</arg>
<arg>"value": "${value}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 02:40:42.727" level="INFO">${body} = { "type": "national_registration", "value": "" }</msg>
<status status="PASS" starttime="20210322 02:40:42.727" endtime="20210322 02:40:42.727"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:40:42.729" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/62a895811eb042fda6b473a191988ef4/accounts/2d7a850e52d14067bd16f174bfe9e8b6/entries, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "national_registration", "value": "" } 
json=None</msg>
<msg timestamp="20210322 02:40:44.388" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:40:42.728" endtime="20210322 02:40:44.388"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:40:44.389" level="INFO">{'id': 'a03bd162eb2a4334b8009bfc20b34fa2', 'status': 'active', 'created_at': '2021-03-22T02:40:44.239', 'updated_at': '2021-03-22T02:40:44.239', 'key': {'value': '05328697456', 'type': 'national_registration'}, 'account': {'id': '2d7a850e52d14067bd16f174bfe9e8b6', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': '62a895811eb042fda6b473a191988ef4', 'owner': {'name': 'Holder de teste', 'national_registration': '05328697456', 'type': 'individual'}, 'routing_number': '001', 'number': '3432102730', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}, 'resource': 'pix.entry'}</msg>
<status status="PASS" starttime="20210322 02:40:44.389" endtime="20210322 02:40:44.389"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:40:44.389" level="INFO">eef5e53684312f6c</msg>
<status status="PASS" starttime="20210322 02:40:44.389" endtime="20210322 02:40:44.390"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 02:40:44.390" level="INFO">201</msg>
<status status="PASS" starttime="20210322 02:40:44.390" endtime="20210322 02:40:44.390"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:40:44.390" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:40:44.390" endtime="20210322 02:40:44.390"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${entry_external_key}</var>
</assign>
<msg timestamp="20210322 02:40:44.391" level="INFO">${entry_external_key} = a03bd162eb2a4334b8009bfc20b34fa2</msg>
<status status="PASS" starttime="20210322 02:40:44.391" endtime="20210322 02:40:44.391"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${entry_external_key}</arg>
</arguments>
<msg timestamp="20210322 02:40:44.392" level="INFO">${entry_external_key} = a03bd162eb2a4334b8009bfc20b34fa2</msg>
<status status="PASS" starttime="20210322 02:40:44.391" endtime="20210322 02:40:44.392"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["key"]["value"]}</arg>
</arguments>
<assign>
<var>${entry_key_value}</var>
</assign>
<msg timestamp="20210322 02:40:44.393" level="INFO">${entry_key_value} = 05328697456</msg>
<status status="PASS" starttime="20210322 02:40:44.392" endtime="20210322 02:40:44.393"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${entry_key_value}</arg>
</arguments>
<msg timestamp="20210322 02:40:44.393" level="INFO">${entry_key_value} = 05328697456</msg>
<status status="PASS" starttime="20210322 02:40:44.393" endtime="20210322 02:40:44.393"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:42.720" endtime="20210322 02:40:44.393"></status>
</kw>
<kw name="validar criação da chave pix" library="asserts">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando status_code</arg>
</arguments>
<msg timestamp="20210322 02:40:44.393" level="INFO">Validando status_code</msg>
<status status="PASS" starttime="20210322 02:40:44.393" endtime="20210322 02:40:44.393"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${type}' == 'evp'</arg>
<arg>Should Be Equal As Integers</arg>
<arg>${response.status_code}</arg>
<arg>201</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'phone'</arg>
<arg>Should Be Equal As Integers</arg>
<arg>${response.status_code}</arg>
<arg>202</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'email'</arg>
<arg>Should Be Equal As Integers</arg>
<arg>${response.status_code}</arg>
<arg>202</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'national_registration'</arg>
<arg>Should Be Equal As Integers</arg>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 02:40:44.395" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:40:44.394" endtime="20210322 02:40:44.395"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:44.394" endtime="20210322 02:40:44.395"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar status da chave</arg>
</arguments>
<msg timestamp="20210322 02:40:44.395" level="INFO">Validar status da chave</msg>
<status status="PASS" starttime="20210322 02:40:44.395" endtime="20210322 02:40:44.395"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${type}' == 'evp'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["status"]}</arg>
<arg>active</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'phone'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["status"]}</arg>
<arg>waiting_ownership_verification</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'email'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["status"]}</arg>
<arg>waiting_ownership_verification</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'national_registration'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["status"]}</arg>
<arg>active</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["status"]}</arg>
<arg>active</arg>
</arguments>
<status status="PASS" starttime="20210322 02:40:44.396" endtime="20210322 02:40:44.396"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:44.395" endtime="20210322 02:40:44.396"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando Tipo da chave PIX</arg>
</arguments>
<msg timestamp="20210322 02:40:44.396" level="INFO">Validando Tipo da chave PIX</msg>
<status status="PASS" starttime="20210322 02:40:44.396" endtime="20210322 02:40:44.396"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${type}' == 'evp'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["type"]}</arg>
<arg>${type}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'phone'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["type"]}</arg>
<arg>${type}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'email'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["type"]}</arg>
<arg>${type}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'national_registration'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["type"]}</arg>
<arg>${type}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["key"]["type"]}</arg>
<arg>${type}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:40:44.397" endtime="20210322 02:40:44.397"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:44.396" endtime="20210322 02:40:44.397"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando Valor da chave PIX</arg>
</arguments>
<msg timestamp="20210322 02:40:44.398" level="INFO">Validando Valor da chave PIX</msg>
<status status="PASS" starttime="20210322 02:40:44.397" endtime="20210322 02:40:44.398"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${type}' == 'evp'</arg>
<arg>Should Not Be Empty</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'phone'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${phone_pix}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'email'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${email_pix}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'national_registration'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${national_registration}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${national_registration}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:40:44.398" endtime="20210322 02:40:44.399"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:44.398" endtime="20210322 02:40:44.399"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando dados da conta</arg>
</arguments>
<msg timestamp="20210322 02:40:44.399" level="INFO">Validando dados da conta</msg>
<status status="PASS" starttime="20210322 02:40:44.399" endtime="20210322 02:40:44.399"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["id"]}</arg>
<arg>${account_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:40:44.399" endtime="20210322 02:40:44.399"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["marketplace"]}</arg>
<arg>${marketplace_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:40:44.400" endtime="20210322 02:40:44.400"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["holder"]}</arg>
<arg>${holder_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:40:44.400" endtime="20210322 02:40:44.400"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["number"]}</arg>
<arg>${account_number}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:40:44.400" endtime="20210322 02:40:44.401"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["routing_number"]}</arg>
<arg>${account_routing_number}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:40:44.401" endtime="20210322 02:40:44.401"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["type"]}</arg>
<arg>CACC</arg>
</arguments>
<status status="PASS" starttime="20210322 02:40:44.401" endtime="20210322 02:40:44.402"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar Proprietário da Account Owner</arg>
</arguments>
<msg timestamp="20210322 02:40:44.402" level="INFO">Validar Proprietário da Account Owner</msg>
<status status="PASS" starttime="20210322 02:40:44.402" endtime="20210322 02:40:44.402"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${holder_type}' == 'individual'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["account"]["owner"]["name"]}</arg>
<arg>${holder_name}</arg>
<arg>ELSE IF</arg>
<arg>'${holder_type}' == 'business'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["account"]["owner"]["name"]}</arg>
<arg>${legal_name}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["account"]["owner"]["name"]}</arg>
<arg>${holder_name}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:40:44.403" endtime="20210322 02:40:44.403"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:44.402" endtime="20210322 02:40:44.403"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar national_registration da Account Owner</arg>
</arguments>
<msg timestamp="20210322 02:40:44.403" level="INFO">Validar national_registration da Account Owner</msg>
<status status="PASS" starttime="20210322 02:40:44.403" endtime="20210322 02:40:44.403"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${holder_type}' == 'individual'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["account"]["owner"]["national_registration"]}</arg>
<arg>${national_registration}</arg>
<arg>ELSE IF</arg>
<arg>'${holder_type}' == 'business'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["account"]["owner"]["national_registration"]}</arg>
<arg>${national_registration}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["account"]["owner"]["national_registration"]}</arg>
<arg>${national_registration}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:40:44.404" endtime="20210322 02:40:44.404"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:44.403" endtime="20210322 02:40:44.404"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar Holder Type do Account Owner</arg>
</arguments>
<msg timestamp="20210322 02:40:44.404" level="INFO">Validar Holder Type do Account Owner</msg>
<status status="PASS" starttime="20210322 02:40:44.404" endtime="20210322 02:40:44.404"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${holder_type}' == 'individual'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["account"]["owner"]["type"]}</arg>
<arg>${holder_type}</arg>
<arg>ELSE IF</arg>
<arg>'${holder_type}' == 'business'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["account"]["owner"]["type"]}</arg>
<arg>${holder_type}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["account"]["owner"]["type"]}</arg>
<arg>${holder_type}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:40:44.405" endtime="20210322 02:40:44.405"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:44.405" endtime="20210322 02:40:44.405"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar PSP</arg>
</arguments>
<msg timestamp="20210322 02:40:44.406" level="INFO">Validar PSP</msg>
<status status="PASS" starttime="20210322 02:40:44.406" endtime="20210322 02:40:44.406"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["psp"]["code"]}</arg>
<arg>19468242</arg>
</arguments>
<status status="PASS" starttime="20210322 02:40:44.406" endtime="20210322 02:40:44.406"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["psp"]["name"]}</arg>
<arg>Zoop Tecnologia e Meios de Pagamento S.A.</arg>
</arguments>
<status status="PASS" starttime="20210322 02:40:44.406" endtime="20210322 02:40:44.406"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:44.393" endtime="20210322 02:40:44.406"></status>
</kw>
<kw name="excluir chave pix" library="pix_dict_delete_entry">
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 02:40:44.407" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 02:40:44.407" endtime="20210322 02:40:44.408"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:44.407" endtime="20210322 02:40:44.408"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:40:44.408" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 02:40:44.408" endtime="20210322 02:40:44.408"></status>
</kw>
<kw name="Delete Request" library="RequestsLibrary">
<doc>Send a DELETE request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries/${entry_external_key}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:40:44.409" level="INFO">DELETE Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/62a895811eb042fda6b473a191988ef4/accounts/2d7a850e52d14067bd16f174bfe9e8b6/entries/a03bd162eb2a4334b8009bfc20b34fa2, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data=None 
json=None</msg>
<msg timestamp="20210322 02:40:45.786" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:40:44.408" endtime="20210322 02:40:45.786"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:40:45.787" level="INFO">{'message': 'Entry removed successfully'}</msg>
<status status="PASS" starttime="20210322 02:40:45.787" endtime="20210322 02:40:45.787"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:40:45.788" level="INFO">4875242d0e09b516</msg>
<status status="PASS" starttime="20210322 02:40:45.787" endtime="20210322 02:40:45.788"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 02:40:45.788" level="INFO">200</msg>
<status status="PASS" starttime="20210322 02:40:45.788" endtime="20210322 02:40:45.788"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:40:45.788" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:40:45.788" endtime="20210322 02:40:45.789"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:44.407" endtime="20210322 02:40:45.789"></status>
</kw>
<kw name="validar exclusão da chave pix" library="asserts">
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 02:40:45.789" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:40:45.789" endtime="20210322 02:40:45.790"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["message"]}</arg>
<arg>Entry removed successfully</arg>
</arguments>
<status status="PASS" starttime="20210322 02:40:45.790" endtime="20210322 02:40:45.790"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:45.789" endtime="20210322 02:40:45.790"></status>
</kw>
<doc>Fluxo Básico</doc>
<tags>
<tag>regression_test</tag>
<tag>smoke_test</tag>
</tags>
<status status="PASS" starttime="20210322 02:40:39.533" endtime="20210322 02:40:45.790" critical="yes"></status>
</test>
<test id="s1-s1-s4-t5" name="Cenário: Excluir Chave de Endereçamento do tipo CNPJ">
<kw name="criar holder business ativo" library="accreditation_create_holder_active">
<kw name="conectar accreditation" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accreditation</arg>
<arg>url=${accreditation_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 02:40:45.792" level="INFO">Creating Session using : alias=accreditation, url=https://banking-accreditation-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 02:40:45.792" endtime="20210322 02:40:45.792"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:45.791" endtime="20210322 02:40:45.792"></status>
</kw>
<kw name="Cnpj" library="FakerLibrary">
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 02:40:45.792" level="INFO">${national_registration} = 81.645.970/0001-46</msg>
<status status="PASS" starttime="20210322 02:40:45.792" endtime="20210322 02:40:45.793"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${national_registration}</arg>
<arg>.</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 02:40:45.793" level="INFO">${national_registration} = 81645970/0001-46</msg>
<status status="PASS" starttime="20210322 02:40:45.793" endtime="20210322 02:40:45.793"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${national_registration}</arg>
<arg>-</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 02:40:45.793" level="INFO">${national_registration} = 81645970/000146</msg>
<status status="PASS" starttime="20210322 02:40:45.793" endtime="20210322 02:40:45.793"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${national_registration}</arg>
<arg>/</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 02:40:45.794" level="INFO">${national_registration} = 81645970000146</msg>
<status status="PASS" starttime="20210322 02:40:45.794" endtime="20210322 02:40:45.794"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${national_registration}</arg>
</arguments>
<msg timestamp="20210322 02:40:45.794" level="INFO">${national_registration} = 81645970000146</msg>
<status status="PASS" starttime="20210322 02:40:45.794" endtime="20210322 02:40:45.794"></status>
</kw>
<kw name="Rg" library="FakerLibrary">
<doc>Brazilian RG, return plain numbers.
Check:  https://www.ngmatematica.com/2014/02/como-determinar-o-digito-verificador-do.html</doc>
<assign>
<var>${identity_card}</var>
</assign>
<msg timestamp="20210322 02:40:45.795" level="INFO">${identity_card} = 351264073</msg>
<status status="PASS" starttime="20210322 02:40:45.794" endtime="20210322 02:40:45.795"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${identity_card}</arg>
</arguments>
<msg timestamp="20210322 02:40:45.795" level="INFO">${identity_card} = 351264073</msg>
<status status="PASS" starttime="20210322 02:40:45.795" endtime="20210322 02:40:45.795"></status>
</kw>
<kw name="criar holder business" library="accreditation_post_holder_business">
<arguments>
<arg>holder_type=business</arg>
<arg>holder_name=${holder_name}</arg>
<arg>email_business=${email_business}</arg>
<arg>national_registration=${national_registration}</arg>
<arg>revenue_business=${revenue_business}</arg>
<arg>cnae=${cnae}</arg>
<arg>legal_name=${legal_name}</arg>
<arg>establishment_format=mei</arg>
<arg>establishment_date=${establishment_date}</arg>
</arguments>
<kw name="conectar accreditation" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accreditation</arg>
<arg>url=${accreditation_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 02:40:45.797" level="INFO">Creating Session using : alias=accreditation, url=https://banking-accreditation-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 02:40:45.796" endtime="20210322 02:40:45.797"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:45.796" endtime="20210322 02:40:45.797"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_type}</arg>
</arguments>
<msg timestamp="20210322 02:40:45.797" level="INFO">${holder_type} = business</msg>
<status status="PASS" starttime="20210322 02:40:45.797" endtime="20210322 02:40:45.797"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_name}</arg>
</arguments>
<msg timestamp="20210322 02:40:45.798" level="INFO">${holder_name} = Holder de teste</msg>
<status status="PASS" starttime="20210322 02:40:45.797" endtime="20210322 02:40:45.798"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${legal_name}</arg>
</arguments>
<msg timestamp="20210322 02:40:45.798" level="INFO">${legal_name} = Nome Legal da Empresa</msg>
<status status="PASS" starttime="20210322 02:40:45.798" endtime="20210322 02:40:45.798"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:40:45.798" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 02:40:45.798" endtime="20210322 02:40:45.799"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "${holder_type}",</arg>
<arg>"name": "${holder_name}",</arg>
<arg>"email": "${email_business}",</arg>
<arg>"national_registration": "${national_registration}",</arg>
<arg>"revenue": ${revenue_business},</arg>
<arg>"cnae": "${cnae}",</arg>
<arg>"legal_name": "${legal_name}",</arg>
<arg>"establishment": {</arg>
<arg>"format":"${establishment_format}",</arg>
<arg>"date":"${establishment_date}"</arg>
<arg>}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 02:40:45.799" level="INFO">${body} = { "type": "business", "name": "Holder de teste", "email": "contato@teste.com.br", "national_registration": "81645970000146", "revenue": 1005500.00, "cnae": "0111301", "legal_name": "Nome Legal da Empr...</msg>
<status status="PASS" starttime="20210322 02:40:45.799" endtime="20210322 02:40:45.799"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:40:45.800" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "business", "name": "Holder de teste", "email": "contato@teste.com.br", "national_registration": "81645970000146", "revenue": 1005500.00, "cnae": "0111301", "legal_name": "Nome Legal da Empresa", "establishment": { "format":"mei", "date":"2012-04-25" } } 
json=None</msg>
<msg timestamp="20210322 02:40:46.447" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:40:45.799" endtime="20210322 02:40:46.448"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:40:46.450" level="INFO">{'id': '82cd61c2de41405da7e395f9b8abb4c1', 'name': 'Holder de teste', 'revenue': 1005500.0, 'email': 'contato@teste.com.br', 'status': 'waiting_info_and_documents', 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'marketplace_name': 'Marketplace de Teste', 'created_at': '2021-03-22T02:40:47.256367', 'updated_at': '2021-03-22T02:40:47.256369', 'type': 'business', 'national_registration': '81645970000146', 'legal_name': 'Nome Legal da Empresa', 'establishment': {'format': 'mei', 'date': '2012-04-25'}, 'cnae': '0111301', '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/82cd61c2de41405da7e395f9b8abb4c1', 'type': 'GET'}, 'phones': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/82cd61c2de41405da7e395f9b8abb4c1/phones', 'type': 'GET'}, 'addresses': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/82cd61c2de41405da7e395f9b8abb4c1/addresses', 'type': 'GET'}, 'documents': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/82cd61c2de41405da7e395f9b8abb4c1/documents', 'type': 'GET'}, 'partners': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/82cd61c2de41405da7e395f9b8abb4c1/partners', 'type': 'GET'}, 'associates': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/82cd61c2de41405da7e395f9b8abb4c1/associates', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 02:40:46.449" endtime="20210322 02:40:46.450"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:40:46.452" level="INFO">2255fca9754b3610</msg>
<status status="PASS" starttime="20210322 02:40:46.451" endtime="20210322 02:40:46.453"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${body}</arg>
</arguments>
<msg timestamp="20210322 02:40:46.454" level="INFO">{ "type": "business", "name": "Holder de teste", "email": "contato@teste.com.br", "national_registration": "81645970000146", "revenue": 1005500.00, "cnae": "0111301", "legal_name": "Nome Legal da Empresa", "establishment": { "format":"mei", "date":"2012-04-25" } }</msg>
<status status="PASS" starttime="20210322 02:40:46.453" endtime="20210322 02:40:46.455"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:40:46.457" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:40:46.456" endtime="20210322 02:40:46.457"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${holder_external_key}</var>
</assign>
<msg timestamp="20210322 02:40:46.458" level="INFO">${holder_external_key} = 82cd61c2de41405da7e395f9b8abb4c1</msg>
<status status="PASS" starttime="20210322 02:40:46.457" endtime="20210322 02:40:46.459"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_external_key}</arg>
</arguments>
<msg timestamp="20210322 02:40:46.460" level="INFO">${holder_external_key} = 82cd61c2de41405da7e395f9b8abb4c1</msg>
<status status="PASS" starttime="20210322 02:40:46.459" endtime="20210322 02:40:46.460"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:45.795" endtime="20210322 02:40:46.460"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 02:40:46.462" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:40:46.461" endtime="20210322 02:40:46.462"></status>
</kw>
<kw name="criar holder phone" library="accreditation_post_holder_phone">
<arguments>
<arg>21</arg>
<arg>51</arg>
<arg>996221236</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:40:46.464" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 02:40:46.463" endtime="20210322 02:40:46.464"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"area_code": "${phone_area_code}",</arg>
<arg>"country_code": "${phone_country_code}",</arg>
<arg>"number": "${phone_number}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 02:40:46.465" level="INFO">${body} = { "area_code": "21", "country_code": "51", "number": "996221236" }</msg>
<status status="PASS" starttime="20210322 02:40:46.464" endtime="20210322 02:40:46.465"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/phones</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:40:46.467" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/82cd61c2de41405da7e395f9b8abb4c1/phones, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "area_code": "21", "country_code": "51", "number": "996221236" } 
json=None</msg>
<msg timestamp="20210322 02:40:46.737" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:40:46.466" endtime="20210322 02:40:46.737"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:40:46.738" level="INFO">{'id': '4fd16dfcbebf492fba4fc2db4064ab66', 'area_code': '21', 'country_code': '51', 'number': '996221236', 'main': True, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/82cd61c2de41405da7e395f9b8abb4c1/phones/4fd16dfcbebf492fba4fc2db4064ab66', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/82cd61c2de41405da7e395f9b8abb4c1', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 02:40:46.737" endtime="20210322 02:40:46.738"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:40:46.739" level="INFO">87580eef2b44563c</msg>
<status status="PASS" starttime="20210322 02:40:46.738" endtime="20210322 02:40:46.739"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:40:46.739" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:40:46.739" endtime="20210322 02:40:46.739"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${phone_external_key}</var>
</assign>
<msg timestamp="20210322 02:40:46.740" level="INFO">${phone_external_key} = 4fd16dfcbebf492fba4fc2db4064ab66</msg>
<status status="PASS" starttime="20210322 02:40:46.740" endtime="20210322 02:40:46.740"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${phone_external_key}</arg>
</arguments>
<msg timestamp="20210322 02:40:46.741" level="INFO">${phone_external_key} = 4fd16dfcbebf492fba4fc2db4064ab66</msg>
<status status="PASS" starttime="20210322 02:40:46.740" endtime="20210322 02:40:46.741"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:46.462" endtime="20210322 02:40:46.741"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 02:40:46.741" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:40:46.741" endtime="20210322 02:40:46.741"></status>
</kw>
<kw name="criar holder address" library="accreditation_post_holder_address">
<arguments>
<arg>Rio de Janeiro</arg>
<arg>Rio de Janeiro</arg>
<arg>Brasil</arg>
<arg>Bairro de Testes</arg>
<arg>Rua de Testes</arg>
<arg>90</arg>
<arg>apto 200</arg>
<arg>21550987</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:40:46.742" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 02:40:46.742" endtime="20210322 02:40:46.742"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"city": "${city}",</arg>
<arg>"state": "${state}",</arg>
<arg>"country": "${country}",</arg>
<arg>"neighborhood": "${neighborhood}",</arg>
<arg>"street": "${street}",</arg>
<arg>"number": "${number}",</arg>
<arg>"complement": "${complement}",</arg>
<arg>"postal_code": "${postal_code}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 02:40:46.743" level="INFO">${body} = { "city": "Rio de Janeiro", "state": "Rio de Janeiro", "country": "Brasil", "neighborhood": "Bairro de Testes", "street": "Rua de Testes", "number": "90", "complement": "apto 200", "postal_code": "215...</msg>
<status status="PASS" starttime="20210322 02:40:46.743" endtime="20210322 02:40:46.743"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/addresses</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:40:46.744" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/82cd61c2de41405da7e395f9b8abb4c1/addresses, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "city": "Rio de Janeiro", "state": "Rio de Janeiro", "country": "Brasil", "neighborhood": "Bairro de Testes", "street": "Rua de Testes", "number": "90", "complement": "apto 200", "postal_code": "21550987" } 
json=None</msg>
<msg timestamp="20210322 02:40:46.964" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:40:46.743" endtime="20210322 02:40:46.965"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:40:46.967" level="INFO">{'id': 'f76bc714dfa44c37b8c3eaac83b8825f', 'street': 'Rua de Testes', 'number': '90', 'city': 'Rio de Janeiro', 'complement': 'apto 200', 'state': 'Rio de Janeiro', 'neighborhood': 'Bairro de Testes', 'postal_code': '21550987', 'country': 'Brasil', 'main': True, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/82cd61c2de41405da7e395f9b8abb4c1/addresses/f76bc714dfa44c37b8c3eaac83b8825f', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/82cd61c2de41405da7e395f9b8abb4c1', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 02:40:46.965" endtime="20210322 02:40:46.967"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:40:46.969" level="INFO">394c8007513ef20c</msg>
<status status="PASS" starttime="20210322 02:40:46.968" endtime="20210322 02:40:46.969"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:40:46.972" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:40:46.970" endtime="20210322 02:40:46.972"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${address_external_key}</var>
</assign>
<msg timestamp="20210322 02:40:46.976" level="INFO">${address_external_key} = f76bc714dfa44c37b8c3eaac83b8825f</msg>
<status status="PASS" starttime="20210322 02:40:46.973" endtime="20210322 02:40:46.976"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${address_external_key}</arg>
</arguments>
<msg timestamp="20210322 02:40:46.977" level="INFO">${address_external_key} = f76bc714dfa44c37b8c3eaac83b8825f</msg>
<status status="PASS" starttime="20210322 02:40:46.976" endtime="20210322 02:40:46.977"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:46.742" endtime="20210322 02:40:46.978"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 02:40:46.979" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:40:46.978" endtime="20210322 02:40:46.979"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>CCMEI</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:40:46.981" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 02:40:46.981" endtime="20210322 02:40:46.981"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 02:40:46.982" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 02:40:46.986" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 02:40:46.982" endtime="20210322 02:40:46.986"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:40:46.987" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/82cd61c2de41405da7e395f9b8abb4c1/documents?type=CCMEI, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 02:40:47.266" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:40:46.986" endtime="20210322 02:40:47.267"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:40:47.269" level="INFO">{'id': '26bc221433ab4b16b2a72d2a802f0837', 'document_type': 'ccmei', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/82cd61c2de41405da7e395f9b8abb4c1/documents/26bc221433ab4b16b2a72d2a802f0837', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/82cd61c2de41405da7e395f9b8abb4c1', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/82cd61c2de41405da7e395f9b8abb4c1/documents/26bc221433ab4b16b2a72d2a802f0837/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 02:40:47.268" endtime="20210322 02:40:47.269"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:40:47.271" level="INFO">aebdcf9438cbb044</msg>
<status status="PASS" starttime="20210322 02:40:47.270" endtime="20210322 02:40:47.271"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:40:47.273" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:40:47.272" endtime="20210322 02:40:47.273"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 02:40:47.275" level="INFO">${document_external_key} = 26bc221433ab4b16b2a72d2a802f0837</msg>
<status status="PASS" starttime="20210322 02:40:47.274" endtime="20210322 02:40:47.275"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 02:40:47.276" level="INFO">${document_external_key} = 26bc221433ab4b16b2a72d2a802f0837</msg>
<status status="PASS" starttime="20210322 02:40:47.275" endtime="20210322 02:40:47.276"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:46.980" endtime="20210322 02:40:47.276"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 02:40:47.276" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:40:47.276" endtime="20210322 02:40:47.276"></status>
</kw>
<kw name="Cpf" library="FakerLibrary">
<assign>
<var>${partner_individual_national_registration}</var>
</assign>
<msg timestamp="20210322 02:40:47.277" level="INFO">${partner_individual_national_registration} = 235.607.198-95</msg>
<status status="PASS" starttime="20210322 02:40:47.276" endtime="20210322 02:40:47.277"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${partner_individual_national_registration}</arg>
<arg>.</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${partner_individual_national_registration}</var>
</assign>
<msg timestamp="20210322 02:40:47.277" level="INFO">${partner_individual_national_registration} = 235607198-95</msg>
<status status="PASS" starttime="20210322 02:40:47.277" endtime="20210322 02:40:47.277"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${partner_individual_national_registration}</arg>
<arg>-</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${partner_individual_national_registration}</var>
</assign>
<msg timestamp="20210322 02:40:47.277" level="INFO">${partner_individual_national_registration} = 23560719895</msg>
<status status="PASS" starttime="20210322 02:40:47.277" endtime="20210322 02:40:47.277"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${partner_individual_national_registration}</arg>
</arguments>
<msg timestamp="20210322 02:40:47.278" level="INFO">${partner_individual_national_registration} = 23560719895</msg>
<status status="PASS" starttime="20210322 02:40:47.278" endtime="20210322 02:40:47.278"></status>
</kw>
<kw name="Rg" library="FakerLibrary">
<doc>Brazilian RG, return plain numbers.
Check:  https://www.ngmatematica.com/2014/02/como-determinar-o-digito-verificador-do.html</doc>
<assign>
<var>${partner_individual_identity_card}</var>
</assign>
<msg timestamp="20210322 02:40:47.279" level="INFO">${partner_individual_identity_card} = 67421058X</msg>
<status status="PASS" starttime="20210322 02:40:47.278" endtime="20210322 02:40:47.279"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${partner_individual_identity_card}</arg>
</arguments>
<msg timestamp="20210322 02:40:47.279" level="INFO">${partner_individual_identity_card} = 67421058X</msg>
<status status="PASS" starttime="20210322 02:40:47.279" endtime="20210322 02:40:47.279"></status>
</kw>
<kw name="criar partner individual" library="accreditation_post_partner_individual">
<arguments>
<arg>partner_individual_type=individual</arg>
<arg>partner_individual_name=${partner_individual_name}</arg>
<arg>partner_individual_email=${partner_individual_email}</arg>
<arg>partner_individual_national_registration=${partner_individual_national_registration}</arg>
<arg>partner_individual_revenue=${partner_individual_revenue}</arg>
<arg>partner_individual_birthday=${partner_individual_birthday}</arg>
<arg>partner_individual_mothers_name=${partner_individual_mothers_name}</arg>
<arg>partner_individual_identity_card=${partner_individual_identity_card}</arg>
<arg>partner_individual_pep=false</arg>
<arg>partner_individual_percentage=100</arg>
<arg>partner_individual_adm=true</arg>
<arg>partner_individual_cbo=${partner_individual_cbo}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:40:47.281" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 02:40:47.280" endtime="20210322 02:40:47.281"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "${partner_individual_type}",</arg>
<arg>"name": "${partner_individual_name}",</arg>
<arg>"email": "${partner_individual_email}",</arg>
<arg>"national_registration": "${partner_individual_national_registration}",</arg>
<arg>"revenue": ${partner_individual_revenue},</arg>
<arg>"birthday": "${partner_individual_birthday}",</arg>
<arg>"mothers_name": "${partner_individual_mothers_name}",</arg>
<arg>"identity_card": "${partner_individual_identity_card}",</arg>
<arg>"pep": false,</arg>
<arg>"percentage": ${partner_individual_percentage},</arg>
<arg>"adm": ${partner_individual_adm},</arg>
<arg>"cbo": ${partner_individual_cbo}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 02:40:47.281" level="INFO">${body} = { "type": "individual", "name": "Individual Partner de teste", "email": "teste@teste.com.br", "national_registration": "23560719895", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe...</msg>
<status status="PASS" starttime="20210322 02:40:47.281" endtime="20210322 02:40:47.281"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/partners</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:40:47.282" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/82cd61c2de41405da7e395f9b8abb4c1/partners, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "individual", "name": "Individual Partner de teste", "email": "teste@teste.com.br", "national_registration": "23560719895", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Individual Partner", "identity_card": "67421058X", "pep": false, "percentage": 100, "adm": true, "cbo": 821450 } 
json=None</msg>
<msg timestamp="20210322 02:40:47.510" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:40:47.282" endtime="20210322 02:40:47.511"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:40:47.512" level="INFO">{'id': '0a915f6ac500402ba8413eb4b5d23d1d', 'name': 'Individual Partner de teste', 'revenue': 5500.0, 'email': 'teste@teste.com.br', 'created_at': '2021-03-22T02:40:48.293504', 'updated_at': '2021-03-22T02:40:48.293506', 'main': True, 'adm': True, 'percentage': 100.0, 'type': 'individual', 'national_registration': '23560719895', 'birthday': '1988-04-23', 'mothers_name': 'Mãe do Individual Partner', 'identity_card': '67421058X', 'pep': False, 'cbo': '821450', '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/82cd61c2de41405da7e395f9b8abb4c1/partners/0a915f6ac500402ba8413eb4b5d23d1d', 'type': 'GET'}, 'phones': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/82cd61c2de41405da7e395f9b8abb4c1/partners/0a915f6ac500402ba8413eb4b5d23d1d/phones', 'type': 'GET'}, 'addresses': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/82cd61c2de41405da7e395f9b8abb4c1/partners/0a915f6ac500402ba8413eb4b5d23d1d/addresses', 'type': 'GET'}, 'documents': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/82cd61c2de41405da7e395f9b8abb4c1/partners/0a915f6ac500402ba8413eb4b5d23d1d/documents', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/82cd61c2de41405da7e395f9b8abb4c1', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 02:40:47.511" endtime="20210322 02:40:47.512"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:40:47.512" level="INFO">52e182b18841d4f3</msg>
<status status="PASS" starttime="20210322 02:40:47.512" endtime="20210322 02:40:47.513"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:40:47.513" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:40:47.513" endtime="20210322 02:40:47.513"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${partner_external_key}</var>
</assign>
<msg timestamp="20210322 02:40:47.514" level="INFO">${partner_external_key} = 0a915f6ac500402ba8413eb4b5d23d1d</msg>
<status status="PASS" starttime="20210322 02:40:47.514" endtime="20210322 02:40:47.514"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${partner_external_key}</arg>
</arguments>
<msg timestamp="20210322 02:40:47.515" level="INFO">${partner_external_key} = 0a915f6ac500402ba8413eb4b5d23d1d</msg>
<status status="PASS" starttime="20210322 02:40:47.515" endtime="20210322 02:40:47.515"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:47.279" endtime="20210322 02:40:47.515"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 02:40:47.516" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:40:47.515" endtime="20210322 02:40:47.516"></status>
</kw>
<kw name="criar partner phone" library="accreditation_post_partner_phone">
<arguments>
<arg>21</arg>
<arg>51</arg>
<arg>996554785</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:40:47.517" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 02:40:47.517" endtime="20210322 02:40:47.517"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"area_code": "${phone_area_code}",</arg>
<arg>"country_code": "${phone_country_code}",</arg>
<arg>"number": "${phone_number}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 02:40:47.518" level="INFO">${body} = { "area_code": "21", "country_code": "51", "number": "996554785" }</msg>
<status status="PASS" starttime="20210322 02:40:47.517" endtime="20210322 02:40:47.518"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/partners/${partner_external_key}/phones/</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:40:47.518" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/82cd61c2de41405da7e395f9b8abb4c1/partners/0a915f6ac500402ba8413eb4b5d23d1d/phones/, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "area_code": "21", "country_code": "51", "number": "996554785" } 
json=None</msg>
<msg timestamp="20210322 02:40:47.739" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:40:47.518" endtime="20210322 02:40:47.740"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:40:47.742" level="INFO">{'id': 'a21e6ac60dde48318491f5545d9ad973', 'area_code': '21', 'country_code': '51', 'number': '996554785', 'main': True, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/82cd61c2de41405da7e395f9b8abb4c1/partners/0a915f6ac500402ba8413eb4b5d23d1d/phones/a21e6ac60dde48318491f5545d9ad973', 'type': 'GET'}, 'partner': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/82cd61c2de41405da7e395f9b8abb4c1/partners/0a915f6ac500402ba8413eb4b5d23d1d', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/82cd61c2de41405da7e395f9b8abb4c1', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 02:40:47.741" endtime="20210322 02:40:47.743"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:40:47.744" level="INFO">68dcdf1bdb9963b2</msg>
<status status="PASS" starttime="20210322 02:40:47.744" endtime="20210322 02:40:47.745"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:40:47.746" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:40:47.745" endtime="20210322 02:40:47.746"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${holder_external_key}</var>
</assign>
<msg timestamp="20210322 02:40:47.748" level="INFO">${holder_external_key} = a21e6ac60dde48318491f5545d9ad973</msg>
<status status="PASS" starttime="20210322 02:40:47.747" endtime="20210322 02:40:47.748"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${phone_external_key}</arg>
</arguments>
<msg timestamp="20210322 02:40:47.749" level="INFO">${phone_external_key} = 4fd16dfcbebf492fba4fc2db4064ab66</msg>
<status status="PASS" starttime="20210322 02:40:47.748" endtime="20210322 02:40:47.749"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:47.516" endtime="20210322 02:40:47.749"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 02:40:47.750" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:40:47.749" endtime="20210322 02:40:47.750"></status>
</kw>
<kw name="criar partner address" library="accreditation_post_partner_address">
<arguments>
<arg>Rio de Janeiro</arg>
<arg>Rio de Janeiro</arg>
<arg>Brasil</arg>
<arg>Bairro de Testes</arg>
<arg>Rua de Testes</arg>
<arg>61</arg>
<arg>apto 201</arg>
<arg>21550478</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:40:47.752" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 02:40:47.751" endtime="20210322 02:40:47.752"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"city": "${city}",</arg>
<arg>"state": "${state}",</arg>
<arg>"country": "${country}",</arg>
<arg>"neighborhood": "${neighborhood}",</arg>
<arg>"street": "${street}",</arg>
<arg>"number": "${number}",</arg>
<arg>"complement": "${complement}",</arg>
<arg>"postal_code": "${postal_code}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 02:40:47.753" level="INFO">${body} = { "city": "Rio de Janeiro", "state": "Rio de Janeiro", "country": "Brasil", "neighborhood": "Bairro de Testes", "street": "Rua de Testes", "number": "61", "complement": "apto 201", "postal_code": "215...</msg>
<status status="PASS" starttime="20210322 02:40:47.752" endtime="20210322 02:40:47.753"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/partners/${partner_external_key}/addresses</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:40:47.754" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/82cd61c2de41405da7e395f9b8abb4c1/partners/0a915f6ac500402ba8413eb4b5d23d1d/addresses, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "city": "Rio de Janeiro", "state": "Rio de Janeiro", "country": "Brasil", "neighborhood": "Bairro de Testes", "street": "Rua de Testes", "number": "61", "complement": "apto 201", "postal_code": "21550478" } 
json=None</msg>
<msg timestamp="20210322 02:40:48.063" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:40:47.753" endtime="20210322 02:40:48.064"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:40:48.066" level="INFO">{'id': '2441bb93056a46189fdcd1663474f366', 'street': 'Rua de Testes', 'number': '61', 'city': 'Rio de Janeiro', 'complement': 'apto 201', 'state': 'Rio de Janeiro', 'neighborhood': 'Bairro de Testes', 'postal_code': '21550478', 'country': 'Brasil', 'main': True, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/82cd61c2de41405da7e395f9b8abb4c1/partners/0a915f6ac500402ba8413eb4b5d23d1d/addresses/2441bb93056a46189fdcd1663474f366', 'type': 'GET'}, 'partner': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/82cd61c2de41405da7e395f9b8abb4c1/partners/0a915f6ac500402ba8413eb4b5d23d1d', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/82cd61c2de41405da7e395f9b8abb4c1', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 02:40:48.065" endtime="20210322 02:40:48.066"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:40:48.068" level="INFO">23761258a714b9b0</msg>
<status status="PASS" starttime="20210322 02:40:48.067" endtime="20210322 02:40:48.068"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:40:48.070" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:40:48.069" endtime="20210322 02:40:48.070"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${address_external_key}</var>
</assign>
<msg timestamp="20210322 02:40:48.072" level="INFO">${address_external_key} = 2441bb93056a46189fdcd1663474f366</msg>
<status status="PASS" starttime="20210322 02:40:48.070" endtime="20210322 02:40:48.072"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${address_external_key}</arg>
</arguments>
<msg timestamp="20210322 02:40:48.073" level="INFO">${address_external_key} = 2441bb93056a46189fdcd1663474f366</msg>
<status status="PASS" starttime="20210322 02:40:48.072" endtime="20210322 02:40:48.073"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:47.750" endtime="20210322 02:40:48.073"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 02:40:48.074" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:40:48.074" endtime="20210322 02:40:48.075"></status>
</kw>
<kw name="criar partner document" library="accreditation_post_partner_document">
<arguments>
<arg>SELFIE</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:40:48.076" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 02:40:48.076" endtime="20210322 02:40:48.076"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 02:40:48.077" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 02:40:48.079" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 02:40:48.077" endtime="20210322 02:40:48.079"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/partners/${partner_externaL_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:40:48.081" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/82cd61c2de41405da7e395f9b8abb4c1/partners/0a915f6ac500402ba8413eb4b5d23d1d/documents?type=SELFIE, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 02:40:48.351" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:40:48.079" endtime="20210322 02:40:48.351"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:40:48.352" level="INFO">{'id': 'daf2992944dd473abaade25ee0844d1f', 'document_type': 'selfie', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/82cd61c2de41405da7e395f9b8abb4c1/partners/0a915f6ac500402ba8413eb4b5d23d1d/documents/daf2992944dd473abaade25ee0844d1f', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/82cd61c2de41405da7e395f9b8abb4c1', 'type': 'GET'}, 'partner': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/82cd61c2de41405da7e395f9b8abb4c1/partners/0a915f6ac500402ba8413eb4b5d23d1d', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/82cd61c2de41405da7e395f9b8abb4c1/partners/0a915f6ac500402ba8413eb4b5d23d1d/documents/daf2992944dd473abaade25ee0844d1f/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 02:40:48.351" endtime="20210322 02:40:48.352"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:40:48.353" level="INFO">9e6cc63526c56df1</msg>
<status status="PASS" starttime="20210322 02:40:48.353" endtime="20210322 02:40:48.353"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:40:48.354" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:40:48.354" endtime="20210322 02:40:48.355"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 02:40:48.356" level="INFO">${document_external_key} = daf2992944dd473abaade25ee0844d1f</msg>
<status status="PASS" starttime="20210322 02:40:48.355" endtime="20210322 02:40:48.356"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 02:40:48.357" level="INFO">${document_external_key} = daf2992944dd473abaade25ee0844d1f</msg>
<status status="PASS" starttime="20210322 02:40:48.356" endtime="20210322 02:40:48.357"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:48.075" endtime="20210322 02:40:48.357"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 02:40:48.358" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:40:48.358" endtime="20210322 02:40:48.358"></status>
</kw>
<kw name="criar partner document" library="accreditation_post_partner_document">
<arguments>
<arg>RG_FRENTE</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:40:48.360" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 02:40:48.359" endtime="20210322 02:40:48.360"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 02:40:48.360" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 02:40:48.362" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 02:40:48.360" endtime="20210322 02:40:48.362"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/partners/${partner_externaL_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:40:48.364" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/82cd61c2de41405da7e395f9b8abb4c1/partners/0a915f6ac500402ba8413eb4b5d23d1d/documents?type=RG_FRENTE, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 02:40:48.666" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:40:48.362" endtime="20210322 02:40:48.666"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:40:48.668" level="INFO">{'id': '83aff00f96de453cad3e51243bd3f6e0', 'document_type': 'rg_frente', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/82cd61c2de41405da7e395f9b8abb4c1/partners/0a915f6ac500402ba8413eb4b5d23d1d/documents/83aff00f96de453cad3e51243bd3f6e0', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/82cd61c2de41405da7e395f9b8abb4c1', 'type': 'GET'}, 'partner': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/82cd61c2de41405da7e395f9b8abb4c1/partners/0a915f6ac500402ba8413eb4b5d23d1d', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/82cd61c2de41405da7e395f9b8abb4c1/partners/0a915f6ac500402ba8413eb4b5d23d1d/documents/83aff00f96de453cad3e51243bd3f6e0/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 02:40:48.667" endtime="20210322 02:40:48.668"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:40:48.669" level="INFO">eee56ad9ef56213d</msg>
<status status="PASS" starttime="20210322 02:40:48.668" endtime="20210322 02:40:48.669"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:40:48.671" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:40:48.670" endtime="20210322 02:40:48.671"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 02:40:48.672" level="INFO">${document_external_key} = 83aff00f96de453cad3e51243bd3f6e0</msg>
<status status="PASS" starttime="20210322 02:40:48.671" endtime="20210322 02:40:48.672"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 02:40:48.673" level="INFO">${document_external_key} = 83aff00f96de453cad3e51243bd3f6e0</msg>
<status status="PASS" starttime="20210322 02:40:48.673" endtime="20210322 02:40:48.674"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:48.359" endtime="20210322 02:40:48.674"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 02:40:48.675" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:40:48.674" endtime="20210322 02:40:48.675"></status>
</kw>
<kw name="criar partner document" library="accreditation_post_partner_document">
<arguments>
<arg>RG_VERSO</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:40:48.676" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 02:40:48.676" endtime="20210322 02:40:48.676"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 02:40:48.677" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 02:40:48.679" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 02:40:48.677" endtime="20210322 02:40:48.679"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/partners/${partner_externaL_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:40:48.680" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/82cd61c2de41405da7e395f9b8abb4c1/partners/0a915f6ac500402ba8413eb4b5d23d1d/documents?type=RG_VERSO, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 02:40:48.937" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:40:48.679" endtime="20210322 02:40:48.937"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:40:48.940" level="INFO">{'id': 'e467a285129443f988d2eeba80bcc676', 'document_type': 'rg_verso', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/82cd61c2de41405da7e395f9b8abb4c1/partners/0a915f6ac500402ba8413eb4b5d23d1d/documents/e467a285129443f988d2eeba80bcc676', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/82cd61c2de41405da7e395f9b8abb4c1', 'type': 'GET'}, 'partner': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/82cd61c2de41405da7e395f9b8abb4c1/partners/0a915f6ac500402ba8413eb4b5d23d1d', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/82cd61c2de41405da7e395f9b8abb4c1/partners/0a915f6ac500402ba8413eb4b5d23d1d/documents/e467a285129443f988d2eeba80bcc676/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 02:40:48.938" endtime="20210322 02:40:48.940"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:40:48.942" level="INFO">70dc796937387cce</msg>
<status status="PASS" starttime="20210322 02:40:48.941" endtime="20210322 02:40:48.943"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:40:48.945" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:40:48.944" endtime="20210322 02:40:48.945"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 02:40:48.947" level="INFO">${document_external_key} = e467a285129443f988d2eeba80bcc676</msg>
<status status="PASS" starttime="20210322 02:40:48.945" endtime="20210322 02:40:48.947"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 02:40:48.948" level="INFO">${document_external_key} = e467a285129443f988d2eeba80bcc676</msg>
<status status="PASS" starttime="20210322 02:40:48.947" endtime="20210322 02:40:48.948"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:48.675" endtime="20210322 02:40:48.948"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 02:40:48.950" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:40:48.949" endtime="20210322 02:40:48.950"></status>
</kw>
<kw name="solicitar aprovação do holder" library="accreditation_request_approval">
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:40:48.951" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 02:40:48.951" endtime="20210322 02:40:48.951"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/approval</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:40:48.954" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/82cd61c2de41405da7e395f9b8abb4c1/approval, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data=None 
json=None</msg>
<msg timestamp="20210322 02:40:49.286" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:40:48.952" endtime="20210322 02:40:49.287"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:40:49.290" level="INFO">{'message': 'Approval request accepted successfully. Processing analysis'}</msg>
<status status="PASS" starttime="20210322 02:40:49.288" endtime="20210322 02:40:49.290"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:40:49.291" level="INFO">b1d98a430c52e867</msg>
<status status="PASS" starttime="20210322 02:40:49.291" endtime="20210322 02:40:49.291"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:40:49.293" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:40:49.292" endtime="20210322 02:40:49.293"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:48.950" endtime="20210322 02:40:49.293"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 02:40:49.295" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:40:49.294" endtime="20210322 02:40:49.295"></status>
</kw>
<kw name="recebendo notificação de aprovação" library="accreditation_risk_notification">
<kw name="Uuid 4" library="FakerLibrary">
<doc>Generates a random UUID4 string.
:param cast_to: Specify what type the UUID should be cast to. Default is `str`
:type cast_to: callable</doc>
<assign>
<var>${assessment_id}</var>
</assign>
<msg timestamp="20210322 02:40:49.296" level="INFO">${assessment_id} = 7395517e-07ac-4281-a438-44a16a40dba5</msg>
<status status="PASS" starttime="20210322 02:40:49.296" endtime="20210322 02:40:49.297"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>year</arg>
</arguments>
<assign>
<var>${year}</var>
</assign>
<msg timestamp="20210322 02:40:49.297" level="INFO">${year} = 2021</msg>
<status status="PASS" starttime="20210322 02:40:49.297" endtime="20210322 02:40:49.298"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>month</arg>
</arguments>
<assign>
<var>${month}</var>
</assign>
<msg timestamp="20210322 02:40:49.298" level="INFO">${month} = 03</msg>
<status status="PASS" starttime="20210322 02:40:49.298" endtime="20210322 02:40:49.298"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>day</arg>
</arguments>
<assign>
<var>${day}</var>
</assign>
<msg timestamp="20210322 02:40:49.299" level="INFO">${day} = 22</msg>
<status status="PASS" starttime="20210322 02:40:49.299" endtime="20210322 02:40:49.299"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:40:49.300" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 02:40:49.300" endtime="20210322 02:40:49.300"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "risk.assessment.result",</arg>
<arg>"resource": "business.holder",</arg>
<arg>"created_at": "${year}-${month}-${day} 15:28:56.747Z",</arg>
<arg>"marketplace_id": "${marketplace_external_key}",</arg>
<arg>"object": {</arg>
<arg>"result": "APPROVED",</arg>
<arg>"holder_id": "${holder_external_key}",</arg>
<arg>"applicant_id": "${application_external_key}",</arg>
<arg>"assessment_id": "${assessment_id}"</arg>
<arg>}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 02:40:49.302" level="INFO">${body} = { "type": "risk.assessment.result", "resource": "business.holder", "created_at": "2021-03-22 15:28:56.747Z", "marketplace_id": "f71a8951368a4cc085cf7875ff44e61c", "object": { "result": "APPROVED", "ho...</msg>
<status status="PASS" starttime="20210322 02:40:49.301" endtime="20210322 02:40:49.302"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/admin/internal_operation/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/registration/approval</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:40:49.303" level="INFO">POST Request using : uri=/admin/internal_operation/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/82cd61c2de41405da7e395f9b8abb4c1/registration/approval, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "risk.assessment.result", "resource": "business.holder", "created_at": "2021-03-22 15:28:56.747Z", "marketplace_id": "f71a8951368a4cc085cf7875ff44e61c", "object": { "result": "APPROVED", "holder_id": "82cd61c2de41405da7e395f9b8abb4c1", "applicant_id": "bcc25a6751c14b52af1340d40dba78c5", "assessment_id": "7395517e-07ac-4281-a438-44a16a40dba5" } } 
json=None</msg>
<msg timestamp="20210322 02:40:49.508" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:40:49.302" endtime="20210322 02:40:49.508"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:40:49.510" level="INFO">{'message': 'Holder approved successfully'}</msg>
<status status="PASS" starttime="20210322 02:40:49.509" endtime="20210322 02:40:49.510"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:40:49.512" level="INFO">66bbc92e2010f4a7</msg>
<status status="PASS" starttime="20210322 02:40:49.511" endtime="20210322 02:40:49.512"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:40:49.513" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:40:49.512" endtime="20210322 02:40:49.513"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 02:40:49.514" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:40:49.514" endtime="20210322 02:40:49.514"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:49.295" endtime="20210322 02:40:49.515"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 02:40:49.516" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:40:49.516" endtime="20210322 02:40:49.516"></status>
</kw>
<kw name="buscar account por holder" library="accounts_get_accounts_by_holder">
<kw name="conectar accounts" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accounts</arg>
<arg>url=${account_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 02:40:49.518" level="INFO">Creating Session using : alias=accounts, url=https://banking-accounts-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 02:40:49.517" endtime="20210322 02:40:49.518"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:49.517" endtime="20210322 02:40:49.519"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accounts</arg>
<arg>/marketplaces/${marketplace_external_key}/holders/${holder_external_key}/accounts</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:40:49.520" level="INFO">GET Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/holders/82cd61c2de41405da7e395f9b8abb4c1/accounts, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 02:40:50.117" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:40:49.519" endtime="20210322 02:40:50.117"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:40:50.120" level="INFO">{'items': [{'id': 'f30d57aa07f443178626d4457f756ecf', 'holder': '82cd61c2de41405da7e395f9b8abb4c1', 'balance': '0.00', 'currency': 'BRL', 'routing_number': '001', 'number': '9531256027', 'status': 'active', 'metadata': {}, 'created_at': '2021-03-22T05:40:50.334141', 'updated_at': '2021-03-22T05:40:50.334141', 'primary': True, 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'uri': '/v2/marketplaces/f71a8951368a4cc085cf7875ff44e61c/accounts/f30d57aa07f443178626d4457f756ecf', 'resource': 'payment_account'}], 'has_more': False, 'limit': 100, 'total_pages': 1, 'page': 1, 'offset': 0, 'total': '1', 'query_count': '1'}</msg>
<status status="PASS" starttime="20210322 02:40:50.119" endtime="20210322 02:40:50.120"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:40:50.122" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:40:50.121" endtime="20210322 02:40:50.122"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["id"]}</arg>
</arguments>
<assign>
<var>${account_external_key}</var>
</assign>
<msg timestamp="20210322 02:40:50.124" level="INFO">${account_external_key} = f30d57aa07f443178626d4457f756ecf</msg>
<status status="PASS" starttime="20210322 02:40:50.122" endtime="20210322 02:40:50.124"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_external_key}</arg>
</arguments>
<msg timestamp="20210322 02:40:50.125" level="INFO">${account_external_key} = f30d57aa07f443178626d4457f756ecf</msg>
<status status="PASS" starttime="20210322 02:40:50.124" endtime="20210322 02:40:50.125"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["number"]}</arg>
</arguments>
<assign>
<var>${account_number}</var>
</assign>
<msg timestamp="20210322 02:40:50.127" level="INFO">${account_number} = 9531256027</msg>
<status status="PASS" starttime="20210322 02:40:50.125" endtime="20210322 02:40:50.127"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_number}</arg>
</arguments>
<msg timestamp="20210322 02:40:50.128" level="INFO">${account_number} = 9531256027</msg>
<status status="PASS" starttime="20210322 02:40:50.127" endtime="20210322 02:40:50.128"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["routing_number"]}</arg>
</arguments>
<assign>
<var>${account_routing_number}</var>
</assign>
<msg timestamp="20210322 02:40:50.129" level="INFO">${account_routing_number} = 001</msg>
<status status="PASS" starttime="20210322 02:40:50.128" endtime="20210322 02:40:50.129"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_routing_number}</arg>
</arguments>
<msg timestamp="20210322 02:40:50.130" level="INFO">${account_routing_number} = 001</msg>
<status status="PASS" starttime="20210322 02:40:50.129" endtime="20210322 02:40:50.130"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:49.516" endtime="20210322 02:40:50.130"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 02:40:50.131" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:40:50.131" endtime="20210322 02:40:50.131"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:45.791" endtime="20210322 02:40:50.131"></status>
</kw>
<kw name="criar chave pix" library="pix_dict_create_entry">
<arguments>
<arg>national_registration</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 02:40:50.134" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 02:40:50.133" endtime="20210322 02:40:50.134"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:50.133" endtime="20210322 02:40:50.134"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${type}</arg>
</arguments>
<msg timestamp="20210322 02:40:50.135" level="INFO">${type} = national_registration</msg>
<status status="PASS" starttime="20210322 02:40:50.134" endtime="20210322 02:40:50.135"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210322 02:40:50.136" level="INFO">${value} = </msg>
<status status="PASS" starttime="20210322 02:40:50.136" endtime="20210322 02:40:50.136"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:40:50.136" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 02:40:50.136" endtime="20210322 02:40:50.136"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "${type}",</arg>
<arg>"value": "${value}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 02:40:50.137" level="INFO">${body} = { "type": "national_registration", "value": "" }</msg>
<status status="PASS" starttime="20210322 02:40:50.137" endtime="20210322 02:40:50.137"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:40:50.138" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/82cd61c2de41405da7e395f9b8abb4c1/accounts/f30d57aa07f443178626d4457f756ecf/entries, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "national_registration", "value": "" } 
json=None</msg>
<msg timestamp="20210322 02:40:51.667" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:40:50.137" endtime="20210322 02:40:51.668"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:40:51.670" level="INFO">{'id': '545937ad3f07422198539b2ce038732c', 'status': 'active', 'created_at': '2021-03-22T02:40:51.649', 'updated_at': '2021-03-22T02:40:51.649', 'key': {'value': '81645970000146', 'type': 'national_registration'}, 'account': {'id': 'f30d57aa07f443178626d4457f756ecf', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': '82cd61c2de41405da7e395f9b8abb4c1', 'owner': {'name': 'Nome Legal da Empresa', 'national_registration': '81645970000146', 'type': 'business'}, 'routing_number': '001', 'number': '9531256027', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}, 'resource': 'pix.entry'}</msg>
<status status="PASS" starttime="20210322 02:40:51.669" endtime="20210322 02:40:51.670"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:40:51.672" level="INFO">e0a38f4a4dfd9268</msg>
<status status="PASS" starttime="20210322 02:40:51.671" endtime="20210322 02:40:51.673"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 02:40:51.675" level="INFO">201</msg>
<status status="PASS" starttime="20210322 02:40:51.674" endtime="20210322 02:40:51.675"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:40:51.677" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:40:51.676" endtime="20210322 02:40:51.677"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${entry_external_key}</var>
</assign>
<msg timestamp="20210322 02:40:51.679" level="INFO">${entry_external_key} = 545937ad3f07422198539b2ce038732c</msg>
<status status="PASS" starttime="20210322 02:40:51.678" endtime="20210322 02:40:51.679"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${entry_external_key}</arg>
</arguments>
<msg timestamp="20210322 02:40:51.681" level="INFO">${entry_external_key} = 545937ad3f07422198539b2ce038732c</msg>
<status status="PASS" starttime="20210322 02:40:51.680" endtime="20210322 02:40:51.681"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["key"]["value"]}</arg>
</arguments>
<assign>
<var>${entry_key_value}</var>
</assign>
<msg timestamp="20210322 02:40:51.682" level="INFO">${entry_key_value} = 81645970000146</msg>
<status status="PASS" starttime="20210322 02:40:51.681" endtime="20210322 02:40:51.682"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${entry_key_value}</arg>
</arguments>
<msg timestamp="20210322 02:40:51.683" level="INFO">${entry_key_value} = 81645970000146</msg>
<status status="PASS" starttime="20210322 02:40:51.683" endtime="20210322 02:40:51.683"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:50.132" endtime="20210322 02:40:51.684"></status>
</kw>
<kw name="validar criação da chave pix" library="asserts">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando status_code</arg>
</arguments>
<msg timestamp="20210322 02:40:51.685" level="INFO">Validando status_code</msg>
<status status="PASS" starttime="20210322 02:40:51.685" endtime="20210322 02:40:51.685"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${type}' == 'evp'</arg>
<arg>Should Be Equal As Integers</arg>
<arg>${response.status_code}</arg>
<arg>201</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'phone'</arg>
<arg>Should Be Equal As Integers</arg>
<arg>${response.status_code}</arg>
<arg>202</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'email'</arg>
<arg>Should Be Equal As Integers</arg>
<arg>${response.status_code}</arg>
<arg>202</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'national_registration'</arg>
<arg>Should Be Equal As Integers</arg>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 02:40:51.687" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:40:51.687" endtime="20210322 02:40:51.688"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:51.686" endtime="20210322 02:40:51.688"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar status da chave</arg>
</arguments>
<msg timestamp="20210322 02:40:51.688" level="INFO">Validar status da chave</msg>
<status status="PASS" starttime="20210322 02:40:51.688" endtime="20210322 02:40:51.689"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${type}' == 'evp'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["status"]}</arg>
<arg>active</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'phone'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["status"]}</arg>
<arg>waiting_ownership_verification</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'email'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["status"]}</arg>
<arg>waiting_ownership_verification</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'national_registration'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["status"]}</arg>
<arg>active</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["status"]}</arg>
<arg>active</arg>
</arguments>
<status status="PASS" starttime="20210322 02:40:51.690" endtime="20210322 02:40:51.691"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:51.689" endtime="20210322 02:40:51.691"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando Tipo da chave PIX</arg>
</arguments>
<msg timestamp="20210322 02:40:51.692" level="INFO">Validando Tipo da chave PIX</msg>
<status status="PASS" starttime="20210322 02:40:51.691" endtime="20210322 02:40:51.692"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${type}' == 'evp'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["type"]}</arg>
<arg>${type}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'phone'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["type"]}</arg>
<arg>${type}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'email'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["type"]}</arg>
<arg>${type}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'national_registration'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["type"]}</arg>
<arg>${type}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["key"]["type"]}</arg>
<arg>${type}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:40:51.693" endtime="20210322 02:40:51.694"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:51.692" endtime="20210322 02:40:51.694"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando Valor da chave PIX</arg>
</arguments>
<msg timestamp="20210322 02:40:51.694" level="INFO">Validando Valor da chave PIX</msg>
<status status="PASS" starttime="20210322 02:40:51.694" endtime="20210322 02:40:51.694"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${type}' == 'evp'</arg>
<arg>Should Not Be Empty</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'phone'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${phone_pix}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'email'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${email_pix}</arg>
<arg>ELSE IF</arg>
<arg>'${type}' == 'national_registration'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${national_registration}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${national_registration}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:40:51.696" endtime="20210322 02:40:51.697"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:51.695" endtime="20210322 02:40:51.697"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando dados da conta</arg>
</arguments>
<msg timestamp="20210322 02:40:51.698" level="INFO">Validando dados da conta</msg>
<status status="PASS" starttime="20210322 02:40:51.697" endtime="20210322 02:40:51.698"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["id"]}</arg>
<arg>${account_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:40:51.698" endtime="20210322 02:40:51.699"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["marketplace"]}</arg>
<arg>${marketplace_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:40:51.699" endtime="20210322 02:40:51.700"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["holder"]}</arg>
<arg>${holder_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:40:51.700" endtime="20210322 02:40:51.700"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["number"]}</arg>
<arg>${account_number}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:40:51.701" endtime="20210322 02:40:51.701"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["routing_number"]}</arg>
<arg>${account_routing_number}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:40:51.702" endtime="20210322 02:40:51.702"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["account"]["type"]}</arg>
<arg>CACC</arg>
</arguments>
<status status="PASS" starttime="20210322 02:40:51.703" endtime="20210322 02:40:51.703"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar Proprietário da Account Owner</arg>
</arguments>
<msg timestamp="20210322 02:40:51.704" level="INFO">Validar Proprietário da Account Owner</msg>
<status status="PASS" starttime="20210322 02:40:51.704" endtime="20210322 02:40:51.704"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${holder_type}' == 'individual'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["account"]["owner"]["name"]}</arg>
<arg>${holder_name}</arg>
<arg>ELSE IF</arg>
<arg>'${holder_type}' == 'business'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["account"]["owner"]["name"]}</arg>
<arg>${legal_name}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["account"]["owner"]["name"]}</arg>
<arg>${legal_name}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:40:51.705" endtime="20210322 02:40:51.706"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:51.704" endtime="20210322 02:40:51.706"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar national_registration da Account Owner</arg>
</arguments>
<msg timestamp="20210322 02:40:51.707" level="INFO">Validar national_registration da Account Owner</msg>
<status status="PASS" starttime="20210322 02:40:51.706" endtime="20210322 02:40:51.707"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${holder_type}' == 'individual'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["account"]["owner"]["national_registration"]}</arg>
<arg>${national_registration}</arg>
<arg>ELSE IF</arg>
<arg>'${holder_type}' == 'business'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["account"]["owner"]["national_registration"]}</arg>
<arg>${national_registration}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["account"]["owner"]["national_registration"]}</arg>
<arg>${national_registration}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:40:51.708" endtime="20210322 02:40:51.708"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:51.707" endtime="20210322 02:40:51.708"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar Holder Type do Account Owner</arg>
</arguments>
<msg timestamp="20210322 02:40:51.709" level="INFO">Validar Holder Type do Account Owner</msg>
<status status="PASS" starttime="20210322 02:40:51.709" endtime="20210322 02:40:51.709"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${holder_type}' == 'individual'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["account"]["owner"]["type"]}</arg>
<arg>${holder_type}</arg>
<arg>ELSE IF</arg>
<arg>'${holder_type}' == 'business'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${response.json()["account"]["owner"]["type"]}</arg>
<arg>${holder_type}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()["account"]["owner"]["type"]}</arg>
<arg>${holder_type}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:40:51.710" endtime="20210322 02:40:51.710"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:51.709" endtime="20210322 02:40:51.710"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validar PSP</arg>
</arguments>
<msg timestamp="20210322 02:40:51.711" level="INFO">Validar PSP</msg>
<status status="PASS" starttime="20210322 02:40:51.711" endtime="20210322 02:40:51.711"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["psp"]["code"]}</arg>
<arg>19468242</arg>
</arguments>
<status status="PASS" starttime="20210322 02:40:51.711" endtime="20210322 02:40:51.712"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["psp"]["name"]}</arg>
<arg>Zoop Tecnologia e Meios de Pagamento S.A.</arg>
</arguments>
<status status="PASS" starttime="20210322 02:40:51.712" endtime="20210322 02:40:51.712"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:51.684" endtime="20210322 02:40:51.713"></status>
</kw>
<kw name="excluir chave pix" library="pix_dict_delete_entry">
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 02:40:51.714" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 02:40:51.714" endtime="20210322 02:40:51.714"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:51.713" endtime="20210322 02:40:51.715"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:40:51.715" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 02:40:51.715" endtime="20210322 02:40:51.715"></status>
</kw>
<kw name="Delete Request" library="RequestsLibrary">
<doc>Send a DELETE request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries/${entry_external_key}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:40:51.716" level="INFO">DELETE Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/82cd61c2de41405da7e395f9b8abb4c1/accounts/f30d57aa07f443178626d4457f756ecf/entries/545937ad3f07422198539b2ce038732c, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data=None 
json=None</msg>
<msg timestamp="20210322 02:40:53.115" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:40:51.716" endtime="20210322 02:40:53.115"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:40:53.118" level="INFO">{'message': 'Entry removed successfully'}</msg>
<status status="PASS" starttime="20210322 02:40:53.116" endtime="20210322 02:40:53.118"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:40:53.120" level="INFO">16fc72c6e4d4a020</msg>
<status status="PASS" starttime="20210322 02:40:53.119" endtime="20210322 02:40:53.121"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 02:40:53.123" level="INFO">200</msg>
<status status="PASS" starttime="20210322 02:40:53.122" endtime="20210322 02:40:53.124"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:40:53.124" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:40:53.124" endtime="20210322 02:40:53.125"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:51.713" endtime="20210322 02:40:53.125"></status>
</kw>
<kw name="validar exclusão da chave pix" library="asserts">
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 02:40:53.127" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:40:53.126" endtime="20210322 02:40:53.127"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["message"]}</arg>
<arg>Entry removed successfully</arg>
</arguments>
<status status="PASS" starttime="20210322 02:40:53.128" endtime="20210322 02:40:53.129"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:53.125" endtime="20210322 02:40:53.129"></status>
</kw>
<doc>Fluxo Básico</doc>
<tags>
<tag>regression_test</tag>
<tag>smoke_test</tag>
</tags>
<status status="PASS" starttime="20210322 02:40:45.791" endtime="20210322 02:40:53.130" critical="yes"></status>
</test>
<doc>Funcionalidade: Confirmação de Propriedade de Chave de Endereçamento
Eu, como um Holder, portador de uma conta ativa em Banking
E portador de uma chave de endereçamento
Desejo excluir uma chave de endereçamento</doc>
<status status="PASS" starttime="20210322 02:40:24.215" endtime="20210322 02:40:53.132"></status>
</suite>
<status status="PASS" starttime="20210322 02:39:02.724" endtime="20210322 02:40:53.141"></status>
</suite>
<suite id="s1-s2" name="Reivindicacao" source="C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\tests\pix-dict\reivindicacao">
<suite id="s1-s2-s1" name="Cancelar Reivindicação de Posse" source="C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\tests\pix-dict\reivindicacao\Cancelar Reivindicação de Posse.robot">
<test id="s1-s2-s1-t1" name="Cenário: Cancelamento de Reivindiação pelo Reivindicador">
<kw name="Random Number" library="FakerLibrary">
<doc>Returns a random number with 1 digit (default, when digits==None),
a random number with 0 to given number of digits, or a random number
with given number to given number of digits (when ``fix_len==True``).</doc>
<arguments>
<arg>digits=8</arg>
<arg>fix_len=True</arg>
</arguments>
<assign>
<var>${phone}</var>
</assign>
<msg timestamp="20210322 02:40:53.229" level="INFO">${phone} = 32597034</msg>
<status status="PASS" starttime="20210322 02:40:53.229" endtime="20210322 02:40:53.230"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>+55219${phone}</arg>
</arguments>
<assign>
<var>${phone_pix}</var>
</assign>
<msg timestamp="20210322 02:40:53.230" level="INFO">${phone_pix} = +5521932597034</msg>
<status status="PASS" starttime="20210322 02:40:53.230" endtime="20210322 02:40:53.230"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${phone_pix}</arg>
</arguments>
<msg timestamp="20210322 02:40:53.231" level="INFO">${phone_pix} = +5521932597034</msg>
<status status="PASS" starttime="20210322 02:40:53.231" endtime="20210322 02:40:53.231"></status>
</kw>
<kw name="criar holder individual ativo" library="accreditation_create_holder_active">
<kw name="conectar accreditation" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accreditation</arg>
<arg>url=${accreditation_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 02:40:53.233" level="INFO">Creating Session using : alias=accreditation, url=https://banking-accreditation-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 02:40:53.233" endtime="20210322 02:40:53.234"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:53.232" endtime="20210322 02:40:53.234"></status>
</kw>
<kw name="Cpf" library="FakerLibrary">
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 02:40:53.234" level="INFO">${national_registration} = 563.427.098-74</msg>
<status status="PASS" starttime="20210322 02:40:53.234" endtime="20210322 02:40:53.234"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${national_registration}</arg>
<arg>.</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 02:40:53.236" level="INFO">${national_registration} = 563427098-74</msg>
<status status="PASS" starttime="20210322 02:40:53.235" endtime="20210322 02:40:53.236"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${national_registration}</arg>
<arg>-</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 02:40:53.236" level="INFO">${national_registration} = 56342709874</msg>
<status status="PASS" starttime="20210322 02:40:53.236" endtime="20210322 02:40:53.236"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${national_registration}</arg>
</arguments>
<msg timestamp="20210322 02:40:53.237" level="INFO">${national_registration} = 56342709874</msg>
<status status="PASS" starttime="20210322 02:40:53.237" endtime="20210322 02:40:53.237"></status>
</kw>
<kw name="Rg" library="FakerLibrary">
<doc>Brazilian RG, return plain numbers.
Check:  https://www.ngmatematica.com/2014/02/como-determinar-o-digito-verificador-do.html</doc>
<assign>
<var>${identity_card}</var>
</assign>
<msg timestamp="20210322 02:40:53.238" level="INFO">${identity_card} = 468102371</msg>
<status status="PASS" starttime="20210322 02:40:53.238" endtime="20210322 02:40:53.238"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${identity_card}</arg>
</arguments>
<msg timestamp="20210322 02:40:53.239" level="INFO">${identity_card} = 468102371</msg>
<status status="PASS" starttime="20210322 02:40:53.238" endtime="20210322 02:40:53.239"></status>
</kw>
<kw name="criar holder individual" library="accreditation_post_holder_individual">
<arguments>
<arg>holder_type=individual</arg>
<arg>holder_name=${holder_name}</arg>
<arg>email=${email}</arg>
<arg>national_registration=${national_registration}</arg>
<arg>revenue=${revenue}</arg>
<arg>birthday=${birthday}</arg>
<arg>mothers_name=${mothers_name}</arg>
<arg>identity_card=${identity_card}</arg>
<arg>pep=false</arg>
<arg>cbo=${cbo}</arg>
</arguments>
<kw name="conectar accreditation" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accreditation</arg>
<arg>url=${accreditation_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 02:40:53.241" level="INFO">Creating Session using : alias=accreditation, url=https://banking-accreditation-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 02:40:53.241" endtime="20210322 02:40:53.242"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:53.240" endtime="20210322 02:40:53.242"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_type}</arg>
</arguments>
<msg timestamp="20210322 02:40:53.242" level="INFO">${holder_type} = individual</msg>
<status status="PASS" starttime="20210322 02:40:53.242" endtime="20210322 02:40:53.242"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_name}</arg>
</arguments>
<msg timestamp="20210322 02:40:53.243" level="INFO">${holder_name} = Holder de teste</msg>
<status status="PASS" starttime="20210322 02:40:53.243" endtime="20210322 02:40:53.243"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:40:53.244" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 02:40:53.244" endtime="20210322 02:40:53.244"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "${holder_type}",</arg>
<arg>"name": "${holder_name}",</arg>
<arg>"email": "${email}",</arg>
<arg>"national_registration": "${national_registration}",</arg>
<arg>"revenue": ${revenue},</arg>
<arg>"birthday": "${birthday}",</arg>
<arg>"mothers_name": "${mothers_name}",</arg>
<arg>"identity_card": "${identity_card}",</arg>
<arg>"pep": false,</arg>
<arg>"cbo": ${cbo}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 02:40:53.245" level="INFO">${body} = { "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "56342709874", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder",...</msg>
<status status="PASS" starttime="20210322 02:40:53.244" endtime="20210322 02:40:53.245"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:40:53.246" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "56342709874", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder", "identity_card": "468102371", "pep": false, "cbo": 821450 } 
json=None</msg>
<msg timestamp="20210322 02:40:53.922" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:40:53.246" endtime="20210322 02:40:53.922"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:40:53.924" level="INFO">{'id': '3ead7671c0d34e488d4ff267b70d93f2', 'name': 'Holder de teste', 'revenue': 5500.0, 'email': 'teste@teste.com.br', 'status': 'waiting_info_and_documents', 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'marketplace_name': 'Marketplace de Teste', 'created_at': '2021-03-22T02:40:54.747349', 'updated_at': '2021-03-22T02:40:54.747352', 'type': 'individual', 'national_registration': '56342709874', 'birthday': '1988-04-23', 'mothers_name': 'Mãe do Holder', 'identity_card': '468102371', 'pep': False, 'cbo': '821450', '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/3ead7671c0d34e488d4ff267b70d93f2', 'type': 'GET'}, 'phones': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/3ead7671c0d34e488d4ff267b70d93f2/phones', 'type': 'GET'}, 'addresses': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/3ead7671c0d34e488d4ff267b70d93f2/addresses', 'type': 'GET'}, 'documents': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/3ead7671c0d34e488d4ff267b70d93f2/documents', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 02:40:53.923" endtime="20210322 02:40:53.925"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:40:53.927" level="INFO">2f634f27146f6adb</msg>
<status status="PASS" starttime="20210322 02:40:53.926" endtime="20210322 02:40:53.927"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${body}</arg>
</arguments>
<msg timestamp="20210322 02:40:53.929" level="INFO">{ "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "56342709874", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder", "identity_card": "468102371", "pep": false, "cbo": 821450 }</msg>
<status status="PASS" starttime="20210322 02:40:53.928" endtime="20210322 02:40:53.929"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:40:53.931" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:40:53.930" endtime="20210322 02:40:53.931"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${holder_external_key}</var>
</assign>
<msg timestamp="20210322 02:40:53.933" level="INFO">${holder_external_key} = 3ead7671c0d34e488d4ff267b70d93f2</msg>
<status status="PASS" starttime="20210322 02:40:53.932" endtime="20210322 02:40:53.933"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_external_key}</arg>
</arguments>
<msg timestamp="20210322 02:40:53.934" level="INFO">${holder_external_key} = 3ead7671c0d34e488d4ff267b70d93f2</msg>
<status status="PASS" starttime="20210322 02:40:53.934" endtime="20210322 02:40:53.935"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:53.239" endtime="20210322 02:40:53.935"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_name}</arg>
</arguments>
<msg timestamp="20210322 02:40:53.936" level="INFO">${holder_name} = Holder de teste</msg>
<status status="PASS" starttime="20210322 02:40:53.936" endtime="20210322 02:40:53.936"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 02:40:53.938" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:40:53.937" endtime="20210322 02:40:53.938"></status>
</kw>
<kw name="criar holder phone" library="accreditation_post_holder_phone">
<arguments>
<arg>21</arg>
<arg>51</arg>
<arg>996221236</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:40:53.941" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 02:40:53.940" endtime="20210322 02:40:53.941"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"area_code": "${phone_area_code}",</arg>
<arg>"country_code": "${phone_country_code}",</arg>
<arg>"number": "${phone_number}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 02:40:53.942" level="INFO">${body} = { "area_code": "21", "country_code": "51", "number": "996221236" }</msg>
<status status="PASS" starttime="20210322 02:40:53.941" endtime="20210322 02:40:53.942"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/phones</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:40:53.943" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/3ead7671c0d34e488d4ff267b70d93f2/phones, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "area_code": "21", "country_code": "51", "number": "996221236" } 
json=None</msg>
<msg timestamp="20210322 02:40:54.234" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:40:53.942" endtime="20210322 02:40:54.234"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:40:54.236" level="INFO">{'id': 'e5911c737a1347a98deb966eaaf0a985', 'area_code': '21', 'country_code': '51', 'number': '996221236', 'main': True, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/3ead7671c0d34e488d4ff267b70d93f2/phones/e5911c737a1347a98deb966eaaf0a985', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/3ead7671c0d34e488d4ff267b70d93f2', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 02:40:54.234" endtime="20210322 02:40:54.236"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:40:54.237" level="INFO">ca3f4af129e40ce2</msg>
<status status="PASS" starttime="20210322 02:40:54.236" endtime="20210322 02:40:54.237"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:40:54.239" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:40:54.239" endtime="20210322 02:40:54.239"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${phone_external_key}</var>
</assign>
<msg timestamp="20210322 02:40:54.240" level="INFO">${phone_external_key} = e5911c737a1347a98deb966eaaf0a985</msg>
<status status="PASS" starttime="20210322 02:40:54.239" endtime="20210322 02:40:54.240"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${phone_external_key}</arg>
</arguments>
<msg timestamp="20210322 02:40:54.241" level="INFO">${phone_external_key} = e5911c737a1347a98deb966eaaf0a985</msg>
<status status="PASS" starttime="20210322 02:40:54.241" endtime="20210322 02:40:54.241"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:53.939" endtime="20210322 02:40:54.241"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 02:40:54.243" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:40:54.242" endtime="20210322 02:40:54.243"></status>
</kw>
<kw name="criar holder address" library="accreditation_post_holder_address">
<arguments>
<arg>Rio de Janeiro</arg>
<arg>Rio de Janeiro</arg>
<arg>Brasil</arg>
<arg>Bairro de Testes</arg>
<arg>Rua de Testes</arg>
<arg>90</arg>
<arg>apto 200</arg>
<arg>21550987</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:40:54.244" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 02:40:54.244" endtime="20210322 02:40:54.244"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"city": "${city}",</arg>
<arg>"state": "${state}",</arg>
<arg>"country": "${country}",</arg>
<arg>"neighborhood": "${neighborhood}",</arg>
<arg>"street": "${street}",</arg>
<arg>"number": "${number}",</arg>
<arg>"complement": "${complement}",</arg>
<arg>"postal_code": "${postal_code}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 02:40:54.245" level="INFO">${body} = { "city": "Rio de Janeiro", "state": "Rio de Janeiro", "country": "Brasil", "neighborhood": "Bairro de Testes", "street": "Rua de Testes", "number": "90", "complement": "apto 200", "postal_code": "215...</msg>
<status status="PASS" starttime="20210322 02:40:54.245" endtime="20210322 02:40:54.245"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/addresses</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:40:54.246" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/3ead7671c0d34e488d4ff267b70d93f2/addresses, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "city": "Rio de Janeiro", "state": "Rio de Janeiro", "country": "Brasil", "neighborhood": "Bairro de Testes", "street": "Rua de Testes", "number": "90", "complement": "apto 200", "postal_code": "21550987" } 
json=None</msg>
<msg timestamp="20210322 02:40:54.473" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:40:54.246" endtime="20210322 02:40:54.473"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:40:54.474" level="INFO">{'id': 'c20549f1b0264c94bebc366385ec1f1d', 'street': 'Rua de Testes', 'number': '90', 'city': 'Rio de Janeiro', 'complement': 'apto 200', 'state': 'Rio de Janeiro', 'neighborhood': 'Bairro de Testes', 'postal_code': '21550987', 'country': 'Brasil', 'main': True, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/3ead7671c0d34e488d4ff267b70d93f2/addresses/c20549f1b0264c94bebc366385ec1f1d', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/3ead7671c0d34e488d4ff267b70d93f2', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 02:40:54.473" endtime="20210322 02:40:54.474"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:40:54.475" level="INFO">7772b997a4ccb8f9</msg>
<status status="PASS" starttime="20210322 02:40:54.475" endtime="20210322 02:40:54.476"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:40:54.476" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:40:54.476" endtime="20210322 02:40:54.476"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${address_external_key}</var>
</assign>
<msg timestamp="20210322 02:40:54.477" level="INFO">${address_external_key} = c20549f1b0264c94bebc366385ec1f1d</msg>
<status status="PASS" starttime="20210322 02:40:54.477" endtime="20210322 02:40:54.477"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${address_external_key}</arg>
</arguments>
<msg timestamp="20210322 02:40:54.478" level="INFO">${address_external_key} = c20549f1b0264c94bebc366385ec1f1d</msg>
<status status="PASS" starttime="20210322 02:40:54.478" endtime="20210322 02:40:54.478"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:54.243" endtime="20210322 02:40:54.478"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 02:40:54.479" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:40:54.479" endtime="20210322 02:40:54.479"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>SELFIE</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:40:54.480" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 02:40:54.480" endtime="20210322 02:40:54.480"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 02:40:54.481" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 02:40:54.482" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 02:40:54.480" endtime="20210322 02:40:54.482"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:40:54.483" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/3ead7671c0d34e488d4ff267b70d93f2/documents?type=SELFIE, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 02:40:54.749" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:40:54.483" endtime="20210322 02:40:54.749"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:40:54.750" level="INFO">{'id': 'aeec71f0b94a438ea8ae97e8e57048b0', 'document_type': 'selfie', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/3ead7671c0d34e488d4ff267b70d93f2/documents/aeec71f0b94a438ea8ae97e8e57048b0', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/3ead7671c0d34e488d4ff267b70d93f2', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/3ead7671c0d34e488d4ff267b70d93f2/documents/aeec71f0b94a438ea8ae97e8e57048b0/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 02:40:54.749" endtime="20210322 02:40:54.750"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:40:54.751" level="INFO">3222d88e9573e9d2</msg>
<status status="PASS" starttime="20210322 02:40:54.751" endtime="20210322 02:40:54.751"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:40:54.752" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:40:54.752" endtime="20210322 02:40:54.752"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 02:40:54.754" level="INFO">${document_external_key} = aeec71f0b94a438ea8ae97e8e57048b0</msg>
<status status="PASS" starttime="20210322 02:40:54.753" endtime="20210322 02:40:54.754"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 02:40:54.754" level="INFO">${document_external_key} = aeec71f0b94a438ea8ae97e8e57048b0</msg>
<status status="PASS" starttime="20210322 02:40:54.754" endtime="20210322 02:40:54.755"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:54.479" endtime="20210322 02:40:54.755"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 02:40:54.755" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:40:54.755" endtime="20210322 02:40:54.756"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>RG_FRENTE</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:40:54.757" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 02:40:54.757" endtime="20210322 02:40:54.757"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 02:40:54.758" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 02:40:54.760" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 02:40:54.758" endtime="20210322 02:40:54.760"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:40:54.761" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/3ead7671c0d34e488d4ff267b70d93f2/documents?type=RG_FRENTE, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 02:40:55.126" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:40:54.760" endtime="20210322 02:40:55.126"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:40:55.128" level="INFO">{'id': '887bf99b1eff457196daed7b68f42ce4', 'document_type': 'rg_frente', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/3ead7671c0d34e488d4ff267b70d93f2/documents/887bf99b1eff457196daed7b68f42ce4', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/3ead7671c0d34e488d4ff267b70d93f2', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/3ead7671c0d34e488d4ff267b70d93f2/documents/887bf99b1eff457196daed7b68f42ce4/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 02:40:55.127" endtime="20210322 02:40:55.129"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:40:55.131" level="INFO">7b87430495b1374e</msg>
<status status="PASS" starttime="20210322 02:40:55.129" endtime="20210322 02:40:55.131"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:40:55.133" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:40:55.132" endtime="20210322 02:40:55.133"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 02:40:55.136" level="INFO">${document_external_key} = 887bf99b1eff457196daed7b68f42ce4</msg>
<status status="PASS" starttime="20210322 02:40:55.134" endtime="20210322 02:40:55.136"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 02:40:55.137" level="INFO">${document_external_key} = 887bf99b1eff457196daed7b68f42ce4</msg>
<status status="PASS" starttime="20210322 02:40:55.137" endtime="20210322 02:40:55.138"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:54.756" endtime="20210322 02:40:55.138"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 02:40:55.139" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:40:55.139" endtime="20210322 02:40:55.140"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>RG_VERSO</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:40:55.142" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 02:40:55.141" endtime="20210322 02:40:55.142"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 02:40:55.143" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 02:40:55.145" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 02:40:55.142" endtime="20210322 02:40:55.145"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:40:55.147" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/3ead7671c0d34e488d4ff267b70d93f2/documents?type=RG_VERSO, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 02:40:55.399" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:40:55.146" endtime="20210322 02:40:55.399"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:40:55.400" level="INFO">{'id': '4f255e1a76294f3fa8bf40e5fb56e9a5', 'document_type': 'rg_verso', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/3ead7671c0d34e488d4ff267b70d93f2/documents/4f255e1a76294f3fa8bf40e5fb56e9a5', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/3ead7671c0d34e488d4ff267b70d93f2', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/3ead7671c0d34e488d4ff267b70d93f2/documents/4f255e1a76294f3fa8bf40e5fb56e9a5/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 02:40:55.400" endtime="20210322 02:40:55.401"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:40:55.402" level="INFO">794aef2b0de292d3</msg>
<status status="PASS" starttime="20210322 02:40:55.401" endtime="20210322 02:40:55.402"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:40:55.403" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:40:55.402" endtime="20210322 02:40:55.403"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 02:40:55.404" level="INFO">${document_external_key} = 4f255e1a76294f3fa8bf40e5fb56e9a5</msg>
<status status="PASS" starttime="20210322 02:40:55.403" endtime="20210322 02:40:55.404"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 02:40:55.405" level="INFO">${document_external_key} = 4f255e1a76294f3fa8bf40e5fb56e9a5</msg>
<status status="PASS" starttime="20210322 02:40:55.405" endtime="20210322 02:40:55.405"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:55.140" endtime="20210322 02:40:55.406"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 02:40:55.406" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:40:55.406" endtime="20210322 02:40:55.407"></status>
</kw>
<kw name="solicitar aprovação do holder" library="accreditation_request_approval">
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:40:55.408" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 02:40:55.408" endtime="20210322 02:40:55.408"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/approval</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:40:55.409" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/3ead7671c0d34e488d4ff267b70d93f2/approval, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data=None 
json=None</msg>
<msg timestamp="20210322 02:40:55.707" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:40:55.409" endtime="20210322 02:40:55.707"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:40:55.708" level="INFO">{'message': 'Approval request accepted successfully. Processing analysis'}</msg>
<status status="PASS" starttime="20210322 02:40:55.707" endtime="20210322 02:40:55.708"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:40:55.709" level="INFO">35a4ee35c4ec449f</msg>
<status status="PASS" starttime="20210322 02:40:55.709" endtime="20210322 02:40:55.710"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:40:55.711" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:40:55.711" endtime="20210322 02:40:55.711"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:55.407" endtime="20210322 02:40:55.711"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 02:40:55.713" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:40:55.713" endtime="20210322 02:40:55.713"></status>
</kw>
<kw name="recebendo notificação de aprovação" library="accreditation_risk_notification">
<kw name="Uuid 4" library="FakerLibrary">
<doc>Generates a random UUID4 string.
:param cast_to: Specify what type the UUID should be cast to. Default is `str`
:type cast_to: callable</doc>
<assign>
<var>${assessment_id}</var>
</assign>
<msg timestamp="20210322 02:40:55.714" level="INFO">${assessment_id} = 203f82f2-cfc0-4e54-bb23-98d3cda1934b</msg>
<status status="PASS" starttime="20210322 02:40:55.713" endtime="20210322 02:40:55.714"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>year</arg>
</arguments>
<assign>
<var>${year}</var>
</assign>
<msg timestamp="20210322 02:40:55.716" level="INFO">${year} = 2021</msg>
<status status="PASS" starttime="20210322 02:40:55.714" endtime="20210322 02:40:55.716"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>month</arg>
</arguments>
<assign>
<var>${month}</var>
</assign>
<msg timestamp="20210322 02:40:55.716" level="INFO">${month} = 03</msg>
<status status="PASS" starttime="20210322 02:40:55.716" endtime="20210322 02:40:55.716"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>day</arg>
</arguments>
<assign>
<var>${day}</var>
</assign>
<msg timestamp="20210322 02:40:55.717" level="INFO">${day} = 22</msg>
<status status="PASS" starttime="20210322 02:40:55.716" endtime="20210322 02:40:55.717"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:40:55.720" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 02:40:55.718" endtime="20210322 02:40:55.720"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "risk.assessment.result",</arg>
<arg>"resource": "business.holder",</arg>
<arg>"created_at": "${year}-${month}-${day} 15:28:56.747Z",</arg>
<arg>"marketplace_id": "${marketplace_external_key}",</arg>
<arg>"object": {</arg>
<arg>"result": "APPROVED",</arg>
<arg>"holder_id": "${holder_external_key}",</arg>
<arg>"applicant_id": "${application_external_key}",</arg>
<arg>"assessment_id": "${assessment_id}"</arg>
<arg>}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 02:40:55.721" level="INFO">${body} = { "type": "risk.assessment.result", "resource": "business.holder", "created_at": "2021-03-22 15:28:56.747Z", "marketplace_id": "f71a8951368a4cc085cf7875ff44e61c", "object": { "result": "APPROVED", "ho...</msg>
<status status="PASS" starttime="20210322 02:40:55.720" endtime="20210322 02:40:55.721"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/admin/internal_operation/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/registration/approval</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:40:55.722" level="INFO">POST Request using : uri=/admin/internal_operation/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/3ead7671c0d34e488d4ff267b70d93f2/registration/approval, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "risk.assessment.result", "resource": "business.holder", "created_at": "2021-03-22 15:28:56.747Z", "marketplace_id": "f71a8951368a4cc085cf7875ff44e61c", "object": { "result": "APPROVED", "holder_id": "3ead7671c0d34e488d4ff267b70d93f2", "applicant_id": "bcc25a6751c14b52af1340d40dba78c5", "assessment_id": "203f82f2-cfc0-4e54-bb23-98d3cda1934b" } } 
json=None</msg>
<msg timestamp="20210322 02:40:55.937" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:40:55.721" endtime="20210322 02:40:55.938"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:40:55.940" level="INFO">{'message': 'Holder approved successfully'}</msg>
<status status="PASS" starttime="20210322 02:40:55.939" endtime="20210322 02:40:55.940"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:40:55.942" level="INFO">cc270a2332f4ecf1</msg>
<status status="PASS" starttime="20210322 02:40:55.941" endtime="20210322 02:40:55.943"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:40:55.945" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:40:55.944" endtime="20210322 02:40:55.945"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 02:40:55.947" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:40:55.946" endtime="20210322 02:40:55.948"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:55.713" endtime="20210322 02:40:55.948"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 02:40:55.950" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:40:55.949" endtime="20210322 02:40:55.950"></status>
</kw>
<kw name="buscar account por holder" library="accounts_get_accounts_by_holder">
<kw name="conectar accounts" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accounts</arg>
<arg>url=${account_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 02:40:55.954" level="INFO">Creating Session using : alias=accounts, url=https://banking-accounts-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 02:40:55.954" endtime="20210322 02:40:55.955"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:55.952" endtime="20210322 02:40:55.956"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accounts</arg>
<arg>/marketplaces/${marketplace_external_key}/holders/${holder_external_key}/accounts</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:40:55.957" level="INFO">GET Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/holders/3ead7671c0d34e488d4ff267b70d93f2/accounts, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 02:40:56.602" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:40:55.956" endtime="20210322 02:40:56.602"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:40:56.605" level="INFO">{'items': [{'id': 'a69a903f283c48dabfd173d3ac7f48cb', 'holder': '3ead7671c0d34e488d4ff267b70d93f2', 'balance': '0.00', 'currency': 'BRL', 'routing_number': '001', 'number': '2763685054', 'status': 'active', 'metadata': {}, 'created_at': '2021-03-22T05:40:56.750751', 'updated_at': '2021-03-22T05:40:56.750751', 'primary': True, 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'uri': '/v2/marketplaces/f71a8951368a4cc085cf7875ff44e61c/accounts/a69a903f283c48dabfd173d3ac7f48cb', 'resource': 'payment_account'}], 'has_more': False, 'limit': 100, 'total_pages': 1, 'page': 1, 'offset': 0, 'total': '1', 'query_count': '1'}</msg>
<status status="PASS" starttime="20210322 02:40:56.603" endtime="20210322 02:40:56.605"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:40:56.607" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:40:56.606" endtime="20210322 02:40:56.607"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["id"]}</arg>
</arguments>
<assign>
<var>${account_external_key}</var>
</assign>
<msg timestamp="20210322 02:40:56.610" level="INFO">${account_external_key} = a69a903f283c48dabfd173d3ac7f48cb</msg>
<status status="PASS" starttime="20210322 02:40:56.608" endtime="20210322 02:40:56.610"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_external_key}</arg>
</arguments>
<msg timestamp="20210322 02:40:56.611" level="INFO">${account_external_key} = a69a903f283c48dabfd173d3ac7f48cb</msg>
<status status="PASS" starttime="20210322 02:40:56.610" endtime="20210322 02:40:56.611"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["number"]}</arg>
</arguments>
<assign>
<var>${account_number}</var>
</assign>
<msg timestamp="20210322 02:40:56.613" level="INFO">${account_number} = 2763685054</msg>
<status status="PASS" starttime="20210322 02:40:56.612" endtime="20210322 02:40:56.613"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_number}</arg>
</arguments>
<msg timestamp="20210322 02:40:56.614" level="INFO">${account_number} = 2763685054</msg>
<status status="PASS" starttime="20210322 02:40:56.614" endtime="20210322 02:40:56.614"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["routing_number"]}</arg>
</arguments>
<assign>
<var>${account_routing_number}</var>
</assign>
<msg timestamp="20210322 02:40:56.616" level="INFO">${account_routing_number} = 001</msg>
<status status="PASS" starttime="20210322 02:40:56.615" endtime="20210322 02:40:56.616"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_routing_number}</arg>
</arguments>
<msg timestamp="20210322 02:40:56.618" level="INFO">${account_routing_number} = 001</msg>
<status status="PASS" starttime="20210322 02:40:56.617" endtime="20210322 02:40:56.618"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:55.951" endtime="20210322 02:40:56.618"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 02:40:56.619" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:40:56.618" endtime="20210322 02:40:56.619"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:53.231" endtime="20210322 02:40:56.619"></status>
</kw>
<kw name="criar chave pix" library="pix_dict_create_entry">
<arguments>
<arg>phone</arg>
<arg>${phone_pix}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 02:40:56.622" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 02:40:56.621" endtime="20210322 02:40:56.622"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:56.620" endtime="20210322 02:40:56.623"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${type}</arg>
</arguments>
<msg timestamp="20210322 02:40:56.623" level="INFO">${type} = phone</msg>
<status status="PASS" starttime="20210322 02:40:56.623" endtime="20210322 02:40:56.624"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210322 02:40:56.624" level="INFO">${value} = +5521932597034</msg>
<status status="PASS" starttime="20210322 02:40:56.624" endtime="20210322 02:40:56.625"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:40:56.626" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 02:40:56.625" endtime="20210322 02:40:56.626"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "${type}",</arg>
<arg>"value": "${value}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 02:40:56.627" level="INFO">${body} = { "type": "phone", "value": "+5521932597034" }</msg>
<status status="PASS" starttime="20210322 02:40:56.626" endtime="20210322 02:40:56.627"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:40:56.628" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/3ead7671c0d34e488d4ff267b70d93f2/accounts/a69a903f283c48dabfd173d3ac7f48cb/entries, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "phone", "value": "+5521932597034" } 
json=None</msg>
<msg timestamp="20210322 02:40:57.307" level="INFO">${response} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20210322 02:40:56.627" endtime="20210322 02:40:57.307"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:40:57.309" level="INFO">{'id': 'e6eb0be40d334f1185b6d8f263131728', 'status': 'waiting_ownership_verification', 'created_at': '2021-03-22T02:40:58.152', 'updated_at': '2021-03-22T02:40:58.152', 'key': {'value': '+5521932597034', 'type': 'phone'}, 'account': {'id': 'a69a903f283c48dabfd173d3ac7f48cb', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': '3ead7671c0d34e488d4ff267b70d93f2', 'owner': {'name': 'Holder de teste', 'national_registration': '56342709874', 'type': 'individual'}, 'routing_number': '001', 'number': '2763685054', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}, 'resource': 'pix.entry'}</msg>
<status status="PASS" starttime="20210322 02:40:57.308" endtime="20210322 02:40:57.309"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:40:57.310" level="INFO">890eaa93df2f17b9</msg>
<status status="PASS" starttime="20210322 02:40:57.310" endtime="20210322 02:40:57.311"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 02:40:57.312" level="INFO">202</msg>
<status status="PASS" starttime="20210322 02:40:57.311" endtime="20210322 02:40:57.312"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:40:57.313" level="INFO">${response} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20210322 02:40:57.313" endtime="20210322 02:40:57.314"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${entry_external_key}</var>
</assign>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:40:57.315" endtime="20210322 02:40:57.316"></status>
</kw>
<msg timestamp="20210322 02:40:57.317" level="INFO">${entry_external_key} = e6eb0be40d334f1185b6d8f263131728</msg>
<status status="PASS" starttime="20210322 02:40:57.314" endtime="20210322 02:40:57.317"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${entry_external_key}</arg>
</arguments>
<msg timestamp="20210322 02:40:57.318" level="INFO">${entry_external_key} = e6eb0be40d334f1185b6d8f263131728</msg>
<status status="PASS" starttime="20210322 02:40:57.317" endtime="20210322 02:40:57.318"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["key"]["value"]}</arg>
</arguments>
<assign>
<var>${entry_key_value}</var>
</assign>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["key"]["value"]}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:40:57.319" endtime="20210322 02:40:57.320"></status>
</kw>
<msg timestamp="20210322 02:40:57.321" level="INFO">${entry_key_value} = +5521932597034</msg>
<status status="PASS" starttime="20210322 02:40:57.318" endtime="20210322 02:40:57.321"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${entry_key_value}</arg>
</arguments>
<msg timestamp="20210322 02:40:57.322" level="INFO">${entry_key_value} = +5521932597034</msg>
<status status="PASS" starttime="20210322 02:40:57.321" endtime="20210322 02:40:57.322"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:56.620" endtime="20210322 02:40:57.322"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${holder_external_key}</arg>
</arguments>
<assign>
<var>${holder_owner}</var>
</assign>
<msg timestamp="20210322 02:40:57.323" level="INFO">${holder_owner} = 3ead7671c0d34e488d4ff267b70d93f2</msg>
<status status="PASS" starttime="20210322 02:40:57.323" endtime="20210322 02:40:57.323"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${holder_name}</arg>
</arguments>
<assign>
<var>${holder_name_owner}</var>
</assign>
<msg timestamp="20210322 02:40:57.325" level="INFO">${holder_name_owner} = Holder de teste</msg>
<status status="PASS" starttime="20210322 02:40:57.324" endtime="20210322 02:40:57.325"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${national_registration}</arg>
</arguments>
<assign>
<var>${national_registration_owner}</var>
</assign>
<msg timestamp="20210322 02:40:57.326" level="INFO">${national_registration_owner} = 56342709874</msg>
<status status="PASS" starttime="20210322 02:40:57.325" endtime="20210322 02:40:57.326"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${account_external_key}</arg>
</arguments>
<assign>
<var>${account_owner}</var>
</assign>
<msg timestamp="20210322 02:40:57.326" level="INFO">${account_owner} = a69a903f283c48dabfd173d3ac7f48cb</msg>
<status status="PASS" starttime="20210322 02:40:57.326" endtime="20210322 02:40:57.326"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${account_number}</arg>
</arguments>
<assign>
<var>${account_number_owner}</var>
</assign>
<msg timestamp="20210322 02:40:57.327" level="INFO">${account_number_owner} = 2763685054</msg>
<status status="PASS" starttime="20210322 02:40:57.327" endtime="20210322 02:40:57.327"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${entry_external_key}</arg>
</arguments>
<assign>
<var>${entry_owner}</var>
</assign>
<msg timestamp="20210322 02:40:57.328" level="INFO">${entry_owner} = e6eb0be40d334f1185b6d8f263131728</msg>
<status status="PASS" starttime="20210322 02:40:57.327" endtime="20210322 02:40:57.328"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Holder Owner :: ${holder_owner}</arg>
</arguments>
<msg timestamp="20210322 02:40:57.328" level="INFO">Holder Owner :: 3ead7671c0d34e488d4ff267b70d93f2</msg>
<status status="PASS" starttime="20210322 02:40:57.328" endtime="20210322 02:40:57.328"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Account Owner :: ${account_owner}</arg>
</arguments>
<msg timestamp="20210322 02:40:57.329" level="INFO">Account Owner :: a69a903f283c48dabfd173d3ac7f48cb</msg>
<status status="PASS" starttime="20210322 02:40:57.329" endtime="20210322 02:40:57.329"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Account Number Owner :: ${account_number_owner}</arg>
</arguments>
<msg timestamp="20210322 02:40:57.330" level="INFO">Account Number Owner :: 2763685054</msg>
<status status="PASS" starttime="20210322 02:40:57.330" endtime="20210322 02:40:57.330"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>National Registration Holder Owner :: ${national_registration_owner}</arg>
</arguments>
<msg timestamp="20210322 02:40:57.331" level="INFO">National Registration Holder Owner :: 56342709874</msg>
<status status="PASS" starttime="20210322 02:40:57.330" endtime="20210322 02:40:57.331"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Entry Owner :: ${entry_owner}</arg>
</arguments>
<msg timestamp="20210322 02:40:57.331" level="INFO">Entry Owner :: e6eb0be40d334f1185b6d8f263131728</msg>
<status status="PASS" starttime="20210322 02:40:57.331" endtime="20210322 02:40:57.331"></status>
</kw>
<kw name="buscar verification code" library="pix_dict_verification_code">
<arguments>
<arg>${holder_owner}</arg>
<arg>${account_owner}</arg>
<arg>${entry_owner}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 02:40:57.333" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 02:40:57.333" endtime="20210322 02:40:57.333"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:57.332" endtime="20210322 02:40:57.333"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/admin/internal_operation/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries/${entry_external_key}/code</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:40:57.334" level="INFO">GET Request using : uri=/admin/internal_operation/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/3ead7671c0d34e488d4ff267b70d93f2/accounts/a69a903f283c48dabfd173d3ac7f48cb/entries/e6eb0be40d334f1185b6d8f263131728/code, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 02:40:57.950" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:40:57.334" endtime="20210322 02:40:57.950"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:40:57.953" level="INFO">{'code': '8560'}</msg>
<status status="PASS" starttime="20210322 02:40:57.951" endtime="20210322 02:40:57.953"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:40:57.955" level="INFO">3644f82e8b2db971</msg>
<status status="PASS" starttime="20210322 02:40:57.954" endtime="20210322 02:40:57.956"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 02:40:57.957" level="INFO">200</msg>
<status status="PASS" starttime="20210322 02:40:57.956" endtime="20210322 02:40:57.958"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:40:57.959" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:40:57.958" endtime="20210322 02:40:57.959"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["code"]}</arg>
</arguments>
<assign>
<var>${verification_code}</var>
</assign>
<msg timestamp="20210322 02:40:57.961" level="INFO">${verification_code} = 8560</msg>
<status status="PASS" starttime="20210322 02:40:57.960" endtime="20210322 02:40:57.961"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${verification_code}</arg>
</arguments>
<msg timestamp="20210322 02:40:57.962" level="INFO">${verification_code} = 8560</msg>
<status status="PASS" starttime="20210322 02:40:57.961" endtime="20210322 02:40:57.962"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:57.332" endtime="20210322 02:40:57.963"></status>
</kw>
<kw name="confirmar propriedade da chave pix" library="pix_dict_confirm_propriety">
<arguments>
<arg>${verification_code}</arg>
<arg>${holder_owner}</arg>
<arg>${account_owner}</arg>
<arg>${entry_owner}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 02:40:57.965" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 02:40:57.965" endtime="20210322 02:40:57.966"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:57.964" endtime="20210322 02:40:57.966"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:40:57.967" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 02:40:57.966" endtime="20210322 02:40:57.967"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"code": "${verification_code}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 02:40:57.968" level="INFO">${body} = { "code": "8560" }</msg>
<status status="PASS" starttime="20210322 02:40:57.967" endtime="20210322 02:40:57.968"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries/${entry_external_key}/ownership</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:40:57.969" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/3ead7671c0d34e488d4ff267b70d93f2/accounts/a69a903f283c48dabfd173d3ac7f48cb/entries/e6eb0be40d334f1185b6d8f263131728/ownership, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "code": "8560" } 
json=None</msg>
<msg timestamp="20210322 02:40:59.573" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:40:57.968" endtime="20210322 02:40:59.573"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:40:59.575" level="INFO">{'id': 'e6eb0be40d334f1185b6d8f263131728', 'status': 'active', 'created_at': '2021-03-22T02:40:58.152', 'updated_at': '2021-03-22T02:41:00.434', 'key': {'value': '+5521932597034', 'type': 'phone'}, 'account': {'id': 'a69a903f283c48dabfd173d3ac7f48cb', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': '3ead7671c0d34e488d4ff267b70d93f2', 'owner': {'name': 'Holder de teste', 'national_registration': '56342709874', 'type': 'individual'}, 'routing_number': '001', 'number': '2763685054', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}, 'resource': 'pix.entry'}</msg>
<status status="PASS" starttime="20210322 02:40:59.574" endtime="20210322 02:40:59.576"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:40:59.577" level="INFO">1cf245ad7031c8aa</msg>
<status status="PASS" starttime="20210322 02:40:59.576" endtime="20210322 02:40:59.578"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 02:40:59.580" level="INFO">201</msg>
<status status="PASS" starttime="20210322 02:40:59.579" endtime="20210322 02:40:59.580"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:40:59.582" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:40:59.581" endtime="20210322 02:40:59.582"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:57.963" endtime="20210322 02:40:59.582"></status>
</kw>
<kw name="validar ativação da chave de endereçamento" library="asserts">
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["status"]}</arg>
<arg>active</arg>
</arguments>
<status status="PASS" starttime="20210322 02:40:59.584" endtime="20210322 02:40:59.585"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:59.583" endtime="20210322 02:40:59.585"></status>
</kw>
<kw name="criar holder individual ativo" library="accreditation_create_holder_active">
<kw name="conectar accreditation" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accreditation</arg>
<arg>url=${accreditation_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 02:40:59.588" level="INFO">Creating Session using : alias=accreditation, url=https://banking-accreditation-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 02:40:59.587" endtime="20210322 02:40:59.589"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:59.586" endtime="20210322 02:40:59.589"></status>
</kw>
<kw name="Cpf" library="FakerLibrary">
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 02:40:59.590" level="INFO">${national_registration} = 312.794.586-82</msg>
<status status="PASS" starttime="20210322 02:40:59.590" endtime="20210322 02:40:59.590"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${national_registration}</arg>
<arg>.</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 02:40:59.591" level="INFO">${national_registration} = 312794586-82</msg>
<status status="PASS" starttime="20210322 02:40:59.591" endtime="20210322 02:40:59.591"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${national_registration}</arg>
<arg>-</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 02:40:59.592" level="INFO">${national_registration} = 31279458682</msg>
<status status="PASS" starttime="20210322 02:40:59.592" endtime="20210322 02:40:59.592"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${national_registration}</arg>
</arguments>
<msg timestamp="20210322 02:40:59.594" level="INFO">${national_registration} = 31279458682</msg>
<status status="PASS" starttime="20210322 02:40:59.593" endtime="20210322 02:40:59.594"></status>
</kw>
<kw name="Rg" library="FakerLibrary">
<doc>Brazilian RG, return plain numbers.
Check:  https://www.ngmatematica.com/2014/02/como-determinar-o-digito-verificador-do.html</doc>
<assign>
<var>${identity_card}</var>
</assign>
<msg timestamp="20210322 02:40:59.595" level="INFO">${identity_card} = 083271569</msg>
<status status="PASS" starttime="20210322 02:40:59.595" endtime="20210322 02:40:59.595"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${identity_card}</arg>
</arguments>
<msg timestamp="20210322 02:40:59.596" level="INFO">${identity_card} = 083271569</msg>
<status status="PASS" starttime="20210322 02:40:59.596" endtime="20210322 02:40:59.596"></status>
</kw>
<kw name="criar holder individual" library="accreditation_post_holder_individual">
<arguments>
<arg>holder_type=individual</arg>
<arg>holder_name=${holder_name}</arg>
<arg>email=${email}</arg>
<arg>national_registration=${national_registration}</arg>
<arg>revenue=${revenue}</arg>
<arg>birthday=${birthday}</arg>
<arg>mothers_name=${mothers_name}</arg>
<arg>identity_card=${identity_card}</arg>
<arg>pep=false</arg>
<arg>cbo=${cbo}</arg>
</arguments>
<kw name="conectar accreditation" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accreditation</arg>
<arg>url=${accreditation_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 02:40:59.599" level="INFO">Creating Session using : alias=accreditation, url=https://banking-accreditation-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 02:40:59.599" endtime="20210322 02:40:59.600"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:59.598" endtime="20210322 02:40:59.600"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_type}</arg>
</arguments>
<msg timestamp="20210322 02:40:59.601" level="INFO">${holder_type} = individual</msg>
<status status="PASS" starttime="20210322 02:40:59.600" endtime="20210322 02:40:59.601"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_name}</arg>
</arguments>
<msg timestamp="20210322 02:40:59.601" level="INFO">${holder_name} = Holder de teste</msg>
<status status="PASS" starttime="20210322 02:40:59.601" endtime="20210322 02:40:59.602"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:40:59.603" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 02:40:59.602" endtime="20210322 02:40:59.603"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "${holder_type}",</arg>
<arg>"name": "${holder_name}",</arg>
<arg>"email": "${email}",</arg>
<arg>"national_registration": "${national_registration}",</arg>
<arg>"revenue": ${revenue},</arg>
<arg>"birthday": "${birthday}",</arg>
<arg>"mothers_name": "${mothers_name}",</arg>
<arg>"identity_card": "${identity_card}",</arg>
<arg>"pep": false,</arg>
<arg>"cbo": ${cbo}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 02:40:59.604" level="INFO">${body} = { "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "31279458682", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder",...</msg>
<status status="PASS" starttime="20210322 02:40:59.603" endtime="20210322 02:40:59.604"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:40:59.605" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "31279458682", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder", "identity_card": "083271569", "pep": false, "cbo": 821450 } 
json=None</msg>
<msg timestamp="20210322 02:41:00.293" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:40:59.604" endtime="20210322 02:41:00.293"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:41:00.296" level="INFO">{'id': 'f37ae9b291d04666ab1eb5457642f2ef', 'name': 'Holder de teste', 'revenue': 5500.0, 'email': 'teste@teste.com.br', 'status': 'waiting_info_and_documents', 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'marketplace_name': 'Marketplace de Teste', 'created_at': '2021-03-22T02:41:01.12671', 'updated_at': '2021-03-22T02:41:01.126712', 'type': 'individual', 'national_registration': '31279458682', 'birthday': '1988-04-23', 'mothers_name': 'Mãe do Holder', 'identity_card': '083271569', 'pep': False, 'cbo': '821450', '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/f37ae9b291d04666ab1eb5457642f2ef', 'type': 'GET'}, 'phones': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/f37ae9b291d04666ab1eb5457642f2ef/phones', 'type': 'GET'}, 'addresses': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/f37ae9b291d04666ab1eb5457642f2ef/addresses', 'type': 'GET'}, 'documents': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/f37ae9b291d04666ab1eb5457642f2ef/documents', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 02:41:00.294" endtime="20210322 02:41:00.296"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:41:00.298" level="INFO">efa5641909be93da</msg>
<status status="PASS" starttime="20210322 02:41:00.297" endtime="20210322 02:41:00.299"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${body}</arg>
</arguments>
<msg timestamp="20210322 02:41:00.300" level="INFO">{ "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "31279458682", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder", "identity_card": "083271569", "pep": false, "cbo": 821450 }</msg>
<status status="PASS" starttime="20210322 02:41:00.299" endtime="20210322 02:41:00.301"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:41:00.302" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:41:00.301" endtime="20210322 02:41:00.302"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${holder_external_key}</var>
</assign>
<msg timestamp="20210322 02:41:00.305" level="INFO">${holder_external_key} = f37ae9b291d04666ab1eb5457642f2ef</msg>
<status status="PASS" starttime="20210322 02:41:00.303" endtime="20210322 02:41:00.305"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_external_key}</arg>
</arguments>
<msg timestamp="20210322 02:41:00.305" level="INFO">${holder_external_key} = f37ae9b291d04666ab1eb5457642f2ef</msg>
<status status="PASS" starttime="20210322 02:41:00.305" endtime="20210322 02:41:00.306"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:59.596" endtime="20210322 02:41:00.306"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_name}</arg>
</arguments>
<msg timestamp="20210322 02:41:00.307" level="INFO">${holder_name} = Holder de teste</msg>
<status status="PASS" starttime="20210322 02:41:00.306" endtime="20210322 02:41:00.307"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 02:41:00.308" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:41:00.307" endtime="20210322 02:41:00.308"></status>
</kw>
<kw name="criar holder phone" library="accreditation_post_holder_phone">
<arguments>
<arg>21</arg>
<arg>51</arg>
<arg>996221236</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:41:00.310" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 02:41:00.309" endtime="20210322 02:41:00.310"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"area_code": "${phone_area_code}",</arg>
<arg>"country_code": "${phone_country_code}",</arg>
<arg>"number": "${phone_number}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 02:41:00.311" level="INFO">${body} = { "area_code": "21", "country_code": "51", "number": "996221236" }</msg>
<status status="PASS" starttime="20210322 02:41:00.310" endtime="20210322 02:41:00.311"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/phones</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:41:00.312" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/f37ae9b291d04666ab1eb5457642f2ef/phones, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "area_code": "21", "country_code": "51", "number": "996221236" } 
json=None</msg>
<msg timestamp="20210322 02:41:00.549" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:41:00.311" endtime="20210322 02:41:00.549"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:41:00.553" level="INFO">{'id': 'b1e12f2861b2474797ab0c867600dbf4', 'area_code': '21', 'country_code': '51', 'number': '996221236', 'main': True, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/f37ae9b291d04666ab1eb5457642f2ef/phones/b1e12f2861b2474797ab0c867600dbf4', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/f37ae9b291d04666ab1eb5457642f2ef', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 02:41:00.550" endtime="20210322 02:41:00.554"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:41:00.555" level="INFO">d4c1f15f38dca9a2</msg>
<status status="PASS" starttime="20210322 02:41:00.555" endtime="20210322 02:41:00.556"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:41:00.557" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:41:00.556" endtime="20210322 02:41:00.557"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${phone_external_key}</var>
</assign>
<msg timestamp="20210322 02:41:00.559" level="INFO">${phone_external_key} = b1e12f2861b2474797ab0c867600dbf4</msg>
<status status="PASS" starttime="20210322 02:41:00.558" endtime="20210322 02:41:00.559"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${phone_external_key}</arg>
</arguments>
<msg timestamp="20210322 02:41:00.560" level="INFO">${phone_external_key} = b1e12f2861b2474797ab0c867600dbf4</msg>
<status status="PASS" starttime="20210322 02:41:00.560" endtime="20210322 02:41:00.560"></status>
</kw>
<status status="PASS" starttime="20210322 02:41:00.308" endtime="20210322 02:41:00.561"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 02:41:00.562" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:41:00.561" endtime="20210322 02:41:00.562"></status>
</kw>
<kw name="criar holder address" library="accreditation_post_holder_address">
<arguments>
<arg>Rio de Janeiro</arg>
<arg>Rio de Janeiro</arg>
<arg>Brasil</arg>
<arg>Bairro de Testes</arg>
<arg>Rua de Testes</arg>
<arg>90</arg>
<arg>apto 200</arg>
<arg>21550987</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:41:00.564" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 02:41:00.563" endtime="20210322 02:41:00.564"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"city": "${city}",</arg>
<arg>"state": "${state}",</arg>
<arg>"country": "${country}",</arg>
<arg>"neighborhood": "${neighborhood}",</arg>
<arg>"street": "${street}",</arg>
<arg>"number": "${number}",</arg>
<arg>"complement": "${complement}",</arg>
<arg>"postal_code": "${postal_code}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 02:41:00.565" level="INFO">${body} = { "city": "Rio de Janeiro", "state": "Rio de Janeiro", "country": "Brasil", "neighborhood": "Bairro de Testes", "street": "Rua de Testes", "number": "90", "complement": "apto 200", "postal_code": "215...</msg>
<status status="PASS" starttime="20210322 02:41:00.564" endtime="20210322 02:41:00.565"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/addresses</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:41:00.566" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/f37ae9b291d04666ab1eb5457642f2ef/addresses, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "city": "Rio de Janeiro", "state": "Rio de Janeiro", "country": "Brasil", "neighborhood": "Bairro de Testes", "street": "Rua de Testes", "number": "90", "complement": "apto 200", "postal_code": "21550987" } 
json=None</msg>
<msg timestamp="20210322 02:41:00.835" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:41:00.566" endtime="20210322 02:41:00.835"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:41:00.837" level="INFO">{'id': '3b7d31b08f6843239f27f0a588e7b00b', 'street': 'Rua de Testes', 'number': '90', 'city': 'Rio de Janeiro', 'complement': 'apto 200', 'state': 'Rio de Janeiro', 'neighborhood': 'Bairro de Testes', 'postal_code': '21550987', 'country': 'Brasil', 'main': True, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/f37ae9b291d04666ab1eb5457642f2ef/addresses/3b7d31b08f6843239f27f0a588e7b00b', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/f37ae9b291d04666ab1eb5457642f2ef', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 02:41:00.836" endtime="20210322 02:41:00.837"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:41:00.839" level="INFO">3324f8465d5ebcd7</msg>
<status status="PASS" starttime="20210322 02:41:00.839" endtime="20210322 02:41:00.840"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:41:00.843" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:41:00.842" endtime="20210322 02:41:00.843"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${address_external_key}</var>
</assign>
<msg timestamp="20210322 02:41:00.846" level="INFO">${address_external_key} = 3b7d31b08f6843239f27f0a588e7b00b</msg>
<status status="PASS" starttime="20210322 02:41:00.844" endtime="20210322 02:41:00.846"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${address_external_key}</arg>
</arguments>
<msg timestamp="20210322 02:41:00.847" level="INFO">${address_external_key} = 3b7d31b08f6843239f27f0a588e7b00b</msg>
<status status="PASS" starttime="20210322 02:41:00.846" endtime="20210322 02:41:00.847"></status>
</kw>
<status status="PASS" starttime="20210322 02:41:00.562" endtime="20210322 02:41:00.848"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 02:41:00.848" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:41:00.848" endtime="20210322 02:41:00.848"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>SELFIE</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:41:00.850" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 02:41:00.850" endtime="20210322 02:41:00.850"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 02:41:00.852" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 02:41:00.853" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 02:41:00.850" endtime="20210322 02:41:00.854"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:41:00.856" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/f37ae9b291d04666ab1eb5457642f2ef/documents?type=SELFIE, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 02:41:01.158" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:41:00.854" endtime="20210322 02:41:01.158"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:41:01.161" level="INFO">{'id': 'ee56a7e7964f49c68ad797059b05c78b', 'document_type': 'selfie', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/f37ae9b291d04666ab1eb5457642f2ef/documents/ee56a7e7964f49c68ad797059b05c78b', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/f37ae9b291d04666ab1eb5457642f2ef', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/f37ae9b291d04666ab1eb5457642f2ef/documents/ee56a7e7964f49c68ad797059b05c78b/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 02:41:01.159" endtime="20210322 02:41:01.162"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:41:01.163" level="INFO">3e971727ce7cc3a7</msg>
<status status="PASS" starttime="20210322 02:41:01.163" endtime="20210322 02:41:01.164"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:41:01.165" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:41:01.164" endtime="20210322 02:41:01.165"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 02:41:01.167" level="INFO">${document_external_key} = ee56a7e7964f49c68ad797059b05c78b</msg>
<status status="PASS" starttime="20210322 02:41:01.166" endtime="20210322 02:41:01.167"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 02:41:01.169" level="INFO">${document_external_key} = ee56a7e7964f49c68ad797059b05c78b</msg>
<status status="PASS" starttime="20210322 02:41:01.168" endtime="20210322 02:41:01.169"></status>
</kw>
<status status="PASS" starttime="20210322 02:41:00.850" endtime="20210322 02:41:01.169"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 02:41:01.170" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:41:01.169" endtime="20210322 02:41:01.170"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>RG_FRENTE</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:41:01.172" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 02:41:01.172" endtime="20210322 02:41:01.172"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 02:41:01.173" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 02:41:01.175" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 02:41:01.173" endtime="20210322 02:41:01.175"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:41:01.176" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/f37ae9b291d04666ab1eb5457642f2ef/documents?type=RG_FRENTE, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 02:41:01.462" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:41:01.175" endtime="20210322 02:41:01.462"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:41:01.462" level="INFO">{'id': '22f80cc8e3174b4baffe9c249374327c', 'document_type': 'rg_frente', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/f37ae9b291d04666ab1eb5457642f2ef/documents/22f80cc8e3174b4baffe9c249374327c', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/f37ae9b291d04666ab1eb5457642f2ef', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/f37ae9b291d04666ab1eb5457642f2ef/documents/22f80cc8e3174b4baffe9c249374327c/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 02:41:01.462" endtime="20210322 02:41:01.463"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:41:01.464" level="INFO">ba8c9aa0457ff4fe</msg>
<status status="PASS" starttime="20210322 02:41:01.463" endtime="20210322 02:41:01.464"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:41:01.465" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:41:01.464" endtime="20210322 02:41:01.465"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 02:41:01.466" level="INFO">${document_external_key} = 22f80cc8e3174b4baffe9c249374327c</msg>
<status status="PASS" starttime="20210322 02:41:01.465" endtime="20210322 02:41:01.466"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 02:41:01.468" level="INFO">${document_external_key} = 22f80cc8e3174b4baffe9c249374327c</msg>
<status status="PASS" starttime="20210322 02:41:01.467" endtime="20210322 02:41:01.468"></status>
</kw>
<status status="PASS" starttime="20210322 02:41:01.171" endtime="20210322 02:41:01.468"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 02:41:01.469" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:41:01.468" endtime="20210322 02:41:01.469"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>RG_VERSO</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:41:01.471" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 02:41:01.470" endtime="20210322 02:41:01.471"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 02:41:01.472" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 02:41:01.474" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 02:41:01.472" endtime="20210322 02:41:01.474"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:41:01.475" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/f37ae9b291d04666ab1eb5457642f2ef/documents?type=RG_VERSO, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 02:41:01.735" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:41:01.474" endtime="20210322 02:41:01.735"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:41:01.736" level="INFO">{'id': 'f015fee1ed3342299cbdf8886e3108a9', 'document_type': 'rg_verso', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/f37ae9b291d04666ab1eb5457642f2ef/documents/f015fee1ed3342299cbdf8886e3108a9', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/f37ae9b291d04666ab1eb5457642f2ef', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/f37ae9b291d04666ab1eb5457642f2ef/documents/f015fee1ed3342299cbdf8886e3108a9/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 02:41:01.736" endtime="20210322 02:41:01.737"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:41:01.738" level="INFO">baa3eb03b0df0750</msg>
<status status="PASS" starttime="20210322 02:41:01.737" endtime="20210322 02:41:01.738"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:41:01.739" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:41:01.738" endtime="20210322 02:41:01.739"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 02:41:01.740" level="INFO">${document_external_key} = f015fee1ed3342299cbdf8886e3108a9</msg>
<status status="PASS" starttime="20210322 02:41:01.739" endtime="20210322 02:41:01.740"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 02:41:01.741" level="INFO">${document_external_key} = f015fee1ed3342299cbdf8886e3108a9</msg>
<status status="PASS" starttime="20210322 02:41:01.741" endtime="20210322 02:41:01.741"></status>
</kw>
<status status="PASS" starttime="20210322 02:41:01.469" endtime="20210322 02:41:01.742"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 02:41:01.742" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:41:01.742" endtime="20210322 02:41:01.743"></status>
</kw>
<kw name="solicitar aprovação do holder" library="accreditation_request_approval">
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:41:01.744" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 02:41:01.744" endtime="20210322 02:41:01.744"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/approval</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:41:01.745" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/f37ae9b291d04666ab1eb5457642f2ef/approval, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data=None 
json=None</msg>
<msg timestamp="20210322 02:41:02.025" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:41:01.745" endtime="20210322 02:41:02.026"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:41:02.028" level="INFO">{'message': 'Approval request accepted successfully. Processing analysis'}</msg>
<status status="PASS" starttime="20210322 02:41:02.027" endtime="20210322 02:41:02.029"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:41:02.030" level="INFO">bf68c14b1ad80126</msg>
<status status="PASS" starttime="20210322 02:41:02.029" endtime="20210322 02:41:02.032"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:41:02.033" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:41:02.032" endtime="20210322 02:41:02.033"></status>
</kw>
<status status="PASS" starttime="20210322 02:41:01.743" endtime="20210322 02:41:02.033"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 02:41:02.036" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:41:02.035" endtime="20210322 02:41:02.036"></status>
</kw>
<kw name="recebendo notificação de aprovação" library="accreditation_risk_notification">
<kw name="Uuid 4" library="FakerLibrary">
<doc>Generates a random UUID4 string.
:param cast_to: Specify what type the UUID should be cast to. Default is `str`
:type cast_to: callable</doc>
<assign>
<var>${assessment_id}</var>
</assign>
<msg timestamp="20210322 02:41:02.038" level="INFO">${assessment_id} = dde3c9ce-67d7-4655-8a83-12dde7eee905</msg>
<status status="PASS" starttime="20210322 02:41:02.037" endtime="20210322 02:41:02.038"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>year</arg>
</arguments>
<assign>
<var>${year}</var>
</assign>
<msg timestamp="20210322 02:41:02.039" level="INFO">${year} = 2021</msg>
<status status="PASS" starttime="20210322 02:41:02.038" endtime="20210322 02:41:02.039"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>month</arg>
</arguments>
<assign>
<var>${month}</var>
</assign>
<msg timestamp="20210322 02:41:02.040" level="INFO">${month} = 03</msg>
<status status="PASS" starttime="20210322 02:41:02.040" endtime="20210322 02:41:02.040"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>day</arg>
</arguments>
<assign>
<var>${day}</var>
</assign>
<msg timestamp="20210322 02:41:02.041" level="INFO">${day} = 22</msg>
<status status="PASS" starttime="20210322 02:41:02.041" endtime="20210322 02:41:02.042"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:41:02.043" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 02:41:02.042" endtime="20210322 02:41:02.043"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "risk.assessment.result",</arg>
<arg>"resource": "business.holder",</arg>
<arg>"created_at": "${year}-${month}-${day} 15:28:56.747Z",</arg>
<arg>"marketplace_id": "${marketplace_external_key}",</arg>
<arg>"object": {</arg>
<arg>"result": "APPROVED",</arg>
<arg>"holder_id": "${holder_external_key}",</arg>
<arg>"applicant_id": "${application_external_key}",</arg>
<arg>"assessment_id": "${assessment_id}"</arg>
<arg>}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 02:41:02.045" level="INFO">${body} = { "type": "risk.assessment.result", "resource": "business.holder", "created_at": "2021-03-22 15:28:56.747Z", "marketplace_id": "f71a8951368a4cc085cf7875ff44e61c", "object": { "result": "APPROVED", "ho...</msg>
<status status="PASS" starttime="20210322 02:41:02.043" endtime="20210322 02:41:02.045"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/admin/internal_operation/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/registration/approval</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:41:02.046" level="INFO">POST Request using : uri=/admin/internal_operation/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/f37ae9b291d04666ab1eb5457642f2ef/registration/approval, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "risk.assessment.result", "resource": "business.holder", "created_at": "2021-03-22 15:28:56.747Z", "marketplace_id": "f71a8951368a4cc085cf7875ff44e61c", "object": { "result": "APPROVED", "holder_id": "f37ae9b291d04666ab1eb5457642f2ef", "applicant_id": "bcc25a6751c14b52af1340d40dba78c5", "assessment_id": "dde3c9ce-67d7-4655-8a83-12dde7eee905" } } 
json=None</msg>
<msg timestamp="20210322 02:41:02.279" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:41:02.045" endtime="20210322 02:41:02.279"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:41:02.281" level="INFO">{'message': 'Holder approved successfully'}</msg>
<status status="PASS" starttime="20210322 02:41:02.280" endtime="20210322 02:41:02.281"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:41:02.283" level="INFO">51a651c8912705bf</msg>
<status status="PASS" starttime="20210322 02:41:02.282" endtime="20210322 02:41:02.283"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:41:02.286" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:41:02.284" endtime="20210322 02:41:02.286"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 02:41:02.288" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:41:02.287" endtime="20210322 02:41:02.289"></status>
</kw>
<status status="PASS" starttime="20210322 02:41:02.036" endtime="20210322 02:41:02.289"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 02:41:02.292" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:41:02.290" endtime="20210322 02:41:02.292"></status>
</kw>
<kw name="buscar account por holder" library="accounts_get_accounts_by_holder">
<kw name="conectar accounts" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accounts</arg>
<arg>url=${account_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 02:41:02.296" level="INFO">Creating Session using : alias=accounts, url=https://banking-accounts-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 02:41:02.295" endtime="20210322 02:41:02.296"></status>
</kw>
<status status="PASS" starttime="20210322 02:41:02.294" endtime="20210322 02:41:02.297"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accounts</arg>
<arg>/marketplaces/${marketplace_external_key}/holders/${holder_external_key}/accounts</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:41:02.298" level="INFO">GET Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/holders/f37ae9b291d04666ab1eb5457642f2ef/accounts, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 02:41:02.929" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:41:02.297" endtime="20210322 02:41:02.929"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:41:02.930" level="INFO">{'items': [{'id': '6a600057a64a49c8a76abe5328be09db', 'holder': 'f37ae9b291d04666ab1eb5457642f2ef', 'balance': '0.00', 'currency': 'BRL', 'routing_number': '001', 'number': '1609744467', 'status': 'active', 'metadata': {}, 'created_at': '2021-03-22T05:41:03.078949', 'updated_at': '2021-03-22T05:41:03.078949', 'primary': True, 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'uri': '/v2/marketplaces/f71a8951368a4cc085cf7875ff44e61c/accounts/6a600057a64a49c8a76abe5328be09db', 'resource': 'payment_account'}], 'has_more': False, 'limit': 100, 'total_pages': 1, 'page': 1, 'offset': 0, 'total': '1', 'query_count': '1'}</msg>
<status status="PASS" starttime="20210322 02:41:02.930" endtime="20210322 02:41:02.931"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:41:02.932" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:41:02.931" endtime="20210322 02:41:02.932"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["id"]}</arg>
</arguments>
<assign>
<var>${account_external_key}</var>
</assign>
<msg timestamp="20210322 02:41:02.933" level="INFO">${account_external_key} = 6a600057a64a49c8a76abe5328be09db</msg>
<status status="PASS" starttime="20210322 02:41:02.932" endtime="20210322 02:41:02.933"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_external_key}</arg>
</arguments>
<msg timestamp="20210322 02:41:02.934" level="INFO">${account_external_key} = 6a600057a64a49c8a76abe5328be09db</msg>
<status status="PASS" starttime="20210322 02:41:02.934" endtime="20210322 02:41:02.934"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["number"]}</arg>
</arguments>
<assign>
<var>${account_number}</var>
</assign>
<msg timestamp="20210322 02:41:02.936" level="INFO">${account_number} = 1609744467</msg>
<status status="PASS" starttime="20210322 02:41:02.935" endtime="20210322 02:41:02.936"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_number}</arg>
</arguments>
<msg timestamp="20210322 02:41:02.937" level="INFO">${account_number} = 1609744467</msg>
<status status="PASS" starttime="20210322 02:41:02.936" endtime="20210322 02:41:02.937"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["routing_number"]}</arg>
</arguments>
<assign>
<var>${account_routing_number}</var>
</assign>
<msg timestamp="20210322 02:41:02.938" level="INFO">${account_routing_number} = 001</msg>
<status status="PASS" starttime="20210322 02:41:02.937" endtime="20210322 02:41:02.938"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_routing_number}</arg>
</arguments>
<msg timestamp="20210322 02:41:02.939" level="INFO">${account_routing_number} = 001</msg>
<status status="PASS" starttime="20210322 02:41:02.939" endtime="20210322 02:41:02.939"></status>
</kw>
<status status="PASS" starttime="20210322 02:41:02.293" endtime="20210322 02:41:02.940"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 02:41:02.940" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:41:02.940" endtime="20210322 02:41:02.941"></status>
</kw>
<status status="PASS" starttime="20210322 02:40:59.586" endtime="20210322 02:41:02.941"></status>
</kw>
<kw name="criar chave pix" library="pix_dict_create_entry">
<arguments>
<arg>phone</arg>
<arg>${phone_pix}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 02:41:02.943" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 02:41:02.943" endtime="20210322 02:41:02.944"></status>
</kw>
<status status="PASS" starttime="20210322 02:41:02.942" endtime="20210322 02:41:02.944"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${type}</arg>
</arguments>
<msg timestamp="20210322 02:41:02.945" level="INFO">${type} = phone</msg>
<status status="PASS" starttime="20210322 02:41:02.944" endtime="20210322 02:41:02.945"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210322 02:41:02.946" level="INFO">${value} = +5521932597034</msg>
<status status="PASS" starttime="20210322 02:41:02.945" endtime="20210322 02:41:02.946"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:41:02.947" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 02:41:02.947" endtime="20210322 02:41:02.947"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "${type}",</arg>
<arg>"value": "${value}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 02:41:02.948" level="INFO">${body} = { "type": "phone", "value": "+5521932597034" }</msg>
<status status="PASS" starttime="20210322 02:41:02.947" endtime="20210322 02:41:02.948"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:41:02.949" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/f37ae9b291d04666ab1eb5457642f2ef/accounts/6a600057a64a49c8a76abe5328be09db/entries, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "phone", "value": "+5521932597034" } 
json=None</msg>
<msg timestamp="20210322 02:41:03.622" level="INFO">${response} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20210322 02:41:02.948" endtime="20210322 02:41:03.622"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:41:03.625" level="INFO">{'id': '6f492527166a42e2bd73b030e6ce64a4', 'status': 'waiting_ownership_verification', 'created_at': '2021-03-22T02:41:04.464', 'updated_at': '2021-03-22T02:41:04.464', 'key': {'value': '+5521932597034', 'type': 'phone'}, 'account': {'id': '6a600057a64a49c8a76abe5328be09db', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': 'f37ae9b291d04666ab1eb5457642f2ef', 'owner': {'name': 'Holder de teste', 'national_registration': '31279458682', 'type': 'individual'}, 'routing_number': '001', 'number': '1609744467', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}, 'resource': 'pix.entry'}</msg>
<status status="PASS" starttime="20210322 02:41:03.624" endtime="20210322 02:41:03.625"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:41:03.627" level="INFO">bbb7dbbf0a87f4c3</msg>
<status status="PASS" starttime="20210322 02:41:03.626" endtime="20210322 02:41:03.627"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 02:41:03.629" level="INFO">202</msg>
<status status="PASS" starttime="20210322 02:41:03.628" endtime="20210322 02:41:03.629"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:41:03.630" level="INFO">${response} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20210322 02:41:03.629" endtime="20210322 02:41:03.630"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${entry_external_key}</var>
</assign>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:41:03.632" endtime="20210322 02:41:03.633"></status>
</kw>
<msg timestamp="20210322 02:41:03.633" level="INFO">${entry_external_key} = 6f492527166a42e2bd73b030e6ce64a4</msg>
<status status="PASS" starttime="20210322 02:41:03.631" endtime="20210322 02:41:03.633"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${entry_external_key}</arg>
</arguments>
<msg timestamp="20210322 02:41:03.635" level="INFO">${entry_external_key} = 6f492527166a42e2bd73b030e6ce64a4</msg>
<status status="PASS" starttime="20210322 02:41:03.635" endtime="20210322 02:41:03.635"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["key"]["value"]}</arg>
</arguments>
<assign>
<var>${entry_key_value}</var>
</assign>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["key"]["value"]}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:41:03.636" endtime="20210322 02:41:03.638"></status>
</kw>
<msg timestamp="20210322 02:41:03.638" level="INFO">${entry_key_value} = +5521932597034</msg>
<status status="PASS" starttime="20210322 02:41:03.636" endtime="20210322 02:41:03.638"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${entry_key_value}</arg>
</arguments>
<msg timestamp="20210322 02:41:03.639" level="INFO">${entry_key_value} = +5521932597034</msg>
<status status="PASS" starttime="20210322 02:41:03.638" endtime="20210322 02:41:03.639"></status>
</kw>
<status status="PASS" starttime="20210322 02:41:02.941" endtime="20210322 02:41:03.640"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${holder_external_key}</arg>
</arguments>
<assign>
<var>${holder_claimer}</var>
</assign>
<msg timestamp="20210322 02:41:03.640" level="INFO">${holder_claimer} = f37ae9b291d04666ab1eb5457642f2ef</msg>
<status status="PASS" starttime="20210322 02:41:03.640" endtime="20210322 02:41:03.640"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${account_external_key}</arg>
</arguments>
<assign>
<var>${account_claimer}</var>
</assign>
<msg timestamp="20210322 02:41:03.641" level="INFO">${account_claimer} = 6a600057a64a49c8a76abe5328be09db</msg>
<status status="PASS" starttime="20210322 02:41:03.640" endtime="20210322 02:41:03.641"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${entry_external_key}</arg>
</arguments>
<assign>
<var>${entry_claimer}</var>
</assign>
<msg timestamp="20210322 02:41:03.642" level="INFO">${entry_claimer} = 6f492527166a42e2bd73b030e6ce64a4</msg>
<status status="PASS" starttime="20210322 02:41:03.641" endtime="20210322 02:41:03.642"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Holder Claimer :: ${holder_claimer}</arg>
</arguments>
<msg timestamp="20210322 02:41:03.643" level="INFO">Holder Claimer :: f37ae9b291d04666ab1eb5457642f2ef</msg>
<status status="PASS" starttime="20210322 02:41:03.642" endtime="20210322 02:41:03.643"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Account Claimer :: ${account_claimer}</arg>
</arguments>
<msg timestamp="20210322 02:41:03.644" level="INFO">Account Claimer :: 6a600057a64a49c8a76abe5328be09db</msg>
<status status="PASS" starttime="20210322 02:41:03.643" endtime="20210322 02:41:03.644"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Entry Claimer :: ${entry_claimer}</arg>
</arguments>
<msg timestamp="20210322 02:41:03.645" level="INFO">Entry Claimer :: 6f492527166a42e2bd73b030e6ce64a4</msg>
<status status="PASS" starttime="20210322 02:41:03.644" endtime="20210322 02:41:03.645"></status>
</kw>
<kw name="buscar verification code" library="pix_dict_verification_code">
<arguments>
<arg>${holder_claimer}</arg>
<arg>${account_claimer}</arg>
<arg>${entry_claimer}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 02:41:03.647" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 02:41:03.646" endtime="20210322 02:41:03.647"></status>
</kw>
<status status="PASS" starttime="20210322 02:41:03.646" endtime="20210322 02:41:03.647"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/admin/internal_operation/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries/${entry_external_key}/code</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:41:03.648" level="INFO">GET Request using : uri=/admin/internal_operation/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/f37ae9b291d04666ab1eb5457642f2ef/accounts/6a600057a64a49c8a76abe5328be09db/entries/6f492527166a42e2bd73b030e6ce64a4/code, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 02:41:04.263" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:41:03.648" endtime="20210322 02:41:04.263"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:41:04.266" level="INFO">{'code': '8763'}</msg>
<status status="PASS" starttime="20210322 02:41:04.264" endtime="20210322 02:41:04.266"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:41:04.268" level="INFO">c8fe6d7b9a5b06e2</msg>
<status status="PASS" starttime="20210322 02:41:04.267" endtime="20210322 02:41:04.269"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 02:41:04.271" level="INFO">200</msg>
<status status="PASS" starttime="20210322 02:41:04.270" endtime="20210322 02:41:04.271"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:41:04.273" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:41:04.272" endtime="20210322 02:41:04.273"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["code"]}</arg>
</arguments>
<assign>
<var>${verification_code}</var>
</assign>
<msg timestamp="20210322 02:41:04.275" level="INFO">${verification_code} = 8763</msg>
<status status="PASS" starttime="20210322 02:41:04.273" endtime="20210322 02:41:04.275"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${verification_code}</arg>
</arguments>
<msg timestamp="20210322 02:41:04.276" level="INFO">${verification_code} = 8763</msg>
<status status="PASS" starttime="20210322 02:41:04.275" endtime="20210322 02:41:04.276"></status>
</kw>
<status status="PASS" starttime="20210322 02:41:03.645" endtime="20210322 02:41:04.276"></status>
</kw>
<kw name="confirmar propriedade da chave pix" library="pix_dict_confirm_propriety">
<arguments>
<arg>${verification_code}</arg>
<arg>${holder_claimer}</arg>
<arg>${account_claimer}</arg>
<arg>${entry_claimer}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 02:41:04.279" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 02:41:04.279" endtime="20210322 02:41:04.280"></status>
</kw>
<status status="PASS" starttime="20210322 02:41:04.278" endtime="20210322 02:41:04.280"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:41:04.281" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 02:41:04.280" endtime="20210322 02:41:04.281"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"code": "${verification_code}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 02:41:04.282" level="INFO">${body} = { "code": "8763" }</msg>
<status status="PASS" starttime="20210322 02:41:04.281" endtime="20210322 02:41:04.282"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries/${entry_external_key}/ownership</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:41:04.283" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/f37ae9b291d04666ab1eb5457642f2ef/accounts/6a600057a64a49c8a76abe5328be09db/entries/6f492527166a42e2bd73b030e6ce64a4/ownership, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "code": "8763" } 
json=None</msg>
<msg timestamp="20210322 02:41:05.691" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:41:04.282" endtime="20210322 02:41:05.691"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:41:05.694" level="INFO">{'id': '6f492527166a42e2bd73b030e6ce64a4', 'status': 'waiting_ownership_claiming', 'created_at': '2021-03-22T02:41:04.464', 'updated_at': '2021-03-22T02:41:06.551', 'key': {'value': '+5521932597034', 'type': 'phone'}, 'account': {'id': '6a600057a64a49c8a76abe5328be09db', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': 'f37ae9b291d04666ab1eb5457642f2ef', 'owner': {'name': 'Holder de teste', 'national_registration': '31279458682', 'type': 'individual'}, 'routing_number': '001', 'number': '1609744467', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}, 'resource': 'pix.entry'}</msg>
<status status="PASS" starttime="20210322 02:41:05.693" endtime="20210322 02:41:05.694"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:41:05.695" level="INFO">b7c8f95f02e0e560</msg>
<status status="PASS" starttime="20210322 02:41:05.695" endtime="20210322 02:41:05.696"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 02:41:05.697" level="INFO">201</msg>
<status status="PASS" starttime="20210322 02:41:05.696" endtime="20210322 02:41:05.697"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:41:05.698" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:41:05.697" endtime="20210322 02:41:05.698"></status>
</kw>
<status status="PASS" starttime="20210322 02:41:04.277" endtime="20210322 02:41:05.698"></status>
</kw>
<kw name="validar status da chave após criação da reivindicação" library="asserts">
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["status"]}</arg>
<arg>waiting_ownership_claiming</arg>
</arguments>
<status status="PASS" starttime="20210322 02:41:05.699" endtime="20210322 02:41:05.700"></status>
</kw>
<status status="PASS" starttime="20210322 02:41:05.699" endtime="20210322 02:41:05.700"></status>
</kw>
<kw name="criar reivindicação de posse" library="pix_dict_create_claims">
<arguments>
<arg>${holder_claimer}</arg>
<arg>${account_claimer}</arg>
<arg>${entry_claimer}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 02:41:05.703" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 02:41:05.702" endtime="20210322 02:41:05.704"></status>
</kw>
<status status="PASS" starttime="20210322 02:41:05.701" endtime="20210322 02:41:05.704"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries/${entry_external_key}/claims</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:41:05.706" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/f37ae9b291d04666ab1eb5457642f2ef/accounts/6a600057a64a49c8a76abe5328be09db/entries/6f492527166a42e2bd73b030e6ce64a4/claims, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 02:41:07.485" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:41:05.705" endtime="20210322 02:41:07.485"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:41:07.486" level="INFO">{'id': '4a6263edebf14f719c68f6af473afefa', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'created_at': '2021-03-22T02:41:08.327', 'updated_at': '2021-03-22T02:41:08.327', 'type': 'OWNERSHIP', 'status': 'open', 'key': {'value': '+5521932597034', 'type': 'phone'}, 'claimer': {'name': 'Holder de teste', 'national_registration': '31279458682', 'type': 'individual', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': 'f37ae9b291d04666ab1eb5457642f2ef', 'account': {'digital_account_id': '6a600057a64a49c8a76abe5328be09db', 'routing_number': '001', 'number': '1609744467', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}}, 'donor': {'name': 'Holder de teste', 'national_registration': '56342709874', 'type': 'individual', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': '3ead7671c0d34e488d4ff267b70d93f2', 'account': {'digital_account_id': 'a69a903f283c48dabfd173d3ac7f48cb', 'routing_number': '001', 'number': '2763685054', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}}, 'completion_period_end': '2021-04-05T05:41:07.000', 'resolution_period_end': '2021-03-29T05:41:07.000', 'resource': 'pix.claim'}</msg>
<status status="PASS" starttime="20210322 02:41:07.486" endtime="20210322 02:41:07.486"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:41:07.488" level="INFO">da27029569cfc724</msg>
<status status="PASS" starttime="20210322 02:41:07.487" endtime="20210322 02:41:07.488"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 02:41:07.488" level="INFO">201</msg>
<status status="PASS" starttime="20210322 02:41:07.488" endtime="20210322 02:41:07.489"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:41:07.490" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:41:07.489" endtime="20210322 02:41:07.490"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${claim_external_key}</var>
</assign>
<msg timestamp="20210322 02:41:07.491" level="INFO">${claim_external_key} = 4a6263edebf14f719c68f6af473afefa</msg>
<status status="PASS" starttime="20210322 02:41:07.490" endtime="20210322 02:41:07.491"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${claim_external_key}</arg>
</arguments>
<msg timestamp="20210322 02:41:07.492" level="INFO">${claim_external_key} = 4a6263edebf14f719c68f6af473afefa</msg>
<status status="PASS" starttime="20210322 02:41:07.492" endtime="20210322 02:41:07.492"></status>
</kw>
<status status="PASS" starttime="20210322 02:41:05.701" endtime="20210322 02:41:07.493"></status>
</kw>
<kw name="buscar reivindicação de posse" library="pix_dict_get_claims">
<arguments>
<arg>${holder_claimer}</arg>
<arg>${account_claimer}</arg>
<arg>${claim_external_key}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 02:41:07.495" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 02:41:07.495" endtime="20210322 02:41:07.496"></status>
</kw>
<status status="PASS" starttime="20210322 02:41:07.494" endtime="20210322 02:41:07.496"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/claims/${claim_external_key}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:41:07.497" level="INFO">GET Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/f37ae9b291d04666ab1eb5457642f2ef/accounts/6a600057a64a49c8a76abe5328be09db/claims/4a6263edebf14f719c68f6af473afefa, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 02:41:08.133" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:41:07.496" endtime="20210322 02:41:08.134"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:41:08.134" level="INFO">{'id': '4a6263edebf14f719c68f6af473afefa', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'created_at': '2021-03-22T02:41:08.327', 'updated_at': '2021-03-22T02:41:08.327', 'type': 'OWNERSHIP', 'status': 'open', 'key': {'value': '+5521932597034', 'type': 'phone'}, 'claimer': {'name': 'Holder de teste', 'national_registration': '31279458682', 'type': 'individual', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': 'f37ae9b291d04666ab1eb5457642f2ef', 'account': {'digital_account_id': '6a600057a64a49c8a76abe5328be09db', 'routing_number': '001', 'number': '1609744467', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}}, 'donor': {'name': 'Holder de teste', 'national_registration': '56342709874', 'type': 'individual', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': '3ead7671c0d34e488d4ff267b70d93f2', 'account': {'digital_account_id': 'a69a903f283c48dabfd173d3ac7f48cb', 'routing_number': '001', 'number': '2763685054', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}}, 'completion_period_end': '2021-04-05T05:41:07.000', 'resolution_period_end': '2021-03-29T05:41:07.000', 'resource': 'pix.claim'}</msg>
<status status="PASS" starttime="20210322 02:41:08.134" endtime="20210322 02:41:08.135"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:41:08.136" level="INFO">05f63f92827cbb23</msg>
<status status="PASS" starttime="20210322 02:41:08.135" endtime="20210322 02:41:08.136"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 02:41:08.136" level="INFO">200</msg>
<status status="PASS" starttime="20210322 02:41:08.136" endtime="20210322 02:41:08.136"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:41:08.137" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:41:08.137" endtime="20210322 02:41:08.137"></status>
</kw>
<status status="PASS" starttime="20210322 02:41:07.493" endtime="20210322 02:41:08.137"></status>
</kw>
<kw name="validar status da reivindicação" library="asserts">
<arguments>
<arg>open</arg>
</arguments>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["status"]}</arg>
<arg>${claim_status}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:41:08.138" endtime="20210322 02:41:08.139"></status>
</kw>
<status status="PASS" starttime="20210322 02:41:08.138" endtime="20210322 02:41:08.139"></status>
</kw>
<kw name="receber notificação de reivindicação" library="pix_dict_receive_claim_notification">
<arguments>
<arg>${phone_pix}</arg>
<arg>${account_number_owner}</arg>
<arg>${national_registration_owner}</arg>
<arg>${holder_name_owner}</arg>
<arg>${claim_external_key}</arg>
<arg>WAITING_RESOLUTION</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 02:41:08.141" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 02:41:08.140" endtime="20210322 02:41:08.141"></status>
</kw>
<status status="PASS" starttime="20210322 02:41:08.140" endtime="20210322 02:41:08.141"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:41:08.142" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 02:41:08.142" endtime="20210322 02:41:08.142"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"data": {</arg>
<arg>"claim": {</arg>
<arg>"type": "OWNERSHIP",</arg>
<arg>"key": "${key_pix}",</arg>
<arg>"key_type": "PHONE",</arg>
<arg>"claimer_account": {</arg>
<arg>"participant": "19468242",</arg>
<arg>"branch": "0001",</arg>
<arg>"account_number": "${account_number}",</arg>
<arg>"account_type": "CACC"</arg>
<arg>},</arg>
<arg>"claimer": {</arg>
<arg>"type": "NATURAL_PERSON",</arg>
<arg>"tax_id_number": "${claimer_tax_id}",</arg>
<arg>"name": "${claimer_name}"</arg>
<arg>},</arg>
<arg>"donor_participant": "19468242",</arg>
<arg>"id": "${claim_external_key}",</arg>
<arg>"status": "${claim_notification_status}",</arg>
<arg>"resolution_period_end": "2020-10-18T10:00:00.000Z",</arg>
<arg>"completion_period_end": "2020-10-25T10:00:00.000Z",</arg>
<arg>"last_modified": "2020-10-17T10:00:00.000Z"</arg>
<arg>}</arg>
<arg>}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 02:41:08.144" level="INFO">${body} = { "data": { "claim": { "type": "OWNERSHIP", "key": "+5521932597034", "key_type": "PHONE", "claimer_account": { "participant": "19468242", "branch": "0001", "account_number": "2763685054", "account_typ...</msg>
<status status="PASS" starttime="20210322 02:41:08.142" endtime="20210322 02:41:08.144"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/banking/internal/dict/claims</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:41:08.144" level="INFO">POST Request using : uri=/banking/internal/dict/claims, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "data": { "claim": { "type": "OWNERSHIP", "key": "+5521932597034", "key_type": "PHONE", "claimer_account": { "participant": "19468242", "branch": "0001", "account_number": "2763685054", "account_type": "CACC" }, "claimer": { "type": "NATURAL_PERSON", "tax_id_number": "56342709874", "name": "Holder de teste" }, "donor_participant": "19468242", "id": "4a6263edebf14f719c68f6af473afefa", "status": "WAITING_RESOLUTION", "resolution_period_end": "2020-10-18T10:00:00.000Z", "completion_period_end": "2020-10-25T10:00:00.000Z", "last_modified": "2020-10-17T10:00:00.000Z" } } } 
json=None</msg>
<msg timestamp="20210322 02:41:08.786" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:41:08.144" endtime="20210322 02:41:08.786"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 02:41:08.787" level="INFO">200</msg>
<status status="PASS" starttime="20210322 02:41:08.786" endtime="20210322 02:41:08.788"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:41:08.788" level="INFO">1de320baba6277e3</msg>
<status status="PASS" starttime="20210322 02:41:08.788" endtime="20210322 02:41:08.788"></status>
</kw>
<status status="PASS" starttime="20210322 02:41:08.139" endtime="20210322 02:41:08.788"></status>
</kw>
<kw name="buscar reivindicação de posse" library="pix_dict_get_claims">
<arguments>
<arg>${holder_claimer}</arg>
<arg>${account_claimer}</arg>
<arg>${claim_external_key}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 02:41:08.792" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 02:41:08.790" endtime="20210322 02:41:08.792"></status>
</kw>
<status status="PASS" starttime="20210322 02:41:08.790" endtime="20210322 02:41:08.792"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/claims/${claim_external_key}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:41:08.793" level="INFO">GET Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/f37ae9b291d04666ab1eb5457642f2ef/accounts/6a600057a64a49c8a76abe5328be09db/claims/4a6263edebf14f719c68f6af473afefa, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 02:41:09.440" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:41:08.792" endtime="20210322 02:41:09.440"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:41:09.442" level="INFO">{'id': '4a6263edebf14f719c68f6af473afefa', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'created_at': '2021-03-22T02:41:08.327', 'updated_at': '2021-03-22T02:41:09.650', 'type': 'OWNERSHIP', 'status': 'waiting_resolution', 'key': {'value': '+5521932597034', 'type': 'phone'}, 'claimer': {'name': 'Holder de teste', 'national_registration': '31279458682', 'type': 'individual', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': 'f37ae9b291d04666ab1eb5457642f2ef', 'account': {'digital_account_id': '6a600057a64a49c8a76abe5328be09db', 'routing_number': '001', 'number': '1609744467', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}}, 'donor': {'name': 'Holder de teste', 'national_registration': '56342709874', 'type': 'individual', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': '3ead7671c0d34e488d4ff267b70d93f2', 'account': {'digital_account_id': 'a69a903f283c48dabfd173d3ac7f48cb', 'routing_number': '001', 'number': '2763685054', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}}, 'completion_period_end': '2021-04-05T05:41:07.000', 'resolution_period_end': '2021-03-29T05:41:07.000', 'resource': 'pix.claim'}</msg>
<status status="PASS" starttime="20210322 02:41:09.440" endtime="20210322 02:41:09.442"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:41:09.443" level="INFO">38644d7d9d8e16af</msg>
<status status="PASS" starttime="20210322 02:41:09.443" endtime="20210322 02:41:09.443"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 02:41:09.445" level="INFO">200</msg>
<status status="PASS" starttime="20210322 02:41:09.444" endtime="20210322 02:41:09.445"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:41:09.447" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:41:09.446" endtime="20210322 02:41:09.447"></status>
</kw>
<status status="PASS" starttime="20210322 02:41:08.789" endtime="20210322 02:41:09.447"></status>
</kw>
<kw name="validar status da reivindicação" library="asserts">
<arguments>
<arg>waiting_resolution</arg>
</arguments>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["status"]}</arg>
<arg>${claim_status}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:41:09.448" endtime="20210322 02:41:09.448"></status>
</kw>
<status status="PASS" starttime="20210322 02:41:09.448" endtime="20210322 02:41:09.448"></status>
</kw>
<kw name="${index} IN RANGE [ 20 ]" type="for">
<kw name="${index} = 0" type="foritem">
<kw name="cancelar reivindicação de posse" library="pix_dict_cancel_claims">
<arguments>
<arg>${holder_owner}</arg>
<arg>${account_owner}</arg>
<arg>${claim_external_key}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 02:41:09.450" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 02:41:09.449" endtime="20210322 02:41:09.450"></status>
</kw>
<status status="PASS" starttime="20210322 02:41:09.449" endtime="20210322 02:41:09.450"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/claims/${claim_external_key}/cancel</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:41:09.451" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/3ead7671c0d34e488d4ff267b70d93f2/accounts/a69a903f283c48dabfd173d3ac7f48cb/claims/4a6263edebf14f719c68f6af473afefa/cancel, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 02:41:10.111" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:41:09.451" endtime="20210322 02:41:10.111"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:41:10.113" level="INFO">{'message': 'Claim cancelled successfully'}</msg>
<status status="PASS" starttime="20210322 02:41:10.112" endtime="20210322 02:41:10.113"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:41:10.114" level="INFO">851a1f878bb3a26b</msg>
<status status="PASS" starttime="20210322 02:41:10.113" endtime="20210322 02:41:10.114"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 02:41:10.115" level="INFO">200</msg>
<status status="PASS" starttime="20210322 02:41:10.114" endtime="20210322 02:41:10.115"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:41:10.116" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:41:10.115" endtime="20210322 02:41:10.116"></status>
</kw>
<status status="PASS" starttime="20210322 02:41:09.449" endtime="20210322 02:41:10.116"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${response.json()["message"]}' == 'Claim cancelled successfully'</arg>
</arguments>
<msg timestamp="20210322 02:41:10.117" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20210322 02:41:10.116" endtime="20210322 02:41:10.117"></status>
</kw>
<status status="PASS" starttime="20210322 02:41:09.449" endtime="20210322 02:41:10.117"></status>
</kw>
<status status="PASS" starttime="20210322 02:41:09.448" endtime="20210322 02:41:10.118"></status>
</kw>
<kw name="buscar reivindicação de posse" library="pix_dict_get_claims">
<arguments>
<arg>${holder_claimer}</arg>
<arg>${account_claimer}</arg>
<arg>${claim_external_key}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 02:41:10.120" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 02:41:10.120" endtime="20210322 02:41:10.121"></status>
</kw>
<status status="PASS" starttime="20210322 02:41:10.119" endtime="20210322 02:41:10.121"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/claims/${claim_external_key}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:41:10.122" level="INFO">GET Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/f37ae9b291d04666ab1eb5457642f2ef/accounts/6a600057a64a49c8a76abe5328be09db/claims/4a6263edebf14f719c68f6af473afefa, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 02:41:10.764" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:41:10.121" endtime="20210322 02:41:10.764"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:41:10.766" level="INFO">{'id': '4a6263edebf14f719c68f6af473afefa', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'created_at': '2021-03-22T02:41:08.327', 'updated_at': '2021-03-22T02:41:10.971', 'type': 'OWNERSHIP', 'status': 'waiting_entry_ownership_confirm_to_cancel', 'cancel_reason': 'FRAUD', 'key': {'value': '+5521932597034', 'type': 'phone'}, 'claimer': {'name': 'Holder de teste', 'national_registration': '31279458682', 'type': 'individual', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': 'f37ae9b291d04666ab1eb5457642f2ef', 'account': {'digital_account_id': '6a600057a64a49c8a76abe5328be09db', 'routing_number': '001', 'number': '1609744467', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}}, 'donor': {'name': 'Holder de teste', 'national_registration': '56342709874', 'type': 'individual', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': '3ead7671c0d34e488d4ff267b70d93f2', 'account': {'digital_account_id': 'a69a903f283c48dabfd173d3ac7f48cb', 'routing_number': '001', 'number': '2763685054', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}}, 'completion_period_end': '2021-04-05T05:41:07.000', 'resolution_period_end': '2021-03-29T05:41:07.000', 'resource': 'pix.claim'}</msg>
<status status="PASS" starttime="20210322 02:41:10.765" endtime="20210322 02:41:10.767"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:41:10.769" level="INFO">a3b3ca94bfe30823</msg>
<status status="PASS" starttime="20210322 02:41:10.767" endtime="20210322 02:41:10.769"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 02:41:10.771" level="INFO">200</msg>
<status status="PASS" starttime="20210322 02:41:10.770" endtime="20210322 02:41:10.771"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:41:10.773" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:41:10.772" endtime="20210322 02:41:10.773"></status>
</kw>
<status status="PASS" starttime="20210322 02:41:10.118" endtime="20210322 02:41:10.773"></status>
</kw>
<kw name="validar status da reivindicação" library="asserts">
<arguments>
<arg>waiting_entry_ownership_confirm_to_cancel</arg>
</arguments>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["status"]}</arg>
<arg>${claim_status}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:41:10.775" endtime="20210322 02:41:10.776"></status>
</kw>
<status status="PASS" starttime="20210322 02:41:10.774" endtime="20210322 02:41:10.776"></status>
</kw>
<doc>Fluxo Básico</doc>
<tags>
<tag>regression_test</tag>
<tag>smoke_test</tag>
</tags>
<status status="PASS" starttime="20210322 02:40:53.228" endtime="20210322 02:41:10.776" critical="yes"></status>
</test>
<doc>Funcionalidade: Cancelar Reivindicação de Posse
Eu, como um Holder, portador de uma conta ativa em Banking
Desejo cancelar a reivindicação de posse de uma chave de endereçamento</doc>
<status status="PASS" starttime="20210322 02:40:53.153" endtime="20210322 02:41:10.777"></status>
</suite>
<suite id="s1-s2-s2" name="Criar Reivindicação de Posse" source="C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\tests\pix-dict\reivindicacao\Criar Reivindicação de Posse.robot">
<test id="s1-s2-s2-t1" name="Cenário: Criar Reivindicação de Posse para chave do tipo telefone">
<kw name="Random Number" library="FakerLibrary">
<doc>Returns a random number with 1 digit (default, when digits==None),
a random number with 0 to given number of digits, or a random number
with given number to given number of digits (when ``fix_len==True``).</doc>
<arguments>
<arg>digits=8</arg>
<arg>fix_len=True</arg>
</arguments>
<assign>
<var>${phone}</var>
</assign>
<msg timestamp="20210322 02:41:10.850" level="INFO">${phone} = 81443783</msg>
<status status="PASS" starttime="20210322 02:41:10.850" endtime="20210322 02:41:10.850"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>+55219${phone}</arg>
</arguments>
<assign>
<var>${phone_pix}</var>
</assign>
<msg timestamp="20210322 02:41:10.850" level="INFO">${phone_pix} = +5521981443783</msg>
<status status="PASS" starttime="20210322 02:41:10.850" endtime="20210322 02:41:10.850"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${phone_pix}</arg>
</arguments>
<msg timestamp="20210322 02:41:10.851" level="INFO">${phone_pix} = +5521981443783</msg>
<status status="PASS" starttime="20210322 02:41:10.851" endtime="20210322 02:41:10.851"></status>
</kw>
<kw name="criar holder individual ativo" library="accreditation_create_holder_active">
<kw name="conectar accreditation" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accreditation</arg>
<arg>url=${accreditation_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 02:41:10.852" level="INFO">Creating Session using : alias=accreditation, url=https://banking-accreditation-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 02:41:10.852" endtime="20210322 02:41:10.853"></status>
</kw>
<status status="PASS" starttime="20210322 02:41:10.851" endtime="20210322 02:41:10.853"></status>
</kw>
<kw name="Cpf" library="FakerLibrary">
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 02:41:10.853" level="INFO">${national_registration} = 426.819.037-69</msg>
<status status="PASS" starttime="20210322 02:41:10.853" endtime="20210322 02:41:10.853"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${national_registration}</arg>
<arg>.</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 02:41:10.854" level="INFO">${national_registration} = 426819037-69</msg>
<status status="PASS" starttime="20210322 02:41:10.853" endtime="20210322 02:41:10.854"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${national_registration}</arg>
<arg>-</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 02:41:10.854" level="INFO">${national_registration} = 42681903769</msg>
<status status="PASS" starttime="20210322 02:41:10.854" endtime="20210322 02:41:10.854"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${national_registration}</arg>
</arguments>
<msg timestamp="20210322 02:41:10.855" level="INFO">${national_registration} = 42681903769</msg>
<status status="PASS" starttime="20210322 02:41:10.855" endtime="20210322 02:41:10.855"></status>
</kw>
<kw name="Rg" library="FakerLibrary">
<doc>Brazilian RG, return plain numbers.
Check:  https://www.ngmatematica.com/2014/02/como-determinar-o-digito-verificador-do.html</doc>
<assign>
<var>${identity_card}</var>
</assign>
<msg timestamp="20210322 02:41:10.855" level="INFO">${identity_card} = 34675012X</msg>
<status status="PASS" starttime="20210322 02:41:10.855" endtime="20210322 02:41:10.855"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${identity_card}</arg>
</arguments>
<msg timestamp="20210322 02:41:10.856" level="INFO">${identity_card} = 34675012X</msg>
<status status="PASS" starttime="20210322 02:41:10.855" endtime="20210322 02:41:10.856"></status>
</kw>
<kw name="criar holder individual" library="accreditation_post_holder_individual">
<arguments>
<arg>holder_type=individual</arg>
<arg>holder_name=${holder_name}</arg>
<arg>email=${email}</arg>
<arg>national_registration=${national_registration}</arg>
<arg>revenue=${revenue}</arg>
<arg>birthday=${birthday}</arg>
<arg>mothers_name=${mothers_name}</arg>
<arg>identity_card=${identity_card}</arg>
<arg>pep=false</arg>
<arg>cbo=${cbo}</arg>
</arguments>
<kw name="conectar accreditation" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accreditation</arg>
<arg>url=${accreditation_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 02:41:10.858" level="INFO">Creating Session using : alias=accreditation, url=https://banking-accreditation-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 02:41:10.857" endtime="20210322 02:41:10.858"></status>
</kw>
<status status="PASS" starttime="20210322 02:41:10.857" endtime="20210322 02:41:10.858"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_type}</arg>
</arguments>
<msg timestamp="20210322 02:41:10.859" level="INFO">${holder_type} = individual</msg>
<status status="PASS" starttime="20210322 02:41:10.858" endtime="20210322 02:41:10.859"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_name}</arg>
</arguments>
<msg timestamp="20210322 02:41:10.859" level="INFO">${holder_name} = Holder de teste</msg>
<status status="PASS" starttime="20210322 02:41:10.859" endtime="20210322 02:41:10.859"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:41:10.860" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 02:41:10.860" endtime="20210322 02:41:10.860"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "${holder_type}",</arg>
<arg>"name": "${holder_name}",</arg>
<arg>"email": "${email}",</arg>
<arg>"national_registration": "${national_registration}",</arg>
<arg>"revenue": ${revenue},</arg>
<arg>"birthday": "${birthday}",</arg>
<arg>"mothers_name": "${mothers_name}",</arg>
<arg>"identity_card": "${identity_card}",</arg>
<arg>"pep": false,</arg>
<arg>"cbo": ${cbo}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 02:41:10.861" level="INFO">${body} = { "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "42681903769", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder",...</msg>
<status status="PASS" starttime="20210322 02:41:10.860" endtime="20210322 02:41:10.861"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:41:10.862" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "42681903769", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder", "identity_card": "34675012X", "pep": false, "cbo": 821450 } 
json=None</msg>
<msg timestamp="20210322 02:41:11.554" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:41:10.861" endtime="20210322 02:41:11.554"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:41:11.556" level="INFO">{'id': 'f6a301af8ce64b40b8171f029a710e56', 'name': 'Holder de teste', 'revenue': 5500.0, 'email': 'teste@teste.com.br', 'status': 'waiting_info_and_documents', 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'marketplace_name': 'Marketplace de Teste', 'created_at': '2021-03-22T02:41:12.367849', 'updated_at': '2021-03-22T02:41:12.367851', 'type': 'individual', 'national_registration': '42681903769', 'birthday': '1988-04-23', 'mothers_name': 'Mãe do Holder', 'identity_card': '34675012X', 'pep': False, 'cbo': '821450', '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/f6a301af8ce64b40b8171f029a710e56', 'type': 'GET'}, 'phones': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/f6a301af8ce64b40b8171f029a710e56/phones', 'type': 'GET'}, 'addresses': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/f6a301af8ce64b40b8171f029a710e56/addresses', 'type': 'GET'}, 'documents': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/f6a301af8ce64b40b8171f029a710e56/documents', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 02:41:11.555" endtime="20210322 02:41:11.557"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:41:11.558" level="INFO">5a69f58b28c23c9a</msg>
<status status="PASS" starttime="20210322 02:41:11.557" endtime="20210322 02:41:11.559"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${body}</arg>
</arguments>
<msg timestamp="20210322 02:41:11.560" level="INFO">{ "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "42681903769", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder", "identity_card": "34675012X", "pep": false, "cbo": 821450 }</msg>
<status status="PASS" starttime="20210322 02:41:11.559" endtime="20210322 02:41:11.560"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:41:11.562" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:41:11.561" endtime="20210322 02:41:11.562"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${holder_external_key}</var>
</assign>
<msg timestamp="20210322 02:41:11.565" level="INFO">${holder_external_key} = f6a301af8ce64b40b8171f029a710e56</msg>
<status status="PASS" starttime="20210322 02:41:11.563" endtime="20210322 02:41:11.565"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_external_key}</arg>
</arguments>
<msg timestamp="20210322 02:41:11.567" level="INFO">${holder_external_key} = f6a301af8ce64b40b8171f029a710e56</msg>
<status status="PASS" starttime="20210322 02:41:11.566" endtime="20210322 02:41:11.567"></status>
</kw>
<status status="PASS" starttime="20210322 02:41:10.856" endtime="20210322 02:41:11.567"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_name}</arg>
</arguments>
<msg timestamp="20210322 02:41:11.569" level="INFO">${holder_name} = Holder de teste</msg>
<status status="PASS" starttime="20210322 02:41:11.568" endtime="20210322 02:41:11.570"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 02:41:11.572" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:41:11.571" endtime="20210322 02:41:11.573"></status>
</kw>
<kw name="criar holder phone" library="accreditation_post_holder_phone">
<arguments>
<arg>21</arg>
<arg>51</arg>
<arg>996221236</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:41:11.575" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 02:41:11.575" endtime="20210322 02:41:11.575"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"area_code": "${phone_area_code}",</arg>
<arg>"country_code": "${phone_country_code}",</arg>
<arg>"number": "${phone_number}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 02:41:11.577" level="INFO">${body} = { "area_code": "21", "country_code": "51", "number": "996221236" }</msg>
<status status="PASS" starttime="20210322 02:41:11.576" endtime="20210322 02:41:11.577"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/phones</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:41:11.578" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/f6a301af8ce64b40b8171f029a710e56/phones, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "area_code": "21", "country_code": "51", "number": "996221236" } 
json=None</msg>
<msg timestamp="20210322 02:41:11.820" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:41:11.577" endtime="20210322 02:41:11.820"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:41:11.823" level="INFO">{'id': '45956ec02c124e8696bfd2b278066b8c', 'area_code': '21', 'country_code': '51', 'number': '996221236', 'main': True, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/f6a301af8ce64b40b8171f029a710e56/phones/45956ec02c124e8696bfd2b278066b8c', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/f6a301af8ce64b40b8171f029a710e56', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 02:41:11.820" endtime="20210322 02:41:11.823"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:41:11.825" level="INFO">8337df766c4bac47</msg>
<status status="PASS" starttime="20210322 02:41:11.824" endtime="20210322 02:41:11.825"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:41:11.827" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:41:11.826" endtime="20210322 02:41:11.827"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${phone_external_key}</var>
</assign>
<msg timestamp="20210322 02:41:11.830" level="INFO">${phone_external_key} = 45956ec02c124e8696bfd2b278066b8c</msg>
<status status="PASS" starttime="20210322 02:41:11.828" endtime="20210322 02:41:11.830"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${phone_external_key}</arg>
</arguments>
<msg timestamp="20210322 02:41:11.832" level="INFO">${phone_external_key} = 45956ec02c124e8696bfd2b278066b8c</msg>
<status status="PASS" starttime="20210322 02:41:11.831" endtime="20210322 02:41:11.833"></status>
</kw>
<status status="PASS" starttime="20210322 02:41:11.574" endtime="20210322 02:41:11.833"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 02:41:11.834" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:41:11.834" endtime="20210322 02:41:11.835"></status>
</kw>
<kw name="criar holder address" library="accreditation_post_holder_address">
<arguments>
<arg>Rio de Janeiro</arg>
<arg>Rio de Janeiro</arg>
<arg>Brasil</arg>
<arg>Bairro de Testes</arg>
<arg>Rua de Testes</arg>
<arg>90</arg>
<arg>apto 200</arg>
<arg>21550987</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:41:11.837" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 02:41:11.836" endtime="20210322 02:41:11.837"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"city": "${city}",</arg>
<arg>"state": "${state}",</arg>
<arg>"country": "${country}",</arg>
<arg>"neighborhood": "${neighborhood}",</arg>
<arg>"street": "${street}",</arg>
<arg>"number": "${number}",</arg>
<arg>"complement": "${complement}",</arg>
<arg>"postal_code": "${postal_code}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 02:41:11.840" level="INFO">${body} = { "city": "Rio de Janeiro", "state": "Rio de Janeiro", "country": "Brasil", "neighborhood": "Bairro de Testes", "street": "Rua de Testes", "number": "90", "complement": "apto 200", "postal_code": "215...</msg>
<status status="PASS" starttime="20210322 02:41:11.838" endtime="20210322 02:41:11.840"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/addresses</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:41:11.842" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/f6a301af8ce64b40b8171f029a710e56/addresses, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "city": "Rio de Janeiro", "state": "Rio de Janeiro", "country": "Brasil", "neighborhood": "Bairro de Testes", "street": "Rua de Testes", "number": "90", "complement": "apto 200", "postal_code": "21550987" } 
json=None</msg>
<msg timestamp="20210322 02:41:12.068" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:41:11.840" endtime="20210322 02:41:12.068"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:41:12.071" level="INFO">{'id': 'dc557b771e684279a710d2747d7cd1e6', 'street': 'Rua de Testes', 'number': '90', 'city': 'Rio de Janeiro', 'complement': 'apto 200', 'state': 'Rio de Janeiro', 'neighborhood': 'Bairro de Testes', 'postal_code': '21550987', 'country': 'Brasil', 'main': True, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/f6a301af8ce64b40b8171f029a710e56/addresses/dc557b771e684279a710d2747d7cd1e6', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/f6a301af8ce64b40b8171f029a710e56', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 02:41:12.069" endtime="20210322 02:41:12.071"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:41:12.073" level="INFO">567e618dccd38892</msg>
<status status="PASS" starttime="20210322 02:41:12.072" endtime="20210322 02:41:12.073"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:41:12.075" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:41:12.074" endtime="20210322 02:41:12.076"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${address_external_key}</var>
</assign>
<msg timestamp="20210322 02:41:12.078" level="INFO">${address_external_key} = dc557b771e684279a710d2747d7cd1e6</msg>
<status status="PASS" starttime="20210322 02:41:12.077" endtime="20210322 02:41:12.078"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${address_external_key}</arg>
</arguments>
<msg timestamp="20210322 02:41:12.080" level="INFO">${address_external_key} = dc557b771e684279a710d2747d7cd1e6</msg>
<status status="PASS" starttime="20210322 02:41:12.079" endtime="20210322 02:41:12.080"></status>
</kw>
<status status="PASS" starttime="20210322 02:41:11.835" endtime="20210322 02:41:12.080"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 02:41:12.081" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:41:12.081" endtime="20210322 02:41:12.082"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>SELFIE</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:41:12.084" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 02:41:12.083" endtime="20210322 02:41:12.084"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 02:41:12.085" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 02:41:12.088" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 02:41:12.084" endtime="20210322 02:41:12.088"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:41:12.090" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/f6a301af8ce64b40b8171f029a710e56/documents?type=SELFIE, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 02:41:12.366" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:41:12.089" endtime="20210322 02:41:12.367"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:41:12.369" level="INFO">{'id': '29d366f2ad214dd8bec66dcd419a56fd', 'document_type': 'selfie', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/f6a301af8ce64b40b8171f029a710e56/documents/29d366f2ad214dd8bec66dcd419a56fd', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/f6a301af8ce64b40b8171f029a710e56', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/f6a301af8ce64b40b8171f029a710e56/documents/29d366f2ad214dd8bec66dcd419a56fd/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 02:41:12.368" endtime="20210322 02:41:12.369"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:41:12.372" level="INFO">9e6461601793563b</msg>
<status status="PASS" starttime="20210322 02:41:12.370" endtime="20210322 02:41:12.372"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:41:12.374" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:41:12.373" endtime="20210322 02:41:12.374"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 02:41:12.377" level="INFO">${document_external_key} = 29d366f2ad214dd8bec66dcd419a56fd</msg>
<status status="PASS" starttime="20210322 02:41:12.375" endtime="20210322 02:41:12.377"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 02:41:12.378" level="INFO">${document_external_key} = 29d366f2ad214dd8bec66dcd419a56fd</msg>
<status status="PASS" starttime="20210322 02:41:12.377" endtime="20210322 02:41:12.378"></status>
</kw>
<status status="PASS" starttime="20210322 02:41:12.082" endtime="20210322 02:41:12.379"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 02:41:12.380" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:41:12.379" endtime="20210322 02:41:12.380"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>RG_FRENTE</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:41:12.382" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 02:41:12.381" endtime="20210322 02:41:12.382"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 02:41:12.383" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 02:41:12.385" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 02:41:12.382" endtime="20210322 02:41:12.385"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:41:12.387" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/f6a301af8ce64b40b8171f029a710e56/documents?type=RG_FRENTE, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 02:41:12.688" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:41:12.385" endtime="20210322 02:41:12.688"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:41:12.691" level="INFO">{'id': '8dbaaab0ed1f41c4aeb4459ec491c64c', 'document_type': 'rg_frente', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/f6a301af8ce64b40b8171f029a710e56/documents/8dbaaab0ed1f41c4aeb4459ec491c64c', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/f6a301af8ce64b40b8171f029a710e56', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/f6a301af8ce64b40b8171f029a710e56/documents/8dbaaab0ed1f41c4aeb4459ec491c64c/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 02:41:12.689" endtime="20210322 02:41:12.691"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:41:12.692" level="INFO">c46472a9f23dc40d</msg>
<status status="PASS" starttime="20210322 02:41:12.692" endtime="20210322 02:41:12.693"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:41:12.694" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:41:12.693" endtime="20210322 02:41:12.694"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 02:41:12.696" level="INFO">${document_external_key} = 8dbaaab0ed1f41c4aeb4459ec491c64c</msg>
<status status="PASS" starttime="20210322 02:41:12.695" endtime="20210322 02:41:12.696"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 02:41:12.697" level="INFO">${document_external_key} = 8dbaaab0ed1f41c4aeb4459ec491c64c</msg>
<status status="PASS" starttime="20210322 02:41:12.696" endtime="20210322 02:41:12.697"></status>
</kw>
<status status="PASS" starttime="20210322 02:41:12.381" endtime="20210322 02:41:12.697"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 02:41:12.698" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:41:12.697" endtime="20210322 02:41:12.698"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>RG_VERSO</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:41:12.700" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 02:41:12.699" endtime="20210322 02:41:12.700"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 02:41:12.701" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 02:41:12.703" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 02:41:12.701" endtime="20210322 02:41:12.703"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:41:12.704" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/f6a301af8ce64b40b8171f029a710e56/documents?type=RG_VERSO, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 02:41:13.041" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:41:12.703" endtime="20210322 02:41:13.041"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:41:13.043" level="INFO">{'id': 'c576fea1ee4d4d9a83abc509d7a914bd', 'document_type': 'rg_verso', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/f6a301af8ce64b40b8171f029a710e56/documents/c576fea1ee4d4d9a83abc509d7a914bd', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/f6a301af8ce64b40b8171f029a710e56', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/f6a301af8ce64b40b8171f029a710e56/documents/c576fea1ee4d4d9a83abc509d7a914bd/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 02:41:13.042" endtime="20210322 02:41:13.044"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:41:13.045" level="INFO">45483ef52ebc1e96</msg>
<status status="PASS" starttime="20210322 02:41:13.044" endtime="20210322 02:41:13.046"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:41:13.048" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:41:13.047" endtime="20210322 02:41:13.048"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 02:41:13.050" level="INFO">${document_external_key} = c576fea1ee4d4d9a83abc509d7a914bd</msg>
<status status="PASS" starttime="20210322 02:41:13.049" endtime="20210322 02:41:13.050"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 02:41:13.051" level="INFO">${document_external_key} = c576fea1ee4d4d9a83abc509d7a914bd</msg>
<status status="PASS" starttime="20210322 02:41:13.051" endtime="20210322 02:41:13.051"></status>
</kw>
<status status="PASS" starttime="20210322 02:41:12.699" endtime="20210322 02:41:13.052"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 02:41:13.053" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:41:13.052" endtime="20210322 02:41:13.053"></status>
</kw>
<kw name="solicitar aprovação do holder" library="accreditation_request_approval">
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:41:13.055" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 02:41:13.055" endtime="20210322 02:41:13.055"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/approval</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:41:13.056" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/f6a301af8ce64b40b8171f029a710e56/approval, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data=None 
json=None</msg>
<msg timestamp="20210322 02:41:13.340" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:41:13.056" endtime="20210322 02:41:13.340"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:41:13.342" level="INFO">{'message': 'Approval request accepted successfully. Processing analysis'}</msg>
<status status="PASS" starttime="20210322 02:41:13.341" endtime="20210322 02:41:13.343"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:41:13.345" level="INFO">905117b8f53da6a1</msg>
<status status="PASS" starttime="20210322 02:41:13.344" endtime="20210322 02:41:13.345"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:41:13.347" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:41:13.346" endtime="20210322 02:41:13.347"></status>
</kw>
<status status="PASS" starttime="20210322 02:41:13.054" endtime="20210322 02:41:13.348"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 02:41:13.350" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:41:13.348" endtime="20210322 02:41:13.350"></status>
</kw>
<kw name="recebendo notificação de aprovação" library="accreditation_risk_notification">
<kw name="Uuid 4" library="FakerLibrary">
<doc>Generates a random UUID4 string.
:param cast_to: Specify what type the UUID should be cast to. Default is `str`
:type cast_to: callable</doc>
<assign>
<var>${assessment_id}</var>
</assign>
<msg timestamp="20210322 02:41:13.353" level="INFO">${assessment_id} = daacbcb9-dbaa-4270-9904-7df0b34a7b95</msg>
<status status="PASS" starttime="20210322 02:41:13.352" endtime="20210322 02:41:13.353"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>year</arg>
</arguments>
<assign>
<var>${year}</var>
</assign>
<msg timestamp="20210322 02:41:13.355" level="INFO">${year} = 2021</msg>
<status status="PASS" starttime="20210322 02:41:13.354" endtime="20210322 02:41:13.355"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>month</arg>
</arguments>
<assign>
<var>${month}</var>
</assign>
<msg timestamp="20210322 02:41:13.356" level="INFO">${month} = 03</msg>
<status status="PASS" starttime="20210322 02:41:13.355" endtime="20210322 02:41:13.356"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>day</arg>
</arguments>
<assign>
<var>${day}</var>
</assign>
<msg timestamp="20210322 02:41:13.358" level="INFO">${day} = 22</msg>
<status status="PASS" starttime="20210322 02:41:13.357" endtime="20210322 02:41:13.358"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:41:13.359" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 02:41:13.358" endtime="20210322 02:41:13.359"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "risk.assessment.result",</arg>
<arg>"resource": "business.holder",</arg>
<arg>"created_at": "${year}-${month}-${day} 15:28:56.747Z",</arg>
<arg>"marketplace_id": "${marketplace_external_key}",</arg>
<arg>"object": {</arg>
<arg>"result": "APPROVED",</arg>
<arg>"holder_id": "${holder_external_key}",</arg>
<arg>"applicant_id": "${application_external_key}",</arg>
<arg>"assessment_id": "${assessment_id}"</arg>
<arg>}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 02:41:13.361" level="INFO">${body} = { "type": "risk.assessment.result", "resource": "business.holder", "created_at": "2021-03-22 15:28:56.747Z", "marketplace_id": "f71a8951368a4cc085cf7875ff44e61c", "object": { "result": "APPROVED", "ho...</msg>
<status status="PASS" starttime="20210322 02:41:13.360" endtime="20210322 02:41:13.361"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/admin/internal_operation/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/registration/approval</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:41:13.362" level="INFO">POST Request using : uri=/admin/internal_operation/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/f6a301af8ce64b40b8171f029a710e56/registration/approval, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "risk.assessment.result", "resource": "business.holder", "created_at": "2021-03-22 15:28:56.747Z", "marketplace_id": "f71a8951368a4cc085cf7875ff44e61c", "object": { "result": "APPROVED", "holder_id": "f6a301af8ce64b40b8171f029a710e56", "applicant_id": "bcc25a6751c14b52af1340d40dba78c5", "assessment_id": "daacbcb9-dbaa-4270-9904-7df0b34a7b95" } } 
json=None</msg>
<msg timestamp="20210322 02:41:13.562" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:41:13.362" endtime="20210322 02:41:13.562"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:41:13.562" level="INFO">{'message': 'Holder approved successfully'}</msg>
<status status="PASS" starttime="20210322 02:41:13.562" endtime="20210322 02:41:13.562"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:41:13.563" level="INFO">e06f3a6eae911ceb</msg>
<status status="PASS" starttime="20210322 02:41:13.563" endtime="20210322 02:41:13.563"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:41:13.564" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:41:13.564" endtime="20210322 02:41:13.564"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 02:41:13.566" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:41:13.565" endtime="20210322 02:41:13.566"></status>
</kw>
<status status="PASS" starttime="20210322 02:41:13.351" endtime="20210322 02:41:13.566"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 02:41:13.567" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:41:13.566" endtime="20210322 02:41:13.567"></status>
</kw>
<kw name="buscar account por holder" library="accounts_get_accounts_by_holder">
<kw name="conectar accounts" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accounts</arg>
<arg>url=${account_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 02:41:13.570" level="INFO">Creating Session using : alias=accounts, url=https://banking-accounts-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 02:41:13.569" endtime="20210322 02:41:13.571"></status>
</kw>
<status status="PASS" starttime="20210322 02:41:13.568" endtime="20210322 02:41:13.571"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accounts</arg>
<arg>/marketplaces/${marketplace_external_key}/holders/${holder_external_key}/accounts</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:41:13.571" level="INFO">GET Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/holders/f6a301af8ce64b40b8171f029a710e56/accounts, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 02:41:14.175" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:41:13.571" endtime="20210322 02:41:14.175"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:41:14.177" level="INFO">{'items': [{'id': '0f29596e5bcc42728d4176da2a45d0f1', 'holder': 'f6a301af8ce64b40b8171f029a710e56', 'balance': '0.00', 'currency': 'BRL', 'routing_number': '001', 'number': '6650448847', 'status': 'active', 'metadata': {}, 'created_at': '2021-03-22T05:41:14.39759', 'updated_at': '2021-03-22T05:41:14.39759', 'primary': True, 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'uri': '/v2/marketplaces/f71a8951368a4cc085cf7875ff44e61c/accounts/0f29596e5bcc42728d4176da2a45d0f1', 'resource': 'payment_account'}], 'has_more': False, 'limit': 100, 'total_pages': 1, 'page': 1, 'offset': 0, 'total': '1', 'query_count': '1'}</msg>
<status status="PASS" starttime="20210322 02:41:14.176" endtime="20210322 02:41:14.177"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:41:14.179" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:41:14.178" endtime="20210322 02:41:14.179"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["id"]}</arg>
</arguments>
<assign>
<var>${account_external_key}</var>
</assign>
<msg timestamp="20210322 02:41:14.182" level="INFO">${account_external_key} = 0f29596e5bcc42728d4176da2a45d0f1</msg>
<status status="PASS" starttime="20210322 02:41:14.180" endtime="20210322 02:41:14.182"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_external_key}</arg>
</arguments>
<msg timestamp="20210322 02:41:14.184" level="INFO">${account_external_key} = 0f29596e5bcc42728d4176da2a45d0f1</msg>
<status status="PASS" starttime="20210322 02:41:14.183" endtime="20210322 02:41:14.184"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["number"]}</arg>
</arguments>
<assign>
<var>${account_number}</var>
</assign>
<msg timestamp="20210322 02:41:14.187" level="INFO">${account_number} = 6650448847</msg>
<status status="PASS" starttime="20210322 02:41:14.185" endtime="20210322 02:41:14.187"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_number}</arg>
</arguments>
<msg timestamp="20210322 02:41:14.189" level="INFO">${account_number} = 6650448847</msg>
<status status="PASS" starttime="20210322 02:41:14.188" endtime="20210322 02:41:14.189"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["routing_number"]}</arg>
</arguments>
<assign>
<var>${account_routing_number}</var>
</assign>
<msg timestamp="20210322 02:41:14.191" level="INFO">${account_routing_number} = 001</msg>
<status status="PASS" starttime="20210322 02:41:14.190" endtime="20210322 02:41:14.191"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_routing_number}</arg>
</arguments>
<msg timestamp="20210322 02:41:14.192" level="INFO">${account_routing_number} = 001</msg>
<status status="PASS" starttime="20210322 02:41:14.191" endtime="20210322 02:41:14.192"></status>
</kw>
<status status="PASS" starttime="20210322 02:41:13.567" endtime="20210322 02:41:14.192"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 02:41:14.194" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:41:14.193" endtime="20210322 02:41:14.194"></status>
</kw>
<status status="PASS" starttime="20210322 02:41:10.851" endtime="20210322 02:41:14.194"></status>
</kw>
<kw name="criar chave pix" library="pix_dict_create_entry">
<arguments>
<arg>phone</arg>
<arg>${phone_pix}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 02:41:14.197" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 02:41:14.196" endtime="20210322 02:41:14.197"></status>
</kw>
<status status="PASS" starttime="20210322 02:41:14.195" endtime="20210322 02:41:14.197"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${type}</arg>
</arguments>
<msg timestamp="20210322 02:41:14.198" level="INFO">${type} = phone</msg>
<status status="PASS" starttime="20210322 02:41:14.198" endtime="20210322 02:41:14.199"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210322 02:41:14.199" level="INFO">${value} = +5521981443783</msg>
<status status="PASS" starttime="20210322 02:41:14.199" endtime="20210322 02:41:14.199"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:41:14.200" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 02:41:14.200" endtime="20210322 02:41:14.200"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "${type}",</arg>
<arg>"value": "${value}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 02:41:14.201" level="INFO">${body} = { "type": "phone", "value": "+5521981443783" }</msg>
<status status="PASS" starttime="20210322 02:41:14.200" endtime="20210322 02:41:14.201"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:41:14.203" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/f6a301af8ce64b40b8171f029a710e56/accounts/0f29596e5bcc42728d4176da2a45d0f1/entries, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "phone", "value": "+5521981443783" } 
json=None</msg>
<msg timestamp="20210322 02:41:14.848" level="INFO">${response} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20210322 02:41:14.201" endtime="20210322 02:41:14.848"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:41:14.849" level="INFO">{'id': '93642568aba24530ace346d752cb6565', 'status': 'waiting_ownership_verification', 'created_at': '2021-03-22T02:41:15.691', 'updated_at': '2021-03-22T02:41:15.691', 'key': {'value': '+5521981443783', 'type': 'phone'}, 'account': {'id': '0f29596e5bcc42728d4176da2a45d0f1', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': 'f6a301af8ce64b40b8171f029a710e56', 'owner': {'name': 'Holder de teste', 'national_registration': '42681903769', 'type': 'individual'}, 'routing_number': '001', 'number': '6650448847', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}, 'resource': 'pix.entry'}</msg>
<status status="PASS" starttime="20210322 02:41:14.849" endtime="20210322 02:41:14.849"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:41:14.850" level="INFO">e71d05177303e78a</msg>
<status status="PASS" starttime="20210322 02:41:14.849" endtime="20210322 02:41:14.850"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 02:41:14.850" level="INFO">202</msg>
<status status="PASS" starttime="20210322 02:41:14.850" endtime="20210322 02:41:14.850"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:41:14.851" level="INFO">${response} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20210322 02:41:14.851" endtime="20210322 02:41:14.851"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${entry_external_key}</var>
</assign>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:41:14.852" endtime="20210322 02:41:14.852"></status>
</kw>
<msg timestamp="20210322 02:41:14.852" level="INFO">${entry_external_key} = 93642568aba24530ace346d752cb6565</msg>
<status status="PASS" starttime="20210322 02:41:14.851" endtime="20210322 02:41:14.852"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${entry_external_key}</arg>
</arguments>
<msg timestamp="20210322 02:41:14.853" level="INFO">${entry_external_key} = 93642568aba24530ace346d752cb6565</msg>
<status status="PASS" starttime="20210322 02:41:14.853" endtime="20210322 02:41:14.853"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["key"]["value"]}</arg>
</arguments>
<assign>
<var>${entry_key_value}</var>
</assign>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["key"]["value"]}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:41:14.855" endtime="20210322 02:41:14.856"></status>
</kw>
<msg timestamp="20210322 02:41:14.856" level="INFO">${entry_key_value} = +5521981443783</msg>
<status status="PASS" starttime="20210322 02:41:14.854" endtime="20210322 02:41:14.856"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${entry_key_value}</arg>
</arguments>
<msg timestamp="20210322 02:41:14.856" level="INFO">${entry_key_value} = +5521981443783</msg>
<status status="PASS" starttime="20210322 02:41:14.856" endtime="20210322 02:41:14.856"></status>
</kw>
<status status="PASS" starttime="20210322 02:41:14.194" endtime="20210322 02:41:14.858"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${holder_external_key}</arg>
</arguments>
<assign>
<var>${holder_owner}</var>
</assign>
<msg timestamp="20210322 02:41:14.858" level="INFO">${holder_owner} = f6a301af8ce64b40b8171f029a710e56</msg>
<status status="PASS" starttime="20210322 02:41:14.858" endtime="20210322 02:41:14.858"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${holder_name}</arg>
</arguments>
<assign>
<var>${holder_name_owner}</var>
</assign>
<msg timestamp="20210322 02:41:14.859" level="INFO">${holder_name_owner} = Holder de teste</msg>
<status status="PASS" starttime="20210322 02:41:14.859" endtime="20210322 02:41:14.859"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${national_registration}</arg>
</arguments>
<assign>
<var>${national_registration_owner}</var>
</assign>
<msg timestamp="20210322 02:41:14.860" level="INFO">${national_registration_owner} = 42681903769</msg>
<status status="PASS" starttime="20210322 02:41:14.859" endtime="20210322 02:41:14.860"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${account_external_key}</arg>
</arguments>
<assign>
<var>${account_owner}</var>
</assign>
<msg timestamp="20210322 02:41:14.860" level="INFO">${account_owner} = 0f29596e5bcc42728d4176da2a45d0f1</msg>
<status status="PASS" starttime="20210322 02:41:14.860" endtime="20210322 02:41:14.860"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${account_number}</arg>
</arguments>
<assign>
<var>${account_number_owner}</var>
</assign>
<msg timestamp="20210322 02:41:14.861" level="INFO">${account_number_owner} = 6650448847</msg>
<status status="PASS" starttime="20210322 02:41:14.861" endtime="20210322 02:41:14.861"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${entry_external_key}</arg>
</arguments>
<assign>
<var>${entry_owner}</var>
</assign>
<msg timestamp="20210322 02:41:14.862" level="INFO">${entry_owner} = 93642568aba24530ace346d752cb6565</msg>
<status status="PASS" starttime="20210322 02:41:14.861" endtime="20210322 02:41:14.862"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Holder Owner :: ${holder_owner}</arg>
</arguments>
<msg timestamp="20210322 02:41:14.862" level="INFO">Holder Owner :: f6a301af8ce64b40b8171f029a710e56</msg>
<status status="PASS" starttime="20210322 02:41:14.862" endtime="20210322 02:41:14.862"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Account Owner :: ${account_owner}</arg>
</arguments>
<msg timestamp="20210322 02:41:14.863" level="INFO">Account Owner :: 0f29596e5bcc42728d4176da2a45d0f1</msg>
<status status="PASS" starttime="20210322 02:41:14.863" endtime="20210322 02:41:14.863"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Account Number Owner :: ${account_number_owner}</arg>
</arguments>
<msg timestamp="20210322 02:41:14.864" level="INFO">Account Number Owner :: 6650448847</msg>
<status status="PASS" starttime="20210322 02:41:14.864" endtime="20210322 02:41:14.864"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>National Registration Holder Owner :: ${national_registration_owner}</arg>
</arguments>
<msg timestamp="20210322 02:41:14.865" level="INFO">National Registration Holder Owner :: 42681903769</msg>
<status status="PASS" starttime="20210322 02:41:14.864" endtime="20210322 02:41:14.865"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Entry Owner :: ${entry_owner}</arg>
</arguments>
<msg timestamp="20210322 02:41:14.865" level="INFO">Entry Owner :: 93642568aba24530ace346d752cb6565</msg>
<status status="PASS" starttime="20210322 02:41:14.865" endtime="20210322 02:41:14.865"></status>
</kw>
<kw name="buscar verification code" library="pix_dict_verification_code">
<arguments>
<arg>${holder_owner}</arg>
<arg>${account_owner}</arg>
<arg>${entry_owner}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 02:41:14.867" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 02:41:14.866" endtime="20210322 02:41:14.867"></status>
</kw>
<status status="PASS" starttime="20210322 02:41:14.866" endtime="20210322 02:41:14.867"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/admin/internal_operation/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries/${entry_external_key}/code</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:41:14.868" level="INFO">GET Request using : uri=/admin/internal_operation/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/f6a301af8ce64b40b8171f029a710e56/accounts/0f29596e5bcc42728d4176da2a45d0f1/entries/93642568aba24530ace346d752cb6565/code, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 02:41:15.485" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:41:14.867" endtime="20210322 02:41:15.485"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:41:15.487" level="INFO">{'code': '8713'}</msg>
<status status="PASS" starttime="20210322 02:41:15.485" endtime="20210322 02:41:15.487"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:41:15.488" level="INFO">bd7b96acf94bbd21</msg>
<status status="PASS" starttime="20210322 02:41:15.487" endtime="20210322 02:41:15.488"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 02:41:15.489" level="INFO">200</msg>
<status status="PASS" starttime="20210322 02:41:15.489" endtime="20210322 02:41:15.489"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:41:15.490" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:41:15.490" endtime="20210322 02:41:15.491"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["code"]}</arg>
</arguments>
<assign>
<var>${verification_code}</var>
</assign>
<msg timestamp="20210322 02:41:15.491" level="INFO">${verification_code} = 8713</msg>
<status status="PASS" starttime="20210322 02:41:15.491" endtime="20210322 02:41:15.491"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${verification_code}</arg>
</arguments>
<msg timestamp="20210322 02:41:15.491" level="INFO">${verification_code} = 8713</msg>
<status status="PASS" starttime="20210322 02:41:15.491" endtime="20210322 02:41:15.491"></status>
</kw>
<status status="PASS" starttime="20210322 02:41:14.865" endtime="20210322 02:41:15.492"></status>
</kw>
<kw name="confirmar propriedade da chave pix" library="pix_dict_confirm_propriety">
<arguments>
<arg>${verification_code}</arg>
<arg>${holder_owner}</arg>
<arg>${account_owner}</arg>
<arg>${entry_owner}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 02:41:15.493" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 02:41:15.493" endtime="20210322 02:41:15.493"></status>
</kw>
<status status="PASS" starttime="20210322 02:41:15.492" endtime="20210322 02:41:15.493"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:41:15.494" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 02:41:15.494" endtime="20210322 02:41:15.494"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"code": "${verification_code}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 02:41:15.494" level="INFO">${body} = { "code": "8713" }</msg>
<status status="PASS" starttime="20210322 02:41:15.494" endtime="20210322 02:41:15.494"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries/${entry_external_key}/ownership</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:41:15.495" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/f6a301af8ce64b40b8171f029a710e56/accounts/0f29596e5bcc42728d4176da2a45d0f1/entries/93642568aba24530ace346d752cb6565/ownership, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "code": "8713" } 
json=None</msg>
<msg timestamp="20210322 02:41:17.289" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:41:15.494" endtime="20210322 02:41:17.290"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:41:17.290" level="INFO">{'id': '93642568aba24530ace346d752cb6565', 'status': 'active', 'created_at': '2021-03-22T02:41:15.691', 'updated_at': '2021-03-22T02:41:18.151', 'key': {'value': '+5521981443783', 'type': 'phone'}, 'account': {'id': '0f29596e5bcc42728d4176da2a45d0f1', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': 'f6a301af8ce64b40b8171f029a710e56', 'owner': {'name': 'Holder de teste', 'national_registration': '42681903769', 'type': 'individual'}, 'routing_number': '001', 'number': '6650448847', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}, 'resource': 'pix.entry'}</msg>
<status status="PASS" starttime="20210322 02:41:17.290" endtime="20210322 02:41:17.290"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:41:17.291" level="INFO">a050b9f42b2465ad</msg>
<status status="PASS" starttime="20210322 02:41:17.290" endtime="20210322 02:41:17.291"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 02:41:17.291" level="INFO">201</msg>
<status status="PASS" starttime="20210322 02:41:17.291" endtime="20210322 02:41:17.291"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:41:17.292" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:41:17.292" endtime="20210322 02:41:17.292"></status>
</kw>
<status status="PASS" starttime="20210322 02:41:15.492" endtime="20210322 02:41:17.292"></status>
</kw>
<kw name="validar ativação da chave de endereçamento" library="asserts">
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["status"]}</arg>
<arg>active</arg>
</arguments>
<status status="PASS" starttime="20210322 02:41:17.292" endtime="20210322 02:41:17.293"></status>
</kw>
<status status="PASS" starttime="20210322 02:41:17.292" endtime="20210322 02:41:17.293"></status>
</kw>
<kw name="criar holder individual ativo" library="accreditation_create_holder_active">
<kw name="conectar accreditation" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accreditation</arg>
<arg>url=${accreditation_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 02:41:17.296" level="INFO">Creating Session using : alias=accreditation, url=https://banking-accreditation-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 02:41:17.294" endtime="20210322 02:41:17.296"></status>
</kw>
<status status="PASS" starttime="20210322 02:41:17.293" endtime="20210322 02:41:17.297"></status>
</kw>
<kw name="Cpf" library="FakerLibrary">
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 02:41:17.297" level="INFO">${national_registration} = 732.965.480-92</msg>
<status status="PASS" starttime="20210322 02:41:17.297" endtime="20210322 02:41:17.298"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${national_registration}</arg>
<arg>.</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 02:41:17.298" level="INFO">${national_registration} = 732965480-92</msg>
<status status="PASS" starttime="20210322 02:41:17.298" endtime="20210322 02:41:17.298"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${national_registration}</arg>
<arg>-</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 02:41:17.299" level="INFO">${national_registration} = 73296548092</msg>
<status status="PASS" starttime="20210322 02:41:17.299" endtime="20210322 02:41:17.299"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${national_registration}</arg>
</arguments>
<msg timestamp="20210322 02:41:17.300" level="INFO">${national_registration} = 73296548092</msg>
<status status="PASS" starttime="20210322 02:41:17.299" endtime="20210322 02:41:17.300"></status>
</kw>
<kw name="Rg" library="FakerLibrary">
<doc>Brazilian RG, return plain numbers.
Check:  https://www.ngmatematica.com/2014/02/como-determinar-o-digito-verificador-do.html</doc>
<assign>
<var>${identity_card}</var>
</assign>
<msg timestamp="20210322 02:41:17.300" level="INFO">${identity_card} = 245061733</msg>
<status status="PASS" starttime="20210322 02:41:17.300" endtime="20210322 02:41:17.300"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${identity_card}</arg>
</arguments>
<msg timestamp="20210322 02:41:17.301" level="INFO">${identity_card} = 245061733</msg>
<status status="PASS" starttime="20210322 02:41:17.300" endtime="20210322 02:41:17.301"></status>
</kw>
<kw name="criar holder individual" library="accreditation_post_holder_individual">
<arguments>
<arg>holder_type=individual</arg>
<arg>holder_name=${holder_name}</arg>
<arg>email=${email}</arg>
<arg>national_registration=${national_registration}</arg>
<arg>revenue=${revenue}</arg>
<arg>birthday=${birthday}</arg>
<arg>mothers_name=${mothers_name}</arg>
<arg>identity_card=${identity_card}</arg>
<arg>pep=false</arg>
<arg>cbo=${cbo}</arg>
</arguments>
<kw name="conectar accreditation" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accreditation</arg>
<arg>url=${accreditation_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 02:41:17.302" level="INFO">Creating Session using : alias=accreditation, url=https://banking-accreditation-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 02:41:17.302" endtime="20210322 02:41:17.303"></status>
</kw>
<status status="PASS" starttime="20210322 02:41:17.302" endtime="20210322 02:41:17.303"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_type}</arg>
</arguments>
<msg timestamp="20210322 02:41:17.303" level="INFO">${holder_type} = individual</msg>
<status status="PASS" starttime="20210322 02:41:17.303" endtime="20210322 02:41:17.303"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_name}</arg>
</arguments>
<msg timestamp="20210322 02:41:17.303" level="INFO">${holder_name} = Holder de teste</msg>
<status status="PASS" starttime="20210322 02:41:17.303" endtime="20210322 02:41:17.303"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:41:17.304" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 02:41:17.304" endtime="20210322 02:41:17.304"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "${holder_type}",</arg>
<arg>"name": "${holder_name}",</arg>
<arg>"email": "${email}",</arg>
<arg>"national_registration": "${national_registration}",</arg>
<arg>"revenue": ${revenue},</arg>
<arg>"birthday": "${birthday}",</arg>
<arg>"mothers_name": "${mothers_name}",</arg>
<arg>"identity_card": "${identity_card}",</arg>
<arg>"pep": false,</arg>
<arg>"cbo": ${cbo}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 02:41:17.305" level="INFO">${body} = { "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "73296548092", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder",...</msg>
<status status="PASS" starttime="20210322 02:41:17.304" endtime="20210322 02:41:17.305"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:41:17.306" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "73296548092", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder", "identity_card": "245061733", "pep": false, "cbo": 821450 } 
json=None</msg>
<msg timestamp="20210322 02:41:17.989" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:41:17.305" endtime="20210322 02:41:17.989"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:41:17.991" level="INFO">{'id': '3969ed9bba3b451e9c788b1d9ed97ff2', 'name': 'Holder de teste', 'revenue': 5500.0, 'email': 'teste@teste.com.br', 'status': 'waiting_info_and_documents', 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'marketplace_name': 'Marketplace de Teste', 'created_at': '2021-03-22T02:41:18.82473', 'updated_at': '2021-03-22T02:41:18.824732', 'type': 'individual', 'national_registration': '73296548092', 'birthday': '1988-04-23', 'mothers_name': 'Mãe do Holder', 'identity_card': '245061733', 'pep': False, 'cbo': '821450', '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/3969ed9bba3b451e9c788b1d9ed97ff2', 'type': 'GET'}, 'phones': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/3969ed9bba3b451e9c788b1d9ed97ff2/phones', 'type': 'GET'}, 'addresses': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/3969ed9bba3b451e9c788b1d9ed97ff2/addresses', 'type': 'GET'}, 'documents': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/3969ed9bba3b451e9c788b1d9ed97ff2/documents', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 02:41:17.990" endtime="20210322 02:41:17.991"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:41:17.993" level="INFO">5499b4c9bc676115</msg>
<status status="PASS" starttime="20210322 02:41:17.993" endtime="20210322 02:41:17.993"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${body}</arg>
</arguments>
<msg timestamp="20210322 02:41:17.995" level="INFO">{ "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "73296548092", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder", "identity_card": "245061733", "pep": false, "cbo": 821450 }</msg>
<status status="PASS" starttime="20210322 02:41:17.994" endtime="20210322 02:41:17.995"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:41:17.996" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:41:17.995" endtime="20210322 02:41:17.996"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${holder_external_key}</var>
</assign>
<msg timestamp="20210322 02:41:17.998" level="INFO">${holder_external_key} = 3969ed9bba3b451e9c788b1d9ed97ff2</msg>
<status status="PASS" starttime="20210322 02:41:17.996" endtime="20210322 02:41:17.998"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_external_key}</arg>
</arguments>
<msg timestamp="20210322 02:41:17.999" level="INFO">${holder_external_key} = 3969ed9bba3b451e9c788b1d9ed97ff2</msg>
<status status="PASS" starttime="20210322 02:41:17.998" endtime="20210322 02:41:17.999"></status>
</kw>
<status status="PASS" starttime="20210322 02:41:17.301" endtime="20210322 02:41:17.999"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_name}</arg>
</arguments>
<msg timestamp="20210322 02:41:18.000" level="INFO">${holder_name} = Holder de teste</msg>
<status status="PASS" starttime="20210322 02:41:18.000" endtime="20210322 02:41:18.001"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 02:41:18.002" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:41:18.001" endtime="20210322 02:41:18.002"></status>
</kw>
<kw name="criar holder phone" library="accreditation_post_holder_phone">
<arguments>
<arg>21</arg>
<arg>51</arg>
<arg>996221236</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:41:18.004" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 02:41:18.003" endtime="20210322 02:41:18.004"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"area_code": "${phone_area_code}",</arg>
<arg>"country_code": "${phone_country_code}",</arg>
<arg>"number": "${phone_number}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 02:41:18.006" level="INFO">${body} = { "area_code": "21", "country_code": "51", "number": "996221236" }</msg>
<status status="PASS" starttime="20210322 02:41:18.005" endtime="20210322 02:41:18.006"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/phones</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:41:18.008" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/3969ed9bba3b451e9c788b1d9ed97ff2/phones, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "area_code": "21", "country_code": "51", "number": "996221236" } 
json=None</msg>
<msg timestamp="20210322 02:41:18.240" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:41:18.007" endtime="20210322 02:41:18.240"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:41:18.241" level="INFO">{'id': '73558df52b2b4e3ebc190c151da987f5', 'area_code': '21', 'country_code': '51', 'number': '996221236', 'main': True, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/3969ed9bba3b451e9c788b1d9ed97ff2/phones/73558df52b2b4e3ebc190c151da987f5', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/3969ed9bba3b451e9c788b1d9ed97ff2', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 02:41:18.241" endtime="20210322 02:41:18.242"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:41:18.242" level="INFO">c2324c35e730c972</msg>
<status status="PASS" starttime="20210322 02:41:18.242" endtime="20210322 02:41:18.243"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:41:18.243" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:41:18.243" endtime="20210322 02:41:18.243"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${phone_external_key}</var>
</assign>
<msg timestamp="20210322 02:41:18.245" level="INFO">${phone_external_key} = 73558df52b2b4e3ebc190c151da987f5</msg>
<status status="PASS" starttime="20210322 02:41:18.244" endtime="20210322 02:41:18.245"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${phone_external_key}</arg>
</arguments>
<msg timestamp="20210322 02:41:18.245" level="INFO">${phone_external_key} = 73558df52b2b4e3ebc190c151da987f5</msg>
<status status="PASS" starttime="20210322 02:41:18.245" endtime="20210322 02:41:18.246"></status>
</kw>
<status status="PASS" starttime="20210322 02:41:18.002" endtime="20210322 02:41:18.246"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 02:41:18.247" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:41:18.246" endtime="20210322 02:41:18.247"></status>
</kw>
<kw name="criar holder address" library="accreditation_post_holder_address">
<arguments>
<arg>Rio de Janeiro</arg>
<arg>Rio de Janeiro</arg>
<arg>Brasil</arg>
<arg>Bairro de Testes</arg>
<arg>Rua de Testes</arg>
<arg>90</arg>
<arg>apto 200</arg>
<arg>21550987</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:41:18.248" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 02:41:18.248" endtime="20210322 02:41:18.248"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"city": "${city}",</arg>
<arg>"state": "${state}",</arg>
<arg>"country": "${country}",</arg>
<arg>"neighborhood": "${neighborhood}",</arg>
<arg>"street": "${street}",</arg>
<arg>"number": "${number}",</arg>
<arg>"complement": "${complement}",</arg>
<arg>"postal_code": "${postal_code}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 02:41:18.250" level="INFO">${body} = { "city": "Rio de Janeiro", "state": "Rio de Janeiro", "country": "Brasil", "neighborhood": "Bairro de Testes", "street": "Rua de Testes", "number": "90", "complement": "apto 200", "postal_code": "215...</msg>
<status status="PASS" starttime="20210322 02:41:18.249" endtime="20210322 02:41:18.250"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/addresses</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:41:18.251" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/3969ed9bba3b451e9c788b1d9ed97ff2/addresses, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "city": "Rio de Janeiro", "state": "Rio de Janeiro", "country": "Brasil", "neighborhood": "Bairro de Testes", "street": "Rua de Testes", "number": "90", "complement": "apto 200", "postal_code": "21550987" } 
json=None</msg>
<msg timestamp="20210322 02:41:18.484" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:41:18.250" endtime="20210322 02:41:18.484"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:41:18.486" level="INFO">{'id': '3466ef3b2241441da6cd8919be3a4272', 'street': 'Rua de Testes', 'number': '90', 'city': 'Rio de Janeiro', 'complement': 'apto 200', 'state': 'Rio de Janeiro', 'neighborhood': 'Bairro de Testes', 'postal_code': '21550987', 'country': 'Brasil', 'main': True, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/3969ed9bba3b451e9c788b1d9ed97ff2/addresses/3466ef3b2241441da6cd8919be3a4272', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/3969ed9bba3b451e9c788b1d9ed97ff2', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 02:41:18.485" endtime="20210322 02:41:18.486"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:41:18.488" level="INFO">1ec594b7a3868077</msg>
<status status="PASS" starttime="20210322 02:41:18.487" endtime="20210322 02:41:18.488"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:41:18.490" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:41:18.489" endtime="20210322 02:41:18.490"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${address_external_key}</var>
</assign>
<msg timestamp="20210322 02:41:18.492" level="INFO">${address_external_key} = 3466ef3b2241441da6cd8919be3a4272</msg>
<status status="PASS" starttime="20210322 02:41:18.491" endtime="20210322 02:41:18.492"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${address_external_key}</arg>
</arguments>
<msg timestamp="20210322 02:41:18.493" level="INFO">${address_external_key} = 3466ef3b2241441da6cd8919be3a4272</msg>
<status status="PASS" starttime="20210322 02:41:18.492" endtime="20210322 02:41:18.493"></status>
</kw>
<status status="PASS" starttime="20210322 02:41:18.247" endtime="20210322 02:41:18.493"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 02:41:18.494" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:41:18.494" endtime="20210322 02:41:18.495"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>SELFIE</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:41:18.496" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 02:41:18.496" endtime="20210322 02:41:18.496"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 02:41:18.497" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 02:41:18.499" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 02:41:18.497" endtime="20210322 02:41:18.499"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:41:18.500" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/3969ed9bba3b451e9c788b1d9ed97ff2/documents?type=SELFIE, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 02:41:18.809" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:41:18.499" endtime="20210322 02:41:18.809"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:41:18.811" level="INFO">{'id': '3ce75993b5474745b7ad7364110c7a1d', 'document_type': 'selfie', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/3969ed9bba3b451e9c788b1d9ed97ff2/documents/3ce75993b5474745b7ad7364110c7a1d', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/3969ed9bba3b451e9c788b1d9ed97ff2', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/3969ed9bba3b451e9c788b1d9ed97ff2/documents/3ce75993b5474745b7ad7364110c7a1d/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 02:41:18.810" endtime="20210322 02:41:18.812"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:41:18.814" level="INFO">1a23de86b8871179</msg>
<status status="PASS" starttime="20210322 02:41:18.813" endtime="20210322 02:41:18.815"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:41:18.816" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:41:18.815" endtime="20210322 02:41:18.816"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 02:41:18.817" level="INFO">${document_external_key} = 3ce75993b5474745b7ad7364110c7a1d</msg>
<status status="PASS" starttime="20210322 02:41:18.816" endtime="20210322 02:41:18.817"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 02:41:18.818" level="INFO">${document_external_key} = 3ce75993b5474745b7ad7364110c7a1d</msg>
<status status="PASS" starttime="20210322 02:41:18.818" endtime="20210322 02:41:18.819"></status>
</kw>
<status status="PASS" starttime="20210322 02:41:18.495" endtime="20210322 02:41:18.819"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 02:41:18.821" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:41:18.820" endtime="20210322 02:41:18.821"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>RG_FRENTE</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:41:18.823" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 02:41:18.822" endtime="20210322 02:41:18.823"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 02:41:18.824" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 02:41:18.826" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 02:41:18.823" endtime="20210322 02:41:18.826"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:41:18.827" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/3969ed9bba3b451e9c788b1d9ed97ff2/documents?type=RG_FRENTE, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 02:41:19.071" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:41:18.826" endtime="20210322 02:41:19.071"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:41:19.071" level="INFO">{'id': '0c56d08fa7664bc4a9574f9e9633a66b', 'document_type': 'rg_frente', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/3969ed9bba3b451e9c788b1d9ed97ff2/documents/0c56d08fa7664bc4a9574f9e9633a66b', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/3969ed9bba3b451e9c788b1d9ed97ff2', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/3969ed9bba3b451e9c788b1d9ed97ff2/documents/0c56d08fa7664bc4a9574f9e9633a66b/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 02:41:19.071" endtime="20210322 02:41:19.071"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:41:19.073" level="INFO">6dff518e5a9172a8</msg>
<status status="PASS" starttime="20210322 02:41:19.073" endtime="20210322 02:41:19.073"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:41:19.073" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:41:19.073" endtime="20210322 02:41:19.073"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 02:41:19.074" level="INFO">${document_external_key} = 0c56d08fa7664bc4a9574f9e9633a66b</msg>
<status status="PASS" starttime="20210322 02:41:19.074" endtime="20210322 02:41:19.074"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 02:41:19.074" level="INFO">${document_external_key} = 0c56d08fa7664bc4a9574f9e9633a66b</msg>
<status status="PASS" starttime="20210322 02:41:19.074" endtime="20210322 02:41:19.074"></status>
</kw>
<status status="PASS" starttime="20210322 02:41:18.822" endtime="20210322 02:41:19.074"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 02:41:19.075" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:41:19.075" endtime="20210322 02:41:19.075"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>RG_VERSO</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:41:19.075" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 02:41:19.075" endtime="20210322 02:41:19.075"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 02:41:19.076" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 02:41:19.077" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 02:41:19.076" endtime="20210322 02:41:19.077"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:41:19.077" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/3969ed9bba3b451e9c788b1d9ed97ff2/documents?type=RG_VERSO, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 02:41:19.345" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:41:19.077" endtime="20210322 02:41:19.345"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:41:19.345" level="INFO">{'id': 'ff5e38fdb5564e2db9c6cd97d3dcfc00', 'document_type': 'rg_verso', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/3969ed9bba3b451e9c788b1d9ed97ff2/documents/ff5e38fdb5564e2db9c6cd97d3dcfc00', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/3969ed9bba3b451e9c788b1d9ed97ff2', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/3969ed9bba3b451e9c788b1d9ed97ff2/documents/ff5e38fdb5564e2db9c6cd97d3dcfc00/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 02:41:19.345" endtime="20210322 02:41:19.345"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:41:19.345" level="INFO">d6844846bdcc100a</msg>
<status status="PASS" starttime="20210322 02:41:19.345" endtime="20210322 02:41:19.345"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:41:19.346" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:41:19.346" endtime="20210322 02:41:19.346"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 02:41:19.346" level="INFO">${document_external_key} = ff5e38fdb5564e2db9c6cd97d3dcfc00</msg>
<status status="PASS" starttime="20210322 02:41:19.346" endtime="20210322 02:41:19.346"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 02:41:19.347" level="INFO">${document_external_key} = ff5e38fdb5564e2db9c6cd97d3dcfc00</msg>
<status status="PASS" starttime="20210322 02:41:19.347" endtime="20210322 02:41:19.347"></status>
</kw>
<status status="PASS" starttime="20210322 02:41:19.075" endtime="20210322 02:41:19.347"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 02:41:19.347" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:41:19.347" endtime="20210322 02:41:19.347"></status>
</kw>
<kw name="solicitar aprovação do holder" library="accreditation_request_approval">
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:41:19.348" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 02:41:19.348" endtime="20210322 02:41:19.348"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/approval</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:41:19.349" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/3969ed9bba3b451e9c788b1d9ed97ff2/approval, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data=None 
json=None</msg>
<msg timestamp="20210322 02:41:19.609" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:41:19.348" endtime="20210322 02:41:19.609"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:41:19.610" level="INFO">{'message': 'Approval request accepted successfully. Processing analysis'}</msg>
<status status="PASS" starttime="20210322 02:41:19.609" endtime="20210322 02:41:19.610"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:41:19.611" level="INFO">aa3af3891fdccd32</msg>
<status status="PASS" starttime="20210322 02:41:19.610" endtime="20210322 02:41:19.611"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:41:19.612" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:41:19.612" endtime="20210322 02:41:19.612"></status>
</kw>
<status status="PASS" starttime="20210322 02:41:19.348" endtime="20210322 02:41:19.612"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 02:41:19.613" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:41:19.613" endtime="20210322 02:41:19.613"></status>
</kw>
<kw name="recebendo notificação de aprovação" library="accreditation_risk_notification">
<kw name="Uuid 4" library="FakerLibrary">
<doc>Generates a random UUID4 string.
:param cast_to: Specify what type the UUID should be cast to. Default is `str`
:type cast_to: callable</doc>
<assign>
<var>${assessment_id}</var>
</assign>
<msg timestamp="20210322 02:41:19.615" level="INFO">${assessment_id} = b191491b-7216-4f40-b7b1-f538d38660d9</msg>
<status status="PASS" starttime="20210322 02:41:19.615" endtime="20210322 02:41:19.615"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>year</arg>
</arguments>
<assign>
<var>${year}</var>
</assign>
<msg timestamp="20210322 02:41:19.616" level="INFO">${year} = 2021</msg>
<status status="PASS" starttime="20210322 02:41:19.615" endtime="20210322 02:41:19.616"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>month</arg>
</arguments>
<assign>
<var>${month}</var>
</assign>
<msg timestamp="20210322 02:41:19.617" level="INFO">${month} = 03</msg>
<status status="PASS" starttime="20210322 02:41:19.616" endtime="20210322 02:41:19.617"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>day</arg>
</arguments>
<assign>
<var>${day}</var>
</assign>
<msg timestamp="20210322 02:41:19.618" level="INFO">${day} = 22</msg>
<status status="PASS" starttime="20210322 02:41:19.617" endtime="20210322 02:41:19.618"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:41:19.619" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 02:41:19.618" endtime="20210322 02:41:19.619"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "risk.assessment.result",</arg>
<arg>"resource": "business.holder",</arg>
<arg>"created_at": "${year}-${month}-${day} 15:28:56.747Z",</arg>
<arg>"marketplace_id": "${marketplace_external_key}",</arg>
<arg>"object": {</arg>
<arg>"result": "APPROVED",</arg>
<arg>"holder_id": "${holder_external_key}",</arg>
<arg>"applicant_id": "${application_external_key}",</arg>
<arg>"assessment_id": "${assessment_id}"</arg>
<arg>}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 02:41:19.622" level="INFO">${body} = { "type": "risk.assessment.result", "resource": "business.holder", "created_at": "2021-03-22 15:28:56.747Z", "marketplace_id": "f71a8951368a4cc085cf7875ff44e61c", "object": { "result": "APPROVED", "ho...</msg>
<status status="PASS" starttime="20210322 02:41:19.619" endtime="20210322 02:41:19.622"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/admin/internal_operation/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/registration/approval</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:41:19.624" level="INFO">POST Request using : uri=/admin/internal_operation/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/3969ed9bba3b451e9c788b1d9ed97ff2/registration/approval, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "risk.assessment.result", "resource": "business.holder", "created_at": "2021-03-22 15:28:56.747Z", "marketplace_id": "f71a8951368a4cc085cf7875ff44e61c", "object": { "result": "APPROVED", "holder_id": "3969ed9bba3b451e9c788b1d9ed97ff2", "applicant_id": "bcc25a6751c14b52af1340d40dba78c5", "assessment_id": "b191491b-7216-4f40-b7b1-f538d38660d9" } } 
json=None</msg>
<msg timestamp="20210322 02:41:19.833" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:41:19.623" endtime="20210322 02:41:19.833"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:41:19.834" level="INFO">{'message': 'Holder approved successfully'}</msg>
<status status="PASS" starttime="20210322 02:41:19.833" endtime="20210322 02:41:19.834"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:41:19.835" level="INFO">ea9cc9c13659d538</msg>
<status status="PASS" starttime="20210322 02:41:19.834" endtime="20210322 02:41:19.835"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:41:19.836" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:41:19.835" endtime="20210322 02:41:19.836"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 02:41:19.837" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:41:19.837" endtime="20210322 02:41:19.838"></status>
</kw>
<status status="PASS" starttime="20210322 02:41:19.614" endtime="20210322 02:41:19.838"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 02:41:19.839" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:41:19.839" endtime="20210322 02:41:19.840"></status>
</kw>
<kw name="buscar account por holder" library="accounts_get_accounts_by_holder">
<kw name="conectar accounts" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accounts</arg>
<arg>url=${account_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 02:41:19.841" level="INFO">Creating Session using : alias=accounts, url=https://banking-accounts-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 02:41:19.841" endtime="20210322 02:41:19.842"></status>
</kw>
<status status="PASS" starttime="20210322 02:41:19.840" endtime="20210322 02:41:19.842"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accounts</arg>
<arg>/marketplaces/${marketplace_external_key}/holders/${holder_external_key}/accounts</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:41:19.843" level="INFO">GET Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/holders/3969ed9bba3b451e9c788b1d9ed97ff2/accounts, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 02:41:20.433" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:41:19.843" endtime="20210322 02:41:20.433"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:41:20.436" level="INFO">{'items': [{'id': 'b237352a49cb41a7aa5885b4cab9b5c5', 'holder': '3969ed9bba3b451e9c788b1d9ed97ff2', 'balance': '0.00', 'currency': 'BRL', 'routing_number': '001', 'number': '4964985497', 'status': 'active', 'metadata': {}, 'created_at': '2021-03-22T05:41:20.661279', 'updated_at': '2021-03-22T05:41:20.661279', 'primary': True, 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'uri': '/v2/marketplaces/f71a8951368a4cc085cf7875ff44e61c/accounts/b237352a49cb41a7aa5885b4cab9b5c5', 'resource': 'payment_account'}], 'has_more': False, 'limit': 100, 'total_pages': 1, 'page': 1, 'offset': 0, 'total': '1', 'query_count': '1'}</msg>
<status status="PASS" starttime="20210322 02:41:20.434" endtime="20210322 02:41:20.436"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:41:20.437" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:41:20.436" endtime="20210322 02:41:20.437"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["id"]}</arg>
</arguments>
<assign>
<var>${account_external_key}</var>
</assign>
<msg timestamp="20210322 02:41:20.439" level="INFO">${account_external_key} = b237352a49cb41a7aa5885b4cab9b5c5</msg>
<status status="PASS" starttime="20210322 02:41:20.438" endtime="20210322 02:41:20.439"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_external_key}</arg>
</arguments>
<msg timestamp="20210322 02:41:20.440" level="INFO">${account_external_key} = b237352a49cb41a7aa5885b4cab9b5c5</msg>
<status status="PASS" starttime="20210322 02:41:20.440" endtime="20210322 02:41:20.441"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["number"]}</arg>
</arguments>
<assign>
<var>${account_number}</var>
</assign>
<msg timestamp="20210322 02:41:20.443" level="INFO">${account_number} = 4964985497</msg>
<status status="PASS" starttime="20210322 02:41:20.441" endtime="20210322 02:41:20.443"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_number}</arg>
</arguments>
<msg timestamp="20210322 02:41:20.443" level="INFO">${account_number} = 4964985497</msg>
<status status="PASS" starttime="20210322 02:41:20.443" endtime="20210322 02:41:20.443"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["routing_number"]}</arg>
</arguments>
<assign>
<var>${account_routing_number}</var>
</assign>
<msg timestamp="20210322 02:41:20.444" level="INFO">${account_routing_number} = 001</msg>
<status status="PASS" starttime="20210322 02:41:20.443" endtime="20210322 02:41:20.444"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_routing_number}</arg>
</arguments>
<msg timestamp="20210322 02:41:20.445" level="INFO">${account_routing_number} = 001</msg>
<status status="PASS" starttime="20210322 02:41:20.444" endtime="20210322 02:41:20.445"></status>
</kw>
<status status="PASS" starttime="20210322 02:41:19.840" endtime="20210322 02:41:20.446"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 02:41:20.446" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:41:20.446" endtime="20210322 02:41:20.446"></status>
</kw>
<status status="PASS" starttime="20210322 02:41:17.293" endtime="20210322 02:41:20.446"></status>
</kw>
<kw name="criar chave pix" library="pix_dict_create_entry">
<arguments>
<arg>phone</arg>
<arg>${phone_pix}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 02:41:20.448" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 02:41:20.447" endtime="20210322 02:41:20.448"></status>
</kw>
<status status="PASS" starttime="20210322 02:41:20.447" endtime="20210322 02:41:20.448"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${type}</arg>
</arguments>
<msg timestamp="20210322 02:41:20.449" level="INFO">${type} = phone</msg>
<status status="PASS" starttime="20210322 02:41:20.449" endtime="20210322 02:41:20.449"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210322 02:41:20.450" level="INFO">${value} = +5521981443783</msg>
<status status="PASS" starttime="20210322 02:41:20.449" endtime="20210322 02:41:20.450"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:41:20.450" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 02:41:20.450" endtime="20210322 02:41:20.450"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "${type}",</arg>
<arg>"value": "${value}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 02:41:20.451" level="INFO">${body} = { "type": "phone", "value": "+5521981443783" }</msg>
<status status="PASS" starttime="20210322 02:41:20.451" endtime="20210322 02:41:20.451"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:41:20.453" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/3969ed9bba3b451e9c788b1d9ed97ff2/accounts/b237352a49cb41a7aa5885b4cab9b5c5/entries, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "phone", "value": "+5521981443783" } 
json=None</msg>
<msg timestamp="20210322 02:41:21.109" level="INFO">${response} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20210322 02:41:20.451" endtime="20210322 02:41:21.109"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:41:21.112" level="INFO">{'id': '52384085fe1e4ffeb21af5e36ca85a28', 'status': 'waiting_ownership_verification', 'created_at': '2021-03-22T02:41:21.954', 'updated_at': '2021-03-22T02:41:21.954', 'key': {'value': '+5521981443783', 'type': 'phone'}, 'account': {'id': 'b237352a49cb41a7aa5885b4cab9b5c5', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': '3969ed9bba3b451e9c788b1d9ed97ff2', 'owner': {'name': 'Holder de teste', 'national_registration': '73296548092', 'type': 'individual'}, 'routing_number': '001', 'number': '4964985497', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}, 'resource': 'pix.entry'}</msg>
<status status="PASS" starttime="20210322 02:41:21.110" endtime="20210322 02:41:21.112"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:41:21.114" level="INFO">3c6680cbf14f64cf</msg>
<status status="PASS" starttime="20210322 02:41:21.113" endtime="20210322 02:41:21.114"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 02:41:21.115" level="INFO">202</msg>
<status status="PASS" starttime="20210322 02:41:21.115" endtime="20210322 02:41:21.116"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:41:21.117" level="INFO">${response} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20210322 02:41:21.116" endtime="20210322 02:41:21.117"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${entry_external_key}</var>
</assign>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:41:21.119" endtime="20210322 02:41:21.120"></status>
</kw>
<msg timestamp="20210322 02:41:21.120" level="INFO">${entry_external_key} = 52384085fe1e4ffeb21af5e36ca85a28</msg>
<status status="PASS" starttime="20210322 02:41:21.118" endtime="20210322 02:41:21.120"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${entry_external_key}</arg>
</arguments>
<msg timestamp="20210322 02:41:21.121" level="INFO">${entry_external_key} = 52384085fe1e4ffeb21af5e36ca85a28</msg>
<status status="PASS" starttime="20210322 02:41:21.121" endtime="20210322 02:41:21.121"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["key"]["value"]}</arg>
</arguments>
<assign>
<var>${entry_key_value}</var>
</assign>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["key"]["value"]}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:41:21.123" endtime="20210322 02:41:21.124"></status>
</kw>
<msg timestamp="20210322 02:41:21.124" level="INFO">${entry_key_value} = +5521981443783</msg>
<status status="PASS" starttime="20210322 02:41:21.122" endtime="20210322 02:41:21.124"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${entry_key_value}</arg>
</arguments>
<msg timestamp="20210322 02:41:21.125" level="INFO">${entry_key_value} = +5521981443783</msg>
<status status="PASS" starttime="20210322 02:41:21.124" endtime="20210322 02:41:21.125"></status>
</kw>
<status status="PASS" starttime="20210322 02:41:20.446" endtime="20210322 02:41:21.125"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${holder_external_key}</arg>
</arguments>
<assign>
<var>${holder_claimer}</var>
</assign>
<msg timestamp="20210322 02:41:21.126" level="INFO">${holder_claimer} = 3969ed9bba3b451e9c788b1d9ed97ff2</msg>
<status status="PASS" starttime="20210322 02:41:21.125" endtime="20210322 02:41:21.126"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${account_external_key}</arg>
</arguments>
<assign>
<var>${account_claimer}</var>
</assign>
<msg timestamp="20210322 02:41:21.126" level="INFO">${account_claimer} = b237352a49cb41a7aa5885b4cab9b5c5</msg>
<status status="PASS" starttime="20210322 02:41:21.126" endtime="20210322 02:41:21.126"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${entry_external_key}</arg>
</arguments>
<assign>
<var>${entry_claimer}</var>
</assign>
<msg timestamp="20210322 02:41:21.127" level="INFO">${entry_claimer} = 52384085fe1e4ffeb21af5e36ca85a28</msg>
<status status="PASS" starttime="20210322 02:41:21.127" endtime="20210322 02:41:21.127"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Holder Claimer :: ${holder_claimer}</arg>
</arguments>
<msg timestamp="20210322 02:41:21.128" level="INFO">Holder Claimer :: 3969ed9bba3b451e9c788b1d9ed97ff2</msg>
<status status="PASS" starttime="20210322 02:41:21.128" endtime="20210322 02:41:21.128"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Account Claimer :: ${account_claimer}</arg>
</arguments>
<msg timestamp="20210322 02:41:21.129" level="INFO">Account Claimer :: b237352a49cb41a7aa5885b4cab9b5c5</msg>
<status status="PASS" starttime="20210322 02:41:21.129" endtime="20210322 02:41:21.129"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Entry Claimer :: ${entry_claimer}</arg>
</arguments>
<msg timestamp="20210322 02:41:21.129" level="INFO">Entry Claimer :: 52384085fe1e4ffeb21af5e36ca85a28</msg>
<status status="PASS" starttime="20210322 02:41:21.129" endtime="20210322 02:41:21.129"></status>
</kw>
<kw name="buscar verification code" library="pix_dict_verification_code">
<arguments>
<arg>${holder_claimer}</arg>
<arg>${account_claimer}</arg>
<arg>${entry_claimer}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 02:41:21.131" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 02:41:21.131" endtime="20210322 02:41:21.131"></status>
</kw>
<status status="PASS" starttime="20210322 02:41:21.130" endtime="20210322 02:41:21.132"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/admin/internal_operation/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries/${entry_external_key}/code</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:41:21.132" level="INFO">GET Request using : uri=/admin/internal_operation/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/3969ed9bba3b451e9c788b1d9ed97ff2/accounts/b237352a49cb41a7aa5885b4cab9b5c5/entries/52384085fe1e4ffeb21af5e36ca85a28/code, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 02:41:21.743" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:41:21.132" endtime="20210322 02:41:21.743"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:41:21.744" level="INFO">{'code': '5547'}</msg>
<status status="PASS" starttime="20210322 02:41:21.743" endtime="20210322 02:41:21.744"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:41:21.744" level="INFO">c7bcd6bca6923a3b</msg>
<status status="PASS" starttime="20210322 02:41:21.744" endtime="20210322 02:41:21.745"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 02:41:21.745" level="INFO">200</msg>
<status status="PASS" starttime="20210322 02:41:21.745" endtime="20210322 02:41:21.745"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:41:21.746" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:41:21.746" endtime="20210322 02:41:21.746"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["code"]}</arg>
</arguments>
<assign>
<var>${verification_code}</var>
</assign>
<msg timestamp="20210322 02:41:21.748" level="INFO">${verification_code} = 5547</msg>
<status status="PASS" starttime="20210322 02:41:21.747" endtime="20210322 02:41:21.748"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${verification_code}</arg>
</arguments>
<msg timestamp="20210322 02:41:21.748" level="INFO">${verification_code} = 5547</msg>
<status status="PASS" starttime="20210322 02:41:21.748" endtime="20210322 02:41:21.749"></status>
</kw>
<status status="PASS" starttime="20210322 02:41:21.130" endtime="20210322 02:41:21.749"></status>
</kw>
<kw name="confirmar propriedade da chave pix" library="pix_dict_confirm_propriety">
<arguments>
<arg>${verification_code}</arg>
<arg>${holder_claimer}</arg>
<arg>${account_claimer}</arg>
<arg>${entry_claimer}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 02:41:21.751" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 02:41:21.750" endtime="20210322 02:41:21.751"></status>
</kw>
<status status="PASS" starttime="20210322 02:41:21.750" endtime="20210322 02:41:21.751"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:41:21.752" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 02:41:21.752" endtime="20210322 02:41:21.752"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"code": "${verification_code}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 02:41:21.753" level="INFO">${body} = { "code": "5547" }</msg>
<status status="PASS" starttime="20210322 02:41:21.752" endtime="20210322 02:41:21.753"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries/${entry_external_key}/ownership</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:41:21.754" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/3969ed9bba3b451e9c788b1d9ed97ff2/accounts/b237352a49cb41a7aa5885b4cab9b5c5/entries/52384085fe1e4ffeb21af5e36ca85a28/ownership, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "code": "5547" } 
json=None</msg>
<msg timestamp="20210322 02:41:23.113" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:41:21.753" endtime="20210322 02:41:23.113"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:41:23.114" level="INFO">{'id': '52384085fe1e4ffeb21af5e36ca85a28', 'status': 'waiting_ownership_claiming', 'created_at': '2021-03-22T02:41:21.954', 'updated_at': '2021-03-22T02:41:23.978', 'key': {'value': '+5521981443783', 'type': 'phone'}, 'account': {'id': 'b237352a49cb41a7aa5885b4cab9b5c5', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': '3969ed9bba3b451e9c788b1d9ed97ff2', 'owner': {'name': 'Holder de teste', 'national_registration': '73296548092', 'type': 'individual'}, 'routing_number': '001', 'number': '4964985497', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}, 'resource': 'pix.entry'}</msg>
<status status="PASS" starttime="20210322 02:41:23.113" endtime="20210322 02:41:23.114"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:41:23.116" level="INFO">aacf5f7dce036bc4</msg>
<status status="PASS" starttime="20210322 02:41:23.115" endtime="20210322 02:41:23.116"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 02:41:23.117" level="INFO">201</msg>
<status status="PASS" starttime="20210322 02:41:23.116" endtime="20210322 02:41:23.117"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:41:23.118" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:41:23.117" endtime="20210322 02:41:23.118"></status>
</kw>
<status status="PASS" starttime="20210322 02:41:21.749" endtime="20210322 02:41:23.119"></status>
</kw>
<kw name="validar status da chave após criação da reivindicação" library="asserts">
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["status"]}</arg>
<arg>waiting_ownership_claiming</arg>
</arguments>
<status status="PASS" starttime="20210322 02:41:23.121" endtime="20210322 02:41:23.122"></status>
</kw>
<status status="PASS" starttime="20210322 02:41:23.120" endtime="20210322 02:41:23.123"></status>
</kw>
<kw name="criar reivindicação de posse" library="pix_dict_create_claims">
<arguments>
<arg>${holder_claimer}</arg>
<arg>${account_claimer}</arg>
<arg>${entry_claimer}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 02:41:23.125" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 02:41:23.124" endtime="20210322 02:41:23.126"></status>
</kw>
<status status="PASS" starttime="20210322 02:41:23.123" endtime="20210322 02:41:23.126"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries/${entry_external_key}/claims</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:41:23.126" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/3969ed9bba3b451e9c788b1d9ed97ff2/accounts/b237352a49cb41a7aa5885b4cab9b5c5/entries/52384085fe1e4ffeb21af5e36ca85a28/claims, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 02:41:24.840" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:41:23.126" endtime="20210322 02:41:24.840"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:41:24.841" level="INFO">{'id': '6355f170d569495785d26ed3ec9b99b1', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'created_at': '2021-03-22T02:41:25.701', 'updated_at': '2021-03-22T02:41:25.701', 'type': 'OWNERSHIP', 'status': 'open', 'key': {'value': '+5521981443783', 'type': 'phone'}, 'claimer': {'name': 'Holder de teste', 'national_registration': '73296548092', 'type': 'individual', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': '3969ed9bba3b451e9c788b1d9ed97ff2', 'account': {'digital_account_id': 'b237352a49cb41a7aa5885b4cab9b5c5', 'routing_number': '001', 'number': '4964985497', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}}, 'donor': {'name': 'Holder de teste', 'national_registration': '42681903769', 'type': 'individual', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': 'f6a301af8ce64b40b8171f029a710e56', 'account': {'digital_account_id': '0f29596e5bcc42728d4176da2a45d0f1', 'routing_number': '001', 'number': '6650448847', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}}, 'completion_period_end': '2021-04-05T05:41:25.000', 'resolution_period_end': '2021-03-29T05:41:25.000', 'resource': 'pix.claim'}</msg>
<status status="PASS" starttime="20210322 02:41:24.841" endtime="20210322 02:41:24.841"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:41:24.843" level="INFO">58bb4c2ac8fd924a</msg>
<status status="PASS" starttime="20210322 02:41:24.842" endtime="20210322 02:41:24.843"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 02:41:24.844" level="INFO">201</msg>
<status status="PASS" starttime="20210322 02:41:24.843" endtime="20210322 02:41:24.844"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:41:24.845" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:41:24.844" endtime="20210322 02:41:24.845"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${claim_external_key}</var>
</assign>
<msg timestamp="20210322 02:41:24.846" level="INFO">${claim_external_key} = 6355f170d569495785d26ed3ec9b99b1</msg>
<status status="PASS" starttime="20210322 02:41:24.845" endtime="20210322 02:41:24.846"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${claim_external_key}</arg>
</arguments>
<msg timestamp="20210322 02:41:24.846" level="INFO">${claim_external_key} = 6355f170d569495785d26ed3ec9b99b1</msg>
<status status="PASS" starttime="20210322 02:41:24.846" endtime="20210322 02:41:24.846"></status>
</kw>
<status status="PASS" starttime="20210322 02:41:23.123" endtime="20210322 02:41:24.847"></status>
</kw>
<kw name="buscar reivindicação de posse" library="pix_dict_get_claims">
<arguments>
<arg>${holder_claimer}</arg>
<arg>${account_claimer}</arg>
<arg>${claim_external_key}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 02:41:24.848" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 02:41:24.848" endtime="20210322 02:41:24.849"></status>
</kw>
<status status="PASS" starttime="20210322 02:41:24.847" endtime="20210322 02:41:24.849"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/claims/${claim_external_key}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:41:24.850" level="INFO">GET Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/3969ed9bba3b451e9c788b1d9ed97ff2/accounts/b237352a49cb41a7aa5885b4cab9b5c5/claims/6355f170d569495785d26ed3ec9b99b1, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 02:41:25.504" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:41:24.849" endtime="20210322 02:41:25.504"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:41:25.506" level="INFO">{'id': '6355f170d569495785d26ed3ec9b99b1', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'created_at': '2021-03-22T02:41:25.701', 'updated_at': '2021-03-22T02:41:25.701', 'type': 'OWNERSHIP', 'status': 'open', 'key': {'value': '+5521981443783', 'type': 'phone'}, 'claimer': {'name': 'Holder de teste', 'national_registration': '73296548092', 'type': 'individual', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': '3969ed9bba3b451e9c788b1d9ed97ff2', 'account': {'digital_account_id': 'b237352a49cb41a7aa5885b4cab9b5c5', 'routing_number': '001', 'number': '4964985497', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}}, 'donor': {'name': 'Holder de teste', 'national_registration': '42681903769', 'type': 'individual', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': 'f6a301af8ce64b40b8171f029a710e56', 'account': {'digital_account_id': '0f29596e5bcc42728d4176da2a45d0f1', 'routing_number': '001', 'number': '6650448847', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}}, 'completion_period_end': '2021-04-05T05:41:25.000', 'resolution_period_end': '2021-03-29T05:41:25.000', 'resource': 'pix.claim'}</msg>
<status status="PASS" starttime="20210322 02:41:25.505" endtime="20210322 02:41:25.507"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:41:25.508" level="INFO">4fd2e07c71384f71</msg>
<status status="PASS" starttime="20210322 02:41:25.507" endtime="20210322 02:41:25.508"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 02:41:25.510" level="INFO">200</msg>
<status status="PASS" starttime="20210322 02:41:25.509" endtime="20210322 02:41:25.511"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:41:25.511" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:41:25.511" endtime="20210322 02:41:25.512"></status>
</kw>
<status status="PASS" starttime="20210322 02:41:24.847" endtime="20210322 02:41:25.512"></status>
</kw>
<kw name="validar status da reivindicação" library="asserts">
<arguments>
<arg>open</arg>
</arguments>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["status"]}</arg>
<arg>${claim_status}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:41:25.514" endtime="20210322 02:41:25.515"></status>
</kw>
<status status="PASS" starttime="20210322 02:41:25.513" endtime="20210322 02:41:25.516"></status>
</kw>
<kw name="receber notificação de reivindicação" library="pix_dict_receive_claim_notification">
<arguments>
<arg>${phone_pix}</arg>
<arg>${account_number_owner}</arg>
<arg>${national_registration_owner}</arg>
<arg>${holder_name_owner}</arg>
<arg>${claim_external_key}</arg>
<arg>WAITING_RESOLUTION</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 02:41:25.519" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 02:41:25.519" endtime="20210322 02:41:25.520"></status>
</kw>
<status status="PASS" starttime="20210322 02:41:25.517" endtime="20210322 02:41:25.520"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:41:25.521" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 02:41:25.521" endtime="20210322 02:41:25.521"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"data": {</arg>
<arg>"claim": {</arg>
<arg>"type": "OWNERSHIP",</arg>
<arg>"key": "${key_pix}",</arg>
<arg>"key_type": "PHONE",</arg>
<arg>"claimer_account": {</arg>
<arg>"participant": "19468242",</arg>
<arg>"branch": "0001",</arg>
<arg>"account_number": "${account_number}",</arg>
<arg>"account_type": "CACC"</arg>
<arg>},</arg>
<arg>"claimer": {</arg>
<arg>"type": "NATURAL_PERSON",</arg>
<arg>"tax_id_number": "${claimer_tax_id}",</arg>
<arg>"name": "${claimer_name}"</arg>
<arg>},</arg>
<arg>"donor_participant": "19468242",</arg>
<arg>"id": "${claim_external_key}",</arg>
<arg>"status": "${claim_notification_status}",</arg>
<arg>"resolution_period_end": "2020-10-18T10:00:00.000Z",</arg>
<arg>"completion_period_end": "2020-10-25T10:00:00.000Z",</arg>
<arg>"last_modified": "2020-10-17T10:00:00.000Z"</arg>
<arg>}</arg>
<arg>}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 02:41:25.523" level="INFO">${body} = { "data": { "claim": { "type": "OWNERSHIP", "key": "+5521981443783", "key_type": "PHONE", "claimer_account": { "participant": "19468242", "branch": "0001", "account_number": "6650448847", "account_typ...</msg>
<status status="PASS" starttime="20210322 02:41:25.522" endtime="20210322 02:41:25.523"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/banking/internal/dict/claims</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:41:25.525" level="INFO">POST Request using : uri=/banking/internal/dict/claims, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "data": { "claim": { "type": "OWNERSHIP", "key": "+5521981443783", "key_type": "PHONE", "claimer_account": { "participant": "19468242", "branch": "0001", "account_number": "6650448847", "account_type": "CACC" }, "claimer": { "type": "NATURAL_PERSON", "tax_id_number": "42681903769", "name": "Holder de teste" }, "donor_participant": "19468242", "id": "6355f170d569495785d26ed3ec9b99b1", "status": "WAITING_RESOLUTION", "resolution_period_end": "2020-10-18T10:00:00.000Z", "completion_period_end": "2020-10-25T10:00:00.000Z", "last_modified": "2020-10-17T10:00:00.000Z" } } } 
json=None</msg>
<msg timestamp="20210322 02:41:26.127" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:41:25.525" endtime="20210322 02:41:26.127"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 02:41:26.127" level="INFO">200</msg>
<status status="PASS" starttime="20210322 02:41:26.127" endtime="20210322 02:41:26.127"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:41:26.128" level="INFO">0a3d9d7ad0ac1623</msg>
<status status="PASS" starttime="20210322 02:41:26.128" endtime="20210322 02:41:26.128"></status>
</kw>
<status status="PASS" starttime="20210322 02:41:25.516" endtime="20210322 02:41:26.128"></status>
</kw>
<kw name="buscar reivindicação de posse" library="pix_dict_get_claims">
<arguments>
<arg>${holder_claimer}</arg>
<arg>${account_claimer}</arg>
<arg>${claim_external_key}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 02:41:26.129" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 02:41:26.129" endtime="20210322 02:41:26.129"></status>
</kw>
<status status="PASS" starttime="20210322 02:41:26.128" endtime="20210322 02:41:26.129"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/claims/${claim_external_key}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:41:26.130" level="INFO">GET Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/3969ed9bba3b451e9c788b1d9ed97ff2/accounts/b237352a49cb41a7aa5885b4cab9b5c5/claims/6355f170d569495785d26ed3ec9b99b1, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 02:41:26.766" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:41:26.129" endtime="20210322 02:41:26.766"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:41:26.767" level="INFO">{'id': '6355f170d569495785d26ed3ec9b99b1', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'created_at': '2021-03-22T02:41:25.701', 'updated_at': '2021-03-22T02:41:26.988', 'type': 'OWNERSHIP', 'status': 'waiting_resolution', 'key': {'value': '+5521981443783', 'type': 'phone'}, 'claimer': {'name': 'Holder de teste', 'national_registration': '73296548092', 'type': 'individual', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': '3969ed9bba3b451e9c788b1d9ed97ff2', 'account': {'digital_account_id': 'b237352a49cb41a7aa5885b4cab9b5c5', 'routing_number': '001', 'number': '4964985497', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}}, 'donor': {'name': 'Holder de teste', 'national_registration': '42681903769', 'type': 'individual', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': 'f6a301af8ce64b40b8171f029a710e56', 'account': {'digital_account_id': '0f29596e5bcc42728d4176da2a45d0f1', 'routing_number': '001', 'number': '6650448847', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}}, 'completion_period_end': '2021-04-05T05:41:25.000', 'resolution_period_end': '2021-03-29T05:41:25.000', 'resource': 'pix.claim'}</msg>
<status status="PASS" starttime="20210322 02:41:26.766" endtime="20210322 02:41:26.767"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:41:26.768" level="INFO">a78372f159d3dd39</msg>
<status status="PASS" starttime="20210322 02:41:26.768" endtime="20210322 02:41:26.768"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 02:41:26.769" level="INFO">200</msg>
<status status="PASS" starttime="20210322 02:41:26.769" endtime="20210322 02:41:26.770"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:41:26.771" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:41:26.770" endtime="20210322 02:41:26.771"></status>
</kw>
<status status="PASS" starttime="20210322 02:41:26.128" endtime="20210322 02:41:26.771"></status>
</kw>
<kw name="validar status da reivindicação" library="asserts">
<arguments>
<arg>waiting_resolution</arg>
</arguments>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["status"]}</arg>
<arg>${claim_status}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:41:26.773" endtime="20210322 02:41:26.773"></status>
</kw>
<status status="PASS" starttime="20210322 02:41:26.772" endtime="20210322 02:41:26.773"></status>
</kw>
<kw name="${index} IN RANGE [ 20 ]" type="for">
<kw name="${index} = 0" type="foritem">
<kw name="confirmar reivindicação de posse" library="pix_dict_confirm_claims">
<arguments>
<arg>${holder_owner}</arg>
<arg>${account_owner}</arg>
<arg>${claim_external_key}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 02:41:26.775" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 02:41:26.775" endtime="20210322 02:41:26.776"></status>
</kw>
<status status="PASS" starttime="20210322 02:41:26.775" endtime="20210322 02:41:26.776"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/claims/${claim_external_key}/confirm</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:41:26.777" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/f6a301af8ce64b40b8171f029a710e56/accounts/0f29596e5bcc42728d4176da2a45d0f1/claims/6355f170d569495785d26ed3ec9b99b1/confirm, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 02:41:28.408" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20210322 02:41:26.776" endtime="20210322 02:41:28.408"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:41:28.409" level="INFO">{'code': 9997, 'status': 'bad_request', 'type': 'integration_error', 'message': 'Claim operation invalid', 'category': 'unexpected', 'status_code': 400}</msg>
<status status="PASS" starttime="20210322 02:41:28.408" endtime="20210322 02:41:28.410"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:41:28.411" level="INFO">b86a5dc01dfff476</msg>
<status status="PASS" starttime="20210322 02:41:28.410" endtime="20210322 02:41:28.411"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 02:41:28.412" level="INFO">400</msg>
<status status="PASS" starttime="20210322 02:41:28.412" endtime="20210322 02:41:28.413"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:41:28.414" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20210322 02:41:28.413" endtime="20210322 02:41:28.414"></status>
</kw>
<status status="PASS" starttime="20210322 02:41:26.774" endtime="20210322 02:41:28.415"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${response.json()["message"]}' == 'Claim confirmed successfully'</arg>
</arguments>
<status status="PASS" starttime="20210322 02:41:28.415" endtime="20210322 02:41:28.416"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10</arg>
</arguments>
<msg timestamp="20210322 02:41:38.419" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20210322 02:41:28.417" endtime="20210322 02:41:38.419"></status>
</kw>
<status status="PASS" starttime="20210322 02:41:26.773" endtime="20210322 02:41:38.419"></status>
</kw>
<kw name="${index} = 1" type="foritem">
<kw name="confirmar reivindicação de posse" library="pix_dict_confirm_claims">
<arguments>
<arg>${holder_owner}</arg>
<arg>${account_owner}</arg>
<arg>${claim_external_key}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 02:41:38.420" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 02:41:38.420" endtime="20210322 02:41:38.421"></status>
</kw>
<status status="PASS" starttime="20210322 02:41:38.419" endtime="20210322 02:41:38.421"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/claims/${claim_external_key}/confirm</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:41:38.422" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/f6a301af8ce64b40b8171f029a710e56/accounts/0f29596e5bcc42728d4176da2a45d0f1/claims/6355f170d569495785d26ed3ec9b99b1/confirm, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 02:41:40.010" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:41:38.422" endtime="20210322 02:41:40.010"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:41:40.010" level="INFO">{'message': 'Claim confirmed successfully'}</msg>
<status status="PASS" starttime="20210322 02:41:40.010" endtime="20210322 02:41:40.010"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:41:40.010" level="INFO">a94a78713af564d1</msg>
<status status="PASS" starttime="20210322 02:41:40.010" endtime="20210322 02:41:40.011"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 02:41:40.011" level="INFO">200</msg>
<status status="PASS" starttime="20210322 02:41:40.011" endtime="20210322 02:41:40.011"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:41:40.011" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:41:40.011" endtime="20210322 02:41:40.011"></status>
</kw>
<status status="PASS" starttime="20210322 02:41:38.419" endtime="20210322 02:41:40.011"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${response.json()["message"]}' == 'Claim confirmed successfully'</arg>
</arguments>
<msg timestamp="20210322 02:41:40.012" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20210322 02:41:40.012" endtime="20210322 02:41:40.012"></status>
</kw>
<status status="PASS" starttime="20210322 02:41:38.419" endtime="20210322 02:41:40.012"></status>
</kw>
<status status="PASS" starttime="20210322 02:41:26.773" endtime="20210322 02:41:40.012"></status>
</kw>
<kw name="buscar reivindicação de posse" library="pix_dict_get_claims">
<arguments>
<arg>${holder_claimer}</arg>
<arg>${account_claimer}</arg>
<arg>${claim_external_key}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 02:41:40.013" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 02:41:40.013" endtime="20210322 02:41:40.014"></status>
</kw>
<status status="PASS" starttime="20210322 02:41:40.013" endtime="20210322 02:41:40.014"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/claims/${claim_external_key}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:41:40.014" level="INFO">GET Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/3969ed9bba3b451e9c788b1d9ed97ff2/accounts/b237352a49cb41a7aa5885b4cab9b5c5/claims/6355f170d569495785d26ed3ec9b99b1, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 02:41:40.615" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:41:40.014" endtime="20210322 02:41:40.615"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:41:40.616" level="INFO">{'id': '6355f170d569495785d26ed3ec9b99b1', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'created_at': '2021-03-22T02:41:25.701', 'updated_at': '2021-03-22T02:41:40.866', 'type': 'OWNERSHIP', 'status': 'confirmed', 'confirm_reason': 'USER_REQUESTED', 'key': {'value': '+5521981443783', 'type': 'phone'}, 'claimer': {'name': 'Holder de teste', 'national_registration': '73296548092', 'type': 'individual', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': '3969ed9bba3b451e9c788b1d9ed97ff2', 'account': {'digital_account_id': 'b237352a49cb41a7aa5885b4cab9b5c5', 'routing_number': '001', 'number': '4964985497', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}}, 'donor': {'name': 'Holder de teste', 'national_registration': '42681903769', 'type': 'individual', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': 'f6a301af8ce64b40b8171f029a710e56', 'account': {'digital_account_id': '0f29596e5bcc42728d4176da2a45d0f1', 'routing_number': '001', 'number': '6650448847', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}}, 'completion_period_end': '2021-03-22T05:41:00.000', 'resolution_period_end': '2021-03-29T05:41:25.000', 'resource': 'pix.claim'}</msg>
<status status="PASS" starttime="20210322 02:41:40.615" endtime="20210322 02:41:40.616"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:41:40.616" level="INFO">b251d534d07ab568</msg>
<status status="PASS" starttime="20210322 02:41:40.616" endtime="20210322 02:41:40.616"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 02:41:40.617" level="INFO">200</msg>
<status status="PASS" starttime="20210322 02:41:40.616" endtime="20210322 02:41:40.617"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:41:40.617" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:41:40.617" endtime="20210322 02:41:40.617"></status>
</kw>
<status status="PASS" starttime="20210322 02:41:40.012" endtime="20210322 02:41:40.617"></status>
</kw>
<kw name="validar status da reivindicação" library="asserts">
<arguments>
<arg>confirmed</arg>
</arguments>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["status"]}</arg>
<arg>${claim_status}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:41:40.619" endtime="20210322 02:41:40.619"></status>
</kw>
<status status="PASS" starttime="20210322 02:41:40.617" endtime="20210322 02:41:40.619"></status>
</kw>
<kw name="receber notificação de reivindicação" library="pix_dict_receive_claim_notification">
<arguments>
<arg>${phone_pix}</arg>
<arg>${account_number_owner}</arg>
<arg>${national_registration_owner}</arg>
<arg>${holder_name_owner}</arg>
<arg>${claim_external_key}</arg>
<arg>CONFIRMED</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 02:41:40.620" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 02:41:40.619" endtime="20210322 02:41:40.622"></status>
</kw>
<status status="PASS" starttime="20210322 02:41:40.619" endtime="20210322 02:41:40.622"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:41:40.622" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 02:41:40.622" endtime="20210322 02:41:40.622"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"data": {</arg>
<arg>"claim": {</arg>
<arg>"type": "OWNERSHIP",</arg>
<arg>"key": "${key_pix}",</arg>
<arg>"key_type": "PHONE",</arg>
<arg>"claimer_account": {</arg>
<arg>"participant": "19468242",</arg>
<arg>"branch": "0001",</arg>
<arg>"account_number": "${account_number}",</arg>
<arg>"account_type": "CACC"</arg>
<arg>},</arg>
<arg>"claimer": {</arg>
<arg>"type": "NATURAL_PERSON",</arg>
<arg>"tax_id_number": "${claimer_tax_id}",</arg>
<arg>"name": "${claimer_name}"</arg>
<arg>},</arg>
<arg>"donor_participant": "19468242",</arg>
<arg>"id": "${claim_external_key}",</arg>
<arg>"status": "${claim_notification_status}",</arg>
<arg>"resolution_period_end": "2020-10-18T10:00:00.000Z",</arg>
<arg>"completion_period_end": "2020-10-25T10:00:00.000Z",</arg>
<arg>"last_modified": "2020-10-17T10:00:00.000Z"</arg>
<arg>}</arg>
<arg>}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 02:41:40.622" level="INFO">${body} = { "data": { "claim": { "type": "OWNERSHIP", "key": "+5521981443783", "key_type": "PHONE", "claimer_account": { "participant": "19468242", "branch": "0001", "account_number": "6650448847", "account_typ...</msg>
<status status="PASS" starttime="20210322 02:41:40.622" endtime="20210322 02:41:40.622"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/banking/internal/dict/claims</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:41:40.623" level="INFO">POST Request using : uri=/banking/internal/dict/claims, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "data": { "claim": { "type": "OWNERSHIP", "key": "+5521981443783", "key_type": "PHONE", "claimer_account": { "participant": "19468242", "branch": "0001", "account_number": "6650448847", "account_type": "CACC" }, "claimer": { "type": "NATURAL_PERSON", "tax_id_number": "42681903769", "name": "Holder de teste" }, "donor_participant": "19468242", "id": "6355f170d569495785d26ed3ec9b99b1", "status": "CONFIRMED", "resolution_period_end": "2020-10-18T10:00:00.000Z", "completion_period_end": "2020-10-25T10:00:00.000Z", "last_modified": "2020-10-17T10:00:00.000Z" } } } 
json=None</msg>
<msg timestamp="20210322 02:41:41.246" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:41:40.622" endtime="20210322 02:41:41.246"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 02:41:41.248" level="INFO">200</msg>
<status status="PASS" starttime="20210322 02:41:41.247" endtime="20210322 02:41:41.248"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:41:41.250" level="INFO">8c9849c6f7cac2cc</msg>
<status status="PASS" starttime="20210322 02:41:41.249" endtime="20210322 02:41:41.250"></status>
</kw>
<status status="PASS" starttime="20210322 02:41:40.619" endtime="20210322 02:41:41.250"></status>
</kw>
<kw name="buscar reivindicação de posse" library="pix_dict_get_claims">
<arguments>
<arg>${holder_claimer}</arg>
<arg>${account_claimer}</arg>
<arg>${claim_external_key}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 02:41:41.255" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 02:41:41.253" endtime="20210322 02:41:41.255"></status>
</kw>
<status status="PASS" starttime="20210322 02:41:41.253" endtime="20210322 02:41:41.255"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/claims/${claim_external_key}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:41:41.257" level="INFO">GET Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/3969ed9bba3b451e9c788b1d9ed97ff2/accounts/b237352a49cb41a7aa5885b4cab9b5c5/claims/6355f170d569495785d26ed3ec9b99b1, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 02:41:41.902" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:41:41.256" endtime="20210322 02:41:41.902"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:41:41.905" level="INFO">{'id': '6355f170d569495785d26ed3ec9b99b1', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'created_at': '2021-03-22T02:41:25.701', 'updated_at': '2021-03-22T02:41:42.110', 'type': 'OWNERSHIP', 'status': 'waiting_entry_ownership_confirm_to_complete', 'confirm_reason': 'USER_REQUESTED', 'key': {'value': '+5521981443783', 'type': 'phone'}, 'claimer': {'name': 'Holder de teste', 'national_registration': '73296548092', 'type': 'individual', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': '3969ed9bba3b451e9c788b1d9ed97ff2', 'account': {'digital_account_id': 'b237352a49cb41a7aa5885b4cab9b5c5', 'routing_number': '001', 'number': '4964985497', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}}, 'donor': {'name': 'Holder de teste', 'national_registration': '42681903769', 'type': 'individual', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': 'f6a301af8ce64b40b8171f029a710e56', 'account': {'digital_account_id': '0f29596e5bcc42728d4176da2a45d0f1', 'routing_number': '001', 'number': '6650448847', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}}, 'completion_period_end': '2021-03-22T05:41:00.000', 'resolution_period_end': '2021-03-29T05:41:25.000', 'resource': 'pix.claim'}</msg>
<status status="PASS" starttime="20210322 02:41:41.904" endtime="20210322 02:41:41.906"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:41:41.908" level="INFO">f1725458c1623ba0</msg>
<status status="PASS" starttime="20210322 02:41:41.907" endtime="20210322 02:41:41.908"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 02:41:41.910" level="INFO">200</msg>
<status status="PASS" starttime="20210322 02:41:41.909" endtime="20210322 02:41:41.911"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:41:41.913" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:41:41.912" endtime="20210322 02:41:41.913"></status>
</kw>
<status status="PASS" starttime="20210322 02:41:41.251" endtime="20210322 02:41:41.914"></status>
</kw>
<kw name="validar status da reivindicação" library="asserts">
<arguments>
<arg>waiting_entry_ownership_confirm_to_complete</arg>
</arguments>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["status"]}</arg>
<arg>${claim_status}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:41:41.916" endtime="20210322 02:41:41.917"></status>
</kw>
<status status="PASS" starttime="20210322 02:41:41.915" endtime="20210322 02:41:41.917"></status>
</kw>
<kw name="buscar verification code" library="pix_dict_verification_code">
<arguments>
<arg>${holder_claimer}</arg>
<arg>${account_claimer}</arg>
<arg>${entry_claimer}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 02:41:41.920" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 02:41:41.920" endtime="20210322 02:41:41.922"></status>
</kw>
<status status="PASS" starttime="20210322 02:41:41.919" endtime="20210322 02:41:41.922"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/admin/internal_operation/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries/${entry_external_key}/code</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:41:41.923" level="INFO">GET Request using : uri=/admin/internal_operation/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/3969ed9bba3b451e9c788b1d9ed97ff2/accounts/b237352a49cb41a7aa5885b4cab9b5c5/entries/52384085fe1e4ffeb21af5e36ca85a28/code, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 02:41:42.586" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:41:41.923" endtime="20210322 02:41:42.586"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:41:42.589" level="INFO">{'code': '3817'}</msg>
<status status="PASS" starttime="20210322 02:41:42.588" endtime="20210322 02:41:42.589"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:41:42.590" level="INFO">943368f5fa62cee3</msg>
<status status="PASS" starttime="20210322 02:41:42.590" endtime="20210322 02:41:42.590"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 02:41:42.591" level="INFO">200</msg>
<status status="PASS" starttime="20210322 02:41:42.591" endtime="20210322 02:41:42.592"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:41:42.593" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:41:42.592" endtime="20210322 02:41:42.593"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["code"]}</arg>
</arguments>
<assign>
<var>${verification_code}</var>
</assign>
<msg timestamp="20210322 02:41:42.594" level="INFO">${verification_code} = 3817</msg>
<status status="PASS" starttime="20210322 02:41:42.593" endtime="20210322 02:41:42.594"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${verification_code}</arg>
</arguments>
<msg timestamp="20210322 02:41:42.595" level="INFO">${verification_code} = 3817</msg>
<status status="PASS" starttime="20210322 02:41:42.595" endtime="20210322 02:41:42.595"></status>
</kw>
<status status="PASS" starttime="20210322 02:41:41.917" endtime="20210322 02:41:42.595"></status>
</kw>
<kw name="confirmar propriedade da chave pix" library="pix_dict_confirm_propriety">
<arguments>
<arg>${verification_code}</arg>
<arg>${holder_claimer}</arg>
<arg>${account_claimer}</arg>
<arg>${entry_claimer}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 02:41:42.598" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 02:41:42.598" endtime="20210322 02:41:42.599"></status>
</kw>
<status status="PASS" starttime="20210322 02:41:42.597" endtime="20210322 02:41:42.599"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:41:42.600" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 02:41:42.599" endtime="20210322 02:41:42.600"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"code": "${verification_code}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 02:41:42.600" level="INFO">${body} = { "code": "3817" }</msg>
<status status="PASS" starttime="20210322 02:41:42.600" endtime="20210322 02:41:42.600"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries/${entry_external_key}/ownership</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:41:42.602" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/3969ed9bba3b451e9c788b1d9ed97ff2/accounts/b237352a49cb41a7aa5885b4cab9b5c5/entries/52384085fe1e4ffeb21af5e36ca85a28/ownership, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "code": "3817" } 
json=None</msg>
<msg timestamp="20210322 02:41:44.282" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:41:42.601" endtime="20210322 02:41:44.282"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:41:44.285" level="INFO">{'id': '52384085fe1e4ffeb21af5e36ca85a28', 'status': 'active', 'created_at': '2021-03-22T02:41:21.954', 'updated_at': '2021-03-22T02:41:45.132', 'key': {'value': '+5521981443783', 'type': 'phone'}, 'account': {'id': 'b237352a49cb41a7aa5885b4cab9b5c5', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': '3969ed9bba3b451e9c788b1d9ed97ff2', 'owner': {'name': 'Holder de teste', 'national_registration': '73296548092', 'type': 'individual'}, 'routing_number': '001', 'number': '4964985497', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}, 'resource': 'pix.entry'}</msg>
<status status="PASS" starttime="20210322 02:41:44.283" endtime="20210322 02:41:44.286"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:41:44.288" level="INFO">b5ce542b6f6e6291</msg>
<status status="PASS" starttime="20210322 02:41:44.287" endtime="20210322 02:41:44.289"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 02:41:44.291" level="INFO">201</msg>
<status status="PASS" starttime="20210322 02:41:44.290" endtime="20210322 02:41:44.291"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:41:44.293" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:41:44.292" endtime="20210322 02:41:44.294"></status>
</kw>
<status status="PASS" starttime="20210322 02:41:42.596" endtime="20210322 02:41:44.294"></status>
</kw>
<kw name="buscar reivindicação de posse" library="pix_dict_get_claims">
<arguments>
<arg>${holder_claimer}</arg>
<arg>${account_claimer}</arg>
<arg>${claim_external_key}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 02:41:44.299" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 02:41:44.298" endtime="20210322 02:41:44.301"></status>
</kw>
<status status="PASS" starttime="20210322 02:41:44.297" endtime="20210322 02:41:44.302"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/claims/${claim_external_key}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:41:44.304" level="INFO">GET Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/3969ed9bba3b451e9c788b1d9ed97ff2/accounts/b237352a49cb41a7aa5885b4cab9b5c5/claims/6355f170d569495785d26ed3ec9b99b1, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 02:41:44.906" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:41:44.303" endtime="20210322 02:41:44.906"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:41:44.907" level="INFO">{'id': '6355f170d569495785d26ed3ec9b99b1', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'created_at': '2021-03-22T02:41:25.701', 'updated_at': '2021-03-22T02:41:45.132', 'type': 'OWNERSHIP', 'status': 'completed', 'confirm_reason': 'USER_REQUESTED', 'key': {'value': '+5521981443783', 'type': 'phone'}, 'claimer': {'name': 'Holder de teste', 'national_registration': '73296548092', 'type': 'individual', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': '3969ed9bba3b451e9c788b1d9ed97ff2', 'account': {'digital_account_id': 'b237352a49cb41a7aa5885b4cab9b5c5', 'routing_number': '001', 'number': '4964985497', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}}, 'donor': {'name': 'Holder de teste', 'national_registration': '42681903769', 'type': 'individual', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': 'f6a301af8ce64b40b8171f029a710e56', 'account': {'digital_account_id': '0f29596e5bcc42728d4176da2a45d0f1', 'routing_number': '001', 'number': '6650448847', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}}, 'completion_period_end': '2021-03-22T05:41:00.000', 'resolution_period_end': '2021-03-29T05:41:25.000', 'resource': 'pix.claim'}</msg>
<status status="PASS" starttime="20210322 02:41:44.906" endtime="20210322 02:41:44.907"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:41:44.907" level="INFO">9a9199f8cb24613f</msg>
<status status="PASS" starttime="20210322 02:41:44.907" endtime="20210322 02:41:44.907"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 02:41:44.908" level="INFO">200</msg>
<status status="PASS" starttime="20210322 02:41:44.907" endtime="20210322 02:41:44.908"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:41:44.908" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:41:44.908" endtime="20210322 02:41:44.908"></status>
</kw>
<status status="PASS" starttime="20210322 02:41:44.295" endtime="20210322 02:41:44.908"></status>
</kw>
<kw name="validar status da reivindicação" library="asserts">
<arguments>
<arg>completed</arg>
</arguments>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["status"]}</arg>
<arg>${claim_status}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:41:44.909" endtime="20210322 02:41:44.909"></status>
</kw>
<status status="PASS" starttime="20210322 02:41:44.908" endtime="20210322 02:41:44.909"></status>
</kw>
<doc>Fluxo Básico</doc>
<tags>
<tag>regression_test</tag>
<tag>smoke_test</tag>
</tags>
<status status="PASS" starttime="20210322 02:41:10.849" endtime="20210322 02:41:44.909" critical="yes"></status>
</test>
<test id="s1-s2-s2-t2" name="Cenário: Criar Reivindicação de Posse para chave do tipo email">
<kw name="Email" library="FakerLibrary">
<assign>
<var>${email_pix}</var>
</assign>
<msg timestamp="20210322 02:41:44.910" level="INFO">${email_pix} = pedro-lucasda-cunha@silva.br</msg>
<status status="PASS" starttime="20210322 02:41:44.910" endtime="20210322 02:41:44.910"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${email_pix}</arg>
</arguments>
<msg timestamp="20210322 02:41:44.911" level="INFO">${email_pix} = pedro-lucasda-cunha@silva.br</msg>
<status status="PASS" starttime="20210322 02:41:44.910" endtime="20210322 02:41:44.911"></status>
</kw>
<kw name="criar holder individual ativo" library="accreditation_create_holder_active">
<kw name="conectar accreditation" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accreditation</arg>
<arg>url=${accreditation_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 02:41:44.912" level="INFO">Creating Session using : alias=accreditation, url=https://banking-accreditation-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 02:41:44.912" endtime="20210322 02:41:44.912"></status>
</kw>
<status status="PASS" starttime="20210322 02:41:44.912" endtime="20210322 02:41:44.912"></status>
</kw>
<kw name="Cpf" library="FakerLibrary">
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 02:41:44.912" level="INFO">${national_registration} = 328.976.054-56</msg>
<status status="PASS" starttime="20210322 02:41:44.912" endtime="20210322 02:41:44.912"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${national_registration}</arg>
<arg>.</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 02:41:44.912" level="INFO">${national_registration} = 328976054-56</msg>
<status status="PASS" starttime="20210322 02:41:44.912" endtime="20210322 02:41:44.913"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${national_registration}</arg>
<arg>-</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 02:41:44.913" level="INFO">${national_registration} = 32897605456</msg>
<status status="PASS" starttime="20210322 02:41:44.913" endtime="20210322 02:41:44.913"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${national_registration}</arg>
</arguments>
<msg timestamp="20210322 02:41:44.913" level="INFO">${national_registration} = 32897605456</msg>
<status status="PASS" starttime="20210322 02:41:44.913" endtime="20210322 02:41:44.913"></status>
</kw>
<kw name="Rg" library="FakerLibrary">
<doc>Brazilian RG, return plain numbers.
Check:  https://www.ngmatematica.com/2014/02/como-determinar-o-digito-verificador-do.html</doc>
<assign>
<var>${identity_card}</var>
</assign>
<msg timestamp="20210322 02:41:44.914" level="INFO">${identity_card} = 364208156</msg>
<status status="PASS" starttime="20210322 02:41:44.913" endtime="20210322 02:41:44.914"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${identity_card}</arg>
</arguments>
<msg timestamp="20210322 02:41:44.914" level="INFO">${identity_card} = 364208156</msg>
<status status="PASS" starttime="20210322 02:41:44.914" endtime="20210322 02:41:44.914"></status>
</kw>
<kw name="criar holder individual" library="accreditation_post_holder_individual">
<arguments>
<arg>holder_type=individual</arg>
<arg>holder_name=${holder_name}</arg>
<arg>email=${email}</arg>
<arg>national_registration=${national_registration}</arg>
<arg>revenue=${revenue}</arg>
<arg>birthday=${birthday}</arg>
<arg>mothers_name=${mothers_name}</arg>
<arg>identity_card=${identity_card}</arg>
<arg>pep=false</arg>
<arg>cbo=${cbo}</arg>
</arguments>
<kw name="conectar accreditation" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accreditation</arg>
<arg>url=${accreditation_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 02:41:44.916" level="INFO">Creating Session using : alias=accreditation, url=https://banking-accreditation-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 02:41:44.915" endtime="20210322 02:41:44.916"></status>
</kw>
<status status="PASS" starttime="20210322 02:41:44.915" endtime="20210322 02:41:44.916"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_type}</arg>
</arguments>
<msg timestamp="20210322 02:41:44.917" level="INFO">${holder_type} = individual</msg>
<status status="PASS" starttime="20210322 02:41:44.917" endtime="20210322 02:41:44.917"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_name}</arg>
</arguments>
<msg timestamp="20210322 02:41:44.917" level="INFO">${holder_name} = Holder de teste</msg>
<status status="PASS" starttime="20210322 02:41:44.917" endtime="20210322 02:41:44.917"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:41:44.917" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 02:41:44.917" endtime="20210322 02:41:44.917"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "${holder_type}",</arg>
<arg>"name": "${holder_name}",</arg>
<arg>"email": "${email}",</arg>
<arg>"national_registration": "${national_registration}",</arg>
<arg>"revenue": ${revenue},</arg>
<arg>"birthday": "${birthday}",</arg>
<arg>"mothers_name": "${mothers_name}",</arg>
<arg>"identity_card": "${identity_card}",</arg>
<arg>"pep": false,</arg>
<arg>"cbo": ${cbo}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 02:41:44.918" level="INFO">${body} = { "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "32897605456", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder",...</msg>
<status status="PASS" starttime="20210322 02:41:44.917" endtime="20210322 02:41:44.918"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:41:44.919" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "32897605456", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder", "identity_card": "364208156", "pep": false, "cbo": 821450 } 
json=None</msg>
<msg timestamp="20210322 02:41:45.619" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:41:44.918" endtime="20210322 02:41:45.619"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:41:45.623" level="INFO">{'id': '7109199355cc4f818b322b68c216d02e', 'name': 'Holder de teste', 'revenue': 5500.0, 'email': 'teste@teste.com.br', 'status': 'waiting_info_and_documents', 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'marketplace_name': 'Marketplace de Teste', 'created_at': '2021-03-22T02:41:46.425502', 'updated_at': '2021-03-22T02:41:46.425504', 'type': 'individual', 'national_registration': '32897605456', 'birthday': '1988-04-23', 'mothers_name': 'Mãe do Holder', 'identity_card': '364208156', 'pep': False, 'cbo': '821450', '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/7109199355cc4f818b322b68c216d02e', 'type': 'GET'}, 'phones': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/7109199355cc4f818b322b68c216d02e/phones', 'type': 'GET'}, 'addresses': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/7109199355cc4f818b322b68c216d02e/addresses', 'type': 'GET'}, 'documents': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/7109199355cc4f818b322b68c216d02e/documents', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 02:41:45.621" endtime="20210322 02:41:45.623"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:41:45.625" level="INFO">24e854c26bc1c6f2</msg>
<status status="PASS" starttime="20210322 02:41:45.624" endtime="20210322 02:41:45.625"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${body}</arg>
</arguments>
<msg timestamp="20210322 02:41:45.627" level="INFO">{ "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "32897605456", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder", "identity_card": "364208156", "pep": false, "cbo": 821450 }</msg>
<status status="PASS" starttime="20210322 02:41:45.626" endtime="20210322 02:41:45.628"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:41:45.631" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:41:45.629" endtime="20210322 02:41:45.631"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${holder_external_key}</var>
</assign>
<msg timestamp="20210322 02:41:45.634" level="INFO">${holder_external_key} = 7109199355cc4f818b322b68c216d02e</msg>
<status status="PASS" starttime="20210322 02:41:45.632" endtime="20210322 02:41:45.634"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_external_key}</arg>
</arguments>
<msg timestamp="20210322 02:41:45.635" level="INFO">${holder_external_key} = 7109199355cc4f818b322b68c216d02e</msg>
<status status="PASS" starttime="20210322 02:41:45.635" endtime="20210322 02:41:45.635"></status>
</kw>
<status status="PASS" starttime="20210322 02:41:44.914" endtime="20210322 02:41:45.636"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_name}</arg>
</arguments>
<msg timestamp="20210322 02:41:45.637" level="INFO">${holder_name} = Holder de teste</msg>
<status status="PASS" starttime="20210322 02:41:45.636" endtime="20210322 02:41:45.637"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 02:41:45.639" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:41:45.638" endtime="20210322 02:41:45.639"></status>
</kw>
<kw name="criar holder phone" library="accreditation_post_holder_phone">
<arguments>
<arg>21</arg>
<arg>51</arg>
<arg>996221236</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:41:45.641" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 02:41:45.640" endtime="20210322 02:41:45.641"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"area_code": "${phone_area_code}",</arg>
<arg>"country_code": "${phone_country_code}",</arg>
<arg>"number": "${phone_number}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 02:41:45.643" level="INFO">${body} = { "area_code": "21", "country_code": "51", "number": "996221236" }</msg>
<status status="PASS" starttime="20210322 02:41:45.642" endtime="20210322 02:41:45.643"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/phones</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:41:45.644" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/7109199355cc4f818b322b68c216d02e/phones, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "area_code": "21", "country_code": "51", "number": "996221236" } 
json=None</msg>
<msg timestamp="20210322 02:41:45.886" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:41:45.643" endtime="20210322 02:41:45.886"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:41:45.889" level="INFO">{'id': '26cb594b1ce34a2eb263196d9e6a35ef', 'area_code': '21', 'country_code': '51', 'number': '996221236', 'main': True, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/7109199355cc4f818b322b68c216d02e/phones/26cb594b1ce34a2eb263196d9e6a35ef', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/7109199355cc4f818b322b68c216d02e', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 02:41:45.887" endtime="20210322 02:41:45.889"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:41:45.891" level="INFO">7f7e61c03ceb9ff3</msg>
<status status="PASS" starttime="20210322 02:41:45.890" endtime="20210322 02:41:45.892"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:41:45.894" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:41:45.893" endtime="20210322 02:41:45.894"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${phone_external_key}</var>
</assign>
<msg timestamp="20210322 02:41:45.896" level="INFO">${phone_external_key} = 26cb594b1ce34a2eb263196d9e6a35ef</msg>
<status status="PASS" starttime="20210322 02:41:45.895" endtime="20210322 02:41:45.896"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${phone_external_key}</arg>
</arguments>
<msg timestamp="20210322 02:41:45.897" level="INFO">${phone_external_key} = 26cb594b1ce34a2eb263196d9e6a35ef</msg>
<status status="PASS" starttime="20210322 02:41:45.897" endtime="20210322 02:41:45.898"></status>
</kw>
<status status="PASS" starttime="20210322 02:41:45.639" endtime="20210322 02:41:45.898"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 02:41:45.899" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:41:45.898" endtime="20210322 02:41:45.899"></status>
</kw>
<kw name="criar holder address" library="accreditation_post_holder_address">
<arguments>
<arg>Rio de Janeiro</arg>
<arg>Rio de Janeiro</arg>
<arg>Brasil</arg>
<arg>Bairro de Testes</arg>
<arg>Rua de Testes</arg>
<arg>90</arg>
<arg>apto 200</arg>
<arg>21550987</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:41:45.901" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 02:41:45.901" endtime="20210322 02:41:45.901"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"city": "${city}",</arg>
<arg>"state": "${state}",</arg>
<arg>"country": "${country}",</arg>
<arg>"neighborhood": "${neighborhood}",</arg>
<arg>"street": "${street}",</arg>
<arg>"number": "${number}",</arg>
<arg>"complement": "${complement}",</arg>
<arg>"postal_code": "${postal_code}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 02:41:45.903" level="INFO">${body} = { "city": "Rio de Janeiro", "state": "Rio de Janeiro", "country": "Brasil", "neighborhood": "Bairro de Testes", "street": "Rua de Testes", "number": "90", "complement": "apto 200", "postal_code": "215...</msg>
<status status="PASS" starttime="20210322 02:41:45.902" endtime="20210322 02:41:45.903"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/addresses</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:41:45.905" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/7109199355cc4f818b322b68c216d02e/addresses, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "city": "Rio de Janeiro", "state": "Rio de Janeiro", "country": "Brasil", "neighborhood": "Bairro de Testes", "street": "Rua de Testes", "number": "90", "complement": "apto 200", "postal_code": "21550987" } 
json=None</msg>
<msg timestamp="20210322 02:41:46.127" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:41:45.904" endtime="20210322 02:41:46.127"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:41:46.128" level="INFO">{'id': 'b1e9af97ac95406bbe0e56a219cb7c0a', 'street': 'Rua de Testes', 'number': '90', 'city': 'Rio de Janeiro', 'complement': 'apto 200', 'state': 'Rio de Janeiro', 'neighborhood': 'Bairro de Testes', 'postal_code': '21550987', 'country': 'Brasil', 'main': True, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/7109199355cc4f818b322b68c216d02e/addresses/b1e9af97ac95406bbe0e56a219cb7c0a', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/7109199355cc4f818b322b68c216d02e', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 02:41:46.127" endtime="20210322 02:41:46.128"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:41:46.128" level="INFO">031260464fee1f1d</msg>
<status status="PASS" starttime="20210322 02:41:46.128" endtime="20210322 02:41:46.128"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:41:46.129" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:41:46.129" endtime="20210322 02:41:46.129"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${address_external_key}</var>
</assign>
<msg timestamp="20210322 02:41:46.129" level="INFO">${address_external_key} = b1e9af97ac95406bbe0e56a219cb7c0a</msg>
<status status="PASS" starttime="20210322 02:41:46.129" endtime="20210322 02:41:46.129"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${address_external_key}</arg>
</arguments>
<msg timestamp="20210322 02:41:46.130" level="INFO">${address_external_key} = b1e9af97ac95406bbe0e56a219cb7c0a</msg>
<status status="PASS" starttime="20210322 02:41:46.130" endtime="20210322 02:41:46.130"></status>
</kw>
<status status="PASS" starttime="20210322 02:41:45.900" endtime="20210322 02:41:46.130"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 02:41:46.131" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:41:46.130" endtime="20210322 02:41:46.131"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>SELFIE</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:41:46.132" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 02:41:46.132" endtime="20210322 02:41:46.132"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 02:41:46.132" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 02:41:46.133" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 02:41:46.132" endtime="20210322 02:41:46.133"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:41:46.134" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/7109199355cc4f818b322b68c216d02e/documents?type=SELFIE, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 02:41:46.462" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:41:46.134" endtime="20210322 02:41:46.462"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:41:46.464" level="INFO">{'id': '72e58ff2ea694a1d80ad630549c45d71', 'document_type': 'selfie', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/7109199355cc4f818b322b68c216d02e/documents/72e58ff2ea694a1d80ad630549c45d71', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/7109199355cc4f818b322b68c216d02e', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/7109199355cc4f818b322b68c216d02e/documents/72e58ff2ea694a1d80ad630549c45d71/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 02:41:46.463" endtime="20210322 02:41:46.464"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:41:46.465" level="INFO">6687f43ae1e8e7b3</msg>
<status status="PASS" starttime="20210322 02:41:46.465" endtime="20210322 02:41:46.466"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:41:46.467" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:41:46.466" endtime="20210322 02:41:46.467"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 02:41:46.469" level="INFO">${document_external_key} = 72e58ff2ea694a1d80ad630549c45d71</msg>
<status status="PASS" starttime="20210322 02:41:46.468" endtime="20210322 02:41:46.469"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 02:41:46.470" level="INFO">${document_external_key} = 72e58ff2ea694a1d80ad630549c45d71</msg>
<status status="PASS" starttime="20210322 02:41:46.469" endtime="20210322 02:41:46.470"></status>
</kw>
<status status="PASS" starttime="20210322 02:41:46.131" endtime="20210322 02:41:46.470"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 02:41:46.471" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:41:46.471" endtime="20210322 02:41:46.471"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>RG_FRENTE</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:41:46.473" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 02:41:46.472" endtime="20210322 02:41:46.473"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 02:41:46.474" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 02:41:46.475" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 02:41:46.473" endtime="20210322 02:41:46.475"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:41:46.476" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/7109199355cc4f818b322b68c216d02e/documents?type=RG_FRENTE, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 02:41:46.796" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:41:46.476" endtime="20210322 02:41:46.796"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:41:46.797" level="INFO">{'id': 'b50522b6b63d4502a4377e234fea6c30', 'document_type': 'rg_frente', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/7109199355cc4f818b322b68c216d02e/documents/b50522b6b63d4502a4377e234fea6c30', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/7109199355cc4f818b322b68c216d02e', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/7109199355cc4f818b322b68c216d02e/documents/b50522b6b63d4502a4377e234fea6c30/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 02:41:46.797" endtime="20210322 02:41:46.798"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:41:46.799" level="INFO">3ba061d530866a05</msg>
<status status="PASS" starttime="20210322 02:41:46.798" endtime="20210322 02:41:46.799"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:41:46.800" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:41:46.799" endtime="20210322 02:41:46.800"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 02:41:46.801" level="INFO">${document_external_key} = b50522b6b63d4502a4377e234fea6c30</msg>
<status status="PASS" starttime="20210322 02:41:46.800" endtime="20210322 02:41:46.801"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 02:41:46.802" level="INFO">${document_external_key} = b50522b6b63d4502a4377e234fea6c30</msg>
<status status="PASS" starttime="20210322 02:41:46.802" endtime="20210322 02:41:46.802"></status>
</kw>
<status status="PASS" starttime="20210322 02:41:46.472" endtime="20210322 02:41:46.803"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 02:41:46.804" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:41:46.803" endtime="20210322 02:41:46.804"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>RG_VERSO</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:41:46.805" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 02:41:46.805" endtime="20210322 02:41:46.805"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 02:41:46.806" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 02:41:46.808" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 02:41:46.805" endtime="20210322 02:41:46.808"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:41:46.809" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/7109199355cc4f818b322b68c216d02e/documents?type=RG_VERSO, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 02:41:47.068" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:41:46.808" endtime="20210322 02:41:47.069"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:41:47.071" level="INFO">{'id': '5f3cee413cd2425795fe1b0ec70f0c95', 'document_type': 'rg_verso', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/7109199355cc4f818b322b68c216d02e/documents/5f3cee413cd2425795fe1b0ec70f0c95', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/7109199355cc4f818b322b68c216d02e', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/7109199355cc4f818b322b68c216d02e/documents/5f3cee413cd2425795fe1b0ec70f0c95/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 02:41:47.070" endtime="20210322 02:41:47.071"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:41:47.073" level="INFO">02e8f1de48551ee7</msg>
<status status="PASS" starttime="20210322 02:41:47.072" endtime="20210322 02:41:47.073"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:41:47.074" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:41:47.073" endtime="20210322 02:41:47.074"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 02:41:47.077" level="INFO">${document_external_key} = 5f3cee413cd2425795fe1b0ec70f0c95</msg>
<status status="PASS" starttime="20210322 02:41:47.075" endtime="20210322 02:41:47.077"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 02:41:47.077" level="INFO">${document_external_key} = 5f3cee413cd2425795fe1b0ec70f0c95</msg>
<status status="PASS" starttime="20210322 02:41:47.077" endtime="20210322 02:41:47.077"></status>
</kw>
<status status="PASS" starttime="20210322 02:41:46.805" endtime="20210322 02:41:47.078"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 02:41:47.079" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:41:47.078" endtime="20210322 02:41:47.079"></status>
</kw>
<kw name="solicitar aprovação do holder" library="accreditation_request_approval">
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:41:47.080" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 02:41:47.080" endtime="20210322 02:41:47.080"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/approval</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:41:47.081" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/7109199355cc4f818b322b68c216d02e/approval, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data=None 
json=None</msg>
<msg timestamp="20210322 02:41:47.369" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:41:47.081" endtime="20210322 02:41:47.369"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:41:47.370" level="INFO">{'message': 'Approval request accepted successfully. Processing analysis'}</msg>
<status status="PASS" starttime="20210322 02:41:47.370" endtime="20210322 02:41:47.371"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:41:47.372" level="INFO">cbadc80ff02e3196</msg>
<status status="PASS" starttime="20210322 02:41:47.371" endtime="20210322 02:41:47.372"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:41:47.374" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:41:47.373" endtime="20210322 02:41:47.374"></status>
</kw>
<status status="PASS" starttime="20210322 02:41:47.079" endtime="20210322 02:41:47.374"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 02:41:47.375" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:41:47.374" endtime="20210322 02:41:47.375"></status>
</kw>
<kw name="recebendo notificação de aprovação" library="accreditation_risk_notification">
<kw name="Uuid 4" library="FakerLibrary">
<doc>Generates a random UUID4 string.
:param cast_to: Specify what type the UUID should be cast to. Default is `str`
:type cast_to: callable</doc>
<assign>
<var>${assessment_id}</var>
</assign>
<msg timestamp="20210322 02:41:47.376" level="INFO">${assessment_id} = 138715fc-c8f0-484f-9303-9f6807e83ba8</msg>
<status status="PASS" starttime="20210322 02:41:47.376" endtime="20210322 02:41:47.376"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>year</arg>
</arguments>
<assign>
<var>${year}</var>
</assign>
<msg timestamp="20210322 02:41:47.377" level="INFO">${year} = 2021</msg>
<status status="PASS" starttime="20210322 02:41:47.376" endtime="20210322 02:41:47.377"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>month</arg>
</arguments>
<assign>
<var>${month}</var>
</assign>
<msg timestamp="20210322 02:41:47.377" level="INFO">${month} = 03</msg>
<status status="PASS" starttime="20210322 02:41:47.377" endtime="20210322 02:41:47.378"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>day</arg>
</arguments>
<assign>
<var>${day}</var>
</assign>
<msg timestamp="20210322 02:41:47.378" level="INFO">${day} = 22</msg>
<status status="PASS" starttime="20210322 02:41:47.378" endtime="20210322 02:41:47.378"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:41:47.379" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 02:41:47.379" endtime="20210322 02:41:47.379"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "risk.assessment.result",</arg>
<arg>"resource": "business.holder",</arg>
<arg>"created_at": "${year}-${month}-${day} 15:28:56.747Z",</arg>
<arg>"marketplace_id": "${marketplace_external_key}",</arg>
<arg>"object": {</arg>
<arg>"result": "APPROVED",</arg>
<arg>"holder_id": "${holder_external_key}",</arg>
<arg>"applicant_id": "${application_external_key}",</arg>
<arg>"assessment_id": "${assessment_id}"</arg>
<arg>}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 02:41:47.380" level="INFO">${body} = { "type": "risk.assessment.result", "resource": "business.holder", "created_at": "2021-03-22 15:28:56.747Z", "marketplace_id": "f71a8951368a4cc085cf7875ff44e61c", "object": { "result": "APPROVED", "ho...</msg>
<status status="PASS" starttime="20210322 02:41:47.379" endtime="20210322 02:41:47.380"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/admin/internal_operation/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/registration/approval</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:41:47.381" level="INFO">POST Request using : uri=/admin/internal_operation/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/7109199355cc4f818b322b68c216d02e/registration/approval, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "risk.assessment.result", "resource": "business.holder", "created_at": "2021-03-22 15:28:56.747Z", "marketplace_id": "f71a8951368a4cc085cf7875ff44e61c", "object": { "result": "APPROVED", "holder_id": "7109199355cc4f818b322b68c216d02e", "applicant_id": "bcc25a6751c14b52af1340d40dba78c5", "assessment_id": "138715fc-c8f0-484f-9303-9f6807e83ba8" } } 
json=None</msg>
<msg timestamp="20210322 02:41:47.606" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:41:47.380" endtime="20210322 02:41:47.606"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:41:47.609" level="INFO">{'message': 'Holder approved successfully'}</msg>
<status status="PASS" starttime="20210322 02:41:47.608" endtime="20210322 02:41:47.609"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:41:47.611" level="INFO">a2a3a987d99b2205</msg>
<status status="PASS" starttime="20210322 02:41:47.610" endtime="20210322 02:41:47.611"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:41:47.613" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:41:47.612" endtime="20210322 02:41:47.613"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 02:41:47.614" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:41:47.613" endtime="20210322 02:41:47.614"></status>
</kw>
<status status="PASS" starttime="20210322 02:41:47.375" endtime="20210322 02:41:47.615"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 02:41:47.615" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:41:47.615" endtime="20210322 02:41:47.616"></status>
</kw>
<kw name="buscar account por holder" library="accounts_get_accounts_by_holder">
<kw name="conectar accounts" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accounts</arg>
<arg>url=${account_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 02:41:47.618" level="INFO">Creating Session using : alias=accounts, url=https://banking-accounts-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 02:41:47.618" endtime="20210322 02:41:47.620"></status>
</kw>
<status status="PASS" starttime="20210322 02:41:47.617" endtime="20210322 02:41:47.620"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accounts</arg>
<arg>/marketplaces/${marketplace_external_key}/holders/${holder_external_key}/accounts</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:41:47.621" level="INFO">GET Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/holders/7109199355cc4f818b322b68c216d02e/accounts, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 02:41:48.253" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:41:47.620" endtime="20210322 02:41:48.253"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:41:48.255" level="INFO">{'items': [{'id': 'd34e3be5c75548a8a22f646d3ef31d39', 'holder': '7109199355cc4f818b322b68c216d02e', 'balance': '0.00', 'currency': 'BRL', 'routing_number': '001', 'number': '1357903972', 'status': 'active', 'metadata': {}, 'created_at': '2021-03-22T05:41:48.414121', 'updated_at': '2021-03-22T05:41:48.414121', 'primary': True, 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'uri': '/v2/marketplaces/f71a8951368a4cc085cf7875ff44e61c/accounts/d34e3be5c75548a8a22f646d3ef31d39', 'resource': 'payment_account'}], 'has_more': False, 'limit': 100, 'total_pages': 1, 'page': 1, 'offset': 0, 'total': '1', 'query_count': '1'}</msg>
<status status="PASS" starttime="20210322 02:41:48.254" endtime="20210322 02:41:48.255"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:41:48.256" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:41:48.255" endtime="20210322 02:41:48.256"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["id"]}</arg>
</arguments>
<assign>
<var>${account_external_key}</var>
</assign>
<msg timestamp="20210322 02:41:48.258" level="INFO">${account_external_key} = d34e3be5c75548a8a22f646d3ef31d39</msg>
<status status="PASS" starttime="20210322 02:41:48.257" endtime="20210322 02:41:48.258"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_external_key}</arg>
</arguments>
<msg timestamp="20210322 02:41:48.259" level="INFO">${account_external_key} = d34e3be5c75548a8a22f646d3ef31d39</msg>
<status status="PASS" starttime="20210322 02:41:48.259" endtime="20210322 02:41:48.259"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["number"]}</arg>
</arguments>
<assign>
<var>${account_number}</var>
</assign>
<msg timestamp="20210322 02:41:48.261" level="INFO">${account_number} = 1357903972</msg>
<status status="PASS" starttime="20210322 02:41:48.260" endtime="20210322 02:41:48.261"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_number}</arg>
</arguments>
<msg timestamp="20210322 02:41:48.262" level="INFO">${account_number} = 1357903972</msg>
<status status="PASS" starttime="20210322 02:41:48.262" endtime="20210322 02:41:48.262"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["routing_number"]}</arg>
</arguments>
<assign>
<var>${account_routing_number}</var>
</assign>
<msg timestamp="20210322 02:41:48.264" level="INFO">${account_routing_number} = 001</msg>
<status status="PASS" starttime="20210322 02:41:48.263" endtime="20210322 02:41:48.264"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_routing_number}</arg>
</arguments>
<msg timestamp="20210322 02:41:48.265" level="INFO">${account_routing_number} = 001</msg>
<status status="PASS" starttime="20210322 02:41:48.265" endtime="20210322 02:41:48.265"></status>
</kw>
<status status="PASS" starttime="20210322 02:41:47.616" endtime="20210322 02:41:48.266"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 02:41:48.267" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:41:48.266" endtime="20210322 02:41:48.267"></status>
</kw>
<status status="PASS" starttime="20210322 02:41:44.911" endtime="20210322 02:41:48.267"></status>
</kw>
<kw name="criar chave pix" library="pix_dict_create_entry">
<arguments>
<arg>email</arg>
<arg>${email_pix}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 02:41:48.269" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 02:41:48.268" endtime="20210322 02:41:48.269"></status>
</kw>
<status status="PASS" starttime="20210322 02:41:48.268" endtime="20210322 02:41:48.270"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${type}</arg>
</arguments>
<msg timestamp="20210322 02:41:48.270" level="INFO">${type} = email</msg>
<status status="PASS" starttime="20210322 02:41:48.270" endtime="20210322 02:41:48.270"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210322 02:41:48.271" level="INFO">${value} = pedro-lucasda-cunha@silva.br</msg>
<status status="PASS" starttime="20210322 02:41:48.271" endtime="20210322 02:41:48.271"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:41:48.272" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 02:41:48.272" endtime="20210322 02:41:48.272"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "${type}",</arg>
<arg>"value": "${value}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 02:41:48.273" level="INFO">${body} = { "type": "email", "value": "pedro-lucasda-cunha@silva.br" }</msg>
<status status="PASS" starttime="20210322 02:41:48.272" endtime="20210322 02:41:48.273"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:41:48.274" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/7109199355cc4f818b322b68c216d02e/accounts/d34e3be5c75548a8a22f646d3ef31d39/entries, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "email", "value": "pedro-lucasda-cunha@silva.br" } 
json=None</msg>
<msg timestamp="20210322 02:41:48.916" level="INFO">${response} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20210322 02:41:48.273" endtime="20210322 02:41:48.917"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:41:48.919" level="INFO">{'id': '074058f948d345899db3317e946f7d46', 'status': 'waiting_ownership_verification', 'created_at': '2021-03-22T02:41:49.763', 'updated_at': '2021-03-22T02:41:49.763', 'key': {'value': 'pedro-lucasda-cunha@silva.br', 'type': 'email'}, 'account': {'id': 'd34e3be5c75548a8a22f646d3ef31d39', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': '7109199355cc4f818b322b68c216d02e', 'owner': {'name': 'Holder de teste', 'national_registration': '32897605456', 'type': 'individual'}, 'routing_number': '001', 'number': '1357903972', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}, 'resource': 'pix.entry'}</msg>
<status status="PASS" starttime="20210322 02:41:48.917" endtime="20210322 02:41:48.919"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:41:48.922" level="INFO">809ce3ff2c19b031</msg>
<status status="PASS" starttime="20210322 02:41:48.920" endtime="20210322 02:41:48.923"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 02:41:48.925" level="INFO">202</msg>
<status status="PASS" starttime="20210322 02:41:48.924" endtime="20210322 02:41:48.925"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:41:48.927" level="INFO">${response} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20210322 02:41:48.926" endtime="20210322 02:41:48.927"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${entry_external_key}</var>
</assign>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:41:48.930" endtime="20210322 02:41:48.932"></status>
</kw>
<msg timestamp="20210322 02:41:48.932" level="INFO">${entry_external_key} = 074058f948d345899db3317e946f7d46</msg>
<status status="PASS" starttime="20210322 02:41:48.928" endtime="20210322 02:41:48.933"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${entry_external_key}</arg>
</arguments>
<msg timestamp="20210322 02:41:48.935" level="INFO">${entry_external_key} = 074058f948d345899db3317e946f7d46</msg>
<status status="PASS" starttime="20210322 02:41:48.933" endtime="20210322 02:41:48.935"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["key"]["value"]}</arg>
</arguments>
<assign>
<var>${entry_key_value}</var>
</assign>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["key"]["value"]}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:41:48.938" endtime="20210322 02:41:48.939"></status>
</kw>
<msg timestamp="20210322 02:41:48.939" level="INFO">${entry_key_value} = pedro-lucasda-cunha@silva.br</msg>
<status status="PASS" starttime="20210322 02:41:48.936" endtime="20210322 02:41:48.939"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${entry_key_value}</arg>
</arguments>
<msg timestamp="20210322 02:41:48.941" level="INFO">${entry_key_value} = pedro-lucasda-cunha@silva.br</msg>
<status status="PASS" starttime="20210322 02:41:48.940" endtime="20210322 02:41:48.941"></status>
</kw>
<status status="PASS" starttime="20210322 02:41:48.267" endtime="20210322 02:41:48.941"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${holder_external_key}</arg>
</arguments>
<assign>
<var>${holder_owner}</var>
</assign>
<msg timestamp="20210322 02:41:48.942" level="INFO">${holder_owner} = 7109199355cc4f818b322b68c216d02e</msg>
<status status="PASS" starttime="20210322 02:41:48.942" endtime="20210322 02:41:48.942"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${holder_name}</arg>
</arguments>
<assign>
<var>${holder_name_owner}</var>
</assign>
<msg timestamp="20210322 02:41:48.943" level="INFO">${holder_name_owner} = Holder de teste</msg>
<status status="PASS" starttime="20210322 02:41:48.943" endtime="20210322 02:41:48.943"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${national_registration}</arg>
</arguments>
<assign>
<var>${national_registration_owner}</var>
</assign>
<msg timestamp="20210322 02:41:48.944" level="INFO">${national_registration_owner} = 32897605456</msg>
<status status="PASS" starttime="20210322 02:41:48.944" endtime="20210322 02:41:48.944"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${account_external_key}</arg>
</arguments>
<assign>
<var>${account_owner}</var>
</assign>
<msg timestamp="20210322 02:41:48.945" level="INFO">${account_owner} = d34e3be5c75548a8a22f646d3ef31d39</msg>
<status status="PASS" starttime="20210322 02:41:48.945" endtime="20210322 02:41:48.945"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${account_number}</arg>
</arguments>
<assign>
<var>${account_number_owner}</var>
</assign>
<msg timestamp="20210322 02:41:48.946" level="INFO">${account_number_owner} = 1357903972</msg>
<status status="PASS" starttime="20210322 02:41:48.946" endtime="20210322 02:41:48.947"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${entry_external_key}</arg>
</arguments>
<assign>
<var>${entry_owner}</var>
</assign>
<msg timestamp="20210322 02:41:48.947" level="INFO">${entry_owner} = 074058f948d345899db3317e946f7d46</msg>
<status status="PASS" starttime="20210322 02:41:48.947" endtime="20210322 02:41:48.947"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Holder Owner :: ${holder_owner}</arg>
</arguments>
<msg timestamp="20210322 02:41:48.948" level="INFO">Holder Owner :: 7109199355cc4f818b322b68c216d02e</msg>
<status status="PASS" starttime="20210322 02:41:48.948" endtime="20210322 02:41:48.948"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Account Owner :: ${account_owner}</arg>
</arguments>
<msg timestamp="20210322 02:41:48.949" level="INFO">Account Owner :: d34e3be5c75548a8a22f646d3ef31d39</msg>
<status status="PASS" starttime="20210322 02:41:48.949" endtime="20210322 02:41:48.949"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Account Number Owner :: ${account_number_owner}</arg>
</arguments>
<msg timestamp="20210322 02:41:48.950" level="INFO">Account Number Owner :: 1357903972</msg>
<status status="PASS" starttime="20210322 02:41:48.950" endtime="20210322 02:41:48.950"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>National Registration Holder Owner :: ${national_registration_owner}</arg>
</arguments>
<msg timestamp="20210322 02:41:48.951" level="INFO">National Registration Holder Owner :: 32897605456</msg>
<status status="PASS" starttime="20210322 02:41:48.950" endtime="20210322 02:41:48.951"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Entry Owner :: ${entry_owner}</arg>
</arguments>
<msg timestamp="20210322 02:41:48.952" level="INFO">Entry Owner :: 074058f948d345899db3317e946f7d46</msg>
<status status="PASS" starttime="20210322 02:41:48.951" endtime="20210322 02:41:48.952"></status>
</kw>
<kw name="buscar verification code" library="pix_dict_verification_code">
<arguments>
<arg>${holder_owner}</arg>
<arg>${account_owner}</arg>
<arg>${entry_owner}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 02:41:48.955" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 02:41:48.954" endtime="20210322 02:41:48.956"></status>
</kw>
<status status="PASS" starttime="20210322 02:41:48.954" endtime="20210322 02:41:48.956"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/admin/internal_operation/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries/${entry_external_key}/code</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:41:48.957" level="INFO">GET Request using : uri=/admin/internal_operation/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/7109199355cc4f818b322b68c216d02e/accounts/d34e3be5c75548a8a22f646d3ef31d39/entries/074058f948d345899db3317e946f7d46/code, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 02:41:49.568" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:41:48.956" endtime="20210322 02:41:49.569"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:41:49.570" level="INFO">{'code': '0887'}</msg>
<status status="PASS" starttime="20210322 02:41:49.569" endtime="20210322 02:41:49.572"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:41:49.574" level="INFO">8e7da4c99d5e67ad</msg>
<status status="PASS" starttime="20210322 02:41:49.573" endtime="20210322 02:41:49.574"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 02:41:49.575" level="INFO">200</msg>
<status status="PASS" starttime="20210322 02:41:49.574" endtime="20210322 02:41:49.575"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:41:49.578" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:41:49.576" endtime="20210322 02:41:49.578"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["code"]}</arg>
</arguments>
<assign>
<var>${verification_code}</var>
</assign>
<msg timestamp="20210322 02:41:49.579" level="INFO">${verification_code} = 0887</msg>
<status status="PASS" starttime="20210322 02:41:49.578" endtime="20210322 02:41:49.579"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${verification_code}</arg>
</arguments>
<msg timestamp="20210322 02:41:49.581" level="INFO">${verification_code} = 0887</msg>
<status status="PASS" starttime="20210322 02:41:49.581" endtime="20210322 02:41:49.581"></status>
</kw>
<status status="PASS" starttime="20210322 02:41:48.952" endtime="20210322 02:41:49.581"></status>
</kw>
<kw name="confirmar propriedade da chave pix" library="pix_dict_confirm_propriety">
<arguments>
<arg>${verification_code}</arg>
<arg>${holder_owner}</arg>
<arg>${account_owner}</arg>
<arg>${entry_owner}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 02:41:49.584" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 02:41:49.584" endtime="20210322 02:41:49.585"></status>
</kw>
<status status="PASS" starttime="20210322 02:41:49.584" endtime="20210322 02:41:49.585"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:41:49.586" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 02:41:49.586" endtime="20210322 02:41:49.586"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"code": "${verification_code}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 02:41:49.588" level="INFO">${body} = { "code": "0887" }</msg>
<status status="PASS" starttime="20210322 02:41:49.587" endtime="20210322 02:41:49.588"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries/${entry_external_key}/ownership</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:41:49.589" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/7109199355cc4f818b322b68c216d02e/accounts/d34e3be5c75548a8a22f646d3ef31d39/entries/074058f948d345899db3317e946f7d46/ownership, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "code": "0887" } 
json=None</msg>
<msg timestamp="20210322 02:41:51.224" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:41:49.588" endtime="20210322 02:41:51.225"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:41:51.227" level="INFO">{'id': '074058f948d345899db3317e946f7d46', 'status': 'active', 'created_at': '2021-03-22T02:41:49.763', 'updated_at': '2021-03-22T02:41:52.088', 'key': {'value': 'pedro-lucasda-cunha@silva.br', 'type': 'email'}, 'account': {'id': 'd34e3be5c75548a8a22f646d3ef31d39', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': '7109199355cc4f818b322b68c216d02e', 'owner': {'name': 'Holder de teste', 'national_registration': '32897605456', 'type': 'individual'}, 'routing_number': '001', 'number': '1357903972', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}, 'resource': 'pix.entry'}</msg>
<status status="PASS" starttime="20210322 02:41:51.226" endtime="20210322 02:41:51.227"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:41:51.229" level="INFO">60be15b8bbe35581</msg>
<status status="PASS" starttime="20210322 02:41:51.228" endtime="20210322 02:41:51.229"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 02:41:51.230" level="INFO">201</msg>
<status status="PASS" starttime="20210322 02:41:51.229" endtime="20210322 02:41:51.230"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:41:51.231" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:41:51.231" endtime="20210322 02:41:51.232"></status>
</kw>
<status status="PASS" starttime="20210322 02:41:49.581" endtime="20210322 02:41:51.232"></status>
</kw>
<kw name="validar ativação da chave de endereçamento" library="asserts">
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["status"]}</arg>
<arg>active</arg>
</arguments>
<status status="PASS" starttime="20210322 02:41:51.233" endtime="20210322 02:41:51.234"></status>
</kw>
<status status="PASS" starttime="20210322 02:41:51.232" endtime="20210322 02:41:51.234"></status>
</kw>
<kw name="criar holder individual ativo" library="accreditation_create_holder_active">
<kw name="conectar accreditation" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accreditation</arg>
<arg>url=${accreditation_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 02:41:51.236" level="INFO">Creating Session using : alias=accreditation, url=https://banking-accreditation-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 02:41:51.235" endtime="20210322 02:41:51.237"></status>
</kw>
<status status="PASS" starttime="20210322 02:41:51.235" endtime="20210322 02:41:51.237"></status>
</kw>
<kw name="Cpf" library="FakerLibrary">
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 02:41:51.237" level="INFO">${national_registration} = 470.316.928-22</msg>
<status status="PASS" starttime="20210322 02:41:51.237" endtime="20210322 02:41:51.238"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${national_registration}</arg>
<arg>.</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 02:41:51.238" level="INFO">${national_registration} = 470316928-22</msg>
<status status="PASS" starttime="20210322 02:41:51.238" endtime="20210322 02:41:51.238"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${national_registration}</arg>
<arg>-</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 02:41:51.239" level="INFO">${national_registration} = 47031692822</msg>
<status status="PASS" starttime="20210322 02:41:51.239" endtime="20210322 02:41:51.239"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${national_registration}</arg>
</arguments>
<msg timestamp="20210322 02:41:51.240" level="INFO">${national_registration} = 47031692822</msg>
<status status="PASS" starttime="20210322 02:41:51.240" endtime="20210322 02:41:51.240"></status>
</kw>
<kw name="Rg" library="FakerLibrary">
<doc>Brazilian RG, return plain numbers.
Check:  https://www.ngmatematica.com/2014/02/como-determinar-o-digito-verificador-do.html</doc>
<assign>
<var>${identity_card}</var>
</assign>
<msg timestamp="20210322 02:41:51.241" level="INFO">${identity_card} = 30564287X</msg>
<status status="PASS" starttime="20210322 02:41:51.240" endtime="20210322 02:41:51.241"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${identity_card}</arg>
</arguments>
<msg timestamp="20210322 02:41:51.241" level="INFO">${identity_card} = 30564287X</msg>
<status status="PASS" starttime="20210322 02:41:51.241" endtime="20210322 02:41:51.242"></status>
</kw>
<kw name="criar holder individual" library="accreditation_post_holder_individual">
<arguments>
<arg>holder_type=individual</arg>
<arg>holder_name=${holder_name}</arg>
<arg>email=${email}</arg>
<arg>national_registration=${national_registration}</arg>
<arg>revenue=${revenue}</arg>
<arg>birthday=${birthday}</arg>
<arg>mothers_name=${mothers_name}</arg>
<arg>identity_card=${identity_card}</arg>
<arg>pep=false</arg>
<arg>cbo=${cbo}</arg>
</arguments>
<kw name="conectar accreditation" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accreditation</arg>
<arg>url=${accreditation_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 02:41:51.244" level="INFO">Creating Session using : alias=accreditation, url=https://banking-accreditation-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 02:41:51.243" endtime="20210322 02:41:51.244"></status>
</kw>
<status status="PASS" starttime="20210322 02:41:51.243" endtime="20210322 02:41:51.244"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_type}</arg>
</arguments>
<msg timestamp="20210322 02:41:51.245" level="INFO">${holder_type} = individual</msg>
<status status="PASS" starttime="20210322 02:41:51.244" endtime="20210322 02:41:51.245"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_name}</arg>
</arguments>
<msg timestamp="20210322 02:41:51.245" level="INFO">${holder_name} = Holder de teste</msg>
<status status="PASS" starttime="20210322 02:41:51.245" endtime="20210322 02:41:51.245"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:41:51.246" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 02:41:51.246" endtime="20210322 02:41:51.246"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "${holder_type}",</arg>
<arg>"name": "${holder_name}",</arg>
<arg>"email": "${email}",</arg>
<arg>"national_registration": "${national_registration}",</arg>
<arg>"revenue": ${revenue},</arg>
<arg>"birthday": "${birthday}",</arg>
<arg>"mothers_name": "${mothers_name}",</arg>
<arg>"identity_card": "${identity_card}",</arg>
<arg>"pep": false,</arg>
<arg>"cbo": ${cbo}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 02:41:51.247" level="INFO">${body} = { "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "47031692822", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder",...</msg>
<status status="PASS" starttime="20210322 02:41:51.246" endtime="20210322 02:41:51.247"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:41:51.248" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "47031692822", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder", "identity_card": "30564287X", "pep": false, "cbo": 821450 } 
json=None</msg>
<msg timestamp="20210322 02:41:51.923" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:41:51.248" endtime="20210322 02:41:51.923"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:41:51.926" level="INFO">{'id': 'fc159e7c8c93475cb0a35749537f4bea', 'name': 'Holder de teste', 'revenue': 5500.0, 'email': 'teste@teste.com.br', 'status': 'waiting_info_and_documents', 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'marketplace_name': 'Marketplace de Teste', 'created_at': '2021-03-22T02:41:52.754731', 'updated_at': '2021-03-22T02:41:52.754734', 'type': 'individual', 'national_registration': '47031692822', 'birthday': '1988-04-23', 'mothers_name': 'Mãe do Holder', 'identity_card': '30564287X', 'pep': False, 'cbo': '821450', '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/fc159e7c8c93475cb0a35749537f4bea', 'type': 'GET'}, 'phones': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/fc159e7c8c93475cb0a35749537f4bea/phones', 'type': 'GET'}, 'addresses': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/fc159e7c8c93475cb0a35749537f4bea/addresses', 'type': 'GET'}, 'documents': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/fc159e7c8c93475cb0a35749537f4bea/documents', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 02:41:51.925" endtime="20210322 02:41:51.926"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:41:51.928" level="INFO">c5754eef00cd36ce</msg>
<status status="PASS" starttime="20210322 02:41:51.927" endtime="20210322 02:41:51.929"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${body}</arg>
</arguments>
<msg timestamp="20210322 02:41:51.930" level="INFO">{ "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "47031692822", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder", "identity_card": "30564287X", "pep": false, "cbo": 821450 }</msg>
<status status="PASS" starttime="20210322 02:41:51.929" endtime="20210322 02:41:51.931"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:41:51.933" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:41:51.931" endtime="20210322 02:41:51.933"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${holder_external_key}</var>
</assign>
<msg timestamp="20210322 02:41:51.934" level="INFO">${holder_external_key} = fc159e7c8c93475cb0a35749537f4bea</msg>
<status status="PASS" starttime="20210322 02:41:51.933" endtime="20210322 02:41:51.935"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_external_key}</arg>
</arguments>
<msg timestamp="20210322 02:41:51.937" level="INFO">${holder_external_key} = fc159e7c8c93475cb0a35749537f4bea</msg>
<status status="PASS" starttime="20210322 02:41:51.936" endtime="20210322 02:41:51.937"></status>
</kw>
<status status="PASS" starttime="20210322 02:41:51.242" endtime="20210322 02:41:51.937"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_name}</arg>
</arguments>
<msg timestamp="20210322 02:41:51.938" level="INFO">${holder_name} = Holder de teste</msg>
<status status="PASS" starttime="20210322 02:41:51.937" endtime="20210322 02:41:51.938"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 02:41:51.939" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:41:51.939" endtime="20210322 02:41:51.940"></status>
</kw>
<kw name="criar holder phone" library="accreditation_post_holder_phone">
<arguments>
<arg>21</arg>
<arg>51</arg>
<arg>996221236</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:41:51.942" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 02:41:51.941" endtime="20210322 02:41:51.942"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"area_code": "${phone_area_code}",</arg>
<arg>"country_code": "${phone_country_code}",</arg>
<arg>"number": "${phone_number}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 02:41:51.943" level="INFO">${body} = { "area_code": "21", "country_code": "51", "number": "996221236" }</msg>
<status status="PASS" starttime="20210322 02:41:51.942" endtime="20210322 02:41:51.943"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/phones</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:41:51.944" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/fc159e7c8c93475cb0a35749537f4bea/phones, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "area_code": "21", "country_code": "51", "number": "996221236" } 
json=None</msg>
<msg timestamp="20210322 02:41:52.158" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:41:51.943" endtime="20210322 02:41:52.158"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:41:52.161" level="INFO">{'id': 'f07224826c8245b5bddf7170efa5c074', 'area_code': '21', 'country_code': '51', 'number': '996221236', 'main': True, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/fc159e7c8c93475cb0a35749537f4bea/phones/f07224826c8245b5bddf7170efa5c074', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/fc159e7c8c93475cb0a35749537f4bea', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 02:41:52.159" endtime="20210322 02:41:52.161"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:41:52.163" level="INFO">bfb75f884cf20246</msg>
<status status="PASS" starttime="20210322 02:41:52.162" endtime="20210322 02:41:52.163"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:41:52.165" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:41:52.164" endtime="20210322 02:41:52.165"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${phone_external_key}</var>
</assign>
<msg timestamp="20210322 02:41:52.167" level="INFO">${phone_external_key} = f07224826c8245b5bddf7170efa5c074</msg>
<status status="PASS" starttime="20210322 02:41:52.166" endtime="20210322 02:41:52.167"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${phone_external_key}</arg>
</arguments>
<msg timestamp="20210322 02:41:52.169" level="INFO">${phone_external_key} = f07224826c8245b5bddf7170efa5c074</msg>
<status status="PASS" starttime="20210322 02:41:52.168" endtime="20210322 02:41:52.169"></status>
</kw>
<status status="PASS" starttime="20210322 02:41:51.940" endtime="20210322 02:41:52.169"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 02:41:52.171" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:41:52.170" endtime="20210322 02:41:52.171"></status>
</kw>
<kw name="criar holder address" library="accreditation_post_holder_address">
<arguments>
<arg>Rio de Janeiro</arg>
<arg>Rio de Janeiro</arg>
<arg>Brasil</arg>
<arg>Bairro de Testes</arg>
<arg>Rua de Testes</arg>
<arg>90</arg>
<arg>apto 200</arg>
<arg>21550987</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:41:52.173" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 02:41:52.172" endtime="20210322 02:41:52.173"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"city": "${city}",</arg>
<arg>"state": "${state}",</arg>
<arg>"country": "${country}",</arg>
<arg>"neighborhood": "${neighborhood}",</arg>
<arg>"street": "${street}",</arg>
<arg>"number": "${number}",</arg>
<arg>"complement": "${complement}",</arg>
<arg>"postal_code": "${postal_code}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 02:41:52.174" level="INFO">${body} = { "city": "Rio de Janeiro", "state": "Rio de Janeiro", "country": "Brasil", "neighborhood": "Bairro de Testes", "street": "Rua de Testes", "number": "90", "complement": "apto 200", "postal_code": "215...</msg>
<status status="PASS" starttime="20210322 02:41:52.173" endtime="20210322 02:41:52.174"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/addresses</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:41:52.175" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/fc159e7c8c93475cb0a35749537f4bea/addresses, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "city": "Rio de Janeiro", "state": "Rio de Janeiro", "country": "Brasil", "neighborhood": "Bairro de Testes", "street": "Rua de Testes", "number": "90", "complement": "apto 200", "postal_code": "21550987" } 
json=None</msg>
<msg timestamp="20210322 02:41:52.426" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:41:52.174" endtime="20210322 02:41:52.426"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:41:52.428" level="INFO">{'id': '9ae7a188bb4d44a4841182712f4bfd65', 'street': 'Rua de Testes', 'number': '90', 'city': 'Rio de Janeiro', 'complement': 'apto 200', 'state': 'Rio de Janeiro', 'neighborhood': 'Bairro de Testes', 'postal_code': '21550987', 'country': 'Brasil', 'main': True, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/fc159e7c8c93475cb0a35749537f4bea/addresses/9ae7a188bb4d44a4841182712f4bfd65', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/fc159e7c8c93475cb0a35749537f4bea', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 02:41:52.427" endtime="20210322 02:41:52.429"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:41:52.431" level="INFO">b0822e3474282ef5</msg>
<status status="PASS" starttime="20210322 02:41:52.430" endtime="20210322 02:41:52.432"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:41:52.434" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:41:52.433" endtime="20210322 02:41:52.434"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${address_external_key}</var>
</assign>
<msg timestamp="20210322 02:41:52.438" level="INFO">${address_external_key} = 9ae7a188bb4d44a4841182712f4bfd65</msg>
<status status="PASS" starttime="20210322 02:41:52.435" endtime="20210322 02:41:52.438"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${address_external_key}</arg>
</arguments>
<msg timestamp="20210322 02:41:52.439" level="INFO">${address_external_key} = 9ae7a188bb4d44a4841182712f4bfd65</msg>
<status status="PASS" starttime="20210322 02:41:52.439" endtime="20210322 02:41:52.440"></status>
</kw>
<status status="PASS" starttime="20210322 02:41:52.171" endtime="20210322 02:41:52.440"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 02:41:52.441" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:41:52.440" endtime="20210322 02:41:52.441"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>SELFIE</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:41:52.444" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 02:41:52.443" endtime="20210322 02:41:52.444"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 02:41:52.445" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 02:41:52.447" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 02:41:52.444" endtime="20210322 02:41:52.448"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:41:52.449" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/fc159e7c8c93475cb0a35749537f4bea/documents?type=SELFIE, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 02:41:52.732" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:41:52.448" endtime="20210322 02:41:52.733"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:41:52.736" level="INFO">{'id': '5e8201bd3eed4515be2155ccbc610a79', 'document_type': 'selfie', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/fc159e7c8c93475cb0a35749537f4bea/documents/5e8201bd3eed4515be2155ccbc610a79', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/fc159e7c8c93475cb0a35749537f4bea', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/fc159e7c8c93475cb0a35749537f4bea/documents/5e8201bd3eed4515be2155ccbc610a79/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 02:41:52.734" endtime="20210322 02:41:52.736"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:41:52.738" level="INFO">2921662dbfdce33b</msg>
<status status="PASS" starttime="20210322 02:41:52.737" endtime="20210322 02:41:52.738"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:41:52.740" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:41:52.739" endtime="20210322 02:41:52.740"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 02:41:52.742" level="INFO">${document_external_key} = 5e8201bd3eed4515be2155ccbc610a79</msg>
<status status="PASS" starttime="20210322 02:41:52.740" endtime="20210322 02:41:52.742"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 02:41:52.743" level="INFO">${document_external_key} = 5e8201bd3eed4515be2155ccbc610a79</msg>
<status status="PASS" starttime="20210322 02:41:52.742" endtime="20210322 02:41:52.743"></status>
</kw>
<status status="PASS" starttime="20210322 02:41:52.442" endtime="20210322 02:41:52.743"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 02:41:52.744" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:41:52.743" endtime="20210322 02:41:52.744"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>RG_FRENTE</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:41:52.746" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 02:41:52.745" endtime="20210322 02:41:52.746"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 02:41:52.747" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 02:41:52.749" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 02:41:52.746" endtime="20210322 02:41:52.749"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:41:52.751" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/fc159e7c8c93475cb0a35749537f4bea/documents?type=RG_FRENTE, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 02:41:53.115" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:41:52.750" endtime="20210322 02:41:53.115"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:41:53.117" level="INFO">{'id': '4ea746a2603c45c5a29454adb1b90cd4', 'document_type': 'rg_frente', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/fc159e7c8c93475cb0a35749537f4bea/documents/4ea746a2603c45c5a29454adb1b90cd4', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/fc159e7c8c93475cb0a35749537f4bea', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/fc159e7c8c93475cb0a35749537f4bea/documents/4ea746a2603c45c5a29454adb1b90cd4/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 02:41:53.116" endtime="20210322 02:41:53.118"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:41:53.120" level="INFO">dbbfb0e4f42bb824</msg>
<status status="PASS" starttime="20210322 02:41:53.119" endtime="20210322 02:41:53.120"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:41:53.122" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:41:53.121" endtime="20210322 02:41:53.123"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 02:41:53.125" level="INFO">${document_external_key} = 4ea746a2603c45c5a29454adb1b90cd4</msg>
<status status="PASS" starttime="20210322 02:41:53.124" endtime="20210322 02:41:53.126"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 02:41:53.127" level="INFO">${document_external_key} = 4ea746a2603c45c5a29454adb1b90cd4</msg>
<status status="PASS" starttime="20210322 02:41:53.127" endtime="20210322 02:41:53.127"></status>
</kw>
<status status="PASS" starttime="20210322 02:41:52.744" endtime="20210322 02:41:53.128"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 02:41:53.129" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:41:53.128" endtime="20210322 02:41:53.129"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>RG_VERSO</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:41:53.131" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 02:41:53.131" endtime="20210322 02:41:53.131"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 02:41:53.132" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 02:41:53.135" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 02:41:53.132" endtime="20210322 02:41:53.135"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:41:53.137" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/fc159e7c8c93475cb0a35749537f4bea/documents?type=RG_VERSO, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 02:41:53.448" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:41:53.136" endtime="20210322 02:41:53.448"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:41:53.450" level="INFO">{'id': '5eaec1bded4a4b6bb1f41513273c8d3c', 'document_type': 'rg_verso', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/fc159e7c8c93475cb0a35749537f4bea/documents/5eaec1bded4a4b6bb1f41513273c8d3c', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/fc159e7c8c93475cb0a35749537f4bea', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/fc159e7c8c93475cb0a35749537f4bea/documents/5eaec1bded4a4b6bb1f41513273c8d3c/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 02:41:53.449" endtime="20210322 02:41:53.451"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:41:53.453" level="INFO">1270f73d044010c3</msg>
<status status="PASS" starttime="20210322 02:41:53.452" endtime="20210322 02:41:53.454"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:41:53.455" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:41:53.454" endtime="20210322 02:41:53.456"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 02:41:53.458" level="INFO">${document_external_key} = 5eaec1bded4a4b6bb1f41513273c8d3c</msg>
<status status="PASS" starttime="20210322 02:41:53.456" endtime="20210322 02:41:53.458"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 02:41:53.460" level="INFO">${document_external_key} = 5eaec1bded4a4b6bb1f41513273c8d3c</msg>
<status status="PASS" starttime="20210322 02:41:53.459" endtime="20210322 02:41:53.460"></status>
</kw>
<status status="PASS" starttime="20210322 02:41:53.130" endtime="20210322 02:41:53.461"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 02:41:53.462" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:41:53.461" endtime="20210322 02:41:53.462"></status>
</kw>
<kw name="solicitar aprovação do holder" library="accreditation_request_approval">
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:41:53.464" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 02:41:53.464" endtime="20210322 02:41:53.465"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/approval</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:41:53.466" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/fc159e7c8c93475cb0a35749537f4bea/approval, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data=None 
json=None</msg>
<msg timestamp="20210322 02:41:53.738" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:41:53.466" endtime="20210322 02:41:53.739"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:41:53.742" level="INFO">{'message': 'Approval request accepted successfully. Processing analysis'}</msg>
<status status="PASS" starttime="20210322 02:41:53.741" endtime="20210322 02:41:53.743"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:41:53.745" level="INFO">a1553984d443c61f</msg>
<status status="PASS" starttime="20210322 02:41:53.744" endtime="20210322 02:41:53.746"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:41:53.748" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:41:53.747" endtime="20210322 02:41:53.748"></status>
</kw>
<status status="PASS" starttime="20210322 02:41:53.464" endtime="20210322 02:41:53.749"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 02:41:53.750" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:41:53.750" endtime="20210322 02:41:53.750"></status>
</kw>
<kw name="recebendo notificação de aprovação" library="accreditation_risk_notification">
<kw name="Uuid 4" library="FakerLibrary">
<doc>Generates a random UUID4 string.
:param cast_to: Specify what type the UUID should be cast to. Default is `str`
:type cast_to: callable</doc>
<assign>
<var>${assessment_id}</var>
</assign>
<msg timestamp="20210322 02:41:53.752" level="INFO">${assessment_id} = 8a53ba70-de48-4ed3-a436-dcccf3749acb</msg>
<status status="PASS" starttime="20210322 02:41:53.752" endtime="20210322 02:41:53.752"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>year</arg>
</arguments>
<assign>
<var>${year}</var>
</assign>
<msg timestamp="20210322 02:41:53.754" level="INFO">${year} = 2021</msg>
<status status="PASS" starttime="20210322 02:41:53.753" endtime="20210322 02:41:53.754"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>month</arg>
</arguments>
<assign>
<var>${month}</var>
</assign>
<msg timestamp="20210322 02:41:53.755" level="INFO">${month} = 03</msg>
<status status="PASS" starttime="20210322 02:41:53.755" endtime="20210322 02:41:53.755"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>day</arg>
</arguments>
<assign>
<var>${day}</var>
</assign>
<msg timestamp="20210322 02:41:53.756" level="INFO">${day} = 22</msg>
<status status="PASS" starttime="20210322 02:41:53.756" endtime="20210322 02:41:53.756"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:41:53.757" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 02:41:53.757" endtime="20210322 02:41:53.757"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "risk.assessment.result",</arg>
<arg>"resource": "business.holder",</arg>
<arg>"created_at": "${year}-${month}-${day} 15:28:56.747Z",</arg>
<arg>"marketplace_id": "${marketplace_external_key}",</arg>
<arg>"object": {</arg>
<arg>"result": "APPROVED",</arg>
<arg>"holder_id": "${holder_external_key}",</arg>
<arg>"applicant_id": "${application_external_key}",</arg>
<arg>"assessment_id": "${assessment_id}"</arg>
<arg>}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 02:41:53.759" level="INFO">${body} = { "type": "risk.assessment.result", "resource": "business.holder", "created_at": "2021-03-22 15:28:56.747Z", "marketplace_id": "f71a8951368a4cc085cf7875ff44e61c", "object": { "result": "APPROVED", "ho...</msg>
<status status="PASS" starttime="20210322 02:41:53.758" endtime="20210322 02:41:53.760"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/admin/internal_operation/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/registration/approval</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:41:53.761" level="INFO">POST Request using : uri=/admin/internal_operation/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/fc159e7c8c93475cb0a35749537f4bea/registration/approval, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "risk.assessment.result", "resource": "business.holder", "created_at": "2021-03-22 15:28:56.747Z", "marketplace_id": "f71a8951368a4cc085cf7875ff44e61c", "object": { "result": "APPROVED", "holder_id": "fc159e7c8c93475cb0a35749537f4bea", "applicant_id": "bcc25a6751c14b52af1340d40dba78c5", "assessment_id": "8a53ba70-de48-4ed3-a436-dcccf3749acb" } } 
json=None</msg>
<msg timestamp="20210322 02:41:53.968" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:41:53.760" endtime="20210322 02:41:53.968"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:41:53.971" level="INFO">{'message': 'Holder approved successfully'}</msg>
<status status="PASS" starttime="20210322 02:41:53.969" endtime="20210322 02:41:53.972"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:41:53.975" level="INFO">fe046c901549a5fc</msg>
<status status="PASS" starttime="20210322 02:41:53.973" endtime="20210322 02:41:53.975"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:41:53.977" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:41:53.976" endtime="20210322 02:41:53.977"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 02:41:53.979" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:41:53.978" endtime="20210322 02:41:53.979"></status>
</kw>
<status status="PASS" starttime="20210322 02:41:53.751" endtime="20210322 02:41:53.980"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 02:41:53.982" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:41:53.981" endtime="20210322 02:41:53.982"></status>
</kw>
<kw name="buscar account por holder" library="accounts_get_accounts_by_holder">
<kw name="conectar accounts" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accounts</arg>
<arg>url=${account_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 02:41:53.986" level="INFO">Creating Session using : alias=accounts, url=https://banking-accounts-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 02:41:53.985" endtime="20210322 02:41:53.988"></status>
</kw>
<status status="PASS" starttime="20210322 02:41:53.984" endtime="20210322 02:41:53.988"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accounts</arg>
<arg>/marketplaces/${marketplace_external_key}/holders/${holder_external_key}/accounts</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:41:53.990" level="INFO">GET Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/holders/fc159e7c8c93475cb0a35749537f4bea/accounts, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 02:41:54.599" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:41:53.989" endtime="20210322 02:41:54.599"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:41:54.601" level="INFO">{'items': [{'id': '843082c34c2d44c0ba19ae38a2d3e481', 'holder': 'fc159e7c8c93475cb0a35749537f4bea', 'balance': '0.00', 'currency': 'BRL', 'routing_number': '001', 'number': '6996980629', 'status': 'active', 'metadata': {}, 'created_at': '2021-03-22T05:41:54.796161', 'updated_at': '2021-03-22T05:41:54.796161', 'primary': True, 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'uri': '/v2/marketplaces/f71a8951368a4cc085cf7875ff44e61c/accounts/843082c34c2d44c0ba19ae38a2d3e481', 'resource': 'payment_account'}], 'has_more': False, 'limit': 100, 'total_pages': 1, 'page': 1, 'offset': 0, 'total': '1', 'query_count': '1'}</msg>
<status status="PASS" starttime="20210322 02:41:54.600" endtime="20210322 02:41:54.601"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:41:54.602" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:41:54.601" endtime="20210322 02:41:54.602"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["id"]}</arg>
</arguments>
<assign>
<var>${account_external_key}</var>
</assign>
<msg timestamp="20210322 02:41:54.604" level="INFO">${account_external_key} = 843082c34c2d44c0ba19ae38a2d3e481</msg>
<status status="PASS" starttime="20210322 02:41:54.603" endtime="20210322 02:41:54.604"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_external_key}</arg>
</arguments>
<msg timestamp="20210322 02:41:54.605" level="INFO">${account_external_key} = 843082c34c2d44c0ba19ae38a2d3e481</msg>
<status status="PASS" starttime="20210322 02:41:54.605" endtime="20210322 02:41:54.605"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["number"]}</arg>
</arguments>
<assign>
<var>${account_number}</var>
</assign>
<msg timestamp="20210322 02:41:54.607" level="INFO">${account_number} = 6996980629</msg>
<status status="PASS" starttime="20210322 02:41:54.606" endtime="20210322 02:41:54.607"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_number}</arg>
</arguments>
<msg timestamp="20210322 02:41:54.608" level="INFO">${account_number} = 6996980629</msg>
<status status="PASS" starttime="20210322 02:41:54.607" endtime="20210322 02:41:54.608"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["routing_number"]}</arg>
</arguments>
<assign>
<var>${account_routing_number}</var>
</assign>
<msg timestamp="20210322 02:41:54.609" level="INFO">${account_routing_number} = 001</msg>
<status status="PASS" starttime="20210322 02:41:54.608" endtime="20210322 02:41:54.609"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_routing_number}</arg>
</arguments>
<msg timestamp="20210322 02:41:54.610" level="INFO">${account_routing_number} = 001</msg>
<status status="PASS" starttime="20210322 02:41:54.610" endtime="20210322 02:41:54.610"></status>
</kw>
<status status="PASS" starttime="20210322 02:41:53.983" endtime="20210322 02:41:54.610"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 02:41:54.611" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:41:54.611" endtime="20210322 02:41:54.611"></status>
</kw>
<status status="PASS" starttime="20210322 02:41:51.234" endtime="20210322 02:41:54.611"></status>
</kw>
<kw name="criar chave pix" library="pix_dict_create_entry">
<arguments>
<arg>email</arg>
<arg>${email_pix}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 02:41:54.613" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 02:41:54.613" endtime="20210322 02:41:54.613"></status>
</kw>
<status status="PASS" starttime="20210322 02:41:54.612" endtime="20210322 02:41:54.614"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${type}</arg>
</arguments>
<msg timestamp="20210322 02:41:54.614" level="INFO">${type} = email</msg>
<status status="PASS" starttime="20210322 02:41:54.614" endtime="20210322 02:41:54.614"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210322 02:41:54.615" level="INFO">${value} = pedro-lucasda-cunha@silva.br</msg>
<status status="PASS" starttime="20210322 02:41:54.615" endtime="20210322 02:41:54.615"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:41:54.616" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 02:41:54.615" endtime="20210322 02:41:54.616"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "${type}",</arg>
<arg>"value": "${value}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 02:41:54.617" level="INFO">${body} = { "type": "email", "value": "pedro-lucasda-cunha@silva.br" }</msg>
<status status="PASS" starttime="20210322 02:41:54.616" endtime="20210322 02:41:54.617"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:41:54.618" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/fc159e7c8c93475cb0a35749537f4bea/accounts/843082c34c2d44c0ba19ae38a2d3e481/entries, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "email", "value": "pedro-lucasda-cunha@silva.br" } 
json=None</msg>
<msg timestamp="20210322 02:41:55.275" level="INFO">${response} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20210322 02:41:54.617" endtime="20210322 02:41:55.276"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:41:55.277" level="INFO">{'id': '5e35b2c344ae4e88b5166262dc5d4a77', 'status': 'waiting_ownership_verification', 'created_at': '2021-03-22T02:41:56.120', 'updated_at': '2021-03-22T02:41:56.120', 'key': {'value': 'pedro-lucasda-cunha@silva.br', 'type': 'email'}, 'account': {'id': '843082c34c2d44c0ba19ae38a2d3e481', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': 'fc159e7c8c93475cb0a35749537f4bea', 'owner': {'name': 'Holder de teste', 'national_registration': '47031692822', 'type': 'individual'}, 'routing_number': '001', 'number': '6996980629', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}, 'resource': 'pix.entry'}</msg>
<status status="PASS" starttime="20210322 02:41:55.276" endtime="20210322 02:41:55.277"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:41:55.278" level="INFO">8f0a8fbc4557c13d</msg>
<status status="PASS" starttime="20210322 02:41:55.278" endtime="20210322 02:41:55.278"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 02:41:55.280" level="INFO">202</msg>
<status status="PASS" starttime="20210322 02:41:55.279" endtime="20210322 02:41:55.280"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:41:55.281" level="INFO">${response} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20210322 02:41:55.281" endtime="20210322 02:41:55.281"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${entry_external_key}</var>
</assign>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:41:55.284" endtime="20210322 02:41:55.284"></status>
</kw>
<msg timestamp="20210322 02:41:55.284" level="INFO">${entry_external_key} = 5e35b2c344ae4e88b5166262dc5d4a77</msg>
<status status="PASS" starttime="20210322 02:41:55.282" endtime="20210322 02:41:55.284"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${entry_external_key}</arg>
</arguments>
<msg timestamp="20210322 02:41:55.285" level="INFO">${entry_external_key} = 5e35b2c344ae4e88b5166262dc5d4a77</msg>
<status status="PASS" starttime="20210322 02:41:55.285" endtime="20210322 02:41:55.285"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["key"]["value"]}</arg>
</arguments>
<assign>
<var>${entry_key_value}</var>
</assign>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["key"]["value"]}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:41:55.287" endtime="20210322 02:41:55.288"></status>
</kw>
<msg timestamp="20210322 02:41:55.288" level="INFO">${entry_key_value} = pedro-lucasda-cunha@silva.br</msg>
<status status="PASS" starttime="20210322 02:41:55.286" endtime="20210322 02:41:55.288"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${entry_key_value}</arg>
</arguments>
<msg timestamp="20210322 02:41:55.289" level="INFO">${entry_key_value} = pedro-lucasda-cunha@silva.br</msg>
<status status="PASS" starttime="20210322 02:41:55.288" endtime="20210322 02:41:55.289"></status>
</kw>
<status status="PASS" starttime="20210322 02:41:54.611" endtime="20210322 02:41:55.289"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${holder_external_key}</arg>
</arguments>
<assign>
<var>${holder_claimer}</var>
</assign>
<msg timestamp="20210322 02:41:55.290" level="INFO">${holder_claimer} = fc159e7c8c93475cb0a35749537f4bea</msg>
<status status="PASS" starttime="20210322 02:41:55.289" endtime="20210322 02:41:55.290"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${account_external_key}</arg>
</arguments>
<assign>
<var>${account_claimer}</var>
</assign>
<msg timestamp="20210322 02:41:55.290" level="INFO">${account_claimer} = 843082c34c2d44c0ba19ae38a2d3e481</msg>
<status status="PASS" starttime="20210322 02:41:55.290" endtime="20210322 02:41:55.290"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${entry_external_key}</arg>
</arguments>
<assign>
<var>${entry_claimer}</var>
</assign>
<msg timestamp="20210322 02:41:55.291" level="INFO">${entry_claimer} = 5e35b2c344ae4e88b5166262dc5d4a77</msg>
<status status="PASS" starttime="20210322 02:41:55.291" endtime="20210322 02:41:55.292"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Holder Claimer :: ${holder_claimer}</arg>
</arguments>
<msg timestamp="20210322 02:41:55.292" level="INFO">Holder Claimer :: fc159e7c8c93475cb0a35749537f4bea</msg>
<status status="PASS" starttime="20210322 02:41:55.292" endtime="20210322 02:41:55.292"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Account Claimer :: ${account_claimer}</arg>
</arguments>
<msg timestamp="20210322 02:41:55.293" level="INFO">Account Claimer :: 843082c34c2d44c0ba19ae38a2d3e481</msg>
<status status="PASS" starttime="20210322 02:41:55.293" endtime="20210322 02:41:55.293"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Entry Claimer :: ${entry_claimer}</arg>
</arguments>
<msg timestamp="20210322 02:41:55.294" level="INFO">Entry Claimer :: 5e35b2c344ae4e88b5166262dc5d4a77</msg>
<status status="PASS" starttime="20210322 02:41:55.293" endtime="20210322 02:41:55.294"></status>
</kw>
<kw name="buscar verification code" library="pix_dict_verification_code">
<arguments>
<arg>${holder_claimer}</arg>
<arg>${account_claimer}</arg>
<arg>${entry_claimer}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 02:41:55.296" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 02:41:55.295" endtime="20210322 02:41:55.297"></status>
</kw>
<status status="PASS" starttime="20210322 02:41:55.295" endtime="20210322 02:41:55.297"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/admin/internal_operation/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries/${entry_external_key}/code</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:41:55.297" level="INFO">GET Request using : uri=/admin/internal_operation/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/fc159e7c8c93475cb0a35749537f4bea/accounts/843082c34c2d44c0ba19ae38a2d3e481/entries/5e35b2c344ae4e88b5166262dc5d4a77/code, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 02:41:55.918" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:41:55.297" endtime="20210322 02:41:55.919"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:41:55.922" level="INFO">{'code': '8155'}</msg>
<status status="PASS" starttime="20210322 02:41:55.920" endtime="20210322 02:41:55.922"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:41:55.923" level="INFO">49fbf129ff8e4d4d</msg>
<status status="PASS" starttime="20210322 02:41:55.923" endtime="20210322 02:41:55.924"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 02:41:55.925" level="INFO">200</msg>
<status status="PASS" starttime="20210322 02:41:55.924" endtime="20210322 02:41:55.925"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:41:55.927" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:41:55.926" endtime="20210322 02:41:55.927"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["code"]}</arg>
</arguments>
<assign>
<var>${verification_code}</var>
</assign>
<msg timestamp="20210322 02:41:55.929" level="INFO">${verification_code} = 8155</msg>
<status status="PASS" starttime="20210322 02:41:55.928" endtime="20210322 02:41:55.929"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${verification_code}</arg>
</arguments>
<msg timestamp="20210322 02:41:55.931" level="INFO">${verification_code} = 8155</msg>
<status status="PASS" starttime="20210322 02:41:55.930" endtime="20210322 02:41:55.931"></status>
</kw>
<status status="PASS" starttime="20210322 02:41:55.294" endtime="20210322 02:41:55.931"></status>
</kw>
<kw name="confirmar propriedade da chave pix" library="pix_dict_confirm_propriety">
<arguments>
<arg>${verification_code}</arg>
<arg>${holder_claimer}</arg>
<arg>${account_claimer}</arg>
<arg>${entry_claimer}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 02:41:55.935" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 02:41:55.934" endtime="20210322 02:41:55.936"></status>
</kw>
<status status="PASS" starttime="20210322 02:41:55.933" endtime="20210322 02:41:55.936"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:41:55.937" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 02:41:55.936" endtime="20210322 02:41:55.937"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"code": "${verification_code}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 02:41:55.938" level="INFO">${body} = { "code": "8155" }</msg>
<status status="PASS" starttime="20210322 02:41:55.937" endtime="20210322 02:41:55.938"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries/${entry_external_key}/ownership</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:41:55.940" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/fc159e7c8c93475cb0a35749537f4bea/accounts/843082c34c2d44c0ba19ae38a2d3e481/entries/5e35b2c344ae4e88b5166262dc5d4a77/ownership, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "code": "8155" } 
json=None</msg>
<msg timestamp="20210322 02:41:57.346" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:41:55.939" endtime="20210322 02:41:57.346"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:41:57.347" level="INFO">{'id': '5e35b2c344ae4e88b5166262dc5d4a77', 'status': 'waiting_ownership_claiming', 'created_at': '2021-03-22T02:41:56.120', 'updated_at': '2021-03-22T02:41:58.207', 'key': {'value': 'pedro-lucasda-cunha@silva.br', 'type': 'email'}, 'account': {'id': '843082c34c2d44c0ba19ae38a2d3e481', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': 'fc159e7c8c93475cb0a35749537f4bea', 'owner': {'name': 'Holder de teste', 'national_registration': '47031692822', 'type': 'individual'}, 'routing_number': '001', 'number': '6996980629', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}, 'resource': 'pix.entry'}</msg>
<status status="PASS" starttime="20210322 02:41:57.346" endtime="20210322 02:41:57.347"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:41:57.349" level="INFO">5752c2d9f113ea8a</msg>
<status status="PASS" starttime="20210322 02:41:57.348" endtime="20210322 02:41:57.349"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 02:41:57.350" level="INFO">201</msg>
<status status="PASS" starttime="20210322 02:41:57.349" endtime="20210322 02:41:57.350"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:41:57.351" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:41:57.351" endtime="20210322 02:41:57.352"></status>
</kw>
<status status="PASS" starttime="20210322 02:41:55.932" endtime="20210322 02:41:57.352"></status>
</kw>
<kw name="validar status da chave após criação da reivindicação" library="asserts">
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["status"]}</arg>
<arg>waiting_ownership_claiming</arg>
</arguments>
<status status="PASS" starttime="20210322 02:41:57.353" endtime="20210322 02:41:57.354"></status>
</kw>
<status status="PASS" starttime="20210322 02:41:57.352" endtime="20210322 02:41:57.354"></status>
</kw>
<kw name="criar reivindicação de posse" library="pix_dict_create_claims">
<arguments>
<arg>${holder_claimer}</arg>
<arg>${account_claimer}</arg>
<arg>${entry_claimer}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 02:41:57.356" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 02:41:57.356" endtime="20210322 02:41:57.357"></status>
</kw>
<status status="PASS" starttime="20210322 02:41:57.355" endtime="20210322 02:41:57.357"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries/${entry_external_key}/claims</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:41:57.358" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/fc159e7c8c93475cb0a35749537f4bea/accounts/843082c34c2d44c0ba19ae38a2d3e481/entries/5e35b2c344ae4e88b5166262dc5d4a77/claims, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 02:41:59.163" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:41:57.357" endtime="20210322 02:41:59.163"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:41:59.164" level="INFO">{'id': 'd82b17a489ed4880a074afedb19a4158', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'created_at': '2021-03-22T02:42:00.018', 'updated_at': '2021-03-22T02:42:00.018', 'type': 'OWNERSHIP', 'status': 'open', 'key': {'value': 'pedro-lucasda-cunha@silva.br', 'type': 'email'}, 'claimer': {'name': 'Holder de teste', 'national_registration': '47031692822', 'type': 'individual', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': 'fc159e7c8c93475cb0a35749537f4bea', 'account': {'digital_account_id': '843082c34c2d44c0ba19ae38a2d3e481', 'routing_number': '001', 'number': '6996980629', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}}, 'donor': {'name': 'Holder de teste', 'national_registration': '32897605456', 'type': 'individual', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': '7109199355cc4f818b322b68c216d02e', 'account': {'digital_account_id': 'd34e3be5c75548a8a22f646d3ef31d39', 'routing_number': '001', 'number': '1357903972', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}}, 'completion_period_end': '2021-04-05T05:41:59.000', 'resolution_period_end': '2021-03-29T05:41:59.000', 'resource': 'pix.claim'}</msg>
<status status="PASS" starttime="20210322 02:41:59.163" endtime="20210322 02:41:59.164"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:41:59.165" level="INFO">2df2dea10e4aca34</msg>
<status status="PASS" starttime="20210322 02:41:59.165" endtime="20210322 02:41:59.165"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 02:41:59.166" level="INFO">201</msg>
<status status="PASS" starttime="20210322 02:41:59.166" endtime="20210322 02:41:59.166"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:41:59.167" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:41:59.167" endtime="20210322 02:41:59.167"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${claim_external_key}</var>
</assign>
<msg timestamp="20210322 02:41:59.169" level="INFO">${claim_external_key} = d82b17a489ed4880a074afedb19a4158</msg>
<status status="PASS" starttime="20210322 02:41:59.168" endtime="20210322 02:41:59.169"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${claim_external_key}</arg>
</arguments>
<msg timestamp="20210322 02:41:59.170" level="INFO">${claim_external_key} = d82b17a489ed4880a074afedb19a4158</msg>
<status status="PASS" starttime="20210322 02:41:59.169" endtime="20210322 02:41:59.170"></status>
</kw>
<status status="PASS" starttime="20210322 02:41:57.354" endtime="20210322 02:41:59.170"></status>
</kw>
<kw name="buscar reivindicação de posse" library="pix_dict_get_claims">
<arguments>
<arg>${holder_claimer}</arg>
<arg>${account_claimer}</arg>
<arg>${claim_external_key}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 02:41:59.172" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 02:41:59.172" endtime="20210322 02:41:59.173"></status>
</kw>
<status status="PASS" starttime="20210322 02:41:59.171" endtime="20210322 02:41:59.173"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/claims/${claim_external_key}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:41:59.174" level="INFO">GET Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/fc159e7c8c93475cb0a35749537f4bea/accounts/843082c34c2d44c0ba19ae38a2d3e481/claims/d82b17a489ed4880a074afedb19a4158, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 02:41:59.820" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:41:59.173" endtime="20210322 02:41:59.820"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:41:59.821" level="INFO">{'id': 'd82b17a489ed4880a074afedb19a4158', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'created_at': '2021-03-22T02:42:00.018', 'updated_at': '2021-03-22T02:42:00.018', 'type': 'OWNERSHIP', 'status': 'open', 'key': {'value': 'pedro-lucasda-cunha@silva.br', 'type': 'email'}, 'claimer': {'name': 'Holder de teste', 'national_registration': '47031692822', 'type': 'individual', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': 'fc159e7c8c93475cb0a35749537f4bea', 'account': {'digital_account_id': '843082c34c2d44c0ba19ae38a2d3e481', 'routing_number': '001', 'number': '6996980629', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}}, 'donor': {'name': 'Holder de teste', 'national_registration': '32897605456', 'type': 'individual', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': '7109199355cc4f818b322b68c216d02e', 'account': {'digital_account_id': 'd34e3be5c75548a8a22f646d3ef31d39', 'routing_number': '001', 'number': '1357903972', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}}, 'completion_period_end': '2021-04-05T05:41:59.000', 'resolution_period_end': '2021-03-29T05:41:59.000', 'resource': 'pix.claim'}</msg>
<status status="PASS" starttime="20210322 02:41:59.820" endtime="20210322 02:41:59.821"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:41:59.822" level="INFO">c09074441f98258d</msg>
<status status="PASS" starttime="20210322 02:41:59.821" endtime="20210322 02:41:59.822"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 02:41:59.822" level="INFO">200</msg>
<status status="PASS" starttime="20210322 02:41:59.822" endtime="20210322 02:41:59.822"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:41:59.823" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:41:59.822" endtime="20210322 02:41:59.823"></status>
</kw>
<status status="PASS" starttime="20210322 02:41:59.171" endtime="20210322 02:41:59.823"></status>
</kw>
<kw name="validar status da reivindicação" library="asserts">
<arguments>
<arg>open</arg>
</arguments>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["status"]}</arg>
<arg>${claim_status}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:41:59.823" endtime="20210322 02:41:59.824"></status>
</kw>
<status status="PASS" starttime="20210322 02:41:59.823" endtime="20210322 02:41:59.824"></status>
</kw>
<kw name="receber notificação de reivindicação" library="pix_dict_receive_claim_notification">
<arguments>
<arg>${email_pix}</arg>
<arg>${account_number_owner}</arg>
<arg>${national_registration_owner}</arg>
<arg>${holder_name_owner}</arg>
<arg>${claim_external_key}</arg>
<arg>WAITING_RESOLUTION</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 02:41:59.825" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 02:41:59.825" endtime="20210322 02:41:59.825"></status>
</kw>
<status status="PASS" starttime="20210322 02:41:59.825" endtime="20210322 02:41:59.826"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:41:59.826" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 02:41:59.826" endtime="20210322 02:41:59.826"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"data": {</arg>
<arg>"claim": {</arg>
<arg>"type": "OWNERSHIP",</arg>
<arg>"key": "${key_pix}",</arg>
<arg>"key_type": "PHONE",</arg>
<arg>"claimer_account": {</arg>
<arg>"participant": "19468242",</arg>
<arg>"branch": "0001",</arg>
<arg>"account_number": "${account_number}",</arg>
<arg>"account_type": "CACC"</arg>
<arg>},</arg>
<arg>"claimer": {</arg>
<arg>"type": "NATURAL_PERSON",</arg>
<arg>"tax_id_number": "${claimer_tax_id}",</arg>
<arg>"name": "${claimer_name}"</arg>
<arg>},</arg>
<arg>"donor_participant": "19468242",</arg>
<arg>"id": "${claim_external_key}",</arg>
<arg>"status": "${claim_notification_status}",</arg>
<arg>"resolution_period_end": "2020-10-18T10:00:00.000Z",</arg>
<arg>"completion_period_end": "2020-10-25T10:00:00.000Z",</arg>
<arg>"last_modified": "2020-10-17T10:00:00.000Z"</arg>
<arg>}</arg>
<arg>}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 02:41:59.827" level="INFO">${body} = { "data": { "claim": { "type": "OWNERSHIP", "key": "pedro-lucasda-cunha@silva.br", "key_type": "PHONE", "claimer_account": { "participant": "19468242", "branch": "0001", "account_number": "1357903972"...</msg>
<status status="PASS" starttime="20210322 02:41:59.826" endtime="20210322 02:41:59.827"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/banking/internal/dict/claims</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:41:59.827" level="INFO">POST Request using : uri=/banking/internal/dict/claims, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "data": { "claim": { "type": "OWNERSHIP", "key": "pedro-lucasda-cunha@silva.br", "key_type": "PHONE", "claimer_account": { "participant": "19468242", "branch": "0001", "account_number": "1357903972", "account_type": "CACC" }, "claimer": { "type": "NATURAL_PERSON", "tax_id_number": "32897605456", "name": "Holder de teste" }, "donor_participant": "19468242", "id": "d82b17a489ed4880a074afedb19a4158", "status": "WAITING_RESOLUTION", "resolution_period_end": "2020-10-18T10:00:00.000Z", "completion_period_end": "2020-10-25T10:00:00.000Z", "last_modified": "2020-10-17T10:00:00.000Z" } } } 
json=None</msg>
<msg timestamp="20210322 02:42:00.473" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:41:59.827" endtime="20210322 02:42:00.473"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 02:42:00.474" level="INFO">200</msg>
<status status="PASS" starttime="20210322 02:42:00.473" endtime="20210322 02:42:00.474"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:42:00.475" level="INFO">32e219ed88098f84</msg>
<status status="PASS" starttime="20210322 02:42:00.474" endtime="20210322 02:42:00.475"></status>
</kw>
<status status="PASS" starttime="20210322 02:41:59.824" endtime="20210322 02:42:00.475"></status>
</kw>
<kw name="buscar reivindicação de posse" library="pix_dict_get_claims">
<arguments>
<arg>${holder_claimer}</arg>
<arg>${account_claimer}</arg>
<arg>${claim_external_key}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 02:42:00.476" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 02:42:00.476" endtime="20210322 02:42:00.477"></status>
</kw>
<status status="PASS" starttime="20210322 02:42:00.476" endtime="20210322 02:42:00.477"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/claims/${claim_external_key}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:42:00.478" level="INFO">GET Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/fc159e7c8c93475cb0a35749537f4bea/accounts/843082c34c2d44c0ba19ae38a2d3e481/claims/d82b17a489ed4880a074afedb19a4158, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 02:42:01.098" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:42:00.477" endtime="20210322 02:42:01.098"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:42:01.100" level="INFO">{'id': 'd82b17a489ed4880a074afedb19a4158', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'created_at': '2021-03-22T02:42:00.018', 'updated_at': '2021-03-22T02:42:01.337', 'type': 'OWNERSHIP', 'status': 'waiting_resolution', 'key': {'value': 'pedro-lucasda-cunha@silva.br', 'type': 'email'}, 'claimer': {'name': 'Holder de teste', 'national_registration': '47031692822', 'type': 'individual', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': 'fc159e7c8c93475cb0a35749537f4bea', 'account': {'digital_account_id': '843082c34c2d44c0ba19ae38a2d3e481', 'routing_number': '001', 'number': '6996980629', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}}, 'donor': {'name': 'Holder de teste', 'national_registration': '32897605456', 'type': 'individual', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': '7109199355cc4f818b322b68c216d02e', 'account': {'digital_account_id': 'd34e3be5c75548a8a22f646d3ef31d39', 'routing_number': '001', 'number': '1357903972', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}}, 'completion_period_end': '2021-04-05T05:41:59.000', 'resolution_period_end': '2021-03-29T05:41:59.000', 'resource': 'pix.claim'}</msg>
<status status="PASS" starttime="20210322 02:42:01.099" endtime="20210322 02:42:01.101"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:42:01.102" level="INFO">d16a49d071ceacb2</msg>
<status status="PASS" starttime="20210322 02:42:01.101" endtime="20210322 02:42:01.103"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 02:42:01.105" level="INFO">200</msg>
<status status="PASS" starttime="20210322 02:42:01.104" endtime="20210322 02:42:01.105"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:42:01.108" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:42:01.106" endtime="20210322 02:42:01.108"></status>
</kw>
<status status="PASS" starttime="20210322 02:42:00.475" endtime="20210322 02:42:01.108"></status>
</kw>
<kw name="validar status da reivindicação" library="asserts">
<arguments>
<arg>waiting_resolution</arg>
</arguments>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["status"]}</arg>
<arg>${claim_status}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:42:01.110" endtime="20210322 02:42:01.111"></status>
</kw>
<status status="PASS" starttime="20210322 02:42:01.109" endtime="20210322 02:42:01.111"></status>
</kw>
<kw name="${index} IN RANGE [ 20 ]" type="for">
<kw name="${index} = 0" type="foritem">
<kw name="confirmar reivindicação de posse" library="pix_dict_confirm_claims">
<arguments>
<arg>${holder_owner}</arg>
<arg>${account_owner}</arg>
<arg>${claim_external_key}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 02:42:01.115" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 02:42:01.114" endtime="20210322 02:42:01.116"></status>
</kw>
<status status="PASS" starttime="20210322 02:42:01.113" endtime="20210322 02:42:01.116"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/claims/${claim_external_key}/confirm</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:42:01.117" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/7109199355cc4f818b322b68c216d02e/accounts/d34e3be5c75548a8a22f646d3ef31d39/claims/d82b17a489ed4880a074afedb19a4158/confirm, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 02:42:02.694" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20210322 02:42:01.117" endtime="20210322 02:42:02.694"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:42:02.697" level="INFO">{'code': 9997, 'status': 'bad_request', 'type': 'integration_error', 'message': 'Claim operation invalid', 'category': 'unexpected', 'status_code': 400}</msg>
<status status="PASS" starttime="20210322 02:42:02.696" endtime="20210322 02:42:02.697"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:42:02.700" level="INFO">4981586b3ccdc7ea</msg>
<status status="PASS" starttime="20210322 02:42:02.698" endtime="20210322 02:42:02.700"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 02:42:02.702" level="INFO">400</msg>
<status status="PASS" starttime="20210322 02:42:02.701" endtime="20210322 02:42:02.702"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:42:02.704" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20210322 02:42:02.703" endtime="20210322 02:42:02.705"></status>
</kw>
<status status="PASS" starttime="20210322 02:42:01.112" endtime="20210322 02:42:02.705"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${response.json()["message"]}' == 'Claim confirmed successfully'</arg>
</arguments>
<status status="PASS" starttime="20210322 02:42:02.706" endtime="20210322 02:42:02.708"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10</arg>
</arguments>
<msg timestamp="20210322 02:42:12.710" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20210322 02:42:02.708" endtime="20210322 02:42:12.710"></status>
</kw>
<status status="PASS" starttime="20210322 02:42:01.112" endtime="20210322 02:42:12.711"></status>
</kw>
<kw name="${index} = 1" type="foritem">
<kw name="confirmar reivindicação de posse" library="pix_dict_confirm_claims">
<arguments>
<arg>${holder_owner}</arg>
<arg>${account_owner}</arg>
<arg>${claim_external_key}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 02:42:12.717" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 02:42:12.715" endtime="20210322 02:42:12.720"></status>
</kw>
<status status="PASS" starttime="20210322 02:42:12.714" endtime="20210322 02:42:12.721"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/claims/${claim_external_key}/confirm</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:42:12.724" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/7109199355cc4f818b322b68c216d02e/accounts/d34e3be5c75548a8a22f646d3ef31d39/claims/d82b17a489ed4880a074afedb19a4158/confirm, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 02:42:14.375" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20210322 02:42:12.722" endtime="20210322 02:42:14.375"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:42:14.377" level="INFO">{'code': 9997, 'status': 'bad_request', 'type': 'integration_error', 'message': 'Claim operation invalid', 'category': 'unexpected', 'status_code': 400}</msg>
<status status="PASS" starttime="20210322 02:42:14.376" endtime="20210322 02:42:14.377"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:42:14.380" level="INFO">d7aa55cc0abe764b</msg>
<status status="PASS" starttime="20210322 02:42:14.378" endtime="20210322 02:42:14.380"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 02:42:14.382" level="INFO">400</msg>
<status status="PASS" starttime="20210322 02:42:14.381" endtime="20210322 02:42:14.382"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:42:14.384" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20210322 02:42:14.383" endtime="20210322 02:42:14.384"></status>
</kw>
<status status="PASS" starttime="20210322 02:42:12.712" endtime="20210322 02:42:14.385"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${response.json()["message"]}' == 'Claim confirmed successfully'</arg>
</arguments>
<status status="PASS" starttime="20210322 02:42:14.385" endtime="20210322 02:42:14.388"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10</arg>
</arguments>
<msg timestamp="20210322 02:42:24.390" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20210322 02:42:14.388" endtime="20210322 02:42:24.391"></status>
</kw>
<status status="PASS" starttime="20210322 02:42:12.711" endtime="20210322 02:42:24.391"></status>
</kw>
<kw name="${index} = 2" type="foritem">
<kw name="confirmar reivindicação de posse" library="pix_dict_confirm_claims">
<arguments>
<arg>${holder_owner}</arg>
<arg>${account_owner}</arg>
<arg>${claim_external_key}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 02:42:24.397" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 02:42:24.396" endtime="20210322 02:42:24.398"></status>
</kw>
<status status="PASS" starttime="20210322 02:42:24.395" endtime="20210322 02:42:24.399"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/claims/${claim_external_key}/confirm</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:42:24.402" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/7109199355cc4f818b322b68c216d02e/accounts/d34e3be5c75548a8a22f646d3ef31d39/claims/d82b17a489ed4880a074afedb19a4158/confirm, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 02:42:26.004" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20210322 02:42:24.400" endtime="20210322 02:42:26.005"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:42:26.007" level="INFO">{'code': 9997, 'status': 'bad_request', 'type': 'integration_error', 'message': 'Claim operation invalid', 'category': 'unexpected', 'status_code': 400}</msg>
<status status="PASS" starttime="20210322 02:42:26.006" endtime="20210322 02:42:26.008"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:42:26.010" level="INFO">b6299482d68cfb42</msg>
<status status="PASS" starttime="20210322 02:42:26.009" endtime="20210322 02:42:26.011"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 02:42:26.013" level="INFO">400</msg>
<status status="PASS" starttime="20210322 02:42:26.012" endtime="20210322 02:42:26.013"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:42:26.015" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20210322 02:42:26.014" endtime="20210322 02:42:26.015"></status>
</kw>
<status status="PASS" starttime="20210322 02:42:24.392" endtime="20210322 02:42:26.015"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${response.json()["message"]}' == 'Claim confirmed successfully'</arg>
</arguments>
<status status="PASS" starttime="20210322 02:42:26.015" endtime="20210322 02:42:26.017"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10</arg>
</arguments>
<msg timestamp="20210322 02:42:36.019" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20210322 02:42:26.017" endtime="20210322 02:42:36.020"></status>
</kw>
<status status="PASS" starttime="20210322 02:42:24.391" endtime="20210322 02:42:36.020"></status>
</kw>
<kw name="${index} = 3" type="foritem">
<kw name="confirmar reivindicação de posse" library="pix_dict_confirm_claims">
<arguments>
<arg>${holder_owner}</arg>
<arg>${account_owner}</arg>
<arg>${claim_external_key}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 02:42:36.028" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 02:42:36.027" endtime="20210322 02:42:36.030"></status>
</kw>
<status status="PASS" starttime="20210322 02:42:36.025" endtime="20210322 02:42:36.030"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/claims/${claim_external_key}/confirm</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:42:36.033" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/7109199355cc4f818b322b68c216d02e/accounts/d34e3be5c75548a8a22f646d3ef31d39/claims/d82b17a489ed4880a074afedb19a4158/confirm, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 02:42:37.733" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:42:36.031" endtime="20210322 02:42:37.733"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:42:37.734" level="INFO">{'message': 'Claim confirmed successfully'}</msg>
<status status="PASS" starttime="20210322 02:42:37.733" endtime="20210322 02:42:37.735"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:42:37.736" level="INFO">721a43f65a196bc2</msg>
<status status="PASS" starttime="20210322 02:42:37.736" endtime="20210322 02:42:37.737"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 02:42:37.738" level="INFO">200</msg>
<status status="PASS" starttime="20210322 02:42:37.738" endtime="20210322 02:42:37.739"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:42:37.740" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:42:37.739" endtime="20210322 02:42:37.740"></status>
</kw>
<status status="PASS" starttime="20210322 02:42:36.022" endtime="20210322 02:42:37.740"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${response.json()["message"]}' == 'Claim confirmed successfully'</arg>
</arguments>
<msg timestamp="20210322 02:42:37.741" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20210322 02:42:37.740" endtime="20210322 02:42:37.742"></status>
</kw>
<status status="PASS" starttime="20210322 02:42:36.020" endtime="20210322 02:42:37.742"></status>
</kw>
<status status="PASS" starttime="20210322 02:42:01.111" endtime="20210322 02:42:37.742"></status>
</kw>
<kw name="buscar reivindicação de posse" library="pix_dict_get_claims">
<arguments>
<arg>${holder_claimer}</arg>
<arg>${account_claimer}</arg>
<arg>${claim_external_key}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 02:42:37.744" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 02:42:37.743" endtime="20210322 02:42:37.744"></status>
</kw>
<status status="PASS" starttime="20210322 02:42:37.743" endtime="20210322 02:42:37.745"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/claims/${claim_external_key}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:42:37.746" level="INFO">GET Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/fc159e7c8c93475cb0a35749537f4bea/accounts/843082c34c2d44c0ba19ae38a2d3e481/claims/d82b17a489ed4880a074afedb19a4158, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 02:42:38.381" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:42:37.745" endtime="20210322 02:42:38.381"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:42:38.384" level="INFO">{'id': 'd82b17a489ed4880a074afedb19a4158', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'created_at': '2021-03-22T02:42:00.018', 'updated_at': '2021-03-22T02:42:38.589', 'type': 'OWNERSHIP', 'status': 'confirmed', 'confirm_reason': 'USER_REQUESTED', 'key': {'value': 'pedro-lucasda-cunha@silva.br', 'type': 'email'}, 'claimer': {'name': 'Holder de teste', 'national_registration': '47031692822', 'type': 'individual', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': 'fc159e7c8c93475cb0a35749537f4bea', 'account': {'digital_account_id': '843082c34c2d44c0ba19ae38a2d3e481', 'routing_number': '001', 'number': '6996980629', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}}, 'donor': {'name': 'Holder de teste', 'national_registration': '32897605456', 'type': 'individual', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': '7109199355cc4f818b322b68c216d02e', 'account': {'digital_account_id': 'd34e3be5c75548a8a22f646d3ef31d39', 'routing_number': '001', 'number': '1357903972', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}}, 'completion_period_end': '2021-03-22T05:42:00.000', 'resolution_period_end': '2021-03-29T05:41:59.000', 'resource': 'pix.claim'}</msg>
<status status="PASS" starttime="20210322 02:42:38.383" endtime="20210322 02:42:38.384"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:42:38.386" level="INFO">8de9d2092b9e48c0</msg>
<status status="PASS" starttime="20210322 02:42:38.385" endtime="20210322 02:42:38.386"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 02:42:38.389" level="INFO">200</msg>
<status status="PASS" starttime="20210322 02:42:38.387" endtime="20210322 02:42:38.389"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:42:38.390" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:42:38.389" endtime="20210322 02:42:38.392"></status>
</kw>
<status status="PASS" starttime="20210322 02:42:37.742" endtime="20210322 02:42:38.392"></status>
</kw>
<kw name="validar status da reivindicação" library="asserts">
<arguments>
<arg>confirmed</arg>
</arguments>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["status"]}</arg>
<arg>${claim_status}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:42:38.393" endtime="20210322 02:42:38.394"></status>
</kw>
<status status="PASS" starttime="20210322 02:42:38.392" endtime="20210322 02:42:38.394"></status>
</kw>
<kw name="receber notificação de reivindicação" library="pix_dict_receive_claim_notification">
<arguments>
<arg>${email_pix}</arg>
<arg>${account_number_owner}</arg>
<arg>${national_registration_owner}</arg>
<arg>${holder_name_owner}</arg>
<arg>${claim_external_key}</arg>
<arg>CONFIRMED</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 02:42:38.398" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 02:42:38.397" endtime="20210322 02:42:38.399"></status>
</kw>
<status status="PASS" starttime="20210322 02:42:38.396" endtime="20210322 02:42:38.399"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:42:38.400" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 02:42:38.399" endtime="20210322 02:42:38.400"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"data": {</arg>
<arg>"claim": {</arg>
<arg>"type": "OWNERSHIP",</arg>
<arg>"key": "${key_pix}",</arg>
<arg>"key_type": "PHONE",</arg>
<arg>"claimer_account": {</arg>
<arg>"participant": "19468242",</arg>
<arg>"branch": "0001",</arg>
<arg>"account_number": "${account_number}",</arg>
<arg>"account_type": "CACC"</arg>
<arg>},</arg>
<arg>"claimer": {</arg>
<arg>"type": "NATURAL_PERSON",</arg>
<arg>"tax_id_number": "${claimer_tax_id}",</arg>
<arg>"name": "${claimer_name}"</arg>
<arg>},</arg>
<arg>"donor_participant": "19468242",</arg>
<arg>"id": "${claim_external_key}",</arg>
<arg>"status": "${claim_notification_status}",</arg>
<arg>"resolution_period_end": "2020-10-18T10:00:00.000Z",</arg>
<arg>"completion_period_end": "2020-10-25T10:00:00.000Z",</arg>
<arg>"last_modified": "2020-10-17T10:00:00.000Z"</arg>
<arg>}</arg>
<arg>}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 02:42:38.401" level="INFO">${body} = { "data": { "claim": { "type": "OWNERSHIP", "key": "pedro-lucasda-cunha@silva.br", "key_type": "PHONE", "claimer_account": { "participant": "19468242", "branch": "0001", "account_number": "1357903972"...</msg>
<status status="PASS" starttime="20210322 02:42:38.400" endtime="20210322 02:42:38.401"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/banking/internal/dict/claims</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:42:38.403" level="INFO">POST Request using : uri=/banking/internal/dict/claims, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "data": { "claim": { "type": "OWNERSHIP", "key": "pedro-lucasda-cunha@silva.br", "key_type": "PHONE", "claimer_account": { "participant": "19468242", "branch": "0001", "account_number": "1357903972", "account_type": "CACC" }, "claimer": { "type": "NATURAL_PERSON", "tax_id_number": "32897605456", "name": "Holder de teste" }, "donor_participant": "19468242", "id": "d82b17a489ed4880a074afedb19a4158", "status": "CONFIRMED", "resolution_period_end": "2020-10-18T10:00:00.000Z", "completion_period_end": "2020-10-25T10:00:00.000Z", "last_modified": "2020-10-17T10:00:00.000Z" } } } 
json=None</msg>
<msg timestamp="20210322 02:42:39.064" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:42:38.402" endtime="20210322 02:42:39.065"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 02:42:39.066" level="INFO">200</msg>
<status status="PASS" starttime="20210322 02:42:39.065" endtime="20210322 02:42:39.066"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:42:39.067" level="INFO">bfd66ee6f06d43df</msg>
<status status="PASS" starttime="20210322 02:42:39.066" endtime="20210322 02:42:39.067"></status>
</kw>
<status status="PASS" starttime="20210322 02:42:38.395" endtime="20210322 02:42:39.067"></status>
</kw>
<kw name="buscar reivindicação de posse" library="pix_dict_get_claims">
<arguments>
<arg>${holder_claimer}</arg>
<arg>${account_claimer}</arg>
<arg>${claim_external_key}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 02:42:39.070" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 02:42:39.069" endtime="20210322 02:42:39.070"></status>
</kw>
<status status="PASS" starttime="20210322 02:42:39.068" endtime="20210322 02:42:39.070"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/claims/${claim_external_key}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:42:39.072" level="INFO">GET Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/fc159e7c8c93475cb0a35749537f4bea/accounts/843082c34c2d44c0ba19ae38a2d3e481/claims/d82b17a489ed4880a074afedb19a4158, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 02:42:39.685" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:42:39.071" endtime="20210322 02:42:39.685"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:42:39.687" level="INFO">{'id': 'd82b17a489ed4880a074afedb19a4158', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'created_at': '2021-03-22T02:42:00.018', 'updated_at': '2021-03-22T02:42:39.924', 'type': 'OWNERSHIP', 'status': 'waiting_entry_ownership_confirm_to_complete', 'confirm_reason': 'USER_REQUESTED', 'key': {'value': 'pedro-lucasda-cunha@silva.br', 'type': 'email'}, 'claimer': {'name': 'Holder de teste', 'national_registration': '47031692822', 'type': 'individual', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': 'fc159e7c8c93475cb0a35749537f4bea', 'account': {'digital_account_id': '843082c34c2d44c0ba19ae38a2d3e481', 'routing_number': '001', 'number': '6996980629', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}}, 'donor': {'name': 'Holder de teste', 'national_registration': '32897605456', 'type': 'individual', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': '7109199355cc4f818b322b68c216d02e', 'account': {'digital_account_id': 'd34e3be5c75548a8a22f646d3ef31d39', 'routing_number': '001', 'number': '1357903972', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}}, 'completion_period_end': '2021-03-22T05:42:00.000', 'resolution_period_end': '2021-03-29T05:41:59.000', 'resource': 'pix.claim'}</msg>
<status status="PASS" starttime="20210322 02:42:39.686" endtime="20210322 02:42:39.687"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:42:39.689" level="INFO">1f665f0c5fbd4814</msg>
<status status="PASS" starttime="20210322 02:42:39.688" endtime="20210322 02:42:39.689"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 02:42:39.690" level="INFO">200</msg>
<status status="PASS" starttime="20210322 02:42:39.689" endtime="20210322 02:42:39.690"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:42:39.691" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:42:39.690" endtime="20210322 02:42:39.691"></status>
</kw>
<status status="PASS" starttime="20210322 02:42:39.067" endtime="20210322 02:42:39.691"></status>
</kw>
<kw name="validar status da reivindicação" library="asserts">
<arguments>
<arg>waiting_entry_ownership_confirm_to_complete</arg>
</arguments>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["status"]}</arg>
<arg>${claim_status}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:42:39.692" endtime="20210322 02:42:39.693"></status>
</kw>
<status status="PASS" starttime="20210322 02:42:39.691" endtime="20210322 02:42:39.693"></status>
</kw>
<kw name="buscar verification code" library="pix_dict_verification_code">
<arguments>
<arg>${holder_claimer}</arg>
<arg>${account_claimer}</arg>
<arg>${entry_claimer}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 02:42:39.695" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 02:42:39.695" endtime="20210322 02:42:39.696"></status>
</kw>
<status status="PASS" starttime="20210322 02:42:39.694" endtime="20210322 02:42:39.696"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/admin/internal_operation/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries/${entry_external_key}/code</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:42:39.696" level="INFO">GET Request using : uri=/admin/internal_operation/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/fc159e7c8c93475cb0a35749537f4bea/accounts/843082c34c2d44c0ba19ae38a2d3e481/entries/5e35b2c344ae4e88b5166262dc5d4a77/code, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 02:42:40.342" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:42:39.696" endtime="20210322 02:42:40.342"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:42:40.345" level="INFO">{'code': '7814'}</msg>
<status status="PASS" starttime="20210322 02:42:40.343" endtime="20210322 02:42:40.345"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:42:40.347" level="INFO">71829ccebd39566a</msg>
<status status="PASS" starttime="20210322 02:42:40.346" endtime="20210322 02:42:40.347"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 02:42:40.349" level="INFO">200</msg>
<status status="PASS" starttime="20210322 02:42:40.348" endtime="20210322 02:42:40.349"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:42:40.351" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:42:40.350" endtime="20210322 02:42:40.351"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["code"]}</arg>
</arguments>
<assign>
<var>${verification_code}</var>
</assign>
<msg timestamp="20210322 02:42:40.354" level="INFO">${verification_code} = 7814</msg>
<status status="PASS" starttime="20210322 02:42:40.352" endtime="20210322 02:42:40.354"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${verification_code}</arg>
</arguments>
<msg timestamp="20210322 02:42:40.356" level="INFO">${verification_code} = 7814</msg>
<status status="PASS" starttime="20210322 02:42:40.355" endtime="20210322 02:42:40.356"></status>
</kw>
<status status="PASS" starttime="20210322 02:42:39.694" endtime="20210322 02:42:40.356"></status>
</kw>
<kw name="confirmar propriedade da chave pix" library="pix_dict_confirm_propriety">
<arguments>
<arg>${verification_code}</arg>
<arg>${holder_claimer}</arg>
<arg>${account_claimer}</arg>
<arg>${entry_claimer}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 02:42:40.360" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 02:42:40.359" endtime="20210322 02:42:40.360"></status>
</kw>
<status status="PASS" starttime="20210322 02:42:40.358" endtime="20210322 02:42:40.361"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:42:40.362" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 02:42:40.361" endtime="20210322 02:42:40.362"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"code": "${verification_code}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 02:42:40.363" level="INFO">${body} = { "code": "7814" }</msg>
<status status="PASS" starttime="20210322 02:42:40.363" endtime="20210322 02:42:40.363"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries/${entry_external_key}/ownership</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:42:40.365" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/fc159e7c8c93475cb0a35749537f4bea/accounts/843082c34c2d44c0ba19ae38a2d3e481/entries/5e35b2c344ae4e88b5166262dc5d4a77/ownership, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "code": "7814" } 
json=None</msg>
<msg timestamp="20210322 02:42:42.112" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:42:40.364" endtime="20210322 02:42:42.113"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:42:42.115" level="INFO">{'id': '5e35b2c344ae4e88b5166262dc5d4a77', 'status': 'active', 'created_at': '2021-03-22T02:41:56.120', 'updated_at': '2021-03-22T02:42:42.969', 'key': {'value': 'pedro-lucasda-cunha@silva.br', 'type': 'email'}, 'account': {'id': '843082c34c2d44c0ba19ae38a2d3e481', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': 'fc159e7c8c93475cb0a35749537f4bea', 'owner': {'name': 'Holder de teste', 'national_registration': '47031692822', 'type': 'individual'}, 'routing_number': '001', 'number': '6996980629', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}, 'resource': 'pix.entry'}</msg>
<status status="PASS" starttime="20210322 02:42:42.114" endtime="20210322 02:42:42.116"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:42:42.118" level="INFO">7646564e2dd43b96</msg>
<status status="PASS" starttime="20210322 02:42:42.117" endtime="20210322 02:42:42.118"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 02:42:42.119" level="INFO">201</msg>
<status status="PASS" starttime="20210322 02:42:42.118" endtime="20210322 02:42:42.119"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:42:42.121" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:42:42.120" endtime="20210322 02:42:42.121"></status>
</kw>
<status status="PASS" starttime="20210322 02:42:40.357" endtime="20210322 02:42:42.122"></status>
</kw>
<kw name="buscar reivindicação de posse" library="pix_dict_get_claims">
<arguments>
<arg>${holder_claimer}</arg>
<arg>${account_claimer}</arg>
<arg>${claim_external_key}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 02:42:42.126" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 02:42:42.125" endtime="20210322 02:42:42.127"></status>
</kw>
<status status="PASS" starttime="20210322 02:42:42.124" endtime="20210322 02:42:42.127"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/claims/${claim_external_key}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:42:42.128" level="INFO">GET Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/fc159e7c8c93475cb0a35749537f4bea/accounts/843082c34c2d44c0ba19ae38a2d3e481/claims/d82b17a489ed4880a074afedb19a4158, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 02:42:42.751" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:42:42.127" endtime="20210322 02:42:42.751"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:42:42.752" level="INFO">{'id': 'd82b17a489ed4880a074afedb19a4158', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'created_at': '2021-03-22T02:42:00.018', 'updated_at': '2021-03-22T02:42:42.969', 'type': 'OWNERSHIP', 'status': 'completed', 'confirm_reason': 'USER_REQUESTED', 'key': {'value': 'pedro-lucasda-cunha@silva.br', 'type': 'email'}, 'claimer': {'name': 'Holder de teste', 'national_registration': '47031692822', 'type': 'individual', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': 'fc159e7c8c93475cb0a35749537f4bea', 'account': {'digital_account_id': '843082c34c2d44c0ba19ae38a2d3e481', 'routing_number': '001', 'number': '6996980629', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}}, 'donor': {'name': 'Holder de teste', 'national_registration': '32897605456', 'type': 'individual', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': '7109199355cc4f818b322b68c216d02e', 'account': {'digital_account_id': 'd34e3be5c75548a8a22f646d3ef31d39', 'routing_number': '001', 'number': '1357903972', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}}, 'completion_period_end': '2021-03-22T05:42:00.000', 'resolution_period_end': '2021-03-29T05:41:59.000', 'resource': 'pix.claim'}</msg>
<status status="PASS" starttime="20210322 02:42:42.752" endtime="20210322 02:42:42.752"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:42:42.753" level="INFO">3b3cffa27449a4e0</msg>
<status status="PASS" starttime="20210322 02:42:42.752" endtime="20210322 02:42:42.753"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 02:42:42.754" level="INFO">200</msg>
<status status="PASS" starttime="20210322 02:42:42.753" endtime="20210322 02:42:42.754"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:42:42.755" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:42:42.754" endtime="20210322 02:42:42.755"></status>
</kw>
<status status="PASS" starttime="20210322 02:42:42.122" endtime="20210322 02:42:42.755"></status>
</kw>
<kw name="validar status da reivindicação" library="asserts">
<arguments>
<arg>completed</arg>
</arguments>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["status"]}</arg>
<arg>${claim_status}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:42:42.756" endtime="20210322 02:42:42.756"></status>
</kw>
<status status="PASS" starttime="20210322 02:42:42.755" endtime="20210322 02:42:42.757"></status>
</kw>
<doc>Fluxo Básico</doc>
<tags>
<tag>regression_test</tag>
<tag>smoke_test</tag>
</tags>
<status status="PASS" starttime="20210322 02:41:44.909" endtime="20210322 02:42:42.757" critical="yes"></status>
</test>
<doc>Funcionalidade: Criar Reivindicação de Posse
Eu, como um Holder, portador de uma conta ativa em Banking
Desejo aceitar uma reivindicação de posse de uma chave de endereçamento</doc>
<status status="PASS" starttime="20210322 02:41:10.781" endtime="20210322 02:42:42.757"></status>
</suite>
<status status="PASS" starttime="20210322 02:40:53.150" endtime="20210322 02:42:42.759"></status>
</suite>
<status status="PASS" starttime="20210322 02:39:02.695" endtime="20210322 02:42:42.762"></status>
</suite>
<statistics>
<total>
<stat pass="23" fail="0">Critical Tests</stat>
<stat pass="23" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="16" fail="0">regression_test</stat>
<stat pass="23" fail="0">smoke_test</stat>
</tag>
<suite>
<stat pass="23" fail="0" id="s1" name="Pix-Dict">Pix-Dict</stat>
<stat pass="20" fail="0" id="s1-s1" name="Diretorio">Pix-Dict.Diretorio</stat>
<stat pass="5" fail="0" id="s1-s1-s1" name="Buscar Chave de Endereçamento">Pix-Dict.Diretorio.Buscar Chave de Endereçamento</stat>
<stat pass="5" fail="0" id="s1-s1-s2" name="Confirmação de Propriedade">Pix-Dict.Diretorio.Confirmação de Propriedade</stat>
<stat pass="5" fail="0" id="s1-s1-s3" name="Criar Chave de Endereçamento">Pix-Dict.Diretorio.Criar Chave de Endereçamento</stat>
<stat pass="5" fail="0" id="s1-s1-s4" name="Excluir Chave de Endereçamento">Pix-Dict.Diretorio.Excluir Chave de Endereçamento</stat>
<stat pass="3" fail="0" id="s1-s2" name="Reivindicacao">Pix-Dict.Reivindicacao</stat>
<stat pass="1" fail="0" id="s1-s2-s1" name="Cancelar Reivindicação de Posse">Pix-Dict.Reivindicacao.Cancelar Reivindicação de Posse</stat>
<stat pass="2" fail="0" id="s1-s2-s2" name="Criar Reivindicação de Posse">Pix-Dict.Reivindicacao.Criar Reivindicação de Posse</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>

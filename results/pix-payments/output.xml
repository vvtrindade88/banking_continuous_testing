<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.8.1 on win32)" generated="20210322 20:01:31.517" rpa="false">
<suite id="s1" name="Confirmar Pagamento PIX" source="C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\tests\pix-payments\envio\Confirmar Pagamento PIX.robot">
<test id="s1-t1" name="Cenário: Confirmar pagamento PIX de para holder individual utilizando dados completos da conta de destino">
<kw name="criar chave pix ativa" library="pix_dict_create_active_key_pix">
<arguments>
<arg>holder_type=individual</arg>
<arg>pix_type=email</arg>
</arguments>
<kw name="Random Number" library="FakerLibrary">
<doc>Returns a random number with 1 digit (default, when digits==None),
a random number with 0 to given number of digits, or a random number
with given number to given number of digits (when ``fix_len==True``).</doc>
<arguments>
<arg>digits=8</arg>
<arg>fix_len=True</arg>
</arguments>
<assign>
<var>${phone}</var>
</assign>
<msg timestamp="20210322 20:01:32.083" level="INFO">${phone} = 17031091</msg>
<status status="PASS" starttime="20210322 20:01:32.083" endtime="20210322 20:01:32.083"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>+55219${phone}</arg>
</arguments>
<assign>
<var>${phone_pix}</var>
</assign>
<msg timestamp="20210322 20:01:32.083" level="INFO">${phone_pix} = +5521917031091</msg>
<status status="PASS" starttime="20210322 20:01:32.083" endtime="20210322 20:01:32.083"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${phone_pix}</arg>
</arguments>
<msg timestamp="20210322 20:01:32.084" level="INFO">${phone_pix} = +5521917031091</msg>
<status status="PASS" starttime="20210322 20:01:32.084" endtime="20210322 20:01:32.084"></status>
</kw>
<kw name="Email" library="FakerLibrary">
<assign>
<var>${email_pix}</var>
</assign>
<msg timestamp="20210322 20:01:32.085" level="INFO">${email_pix} = fernandacaldeira@yahoo.com.br</msg>
<status status="PASS" starttime="20210322 20:01:32.084" endtime="20210322 20:01:32.085"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${email_pix}</arg>
</arguments>
<msg timestamp="20210322 20:01:32.085" level="INFO">${email_pix} = fernandacaldeira@yahoo.com.br</msg>
<status status="PASS" starttime="20210322 20:01:32.085" endtime="20210322 20:01:32.085"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${holder_type}' == 'business'</arg>
<arg>criar holder business ativo</arg>
<arg>ELSE IF</arg>
<arg>'${holder_type}' == 'individual'</arg>
<arg>criar holder individual ativo</arg>
</arguments>
<kw name="criar holder individual ativo" library="accreditation_create_holder_active">
<kw name="conectar accreditation" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accreditation</arg>
<arg>url=${accreditation_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 20:01:32.086" level="INFO">Creating Session using : alias=accreditation, url=https://banking-accreditation-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 20:01:32.086" endtime="20210322 20:01:32.087"></status>
</kw>
<status status="PASS" starttime="20210322 20:01:32.086" endtime="20210322 20:01:32.087"></status>
</kw>
<kw name="Cpf" library="FakerLibrary">
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 20:01:32.087" level="INFO">${national_registration} = 471.029.583-23</msg>
<status status="PASS" starttime="20210322 20:01:32.087" endtime="20210322 20:01:32.087"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${national_registration}</arg>
<arg>.</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 20:01:32.087" level="INFO">${national_registration} = 471029583-23</msg>
<status status="PASS" starttime="20210322 20:01:32.087" endtime="20210322 20:01:32.087"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${national_registration}</arg>
<arg>-</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 20:01:32.088" level="INFO">${national_registration} = 47102958323</msg>
<status status="PASS" starttime="20210322 20:01:32.088" endtime="20210322 20:01:32.088"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${national_registration}</arg>
</arguments>
<msg timestamp="20210322 20:01:32.088" level="INFO">${national_registration} = 47102958323</msg>
<status status="PASS" starttime="20210322 20:01:32.088" endtime="20210322 20:01:32.088"></status>
</kw>
<kw name="Rg" library="FakerLibrary">
<doc>Brazilian RG, return plain numbers.
Check:  https://www.ngmatematica.com/2014/02/como-determinar-o-digito-verificador-do.html</doc>
<assign>
<var>${identity_card}</var>
</assign>
<msg timestamp="20210322 20:01:32.089" level="INFO">${identity_card} = 415876035</msg>
<status status="PASS" starttime="20210322 20:01:32.088" endtime="20210322 20:01:32.089"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${identity_card}</arg>
</arguments>
<msg timestamp="20210322 20:01:32.089" level="INFO">${identity_card} = 415876035</msg>
<status status="PASS" starttime="20210322 20:01:32.089" endtime="20210322 20:01:32.089"></status>
</kw>
<kw name="criar holder individual" library="accreditation_post_holder_individual">
<arguments>
<arg>holder_type=individual</arg>
<arg>holder_name=${holder_name}</arg>
<arg>email=${email}</arg>
<arg>national_registration=${national_registration}</arg>
<arg>revenue=${revenue}</arg>
<arg>birthday=${birthday}</arg>
<arg>mothers_name=${mothers_name}</arg>
<arg>identity_card=${identity_card}</arg>
<arg>pep=false</arg>
<arg>cbo=${cbo}</arg>
</arguments>
<kw name="conectar accreditation" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accreditation</arg>
<arg>url=${accreditation_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 20:01:32.090" level="INFO">Creating Session using : alias=accreditation, url=https://banking-accreditation-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 20:01:32.090" endtime="20210322 20:01:32.090"></status>
</kw>
<status status="PASS" starttime="20210322 20:01:32.090" endtime="20210322 20:01:32.091"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_type}</arg>
</arguments>
<msg timestamp="20210322 20:01:32.092" level="INFO">${holder_type} = individual</msg>
<status status="PASS" starttime="20210322 20:01:32.091" endtime="20210322 20:01:32.092"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_name}</arg>
</arguments>
<msg timestamp="20210322 20:01:32.092" level="INFO">${holder_name} = Holder de teste</msg>
<status status="PASS" starttime="20210322 20:01:32.092" endtime="20210322 20:01:32.092"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 20:01:32.092" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 20:01:32.092" endtime="20210322 20:01:32.092"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "${holder_type}",</arg>
<arg>"name": "${holder_name}",</arg>
<arg>"email": "${email}",</arg>
<arg>"national_registration": "${national_registration}",</arg>
<arg>"revenue": ${revenue},</arg>
<arg>"birthday": "${birthday}",</arg>
<arg>"mothers_name": "${mothers_name}",</arg>
<arg>"identity_card": "${identity_card}",</arg>
<arg>"pep": false,</arg>
<arg>"cbo": ${cbo}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 20:01:32.093" level="INFO">${body} = { "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "47102958323", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder",...</msg>
<status status="PASS" starttime="20210322 20:01:32.092" endtime="20210322 20:01:32.093"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 20:01:32.093" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "47102958323", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder", "identity_card": "415876035", "pep": false, "cbo": 821450 } 
json=None</msg>
<msg timestamp="20210322 20:01:32.793" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 20:01:32.093" endtime="20210322 20:01:32.793"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 20:01:32.794" level="INFO">{'id': '684cfaa66a3a40f6b748c6ce5c505d2b', 'name': 'Holder de teste', 'revenue': 5500.0, 'email': 'teste@teste.com.br', 'status': 'waiting_info_and_documents', 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'marketplace_name': 'Marketplace de Teste', 'created_at': '2021-03-22T20:01:33.986192', 'updated_at': '2021-03-22T20:01:33.986194', 'type': 'individual', 'national_registration': '47102958323', 'birthday': '1988-04-23', 'mothers_name': 'Mãe do Holder', 'identity_card': '415876035', 'pep': False, 'cbo': '821450', '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/684cfaa66a3a40f6b748c6ce5c505d2b', 'type': 'GET'}, 'phones': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/684cfaa66a3a40f6b748c6ce5c505d2b/phones', 'type': 'GET'}, 'addresses': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/684cfaa66a3a40f6b748c6ce5c505d2b/addresses', 'type': 'GET'}, 'documents': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/684cfaa66a3a40f6b748c6ce5c505d2b/documents', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 20:01:32.793" endtime="20210322 20:01:32.794"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 20:01:32.794" level="INFO">26138dee68db6e6c</msg>
<status status="PASS" starttime="20210322 20:01:32.794" endtime="20210322 20:01:32.794"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${body}</arg>
</arguments>
<msg timestamp="20210322 20:01:32.795" level="INFO">{ "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "47102958323", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder", "identity_card": "415876035", "pep": false, "cbo": 821450 }</msg>
<status status="PASS" starttime="20210322 20:01:32.795" endtime="20210322 20:01:32.795"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 20:01:32.795" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 20:01:32.795" endtime="20210322 20:01:32.795"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${holder_external_key}</var>
</assign>
<msg timestamp="20210322 20:01:32.796" level="INFO">${holder_external_key} = 684cfaa66a3a40f6b748c6ce5c505d2b</msg>
<status status="PASS" starttime="20210322 20:01:32.796" endtime="20210322 20:01:32.796"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_external_key}</arg>
</arguments>
<msg timestamp="20210322 20:01:32.797" level="INFO">${holder_external_key} = 684cfaa66a3a40f6b748c6ce5c505d2b</msg>
<status status="PASS" starttime="20210322 20:01:32.796" endtime="20210322 20:01:32.798"></status>
</kw>
<status status="PASS" starttime="20210322 20:01:32.089" endtime="20210322 20:01:32.798"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_name}</arg>
</arguments>
<msg timestamp="20210322 20:01:32.798" level="INFO">${holder_name} = Holder de teste</msg>
<status status="PASS" starttime="20210322 20:01:32.798" endtime="20210322 20:01:32.798"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 20:01:32.799" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 20:01:32.798" endtime="20210322 20:01:32.799"></status>
</kw>
<kw name="criar holder phone" library="accreditation_post_holder_phone">
<arguments>
<arg>21</arg>
<arg>51</arg>
<arg>996221236</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 20:01:32.799" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 20:01:32.799" endtime="20210322 20:01:32.799"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"area_code": "${phone_area_code}",</arg>
<arg>"country_code": "${phone_country_code}",</arg>
<arg>"number": "${phone_number}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 20:01:32.800" level="INFO">${body} = { "area_code": "21", "country_code": "51", "number": "996221236" }</msg>
<status status="PASS" starttime="20210322 20:01:32.799" endtime="20210322 20:01:32.800"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/phones</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 20:01:32.800" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/684cfaa66a3a40f6b748c6ce5c505d2b/phones, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "area_code": "21", "country_code": "51", "number": "996221236" } 
json=None</msg>
<msg timestamp="20210322 20:01:33.059" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 20:01:32.800" endtime="20210322 20:01:33.060"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 20:01:33.060" level="INFO">{'id': '7915affb1e5f463db94f57eed71183d3', 'area_code': '21', 'country_code': '51', 'number': '996221236', 'main': True, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/684cfaa66a3a40f6b748c6ce5c505d2b/phones/7915affb1e5f463db94f57eed71183d3', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/684cfaa66a3a40f6b748c6ce5c505d2b', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 20:01:33.060" endtime="20210322 20:01:33.060"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 20:01:33.061" level="INFO">25b18079895536fc</msg>
<status status="PASS" starttime="20210322 20:01:33.061" endtime="20210322 20:01:33.061"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 20:01:33.061" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 20:01:33.061" endtime="20210322 20:01:33.061"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${phone_external_key}</var>
</assign>
<msg timestamp="20210322 20:01:33.062" level="INFO">${phone_external_key} = 7915affb1e5f463db94f57eed71183d3</msg>
<status status="PASS" starttime="20210322 20:01:33.062" endtime="20210322 20:01:33.062"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${phone_external_key}</arg>
</arguments>
<msg timestamp="20210322 20:01:33.063" level="INFO">${phone_external_key} = 7915affb1e5f463db94f57eed71183d3</msg>
<status status="PASS" starttime="20210322 20:01:33.062" endtime="20210322 20:01:33.063"></status>
</kw>
<status status="PASS" starttime="20210322 20:01:32.799" endtime="20210322 20:01:33.063"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 20:01:33.063" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 20:01:33.063" endtime="20210322 20:01:33.063"></status>
</kw>
<kw name="criar holder address" library="accreditation_post_holder_address">
<arguments>
<arg>Rio de Janeiro</arg>
<arg>Rio de Janeiro</arg>
<arg>Brasil</arg>
<arg>Bairro de Testes</arg>
<arg>Rua de Testes</arg>
<arg>90</arg>
<arg>apto 200</arg>
<arg>21550987</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 20:01:33.064" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 20:01:33.064" endtime="20210322 20:01:33.064"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"city": "${city}",</arg>
<arg>"state": "${state}",</arg>
<arg>"country": "${country}",</arg>
<arg>"neighborhood": "${neighborhood}",</arg>
<arg>"street": "${street}",</arg>
<arg>"number": "${number}",</arg>
<arg>"complement": "${complement}",</arg>
<arg>"postal_code": "${postal_code}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 20:01:33.065" level="INFO">${body} = { "city": "Rio de Janeiro", "state": "Rio de Janeiro", "country": "Brasil", "neighborhood": "Bairro de Testes", "street": "Rua de Testes", "number": "90", "complement": "apto 200", "postal_code": "215...</msg>
<status status="PASS" starttime="20210322 20:01:33.064" endtime="20210322 20:01:33.065"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/addresses</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 20:01:33.066" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/684cfaa66a3a40f6b748c6ce5c505d2b/addresses, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "city": "Rio de Janeiro", "state": "Rio de Janeiro", "country": "Brasil", "neighborhood": "Bairro de Testes", "street": "Rua de Testes", "number": "90", "complement": "apto 200", "postal_code": "21550987" } 
json=None</msg>
<msg timestamp="20210322 20:01:33.283" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 20:01:33.065" endtime="20210322 20:01:33.283"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 20:01:33.284" level="INFO">{'id': 'df4082cd64d246a18c27e2c50c5395fa', 'street': 'Rua de Testes', 'number': '90', 'city': 'Rio de Janeiro', 'complement': 'apto 200', 'state': 'Rio de Janeiro', 'neighborhood': 'Bairro de Testes', 'postal_code': '21550987', 'country': 'Brasil', 'main': True, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/684cfaa66a3a40f6b748c6ce5c505d2b/addresses/df4082cd64d246a18c27e2c50c5395fa', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/684cfaa66a3a40f6b748c6ce5c505d2b', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 20:01:33.284" endtime="20210322 20:01:33.284"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 20:01:33.286" level="INFO">3063cd951a6368d2</msg>
<status status="PASS" starttime="20210322 20:01:33.286" endtime="20210322 20:01:33.286"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 20:01:33.286" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 20:01:33.286" endtime="20210322 20:01:33.286"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${address_external_key}</var>
</assign>
<msg timestamp="20210322 20:01:33.287" level="INFO">${address_external_key} = df4082cd64d246a18c27e2c50c5395fa</msg>
<status status="PASS" starttime="20210322 20:01:33.286" endtime="20210322 20:01:33.287"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${address_external_key}</arg>
</arguments>
<msg timestamp="20210322 20:01:33.287" level="INFO">${address_external_key} = df4082cd64d246a18c27e2c50c5395fa</msg>
<status status="PASS" starttime="20210322 20:01:33.287" endtime="20210322 20:01:33.287"></status>
</kw>
<status status="PASS" starttime="20210322 20:01:33.063" endtime="20210322 20:01:33.287"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 20:01:33.288" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 20:01:33.287" endtime="20210322 20:01:33.288"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>SELFIE</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 20:01:33.289" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 20:01:33.288" endtime="20210322 20:01:33.289"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 20:01:33.289" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 20:01:33.291" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 20:01:33.289" endtime="20210322 20:01:33.291"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 20:01:33.292" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/684cfaa66a3a40f6b748c6ce5c505d2b/documents?type=SELFIE, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 20:01:33.610" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 20:01:33.291" endtime="20210322 20:01:33.610"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 20:01:33.611" level="INFO">{'id': '889904082ecc4559994a8e82028a5c6a', 'document_type': 'selfie', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/684cfaa66a3a40f6b748c6ce5c505d2b/documents/889904082ecc4559994a8e82028a5c6a', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/684cfaa66a3a40f6b748c6ce5c505d2b', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/684cfaa66a3a40f6b748c6ce5c505d2b/documents/889904082ecc4559994a8e82028a5c6a/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 20:01:33.610" endtime="20210322 20:01:33.611"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 20:01:33.611" level="INFO">672b8e0e50a9a988</msg>
<status status="PASS" starttime="20210322 20:01:33.611" endtime="20210322 20:01:33.611"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 20:01:33.612" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 20:01:33.612" endtime="20210322 20:01:33.612"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 20:01:33.613" level="INFO">${document_external_key} = 889904082ecc4559994a8e82028a5c6a</msg>
<status status="PASS" starttime="20210322 20:01:33.612" endtime="20210322 20:01:33.613"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 20:01:33.614" level="INFO">${document_external_key} = 889904082ecc4559994a8e82028a5c6a</msg>
<status status="PASS" starttime="20210322 20:01:33.613" endtime="20210322 20:01:33.614"></status>
</kw>
<status status="PASS" starttime="20210322 20:01:33.288" endtime="20210322 20:01:33.614"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 20:01:33.614" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 20:01:33.614" endtime="20210322 20:01:33.614"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>RG_FRENTE</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 20:01:33.615" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 20:01:33.615" endtime="20210322 20:01:33.615"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 20:01:33.616" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 20:01:33.617" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 20:01:33.616" endtime="20210322 20:01:33.617"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 20:01:33.618" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/684cfaa66a3a40f6b748c6ce5c505d2b/documents?type=RG_FRENTE, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 20:01:33.954" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 20:01:33.618" endtime="20210322 20:01:33.954"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 20:01:33.955" level="INFO">{'id': '7bd8fedd6d2e4d64acda5fdf0e9d35d9', 'document_type': 'rg_frente', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/684cfaa66a3a40f6b748c6ce5c505d2b/documents/7bd8fedd6d2e4d64acda5fdf0e9d35d9', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/684cfaa66a3a40f6b748c6ce5c505d2b', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/684cfaa66a3a40f6b748c6ce5c505d2b/documents/7bd8fedd6d2e4d64acda5fdf0e9d35d9/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 20:01:33.954" endtime="20210322 20:01:33.955"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 20:01:33.955" level="INFO">34e9ba35d34c1d11</msg>
<status status="PASS" starttime="20210322 20:01:33.955" endtime="20210322 20:01:33.955"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 20:01:33.956" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 20:01:33.956" endtime="20210322 20:01:33.956"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 20:01:33.957" level="INFO">${document_external_key} = 7bd8fedd6d2e4d64acda5fdf0e9d35d9</msg>
<status status="PASS" starttime="20210322 20:01:33.956" endtime="20210322 20:01:33.957"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 20:01:33.958" level="INFO">${document_external_key} = 7bd8fedd6d2e4d64acda5fdf0e9d35d9</msg>
<status status="PASS" starttime="20210322 20:01:33.957" endtime="20210322 20:01:33.958"></status>
</kw>
<status status="PASS" starttime="20210322 20:01:33.614" endtime="20210322 20:01:33.958"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 20:01:33.958" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 20:01:33.958" endtime="20210322 20:01:33.958"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>RG_VERSO</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 20:01:33.959" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 20:01:33.959" endtime="20210322 20:01:33.959"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 20:01:33.960" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 20:01:33.961" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 20:01:33.960" endtime="20210322 20:01:33.961"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 20:01:33.962" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/684cfaa66a3a40f6b748c6ce5c505d2b/documents?type=RG_VERSO, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 20:01:34.230" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 20:01:33.961" endtime="20210322 20:01:34.230"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 20:01:34.231" level="INFO">{'id': '99bea5c4d23248a99b223625683596e7', 'document_type': 'rg_verso', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/684cfaa66a3a40f6b748c6ce5c505d2b/documents/99bea5c4d23248a99b223625683596e7', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/684cfaa66a3a40f6b748c6ce5c505d2b', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/684cfaa66a3a40f6b748c6ce5c505d2b/documents/99bea5c4d23248a99b223625683596e7/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 20:01:34.230" endtime="20210322 20:01:34.231"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 20:01:34.232" level="INFO">1f73292e842ea087</msg>
<status status="PASS" starttime="20210322 20:01:34.231" endtime="20210322 20:01:34.232"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 20:01:34.232" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 20:01:34.232" endtime="20210322 20:01:34.232"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 20:01:34.233" level="INFO">${document_external_key} = 99bea5c4d23248a99b223625683596e7</msg>
<status status="PASS" starttime="20210322 20:01:34.232" endtime="20210322 20:01:34.233"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 20:01:34.233" level="INFO">${document_external_key} = 99bea5c4d23248a99b223625683596e7</msg>
<status status="PASS" starttime="20210322 20:01:34.233" endtime="20210322 20:01:34.233"></status>
</kw>
<status status="PASS" starttime="20210322 20:01:33.959" endtime="20210322 20:01:34.234"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 20:01:34.234" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 20:01:34.234" endtime="20210322 20:01:34.234"></status>
</kw>
<kw name="solicitar aprovação do holder" library="accreditation_request_approval">
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 20:01:34.235" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 20:01:34.235" endtime="20210322 20:01:34.235"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/approval</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 20:01:34.235" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/684cfaa66a3a40f6b748c6ce5c505d2b/approval, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data=None 
json=None</msg>
<msg timestamp="20210322 20:01:34.544" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 20:01:34.235" endtime="20210322 20:01:34.544"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 20:01:34.545" level="INFO">{'message': 'Approval request accepted successfully. Processing analysis'}</msg>
<status status="PASS" starttime="20210322 20:01:34.545" endtime="20210322 20:01:34.545"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 20:01:34.546" level="INFO">573ecab821874061</msg>
<status status="PASS" starttime="20210322 20:01:34.545" endtime="20210322 20:01:34.546"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 20:01:34.546" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 20:01:34.546" endtime="20210322 20:01:34.546"></status>
</kw>
<status status="PASS" starttime="20210322 20:01:34.234" endtime="20210322 20:01:34.547"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 20:01:34.547" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 20:01:34.547" endtime="20210322 20:01:34.547"></status>
</kw>
<kw name="recebendo notificação de aprovação" library="accreditation_risk_notification">
<kw name="Uuid 4" library="FakerLibrary">
<doc>Generates a random UUID4 string.
:param cast_to: Specify what type the UUID should be cast to. Default is `str`
:type cast_to: callable</doc>
<assign>
<var>${assessment_id}</var>
</assign>
<msg timestamp="20210322 20:01:34.548" level="INFO">${assessment_id} = 525223d6-f9ba-47c3-b4fb-275502f0a297</msg>
<status status="PASS" starttime="20210322 20:01:34.548" endtime="20210322 20:01:34.548"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>year</arg>
</arguments>
<assign>
<var>${year}</var>
</assign>
<msg timestamp="20210322 20:01:34.549" level="INFO">${year} = 2021</msg>
<status status="PASS" starttime="20210322 20:01:34.548" endtime="20210322 20:01:34.549"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>month</arg>
</arguments>
<assign>
<var>${month}</var>
</assign>
<msg timestamp="20210322 20:01:34.549" level="INFO">${month} = 03</msg>
<status status="PASS" starttime="20210322 20:01:34.549" endtime="20210322 20:01:34.549"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>day</arg>
</arguments>
<assign>
<var>${day}</var>
</assign>
<msg timestamp="20210322 20:01:34.550" level="INFO">${day} = 22</msg>
<status status="PASS" starttime="20210322 20:01:34.549" endtime="20210322 20:01:34.550"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 20:01:34.550" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 20:01:34.550" endtime="20210322 20:01:34.550"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "risk.assessment.result",</arg>
<arg>"resource": "business.holder",</arg>
<arg>"created_at": "${year}-${month}-${day} 15:28:56.747Z",</arg>
<arg>"marketplace_id": "${marketplace_external_key}",</arg>
<arg>"object": {</arg>
<arg>"result": "APPROVED",</arg>
<arg>"holder_id": "${holder_external_key}",</arg>
<arg>"applicant_id": "${application_external_key}",</arg>
<arg>"assessment_id": "${assessment_id}"</arg>
<arg>}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 20:01:34.551" level="INFO">${body} = { "type": "risk.assessment.result", "resource": "business.holder", "created_at": "2021-03-22 15:28:56.747Z", "marketplace_id": "f71a8951368a4cc085cf7875ff44e61c", "object": { "result": "APPROVED", "ho...</msg>
<status status="PASS" starttime="20210322 20:01:34.550" endtime="20210322 20:01:34.551"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/admin/internal_operation/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/registration/approval</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 20:01:34.552" level="INFO">POST Request using : uri=/admin/internal_operation/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/684cfaa66a3a40f6b748c6ce5c505d2b/registration/approval, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "risk.assessment.result", "resource": "business.holder", "created_at": "2021-03-22 15:28:56.747Z", "marketplace_id": "f71a8951368a4cc085cf7875ff44e61c", "object": { "result": "APPROVED", "holder_id": "684cfaa66a3a40f6b748c6ce5c505d2b", "applicant_id": "bcc25a6751c14b52af1340d40dba78c5", "assessment_id": "525223d6-f9ba-47c3-b4fb-275502f0a297" } } 
json=None</msg>
<msg timestamp="20210322 20:01:34.787" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 20:01:34.551" endtime="20210322 20:01:34.787"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 20:01:34.788" level="INFO">{'message': 'Holder approved successfully'}</msg>
<status status="PASS" starttime="20210322 20:01:34.788" endtime="20210322 20:01:34.788"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 20:01:34.789" level="INFO">c59f142d914fd23f</msg>
<status status="PASS" starttime="20210322 20:01:34.789" endtime="20210322 20:01:34.789"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 20:01:34.790" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 20:01:34.789" endtime="20210322 20:01:34.790"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 20:01:34.790" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 20:01:34.790" endtime="20210322 20:01:34.790"></status>
</kw>
<status status="PASS" starttime="20210322 20:01:34.547" endtime="20210322 20:01:34.790"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 20:01:34.791" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 20:01:34.791" endtime="20210322 20:01:34.791"></status>
</kw>
<kw name="buscar account por holder" library="accounts_get_accounts_by_holder">
<kw name="conectar accounts" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accounts</arg>
<arg>url=${account_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 20:01:34.792" level="INFO">Creating Session using : alias=accounts, url=https://banking-accounts-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 20:01:34.792" endtime="20210322 20:01:34.792"></status>
</kw>
<status status="PASS" starttime="20210322 20:01:34.792" endtime="20210322 20:01:34.793"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accounts</arg>
<arg>/marketplaces/${marketplace_external_key}/holders/${holder_external_key}/accounts</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 20:01:34.793" level="INFO">GET Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/holders/684cfaa66a3a40f6b748c6ce5c505d2b/accounts, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 20:01:35.417" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 20:01:34.793" endtime="20210322 20:01:35.417"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 20:01:35.420" level="INFO">{'items': [{'id': '1e4d20d77f574a779ca3f31c2be72a83', 'holder': '684cfaa66a3a40f6b748c6ce5c505d2b', 'balance': '0.00', 'currency': 'BRL', 'routing_number': '001', 'number': '1162721615', 'status': 'active', 'metadata': {}, 'created_at': '2021-03-22T23:01:35.998573', 'updated_at': '2021-03-22T23:01:35.998573', 'primary': True, 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'uri': '/v2/marketplaces/f71a8951368a4cc085cf7875ff44e61c/accounts/1e4d20d77f574a779ca3f31c2be72a83', 'resource': 'payment_account'}], 'has_more': False, 'limit': 100, 'total_pages': 1, 'page': 1, 'offset': 0, 'total': '1', 'query_count': '1'}</msg>
<status status="PASS" starttime="20210322 20:01:35.418" endtime="20210322 20:01:35.420"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 20:01:35.422" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 20:01:35.421" endtime="20210322 20:01:35.423"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["id"]}</arg>
</arguments>
<assign>
<var>${account_external_key}</var>
</assign>
<msg timestamp="20210322 20:01:35.426" level="INFO">${account_external_key} = 1e4d20d77f574a779ca3f31c2be72a83</msg>
<status status="PASS" starttime="20210322 20:01:35.424" endtime="20210322 20:01:35.426"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_external_key}</arg>
</arguments>
<msg timestamp="20210322 20:01:35.429" level="INFO">${account_external_key} = 1e4d20d77f574a779ca3f31c2be72a83</msg>
<status status="PASS" starttime="20210322 20:01:35.428" endtime="20210322 20:01:35.429"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["number"]}</arg>
</arguments>
<assign>
<var>${account_number}</var>
</assign>
<msg timestamp="20210322 20:01:35.433" level="INFO">${account_number} = 1162721615</msg>
<status status="PASS" starttime="20210322 20:01:35.431" endtime="20210322 20:01:35.433"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_number}</arg>
</arguments>
<msg timestamp="20210322 20:01:35.434" level="INFO">${account_number} = 1162721615</msg>
<status status="PASS" starttime="20210322 20:01:35.434" endtime="20210322 20:01:35.435"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["routing_number"]}</arg>
</arguments>
<assign>
<var>${account_routing_number}</var>
</assign>
<msg timestamp="20210322 20:01:35.436" level="INFO">${account_routing_number} = 001</msg>
<status status="PASS" starttime="20210322 20:01:35.435" endtime="20210322 20:01:35.436"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_routing_number}</arg>
</arguments>
<msg timestamp="20210322 20:01:35.437" level="INFO">${account_routing_number} = 001</msg>
<status status="PASS" starttime="20210322 20:01:35.437" endtime="20210322 20:01:35.438"></status>
</kw>
<status status="PASS" starttime="20210322 20:01:34.791" endtime="20210322 20:01:35.438"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 20:01:35.439" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 20:01:35.438" endtime="20210322 20:01:35.439"></status>
</kw>
<status status="PASS" starttime="20210322 20:01:32.086" endtime="20210322 20:01:35.439"></status>
</kw>
<status status="PASS" starttime="20210322 20:01:32.085" endtime="20210322 20:01:35.439"></status>
</kw>
<kw name="gerar saldo para account" library="account_generate_balance">
<arguments>
<arg>${account_external_key}</arg>
</arguments>
<kw name="Uuid 4" library="FakerLibrary">
<doc>Generates a random UUID4 string.
:param cast_to: Specify what type the UUID should be cast to. Default is `str`
:type cast_to: callable</doc>
<assign>
<var>${uuid}</var>
</assign>
<msg timestamp="20210322 20:01:35.441" level="INFO">${uuid} = c89b6947-fc57-4a37-8197-8951943d21c9</msg>
<status status="PASS" starttime="20210322 20:01:35.441" endtime="20210322 20:01:35.441"></status>
</kw>
<kw name="conectar accounts" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accounts</arg>
<arg>url=${account_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 20:01:35.442" level="INFO">Creating Session using : alias=accounts, url=https://banking-accounts-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 20:01:35.442" endtime="20210322 20:01:35.443"></status>
</kw>
<status status="PASS" starttime="20210322 20:01:35.441" endtime="20210322 20:01:35.443"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 20:01:35.444" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 20:01:35.443" endtime="20210322 20:01:35.444"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"operations": [</arg>
<arg>{</arg>
<arg>"amount": 9000000000000,</arg>
<arg>"authorization_code": "${uuid}",</arg>
<arg>"transaction_id": "${uuid}",</arg>
<arg>"id": "${uuid}",</arg>
<arg>"id_checking_account": "${account_external_key}",</arg>
<arg>"transfer_date": "2020-02-20T20:58:06.510Z",</arg>
<arg>"fee": 0,</arg>
<arg>"description": "Teste",</arg>
<arg>"object_type": "transfer",</arg>
<arg>"object_id": "${uuid}",</arg>
<arg>"dflag": "ACTIVE",</arg>
<arg>"created_at": "2019-10-14T20:58:06.510Z",</arg>
<arg>"type": "Transfer"</arg>
<arg>}</arg>
<arg>],</arg>
<arg>"reference_id": "Criando saldo na account"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 20:01:35.444" level="INFO">${body} = { "operations": [ { "amount": 9000000000000, "authorization_code": "c89b6947-fc57-4a37-8197-8951943d21c9", "transaction_id": "c89b6947-fc57-4a37-8197-8951943d21c9", "id": "c89b6947-fc57-4a37-8197-8951...</msg>
<status status="PASS" starttime="20210322 20:01:35.444" endtime="20210322 20:01:35.444"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accounts</arg>
<arg>/admin/internal_operation/authorization/${uuid}</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 20:01:35.445" level="INFO">POST Request using : uri=/admin/internal_operation/authorization/c89b6947-fc57-4a37-8197-8951943d21c9, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "operations": [ { "amount": 9000000000000, "authorization_code": "c89b6947-fc57-4a37-8197-8951943d21c9", "transaction_id": "c89b6947-fc57-4a37-8197-8951943d21c9", "id": "c89b6947-fc57-4a37-8197-8951943d21c9", "id_checking_account": "1e4d20d77f574a779ca3f31c2be72a83", "transfer_date": "2020-02-20T20:58:06.510Z", "fee": 0, "description": "Teste", "object_type": "transfer", "object_id": "c89b6947-fc57-4a37-8197-8951943d21c9", "dflag": "ACTIVE", "created_at": "2019-10-14T20:58:06.510Z", "type": "Transfer" } ], "reference_id": "Criando saldo na account" } 
json=None</msg>
<msg timestamp="20210322 20:01:36.045" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 20:01:35.445" endtime="20210322 20:01:36.045"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.status_code}' == 200</arg>
<arg>Log</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210322 20:01:36.046" endtime="20210322 20:01:36.048"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.status_code}' == 200</arg>
<arg>Log</arg>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<status status="PASS" starttime="20210322 20:01:36.049" endtime="20210322 20:01:36.051"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.status_code}' == 200</arg>
<arg>Log</arg>
<arg>${response.status_code}</arg>
</arguments>
<status status="PASS" starttime="20210322 20:01:36.052" endtime="20210322 20:01:36.053"></status>
</kw>
<status status="PASS" starttime="20210322 20:01:35.440" endtime="20210322 20:01:36.053"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${pix_type}' == 'phone'</arg>
<arg>criar chave pix</arg>
<arg>${pix_type}</arg>
<arg>${phone_pix}</arg>
<arg>ELSE IF</arg>
<arg>'${pix_type}' == 'email'</arg>
<arg>criar chave pix</arg>
<arg>${pix_type}</arg>
<arg>${email_pix}</arg>
<arg>ELSE IF</arg>
<arg>'${pix_type}' == 'evp'</arg>
<arg>criar chave pix</arg>
<arg>${pix_type}</arg>
<arg>${EMPTY}</arg>
<arg>ELSE IF</arg>
<arg>'${pix_type}' == 'national_registration'</arg>
<arg>criar chave pix</arg>
<arg>${pix_type}</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw name="criar chave pix" library="pix_dict_create_entry">
<arguments>
<arg>${pix_type}</arg>
<arg>${email_pix}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 20:01:36.057" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 20:01:36.057" endtime="20210322 20:01:36.057"></status>
</kw>
<status status="PASS" starttime="20210322 20:01:36.057" endtime="20210322 20:01:36.057"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${type}</arg>
</arguments>
<msg timestamp="20210322 20:01:36.058" level="INFO">${type} = email</msg>
<status status="PASS" starttime="20210322 20:01:36.058" endtime="20210322 20:01:36.058"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210322 20:01:36.058" level="INFO">${value} = fernandacaldeira@yahoo.com.br</msg>
<status status="PASS" starttime="20210322 20:01:36.058" endtime="20210322 20:01:36.058"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 20:01:36.059" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 20:01:36.058" endtime="20210322 20:01:36.059"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "${type}",</arg>
<arg>"value": "${value}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 20:01:36.059" level="INFO">${body} = { "type": "email", "value": "fernandacaldeira@yahoo.com.br" }</msg>
<status status="PASS" starttime="20210322 20:01:36.059" endtime="20210322 20:01:36.059"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 20:01:36.060" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/684cfaa66a3a40f6b748c6ce5c505d2b/accounts/1e4d20d77f574a779ca3f31c2be72a83/entries, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "email", "value": "fernandacaldeira@yahoo.com.br" } 
json=None</msg>
<msg timestamp="20210322 20:01:36.740" level="INFO">${response} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20210322 20:01:36.059" endtime="20210322 20:01:36.740"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 20:01:36.741" level="INFO">{'id': '0fc5c50b89774a2089be56dbc4e2c57e', 'status': 'waiting_ownership_verification', 'created_at': '2021-03-22T08:01:37.981', 'updated_at': '2021-03-22T08:01:37.981', 'key': {'value': 'fernandacaldeira@yahoo.com.br', 'type': 'email'}, 'account': {'id': '1e4d20d77f574a779ca3f31c2be72a83', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': '684cfaa66a3a40f6b748c6ce5c505d2b', 'owner': {'name': 'Holder de teste', 'national_registration': '47102958323', 'type': 'individual'}, 'routing_number': '001', 'number': '1162721615', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}, 'resource': 'pix.entry'}</msg>
<status status="PASS" starttime="20210322 20:01:36.741" endtime="20210322 20:01:36.741"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 20:01:36.742" level="INFO">c4bc65553ecde3d4</msg>
<status status="PASS" starttime="20210322 20:01:36.741" endtime="20210322 20:01:36.742"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 20:01:36.742" level="INFO">202</msg>
<status status="PASS" starttime="20210322 20:01:36.742" endtime="20210322 20:01:36.742"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 20:01:36.743" level="INFO">${response} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20210322 20:01:36.742" endtime="20210322 20:01:36.743"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${entry_external_key}</var>
</assign>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<status status="PASS" starttime="20210322 20:01:36.744" endtime="20210322 20:01:36.744"></status>
</kw>
<msg timestamp="20210322 20:01:36.744" level="INFO">${entry_external_key} = 0fc5c50b89774a2089be56dbc4e2c57e</msg>
<status status="PASS" starttime="20210322 20:01:36.743" endtime="20210322 20:01:36.744"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${entry_external_key}</arg>
</arguments>
<msg timestamp="20210322 20:01:36.745" level="INFO">${entry_external_key} = 0fc5c50b89774a2089be56dbc4e2c57e</msg>
<status status="PASS" starttime="20210322 20:01:36.744" endtime="20210322 20:01:36.745"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["key"]["value"]}</arg>
</arguments>
<assign>
<var>${entry_key_value}</var>
</assign>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["key"]["value"]}</arg>
</arguments>
<status status="PASS" starttime="20210322 20:01:36.745" endtime="20210322 20:01:36.746"></status>
</kw>
<msg timestamp="20210322 20:01:36.746" level="INFO">${entry_key_value} = fernandacaldeira@yahoo.com.br</msg>
<status status="PASS" starttime="20210322 20:01:36.745" endtime="20210322 20:01:36.746"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${entry_key_value}</arg>
</arguments>
<msg timestamp="20210322 20:01:36.747" level="INFO">${entry_key_value} = fernandacaldeira@yahoo.com.br</msg>
<status status="PASS" starttime="20210322 20:01:36.746" endtime="20210322 20:01:36.747"></status>
</kw>
<status status="PASS" starttime="20210322 20:01:36.055" endtime="20210322 20:01:36.747"></status>
</kw>
<status status="PASS" starttime="20210322 20:01:36.054" endtime="20210322 20:01:36.747"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${pix_type}' == 'phone'</arg>
<arg>buscar verification code</arg>
<arg>${holder_external_key}</arg>
<arg>${account_external_key}</arg>
<arg>${entry_external_key}</arg>
<arg>ELSE IF</arg>
<arg>'${pix_type}' == 'email'</arg>
<arg>buscar verification code</arg>
<arg>${holder_external_key}</arg>
<arg>${account_external_key}</arg>
<arg>${entry_external_key}</arg>
</arguments>
<kw name="buscar verification code" library="pix_dict_verification_code">
<arguments>
<arg>${holder_external_key}</arg>
<arg>${account_external_key}</arg>
<arg>${entry_external_key}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 20:01:36.750" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 20:01:36.749" endtime="20210322 20:01:36.750"></status>
</kw>
<status status="PASS" starttime="20210322 20:01:36.749" endtime="20210322 20:01:36.750"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/admin/internal_operation/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries/${entry_external_key}/code</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 20:01:36.750" level="INFO">GET Request using : uri=/admin/internal_operation/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/684cfaa66a3a40f6b748c6ce5c505d2b/accounts/1e4d20d77f574a779ca3f31c2be72a83/entries/0fc5c50b89774a2089be56dbc4e2c57e/code, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 20:01:37.339" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 20:01:36.750" endtime="20210322 20:01:37.339"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 20:01:37.340" level="INFO">{'code': '1823'}</msg>
<status status="PASS" starttime="20210322 20:01:37.339" endtime="20210322 20:01:37.340"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 20:01:37.340" level="INFO">f690015dbdf22be7</msg>
<status status="PASS" starttime="20210322 20:01:37.340" endtime="20210322 20:01:37.340"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 20:01:37.341" level="INFO">200</msg>
<status status="PASS" starttime="20210322 20:01:37.341" endtime="20210322 20:01:37.341"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 20:01:37.342" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 20:01:37.341" endtime="20210322 20:01:37.342"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["code"]}</arg>
</arguments>
<assign>
<var>${verification_code}</var>
</assign>
<msg timestamp="20210322 20:01:37.342" level="INFO">${verification_code} = 1823</msg>
<status status="PASS" starttime="20210322 20:01:37.342" endtime="20210322 20:01:37.342"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${verification_code}</arg>
</arguments>
<msg timestamp="20210322 20:01:37.343" level="INFO">${verification_code} = 1823</msg>
<status status="PASS" starttime="20210322 20:01:37.343" endtime="20210322 20:01:37.343"></status>
</kw>
<status status="PASS" starttime="20210322 20:01:36.749" endtime="20210322 20:01:37.343"></status>
</kw>
<status status="PASS" starttime="20210322 20:01:36.747" endtime="20210322 20:01:37.343"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${pix_type}' == 'phone'</arg>
<arg>confirmar propriedade da chave pix</arg>
<arg>${verification_code}</arg>
<arg>${holder_external_key}</arg>
<arg>${account_external_key}</arg>
<arg>${entry_external_key}</arg>
<arg>ELSE IF</arg>
<arg>'${pix_type}' == 'email'</arg>
<arg>confirmar propriedade da chave pix</arg>
<arg>${verification_code}</arg>
<arg>${holder_external_key}</arg>
<arg>${account_external_key}</arg>
<arg>${entry_external_key}</arg>
</arguments>
<kw name="confirmar propriedade da chave pix" library="pix_dict_confirm_propriety">
<arguments>
<arg>${verification_code}</arg>
<arg>${holder_external_key}</arg>
<arg>${account_external_key}</arg>
<arg>${entry_external_key}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 20:01:37.345" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 20:01:37.345" endtime="20210322 20:01:37.346"></status>
</kw>
<status status="PASS" starttime="20210322 20:01:37.345" endtime="20210322 20:01:37.346"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 20:01:37.346" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 20:01:37.346" endtime="20210322 20:01:37.346"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"code": "${verification_code}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 20:01:37.347" level="INFO">${body} = { "code": "1823" }</msg>
<status status="PASS" starttime="20210322 20:01:37.347" endtime="20210322 20:01:37.347"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries/${entry_external_key}/ownership</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 20:01:37.348" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/684cfaa66a3a40f6b748c6ce5c505d2b/accounts/1e4d20d77f574a779ca3f31c2be72a83/entries/0fc5c50b89774a2089be56dbc4e2c57e/ownership, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "code": "1823" } 
json=None</msg>
<msg timestamp="20210322 20:01:38.936" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 20:01:37.347" endtime="20210322 20:01:38.936"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 20:01:38.939" level="INFO">{'id': '0fc5c50b89774a2089be56dbc4e2c57e', 'status': 'active', 'created_at': '2021-03-22T08:01:37.981', 'updated_at': '2021-03-22T08:01:40.204', 'key': {'value': 'fernandacaldeira@yahoo.com.br', 'type': 'email'}, 'account': {'id': '1e4d20d77f574a779ca3f31c2be72a83', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': '684cfaa66a3a40f6b748c6ce5c505d2b', 'owner': {'name': 'Holder de teste', 'national_registration': '47102958323', 'type': 'individual'}, 'routing_number': '001', 'number': '1162721615', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}, 'resource': 'pix.entry'}</msg>
<status status="PASS" starttime="20210322 20:01:38.938" endtime="20210322 20:01:38.940"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 20:01:38.941" level="INFO">70b93ef42d493fc0</msg>
<status status="PASS" starttime="20210322 20:01:38.941" endtime="20210322 20:01:38.941"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 20:01:38.943" level="INFO">201</msg>
<status status="PASS" starttime="20210322 20:01:38.942" endtime="20210322 20:01:38.943"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 20:01:38.944" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 20:01:38.944" endtime="20210322 20:01:38.944"></status>
</kw>
<status status="PASS" starttime="20210322 20:01:37.344" endtime="20210322 20:01:38.945"></status>
</kw>
<status status="PASS" starttime="20210322 20:01:37.343" endtime="20210322 20:01:38.945"></status>
</kw>
<status status="PASS" starttime="20210322 20:01:32.083" endtime="20210322 20:01:38.945"></status>
</kw>
<kw name="buscar account balance" library="account_get_balance">
<arguments>
<arg>marketplace_external_key=${marketplace_external_key}</arg>
<arg>account_external_key=${account_external_key}</arg>
</arguments>
<kw name="conectar accounts" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accounts</arg>
<arg>url=${account_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 20:01:38.949" level="INFO">Creating Session using : alias=accounts, url=https://banking-accounts-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 20:01:38.948" endtime="20210322 20:01:38.950"></status>
</kw>
<status status="PASS" starttime="20210322 20:01:38.948" endtime="20210322 20:01:38.950"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accounts</arg>
<arg>/marketplaces/${marketplace_external_key}/accounts/${account_external_key}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 20:01:38.951" level="INFO">GET Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/accounts/1e4d20d77f574a779ca3f31c2be72a83, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 20:01:39.557" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 20:01:38.951" endtime="20210322 20:01:39.557"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 20:01:39.559" level="INFO">{'id': '1e4d20d77f574a779ca3f31c2be72a83', 'holder': '684cfaa66a3a40f6b748c6ce5c505d2b', 'balance': '9000000.00', 'currency': 'BRL', 'routing_number': '001', 'number': '1162721615', 'status': 'active', 'metadata': {}, 'created_at': '2021-03-22T23:01:35.998573', 'updated_at': '2021-03-22T23:01:37.318629', 'primary': True, 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'uri': '/v2/marketplaces/f71a8951368a4cc085cf7875ff44e61c/accounts/1e4d20d77f574a779ca3f31c2be72a83', 'resource': 'payment_account'}</msg>
<status status="PASS" starttime="20210322 20:01:39.558" endtime="20210322 20:01:39.560"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 20:01:39.562" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 20:01:39.561" endtime="20210322 20:01:39.562"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["balance"]}</arg>
</arguments>
<assign>
<var>${account_balance}</var>
</assign>
<msg timestamp="20210322 20:01:39.564" level="INFO">${account_balance} = 9000000.00</msg>
<status status="PASS" starttime="20210322 20:01:39.563" endtime="20210322 20:01:39.564"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_balance}</arg>
</arguments>
<msg timestamp="20210322 20:01:39.565" level="INFO">${account_balance} = 9000000.00</msg>
<status status="PASS" starttime="20210322 20:01:39.565" endtime="20210322 20:01:39.566"></status>
</kw>
<status status="PASS" starttime="20210322 20:01:38.947" endtime="20210322 20:01:39.566"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${account_balance}</arg>
</arguments>
<assign>
<var>${account_balance_initial}</var>
</assign>
<msg timestamp="20210322 20:01:39.568" level="INFO">${account_balance_initial} = 9000000.00</msg>
<status status="PASS" starttime="20210322 20:01:39.568" endtime="20210322 20:01:39.568"></status>
</kw>
<kw name="criar pagamento pix com dados completos" library="pix_payments_create_pix_payment">
<arguments>
<arg>amount=${amount}</arg>
<arg>creditor_account_number=${creditor_account_number}</arg>
<arg>creditor_routing_number=${creditor_routing_number}</arg>
<arg>creditor_account_type=${creditor_account_type}</arg>
<arg>creditor_name=${creditor_name}</arg>
<arg>creditor_national_registration=${creditor_national_registration}</arg>
<arg>creditor_psp=${creditor_psp}</arg>
<arg>pix_description=${pix_description}</arg>
</arguments>
<kw name="conectar pix-payments" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-payments</arg>
<arg>url=${pix_payments_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 20:01:39.573" level="INFO">Creating Session using : alias=pix-payments, url=https://banking-pix-payments-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 20:01:39.572" endtime="20210322 20:01:39.573"></status>
</kw>
<status status="PASS" starttime="20210322 20:01:39.571" endtime="20210322 20:01:39.573"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 20:01:39.573" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 20:01:39.573" endtime="20210322 20:01:39.573"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"amount": ${amount},</arg>
<arg>"creditor": {</arg>
<arg>"account": {</arg>
<arg>"number": "${creditor_account_number}",</arg>
<arg>"routing_number": "${creditor_routing_number}",</arg>
<arg>"type": "${creditor_account_type}"</arg>
<arg>},</arg>
<arg>"name": "${creditor_name}",</arg>
<arg>"national_registration": "${creditor_national_registration}",</arg>
<arg>"psp": "${creditor_psp}"</arg>
<arg>},</arg>
<arg>"description": "${pix_description}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 20:01:39.574" level="INFO">${body} = { "amount": 290, "creditor": { "account": { "number": "0243882974", "routing_number": "0500", "type": "cacc" }, "name": "Massa iti PF NauNNMO", "national_registration": "42808422644", "psp": "17192451...</msg>
<status status="PASS" starttime="20210322 20:01:39.573" endtime="20210322 20:01:39.574"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-payments</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/pix/holders/${holder_external_key}/accounts/${account_external_key}/payments</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 20:01:39.574" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/pix/holders/684cfaa66a3a40f6b748c6ce5c505d2b/accounts/1e4d20d77f574a779ca3f31c2be72a83/payments, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "amount": 290, "creditor": { "account": { "number": "0243882974", "routing_number": "0500", "type": "cacc" }, "name": "Massa iti PF NauNNMO", "national_registration": "42808422644", "psp": "17192451" }, "description": "Envio de PIX" } 
json=None</msg>
<msg timestamp="20210322 20:01:40.212" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 20:01:39.574" endtime="20210322 20:01:40.213"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 20:01:40.214" level="INFO">{'id': '8caffdcd1d444a3fa77d0975be3b9738', 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'status': 'pending', 'end_to_end_id': 'E1946824220210322230111974b333ae', 'message_id': 'M19468242eb7f6e438798d0d16ad73d8', 'amount': 290, 'created_at': '2021-03-22T20:01:41.44455', 'description': 'Envio de PIX', 'debtor': {'national_registration': '47102958323', 'name': 'Holder de teste', 'type': 'individual', 'holder_id': '684cfaa66a3a40f6b748c6ce5c505d2b', 'account': {'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}, 'digital_account_id': '1e4d20d77f574a779ca3f31c2be72a83', 'number': '1162721615', 'routing_number': '0001', 'type': 'cacc'}}, 'creditor': {'national_registration': '42808422644', 'name': 'Massa iti PF NauNNMO', 'type': 'individual', 'account': {'psp': {'code': '17192451'}, 'number': '0243882974', 'routing_number': '0500', 'type': 'cacc'}}, 'refunded_amount': 0}</msg>
<status status="PASS" starttime="20210322 20:01:40.213" endtime="20210322 20:01:40.215"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 20:01:40.216" level="INFO">c813d78ab87f0588</msg>
<status status="PASS" starttime="20210322 20:01:40.215" endtime="20210322 20:01:40.216"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 20:01:40.217" level="INFO">201</msg>
<status status="PASS" starttime="20210322 20:01:40.216" endtime="20210322 20:01:40.217"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 20:01:40.219" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 20:01:40.218" endtime="20210322 20:01:40.219"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${payment_external_key}</var>
</assign>
<msg timestamp="20210322 20:01:40.221" level="INFO">${payment_external_key} = 8caffdcd1d444a3fa77d0975be3b9738</msg>
<status status="PASS" starttime="20210322 20:01:40.219" endtime="20210322 20:01:40.221"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${payment_external_key}</arg>
</arguments>
<msg timestamp="20210322 20:01:40.223" level="INFO">${payment_external_key} = 8caffdcd1d444a3fa77d0975be3b9738</msg>
<status status="PASS" starttime="20210322 20:01:40.222" endtime="20210322 20:01:40.223"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["end_to_end_id"]}</arg>
</arguments>
<assign>
<var>${end_to_end_id}</var>
</assign>
<msg timestamp="20210322 20:01:40.224" level="INFO">${end_to_end_id} = E1946824220210322230111974b333ae</msg>
<status status="PASS" starttime="20210322 20:01:40.223" endtime="20210322 20:01:40.224"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${end_to_end_id}</arg>
</arguments>
<msg timestamp="20210322 20:01:40.224" level="INFO">${end_to_end_id} = E1946824220210322230111974b333ae</msg>
<status status="PASS" starttime="20210322 20:01:40.224" endtime="20210322 20:01:40.224"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["message_id"]}</arg>
</arguments>
<assign>
<var>${message_id}</var>
</assign>
<msg timestamp="20210322 20:01:40.225" level="INFO">${message_id} = M19468242eb7f6e438798d0d16ad73d8</msg>
<status status="PASS" starttime="20210322 20:01:40.224" endtime="20210322 20:01:40.225"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${message_id}</arg>
</arguments>
<msg timestamp="20210322 20:01:40.225" level="INFO">${message_id} = M19468242eb7f6e438798d0d16ad73d8</msg>
<status status="PASS" starttime="20210322 20:01:40.225" endtime="20210322 20:01:40.225"></status>
</kw>
<status status="PASS" starttime="20210322 20:01:39.570" endtime="20210322 20:01:40.225"></status>
</kw>
<kw name="validar pagamento pix" library="asserts">
<arguments>
<arg>marketplace_external_key=${marketplace_external_key}</arg>
<arg>status_pix_payments=pending</arg>
<arg>amount=${amount}</arg>
<arg>pix_description=${pix_description}</arg>
<arg>debitor_national_registration=${national_registration}</arg>
<arg>debitor_name=${holder_name}</arg>
<arg>debitor_type=${holder_type}</arg>
<arg>debitor_holder_id=${holder_external_key}</arg>
<arg>debtor_account_psp_code=${debtor_account_psp_code}</arg>
<arg>debtor_account_psp_name=${debtor_account_psp_name}</arg>
<arg>debtor_digital_account=${account_external_key}</arg>
<arg>debtor_account_number=${account_number}</arg>
<arg>debtor_account_routing_number=${account_routing_number}</arg>
<arg>debtor_account_type=${debtor_account_type}</arg>
<arg>creditor_national_registration=${creditor_national_registration}</arg>
<arg>creditor_name=${creditor_name}</arg>
<arg>creditor_type=individual</arg>
<arg>creditor_account_psp_code=${creditor_psp}</arg>
<arg>creditor_account_number=${creditor_account_number}</arg>
<arg>creditor_account_routing_number=${creditor_routing_number}</arg>
<arg>creditor_account_type=${creditor_account_type}</arg>
<arg>refunded_amount=0</arg>
</arguments>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<arguments>
<arg>result_format=datetime</arg>
</arguments>
<assign>
<var>${date}</var>
</assign>
<msg timestamp="20210322 20:01:40.227" level="INFO">${date} = 2021-03-22 20:01:40.227338</msg>
<status status="PASS" starttime="20210322 20:01:40.227" endtime="20210322 20:01:40.227"></status>
</kw>
<kw name="Convert Date" library="DateTime">
<doc>Converts between supported `date formats`.</doc>
<arguments>
<arg>${date}</arg>
<arg>exclude_millis=yes</arg>
<arg>result_format=%Y-%m-%d</arg>
<arg>date_format=%d-%m-%Y</arg>
</arguments>
<assign>
<var>${date}</var>
</assign>
<msg timestamp="20210322 20:01:40.228" level="INFO">${date} = 2021-03-22</msg>
<status status="PASS" starttime="20210322 20:01:40.227" endtime="20210322 20:01:40.228"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["marketplace_id"]}</arg>
<arg>${marketplace_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210322 20:01:40.228" endtime="20210322 20:01:40.228"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["status"]}</arg>
<arg>${status_pix_payments}</arg>
</arguments>
<status status="PASS" starttime="20210322 20:01:40.228" endtime="20210322 20:01:40.229"></status>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${response.json()["end_to_end_id"]}</arg>
</arguments>
<msg timestamp="20210322 20:01:40.229" level="INFO">Length is 32</msg>
<status status="PASS" starttime="20210322 20:01:40.229" endtime="20210322 20:01:40.229"></status>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${response.json()["message_id"]}</arg>
</arguments>
<msg timestamp="20210322 20:01:40.229" level="INFO">Length is 32</msg>
<status status="PASS" starttime="20210322 20:01:40.229" endtime="20210322 20:01:40.230"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.json()["amount"]}</arg>
<arg>${amount}</arg>
</arguments>
<msg timestamp="20210322 20:01:40.230" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 20:01:40.230" endtime="20210322 20:01:40.230"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["description"]}</arg>
<arg>${pix_description}</arg>
</arguments>
<status status="PASS" starttime="20210322 20:01:40.230" endtime="20210322 20:01:40.231"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["national_registration"]}</arg>
<arg>${debitor_national_registration}</arg>
</arguments>
<status status="PASS" starttime="20210322 20:01:40.231" endtime="20210322 20:01:40.231"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["name"]}</arg>
<arg>${debitor_name}</arg>
</arguments>
<status status="PASS" starttime="20210322 20:01:40.231" endtime="20210322 20:01:40.231"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["type"]}</arg>
<arg>${debitor_type}</arg>
</arguments>
<status status="PASS" starttime="20210322 20:01:40.232" endtime="20210322 20:01:40.232"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["holder_id"]}</arg>
<arg>${debitor_holder_id}</arg>
</arguments>
<status status="PASS" starttime="20210322 20:01:40.232" endtime="20210322 20:01:40.232"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["account"]["psp"]["code"]}</arg>
<arg>${debtor_account_psp_code}</arg>
</arguments>
<status status="PASS" starttime="20210322 20:01:40.233" endtime="20210322 20:01:40.233"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["account"]["psp"]["name"]}</arg>
<arg>${debtor_account_psp_name}</arg>
</arguments>
<status status="PASS" starttime="20210322 20:01:40.233" endtime="20210322 20:01:40.234"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["account"]["digital_account_id"]}</arg>
<arg>${debtor_digital_account}</arg>
</arguments>
<status status="PASS" starttime="20210322 20:01:40.234" endtime="20210322 20:01:40.234"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["account"]["number"]}</arg>
<arg>${account_number}</arg>
</arguments>
<status status="PASS" starttime="20210322 20:01:40.234" endtime="20210322 20:01:40.235"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["account"]["routing_number"]}</arg>
<arg>0${debtor_account_routing_number}</arg>
</arguments>
<status status="PASS" starttime="20210322 20:01:40.235" endtime="20210322 20:01:40.235"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["account"]["type"]}</arg>
<arg>${debtor_account_type}</arg>
</arguments>
<status status="PASS" starttime="20210322 20:01:40.235" endtime="20210322 20:01:40.236"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["creditor"]["national_registration"]}</arg>
<arg>${creditor_national_registration}</arg>
</arguments>
<status status="PASS" starttime="20210322 20:01:40.237" endtime="20210322 20:01:40.237"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["creditor"]["name"]}</arg>
<arg>${creditor_name}</arg>
</arguments>
<status status="PASS" starttime="20210322 20:01:40.237" endtime="20210322 20:01:40.237"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["creditor"]["type"]}</arg>
<arg>${creditor_type}</arg>
</arguments>
<status status="PASS" starttime="20210322 20:01:40.237" endtime="20210322 20:01:40.237"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["creditor"]["account"]["psp"]["code"]}</arg>
<arg>${creditor_account_psp_code}</arg>
</arguments>
<status status="PASS" starttime="20210322 20:01:40.237" endtime="20210322 20:01:40.238"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["creditor"]["account"]["number"]}</arg>
<arg>${creditor_account_number}</arg>
</arguments>
<status status="PASS" starttime="20210322 20:01:40.238" endtime="20210322 20:01:40.238"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["creditor"]["account"]["routing_number"]}</arg>
<arg>${creditor_account_routing_number}</arg>
</arguments>
<status status="PASS" starttime="20210322 20:01:40.238" endtime="20210322 20:01:40.239"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["creditor"]["account"]["type"]}</arg>
<arg>${creditor_account_type}</arg>
</arguments>
<status status="PASS" starttime="20210322 20:01:40.239" endtime="20210322 20:01:40.239"></status>
</kw>
<status status="PASS" starttime="20210322 20:01:40.226" endtime="20210322 20:01:40.239"></status>
</kw>
<kw name="confirmar pagamento pix" library="pix_payments_confirm_pix_payment">
<arguments>
<arg>holder_external_key=${holder_external_key}</arg>
<arg>account_external_key=${account_external_key}</arg>
<arg>payment_external_key=${payment_external_key}</arg>
</arguments>
<kw name="conectar pix-payments" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-payments</arg>
<arg>url=${pix_payments_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 20:01:40.241" level="INFO">Creating Session using : alias=pix-payments, url=https://banking-pix-payments-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 20:01:40.241" endtime="20210322 20:01:40.241"></status>
</kw>
<status status="PASS" starttime="20210322 20:01:40.240" endtime="20210322 20:01:40.241"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 20:01:40.242" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 20:01:40.241" endtime="20210322 20:01:40.242"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-payments</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/pix/holders/${holder_external_key}/accounts/${account_external_key}/payments/${payment_external_key}/confirm</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 20:01:40.242" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/pix/holders/684cfaa66a3a40f6b748c6ce5c505d2b/accounts/1e4d20d77f574a779ca3f31c2be72a83/payments/8caffdcd1d444a3fa77d0975be3b9738/confirm, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data=None 
json=None</msg>
<msg timestamp="20210322 20:01:41.642" level="INFO">${response} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20210322 20:01:40.242" endtime="20210322 20:01:41.642"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 20:01:41.643" level="INFO">{'id': '8caffdcd1d444a3fa77d0975be3b9738', 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'status': 'executed', 'end_to_end_id': 'E1946824220210322230111974b333ae', 'message_id': 'M19468242eb7f6e438798d0d16ad73d8', 'amount': 290, 'description': 'Envio de PIX', 'debtor': {'national_registration': '47102958323', 'name': 'Holder de teste', 'type': 'individual', 'holder_id': '684cfaa66a3a40f6b748c6ce5c505d2b', 'account': {'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}, 'digital_account_id': '1e4d20d77f574a779ca3f31c2be72a83', 'number': '1162721615', 'routing_number': '0001', 'type': 'cacc'}}, 'creditor': {'national_registration': '42808422644', 'name': 'Massa iti PF NauNNMO', 'type': 'individual', 'account': {'psp': {'code': '17192451'}, 'number': '0243882974', 'routing_number': '0500', 'type': 'cacc'}}, 'resource': 'pix_transaction'}</msg>
<status status="PASS" starttime="20210322 20:01:41.642" endtime="20210322 20:01:41.643"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 20:01:41.644" level="INFO">dcbcbba02140b7b9</msg>
<status status="PASS" starttime="20210322 20:01:41.643" endtime="20210322 20:01:41.644"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 20:01:41.644" level="INFO">202</msg>
<status status="PASS" starttime="20210322 20:01:41.644" endtime="20210322 20:01:41.644"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 20:01:41.645" level="INFO">${response} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20210322 20:01:41.645" endtime="20210322 20:01:41.645"></status>
</kw>
<status status="PASS" starttime="20210322 20:01:40.240" endtime="20210322 20:01:41.645"></status>
</kw>
<kw name="validar pagamento pix" library="asserts">
<arguments>
<arg>marketplace_external_key=${marketplace_external_key}</arg>
<arg>status_pix_payments=executed</arg>
<arg>amount=${amount}</arg>
<arg>pix_description=${pix_description}</arg>
<arg>debitor_national_registration=${national_registration}</arg>
<arg>debitor_name=${holder_name}</arg>
<arg>debitor_type=${holder_type}</arg>
<arg>debitor_holder_id=${holder_external_key}</arg>
<arg>debtor_account_psp_code=${debtor_account_psp_code}</arg>
<arg>debtor_account_psp_name=${debtor_account_psp_name}</arg>
<arg>debtor_digital_account=${account_external_key}</arg>
<arg>debtor_account_number=${account_number}</arg>
<arg>debtor_account_routing_number=${account_routing_number}</arg>
<arg>debtor_account_type=${debtor_account_type}</arg>
<arg>creditor_national_registration=${creditor_national_registration}</arg>
<arg>creditor_name=${creditor_name}</arg>
<arg>creditor_type=individual</arg>
<arg>creditor_account_psp_code=${creditor_psp}</arg>
<arg>creditor_account_number=${creditor_account_number}</arg>
<arg>creditor_account_routing_number=${creditor_routing_number}</arg>
<arg>creditor_account_type=${creditor_account_type}</arg>
<arg>refunded_amount=0</arg>
</arguments>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<arguments>
<arg>result_format=datetime</arg>
</arguments>
<assign>
<var>${date}</var>
</assign>
<msg timestamp="20210322 20:01:41.647" level="INFO">${date} = 2021-03-22 20:01:41.646770</msg>
<status status="PASS" starttime="20210322 20:01:41.647" endtime="20210322 20:01:41.647"></status>
</kw>
<kw name="Convert Date" library="DateTime">
<doc>Converts between supported `date formats`.</doc>
<arguments>
<arg>${date}</arg>
<arg>exclude_millis=yes</arg>
<arg>result_format=%Y-%m-%d</arg>
<arg>date_format=%d-%m-%Y</arg>
</arguments>
<assign>
<var>${date}</var>
</assign>
<msg timestamp="20210322 20:01:41.648" level="INFO">${date} = 2021-03-22</msg>
<status status="PASS" starttime="20210322 20:01:41.647" endtime="20210322 20:01:41.648"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["marketplace_id"]}</arg>
<arg>${marketplace_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210322 20:01:41.648" endtime="20210322 20:01:41.648"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["status"]}</arg>
<arg>${status_pix_payments}</arg>
</arguments>
<status status="PASS" starttime="20210322 20:01:41.648" endtime="20210322 20:01:41.649"></status>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${response.json()["end_to_end_id"]}</arg>
</arguments>
<msg timestamp="20210322 20:01:41.649" level="INFO">Length is 32</msg>
<status status="PASS" starttime="20210322 20:01:41.649" endtime="20210322 20:01:41.649"></status>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${response.json()["message_id"]}</arg>
</arguments>
<msg timestamp="20210322 20:01:41.650" level="INFO">Length is 32</msg>
<status status="PASS" starttime="20210322 20:01:41.649" endtime="20210322 20:01:41.650"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.json()["amount"]}</arg>
<arg>${amount}</arg>
</arguments>
<msg timestamp="20210322 20:01:41.650" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 20:01:41.650" endtime="20210322 20:01:41.650"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["description"]}</arg>
<arg>${pix_description}</arg>
</arguments>
<status status="PASS" starttime="20210322 20:01:41.651" endtime="20210322 20:01:41.651"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["national_registration"]}</arg>
<arg>${debitor_national_registration}</arg>
</arguments>
<status status="PASS" starttime="20210322 20:01:41.651" endtime="20210322 20:01:41.651"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["name"]}</arg>
<arg>${debitor_name}</arg>
</arguments>
<status status="PASS" starttime="20210322 20:01:41.652" endtime="20210322 20:01:41.652"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["type"]}</arg>
<arg>${debitor_type}</arg>
</arguments>
<status status="PASS" starttime="20210322 20:01:41.652" endtime="20210322 20:01:41.652"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["holder_id"]}</arg>
<arg>${debitor_holder_id}</arg>
</arguments>
<status status="PASS" starttime="20210322 20:01:41.652" endtime="20210322 20:01:41.652"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["account"]["psp"]["code"]}</arg>
<arg>${debtor_account_psp_code}</arg>
</arguments>
<status status="PASS" starttime="20210322 20:01:41.652" endtime="20210322 20:01:41.653"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["account"]["psp"]["name"]}</arg>
<arg>${debtor_account_psp_name}</arg>
</arguments>
<status status="PASS" starttime="20210322 20:01:41.653" endtime="20210322 20:01:41.653"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["account"]["digital_account_id"]}</arg>
<arg>${debtor_digital_account}</arg>
</arguments>
<status status="PASS" starttime="20210322 20:01:41.653" endtime="20210322 20:01:41.654"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["account"]["number"]}</arg>
<arg>${account_number}</arg>
</arguments>
<status status="PASS" starttime="20210322 20:01:41.654" endtime="20210322 20:01:41.654"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["account"]["routing_number"]}</arg>
<arg>0${debtor_account_routing_number}</arg>
</arguments>
<status status="PASS" starttime="20210322 20:01:41.654" endtime="20210322 20:01:41.656"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["account"]["type"]}</arg>
<arg>${debtor_account_type}</arg>
</arguments>
<status status="PASS" starttime="20210322 20:01:41.656" endtime="20210322 20:01:41.656"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["creditor"]["national_registration"]}</arg>
<arg>${creditor_national_registration}</arg>
</arguments>
<status status="PASS" starttime="20210322 20:01:41.656" endtime="20210322 20:01:41.656"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["creditor"]["name"]}</arg>
<arg>${creditor_name}</arg>
</arguments>
<status status="PASS" starttime="20210322 20:01:41.657" endtime="20210322 20:01:41.657"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["creditor"]["type"]}</arg>
<arg>${creditor_type}</arg>
</arguments>
<status status="PASS" starttime="20210322 20:01:41.657" endtime="20210322 20:01:41.657"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["creditor"]["account"]["psp"]["code"]}</arg>
<arg>${creditor_account_psp_code}</arg>
</arguments>
<status status="PASS" starttime="20210322 20:01:41.658" endtime="20210322 20:01:41.658"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["creditor"]["account"]["number"]}</arg>
<arg>${creditor_account_number}</arg>
</arguments>
<status status="PASS" starttime="20210322 20:01:41.658" endtime="20210322 20:01:41.658"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["creditor"]["account"]["routing_number"]}</arg>
<arg>${creditor_account_routing_number}</arg>
</arguments>
<status status="PASS" starttime="20210322 20:01:41.659" endtime="20210322 20:01:41.659"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["creditor"]["account"]["type"]}</arg>
<arg>${creditor_account_type}</arg>
</arguments>
<status status="PASS" starttime="20210322 20:01:41.659" endtime="20210322 20:01:41.660"></status>
</kw>
<status status="PASS" starttime="20210322 20:01:41.646" endtime="20210322 20:01:41.660"></status>
</kw>
<kw name="confirmar pagamento pix admin" library="pix_admin_confirm_payment">
<arguments>
<arg>${end_to_end_id}</arg>
</arguments>
<kw name="conectar pix-payments" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-payments</arg>
<arg>url=${pix_payments_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 20:01:41.661" level="INFO">Creating Session using : alias=pix-payments, url=https://banking-pix-payments-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 20:01:41.661" endtime="20210322 20:01:41.662"></status>
</kw>
<status status="PASS" starttime="20210322 20:01:41.661" endtime="20210322 20:01:41.662"></status>
</kw>
<kw name="Random Number" library="FakerLibrary">
<doc>Returns a random number with 1 digit (default, when digits==None),
a random number with 0 to given number of digits, or a random number
with given number to given number of digits (when ``fix_len==True``).</doc>
<arguments>
<arg>digits=23</arg>
<arg>fix_len=True</arg>
</arguments>
<assign>
<var>${random_number}</var>
</assign>
<msg timestamp="20210322 20:01:41.662" level="INFO">${random_number} = 60409108889233863697360</msg>
<status status="PASS" starttime="20210322 20:01:41.662" endtime="20210322 20:01:41.662"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>M19468242${random_number}</arg>
</arguments>
<assign>
<var>${message_id}</var>
</assign>
<msg timestamp="20210322 20:01:41.662" level="INFO">${message_id} = M1946824260409108889233863697360</msg>
<status status="PASS" starttime="20210322 20:01:41.662" endtime="20210322 20:01:41.662"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${message_id}</arg>
</arguments>
<msg timestamp="20210322 20:01:41.662" level="INFO">M1946824260409108889233863697360</msg>
<status status="PASS" starttime="20210322 20:01:41.662" endtime="20210322 20:01:41.662"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 20:01:41.663" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 20:01:41.663" endtime="20210322 20:01:41.663"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"instruction_id": "${end_to_end_id}",</arg>
<arg>"message_id": "${message_id}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 20:01:41.664" level="INFO">${body} = { "instruction_id": "E1946824220210322230111974b333ae", "message_id": "M1946824260409108889233863697360" }</msg>
<status status="PASS" starttime="20210322 20:01:41.663" endtime="20210322 20:01:41.664"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-payments</arg>
<arg>/admin/internal_operation/pix/${end_to_end_id}/confirmation</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 20:01:41.664" level="INFO">POST Request using : uri=/admin/internal_operation/pix/E1946824220210322230111974b333ae/confirmation, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "instruction_id": "E1946824220210322230111974b333ae", "message_id": "M1946824260409108889233863697360" } 
json=None</msg>
<msg timestamp="20210322 20:01:42.327" level="INFO">${response} = &lt;Response [204]&gt;</msg>
<status status="PASS" starttime="20210322 20:01:41.664" endtime="20210322 20:01:42.327"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 20:01:42.328" level="INFO">5a3900470947be33</msg>
<status status="PASS" starttime="20210322 20:01:42.327" endtime="20210322 20:01:42.328"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 20:01:42.329" level="INFO">204</msg>
<status status="PASS" starttime="20210322 20:01:42.329" endtime="20210322 20:01:42.329"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 20:01:42.330" level="INFO">${response} = &lt;Response [204]&gt;</msg>
<status status="PASS" starttime="20210322 20:01:42.330" endtime="20210322 20:01:42.331"></status>
</kw>
<status status="PASS" starttime="20210322 20:01:41.661" endtime="20210322 20:01:42.331"></status>
</kw>
<kw name="${index} IN RANGE [ 60 ]" type="for">
<kw name="${index} = 0" type="foritem">
<kw name="buscar pagamento pix" library="pix_payments_get_pix_payment">
<arguments>
<arg>holder_external_key=${holder_external_key}</arg>
<arg>account_external_key=${account_external_key}</arg>
<arg>entry_external_key=${entry_external_key}</arg>
<arg>payment_external_key=${payment_external_key}</arg>
</arguments>
<kw name="conectar pix-payments" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-payments</arg>
<arg>url=${pix_payments_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 20:01:42.336" level="INFO">Creating Session using : alias=pix-payments, url=https://banking-pix-payments-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 20:01:42.335" endtime="20210322 20:01:42.336"></status>
</kw>
<status status="PASS" starttime="20210322 20:01:42.334" endtime="20210322 20:01:42.337"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-payments</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/pix/holders/${holder_external_key}/accounts/${account_external_key}/payments/${payment_external_key}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 20:01:42.337" level="INFO">GET Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/pix/holders/684cfaa66a3a40f6b748c6ce5c505d2b/accounts/1e4d20d77f574a779ca3f31c2be72a83/payments/8caffdcd1d444a3fa77d0975be3b9738, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 20:01:42.949" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 20:01:42.337" endtime="20210322 20:01:42.949"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 20:01:42.951" level="INFO">{'id': '8caffdcd1d444a3fa77d0975be3b9738', 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'status': 'succeeded', 'end_to_end_id': 'E1946824220210322230111974b333ae', 'message_id': 'M19468242eb7f6e438798d0d16ad73d8', 'amount': 290, 'created_at': '2021-03-22T20:01:41.44455', 'description': 'Envio de PIX', 'debtor': {'national_registration': '47102958323', 'name': 'Holder de teste', 'type': 'individual', 'holder_id': '684cfaa66a3a40f6b748c6ce5c505d2b', 'account': {'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}, 'digital_account_id': '1e4d20d77f574a779ca3f31c2be72a83', 'number': '1162721615', 'routing_number': '0001', 'type': 'cacc'}}, 'creditor': {'national_registration': '42808422644', 'name': 'Massa iti PF NauNNMO', 'type': 'individual', 'account': {'psp': {'code': '17192451'}, 'number': '0243882974', 'routing_number': '0500', 'type': 'cacc'}}, 'refunded_amount': 0}</msg>
<status status="PASS" starttime="20210322 20:01:42.950" endtime="20210322 20:01:42.951"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 20:01:42.952" level="INFO">2e5ce0bb4fc5686a</msg>
<status status="PASS" starttime="20210322 20:01:42.951" endtime="20210322 20:01:42.952"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 20:01:42.953" level="INFO">200</msg>
<status status="PASS" starttime="20210322 20:01:42.953" endtime="20210322 20:01:42.954"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 20:01:42.955" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 20:01:42.954" endtime="20210322 20:01:42.955"></status>
</kw>
<status status="PASS" starttime="20210322 20:01:42.333" endtime="20210322 20:01:42.955"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${response.json()["status"]}' == 'succeeded'</arg>
</arguments>
<msg timestamp="20210322 20:01:42.956" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20210322 20:01:42.955" endtime="20210322 20:01:42.956"></status>
</kw>
<status status="PASS" starttime="20210322 20:01:42.332" endtime="20210322 20:01:42.957"></status>
</kw>
<status status="PASS" starttime="20210322 20:01:42.332" endtime="20210322 20:01:42.957"></status>
</kw>
<kw name="validar pagamento pix" library="asserts">
<arguments>
<arg>marketplace_external_key=${marketplace_external_key}</arg>
<arg>status_pix_payments=succeeded</arg>
<arg>amount=${amount}</arg>
<arg>pix_description=${pix_description}</arg>
<arg>debitor_national_registration=${national_registration}</arg>
<arg>debitor_name=${holder_name}</arg>
<arg>debitor_type=${holder_type}</arg>
<arg>debitor_holder_id=${holder_external_key}</arg>
<arg>debtor_account_psp_code=${debtor_account_psp_code}</arg>
<arg>debtor_account_psp_name=${debtor_account_psp_name}</arg>
<arg>debtor_digital_account=${account_external_key}</arg>
<arg>debtor_account_number=${account_number}</arg>
<arg>debtor_account_routing_number=${account_routing_number}</arg>
<arg>debtor_account_type=${debtor_account_type}</arg>
<arg>creditor_national_registration=${creditor_national_registration}</arg>
<arg>creditor_name=${creditor_name}</arg>
<arg>creditor_type=individual</arg>
<arg>creditor_account_psp_code=${creditor_psp}</arg>
<arg>creditor_account_number=${creditor_account_number}</arg>
<arg>creditor_account_routing_number=${creditor_routing_number}</arg>
<arg>creditor_account_type=${creditor_account_type}</arg>
<arg>refunded_amount=0</arg>
</arguments>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<arguments>
<arg>result_format=datetime</arg>
</arguments>
<assign>
<var>${date}</var>
</assign>
<msg timestamp="20210322 20:01:42.962" level="INFO">${date} = 2021-03-22 20:01:42.961864</msg>
<status status="PASS" starttime="20210322 20:01:42.962" endtime="20210322 20:01:42.962"></status>
</kw>
<kw name="Convert Date" library="DateTime">
<doc>Converts between supported `date formats`.</doc>
<arguments>
<arg>${date}</arg>
<arg>exclude_millis=yes</arg>
<arg>result_format=%Y-%m-%d</arg>
<arg>date_format=%d-%m-%Y</arg>
</arguments>
<assign>
<var>${date}</var>
</assign>
<msg timestamp="20210322 20:01:42.962" level="INFO">${date} = 2021-03-22</msg>
<status status="PASS" starttime="20210322 20:01:42.962" endtime="20210322 20:01:42.962"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["marketplace_id"]}</arg>
<arg>${marketplace_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210322 20:01:42.963" endtime="20210322 20:01:42.963"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["status"]}</arg>
<arg>${status_pix_payments}</arg>
</arguments>
<status status="PASS" starttime="20210322 20:01:42.963" endtime="20210322 20:01:42.964"></status>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${response.json()["end_to_end_id"]}</arg>
</arguments>
<msg timestamp="20210322 20:01:42.964" level="INFO">Length is 32</msg>
<status status="PASS" starttime="20210322 20:01:42.964" endtime="20210322 20:01:42.964"></status>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${response.json()["message_id"]}</arg>
</arguments>
<msg timestamp="20210322 20:01:42.965" level="INFO">Length is 32</msg>
<status status="PASS" starttime="20210322 20:01:42.965" endtime="20210322 20:01:42.965"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.json()["amount"]}</arg>
<arg>${amount}</arg>
</arguments>
<msg timestamp="20210322 20:01:42.965" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 20:01:42.965" endtime="20210322 20:01:42.965"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["description"]}</arg>
<arg>${pix_description}</arg>
</arguments>
<status status="PASS" starttime="20210322 20:01:42.966" endtime="20210322 20:01:42.966"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["national_registration"]}</arg>
<arg>${debitor_national_registration}</arg>
</arguments>
<status status="PASS" starttime="20210322 20:01:42.966" endtime="20210322 20:01:42.966"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["name"]}</arg>
<arg>${debitor_name}</arg>
</arguments>
<status status="PASS" starttime="20210322 20:01:42.967" endtime="20210322 20:01:42.967"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["type"]}</arg>
<arg>${debitor_type}</arg>
</arguments>
<status status="PASS" starttime="20210322 20:01:42.967" endtime="20210322 20:01:42.967"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["holder_id"]}</arg>
<arg>${debitor_holder_id}</arg>
</arguments>
<status status="PASS" starttime="20210322 20:01:42.967" endtime="20210322 20:01:42.968"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["account"]["psp"]["code"]}</arg>
<arg>${debtor_account_psp_code}</arg>
</arguments>
<status status="PASS" starttime="20210322 20:01:42.968" endtime="20210322 20:01:42.968"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["account"]["psp"]["name"]}</arg>
<arg>${debtor_account_psp_name}</arg>
</arguments>
<status status="PASS" starttime="20210322 20:01:42.968" endtime="20210322 20:01:42.969"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["account"]["digital_account_id"]}</arg>
<arg>${debtor_digital_account}</arg>
</arguments>
<status status="PASS" starttime="20210322 20:01:42.969" endtime="20210322 20:01:42.969"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["account"]["number"]}</arg>
<arg>${account_number}</arg>
</arguments>
<status status="PASS" starttime="20210322 20:01:42.969" endtime="20210322 20:01:42.970"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["account"]["routing_number"]}</arg>
<arg>0${debtor_account_routing_number}</arg>
</arguments>
<status status="PASS" starttime="20210322 20:01:42.970" endtime="20210322 20:01:42.970"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["account"]["type"]}</arg>
<arg>${debtor_account_type}</arg>
</arguments>
<status status="PASS" starttime="20210322 20:01:42.970" endtime="20210322 20:01:42.971"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["creditor"]["national_registration"]}</arg>
<arg>${creditor_national_registration}</arg>
</arguments>
<status status="PASS" starttime="20210322 20:01:42.971" endtime="20210322 20:01:42.971"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["creditor"]["name"]}</arg>
<arg>${creditor_name}</arg>
</arguments>
<status status="PASS" starttime="20210322 20:01:42.971" endtime="20210322 20:01:42.972"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["creditor"]["type"]}</arg>
<arg>${creditor_type}</arg>
</arguments>
<status status="PASS" starttime="20210322 20:01:42.972" endtime="20210322 20:01:42.972"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["creditor"]["account"]["psp"]["code"]}</arg>
<arg>${creditor_account_psp_code}</arg>
</arguments>
<status status="PASS" starttime="20210322 20:01:42.972" endtime="20210322 20:01:42.973"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["creditor"]["account"]["number"]}</arg>
<arg>${creditor_account_number}</arg>
</arguments>
<status status="PASS" starttime="20210322 20:01:42.973" endtime="20210322 20:01:42.973"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["creditor"]["account"]["routing_number"]}</arg>
<arg>${creditor_account_routing_number}</arg>
</arguments>
<status status="PASS" starttime="20210322 20:01:42.973" endtime="20210322 20:01:42.974"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["creditor"]["account"]["type"]}</arg>
<arg>${creditor_account_type}</arg>
</arguments>
<status status="PASS" starttime="20210322 20:01:42.974" endtime="20210322 20:01:42.974"></status>
</kw>
<status status="PASS" starttime="20210322 20:01:42.959" endtime="20210322 20:01:42.974"></status>
</kw>
<kw name="buscar account balance" library="account_get_balance">
<arguments>
<arg>marketplace_external_key=${marketplace_external_key}</arg>
<arg>account_external_key=${account_external_key}</arg>
</arguments>
<kw name="conectar accounts" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accounts</arg>
<arg>url=${account_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 20:01:42.976" level="INFO">Creating Session using : alias=accounts, url=https://banking-accounts-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 20:01:42.976" endtime="20210322 20:01:42.976"></status>
</kw>
<status status="PASS" starttime="20210322 20:01:42.975" endtime="20210322 20:01:42.976"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accounts</arg>
<arg>/marketplaces/${marketplace_external_key}/accounts/${account_external_key}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 20:01:42.977" level="INFO">GET Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/accounts/1e4d20d77f574a779ca3f31c2be72a83, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 20:01:43.595" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 20:01:42.976" endtime="20210322 20:01:43.595"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 20:01:43.596" level="INFO">{'id': '1e4d20d77f574a779ca3f31c2be72a83', 'holder': '684cfaa66a3a40f6b748c6ce5c505d2b', 'balance': '8999997.10', 'currency': 'BRL', 'routing_number': '001', 'number': '1162721615', 'status': 'active', 'metadata': {}, 'created_at': '2021-03-22T23:01:35.998573', 'updated_at': '2021-03-22T23:01:42.160803', 'primary': True, 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'uri': '/v2/marketplaces/f71a8951368a4cc085cf7875ff44e61c/accounts/1e4d20d77f574a779ca3f31c2be72a83', 'resource': 'payment_account'}</msg>
<status status="PASS" starttime="20210322 20:01:43.596" endtime="20210322 20:01:43.596"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 20:01:43.597" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 20:01:43.596" endtime="20210322 20:01:43.597"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["balance"]}</arg>
</arguments>
<assign>
<var>${account_balance}</var>
</assign>
<msg timestamp="20210322 20:01:43.597" level="INFO">${account_balance} = 8999997.10</msg>
<status status="PASS" starttime="20210322 20:01:43.597" endtime="20210322 20:01:43.597"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_balance}</arg>
</arguments>
<msg timestamp="20210322 20:01:43.598" level="INFO">${account_balance} = 8999997.10</msg>
<status status="PASS" starttime="20210322 20:01:43.598" endtime="20210322 20:01:43.598"></status>
</kw>
<status status="PASS" starttime="20210322 20:01:42.975" endtime="20210322 20:01:43.598"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${account_balance}</arg>
</arguments>
<assign>
<var>${account_balance_final}</var>
</assign>
<msg timestamp="20210322 20:01:43.599" level="INFO">${account_balance_final} = 8999997.10</msg>
<status status="PASS" starttime="20210322 20:01:43.599" endtime="20210322 20:01:43.599"></status>
</kw>
<kw name="validar debito na account" library="asserts">
<arguments>
<arg>account_balance_initial=${account_balance_initial}</arg>
<arg>account_balance_final=${account_balance_final}</arg>
<arg>amount=${amount}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${account_balance_initial}</arg>
</arguments>
<msg timestamp="20210322 20:01:43.601" level="INFO">9000000.00</msg>
<status status="PASS" starttime="20210322 20:01:43.601" endtime="20210322 20:01:43.601"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${amount}</arg>
</arguments>
<msg timestamp="20210322 20:01:43.601" level="INFO">290</msg>
<status status="PASS" starttime="20210322 20:01:43.601" endtime="20210322 20:01:43.601"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${account_balance_initial} - (${amount}/100)</arg>
</arguments>
<assign>
<var>${account_balance_actual}</var>
</assign>
<msg timestamp="20210322 20:01:43.602" level="INFO">${account_balance_actual} = 8999997.1</msg>
<status status="PASS" starttime="20210322 20:01:43.602" endtime="20210322 20:01:43.602"></status>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${account_balance_final}</arg>
</arguments>
<assign>
<var>${account_balance_final}</var>
</assign>
<msg timestamp="20210322 20:01:43.602" level="INFO">${account_balance_final} = 8999997.1</msg>
<status status="PASS" starttime="20210322 20:01:43.602" endtime="20210322 20:01:43.602"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${account_balance_final}</arg>
<arg>${account_balance_actual}</arg>
</arguments>
<status status="PASS" starttime="20210322 20:01:43.603" endtime="20210322 20:01:43.603"></status>
</kw>
<status status="PASS" starttime="20210322 20:01:43.600" endtime="20210322 20:01:43.603"></status>
</kw>
<doc>Envio de PIX com sucesso para uma conta Iti, a partir de um Holder Business</doc>
<status status="PASS" starttime="20210322 20:01:32.082" endtime="20210322 20:01:43.604" critical="yes"></status>
</test>
<doc>Funcionalidade: Confirmar Chave de Endereçamento
Eu, como um Holder, portador de uma conta ativa em Banking
Desejo confirmar o pagamento de um envio de PIX</doc>
<status status="PASS" starttime="20210322 20:01:31.518" endtime="20210322 20:01:43.607"></status>
</suite>
<statistics>
<total>
<stat pass="1" fail="0">Critical Tests</stat>
<stat pass="1" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="1" fail="0" id="s1" name="Confirmar Pagamento PIX">Confirmar Pagamento PIX</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>

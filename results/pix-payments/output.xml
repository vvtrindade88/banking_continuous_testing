<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.8.1 on win32)" generated="20210324 11:38:06.815" rpa="false">
<suite id="s1" name="Pix-Payments" source="C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\tests\pix-payments">
<suite id="s1-s1" name="Envio" source="C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\tests\pix-payments\envio">
<suite id="s1-s1-s1" name="Cancelar Pagamento PIX" source="C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\tests\pix-payments\envio\Cancelar Pagamento PIX.robot">
<test id="s1-s1-s1-t1" name="Cenário: Cancelar pagamento PIX">
<kw name="criar chave pix ativa" library="pix_dict_create_active_key_pix">
<arguments>
<arg>holder_type=individual</arg>
<arg>pix_type=email</arg>
</arguments>
<kw name="Random Number" library="FakerLibrary">
<doc>Returns a random number with 1 digit (default, when digits==None),
a random number with 0 to given number of digits, or a random number
with given number to given number of digits (when ``fix_len==True``).</doc>
<arguments>
<arg>digits=8</arg>
<arg>fix_len=True</arg>
</arguments>
<assign>
<var>${phone}</var>
</assign>
<msg timestamp="20210324 11:38:07.863" level="INFO">${phone} = 90858450</msg>
<status status="PASS" starttime="20210324 11:38:07.862" endtime="20210324 11:38:07.863"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>+55219${phone}</arg>
</arguments>
<assign>
<var>${phone_pix}</var>
</assign>
<msg timestamp="20210324 11:38:07.863" level="INFO">${phone_pix} = +5521990858450</msg>
<status status="PASS" starttime="20210324 11:38:07.863" endtime="20210324 11:38:07.864"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${phone_pix}</arg>
</arguments>
<msg timestamp="20210324 11:38:07.864" level="INFO">${phone_pix} = +5521990858450</msg>
<status status="PASS" starttime="20210324 11:38:07.864" endtime="20210324 11:38:07.864"></status>
</kw>
<kw name="Email" library="FakerLibrary">
<assign>
<var>${email_pix}</var>
</assign>
<msg timestamp="20210324 11:38:07.865" level="INFO">${email_pix} = waraujo@yahoo.com.br</msg>
<status status="PASS" starttime="20210324 11:38:07.865" endtime="20210324 11:38:07.865"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${email_pix}</arg>
</arguments>
<msg timestamp="20210324 11:38:07.866" level="INFO">${email_pix} = waraujo@yahoo.com.br</msg>
<status status="PASS" starttime="20210324 11:38:07.866" endtime="20210324 11:38:07.866"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${holder_type}' == 'business'</arg>
<arg>criar holder business ativo</arg>
<arg>ELSE IF</arg>
<arg>'${holder_type}' == 'individual'</arg>
<arg>criar holder individual ativo</arg>
</arguments>
<kw name="criar holder individual ativo" library="accreditation_create_holder_active">
<kw name="conectar accreditation" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accreditation</arg>
<arg>url=${accreditation_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210324 11:38:07.868" level="INFO">Creating Session using : alias=accreditation, url=https://banking-accreditation-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210324 11:38:07.868" endtime="20210324 11:38:07.869"></status>
</kw>
<status status="PASS" starttime="20210324 11:38:07.867" endtime="20210324 11:38:07.869"></status>
</kw>
<kw name="Cpf" library="FakerLibrary">
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210324 11:38:07.870" level="INFO">${national_registration} = 518.296.730-68</msg>
<status status="PASS" starttime="20210324 11:38:07.870" endtime="20210324 11:38:07.871"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${national_registration}</arg>
<arg>.</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210324 11:38:07.872" level="INFO">${national_registration} = 518296730-68</msg>
<status status="PASS" starttime="20210324 11:38:07.871" endtime="20210324 11:38:07.872"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${national_registration}</arg>
<arg>-</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210324 11:38:07.873" level="INFO">${national_registration} = 51829673068</msg>
<status status="PASS" starttime="20210324 11:38:07.872" endtime="20210324 11:38:07.873"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${national_registration}</arg>
</arguments>
<msg timestamp="20210324 11:38:07.874" level="INFO">${national_registration} = 51829673068</msg>
<status status="PASS" starttime="20210324 11:38:07.873" endtime="20210324 11:38:07.874"></status>
</kw>
<kw name="Rg" library="FakerLibrary">
<doc>Brazilian RG, return plain numbers.
Check:  https://www.ngmatematica.com/2014/02/como-determinar-o-digito-verificador-do.html</doc>
<assign>
<var>${identity_card}</var>
</assign>
<msg timestamp="20210324 11:38:07.875" level="INFO">${identity_card} = 760432855</msg>
<status status="PASS" starttime="20210324 11:38:07.874" endtime="20210324 11:38:07.875"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${identity_card}</arg>
</arguments>
<msg timestamp="20210324 11:38:07.876" level="INFO">${identity_card} = 760432855</msg>
<status status="PASS" starttime="20210324 11:38:07.876" endtime="20210324 11:38:07.876"></status>
</kw>
<kw name="criar holder individual" library="accreditation_post_holder_individual">
<arguments>
<arg>holder_type=individual</arg>
<arg>holder_name=${holder_name}</arg>
<arg>email=${email}</arg>
<arg>national_registration=${national_registration}</arg>
<arg>revenue=${revenue}</arg>
<arg>birthday=${birthday}</arg>
<arg>mothers_name=${mothers_name}</arg>
<arg>identity_card=${identity_card}</arg>
<arg>pep=false</arg>
<arg>cbo=${cbo}</arg>
</arguments>
<kw name="conectar accreditation" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accreditation</arg>
<arg>url=${accreditation_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210324 11:38:07.880" level="INFO">Creating Session using : alias=accreditation, url=https://banking-accreditation-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210324 11:38:07.880" endtime="20210324 11:38:07.881"></status>
</kw>
<status status="PASS" starttime="20210324 11:38:07.879" endtime="20210324 11:38:07.881"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_type}</arg>
</arguments>
<msg timestamp="20210324 11:38:07.882" level="INFO">${holder_type} = individual</msg>
<status status="PASS" starttime="20210324 11:38:07.881" endtime="20210324 11:38:07.883"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_name}</arg>
</arguments>
<msg timestamp="20210324 11:38:07.884" level="INFO">${holder_name} = Holder de teste</msg>
<status status="PASS" starttime="20210324 11:38:07.883" endtime="20210324 11:38:07.884"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210324 11:38:07.885" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210324 11:38:07.884" endtime="20210324 11:38:07.885"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "${holder_type}",</arg>
<arg>"name": "${holder_name}",</arg>
<arg>"email": "${email}",</arg>
<arg>"national_registration": "${national_registration}",</arg>
<arg>"revenue": ${revenue},</arg>
<arg>"birthday": "${birthday}",</arg>
<arg>"mothers_name": "${mothers_name}",</arg>
<arg>"identity_card": "${identity_card}",</arg>
<arg>"pep": false,</arg>
<arg>"cbo": ${cbo}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210324 11:38:07.887" level="INFO">${body} = { "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "51829673068", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder",...</msg>
<status status="PASS" starttime="20210324 11:38:07.886" endtime="20210324 11:38:07.887"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210324 11:38:07.888" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "51829673068", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder", "identity_card": "760432855", "pep": false, "cbo": 821450 } 
json=None</msg>
<msg timestamp="20210324 11:38:08.689" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210324 11:38:07.887" endtime="20210324 11:38:08.689"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210324 11:38:08.690" level="INFO">{'id': '441ce6271c064240b2bdc4cd0a042d77', 'name': 'Holder de teste', 'revenue': 5500.0, 'email': 'teste@teste.com.br', 'status': 'waiting_info_and_documents', 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'marketplace_name': 'Marketplace de Teste', 'created_at': '2021-03-24T11:38:08.280305', 'updated_at': '2021-03-24T11:38:08.280306', 'type': 'individual', 'national_registration': '51829673068', 'birthday': '1988-04-23', 'mothers_name': 'Mãe do Holder', 'identity_card': '760432855', 'pep': False, 'cbo': '821450', '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/441ce6271c064240b2bdc4cd0a042d77', 'type': 'GET'}, 'phones': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/441ce6271c064240b2bdc4cd0a042d77/phones', 'type': 'GET'}, 'addresses': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/441ce6271c064240b2bdc4cd0a042d77/addresses', 'type': 'GET'}, 'documents': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/441ce6271c064240b2bdc4cd0a042d77/documents', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210324 11:38:08.689" endtime="20210324 11:38:08.690"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210324 11:38:08.691" level="INFO">2794a1d43814b0d8</msg>
<status status="PASS" starttime="20210324 11:38:08.691" endtime="20210324 11:38:08.691"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${body}</arg>
</arguments>
<msg timestamp="20210324 11:38:08.692" level="INFO">{ "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "51829673068", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder", "identity_card": "760432855", "pep": false, "cbo": 821450 }</msg>
<status status="PASS" starttime="20210324 11:38:08.692" endtime="20210324 11:38:08.692"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210324 11:38:08.693" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210324 11:38:08.692" endtime="20210324 11:38:08.693"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${holder_external_key}</var>
</assign>
<msg timestamp="20210324 11:38:08.694" level="INFO">${holder_external_key} = 441ce6271c064240b2bdc4cd0a042d77</msg>
<status status="PASS" starttime="20210324 11:38:08.693" endtime="20210324 11:38:08.694"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_external_key}</arg>
</arguments>
<msg timestamp="20210324 11:38:08.695" level="INFO">${holder_external_key} = 441ce6271c064240b2bdc4cd0a042d77</msg>
<status status="PASS" starttime="20210324 11:38:08.694" endtime="20210324 11:38:08.695"></status>
</kw>
<status status="PASS" starttime="20210324 11:38:07.877" endtime="20210324 11:38:08.695"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_name}</arg>
</arguments>
<msg timestamp="20210324 11:38:08.696" level="INFO">${holder_name} = Holder de teste</msg>
<status status="PASS" starttime="20210324 11:38:08.695" endtime="20210324 11:38:08.696"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210324 11:38:08.697" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210324 11:38:08.696" endtime="20210324 11:38:08.697"></status>
</kw>
<kw name="criar holder phone" library="accreditation_post_holder_phone">
<arguments>
<arg>21</arg>
<arg>51</arg>
<arg>996221236</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210324 11:38:08.699" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210324 11:38:08.698" endtime="20210324 11:38:08.699"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"area_code": "${phone_area_code}",</arg>
<arg>"country_code": "${phone_country_code}",</arg>
<arg>"number": "${phone_number}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210324 11:38:08.699" level="INFO">${body} = { "area_code": "21", "country_code": "51", "number": "996221236" }</msg>
<status status="PASS" starttime="20210324 11:38:08.699" endtime="20210324 11:38:08.700"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/phones</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210324 11:38:08.701" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/441ce6271c064240b2bdc4cd0a042d77/phones, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "area_code": "21", "country_code": "51", "number": "996221236" } 
json=None</msg>
<msg timestamp="20210324 11:38:08.966" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210324 11:38:08.700" endtime="20210324 11:38:08.966"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210324 11:38:08.968" level="INFO">{'id': 'ac510111b0cf4ae2931dfc3bb1f08657', 'area_code': '21', 'country_code': '51', 'number': '996221236', 'main': True, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/441ce6271c064240b2bdc4cd0a042d77/phones/ac510111b0cf4ae2931dfc3bb1f08657', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/441ce6271c064240b2bdc4cd0a042d77', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210324 11:38:08.967" endtime="20210324 11:38:08.969"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210324 11:38:08.970" level="INFO">90851562da48b250</msg>
<status status="PASS" starttime="20210324 11:38:08.969" endtime="20210324 11:38:08.970"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210324 11:38:08.971" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210324 11:38:08.971" endtime="20210324 11:38:08.971"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${phone_external_key}</var>
</assign>
<msg timestamp="20210324 11:38:08.972" level="INFO">${phone_external_key} = ac510111b0cf4ae2931dfc3bb1f08657</msg>
<status status="PASS" starttime="20210324 11:38:08.972" endtime="20210324 11:38:08.973"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${phone_external_key}</arg>
</arguments>
<msg timestamp="20210324 11:38:08.973" level="INFO">${phone_external_key} = ac510111b0cf4ae2931dfc3bb1f08657</msg>
<status status="PASS" starttime="20210324 11:38:08.973" endtime="20210324 11:38:08.973"></status>
</kw>
<status status="PASS" starttime="20210324 11:38:08.697" endtime="20210324 11:38:08.974"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210324 11:38:08.974" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210324 11:38:08.974" endtime="20210324 11:38:08.974"></status>
</kw>
<kw name="criar holder address" library="accreditation_post_holder_address">
<arguments>
<arg>Rio de Janeiro</arg>
<arg>Rio de Janeiro</arg>
<arg>Brasil</arg>
<arg>Bairro de Testes</arg>
<arg>Rua de Testes</arg>
<arg>90</arg>
<arg>apto 200</arg>
<arg>21550987</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210324 11:38:08.976" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210324 11:38:08.975" endtime="20210324 11:38:08.976"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"city": "${city}",</arg>
<arg>"state": "${state}",</arg>
<arg>"country": "${country}",</arg>
<arg>"neighborhood": "${neighborhood}",</arg>
<arg>"street": "${street}",</arg>
<arg>"number": "${number}",</arg>
<arg>"complement": "${complement}",</arg>
<arg>"postal_code": "${postal_code}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210324 11:38:08.977" level="INFO">${body} = { "city": "Rio de Janeiro", "state": "Rio de Janeiro", "country": "Brasil", "neighborhood": "Bairro de Testes", "street": "Rua de Testes", "number": "90", "complement": "apto 200", "postal_code": "215...</msg>
<status status="PASS" starttime="20210324 11:38:08.976" endtime="20210324 11:38:08.977"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/addresses</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210324 11:38:08.978" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/441ce6271c064240b2bdc4cd0a042d77/addresses, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "city": "Rio de Janeiro", "state": "Rio de Janeiro", "country": "Brasil", "neighborhood": "Bairro de Testes", "street": "Rua de Testes", "number": "90", "complement": "apto 200", "postal_code": "21550987" } 
json=None</msg>
<msg timestamp="20210324 11:38:09.220" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210324 11:38:08.977" endtime="20210324 11:38:09.220"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210324 11:38:09.223" level="INFO">{'id': 'bd14e386d101415eb7241bdd9aa53109', 'street': 'Rua de Testes', 'number': '90', 'city': 'Rio de Janeiro', 'complement': 'apto 200', 'state': 'Rio de Janeiro', 'neighborhood': 'Bairro de Testes', 'postal_code': '21550987', 'country': 'Brasil', 'main': True, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/441ce6271c064240b2bdc4cd0a042d77/addresses/bd14e386d101415eb7241bdd9aa53109', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/441ce6271c064240b2bdc4cd0a042d77', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210324 11:38:09.221" endtime="20210324 11:38:09.223"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210324 11:38:09.225" level="INFO">9575a69a30097796</msg>
<status status="PASS" starttime="20210324 11:38:09.224" endtime="20210324 11:38:09.225"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210324 11:38:09.227" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210324 11:38:09.226" endtime="20210324 11:38:09.227"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${address_external_key}</var>
</assign>
<msg timestamp="20210324 11:38:09.230" level="INFO">${address_external_key} = bd14e386d101415eb7241bdd9aa53109</msg>
<status status="PASS" starttime="20210324 11:38:09.228" endtime="20210324 11:38:09.230"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${address_external_key}</arg>
</arguments>
<msg timestamp="20210324 11:38:09.232" level="INFO">${address_external_key} = bd14e386d101415eb7241bdd9aa53109</msg>
<status status="PASS" starttime="20210324 11:38:09.231" endtime="20210324 11:38:09.232"></status>
</kw>
<status status="PASS" starttime="20210324 11:38:08.975" endtime="20210324 11:38:09.232"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210324 11:38:09.234" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210324 11:38:09.233" endtime="20210324 11:38:09.234"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>SELFIE</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210324 11:38:09.237" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210324 11:38:09.236" endtime="20210324 11:38:09.237"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>C:\\Users\\vinicius.trindade\\banking_continuous_testing\\banking_continuous_testing\\apis\\accreditation\\documents\\holder_documents\\post.${/}..${/}..${/}..${/}..${/}..${/}images${/}accreditation${/}image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210324 11:38:09.239" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210324 11:38:09.251" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210324 11:38:09.238" endtime="20210324 11:38:09.251"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210324 11:38:09.254" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/441ce6271c064240b2bdc4cd0a042d77/documents?type=SELFIE, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210324 11:38:09.622" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210324 11:38:09.252" endtime="20210324 11:38:09.622"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210324 11:38:09.625" level="INFO">{'id': 'a65c74cfe6d74b189082e1bf21fdfe20', 'document_type': 'selfie', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/441ce6271c064240b2bdc4cd0a042d77/documents/a65c74cfe6d74b189082e1bf21fdfe20', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/441ce6271c064240b2bdc4cd0a042d77', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/441ce6271c064240b2bdc4cd0a042d77/documents/a65c74cfe6d74b189082e1bf21fdfe20/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210324 11:38:09.623" endtime="20210324 11:38:09.625"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210324 11:38:09.626" level="INFO">4b67f213c0e823f8</msg>
<status status="PASS" starttime="20210324 11:38:09.625" endtime="20210324 11:38:09.626"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210324 11:38:09.628" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210324 11:38:09.627" endtime="20210324 11:38:09.629"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210324 11:38:09.632" level="INFO">${document_external_key} = a65c74cfe6d74b189082e1bf21fdfe20</msg>
<status status="PASS" starttime="20210324 11:38:09.629" endtime="20210324 11:38:09.632"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210324 11:38:09.634" level="INFO">${document_external_key} = a65c74cfe6d74b189082e1bf21fdfe20</msg>
<status status="PASS" starttime="20210324 11:38:09.632" endtime="20210324 11:38:09.634"></status>
</kw>
<status status="PASS" starttime="20210324 11:38:09.235" endtime="20210324 11:38:09.634"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210324 11:38:09.636" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210324 11:38:09.635" endtime="20210324 11:38:09.637"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>RG_FRENTE</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210324 11:38:09.640" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210324 11:38:09.639" endtime="20210324 11:38:09.640"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>C:\\Users\\vinicius.trindade\\banking_continuous_testing\\banking_continuous_testing\\apis\\accreditation\\documents\\holder_documents\\post.${/}..${/}..${/}..${/}..${/}..${/}images${/}accreditation${/}image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210324 11:38:09.642" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210324 11:38:09.646" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210324 11:38:09.641" endtime="20210324 11:38:09.646"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210324 11:38:09.650" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/441ce6271c064240b2bdc4cd0a042d77/documents?type=RG_FRENTE, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210324 11:38:09.986" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210324 11:38:09.647" endtime="20210324 11:38:09.986"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210324 11:38:09.988" level="INFO">{'id': 'ab2cd7f890d742aab61b494fe14d6d58', 'document_type': 'rg_frente', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/441ce6271c064240b2bdc4cd0a042d77/documents/ab2cd7f890d742aab61b494fe14d6d58', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/441ce6271c064240b2bdc4cd0a042d77', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/441ce6271c064240b2bdc4cd0a042d77/documents/ab2cd7f890d742aab61b494fe14d6d58/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210324 11:38:09.987" endtime="20210324 11:38:09.989"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210324 11:38:09.990" level="INFO">10af7ee99e4e9447</msg>
<status status="PASS" starttime="20210324 11:38:09.989" endtime="20210324 11:38:09.991"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210324 11:38:09.992" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210324 11:38:09.991" endtime="20210324 11:38:09.993"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210324 11:38:09.995" level="INFO">${document_external_key} = ab2cd7f890d742aab61b494fe14d6d58</msg>
<status status="PASS" starttime="20210324 11:38:09.994" endtime="20210324 11:38:09.996"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210324 11:38:09.998" level="INFO">${document_external_key} = ab2cd7f890d742aab61b494fe14d6d58</msg>
<status status="PASS" starttime="20210324 11:38:09.996" endtime="20210324 11:38:09.998"></status>
</kw>
<status status="PASS" starttime="20210324 11:38:09.637" endtime="20210324 11:38:09.998"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210324 11:38:10.000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210324 11:38:09.999" endtime="20210324 11:38:10.000"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>RG_VERSO</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210324 11:38:10.004" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210324 11:38:10.003" endtime="20210324 11:38:10.004"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>C:\\Users\\vinicius.trindade\\banking_continuous_testing\\banking_continuous_testing\\apis\\accreditation\\documents\\holder_documents\\post.${/}..${/}..${/}..${/}..${/}..${/}images${/}accreditation${/}image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210324 11:38:10.006" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210324 11:38:10.011" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210324 11:38:10.005" endtime="20210324 11:38:10.011"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210324 11:38:10.015" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/441ce6271c064240b2bdc4cd0a042d77/documents?type=RG_VERSO, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210324 11:38:10.311" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210324 11:38:10.013" endtime="20210324 11:38:10.311"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210324 11:38:10.313" level="INFO">{'id': 'e953b1325b804ae48ac8287875a9c8c7', 'document_type': 'rg_verso', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/441ce6271c064240b2bdc4cd0a042d77/documents/e953b1325b804ae48ac8287875a9c8c7', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/441ce6271c064240b2bdc4cd0a042d77', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/441ce6271c064240b2bdc4cd0a042d77/documents/e953b1325b804ae48ac8287875a9c8c7/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210324 11:38:10.312" endtime="20210324 11:38:10.314"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210324 11:38:10.315" level="INFO">1387011e3bb14937</msg>
<status status="PASS" starttime="20210324 11:38:10.314" endtime="20210324 11:38:10.316"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210324 11:38:10.317" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210324 11:38:10.317" endtime="20210324 11:38:10.318"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210324 11:38:10.320" level="INFO">${document_external_key} = e953b1325b804ae48ac8287875a9c8c7</msg>
<status status="PASS" starttime="20210324 11:38:10.318" endtime="20210324 11:38:10.320"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210324 11:38:10.322" level="INFO">${document_external_key} = e953b1325b804ae48ac8287875a9c8c7</msg>
<status status="PASS" starttime="20210324 11:38:10.321" endtime="20210324 11:38:10.322"></status>
</kw>
<status status="PASS" starttime="20210324 11:38:10.001" endtime="20210324 11:38:10.323"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210324 11:38:10.324" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210324 11:38:10.323" endtime="20210324 11:38:10.325"></status>
</kw>
<kw name="solicitar aprovação do holder" library="accreditation_request_approval">
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210324 11:38:10.328" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210324 11:38:10.327" endtime="20210324 11:38:10.328"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/approval</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210324 11:38:10.330" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/441ce6271c064240b2bdc4cd0a042d77/approval, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data=None 
json=None</msg>
<msg timestamp="20210324 11:38:10.614" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210324 11:38:10.329" endtime="20210324 11:38:10.614"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210324 11:38:10.616" level="INFO">{'message': 'Approval request accepted successfully. Processing analysis'}</msg>
<status status="PASS" starttime="20210324 11:38:10.615" endtime="20210324 11:38:10.617"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210324 11:38:10.618" level="INFO">060692fe7d3dcf04</msg>
<status status="PASS" starttime="20210324 11:38:10.617" endtime="20210324 11:38:10.619"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210324 11:38:10.620" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210324 11:38:10.619" endtime="20210324 11:38:10.621"></status>
</kw>
<status status="PASS" starttime="20210324 11:38:10.325" endtime="20210324 11:38:10.621"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210324 11:38:10.623" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210324 11:38:10.622" endtime="20210324 11:38:10.623"></status>
</kw>
<kw name="recebendo notificação de aprovação" library="accreditation_risk_notification">
<kw name="Uuid 4" library="FakerLibrary">
<doc>Generates a random UUID4 string.
:param cast_to: Specify what type the UUID should be cast to. Default is `str`
:type cast_to: callable</doc>
<assign>
<var>${assessment_id}</var>
</assign>
<msg timestamp="20210324 11:38:10.627" level="INFO">${assessment_id} = 33c65633-4f43-41e2-82a1-6614a38f0425</msg>
<status status="PASS" starttime="20210324 11:38:10.625" endtime="20210324 11:38:10.627"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>year</arg>
</arguments>
<assign>
<var>${year}</var>
</assign>
<msg timestamp="20210324 11:38:10.629" level="INFO">${year} = 2021</msg>
<status status="PASS" starttime="20210324 11:38:10.628" endtime="20210324 11:38:10.629"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>month</arg>
</arguments>
<assign>
<var>${month}</var>
</assign>
<msg timestamp="20210324 11:38:10.630" level="INFO">${month} = 03</msg>
<status status="PASS" starttime="20210324 11:38:10.629" endtime="20210324 11:38:10.630"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>day</arg>
</arguments>
<assign>
<var>${day}</var>
</assign>
<msg timestamp="20210324 11:38:10.632" level="INFO">${day} = 24</msg>
<status status="PASS" starttime="20210324 11:38:10.631" endtime="20210324 11:38:10.632"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210324 11:38:10.634" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210324 11:38:10.633" endtime="20210324 11:38:10.634"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "risk.assessment.result",</arg>
<arg>"resource": "business.holder",</arg>
<arg>"created_at": "${year}-${month}-${day} 15:28:56.747Z",</arg>
<arg>"marketplace_id": "${marketplace_external_key}",</arg>
<arg>"object": {</arg>
<arg>"result": "APPROVED",</arg>
<arg>"holder_id": "${holder_external_key}",</arg>
<arg>"applicant_id": "${application_external_key}",</arg>
<arg>"assessment_id": "${assessment_id}"</arg>
<arg>}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210324 11:38:10.637" level="INFO">${body} = { "type": "risk.assessment.result", "resource": "business.holder", "created_at": "2021-03-24 15:28:56.747Z", "marketplace_id": "f71a8951368a4cc085cf7875ff44e61c", "object": { "result": "APPROVED", "ho...</msg>
<status status="PASS" starttime="20210324 11:38:10.635" endtime="20210324 11:38:10.637"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/admin/internal_operation/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/registration/approval</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210324 11:38:10.639" level="INFO">POST Request using : uri=/admin/internal_operation/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/441ce6271c064240b2bdc4cd0a042d77/registration/approval, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "risk.assessment.result", "resource": "business.holder", "created_at": "2021-03-24 15:28:56.747Z", "marketplace_id": "f71a8951368a4cc085cf7875ff44e61c", "object": { "result": "APPROVED", "holder_id": "441ce6271c064240b2bdc4cd0a042d77", "applicant_id": "bcc25a6751c14b52af1340d40dba78c5", "assessment_id": "33c65633-4f43-41e2-82a1-6614a38f0425" } } 
json=None</msg>
<msg timestamp="20210324 11:38:10.852" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210324 11:38:10.637" endtime="20210324 11:38:10.852"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210324 11:38:10.854" level="INFO">{'message': 'Holder approved successfully'}</msg>
<status status="PASS" starttime="20210324 11:38:10.852" endtime="20210324 11:38:10.854"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210324 11:38:10.856" level="INFO">d1a873006b3a6e8c</msg>
<status status="PASS" starttime="20210324 11:38:10.855" endtime="20210324 11:38:10.856"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210324 11:38:10.859" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210324 11:38:10.857" endtime="20210324 11:38:10.859"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210324 11:38:10.861" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210324 11:38:10.860" endtime="20210324 11:38:10.862"></status>
</kw>
<status status="PASS" starttime="20210324 11:38:10.624" endtime="20210324 11:38:10.863"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210324 11:38:10.865" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210324 11:38:10.864" endtime="20210324 11:38:10.866"></status>
</kw>
<kw name="buscar account por holder" library="accounts_get_accounts_by_holder">
<kw name="conectar accounts" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accounts</arg>
<arg>url=${account_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210324 11:38:10.871" level="INFO">Creating Session using : alias=accounts, url=https://banking-accounts-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210324 11:38:10.870" endtime="20210324 11:38:10.871"></status>
</kw>
<status status="PASS" starttime="20210324 11:38:10.868" endtime="20210324 11:38:10.872"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accounts</arg>
<arg>/marketplaces/${marketplace_external_key}/holders/${holder_external_key}/accounts</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210324 11:38:10.874" level="INFO">GET Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/holders/441ce6271c064240b2bdc4cd0a042d77/accounts, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210324 11:38:11.619" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210324 11:38:10.873" endtime="20210324 11:38:11.619"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210324 11:38:11.623" level="INFO">{'items': [{'id': 'fd4700c50e144203a482a97b1c448d80', 'holder': '441ce6271c064240b2bdc4cd0a042d77', 'balance': '0.00', 'currency': 'BRL', 'routing_number': '001', 'number': '177670673', 'status': 'active', 'metadata': {}, 'created_at': '2021-03-24T14:38:10.468426', 'updated_at': '2021-03-24T14:38:10.468426', 'primary': True, 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'uri': '/v2/marketplaces/f71a8951368a4cc085cf7875ff44e61c/accounts/fd4700c50e144203a482a97b1c448d80', 'resource': 'payment_account'}], 'has_more': False, 'limit': 100, 'total_pages': 1, 'page': 1, 'offset': 0, 'total': '1', 'query_count': '1'}</msg>
<status status="PASS" starttime="20210324 11:38:11.621" endtime="20210324 11:38:11.623"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210324 11:38:11.625" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210324 11:38:11.624" endtime="20210324 11:38:11.625"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["id"]}</arg>
</arguments>
<assign>
<var>${account_external_key}</var>
</assign>
<msg timestamp="20210324 11:38:11.627" level="INFO">${account_external_key} = fd4700c50e144203a482a97b1c448d80</msg>
<status status="PASS" starttime="20210324 11:38:11.625" endtime="20210324 11:38:11.627"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_external_key}</arg>
</arguments>
<msg timestamp="20210324 11:38:11.629" level="INFO">${account_external_key} = fd4700c50e144203a482a97b1c448d80</msg>
<status status="PASS" starttime="20210324 11:38:11.628" endtime="20210324 11:38:11.629"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["number"]}</arg>
</arguments>
<assign>
<var>${account_number}</var>
</assign>
<msg timestamp="20210324 11:38:11.632" level="INFO">${account_number} = 177670673</msg>
<status status="PASS" starttime="20210324 11:38:11.630" endtime="20210324 11:38:11.632"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_number}</arg>
</arguments>
<msg timestamp="20210324 11:38:11.634" level="INFO">${account_number} = 177670673</msg>
<status status="PASS" starttime="20210324 11:38:11.633" endtime="20210324 11:38:11.634"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["routing_number"]}</arg>
</arguments>
<assign>
<var>${account_routing_number}</var>
</assign>
<msg timestamp="20210324 11:38:11.636" level="INFO">${account_routing_number} = 001</msg>
<status status="PASS" starttime="20210324 11:38:11.635" endtime="20210324 11:38:11.636"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_routing_number}</arg>
</arguments>
<msg timestamp="20210324 11:38:11.637" level="INFO">${account_routing_number} = 001</msg>
<status status="PASS" starttime="20210324 11:38:11.637" endtime="20210324 11:38:11.637"></status>
</kw>
<status status="PASS" starttime="20210324 11:38:10.867" endtime="20210324 11:38:11.638"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210324 11:38:11.639" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210324 11:38:11.638" endtime="20210324 11:38:11.639"></status>
</kw>
<status status="PASS" starttime="20210324 11:38:07.867" endtime="20210324 11:38:11.639"></status>
</kw>
<status status="PASS" starttime="20210324 11:38:07.866" endtime="20210324 11:38:11.639"></status>
</kw>
<kw name="gerar saldo para account" library="account_generate_balance">
<arguments>
<arg>${account_external_key}</arg>
</arguments>
<kw name="Uuid 4" library="FakerLibrary">
<doc>Generates a random UUID4 string.
:param cast_to: Specify what type the UUID should be cast to. Default is `str`
:type cast_to: callable</doc>
<assign>
<var>${uuid}</var>
</assign>
<msg timestamp="20210324 11:38:11.641" level="INFO">${uuid} = d79be9f1-c410-470e-9234-82614cc8b378</msg>
<status status="PASS" starttime="20210324 11:38:11.640" endtime="20210324 11:38:11.641"></status>
</kw>
<kw name="conectar accounts" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accounts</arg>
<arg>url=${account_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210324 11:38:11.642" level="INFO">Creating Session using : alias=accounts, url=https://banking-accounts-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210324 11:38:11.642" endtime="20210324 11:38:11.643"></status>
</kw>
<status status="PASS" starttime="20210324 11:38:11.641" endtime="20210324 11:38:11.643"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210324 11:38:11.644" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210324 11:38:11.643" endtime="20210324 11:38:11.644"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"operations": [</arg>
<arg>{</arg>
<arg>"amount": 9000000000000,</arg>
<arg>"authorization_code": "${uuid}",</arg>
<arg>"transaction_id": "${uuid}",</arg>
<arg>"id": "${uuid}",</arg>
<arg>"id_checking_account": "${account_external_key}",</arg>
<arg>"transfer_date": "2020-02-20T20:58:06.510Z",</arg>
<arg>"fee": 0,</arg>
<arg>"description": "Teste",</arg>
<arg>"object_type": "transfer",</arg>
<arg>"object_id": "${uuid}",</arg>
<arg>"dflag": "ACTIVE",</arg>
<arg>"created_at": "2019-10-14T20:58:06.510Z",</arg>
<arg>"type": "Transfer"</arg>
<arg>}</arg>
<arg>],</arg>
<arg>"reference_id": "Criando saldo na account"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210324 11:38:11.645" level="INFO">${body} = { "operations": [ { "amount": 9000000000000, "authorization_code": "d79be9f1-c410-470e-9234-82614cc8b378", "transaction_id": "d79be9f1-c410-470e-9234-82614cc8b378", "id": "d79be9f1-c410-470e-9234-8261...</msg>
<status status="PASS" starttime="20210324 11:38:11.644" endtime="20210324 11:38:11.645"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accounts</arg>
<arg>/admin/internal_operation/authorization/${uuid}</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210324 11:38:11.646" level="INFO">POST Request using : uri=/admin/internal_operation/authorization/d79be9f1-c410-470e-9234-82614cc8b378, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "operations": [ { "amount": 9000000000000, "authorization_code": "d79be9f1-c410-470e-9234-82614cc8b378", "transaction_id": "d79be9f1-c410-470e-9234-82614cc8b378", "id": "d79be9f1-c410-470e-9234-82614cc8b378", "id_checking_account": "fd4700c50e144203a482a97b1c448d80", "transfer_date": "2020-02-20T20:58:06.510Z", "fee": 0, "description": "Teste", "object_type": "transfer", "object_id": "d79be9f1-c410-470e-9234-82614cc8b378", "dflag": "ACTIVE", "created_at": "2019-10-14T20:58:06.510Z", "type": "Transfer" } ], "reference_id": "Criando saldo na account" } 
json=None</msg>
<msg timestamp="20210324 11:38:12.371" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210324 11:38:11.645" endtime="20210324 11:38:12.371"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.status_code}' == 200</arg>
<arg>Log</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210324 11:38:12.372" endtime="20210324 11:38:12.374"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.status_code}' == 200</arg>
<arg>Log</arg>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<status status="PASS" starttime="20210324 11:38:12.375" endtime="20210324 11:38:12.377"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.status_code}' == 200</arg>
<arg>Log</arg>
<arg>${response.status_code}</arg>
</arguments>
<status status="PASS" starttime="20210324 11:38:12.379" endtime="20210324 11:38:12.381"></status>
</kw>
<status status="PASS" starttime="20210324 11:38:11.640" endtime="20210324 11:38:12.381"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${pix_type}' == 'phone'</arg>
<arg>criar chave pix</arg>
<arg>${pix_type}</arg>
<arg>${phone_pix}</arg>
<arg>ELSE IF</arg>
<arg>'${pix_type}' == 'email'</arg>
<arg>criar chave pix</arg>
<arg>${pix_type}</arg>
<arg>${email_pix}</arg>
<arg>ELSE IF</arg>
<arg>'${pix_type}' == 'evp'</arg>
<arg>criar chave pix</arg>
<arg>${pix_type}</arg>
<arg>${EMPTY}</arg>
<arg>ELSE IF</arg>
<arg>'${pix_type}' == 'national_registration'</arg>
<arg>criar chave pix</arg>
<arg>${pix_type}</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw name="criar chave pix" library="pix_dict_create_entry">
<arguments>
<arg>${pix_type}</arg>
<arg>${email_pix}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210324 11:38:12.389" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210324 11:38:12.388" endtime="20210324 11:38:12.390"></status>
</kw>
<status status="PASS" starttime="20210324 11:38:12.386" endtime="20210324 11:38:12.391"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${type}</arg>
</arguments>
<msg timestamp="20210324 11:38:12.393" level="INFO">${type} = email</msg>
<status status="PASS" starttime="20210324 11:38:12.392" endtime="20210324 11:38:12.393"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210324 11:38:12.395" level="INFO">${value} = waraujo@yahoo.com.br</msg>
<status status="PASS" starttime="20210324 11:38:12.394" endtime="20210324 11:38:12.395"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210324 11:38:12.397" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210324 11:38:12.396" endtime="20210324 11:38:12.398"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "${type}",</arg>
<arg>"value": "${value}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210324 11:38:12.401" level="INFO">${body} = { "type": "email", "value": "waraujo@yahoo.com.br" }</msg>
<status status="PASS" starttime="20210324 11:38:12.399" endtime="20210324 11:38:12.401"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210324 11:38:12.404" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/441ce6271c064240b2bdc4cd0a042d77/accounts/fd4700c50e144203a482a97b1c448d80/entries, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "email", "value": "waraujo@yahoo.com.br" } 
json=None</msg>
<msg timestamp="20210324 11:38:13.280" level="INFO">${response} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20210324 11:38:12.402" endtime="20210324 11:38:13.281"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210324 11:38:13.283" level="INFO">{'id': '4347e0d591c3438d8670ad45c129d6aa', 'status': 'waiting_ownership_verification', 'created_at': '2021-03-24T11:38:12.825', 'updated_at': '2021-03-24T11:38:12.825', 'key': {'value': 'waraujo@yahoo.com.br', 'type': 'email'}, 'account': {'id': 'fd4700c50e144203a482a97b1c448d80', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': '441ce6271c064240b2bdc4cd0a042d77', 'owner': {'name': 'Holder de teste', 'national_registration': '51829673068', 'type': 'individual'}, 'routing_number': '001', 'number': '177670673', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}, 'resource': 'pix.entry'}</msg>
<status status="PASS" starttime="20210324 11:38:13.282" endtime="20210324 11:38:13.283"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210324 11:38:13.285" level="INFO">565969b1c6415106</msg>
<status status="PASS" starttime="20210324 11:38:13.284" endtime="20210324 11:38:13.286"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210324 11:38:13.288" level="INFO">202</msg>
<status status="PASS" starttime="20210324 11:38:13.287" endtime="20210324 11:38:13.288"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210324 11:38:13.290" level="INFO">${response} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20210324 11:38:13.289" endtime="20210324 11:38:13.291"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${entry_external_key}</var>
</assign>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<status status="PASS" starttime="20210324 11:38:13.294" endtime="20210324 11:38:13.296"></status>
</kw>
<msg timestamp="20210324 11:38:13.296" level="INFO">${entry_external_key} = 4347e0d591c3438d8670ad45c129d6aa</msg>
<status status="PASS" starttime="20210324 11:38:13.292" endtime="20210324 11:38:13.296"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${entry_external_key}</arg>
</arguments>
<msg timestamp="20210324 11:38:13.299" level="INFO">${entry_external_key} = 4347e0d591c3438d8670ad45c129d6aa</msg>
<status status="PASS" starttime="20210324 11:38:13.297" endtime="20210324 11:38:13.299"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["key"]["value"]}</arg>
</arguments>
<assign>
<var>${entry_key_value}</var>
</assign>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["key"]["value"]}</arg>
</arguments>
<status status="PASS" starttime="20210324 11:38:13.302" endtime="20210324 11:38:13.304"></status>
</kw>
<msg timestamp="20210324 11:38:13.304" level="INFO">${entry_key_value} = waraujo@yahoo.com.br</msg>
<status status="PASS" starttime="20210324 11:38:13.300" endtime="20210324 11:38:13.304"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${entry_key_value}</arg>
</arguments>
<msg timestamp="20210324 11:38:13.306" level="INFO">${entry_key_value} = waraujo@yahoo.com.br</msg>
<status status="PASS" starttime="20210324 11:38:13.305" endtime="20210324 11:38:13.307"></status>
</kw>
<status status="PASS" starttime="20210324 11:38:12.385" endtime="20210324 11:38:13.307"></status>
</kw>
<status status="PASS" starttime="20210324 11:38:12.382" endtime="20210324 11:38:13.307"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${pix_type}' == 'phone'</arg>
<arg>buscar verification code</arg>
<arg>${holder_external_key}</arg>
<arg>${account_external_key}</arg>
<arg>${entry_external_key}</arg>
<arg>ELSE IF</arg>
<arg>'${pix_type}' == 'email'</arg>
<arg>buscar verification code</arg>
<arg>${holder_external_key}</arg>
<arg>${account_external_key}</arg>
<arg>${entry_external_key}</arg>
</arguments>
<kw name="buscar verification code" library="pix_dict_verification_code">
<arguments>
<arg>${holder_external_key}</arg>
<arg>${account_external_key}</arg>
<arg>${entry_external_key}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210324 11:38:13.315" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210324 11:38:13.314" endtime="20210324 11:38:13.316"></status>
</kw>
<status status="PASS" starttime="20210324 11:38:13.312" endtime="20210324 11:38:13.317"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/admin/internal_operation/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries/${entry_external_key}/code</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210324 11:38:13.319" level="INFO">GET Request using : uri=/admin/internal_operation/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/441ce6271c064240b2bdc4cd0a042d77/accounts/fd4700c50e144203a482a97b1c448d80/entries/4347e0d591c3438d8670ad45c129d6aa/code, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210324 11:38:14.031" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210324 11:38:13.317" endtime="20210324 11:38:14.033"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210324 11:38:14.035" level="INFO">{'code': '0430'}</msg>
<status status="PASS" starttime="20210324 11:38:14.033" endtime="20210324 11:38:14.035"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210324 11:38:14.037" level="INFO">5edda44b681c1aeb</msg>
<status status="PASS" starttime="20210324 11:38:14.035" endtime="20210324 11:38:14.037"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210324 11:38:14.040" level="INFO">200</msg>
<status status="PASS" starttime="20210324 11:38:14.038" endtime="20210324 11:38:14.040"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210324 11:38:14.041" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210324 11:38:14.040" endtime="20210324 11:38:14.042"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["code"]}</arg>
</arguments>
<assign>
<var>${verification_code}</var>
</assign>
<msg timestamp="20210324 11:38:14.046" level="INFO">${verification_code} = 0430</msg>
<status status="PASS" starttime="20210324 11:38:14.043" endtime="20210324 11:38:14.046"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${verification_code}</arg>
</arguments>
<msg timestamp="20210324 11:38:14.047" level="INFO">${verification_code} = 0430</msg>
<status status="PASS" starttime="20210324 11:38:14.046" endtime="20210324 11:38:14.048"></status>
</kw>
<status status="PASS" starttime="20210324 11:38:13.310" endtime="20210324 11:38:14.048"></status>
</kw>
<status status="PASS" starttime="20210324 11:38:13.308" endtime="20210324 11:38:14.050"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${pix_type}' == 'phone'</arg>
<arg>confirmar propriedade da chave pix</arg>
<arg>${verification_code}</arg>
<arg>${holder_external_key}</arg>
<arg>${account_external_key}</arg>
<arg>${entry_external_key}</arg>
<arg>ELSE IF</arg>
<arg>'${pix_type}' == 'email'</arg>
<arg>confirmar propriedade da chave pix</arg>
<arg>${verification_code}</arg>
<arg>${holder_external_key}</arg>
<arg>${account_external_key}</arg>
<arg>${entry_external_key}</arg>
</arguments>
<kw name="confirmar propriedade da chave pix" library="pix_dict_confirm_propriety">
<arguments>
<arg>${verification_code}</arg>
<arg>${holder_external_key}</arg>
<arg>${account_external_key}</arg>
<arg>${entry_external_key}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210324 11:38:14.058" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210324 11:38:14.057" endtime="20210324 11:38:14.059"></status>
</kw>
<status status="PASS" starttime="20210324 11:38:14.056" endtime="20210324 11:38:14.059"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210324 11:38:14.062" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210324 11:38:14.061" endtime="20210324 11:38:14.063"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"code": "${verification_code}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210324 11:38:14.065" level="INFO">${body} = { "code": "0430" }</msg>
<status status="PASS" starttime="20210324 11:38:14.064" endtime="20210324 11:38:14.065"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries/${entry_external_key}/ownership</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210324 11:38:14.069" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/441ce6271c064240b2bdc4cd0a042d77/accounts/fd4700c50e144203a482a97b1c448d80/entries/4347e0d591c3438d8670ad45c129d6aa/ownership, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "code": "0430" } 
json=None</msg>
<msg timestamp="20210324 11:38:16.275" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210324 11:38:14.066" endtime="20210324 11:38:16.275"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210324 11:38:16.277" level="INFO">{'id': '4347e0d591c3438d8670ad45c129d6aa', 'status': 'active', 'created_at': '2021-03-24T11:38:12.825', 'updated_at': '2021-03-24T11:38:15.906', 'key': {'value': 'waraujo@yahoo.com.br', 'type': 'email'}, 'account': {'id': 'fd4700c50e144203a482a97b1c448d80', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': '441ce6271c064240b2bdc4cd0a042d77', 'owner': {'name': 'Holder de teste', 'national_registration': '51829673068', 'type': 'individual'}, 'routing_number': '001', 'number': '177670673', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}, 'resource': 'pix.entry'}</msg>
<status status="PASS" starttime="20210324 11:38:16.276" endtime="20210324 11:38:16.278"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210324 11:38:16.280" level="INFO">833628983ead5819</msg>
<status status="PASS" starttime="20210324 11:38:16.279" endtime="20210324 11:38:16.280"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210324 11:38:16.282" level="INFO">201</msg>
<status status="PASS" starttime="20210324 11:38:16.281" endtime="20210324 11:38:16.283"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210324 11:38:16.285" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210324 11:38:16.284" endtime="20210324 11:38:16.286"></status>
</kw>
<status status="PASS" starttime="20210324 11:38:14.053" endtime="20210324 11:38:16.286"></status>
</kw>
<status status="PASS" starttime="20210324 11:38:14.050" endtime="20210324 11:38:16.286"></status>
</kw>
<status status="PASS" starttime="20210324 11:38:07.861" endtime="20210324 11:38:16.287"></status>
</kw>
<kw name="criar pagamento pix com dados completos" library="pix_payments_create_pix_payment">
<arguments>
<arg>amount=${amount}</arg>
<arg>creditor_account_number=${creditor_account_number}</arg>
<arg>creditor_routing_number=${creditor_routing_number}</arg>
<arg>creditor_account_type=${creditor_account_type}</arg>
<arg>creditor_name=${creditor_name}</arg>
<arg>creditor_national_registration=${creditor_national_registration}</arg>
<arg>creditor_psp=${creditor_psp}</arg>
<arg>pix_description=${pix_description}</arg>
</arguments>
<kw name="conectar pix-payments" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-payments</arg>
<arg>url=${pix_payments_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210324 11:38:16.296" level="INFO">Creating Session using : alias=pix-payments, url=https://banking-pix-payments-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210324 11:38:16.295" endtime="20210324 11:38:16.297"></status>
</kw>
<status status="PASS" starttime="20210324 11:38:16.293" endtime="20210324 11:38:16.298"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210324 11:38:16.300" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210324 11:38:16.299" endtime="20210324 11:38:16.300"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"amount": ${amount},</arg>
<arg>"creditor": {</arg>
<arg>"account": {</arg>
<arg>"number": "${creditor_account_number}",</arg>
<arg>"routing_number": "${creditor_routing_number}",</arg>
<arg>"type": "${creditor_account_type}"</arg>
<arg>},</arg>
<arg>"name": "${creditor_name}",</arg>
<arg>"national_registration": "${creditor_national_registration}",</arg>
<arg>"psp": "${creditor_psp}"</arg>
<arg>},</arg>
<arg>"description": "${pix_description}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210324 11:38:16.304" level="INFO">${body} = { "amount": 290, "creditor": { "account": { "number": "0243882974", "routing_number": "0500", "type": "cacc" }, "name": "Massa iti PF NauNNMO", "national_registration": "42808422644", "psp": "17192451...</msg>
<status status="PASS" starttime="20210324 11:38:16.301" endtime="20210324 11:38:16.304"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-payments</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/pix/holders/${holder_external_key}/accounts/${account_external_key}/payments</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210324 11:38:16.307" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/pix/holders/441ce6271c064240b2bdc4cd0a042d77/accounts/fd4700c50e144203a482a97b1c448d80/payments, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "amount": 290, "creditor": { "account": { "number": "0243882974", "routing_number": "0500", "type": "cacc" }, "name": "Massa iti PF NauNNMO", "national_registration": "42808422644", "psp": "17192451" }, "description": "Envio de PIX" } 
json=None</msg>
<msg timestamp="20210324 11:38:17.090" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210324 11:38:16.305" endtime="20210324 11:38:17.090"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210324 11:38:17.092" level="INFO">{'id': '187a4b70c5aa472686db29843a6bb9be', 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'status': 'pending', 'end_to_end_id': 'E1946824220210324143847d1bac2777', 'message_id': 'M194682425a9f3d600f1b8b4b6ed31f4', 'amount': 290, 'created_at': '2021-03-24T11:38:16.696362', 'description': 'Envio de PIX', 'debtor': {'national_registration': '51829673068', 'name': 'Holder de teste', 'type': 'individual', 'holder_id': '441ce6271c064240b2bdc4cd0a042d77', 'account': {'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}, 'digital_account_id': 'fd4700c50e144203a482a97b1c448d80', 'number': '177670673', 'routing_number': '0001', 'type': 'cacc'}}, 'creditor': {'national_registration': '42808422644', 'name': 'Massa iti PF NauNNMO', 'type': 'individual', 'account': {'psp': {'code': '17192451'}, 'number': '0243882974', 'routing_number': '0500', 'type': 'cacc'}}, 'refunded_amount': 0}</msg>
<status status="PASS" starttime="20210324 11:38:17.091" endtime="20210324 11:38:17.093"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210324 11:38:17.095" level="INFO">4d4d62fefa0332ea</msg>
<status status="PASS" starttime="20210324 11:38:17.094" endtime="20210324 11:38:17.095"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210324 11:38:17.097" level="INFO">201</msg>
<status status="PASS" starttime="20210324 11:38:17.096" endtime="20210324 11:38:17.099"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210324 11:38:17.101" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210324 11:38:17.100" endtime="20210324 11:38:17.101"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${payment_external_key}</var>
</assign>
<msg timestamp="20210324 11:38:17.104" level="INFO">${payment_external_key} = 187a4b70c5aa472686db29843a6bb9be</msg>
<status status="PASS" starttime="20210324 11:38:17.102" endtime="20210324 11:38:17.104"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${payment_external_key}</arg>
</arguments>
<msg timestamp="20210324 11:38:17.106" level="INFO">${payment_external_key} = 187a4b70c5aa472686db29843a6bb9be</msg>
<status status="PASS" starttime="20210324 11:38:17.105" endtime="20210324 11:38:17.107"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["end_to_end_id"]}</arg>
</arguments>
<assign>
<var>${end_to_end_id}</var>
</assign>
<msg timestamp="20210324 11:38:17.110" level="INFO">${end_to_end_id} = E1946824220210324143847d1bac2777</msg>
<status status="PASS" starttime="20210324 11:38:17.108" endtime="20210324 11:38:17.110"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${end_to_end_id}</arg>
</arguments>
<msg timestamp="20210324 11:38:17.113" level="INFO">${end_to_end_id} = E1946824220210324143847d1bac2777</msg>
<status status="PASS" starttime="20210324 11:38:17.112" endtime="20210324 11:38:17.113"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["message_id"]}</arg>
</arguments>
<assign>
<var>${message_id}</var>
</assign>
<msg timestamp="20210324 11:38:17.116" level="INFO">${message_id} = M194682425a9f3d600f1b8b4b6ed31f4</msg>
<status status="PASS" starttime="20210324 11:38:17.114" endtime="20210324 11:38:17.116"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${message_id}</arg>
</arguments>
<msg timestamp="20210324 11:38:17.118" level="INFO">${message_id} = M194682425a9f3d600f1b8b4b6ed31f4</msg>
<status status="PASS" starttime="20210324 11:38:17.117" endtime="20210324 11:38:17.119"></status>
</kw>
<status status="PASS" starttime="20210324 11:38:16.289" endtime="20210324 11:38:17.119"></status>
</kw>
<kw name="validar pagamento pix" library="asserts">
<arguments>
<arg>marketplace_external_key=${marketplace_external_key}</arg>
<arg>status_pix_payments=pending</arg>
<arg>amount=${amount}</arg>
<arg>pix_description=${pix_description}</arg>
<arg>debitor_national_registration=${national_registration}</arg>
<arg>debitor_name=${holder_name}</arg>
<arg>debitor_type=${holder_type}</arg>
<arg>debitor_holder_id=${holder_external_key}</arg>
<arg>debtor_account_psp_code=${debtor_account_psp_code}</arg>
<arg>debtor_account_psp_name=${debtor_account_psp_name}</arg>
<arg>debtor_digital_account=${account_external_key}</arg>
<arg>debtor_account_number=${account_number}</arg>
<arg>debtor_account_routing_number=${account_routing_number}</arg>
<arg>debtor_account_type=${debtor_account_type}</arg>
<arg>creditor_national_registration=${creditor_national_registration}</arg>
<arg>creditor_name=${creditor_name}</arg>
<arg>creditor_type=individual</arg>
<arg>creditor_account_psp_code=${creditor_psp}</arg>
<arg>creditor_account_number=${creditor_account_number}</arg>
<arg>creditor_account_routing_number=${creditor_routing_number}</arg>
<arg>creditor_account_type=${creditor_account_type}</arg>
<arg>refunded_amount=0</arg>
</arguments>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<arguments>
<arg>result_format=datetime</arg>
</arguments>
<assign>
<var>${date}</var>
</assign>
<msg timestamp="20210324 11:38:17.130" level="INFO">${date} = 2021-03-24 11:38:17.129921</msg>
<status status="PASS" starttime="20210324 11:38:17.129" endtime="20210324 11:38:17.130"></status>
</kw>
<kw name="Convert Date" library="DateTime">
<doc>Converts between supported `date formats`.</doc>
<arguments>
<arg>${date}</arg>
<arg>exclude_millis=yes</arg>
<arg>result_format=%Y-%m-%d</arg>
<arg>date_format=%d-%m-%Y</arg>
</arguments>
<assign>
<var>${date}</var>
</assign>
<msg timestamp="20210324 11:38:17.133" level="INFO">${date} = 2021-03-24</msg>
<status status="PASS" starttime="20210324 11:38:17.131" endtime="20210324 11:38:17.133"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["marketplace_id"]}</arg>
<arg>${marketplace_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210324 11:38:17.134" endtime="20210324 11:38:17.136"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["status"]}</arg>
<arg>${status_pix_payments}</arg>
</arguments>
<status status="PASS" starttime="20210324 11:38:17.137" endtime="20210324 11:38:17.139"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response.json()["end_to_end_id"]}</arg>
<arg>E19468242</arg>
</arguments>
<status status="PASS" starttime="20210324 11:38:17.140" endtime="20210324 11:38:17.141"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.json()["status"]}' == 'peding'</arg>
<arg>Should Contain</arg>
<arg>${response.json()["message_id"]}</arg>
<arg>M19468242</arg>
<arg>ELSE IF</arg>
<arg>'${response.json()["status"]}' == 'executed'</arg>
<arg>Should Contain</arg>
<arg>${response.json()["message_id"]}</arg>
<arg>M19468242</arg>
<arg>ELSE IF</arg>
<arg>'${response.json()["status"]}' == 'succeeded'</arg>
<arg>Should Contain</arg>
<arg>${response.json()["message_id"]}</arg>
<arg>M19468242</arg>
<arg>ELSE IF</arg>
<arg>'${response.json()["status"]}' == 'canceled'</arg>
<arg>Should Not Contain Any</arg>
<arg>${response.json()}</arg>
<arg>message_id</arg>
</arguments>
<status status="PASS" starttime="20210324 11:38:17.142" endtime="20210324 11:38:17.147"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.json()["amount"]}</arg>
<arg>${amount}</arg>
</arguments>
<msg timestamp="20210324 11:38:17.150" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210324 11:38:17.149" endtime="20210324 11:38:17.151"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["description"]}</arg>
<arg>${pix_description}</arg>
</arguments>
<status status="PASS" starttime="20210324 11:38:17.151" endtime="20210324 11:38:17.153"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["national_registration"]}</arg>
<arg>${debitor_national_registration}</arg>
</arguments>
<status status="PASS" starttime="20210324 11:38:17.154" endtime="20210324 11:38:17.156"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["name"]}</arg>
<arg>${debitor_name}</arg>
</arguments>
<status status="PASS" starttime="20210324 11:38:17.157" endtime="20210324 11:38:17.159"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["type"]}</arg>
<arg>${debitor_type}</arg>
</arguments>
<status status="PASS" starttime="20210324 11:38:17.160" endtime="20210324 11:38:17.162"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["holder_id"]}</arg>
<arg>${debitor_holder_id}</arg>
</arguments>
<status status="PASS" starttime="20210324 11:38:17.164" endtime="20210324 11:38:17.166"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["account"]["psp"]["code"]}</arg>
<arg>${debtor_account_psp_code}</arg>
</arguments>
<status status="PASS" starttime="20210324 11:38:17.168" endtime="20210324 11:38:17.170"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["account"]["psp"]["name"]}</arg>
<arg>${debtor_account_psp_name}</arg>
</arguments>
<status status="PASS" starttime="20210324 11:38:17.171" endtime="20210324 11:38:17.173"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["account"]["digital_account_id"]}</arg>
<arg>${debtor_digital_account}</arg>
</arguments>
<status status="PASS" starttime="20210324 11:38:17.174" endtime="20210324 11:38:17.176"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["account"]["number"]}</arg>
<arg>${account_number}</arg>
</arguments>
<status status="PASS" starttime="20210324 11:38:17.177" endtime="20210324 11:38:17.179"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["account"]["routing_number"]}</arg>
<arg>0${debtor_account_routing_number}</arg>
</arguments>
<status status="PASS" starttime="20210324 11:38:17.180" endtime="20210324 11:38:17.183"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["account"]["type"]}</arg>
<arg>${debtor_account_type}</arg>
</arguments>
<status status="PASS" starttime="20210324 11:38:17.184" endtime="20210324 11:38:17.187"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["creditor"]["national_registration"]}</arg>
<arg>${creditor_national_registration}</arg>
</arguments>
<status status="PASS" starttime="20210324 11:38:17.188" endtime="20210324 11:38:17.190"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["creditor"]["name"]}</arg>
<arg>${creditor_name}</arg>
</arguments>
<status status="PASS" starttime="20210324 11:38:17.191" endtime="20210324 11:38:17.196"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["creditor"]["type"]}</arg>
<arg>${creditor_type}</arg>
</arguments>
<status status="PASS" starttime="20210324 11:38:17.197" endtime="20210324 11:38:17.199"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["creditor"]["account"]["psp"]["code"]}</arg>
<arg>${creditor_account_psp_code}</arg>
</arguments>
<status status="PASS" starttime="20210324 11:38:17.200" endtime="20210324 11:38:17.202"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["creditor"]["account"]["number"]}</arg>
<arg>${creditor_account_number}</arg>
</arguments>
<status status="PASS" starttime="20210324 11:38:17.203" endtime="20210324 11:38:17.205"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["creditor"]["account"]["routing_number"]}</arg>
<arg>${creditor_account_routing_number}</arg>
</arguments>
<status status="PASS" starttime="20210324 11:38:17.205" endtime="20210324 11:38:17.207"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["creditor"]["account"]["type"]}</arg>
<arg>${creditor_account_type}</arg>
</arguments>
<status status="PASS" starttime="20210324 11:38:17.208" endtime="20210324 11:38:17.210"></status>
</kw>
<status status="PASS" starttime="20210324 11:38:17.122" endtime="20210324 11:38:17.211"></status>
</kw>
<kw name="cancelar pagamento pix" library="pix_payments_cancel_pix_payment">
<arguments>
<arg>holder_external_key=${holder_external_key}</arg>
<arg>account_external_key=${account_external_key}</arg>
<arg>payment_external_key=${payment_external_key}</arg>
</arguments>
<kw name="conectar pix-payments" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-payments</arg>
<arg>url=${pix_payments_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210324 11:38:17.218" level="INFO">Creating Session using : alias=pix-payments, url=https://banking-pix-payments-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210324 11:38:17.217" endtime="20210324 11:38:17.219"></status>
</kw>
<status status="PASS" starttime="20210324 11:38:17.215" endtime="20210324 11:38:17.220"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210324 11:38:17.222" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210324 11:38:17.221" endtime="20210324 11:38:17.222"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-payments</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/pix/holders/${holder_external_key}/accounts/${account_external_key}/payments/${payment_external_key}/cancel</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210324 11:38:17.225" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/pix/holders/441ce6271c064240b2bdc4cd0a042d77/accounts/fd4700c50e144203a482a97b1c448d80/payments/187a4b70c5aa472686db29843a6bb9be/cancel, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data=None 
json=None</msg>
<msg timestamp="20210324 11:38:17.971" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210324 11:38:17.223" endtime="20210324 11:38:17.971"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210324 11:38:17.973" level="INFO">{'id': '187a4b70c5aa472686db29843a6bb9be', 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'status': 'canceled', 'end_to_end_id': 'E1946824220210324143847d1bac2777', 'amount': 290, 'description': 'Envio de PIX', 'debtor': {'national_registration': '51829673068', 'name': 'Holder de teste', 'type': 'individual', 'holder_id': '441ce6271c064240b2bdc4cd0a042d77', 'account': {'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}, 'digital_account_id': 'fd4700c50e144203a482a97b1c448d80', 'number': '177670673', 'routing_number': '0001', 'type': 'cacc'}}, 'creditor': {'national_registration': '42808422644', 'name': 'Massa iti PF NauNNMO', 'type': 'individual', 'account': {'psp': {'code': '17192451'}, 'number': '0243882974', 'routing_number': '0500', 'type': 'cacc'}}, 'resource': 'pix_transaction'}</msg>
<status status="PASS" starttime="20210324 11:38:17.972" endtime="20210324 11:38:17.974"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210324 11:38:17.976" level="INFO">c4c9cfde9aeee487</msg>
<status status="PASS" starttime="20210324 11:38:17.975" endtime="20210324 11:38:17.976"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210324 11:38:17.978" level="INFO">200</msg>
<status status="PASS" starttime="20210324 11:38:17.977" endtime="20210324 11:38:17.979"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210324 11:38:17.981" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210324 11:38:17.980" endtime="20210324 11:38:17.981"></status>
</kw>
<status status="PASS" starttime="20210324 11:38:17.213" endtime="20210324 11:38:17.982"></status>
</kw>
<kw name="validar pagamento pix" library="asserts">
<arguments>
<arg>marketplace_external_key=${marketplace_external_key}</arg>
<arg>status_pix_payments=canceled</arg>
<arg>amount=${amount}</arg>
<arg>pix_description=${pix_description}</arg>
<arg>debitor_national_registration=${national_registration}</arg>
<arg>debitor_name=${holder_name}</arg>
<arg>debitor_type=${holder_type}</arg>
<arg>debitor_holder_id=${holder_external_key}</arg>
<arg>debtor_account_psp_code=${debtor_account_psp_code}</arg>
<arg>debtor_account_psp_name=${debtor_account_psp_name}</arg>
<arg>debtor_digital_account=${account_external_key}</arg>
<arg>debtor_account_number=${account_number}</arg>
<arg>debtor_account_routing_number=${account_routing_number}</arg>
<arg>debtor_account_type=${debtor_account_type}</arg>
<arg>creditor_national_registration=${creditor_national_registration}</arg>
<arg>creditor_name=${creditor_name}</arg>
<arg>creditor_type=individual</arg>
<arg>creditor_account_psp_code=${creditor_psp}</arg>
<arg>creditor_account_number=${creditor_account_number}</arg>
<arg>creditor_account_routing_number=${creditor_routing_number}</arg>
<arg>creditor_account_type=${creditor_account_type}</arg>
<arg>refunded_amount=0</arg>
</arguments>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<arguments>
<arg>result_format=datetime</arg>
</arguments>
<assign>
<var>${date}</var>
</assign>
<msg timestamp="20210324 11:38:17.992" level="INFO">${date} = 2021-03-24 11:38:17.991311</msg>
<status status="PASS" starttime="20210324 11:38:17.991" endtime="20210324 11:38:17.992"></status>
</kw>
<kw name="Convert Date" library="DateTime">
<doc>Converts between supported `date formats`.</doc>
<arguments>
<arg>${date}</arg>
<arg>exclude_millis=yes</arg>
<arg>result_format=%Y-%m-%d</arg>
<arg>date_format=%d-%m-%Y</arg>
</arguments>
<assign>
<var>${date}</var>
</assign>
<msg timestamp="20210324 11:38:17.994" level="INFO">${date} = 2021-03-24</msg>
<status status="PASS" starttime="20210324 11:38:17.992" endtime="20210324 11:38:17.995"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["marketplace_id"]}</arg>
<arg>${marketplace_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210324 11:38:17.995" endtime="20210324 11:38:17.997"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["status"]}</arg>
<arg>${status_pix_payments}</arg>
</arguments>
<status status="PASS" starttime="20210324 11:38:17.998" endtime="20210324 11:38:18.000"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response.json()["end_to_end_id"]}</arg>
<arg>E19468242</arg>
</arguments>
<status status="PASS" starttime="20210324 11:38:18.001" endtime="20210324 11:38:18.002"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.json()["status"]}' == 'peding'</arg>
<arg>Should Contain</arg>
<arg>${response.json()["message_id"]}</arg>
<arg>M19468242</arg>
<arg>ELSE IF</arg>
<arg>'${response.json()["status"]}' == 'executed'</arg>
<arg>Should Contain</arg>
<arg>${response.json()["message_id"]}</arg>
<arg>M19468242</arg>
<arg>ELSE IF</arg>
<arg>'${response.json()["status"]}' == 'succeeded'</arg>
<arg>Should Contain</arg>
<arg>${response.json()["message_id"]}</arg>
<arg>M19468242</arg>
<arg>ELSE IF</arg>
<arg>'${response.json()["status"]}' == 'canceled'</arg>
<arg>Should Not Contain Any</arg>
<arg>${response.json()}</arg>
<arg>message_id</arg>
</arguments>
<kw name="Should Not Contain Any" library="BuiltIn">
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>message_id</arg>
</arguments>
<status status="PASS" starttime="20210324 11:38:18.008" endtime="20210324 11:38:18.009"></status>
</kw>
<status status="PASS" starttime="20210324 11:38:18.003" endtime="20210324 11:38:18.009"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.json()["amount"]}</arg>
<arg>${amount}</arg>
</arguments>
<msg timestamp="20210324 11:38:18.012" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210324 11:38:18.011" endtime="20210324 11:38:18.013"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["description"]}</arg>
<arg>${pix_description}</arg>
</arguments>
<status status="PASS" starttime="20210324 11:38:18.014" endtime="20210324 11:38:18.016"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["national_registration"]}</arg>
<arg>${debitor_national_registration}</arg>
</arguments>
<status status="PASS" starttime="20210324 11:38:18.017" endtime="20210324 11:38:18.019"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["name"]}</arg>
<arg>${debitor_name}</arg>
</arguments>
<status status="PASS" starttime="20210324 11:38:18.020" endtime="20210324 11:38:18.022"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["type"]}</arg>
<arg>${debitor_type}</arg>
</arguments>
<status status="PASS" starttime="20210324 11:38:18.023" endtime="20210324 11:38:18.025"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["holder_id"]}</arg>
<arg>${debitor_holder_id}</arg>
</arguments>
<status status="PASS" starttime="20210324 11:38:18.025" endtime="20210324 11:38:18.027"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["account"]["psp"]["code"]}</arg>
<arg>${debtor_account_psp_code}</arg>
</arguments>
<status status="PASS" starttime="20210324 11:38:18.028" endtime="20210324 11:38:18.031"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["account"]["psp"]["name"]}</arg>
<arg>${debtor_account_psp_name}</arg>
</arguments>
<status status="PASS" starttime="20210324 11:38:18.033" endtime="20210324 11:38:18.034"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["account"]["digital_account_id"]}</arg>
<arg>${debtor_digital_account}</arg>
</arguments>
<status status="PASS" starttime="20210324 11:38:18.036" endtime="20210324 11:38:18.038"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["account"]["number"]}</arg>
<arg>${account_number}</arg>
</arguments>
<status status="PASS" starttime="20210324 11:38:18.039" endtime="20210324 11:38:18.040"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["account"]["routing_number"]}</arg>
<arg>0${debtor_account_routing_number}</arg>
</arguments>
<status status="PASS" starttime="20210324 11:38:18.041" endtime="20210324 11:38:18.043"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["account"]["type"]}</arg>
<arg>${debtor_account_type}</arg>
</arguments>
<status status="PASS" starttime="20210324 11:38:18.045" endtime="20210324 11:38:18.048"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["creditor"]["national_registration"]}</arg>
<arg>${creditor_national_registration}</arg>
</arguments>
<status status="PASS" starttime="20210324 11:38:18.048" endtime="20210324 11:38:18.051"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["creditor"]["name"]}</arg>
<arg>${creditor_name}</arg>
</arguments>
<status status="PASS" starttime="20210324 11:38:18.051" endtime="20210324 11:38:18.053"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["creditor"]["type"]}</arg>
<arg>${creditor_type}</arg>
</arguments>
<status status="PASS" starttime="20210324 11:38:18.054" endtime="20210324 11:38:18.056"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["creditor"]["account"]["psp"]["code"]}</arg>
<arg>${creditor_account_psp_code}</arg>
</arguments>
<status status="PASS" starttime="20210324 11:38:18.057" endtime="20210324 11:38:18.058"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["creditor"]["account"]["number"]}</arg>
<arg>${creditor_account_number}</arg>
</arguments>
<status status="PASS" starttime="20210324 11:38:18.059" endtime="20210324 11:38:18.062"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["creditor"]["account"]["routing_number"]}</arg>
<arg>${creditor_account_routing_number}</arg>
</arguments>
<status status="PASS" starttime="20210324 11:38:18.063" endtime="20210324 11:38:18.064"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["creditor"]["account"]["type"]}</arg>
<arg>${creditor_account_type}</arg>
</arguments>
<status status="PASS" starttime="20210324 11:38:18.065" endtime="20210324 11:38:18.067"></status>
</kw>
<status status="PASS" starttime="20210324 11:38:17.984" endtime="20210324 11:38:18.067"></status>
</kw>
<doc>Cancelamento de pagament PIX, efetuado antes da confirmação do pagamento</doc>
<tags>
<tag>smoke_test</tag>
</tags>
<status status="PASS" starttime="20210324 11:38:07.860" endtime="20210324 11:38:18.069" critical="yes"></status>
</test>
<doc>Funcionalidade: Cancelar Envio de Pagamento PIX
Eu, como um Holder, portador de uma conta ativa em Banking
Desejo cancelar o pagamento de um envio de PIX</doc>
<status status="PASS" starttime="20210324 11:38:06.882" endtime="20210324 11:38:18.078"></status>
</suite>
<suite id="s1-s1-s2" name="Confirmar Pagamento PIX" source="C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\tests\pix-payments\envio\Confirmar Pagamento PIX.robot">
<test id="s1-s1-s2-t1" name="Cenário: Confirmar pagamento PIX de para holder individual utilizando dados completos da conta de destino">
<kw name="criar chave pix ativa" library="pix_dict_create_active_key_pix">
<arguments>
<arg>holder_type=individual</arg>
<arg>pix_type=email</arg>
</arguments>
<kw name="Random Number" library="FakerLibrary">
<doc>Returns a random number with 1 digit (default, when digits==None),
a random number with 0 to given number of digits, or a random number
with given number to given number of digits (when ``fix_len==True``).</doc>
<arguments>
<arg>digits=8</arg>
<arg>fix_len=True</arg>
</arguments>
<assign>
<var>${phone}</var>
</assign>
<msg timestamp="20210324 11:38:18.287" level="INFO">${phone} = 23182904</msg>
<status status="PASS" starttime="20210324 11:38:18.287" endtime="20210324 11:38:18.287"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>+55219${phone}</arg>
</arguments>
<assign>
<var>${phone_pix}</var>
</assign>
<msg timestamp="20210324 11:38:18.288" level="INFO">${phone_pix} = +5521923182904</msg>
<status status="PASS" starttime="20210324 11:38:18.287" endtime="20210324 11:38:18.288"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${phone_pix}</arg>
</arguments>
<msg timestamp="20210324 11:38:18.288" level="INFO">${phone_pix} = +5521923182904</msg>
<status status="PASS" starttime="20210324 11:38:18.288" endtime="20210324 11:38:18.289"></status>
</kw>
<kw name="Email" library="FakerLibrary">
<assign>
<var>${email_pix}</var>
</assign>
<msg timestamp="20210324 11:38:18.289" level="INFO">${email_pix} = ferreiramaria-eduarda@correia.com</msg>
<status status="PASS" starttime="20210324 11:38:18.289" endtime="20210324 11:38:18.289"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${email_pix}</arg>
</arguments>
<msg timestamp="20210324 11:38:18.290" level="INFO">${email_pix} = ferreiramaria-eduarda@correia.com</msg>
<status status="PASS" starttime="20210324 11:38:18.290" endtime="20210324 11:38:18.290"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${holder_type}' == 'business'</arg>
<arg>criar holder business ativo</arg>
<arg>ELSE IF</arg>
<arg>'${holder_type}' == 'individual'</arg>
<arg>criar holder individual ativo</arg>
</arguments>
<kw name="criar holder individual ativo" library="accreditation_create_holder_active">
<kw name="conectar accreditation" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accreditation</arg>
<arg>url=${accreditation_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210324 11:38:18.292" level="INFO">Creating Session using : alias=accreditation, url=https://banking-accreditation-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210324 11:38:18.292" endtime="20210324 11:38:18.293"></status>
</kw>
<status status="PASS" starttime="20210324 11:38:18.292" endtime="20210324 11:38:18.293"></status>
</kw>
<kw name="Cpf" library="FakerLibrary">
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210324 11:38:18.294" level="INFO">${national_registration} = 063.978.142-03</msg>
<status status="PASS" starttime="20210324 11:38:18.293" endtime="20210324 11:38:18.294"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${national_registration}</arg>
<arg>.</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210324 11:38:18.295" level="INFO">${national_registration} = 063978142-03</msg>
<status status="PASS" starttime="20210324 11:38:18.294" endtime="20210324 11:38:18.295"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${national_registration}</arg>
<arg>-</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210324 11:38:18.295" level="INFO">${national_registration} = 06397814203</msg>
<status status="PASS" starttime="20210324 11:38:18.295" endtime="20210324 11:38:18.295"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${national_registration}</arg>
</arguments>
<msg timestamp="20210324 11:38:18.296" level="INFO">${national_registration} = 06397814203</msg>
<status status="PASS" starttime="20210324 11:38:18.296" endtime="20210324 11:38:18.296"></status>
</kw>
<kw name="Rg" library="FakerLibrary">
<doc>Brazilian RG, return plain numbers.
Check:  https://www.ngmatematica.com/2014/02/como-determinar-o-digito-verificador-do.html</doc>
<assign>
<var>${identity_card}</var>
</assign>
<msg timestamp="20210324 11:38:18.297" level="INFO">${identity_card} = 536708423</msg>
<status status="PASS" starttime="20210324 11:38:18.296" endtime="20210324 11:38:18.297"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${identity_card}</arg>
</arguments>
<msg timestamp="20210324 11:38:18.297" level="INFO">${identity_card} = 536708423</msg>
<status status="PASS" starttime="20210324 11:38:18.297" endtime="20210324 11:38:18.298"></status>
</kw>
<kw name="criar holder individual" library="accreditation_post_holder_individual">
<arguments>
<arg>holder_type=individual</arg>
<arg>holder_name=${holder_name}</arg>
<arg>email=${email}</arg>
<arg>national_registration=${national_registration}</arg>
<arg>revenue=${revenue}</arg>
<arg>birthday=${birthday}</arg>
<arg>mothers_name=${mothers_name}</arg>
<arg>identity_card=${identity_card}</arg>
<arg>pep=false</arg>
<arg>cbo=${cbo}</arg>
</arguments>
<kw name="conectar accreditation" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accreditation</arg>
<arg>url=${accreditation_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210324 11:38:18.300" level="INFO">Creating Session using : alias=accreditation, url=https://banking-accreditation-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210324 11:38:18.299" endtime="20210324 11:38:18.300"></status>
</kw>
<status status="PASS" starttime="20210324 11:38:18.299" endtime="20210324 11:38:18.301"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_type}</arg>
</arguments>
<msg timestamp="20210324 11:38:18.301" level="INFO">${holder_type} = individual</msg>
<status status="PASS" starttime="20210324 11:38:18.301" endtime="20210324 11:38:18.301"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_name}</arg>
</arguments>
<msg timestamp="20210324 11:38:18.302" level="INFO">${holder_name} = Holder de teste</msg>
<status status="PASS" starttime="20210324 11:38:18.302" endtime="20210324 11:38:18.302"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210324 11:38:18.303" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210324 11:38:18.302" endtime="20210324 11:38:18.303"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "${holder_type}",</arg>
<arg>"name": "${holder_name}",</arg>
<arg>"email": "${email}",</arg>
<arg>"national_registration": "${national_registration}",</arg>
<arg>"revenue": ${revenue},</arg>
<arg>"birthday": "${birthday}",</arg>
<arg>"mothers_name": "${mothers_name}",</arg>
<arg>"identity_card": "${identity_card}",</arg>
<arg>"pep": false,</arg>
<arg>"cbo": ${cbo}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210324 11:38:18.304" level="INFO">${body} = { "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "06397814203", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder",...</msg>
<status status="PASS" starttime="20210324 11:38:18.303" endtime="20210324 11:38:18.304"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210324 11:38:18.305" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "06397814203", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder", "identity_card": "536708423", "pep": false, "cbo": 821450 } 
json=None</msg>
<msg timestamp="20210324 11:38:19.097" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210324 11:38:18.304" endtime="20210324 11:38:19.097"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210324 11:38:19.098" level="INFO">{'id': '824cf99eccc343fe880f4e8b10416693', 'name': 'Holder de teste', 'revenue': 5500.0, 'email': 'teste@teste.com.br', 'status': 'waiting_info_and_documents', 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'marketplace_name': 'Marketplace de Teste', 'created_at': '2021-03-24T11:38:18.69442', 'updated_at': '2021-03-24T11:38:18.694421', 'type': 'individual', 'national_registration': '06397814203', 'birthday': '1988-04-23', 'mothers_name': 'Mãe do Holder', 'identity_card': '536708423', 'pep': False, 'cbo': '821450', '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/824cf99eccc343fe880f4e8b10416693', 'type': 'GET'}, 'phones': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/824cf99eccc343fe880f4e8b10416693/phones', 'type': 'GET'}, 'addresses': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/824cf99eccc343fe880f4e8b10416693/addresses', 'type': 'GET'}, 'documents': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/824cf99eccc343fe880f4e8b10416693/documents', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210324 11:38:19.098" endtime="20210324 11:38:19.098"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210324 11:38:19.099" level="INFO">0a9e64e4bbbb85e0</msg>
<status status="PASS" starttime="20210324 11:38:19.099" endtime="20210324 11:38:19.099"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${body}</arg>
</arguments>
<msg timestamp="20210324 11:38:19.100" level="INFO">{ "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "06397814203", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder", "identity_card": "536708423", "pep": false, "cbo": 821450 }</msg>
<status status="PASS" starttime="20210324 11:38:19.099" endtime="20210324 11:38:19.100"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210324 11:38:19.100" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210324 11:38:19.100" endtime="20210324 11:38:19.101"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${holder_external_key}</var>
</assign>
<msg timestamp="20210324 11:38:19.102" level="INFO">${holder_external_key} = 824cf99eccc343fe880f4e8b10416693</msg>
<status status="PASS" starttime="20210324 11:38:19.101" endtime="20210324 11:38:19.102"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_external_key}</arg>
</arguments>
<msg timestamp="20210324 11:38:19.102" level="INFO">${holder_external_key} = 824cf99eccc343fe880f4e8b10416693</msg>
<status status="PASS" starttime="20210324 11:38:19.102" endtime="20210324 11:38:19.103"></status>
</kw>
<status status="PASS" starttime="20210324 11:38:18.298" endtime="20210324 11:38:19.103"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_name}</arg>
</arguments>
<msg timestamp="20210324 11:38:19.104" level="INFO">${holder_name} = Holder de teste</msg>
<status status="PASS" starttime="20210324 11:38:19.103" endtime="20210324 11:38:19.104"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210324 11:38:19.104" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210324 11:38:19.104" endtime="20210324 11:38:19.104"></status>
</kw>
<kw name="criar holder phone" library="accreditation_post_holder_phone">
<arguments>
<arg>21</arg>
<arg>51</arg>
<arg>996221236</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210324 11:38:19.106" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210324 11:38:19.105" endtime="20210324 11:38:19.106"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"area_code": "${phone_area_code}",</arg>
<arg>"country_code": "${phone_country_code}",</arg>
<arg>"number": "${phone_number}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210324 11:38:19.107" level="INFO">${body} = { "area_code": "21", "country_code": "51", "number": "996221236" }</msg>
<status status="PASS" starttime="20210324 11:38:19.106" endtime="20210324 11:38:19.107"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/phones</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210324 11:38:19.108" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/824cf99eccc343fe880f4e8b10416693/phones, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "area_code": "21", "country_code": "51", "number": "996221236" } 
json=None</msg>
<msg timestamp="20210324 11:38:19.426" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210324 11:38:19.107" endtime="20210324 11:38:19.426"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210324 11:38:19.427" level="INFO">{'id': '5ff0a86d4edc4db5b5ca80ff7c1c9f48', 'area_code': '21', 'country_code': '51', 'number': '996221236', 'main': True, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/824cf99eccc343fe880f4e8b10416693/phones/5ff0a86d4edc4db5b5ca80ff7c1c9f48', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/824cf99eccc343fe880f4e8b10416693', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210324 11:38:19.427" endtime="20210324 11:38:19.427"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210324 11:38:19.429" level="INFO">539e76d0745df1c3</msg>
<status status="PASS" starttime="20210324 11:38:19.428" endtime="20210324 11:38:19.429"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210324 11:38:19.429" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210324 11:38:19.429" endtime="20210324 11:38:19.429"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${phone_external_key}</var>
</assign>
<msg timestamp="20210324 11:38:19.430" level="INFO">${phone_external_key} = 5ff0a86d4edc4db5b5ca80ff7c1c9f48</msg>
<status status="PASS" starttime="20210324 11:38:19.430" endtime="20210324 11:38:19.430"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${phone_external_key}</arg>
</arguments>
<msg timestamp="20210324 11:38:19.431" level="INFO">${phone_external_key} = 5ff0a86d4edc4db5b5ca80ff7c1c9f48</msg>
<status status="PASS" starttime="20210324 11:38:19.431" endtime="20210324 11:38:19.431"></status>
</kw>
<status status="PASS" starttime="20210324 11:38:19.105" endtime="20210324 11:38:19.431"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210324 11:38:19.432" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210324 11:38:19.431" endtime="20210324 11:38:19.432"></status>
</kw>
<kw name="criar holder address" library="accreditation_post_holder_address">
<arguments>
<arg>Rio de Janeiro</arg>
<arg>Rio de Janeiro</arg>
<arg>Brasil</arg>
<arg>Bairro de Testes</arg>
<arg>Rua de Testes</arg>
<arg>90</arg>
<arg>apto 200</arg>
<arg>21550987</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210324 11:38:19.434" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210324 11:38:19.433" endtime="20210324 11:38:19.434"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"city": "${city}",</arg>
<arg>"state": "${state}",</arg>
<arg>"country": "${country}",</arg>
<arg>"neighborhood": "${neighborhood}",</arg>
<arg>"street": "${street}",</arg>
<arg>"number": "${number}",</arg>
<arg>"complement": "${complement}",</arg>
<arg>"postal_code": "${postal_code}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210324 11:38:19.435" level="INFO">${body} = { "city": "Rio de Janeiro", "state": "Rio de Janeiro", "country": "Brasil", "neighborhood": "Bairro de Testes", "street": "Rua de Testes", "number": "90", "complement": "apto 200", "postal_code": "215...</msg>
<status status="PASS" starttime="20210324 11:38:19.434" endtime="20210324 11:38:19.435"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/addresses</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210324 11:38:19.436" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/824cf99eccc343fe880f4e8b10416693/addresses, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "city": "Rio de Janeiro", "state": "Rio de Janeiro", "country": "Brasil", "neighborhood": "Bairro de Testes", "street": "Rua de Testes", "number": "90", "complement": "apto 200", "postal_code": "21550987" } 
json=None</msg>
<msg timestamp="20210324 11:38:19.658" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210324 11:38:19.435" endtime="20210324 11:38:19.658"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210324 11:38:19.661" level="INFO">{'id': '5a13a2d93a07424cabecb0d8ecdf676c', 'street': 'Rua de Testes', 'number': '90', 'city': 'Rio de Janeiro', 'complement': 'apto 200', 'state': 'Rio de Janeiro', 'neighborhood': 'Bairro de Testes', 'postal_code': '21550987', 'country': 'Brasil', 'main': True, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/824cf99eccc343fe880f4e8b10416693/addresses/5a13a2d93a07424cabecb0d8ecdf676c', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/824cf99eccc343fe880f4e8b10416693', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210324 11:38:19.659" endtime="20210324 11:38:19.661"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210324 11:38:19.663" level="INFO">8a5db2fd32133e6f</msg>
<status status="PASS" starttime="20210324 11:38:19.662" endtime="20210324 11:38:19.664"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210324 11:38:19.666" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210324 11:38:19.665" endtime="20210324 11:38:19.666"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${address_external_key}</var>
</assign>
<msg timestamp="20210324 11:38:19.669" level="INFO">${address_external_key} = 5a13a2d93a07424cabecb0d8ecdf676c</msg>
<status status="PASS" starttime="20210324 11:38:19.667" endtime="20210324 11:38:19.669"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${address_external_key}</arg>
</arguments>
<msg timestamp="20210324 11:38:19.671" level="INFO">${address_external_key} = 5a13a2d93a07424cabecb0d8ecdf676c</msg>
<status status="PASS" starttime="20210324 11:38:19.670" endtime="20210324 11:38:19.671"></status>
</kw>
<status status="PASS" starttime="20210324 11:38:19.432" endtime="20210324 11:38:19.672"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210324 11:38:19.673" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210324 11:38:19.672" endtime="20210324 11:38:19.674"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>SELFIE</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210324 11:38:19.677" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210324 11:38:19.676" endtime="20210324 11:38:19.677"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>C:\\Users\\vinicius.trindade\\banking_continuous_testing\\banking_continuous_testing\\apis\\accreditation\\documents\\holder_documents\\post.${/}..${/}..${/}..${/}..${/}..${/}images${/}accreditation${/}image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210324 11:38:19.680" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210324 11:38:19.684" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210324 11:38:19.679" endtime="20210324 11:38:19.684"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210324 11:38:19.687" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/824cf99eccc343fe880f4e8b10416693/documents?type=SELFIE, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210324 11:38:20.016" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210324 11:38:19.685" endtime="20210324 11:38:20.016"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210324 11:38:20.019" level="INFO">{'id': '39b57680ed0542a0b6dff5d3b52fb992', 'document_type': 'selfie', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/824cf99eccc343fe880f4e8b10416693/documents/39b57680ed0542a0b6dff5d3b52fb992', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/824cf99eccc343fe880f4e8b10416693', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/824cf99eccc343fe880f4e8b10416693/documents/39b57680ed0542a0b6dff5d3b52fb992/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210324 11:38:20.018" endtime="20210324 11:38:20.019"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210324 11:38:20.022" level="INFO">cd0766c4f7794fcf</msg>
<status status="PASS" starttime="20210324 11:38:20.020" endtime="20210324 11:38:20.022"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210324 11:38:20.024" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210324 11:38:20.023" endtime="20210324 11:38:20.025"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210324 11:38:20.028" level="INFO">${document_external_key} = 39b57680ed0542a0b6dff5d3b52fb992</msg>
<status status="PASS" starttime="20210324 11:38:20.026" endtime="20210324 11:38:20.028"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210324 11:38:20.030" level="INFO">${document_external_key} = 39b57680ed0542a0b6dff5d3b52fb992</msg>
<status status="PASS" starttime="20210324 11:38:20.029" endtime="20210324 11:38:20.030"></status>
</kw>
<status status="PASS" starttime="20210324 11:38:19.674" endtime="20210324 11:38:20.031"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210324 11:38:20.033" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210324 11:38:20.032" endtime="20210324 11:38:20.033"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>RG_FRENTE</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210324 11:38:20.036" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210324 11:38:20.035" endtime="20210324 11:38:20.037"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>C:\\Users\\vinicius.trindade\\banking_continuous_testing\\banking_continuous_testing\\apis\\accreditation\\documents\\holder_documents\\post.${/}..${/}..${/}..${/}..${/}..${/}images${/}accreditation${/}image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210324 11:38:20.039" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210324 11:38:20.043" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210324 11:38:20.037" endtime="20210324 11:38:20.043"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210324 11:38:20.046" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/824cf99eccc343fe880f4e8b10416693/documents?type=RG_FRENTE, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210324 11:38:20.326" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210324 11:38:20.044" endtime="20210324 11:38:20.326"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210324 11:38:20.329" level="INFO">{'id': '0f7a6cd7b3fc4e34bac6edef37b017af', 'document_type': 'rg_frente', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/824cf99eccc343fe880f4e8b10416693/documents/0f7a6cd7b3fc4e34bac6edef37b017af', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/824cf99eccc343fe880f4e8b10416693', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/824cf99eccc343fe880f4e8b10416693/documents/0f7a6cd7b3fc4e34bac6edef37b017af/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210324 11:38:20.327" endtime="20210324 11:38:20.329"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210324 11:38:20.331" level="INFO">28fefabe0bd13bdc</msg>
<status status="PASS" starttime="20210324 11:38:20.330" endtime="20210324 11:38:20.331"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210324 11:38:20.334" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210324 11:38:20.332" endtime="20210324 11:38:20.334"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210324 11:38:20.337" level="INFO">${document_external_key} = 0f7a6cd7b3fc4e34bac6edef37b017af</msg>
<status status="PASS" starttime="20210324 11:38:20.335" endtime="20210324 11:38:20.337"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210324 11:38:20.339" level="INFO">${document_external_key} = 0f7a6cd7b3fc4e34bac6edef37b017af</msg>
<status status="PASS" starttime="20210324 11:38:20.338" endtime="20210324 11:38:20.339"></status>
</kw>
<status status="PASS" starttime="20210324 11:38:20.034" endtime="20210324 11:38:20.340"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210324 11:38:20.342" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210324 11:38:20.341" endtime="20210324 11:38:20.342"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>RG_VERSO</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210324 11:38:20.346" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210324 11:38:20.345" endtime="20210324 11:38:20.347"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>C:\\Users\\vinicius.trindade\\banking_continuous_testing\\banking_continuous_testing\\apis\\accreditation\\documents\\holder_documents\\post.${/}..${/}..${/}..${/}..${/}..${/}images${/}accreditation${/}image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210324 11:38:20.348" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210324 11:38:20.353" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210324 11:38:20.347" endtime="20210324 11:38:20.353"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210324 11:38:20.357" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/824cf99eccc343fe880f4e8b10416693/documents?type=RG_VERSO, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210324 11:38:20.625" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210324 11:38:20.354" endtime="20210324 11:38:20.625"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210324 11:38:20.627" level="INFO">{'id': 'dc9636d5964e429a9633bc4fd689f29a', 'document_type': 'rg_verso', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/824cf99eccc343fe880f4e8b10416693/documents/dc9636d5964e429a9633bc4fd689f29a', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/824cf99eccc343fe880f4e8b10416693', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/824cf99eccc343fe880f4e8b10416693/documents/dc9636d5964e429a9633bc4fd689f29a/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210324 11:38:20.626" endtime="20210324 11:38:20.627"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210324 11:38:20.629" level="INFO">43f767751d7fd45f</msg>
<status status="PASS" starttime="20210324 11:38:20.628" endtime="20210324 11:38:20.630"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210324 11:38:20.632" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210324 11:38:20.631" endtime="20210324 11:38:20.632"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210324 11:38:20.636" level="INFO">${document_external_key} = dc9636d5964e429a9633bc4fd689f29a</msg>
<status status="PASS" starttime="20210324 11:38:20.633" endtime="20210324 11:38:20.636"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210324 11:38:20.637" level="INFO">${document_external_key} = dc9636d5964e429a9633bc4fd689f29a</msg>
<status status="PASS" starttime="20210324 11:38:20.636" endtime="20210324 11:38:20.637"></status>
</kw>
<status status="PASS" starttime="20210324 11:38:20.343" endtime="20210324 11:38:20.638"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210324 11:38:20.640" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210324 11:38:20.639" endtime="20210324 11:38:20.640"></status>
</kw>
<kw name="solicitar aprovação do holder" library="accreditation_request_approval">
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210324 11:38:20.644" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210324 11:38:20.643" endtime="20210324 11:38:20.644"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/approval</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210324 11:38:20.647" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/824cf99eccc343fe880f4e8b10416693/approval, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data=None 
json=None</msg>
<msg timestamp="20210324 11:38:20.932" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210324 11:38:20.645" endtime="20210324 11:38:20.934"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210324 11:38:20.935" level="INFO">{'message': 'Approval request accepted successfully. Processing analysis'}</msg>
<status status="PASS" starttime="20210324 11:38:20.934" endtime="20210324 11:38:20.936"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210324 11:38:20.938" level="INFO">093e48fe56c47c7b</msg>
<status status="PASS" starttime="20210324 11:38:20.936" endtime="20210324 11:38:20.938"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210324 11:38:20.942" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210324 11:38:20.940" endtime="20210324 11:38:20.943"></status>
</kw>
<status status="PASS" starttime="20210324 11:38:20.641" endtime="20210324 11:38:20.944"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210324 11:38:20.947" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210324 11:38:20.946" endtime="20210324 11:38:20.948"></status>
</kw>
<kw name="recebendo notificação de aprovação" library="accreditation_risk_notification">
<kw name="Uuid 4" library="FakerLibrary">
<doc>Generates a random UUID4 string.
:param cast_to: Specify what type the UUID should be cast to. Default is `str`
:type cast_to: callable</doc>
<assign>
<var>${assessment_id}</var>
</assign>
<msg timestamp="20210324 11:38:20.952" level="INFO">${assessment_id} = 350ba072-89a7-442f-8b59-207a4a64bcb0</msg>
<status status="PASS" starttime="20210324 11:38:20.951" endtime="20210324 11:38:20.953"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>year</arg>
</arguments>
<assign>
<var>${year}</var>
</assign>
<msg timestamp="20210324 11:38:20.955" level="INFO">${year} = 2021</msg>
<status status="PASS" starttime="20210324 11:38:20.954" endtime="20210324 11:38:20.955"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>month</arg>
</arguments>
<assign>
<var>${month}</var>
</assign>
<msg timestamp="20210324 11:38:20.957" level="INFO">${month} = 03</msg>
<status status="PASS" starttime="20210324 11:38:20.956" endtime="20210324 11:38:20.957"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>day</arg>
</arguments>
<assign>
<var>${day}</var>
</assign>
<msg timestamp="20210324 11:38:20.959" level="INFO">${day} = 24</msg>
<status status="PASS" starttime="20210324 11:38:20.957" endtime="20210324 11:38:20.959"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210324 11:38:20.961" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210324 11:38:20.960" endtime="20210324 11:38:20.961"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "risk.assessment.result",</arg>
<arg>"resource": "business.holder",</arg>
<arg>"created_at": "${year}-${month}-${day} 15:28:56.747Z",</arg>
<arg>"marketplace_id": "${marketplace_external_key}",</arg>
<arg>"object": {</arg>
<arg>"result": "APPROVED",</arg>
<arg>"holder_id": "${holder_external_key}",</arg>
<arg>"applicant_id": "${application_external_key}",</arg>
<arg>"assessment_id": "${assessment_id}"</arg>
<arg>}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210324 11:38:20.966" level="INFO">${body} = { "type": "risk.assessment.result", "resource": "business.holder", "created_at": "2021-03-24 15:28:56.747Z", "marketplace_id": "f71a8951368a4cc085cf7875ff44e61c", "object": { "result": "APPROVED", "ho...</msg>
<status status="PASS" starttime="20210324 11:38:20.962" endtime="20210324 11:38:20.966"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/admin/internal_operation/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/registration/approval</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210324 11:38:20.970" level="INFO">POST Request using : uri=/admin/internal_operation/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/824cf99eccc343fe880f4e8b10416693/registration/approval, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "risk.assessment.result", "resource": "business.holder", "created_at": "2021-03-24 15:28:56.747Z", "marketplace_id": "f71a8951368a4cc085cf7875ff44e61c", "object": { "result": "APPROVED", "holder_id": "824cf99eccc343fe880f4e8b10416693", "applicant_id": "bcc25a6751c14b52af1340d40dba78c5", "assessment_id": "350ba072-89a7-442f-8b59-207a4a64bcb0" } } 
json=None</msg>
<msg timestamp="20210324 11:38:21.179" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210324 11:38:20.967" endtime="20210324 11:38:21.179"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210324 11:38:21.182" level="INFO">{'message': 'Holder approved successfully'}</msg>
<status status="PASS" starttime="20210324 11:38:21.180" endtime="20210324 11:38:21.182"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210324 11:38:21.184" level="INFO">c09e6b29efb0d117</msg>
<status status="PASS" starttime="20210324 11:38:21.183" endtime="20210324 11:38:21.184"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210324 11:38:21.187" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210324 11:38:21.185" endtime="20210324 11:38:21.187"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210324 11:38:21.189" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210324 11:38:21.188" endtime="20210324 11:38:21.189"></status>
</kw>
<status status="PASS" starttime="20210324 11:38:20.949" endtime="20210324 11:38:21.190"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210324 11:38:21.192" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210324 11:38:21.191" endtime="20210324 11:38:21.192"></status>
</kw>
<kw name="buscar account por holder" library="accounts_get_accounts_by_holder">
<kw name="conectar accounts" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accounts</arg>
<arg>url=${account_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210324 11:38:21.198" level="INFO">Creating Session using : alias=accounts, url=https://banking-accounts-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210324 11:38:21.196" endtime="20210324 11:38:21.200"></status>
</kw>
<status status="PASS" starttime="20210324 11:38:21.195" endtime="20210324 11:38:21.201"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accounts</arg>
<arg>/marketplaces/${marketplace_external_key}/holders/${holder_external_key}/accounts</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210324 11:38:21.203" level="INFO">GET Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/holders/824cf99eccc343fe880f4e8b10416693/accounts, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210324 11:38:21.903" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210324 11:38:21.202" endtime="20210324 11:38:21.904"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210324 11:38:21.906" level="INFO">{'items': [{'id': '0d81d82927054a0ca89f28670ff3879c', 'holder': '824cf99eccc343fe880f4e8b10416693', 'balance': '0.00', 'currency': 'BRL', 'routing_number': '001', 'number': '6400496994', 'status': 'active', 'metadata': {}, 'created_at': '2021-03-24T14:38:20.801453', 'updated_at': '2021-03-24T14:38:20.801453', 'primary': True, 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'uri': '/v2/marketplaces/f71a8951368a4cc085cf7875ff44e61c/accounts/0d81d82927054a0ca89f28670ff3879c', 'resource': 'payment_account'}], 'has_more': False, 'limit': 100, 'total_pages': 1, 'page': 1, 'offset': 0, 'total': '1', 'query_count': '1'}</msg>
<status status="PASS" starttime="20210324 11:38:21.905" endtime="20210324 11:38:21.906"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210324 11:38:21.909" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210324 11:38:21.907" endtime="20210324 11:38:21.909"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["id"]}</arg>
</arguments>
<assign>
<var>${account_external_key}</var>
</assign>
<msg timestamp="20210324 11:38:21.912" level="INFO">${account_external_key} = 0d81d82927054a0ca89f28670ff3879c</msg>
<status status="PASS" starttime="20210324 11:38:21.910" endtime="20210324 11:38:21.912"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_external_key}</arg>
</arguments>
<msg timestamp="20210324 11:38:21.914" level="INFO">${account_external_key} = 0d81d82927054a0ca89f28670ff3879c</msg>
<status status="PASS" starttime="20210324 11:38:21.913" endtime="20210324 11:38:21.914"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["number"]}</arg>
</arguments>
<assign>
<var>${account_number}</var>
</assign>
<msg timestamp="20210324 11:38:21.917" level="INFO">${account_number} = 6400496994</msg>
<status status="PASS" starttime="20210324 11:38:21.915" endtime="20210324 11:38:21.917"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_number}</arg>
</arguments>
<msg timestamp="20210324 11:38:21.919" level="INFO">${account_number} = 6400496994</msg>
<status status="PASS" starttime="20210324 11:38:21.918" endtime="20210324 11:38:21.920"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["routing_number"]}</arg>
</arguments>
<assign>
<var>${account_routing_number}</var>
</assign>
<msg timestamp="20210324 11:38:21.923" level="INFO">${account_routing_number} = 001</msg>
<status status="PASS" starttime="20210324 11:38:21.921" endtime="20210324 11:38:21.923"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_routing_number}</arg>
</arguments>
<msg timestamp="20210324 11:38:21.925" level="INFO">${account_routing_number} = 001</msg>
<status status="PASS" starttime="20210324 11:38:21.924" endtime="20210324 11:38:21.925"></status>
</kw>
<status status="PASS" starttime="20210324 11:38:21.193" endtime="20210324 11:38:21.925"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210324 11:38:21.928" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210324 11:38:21.926" endtime="20210324 11:38:21.928"></status>
</kw>
<status status="PASS" starttime="20210324 11:38:18.291" endtime="20210324 11:38:21.928"></status>
</kw>
<status status="PASS" starttime="20210324 11:38:18.290" endtime="20210324 11:38:21.929"></status>
</kw>
<kw name="gerar saldo para account" library="account_generate_balance">
<arguments>
<arg>${account_external_key}</arg>
</arguments>
<kw name="Uuid 4" library="FakerLibrary">
<doc>Generates a random UUID4 string.
:param cast_to: Specify what type the UUID should be cast to. Default is `str`
:type cast_to: callable</doc>
<assign>
<var>${uuid}</var>
</assign>
<msg timestamp="20210324 11:38:21.932" level="INFO">${uuid} = d2a7b218-96ec-4f18-bac5-9ac2361f3591</msg>
<status status="PASS" starttime="20210324 11:38:21.931" endtime="20210324 11:38:21.932"></status>
</kw>
<kw name="conectar accounts" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accounts</arg>
<arg>url=${account_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210324 11:38:21.935" level="INFO">Creating Session using : alias=accounts, url=https://banking-accounts-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210324 11:38:21.934" endtime="20210324 11:38:21.936"></status>
</kw>
<status status="PASS" starttime="20210324 11:38:21.932" endtime="20210324 11:38:21.936"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210324 11:38:21.938" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210324 11:38:21.937" endtime="20210324 11:38:21.938"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"operations": [</arg>
<arg>{</arg>
<arg>"amount": 9000000000000,</arg>
<arg>"authorization_code": "${uuid}",</arg>
<arg>"transaction_id": "${uuid}",</arg>
<arg>"id": "${uuid}",</arg>
<arg>"id_checking_account": "${account_external_key}",</arg>
<arg>"transfer_date": "2020-02-20T20:58:06.510Z",</arg>
<arg>"fee": 0,</arg>
<arg>"description": "Teste",</arg>
<arg>"object_type": "transfer",</arg>
<arg>"object_id": "${uuid}",</arg>
<arg>"dflag": "ACTIVE",</arg>
<arg>"created_at": "2019-10-14T20:58:06.510Z",</arg>
<arg>"type": "Transfer"</arg>
<arg>}</arg>
<arg>],</arg>
<arg>"reference_id": "Criando saldo na account"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210324 11:38:21.941" level="INFO">${body} = { "operations": [ { "amount": 9000000000000, "authorization_code": "d2a7b218-96ec-4f18-bac5-9ac2361f3591", "transaction_id": "d2a7b218-96ec-4f18-bac5-9ac2361f3591", "id": "d2a7b218-96ec-4f18-bac5-9ac2...</msg>
<status status="PASS" starttime="20210324 11:38:21.939" endtime="20210324 11:38:21.941"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accounts</arg>
<arg>/admin/internal_operation/authorization/${uuid}</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210324 11:38:21.943" level="INFO">POST Request using : uri=/admin/internal_operation/authorization/d2a7b218-96ec-4f18-bac5-9ac2361f3591, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "operations": [ { "amount": 9000000000000, "authorization_code": "d2a7b218-96ec-4f18-bac5-9ac2361f3591", "transaction_id": "d2a7b218-96ec-4f18-bac5-9ac2361f3591", "id": "d2a7b218-96ec-4f18-bac5-9ac2361f3591", "id_checking_account": "0d81d82927054a0ca89f28670ff3879c", "transfer_date": "2020-02-20T20:58:06.510Z", "fee": 0, "description": "Teste", "object_type": "transfer", "object_id": "d2a7b218-96ec-4f18-bac5-9ac2361f3591", "dflag": "ACTIVE", "created_at": "2019-10-14T20:58:06.510Z", "type": "Transfer" } ], "reference_id": "Criando saldo na account" } 
json=None</msg>
<msg timestamp="20210324 11:38:22.659" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210324 11:38:21.942" endtime="20210324 11:38:22.660"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.status_code}' == 200</arg>
<arg>Log</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210324 11:38:22.662" endtime="20210324 11:38:22.663"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.status_code}' == 200</arg>
<arg>Log</arg>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<status status="PASS" starttime="20210324 11:38:22.665" endtime="20210324 11:38:22.665"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.status_code}' == 200</arg>
<arg>Log</arg>
<arg>${response.status_code}</arg>
</arguments>
<status status="PASS" starttime="20210324 11:38:22.666" endtime="20210324 11:38:22.668"></status>
</kw>
<status status="PASS" starttime="20210324 11:38:21.929" endtime="20210324 11:38:22.668"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${pix_type}' == 'phone'</arg>
<arg>criar chave pix</arg>
<arg>${pix_type}</arg>
<arg>${phone_pix}</arg>
<arg>ELSE IF</arg>
<arg>'${pix_type}' == 'email'</arg>
<arg>criar chave pix</arg>
<arg>${pix_type}</arg>
<arg>${email_pix}</arg>
<arg>ELSE IF</arg>
<arg>'${pix_type}' == 'evp'</arg>
<arg>criar chave pix</arg>
<arg>${pix_type}</arg>
<arg>${EMPTY}</arg>
<arg>ELSE IF</arg>
<arg>'${pix_type}' == 'national_registration'</arg>
<arg>criar chave pix</arg>
<arg>${pix_type}</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw name="criar chave pix" library="pix_dict_create_entry">
<arguments>
<arg>${pix_type}</arg>
<arg>${email_pix}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210324 11:38:22.677" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210324 11:38:22.675" endtime="20210324 11:38:22.681"></status>
</kw>
<status status="PASS" starttime="20210324 11:38:22.674" endtime="20210324 11:38:22.681"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${type}</arg>
</arguments>
<msg timestamp="20210324 11:38:22.683" level="INFO">${type} = email</msg>
<status status="PASS" starttime="20210324 11:38:22.682" endtime="20210324 11:38:22.683"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210324 11:38:22.685" level="INFO">${value} = ferreiramaria-eduarda@correia.com</msg>
<status status="PASS" starttime="20210324 11:38:22.685" endtime="20210324 11:38:22.686"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210324 11:38:22.688" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210324 11:38:22.687" endtime="20210324 11:38:22.688"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "${type}",</arg>
<arg>"value": "${value}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210324 11:38:22.690" level="INFO">${body} = { "type": "email", "value": "ferreiramaria-eduarda@correia.com" }</msg>
<status status="PASS" starttime="20210324 11:38:22.689" endtime="20210324 11:38:22.690"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210324 11:38:22.694" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/824cf99eccc343fe880f4e8b10416693/accounts/0d81d82927054a0ca89f28670ff3879c/entries, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "email", "value": "ferreiramaria-eduarda@correia.com" } 
json=None</msg>
<msg timestamp="20210324 11:38:23.466" level="INFO">${response} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20210324 11:38:22.691" endtime="20210324 11:38:23.467"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210324 11:38:23.470" level="INFO">{'id': 'cee521aee05949c7b0dad32267f4d6f3', 'status': 'waiting_ownership_verification', 'created_at': '2021-03-24T11:38:23.100', 'updated_at': '2021-03-24T11:38:23.100', 'key': {'value': 'ferreiramaria-eduarda@correia.com', 'type': 'email'}, 'account': {'id': '0d81d82927054a0ca89f28670ff3879c', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': '824cf99eccc343fe880f4e8b10416693', 'owner': {'name': 'Holder de teste', 'national_registration': '06397814203', 'type': 'individual'}, 'routing_number': '001', 'number': '6400496994', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}, 'resource': 'pix.entry'}</msg>
<status status="PASS" starttime="20210324 11:38:23.468" endtime="20210324 11:38:23.470"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210324 11:38:23.473" level="INFO">a813b1bf5384e77a</msg>
<status status="PASS" starttime="20210324 11:38:23.472" endtime="20210324 11:38:23.473"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210324 11:38:23.475" level="INFO">202</msg>
<status status="PASS" starttime="20210324 11:38:23.474" endtime="20210324 11:38:23.475"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210324 11:38:23.477" level="INFO">${response} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20210324 11:38:23.476" endtime="20210324 11:38:23.478"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${entry_external_key}</var>
</assign>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<status status="PASS" starttime="20210324 11:38:23.481" endtime="20210324 11:38:23.483"></status>
</kw>
<msg timestamp="20210324 11:38:23.483" level="INFO">${entry_external_key} = cee521aee05949c7b0dad32267f4d6f3</msg>
<status status="PASS" starttime="20210324 11:38:23.479" endtime="20210324 11:38:23.483"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${entry_external_key}</arg>
</arguments>
<msg timestamp="20210324 11:38:23.486" level="INFO">${entry_external_key} = cee521aee05949c7b0dad32267f4d6f3</msg>
<status status="PASS" starttime="20210324 11:38:23.484" endtime="20210324 11:38:23.486"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["key"]["value"]}</arg>
</arguments>
<assign>
<var>${entry_key_value}</var>
</assign>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["key"]["value"]}</arg>
</arguments>
<status status="PASS" starttime="20210324 11:38:23.489" endtime="20210324 11:38:23.491"></status>
</kw>
<msg timestamp="20210324 11:38:23.491" level="INFO">${entry_key_value} = ferreiramaria-eduarda@correia.com</msg>
<status status="PASS" starttime="20210324 11:38:23.487" endtime="20210324 11:38:23.491"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${entry_key_value}</arg>
</arguments>
<msg timestamp="20210324 11:38:23.493" level="INFO">${entry_key_value} = ferreiramaria-eduarda@correia.com</msg>
<status status="PASS" starttime="20210324 11:38:23.492" endtime="20210324 11:38:23.494"></status>
</kw>
<status status="PASS" starttime="20210324 11:38:22.672" endtime="20210324 11:38:23.494"></status>
</kw>
<status status="PASS" starttime="20210324 11:38:22.669" endtime="20210324 11:38:23.494"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${pix_type}' == 'phone'</arg>
<arg>buscar verification code</arg>
<arg>${holder_external_key}</arg>
<arg>${account_external_key}</arg>
<arg>${entry_external_key}</arg>
<arg>ELSE IF</arg>
<arg>'${pix_type}' == 'email'</arg>
<arg>buscar verification code</arg>
<arg>${holder_external_key}</arg>
<arg>${account_external_key}</arg>
<arg>${entry_external_key}</arg>
</arguments>
<kw name="buscar verification code" library="pix_dict_verification_code">
<arguments>
<arg>${holder_external_key}</arg>
<arg>${account_external_key}</arg>
<arg>${entry_external_key}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210324 11:38:23.502" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210324 11:38:23.501" endtime="20210324 11:38:23.503"></status>
</kw>
<status status="PASS" starttime="20210324 11:38:23.499" endtime="20210324 11:38:23.504"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/admin/internal_operation/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries/${entry_external_key}/code</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210324 11:38:23.506" level="INFO">GET Request using : uri=/admin/internal_operation/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/824cf99eccc343fe880f4e8b10416693/accounts/0d81d82927054a0ca89f28670ff3879c/entries/cee521aee05949c7b0dad32267f4d6f3/code, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210324 11:38:24.246" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210324 11:38:23.504" endtime="20210324 11:38:24.246"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210324 11:38:24.248" level="INFO">{'code': '2622'}</msg>
<status status="PASS" starttime="20210324 11:38:24.247" endtime="20210324 11:38:24.248"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210324 11:38:24.250" level="INFO">6e22e58fafd28ad4</msg>
<status status="PASS" starttime="20210324 11:38:24.249" endtime="20210324 11:38:24.251"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210324 11:38:24.252" level="INFO">200</msg>
<status status="PASS" starttime="20210324 11:38:24.252" endtime="20210324 11:38:24.253"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210324 11:38:24.255" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210324 11:38:24.254" endtime="20210324 11:38:24.255"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["code"]}</arg>
</arguments>
<assign>
<var>${verification_code}</var>
</assign>
<msg timestamp="20210324 11:38:24.258" level="INFO">${verification_code} = 2622</msg>
<status status="PASS" starttime="20210324 11:38:24.256" endtime="20210324 11:38:24.259"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${verification_code}</arg>
</arguments>
<msg timestamp="20210324 11:38:24.261" level="INFO">${verification_code} = 2622</msg>
<status status="PASS" starttime="20210324 11:38:24.259" endtime="20210324 11:38:24.261"></status>
</kw>
<status status="PASS" starttime="20210324 11:38:23.497" endtime="20210324 11:38:24.261"></status>
</kw>
<status status="PASS" starttime="20210324 11:38:23.495" endtime="20210324 11:38:24.262"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${pix_type}' == 'phone'</arg>
<arg>confirmar propriedade da chave pix</arg>
<arg>${verification_code}</arg>
<arg>${holder_external_key}</arg>
<arg>${account_external_key}</arg>
<arg>${entry_external_key}</arg>
<arg>ELSE IF</arg>
<arg>'${pix_type}' == 'email'</arg>
<arg>confirmar propriedade da chave pix</arg>
<arg>${verification_code}</arg>
<arg>${holder_external_key}</arg>
<arg>${account_external_key}</arg>
<arg>${entry_external_key}</arg>
</arguments>
<kw name="confirmar propriedade da chave pix" library="pix_dict_confirm_propriety">
<arguments>
<arg>${verification_code}</arg>
<arg>${holder_external_key}</arg>
<arg>${account_external_key}</arg>
<arg>${entry_external_key}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210324 11:38:24.270" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210324 11:38:24.269" endtime="20210324 11:38:24.272"></status>
</kw>
<status status="PASS" starttime="20210324 11:38:24.268" endtime="20210324 11:38:24.272"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210324 11:38:24.274" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210324 11:38:24.273" endtime="20210324 11:38:24.274"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"code": "${verification_code}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210324 11:38:24.276" level="INFO">${body} = { "code": "2622" }</msg>
<status status="PASS" starttime="20210324 11:38:24.275" endtime="20210324 11:38:24.276"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries/${entry_external_key}/ownership</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210324 11:38:24.280" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/824cf99eccc343fe880f4e8b10416693/accounts/0d81d82927054a0ca89f28670ff3879c/entries/cee521aee05949c7b0dad32267f4d6f3/ownership, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "code": "2622" } 
json=None</msg>
<msg timestamp="20210324 11:38:26.135" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210324 11:38:24.278" endtime="20210324 11:38:26.136"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210324 11:38:26.138" level="INFO">{'id': 'cee521aee05949c7b0dad32267f4d6f3', 'status': 'active', 'created_at': '2021-03-24T11:38:23.100', 'updated_at': '2021-03-24T11:38:25.725', 'key': {'value': 'ferreiramaria-eduarda@correia.com', 'type': 'email'}, 'account': {'id': '0d81d82927054a0ca89f28670ff3879c', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': '824cf99eccc343fe880f4e8b10416693', 'owner': {'name': 'Holder de teste', 'national_registration': '06397814203', 'type': 'individual'}, 'routing_number': '001', 'number': '6400496994', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}, 'resource': 'pix.entry'}</msg>
<status status="PASS" starttime="20210324 11:38:26.137" endtime="20210324 11:38:26.138"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210324 11:38:26.140" level="INFO">f693ce4782817750</msg>
<status status="PASS" starttime="20210324 11:38:26.139" endtime="20210324 11:38:26.141"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210324 11:38:26.143" level="INFO">201</msg>
<status status="PASS" starttime="20210324 11:38:26.142" endtime="20210324 11:38:26.143"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210324 11:38:26.145" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210324 11:38:26.144" endtime="20210324 11:38:26.145"></status>
</kw>
<status status="PASS" starttime="20210324 11:38:24.265" endtime="20210324 11:38:26.146"></status>
</kw>
<status status="PASS" starttime="20210324 11:38:24.263" endtime="20210324 11:38:26.146"></status>
</kw>
<status status="PASS" starttime="20210324 11:38:18.286" endtime="20210324 11:38:26.146"></status>
</kw>
<kw name="buscar account balance" library="account_get_balance">
<arguments>
<arg>marketplace_external_key=${marketplace_external_key}</arg>
<arg>account_external_key=${account_external_key}</arg>
</arguments>
<kw name="conectar accounts" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accounts</arg>
<arg>url=${account_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210324 11:38:26.154" level="INFO">Creating Session using : alias=accounts, url=https://banking-accounts-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210324 11:38:26.153" endtime="20210324 11:38:26.155"></status>
</kw>
<status status="PASS" starttime="20210324 11:38:26.151" endtime="20210324 11:38:26.155"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accounts</arg>
<arg>/marketplaces/${marketplace_external_key}/accounts/${account_external_key}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210324 11:38:26.158" level="INFO">GET Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/accounts/0d81d82927054a0ca89f28670ff3879c, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210324 11:38:26.883" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210324 11:38:26.156" endtime="20210324 11:38:26.883"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210324 11:38:26.886" level="INFO">{'id': '0d81d82927054a0ca89f28670ff3879c', 'holder': '824cf99eccc343fe880f4e8b10416693', 'balance': '9000000.00', 'currency': 'BRL', 'routing_number': '001', 'number': '6400496994', 'status': 'active', 'metadata': {}, 'created_at': '2021-03-24T14:38:20.801453', 'updated_at': '2021-03-24T14:38:22.313929', 'primary': True, 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'uri': '/v2/marketplaces/f71a8951368a4cc085cf7875ff44e61c/accounts/0d81d82927054a0ca89f28670ff3879c', 'resource': 'payment_account'}</msg>
<status status="PASS" starttime="20210324 11:38:26.884" endtime="20210324 11:38:26.886"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210324 11:38:26.888" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210324 11:38:26.887" endtime="20210324 11:38:26.888"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["balance"]}</arg>
</arguments>
<assign>
<var>${account_balance}</var>
</assign>
<msg timestamp="20210324 11:38:26.891" level="INFO">${account_balance} = 9000000.00</msg>
<status status="PASS" starttime="20210324 11:38:26.889" endtime="20210324 11:38:26.891"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_balance}</arg>
</arguments>
<msg timestamp="20210324 11:38:26.893" level="INFO">${account_balance} = 9000000.00</msg>
<status status="PASS" starttime="20210324 11:38:26.892" endtime="20210324 11:38:26.893"></status>
</kw>
<status status="PASS" starttime="20210324 11:38:26.149" endtime="20210324 11:38:26.894"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${account_balance}</arg>
</arguments>
<assign>
<var>${account_balance_initial}</var>
</assign>
<msg timestamp="20210324 11:38:26.897" level="INFO">${account_balance_initial} = 9000000.00</msg>
<status status="PASS" starttime="20210324 11:38:26.896" endtime="20210324 11:38:26.898"></status>
</kw>
<kw name="criar pagamento pix com dados completos" library="pix_payments_create_pix_payment">
<arguments>
<arg>amount=${amount}</arg>
<arg>creditor_account_number=${creditor_account_number}</arg>
<arg>creditor_routing_number=${creditor_routing_number}</arg>
<arg>creditor_account_type=${creditor_account_type}</arg>
<arg>creditor_name=${creditor_name}</arg>
<arg>creditor_national_registration=${creditor_national_registration}</arg>
<arg>creditor_psp=${creditor_psp}</arg>
<arg>pix_description=${pix_description}</arg>
</arguments>
<kw name="conectar pix-payments" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-payments</arg>
<arg>url=${pix_payments_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210324 11:38:26.906" level="INFO">Creating Session using : alias=pix-payments, url=https://banking-pix-payments-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210324 11:38:26.905" endtime="20210324 11:38:26.908"></status>
</kw>
<status status="PASS" starttime="20210324 11:38:26.903" endtime="20210324 11:38:26.908"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210324 11:38:26.910" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210324 11:38:26.909" endtime="20210324 11:38:26.910"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"amount": ${amount},</arg>
<arg>"creditor": {</arg>
<arg>"account": {</arg>
<arg>"number": "${creditor_account_number}",</arg>
<arg>"routing_number": "${creditor_routing_number}",</arg>
<arg>"type": "${creditor_account_type}"</arg>
<arg>},</arg>
<arg>"name": "${creditor_name}",</arg>
<arg>"national_registration": "${creditor_national_registration}",</arg>
<arg>"psp": "${creditor_psp}"</arg>
<arg>},</arg>
<arg>"description": "${pix_description}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210324 11:38:26.914" level="INFO">${body} = { "amount": 290, "creditor": { "account": { "number": "0243882974", "routing_number": "0500", "type": "cacc" }, "name": "Massa iti PF NauNNMO", "national_registration": "42808422644", "psp": "17192451...</msg>
<status status="PASS" starttime="20210324 11:38:26.911" endtime="20210324 11:38:26.914"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-payments</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/pix/holders/${holder_external_key}/accounts/${account_external_key}/payments</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210324 11:38:26.917" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/pix/holders/824cf99eccc343fe880f4e8b10416693/accounts/0d81d82927054a0ca89f28670ff3879c/payments, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "amount": 290, "creditor": { "account": { "number": "0243882974", "routing_number": "0500", "type": "cacc" }, "name": "Massa iti PF NauNNMO", "national_registration": "42808422644", "psp": "17192451" }, "description": "Envio de PIX" } 
json=None</msg>
<msg timestamp="20210324 11:38:27.668" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210324 11:38:26.915" endtime="20210324 11:38:27.668"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210324 11:38:27.671" level="INFO">{'id': '310ab77f8cfe4fa29422e54cfc221d18', 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'status': 'pending', 'end_to_end_id': 'E19468242202103241438848b82c8388', 'message_id': 'M19468242912525abb3e4b548d5b2b99', 'amount': 290, 'created_at': '2021-03-24T11:38:27.282606', 'description': 'Envio de PIX', 'debtor': {'national_registration': '06397814203', 'name': 'Holder de teste', 'type': 'individual', 'holder_id': '824cf99eccc343fe880f4e8b10416693', 'account': {'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}, 'digital_account_id': '0d81d82927054a0ca89f28670ff3879c', 'number': '6400496994', 'routing_number': '0001', 'type': 'cacc'}}, 'creditor': {'national_registration': '42808422644', 'name': 'Massa iti PF NauNNMO', 'type': 'individual', 'account': {'psp': {'code': '17192451'}, 'number': '0243882974', 'routing_number': '0500', 'type': 'cacc'}}, 'refunded_amount': 0}</msg>
<status status="PASS" starttime="20210324 11:38:27.669" endtime="20210324 11:38:27.671"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210324 11:38:27.673" level="INFO">8f342b8e633fe66f</msg>
<status status="PASS" starttime="20210324 11:38:27.672" endtime="20210324 11:38:27.674"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210324 11:38:27.676" level="INFO">201</msg>
<status status="PASS" starttime="20210324 11:38:27.675" endtime="20210324 11:38:27.676"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210324 11:38:27.678" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210324 11:38:27.677" endtime="20210324 11:38:27.678"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${payment_external_key}</var>
</assign>
<msg timestamp="20210324 11:38:27.681" level="INFO">${payment_external_key} = 310ab77f8cfe4fa29422e54cfc221d18</msg>
<status status="PASS" starttime="20210324 11:38:27.679" endtime="20210324 11:38:27.681"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${payment_external_key}</arg>
</arguments>
<msg timestamp="20210324 11:38:27.684" level="INFO">${payment_external_key} = 310ab77f8cfe4fa29422e54cfc221d18</msg>
<status status="PASS" starttime="20210324 11:38:27.682" endtime="20210324 11:38:27.684"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["end_to_end_id"]}</arg>
</arguments>
<assign>
<var>${end_to_end_id}</var>
</assign>
<msg timestamp="20210324 11:38:27.687" level="INFO">${end_to_end_id} = E19468242202103241438848b82c8388</msg>
<status status="PASS" starttime="20210324 11:38:27.685" endtime="20210324 11:38:27.687"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${end_to_end_id}</arg>
</arguments>
<msg timestamp="20210324 11:38:27.689" level="INFO">${end_to_end_id} = E19468242202103241438848b82c8388</msg>
<status status="PASS" starttime="20210324 11:38:27.688" endtime="20210324 11:38:27.689"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["message_id"]}</arg>
</arguments>
<assign>
<var>${message_id}</var>
</assign>
<msg timestamp="20210324 11:38:27.692" level="INFO">${message_id} = M19468242912525abb3e4b548d5b2b99</msg>
<status status="PASS" starttime="20210324 11:38:27.690" endtime="20210324 11:38:27.693"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${message_id}</arg>
</arguments>
<msg timestamp="20210324 11:38:27.695" level="INFO">${message_id} = M19468242912525abb3e4b548d5b2b99</msg>
<status status="PASS" starttime="20210324 11:38:27.694" endtime="20210324 11:38:27.695"></status>
</kw>
<status status="PASS" starttime="20210324 11:38:26.900" endtime="20210324 11:38:27.696"></status>
</kw>
<kw name="validar pagamento pix" library="asserts">
<arguments>
<arg>marketplace_external_key=${marketplace_external_key}</arg>
<arg>status_pix_payments=pending</arg>
<arg>amount=${amount}</arg>
<arg>pix_description=${pix_description}</arg>
<arg>debitor_national_registration=${national_registration}</arg>
<arg>debitor_name=${holder_name}</arg>
<arg>debitor_type=${holder_type}</arg>
<arg>debitor_holder_id=${holder_external_key}</arg>
<arg>debtor_account_psp_code=${debtor_account_psp_code}</arg>
<arg>debtor_account_psp_name=${debtor_account_psp_name}</arg>
<arg>debtor_digital_account=${account_external_key}</arg>
<arg>debtor_account_number=${account_number}</arg>
<arg>debtor_account_routing_number=${account_routing_number}</arg>
<arg>debtor_account_type=${debtor_account_type}</arg>
<arg>creditor_national_registration=${creditor_national_registration}</arg>
<arg>creditor_name=${creditor_name}</arg>
<arg>creditor_type=individual</arg>
<arg>creditor_account_psp_code=${creditor_psp}</arg>
<arg>creditor_account_number=${creditor_account_number}</arg>
<arg>creditor_account_routing_number=${creditor_routing_number}</arg>
<arg>creditor_account_type=${creditor_account_type}</arg>
<arg>refunded_amount=0</arg>
</arguments>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<arguments>
<arg>result_format=datetime</arg>
</arguments>
<assign>
<var>${date}</var>
</assign>
<msg timestamp="20210324 11:38:27.706" level="INFO">${date} = 2021-03-24 11:38:27.705150</msg>
<status status="PASS" starttime="20210324 11:38:27.705" endtime="20210324 11:38:27.706"></status>
</kw>
<kw name="Convert Date" library="DateTime">
<doc>Converts between supported `date formats`.</doc>
<arguments>
<arg>${date}</arg>
<arg>exclude_millis=yes</arg>
<arg>result_format=%Y-%m-%d</arg>
<arg>date_format=%d-%m-%Y</arg>
</arguments>
<assign>
<var>${date}</var>
</assign>
<msg timestamp="20210324 11:38:27.708" level="INFO">${date} = 2021-03-24</msg>
<status status="PASS" starttime="20210324 11:38:27.707" endtime="20210324 11:38:27.708"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["marketplace_id"]}</arg>
<arg>${marketplace_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210324 11:38:27.709" endtime="20210324 11:38:27.711"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["status"]}</arg>
<arg>${status_pix_payments}</arg>
</arguments>
<status status="PASS" starttime="20210324 11:38:27.713" endtime="20210324 11:38:27.714"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response.json()["end_to_end_id"]}</arg>
<arg>E19468242</arg>
</arguments>
<status status="PASS" starttime="20210324 11:38:27.716" endtime="20210324 11:38:27.717"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.json()["status"]}' == 'peding'</arg>
<arg>Should Contain</arg>
<arg>${response.json()["message_id"]}</arg>
<arg>M19468242</arg>
<arg>ELSE IF</arg>
<arg>'${response.json()["status"]}' == 'executed'</arg>
<arg>Should Contain</arg>
<arg>${response.json()["message_id"]}</arg>
<arg>M19468242</arg>
<arg>ELSE IF</arg>
<arg>'${response.json()["status"]}' == 'succeeded'</arg>
<arg>Should Contain</arg>
<arg>${response.json()["message_id"]}</arg>
<arg>M19468242</arg>
<arg>ELSE IF</arg>
<arg>'${response.json()["status"]}' == 'canceled'</arg>
<arg>Should Not Contain Any</arg>
<arg>${response.json()}</arg>
<arg>message_id</arg>
</arguments>
<status status="PASS" starttime="20210324 11:38:27.718" endtime="20210324 11:38:27.721"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.json()["amount"]}</arg>
<arg>${amount}</arg>
</arguments>
<msg timestamp="20210324 11:38:27.724" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210324 11:38:27.722" endtime="20210324 11:38:27.724"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["description"]}</arg>
<arg>${pix_description}</arg>
</arguments>
<status status="PASS" starttime="20210324 11:38:27.725" endtime="20210324 11:38:27.727"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["national_registration"]}</arg>
<arg>${debitor_national_registration}</arg>
</arguments>
<status status="PASS" starttime="20210324 11:38:27.728" endtime="20210324 11:38:27.730"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["name"]}</arg>
<arg>${debitor_name}</arg>
</arguments>
<status status="PASS" starttime="20210324 11:38:27.731" endtime="20210324 11:38:27.733"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["type"]}</arg>
<arg>${debitor_type}</arg>
</arguments>
<status status="PASS" starttime="20210324 11:38:27.734" endtime="20210324 11:38:27.738"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["holder_id"]}</arg>
<arg>${debitor_holder_id}</arg>
</arguments>
<status status="PASS" starttime="20210324 11:38:27.739" endtime="20210324 11:38:27.741"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["account"]["psp"]["code"]}</arg>
<arg>${debtor_account_psp_code}</arg>
</arguments>
<status status="PASS" starttime="20210324 11:38:27.742" endtime="20210324 11:38:27.744"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["account"]["psp"]["name"]}</arg>
<arg>${debtor_account_psp_name}</arg>
</arguments>
<status status="PASS" starttime="20210324 11:38:27.744" endtime="20210324 11:38:27.747"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["account"]["digital_account_id"]}</arg>
<arg>${debtor_digital_account}</arg>
</arguments>
<status status="PASS" starttime="20210324 11:38:27.748" endtime="20210324 11:38:27.749"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["account"]["number"]}</arg>
<arg>${account_number}</arg>
</arguments>
<status status="PASS" starttime="20210324 11:38:27.750" endtime="20210324 11:38:27.752"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["account"]["routing_number"]}</arg>
<arg>0${debtor_account_routing_number}</arg>
</arguments>
<status status="PASS" starttime="20210324 11:38:27.753" endtime="20210324 11:38:27.755"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["account"]["type"]}</arg>
<arg>${debtor_account_type}</arg>
</arguments>
<status status="PASS" starttime="20210324 11:38:27.755" endtime="20210324 11:38:27.757"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["creditor"]["national_registration"]}</arg>
<arg>${creditor_national_registration}</arg>
</arguments>
<status status="PASS" starttime="20210324 11:38:27.758" endtime="20210324 11:38:27.760"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["creditor"]["name"]}</arg>
<arg>${creditor_name}</arg>
</arguments>
<status status="PASS" starttime="20210324 11:38:27.761" endtime="20210324 11:38:27.763"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["creditor"]["type"]}</arg>
<arg>${creditor_type}</arg>
</arguments>
<status status="PASS" starttime="20210324 11:38:27.764" endtime="20210324 11:38:27.767"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["creditor"]["account"]["psp"]["code"]}</arg>
<arg>${creditor_account_psp_code}</arg>
</arguments>
<status status="PASS" starttime="20210324 11:38:27.768" endtime="20210324 11:38:27.770"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["creditor"]["account"]["number"]}</arg>
<arg>${creditor_account_number}</arg>
</arguments>
<status status="PASS" starttime="20210324 11:38:27.771" endtime="20210324 11:38:27.773"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["creditor"]["account"]["routing_number"]}</arg>
<arg>${creditor_account_routing_number}</arg>
</arguments>
<status status="PASS" starttime="20210324 11:38:27.774" endtime="20210324 11:38:27.775"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["creditor"]["account"]["type"]}</arg>
<arg>${creditor_account_type}</arg>
</arguments>
<status status="PASS" starttime="20210324 11:38:27.776" endtime="20210324 11:38:27.777"></status>
</kw>
<status status="PASS" starttime="20210324 11:38:27.699" endtime="20210324 11:38:27.777"></status>
</kw>
<kw name="confirmar pagamento pix" library="pix_payments_confirm_pix_payment">
<arguments>
<arg>holder_external_key=${holder_external_key}</arg>
<arg>account_external_key=${account_external_key}</arg>
<arg>payment_external_key=${payment_external_key}</arg>
</arguments>
<kw name="conectar pix-payments" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-payments</arg>
<arg>url=${pix_payments_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210324 11:38:27.782" level="INFO">Creating Session using : alias=pix-payments, url=https://banking-pix-payments-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210324 11:38:27.782" endtime="20210324 11:38:27.783"></status>
</kw>
<status status="PASS" starttime="20210324 11:38:27.781" endtime="20210324 11:38:27.783"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210324 11:38:27.785" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210324 11:38:27.784" endtime="20210324 11:38:27.785"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-payments</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/pix/holders/${holder_external_key}/accounts/${account_external_key}/payments/${payment_external_key}/confirm</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210324 11:38:27.786" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/pix/holders/824cf99eccc343fe880f4e8b10416693/accounts/0d81d82927054a0ca89f28670ff3879c/payments/310ab77f8cfe4fa29422e54cfc221d18/confirm, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data=None 
json=None</msg>
<msg timestamp="20210324 11:38:29.518" level="INFO">${response} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20210324 11:38:27.785" endtime="20210324 11:38:29.518"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210324 11:38:29.521" level="INFO">{'id': '310ab77f8cfe4fa29422e54cfc221d18', 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'status': 'executed', 'end_to_end_id': 'E19468242202103241438848b82c8388', 'message_id': 'M19468242912525abb3e4b548d5b2b99', 'amount': 290, 'description': 'Envio de PIX', 'debtor': {'national_registration': '06397814203', 'name': 'Holder de teste', 'type': 'individual', 'holder_id': '824cf99eccc343fe880f4e8b10416693', 'account': {'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}, 'digital_account_id': '0d81d82927054a0ca89f28670ff3879c', 'number': '6400496994', 'routing_number': '0001', 'type': 'cacc'}}, 'creditor': {'national_registration': '42808422644', 'name': 'Massa iti PF NauNNMO', 'type': 'individual', 'account': {'psp': {'code': '17192451'}, 'number': '0243882974', 'routing_number': '0500', 'type': 'cacc'}}, 'resource': 'pix_transaction'}</msg>
<status status="PASS" starttime="20210324 11:38:29.520" endtime="20210324 11:38:29.522"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210324 11:38:29.524" level="INFO">7a5ae20147ffc23c</msg>
<status status="PASS" starttime="20210324 11:38:29.523" endtime="20210324 11:38:29.524"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210324 11:38:29.527" level="INFO">202</msg>
<status status="PASS" starttime="20210324 11:38:29.525" endtime="20210324 11:38:29.527"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210324 11:38:29.529" level="INFO">${response} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20210324 11:38:29.528" endtime="20210324 11:38:29.529"></status>
</kw>
<status status="PASS" starttime="20210324 11:38:27.779" endtime="20210324 11:38:29.530"></status>
</kw>
<kw name="validar pagamento pix" library="asserts">
<arguments>
<arg>marketplace_external_key=${marketplace_external_key}</arg>
<arg>status_pix_payments=executed</arg>
<arg>amount=${amount}</arg>
<arg>pix_description=${pix_description}</arg>
<arg>debitor_national_registration=${national_registration}</arg>
<arg>debitor_name=${holder_name}</arg>
<arg>debitor_type=${holder_type}</arg>
<arg>debitor_holder_id=${holder_external_key}</arg>
<arg>debtor_account_psp_code=${debtor_account_psp_code}</arg>
<arg>debtor_account_psp_name=${debtor_account_psp_name}</arg>
<arg>debtor_digital_account=${account_external_key}</arg>
<arg>debtor_account_number=${account_number}</arg>
<arg>debtor_account_routing_number=${account_routing_number}</arg>
<arg>debtor_account_type=${debtor_account_type}</arg>
<arg>creditor_national_registration=${creditor_national_registration}</arg>
<arg>creditor_name=${creditor_name}</arg>
<arg>creditor_type=individual</arg>
<arg>creditor_account_psp_code=${creditor_psp}</arg>
<arg>creditor_account_number=${creditor_account_number}</arg>
<arg>creditor_account_routing_number=${creditor_routing_number}</arg>
<arg>creditor_account_type=${creditor_account_type}</arg>
<arg>refunded_amount=0</arg>
</arguments>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<arguments>
<arg>result_format=datetime</arg>
</arguments>
<assign>
<var>${date}</var>
</assign>
<msg timestamp="20210324 11:38:29.540" level="INFO">${date} = 2021-03-24 11:38:29.539657</msg>
<status status="PASS" starttime="20210324 11:38:29.539" endtime="20210324 11:38:29.541"></status>
</kw>
<kw name="Convert Date" library="DateTime">
<doc>Converts between supported `date formats`.</doc>
<arguments>
<arg>${date}</arg>
<arg>exclude_millis=yes</arg>
<arg>result_format=%Y-%m-%d</arg>
<arg>date_format=%d-%m-%Y</arg>
</arguments>
<assign>
<var>${date}</var>
</assign>
<msg timestamp="20210324 11:38:29.543" level="INFO">${date} = 2021-03-24</msg>
<status status="PASS" starttime="20210324 11:38:29.542" endtime="20210324 11:38:29.543"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["marketplace_id"]}</arg>
<arg>${marketplace_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210324 11:38:29.544" endtime="20210324 11:38:29.546"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["status"]}</arg>
<arg>${status_pix_payments}</arg>
</arguments>
<status status="PASS" starttime="20210324 11:38:29.547" endtime="20210324 11:38:29.549"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response.json()["end_to_end_id"]}</arg>
<arg>E19468242</arg>
</arguments>
<status status="PASS" starttime="20210324 11:38:29.550" endtime="20210324 11:38:29.551"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.json()["status"]}' == 'peding'</arg>
<arg>Should Contain</arg>
<arg>${response.json()["message_id"]}</arg>
<arg>M19468242</arg>
<arg>ELSE IF</arg>
<arg>'${response.json()["status"]}' == 'executed'</arg>
<arg>Should Contain</arg>
<arg>${response.json()["message_id"]}</arg>
<arg>M19468242</arg>
<arg>ELSE IF</arg>
<arg>'${response.json()["status"]}' == 'succeeded'</arg>
<arg>Should Contain</arg>
<arg>${response.json()["message_id"]}</arg>
<arg>M19468242</arg>
<arg>ELSE IF</arg>
<arg>'${response.json()["status"]}' == 'canceled'</arg>
<arg>Should Not Contain Any</arg>
<arg>${response.json()}</arg>
<arg>message_id</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response.json()["message_id"]}</arg>
<arg>M19468242</arg>
</arguments>
<status status="PASS" starttime="20210324 11:38:29.556" endtime="20210324 11:38:29.557"></status>
</kw>
<status status="PASS" starttime="20210324 11:38:29.552" endtime="20210324 11:38:29.558"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.json()["amount"]}</arg>
<arg>${amount}</arg>
</arguments>
<msg timestamp="20210324 11:38:29.560" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210324 11:38:29.559" endtime="20210324 11:38:29.561"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["description"]}</arg>
<arg>${pix_description}</arg>
</arguments>
<status status="PASS" starttime="20210324 11:38:29.562" endtime="20210324 11:38:29.564"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["national_registration"]}</arg>
<arg>${debitor_national_registration}</arg>
</arguments>
<status status="PASS" starttime="20210324 11:38:29.566" endtime="20210324 11:38:29.568"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["name"]}</arg>
<arg>${debitor_name}</arg>
</arguments>
<status status="PASS" starttime="20210324 11:38:29.569" endtime="20210324 11:38:29.570"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["type"]}</arg>
<arg>${debitor_type}</arg>
</arguments>
<status status="PASS" starttime="20210324 11:38:29.571" endtime="20210324 11:38:29.573"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["holder_id"]}</arg>
<arg>${debitor_holder_id}</arg>
</arguments>
<status status="PASS" starttime="20210324 11:38:29.574" endtime="20210324 11:38:29.576"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["account"]["psp"]["code"]}</arg>
<arg>${debtor_account_psp_code}</arg>
</arguments>
<status status="PASS" starttime="20210324 11:38:29.577" endtime="20210324 11:38:29.579"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["account"]["psp"]["name"]}</arg>
<arg>${debtor_account_psp_name}</arg>
</arguments>
<status status="PASS" starttime="20210324 11:38:29.580" endtime="20210324 11:38:29.582"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["account"]["digital_account_id"]}</arg>
<arg>${debtor_digital_account}</arg>
</arguments>
<status status="PASS" starttime="20210324 11:38:29.584" endtime="20210324 11:38:29.586"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["account"]["number"]}</arg>
<arg>${account_number}</arg>
</arguments>
<status status="PASS" starttime="20210324 11:38:29.588" endtime="20210324 11:38:29.590"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["account"]["routing_number"]}</arg>
<arg>0${debtor_account_routing_number}</arg>
</arguments>
<status status="PASS" starttime="20210324 11:38:29.591" endtime="20210324 11:38:29.593"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["account"]["type"]}</arg>
<arg>${debtor_account_type}</arg>
</arguments>
<status status="PASS" starttime="20210324 11:38:29.594" endtime="20210324 11:38:29.596"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["creditor"]["national_registration"]}</arg>
<arg>${creditor_national_registration}</arg>
</arguments>
<status status="PASS" starttime="20210324 11:38:29.597" endtime="20210324 11:38:29.599"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["creditor"]["name"]}</arg>
<arg>${creditor_name}</arg>
</arguments>
<status status="PASS" starttime="20210324 11:38:29.600" endtime="20210324 11:38:29.601"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["creditor"]["type"]}</arg>
<arg>${creditor_type}</arg>
</arguments>
<status status="PASS" starttime="20210324 11:38:29.602" endtime="20210324 11:38:29.604"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["creditor"]["account"]["psp"]["code"]}</arg>
<arg>${creditor_account_psp_code}</arg>
</arguments>
<status status="PASS" starttime="20210324 11:38:29.605" endtime="20210324 11:38:29.606"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["creditor"]["account"]["number"]}</arg>
<arg>${creditor_account_number}</arg>
</arguments>
<status status="PASS" starttime="20210324 11:38:29.607" endtime="20210324 11:38:29.609"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["creditor"]["account"]["routing_number"]}</arg>
<arg>${creditor_account_routing_number}</arg>
</arguments>
<status status="PASS" starttime="20210324 11:38:29.610" endtime="20210324 11:38:29.613"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["creditor"]["account"]["type"]}</arg>
<arg>${creditor_account_type}</arg>
</arguments>
<status status="PASS" starttime="20210324 11:38:29.614" endtime="20210324 11:38:29.615"></status>
</kw>
<status status="PASS" starttime="20210324 11:38:29.532" endtime="20210324 11:38:29.616"></status>
</kw>
<kw name="confirmar pagamento pix admin" library="pix_admin_confirm_payment">
<arguments>
<arg>${end_to_end_id}</arg>
</arguments>
<kw name="conectar pix-payments" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-payments</arg>
<arg>url=${pix_payments_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210324 11:38:29.624" level="INFO">Creating Session using : alias=pix-payments, url=https://banking-pix-payments-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210324 11:38:29.622" endtime="20210324 11:38:29.625"></status>
</kw>
<status status="PASS" starttime="20210324 11:38:29.620" endtime="20210324 11:38:29.625"></status>
</kw>
<kw name="Random Number" library="FakerLibrary">
<doc>Returns a random number with 1 digit (default, when digits==None),
a random number with 0 to given number of digits, or a random number
with given number to given number of digits (when ``fix_len==True``).</doc>
<arguments>
<arg>digits=23</arg>
<arg>fix_len=True</arg>
</arguments>
<assign>
<var>${random_number}</var>
</assign>
<msg timestamp="20210324 11:38:29.628" level="INFO">${random_number} = 48728604609251627987096</msg>
<status status="PASS" starttime="20210324 11:38:29.626" endtime="20210324 11:38:29.628"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>M19468242${random_number}</arg>
</arguments>
<assign>
<var>${message_id}</var>
</assign>
<msg timestamp="20210324 11:38:29.630" level="INFO">${message_id} = M1946824248728604609251627987096</msg>
<status status="PASS" starttime="20210324 11:38:29.629" endtime="20210324 11:38:29.630"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${message_id}</arg>
</arguments>
<msg timestamp="20210324 11:38:29.632" level="INFO">M1946824248728604609251627987096</msg>
<status status="PASS" starttime="20210324 11:38:29.631" endtime="20210324 11:38:29.632"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210324 11:38:29.635" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210324 11:38:29.633" endtime="20210324 11:38:29.635"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"instruction_id": "${end_to_end_id}",</arg>
<arg>"message_id": "${message_id}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210324 11:38:29.637" level="INFO">${body} = { "instruction_id": "E19468242202103241438848b82c8388", "message_id": "M1946824248728604609251627987096" }</msg>
<status status="PASS" starttime="20210324 11:38:29.636" endtime="20210324 11:38:29.638"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-payments</arg>
<arg>/admin/internal_operation/pix/${end_to_end_id}/confirmation</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210324 11:38:29.640" level="INFO">POST Request using : uri=/admin/internal_operation/pix/E19468242202103241438848b82c8388/confirmation, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "instruction_id": "E19468242202103241438848b82c8388", "message_id": "M1946824248728604609251627987096" } 
json=None</msg>
<msg timestamp="20210324 11:38:30.435" level="INFO">${response} = &lt;Response [204]&gt;</msg>
<status status="PASS" starttime="20210324 11:38:29.639" endtime="20210324 11:38:30.435"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210324 11:38:30.437" level="INFO">5dc460e8a3192046</msg>
<status status="PASS" starttime="20210324 11:38:30.436" endtime="20210324 11:38:30.438"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210324 11:38:30.440" level="INFO">204</msg>
<status status="PASS" starttime="20210324 11:38:30.439" endtime="20210324 11:38:30.440"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210324 11:38:30.442" level="INFO">${response} = &lt;Response [204]&gt;</msg>
<status status="PASS" starttime="20210324 11:38:30.441" endtime="20210324 11:38:30.443"></status>
</kw>
<status status="PASS" starttime="20210324 11:38:29.618" endtime="20210324 11:38:30.443"></status>
</kw>
<kw name="${index} IN RANGE [ 60 ]" type="for">
<kw name="${index} = 0" type="foritem">
<kw name="buscar pagamento pix" library="pix_payments_get_pix_payment">
<arguments>
<arg>holder_external_key=${holder_external_key}</arg>
<arg>account_external_key=${account_external_key}</arg>
<arg>entry_external_key=${entry_external_key}</arg>
<arg>payment_external_key=${payment_external_key}</arg>
</arguments>
<kw name="conectar pix-payments" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-payments</arg>
<arg>url=${pix_payments_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210324 11:38:30.451" level="INFO">Creating Session using : alias=pix-payments, url=https://banking-pix-payments-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210324 11:38:30.450" endtime="20210324 11:38:30.453"></status>
</kw>
<status status="PASS" starttime="20210324 11:38:30.449" endtime="20210324 11:38:30.453"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-payments</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/pix/holders/${holder_external_key}/accounts/${account_external_key}/payments/${payment_external_key}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210324 11:38:30.455" level="INFO">GET Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/pix/holders/824cf99eccc343fe880f4e8b10416693/accounts/0d81d82927054a0ca89f28670ff3879c/payments/310ab77f8cfe4fa29422e54cfc221d18, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210324 11:38:31.169" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210324 11:38:30.454" endtime="20210324 11:38:31.170"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210324 11:38:31.172" level="INFO">{'id': '310ab77f8cfe4fa29422e54cfc221d18', 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'status': 'succeeded', 'end_to_end_id': 'E19468242202103241438848b82c8388', 'message_id': 'M19468242912525abb3e4b548d5b2b99', 'amount': 290, 'created_at': '2021-03-24T11:38:27.282606', 'description': 'Envio de PIX', 'debtor': {'national_registration': '06397814203', 'name': 'Holder de teste', 'type': 'individual', 'holder_id': '824cf99eccc343fe880f4e8b10416693', 'account': {'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}, 'digital_account_id': '0d81d82927054a0ca89f28670ff3879c', 'number': '6400496994', 'routing_number': '0001', 'type': 'cacc'}}, 'creditor': {'national_registration': '42808422644', 'name': 'Massa iti PF NauNNMO', 'type': 'individual', 'account': {'psp': {'code': '17192451'}, 'number': '0243882974', 'routing_number': '0500', 'type': 'cacc'}}, 'refunded_amount': 0}</msg>
<status status="PASS" starttime="20210324 11:38:31.171" endtime="20210324 11:38:31.172"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210324 11:38:31.174" level="INFO">e07fd3dccf82ff32</msg>
<status status="PASS" starttime="20210324 11:38:31.173" endtime="20210324 11:38:31.175"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210324 11:38:31.176" level="INFO">200</msg>
<status status="PASS" starttime="20210324 11:38:31.175" endtime="20210324 11:38:31.177"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210324 11:38:31.178" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210324 11:38:31.177" endtime="20210324 11:38:31.179"></status>
</kw>
<status status="PASS" starttime="20210324 11:38:30.446" endtime="20210324 11:38:31.179"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${response.json()["status"]}' == 'succeeded'</arg>
</arguments>
<msg timestamp="20210324 11:38:31.181" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20210324 11:38:31.180" endtime="20210324 11:38:31.182"></status>
</kw>
<status status="PASS" starttime="20210324 11:38:30.445" endtime="20210324 11:38:31.182"></status>
</kw>
<status status="PASS" starttime="20210324 11:38:30.445" endtime="20210324 11:38:31.183"></status>
</kw>
<kw name="validar pagamento pix" library="asserts">
<arguments>
<arg>marketplace_external_key=${marketplace_external_key}</arg>
<arg>status_pix_payments=succeeded</arg>
<arg>amount=${amount}</arg>
<arg>pix_description=${pix_description}</arg>
<arg>debitor_national_registration=${national_registration}</arg>
<arg>debitor_name=${holder_name}</arg>
<arg>debitor_type=${holder_type}</arg>
<arg>debitor_holder_id=${holder_external_key}</arg>
<arg>debtor_account_psp_code=${debtor_account_psp_code}</arg>
<arg>debtor_account_psp_name=${debtor_account_psp_name}</arg>
<arg>debtor_digital_account=${account_external_key}</arg>
<arg>debtor_account_number=${account_number}</arg>
<arg>debtor_account_routing_number=${account_routing_number}</arg>
<arg>debtor_account_type=${debtor_account_type}</arg>
<arg>creditor_national_registration=${creditor_national_registration}</arg>
<arg>creditor_name=${creditor_name}</arg>
<arg>creditor_type=individual</arg>
<arg>creditor_account_psp_code=${creditor_psp}</arg>
<arg>creditor_account_number=${creditor_account_number}</arg>
<arg>creditor_account_routing_number=${creditor_routing_number}</arg>
<arg>creditor_account_type=${creditor_account_type}</arg>
<arg>refunded_amount=0</arg>
</arguments>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<arguments>
<arg>result_format=datetime</arg>
</arguments>
<assign>
<var>${date}</var>
</assign>
<msg timestamp="20210324 11:38:31.194" level="INFO">${date} = 2021-03-24 11:38:31.192733</msg>
<status status="PASS" starttime="20210324 11:38:31.193" endtime="20210324 11:38:31.194"></status>
</kw>
<kw name="Convert Date" library="DateTime">
<doc>Converts between supported `date formats`.</doc>
<arguments>
<arg>${date}</arg>
<arg>exclude_millis=yes</arg>
<arg>result_format=%Y-%m-%d</arg>
<arg>date_format=%d-%m-%Y</arg>
</arguments>
<assign>
<var>${date}</var>
</assign>
<msg timestamp="20210324 11:38:31.196" level="INFO">${date} = 2021-03-24</msg>
<status status="PASS" starttime="20210324 11:38:31.195" endtime="20210324 11:38:31.196"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["marketplace_id"]}</arg>
<arg>${marketplace_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210324 11:38:31.197" endtime="20210324 11:38:31.198"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["status"]}</arg>
<arg>${status_pix_payments}</arg>
</arguments>
<status status="PASS" starttime="20210324 11:38:31.199" endtime="20210324 11:38:31.200"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response.json()["end_to_end_id"]}</arg>
<arg>E19468242</arg>
</arguments>
<status status="PASS" starttime="20210324 11:38:31.201" endtime="20210324 11:38:31.203"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.json()["status"]}' == 'peding'</arg>
<arg>Should Contain</arg>
<arg>${response.json()["message_id"]}</arg>
<arg>M19468242</arg>
<arg>ELSE IF</arg>
<arg>'${response.json()["status"]}' == 'executed'</arg>
<arg>Should Contain</arg>
<arg>${response.json()["message_id"]}</arg>
<arg>M19468242</arg>
<arg>ELSE IF</arg>
<arg>'${response.json()["status"]}' == 'succeeded'</arg>
<arg>Should Contain</arg>
<arg>${response.json()["message_id"]}</arg>
<arg>M19468242</arg>
<arg>ELSE IF</arg>
<arg>'${response.json()["status"]}' == 'canceled'</arg>
<arg>Should Not Contain Any</arg>
<arg>${response.json()}</arg>
<arg>message_id</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response.json()["message_id"]}</arg>
<arg>M19468242</arg>
</arguments>
<status status="PASS" starttime="20210324 11:38:31.208" endtime="20210324 11:38:31.209"></status>
</kw>
<status status="PASS" starttime="20210324 11:38:31.204" endtime="20210324 11:38:31.209"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.json()["amount"]}</arg>
<arg>${amount}</arg>
</arguments>
<msg timestamp="20210324 11:38:31.212" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210324 11:38:31.210" endtime="20210324 11:38:31.212"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["description"]}</arg>
<arg>${pix_description}</arg>
</arguments>
<status status="PASS" starttime="20210324 11:38:31.213" endtime="20210324 11:38:31.215"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["national_registration"]}</arg>
<arg>${debitor_national_registration}</arg>
</arguments>
<status status="PASS" starttime="20210324 11:38:31.216" endtime="20210324 11:38:31.217"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["name"]}</arg>
<arg>${debitor_name}</arg>
</arguments>
<status status="PASS" starttime="20210324 11:38:31.218" endtime="20210324 11:38:31.219"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["type"]}</arg>
<arg>${debitor_type}</arg>
</arguments>
<status status="PASS" starttime="20210324 11:38:31.220" endtime="20210324 11:38:31.222"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["holder_id"]}</arg>
<arg>${debitor_holder_id}</arg>
</arguments>
<status status="PASS" starttime="20210324 11:38:31.223" endtime="20210324 11:38:31.224"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["account"]["psp"]["code"]}</arg>
<arg>${debtor_account_psp_code}</arg>
</arguments>
<status status="PASS" starttime="20210324 11:38:31.225" endtime="20210324 11:38:31.227"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["account"]["psp"]["name"]}</arg>
<arg>${debtor_account_psp_name}</arg>
</arguments>
<status status="PASS" starttime="20210324 11:38:31.228" endtime="20210324 11:38:31.230"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["account"]["digital_account_id"]}</arg>
<arg>${debtor_digital_account}</arg>
</arguments>
<status status="PASS" starttime="20210324 11:38:31.231" endtime="20210324 11:38:31.233"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["account"]["number"]}</arg>
<arg>${account_number}</arg>
</arguments>
<status status="PASS" starttime="20210324 11:38:31.234" endtime="20210324 11:38:31.237"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["account"]["routing_number"]}</arg>
<arg>0${debtor_account_routing_number}</arg>
</arguments>
<status status="PASS" starttime="20210324 11:38:31.238" endtime="20210324 11:38:31.240"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["account"]["type"]}</arg>
<arg>${debtor_account_type}</arg>
</arguments>
<status status="PASS" starttime="20210324 11:38:31.241" endtime="20210324 11:38:31.242"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["creditor"]["national_registration"]}</arg>
<arg>${creditor_national_registration}</arg>
</arguments>
<status status="PASS" starttime="20210324 11:38:31.243" endtime="20210324 11:38:31.245"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["creditor"]["name"]}</arg>
<arg>${creditor_name}</arg>
</arguments>
<status status="PASS" starttime="20210324 11:38:31.245" endtime="20210324 11:38:31.247"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["creditor"]["type"]}</arg>
<arg>${creditor_type}</arg>
</arguments>
<status status="PASS" starttime="20210324 11:38:31.248" endtime="20210324 11:38:31.251"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["creditor"]["account"]["psp"]["code"]}</arg>
<arg>${creditor_account_psp_code}</arg>
</arguments>
<status status="PASS" starttime="20210324 11:38:31.252" endtime="20210324 11:38:31.255"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["creditor"]["account"]["number"]}</arg>
<arg>${creditor_account_number}</arg>
</arguments>
<status status="PASS" starttime="20210324 11:38:31.256" endtime="20210324 11:38:31.258"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["creditor"]["account"]["routing_number"]}</arg>
<arg>${creditor_account_routing_number}</arg>
</arguments>
<status status="PASS" starttime="20210324 11:38:31.259" endtime="20210324 11:38:31.260"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["creditor"]["account"]["type"]}</arg>
<arg>${creditor_account_type}</arg>
</arguments>
<status status="PASS" starttime="20210324 11:38:31.261" endtime="20210324 11:38:31.263"></status>
</kw>
<status status="PASS" starttime="20210324 11:38:31.188" endtime="20210324 11:38:31.263"></status>
</kw>
<kw name="buscar account balance" library="account_get_balance">
<arguments>
<arg>marketplace_external_key=${marketplace_external_key}</arg>
<arg>account_external_key=${account_external_key}</arg>
</arguments>
<kw name="conectar accounts" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accounts</arg>
<arg>url=${account_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210324 11:38:31.269" level="INFO">Creating Session using : alias=accounts, url=https://banking-accounts-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210324 11:38:31.268" endtime="20210324 11:38:31.271"></status>
</kw>
<status status="PASS" starttime="20210324 11:38:31.267" endtime="20210324 11:38:31.271"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accounts</arg>
<arg>/marketplaces/${marketplace_external_key}/accounts/${account_external_key}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210324 11:38:31.273" level="INFO">GET Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/accounts/0d81d82927054a0ca89f28670ff3879c, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210324 11:38:31.987" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210324 11:38:31.272" endtime="20210324 11:38:31.988"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210324 11:38:31.990" level="INFO">{'id': '0d81d82927054a0ca89f28670ff3879c', 'holder': '824cf99eccc343fe880f4e8b10416693', 'balance': '8999997.10', 'currency': 'BRL', 'routing_number': '001', 'number': '6400496994', 'status': 'active', 'metadata': {}, 'created_at': '2021-03-24T14:38:20.801453', 'updated_at': '2021-03-24T14:38:28.210294', 'primary': True, 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'uri': '/v2/marketplaces/f71a8951368a4cc085cf7875ff44e61c/accounts/0d81d82927054a0ca89f28670ff3879c', 'resource': 'payment_account'}</msg>
<status status="PASS" starttime="20210324 11:38:31.989" endtime="20210324 11:38:31.990"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210324 11:38:31.992" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210324 11:38:31.991" endtime="20210324 11:38:31.993"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["balance"]}</arg>
</arguments>
<assign>
<var>${account_balance}</var>
</assign>
<msg timestamp="20210324 11:38:31.995" level="INFO">${account_balance} = 8999997.10</msg>
<status status="PASS" starttime="20210324 11:38:31.993" endtime="20210324 11:38:31.996"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_balance}</arg>
</arguments>
<msg timestamp="20210324 11:38:31.998" level="INFO">${account_balance} = 8999997.10</msg>
<status status="PASS" starttime="20210324 11:38:31.997" endtime="20210324 11:38:31.998"></status>
</kw>
<status status="PASS" starttime="20210324 11:38:31.265" endtime="20210324 11:38:31.998"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${account_balance}</arg>
</arguments>
<assign>
<var>${account_balance_final}</var>
</assign>
<msg timestamp="20210324 11:38:32.002" level="INFO">${account_balance_final} = 8999997.10</msg>
<status status="PASS" starttime="20210324 11:38:32.001" endtime="20210324 11:38:32.002"></status>
</kw>
<kw name="validar debito na account" library="asserts">
<arguments>
<arg>account_balance_initial=${account_balance_initial}</arg>
<arg>account_balance_final=${account_balance_final}</arg>
<arg>amount=${amount}</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${account_balance_initial} - (${amount}/100)</arg>
</arguments>
<assign>
<var>${account_balance_actual}</var>
</assign>
<msg timestamp="20210324 11:38:32.009" level="INFO">${account_balance_actual} = 8999997.1</msg>
<status status="PASS" starttime="20210324 11:38:32.008" endtime="20210324 11:38:32.009"></status>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${account_balance_final}</arg>
</arguments>
<assign>
<var>${account_balance_final}</var>
</assign>
<msg timestamp="20210324 11:38:32.012" level="INFO">${account_balance_final} = 8999997.1</msg>
<status status="PASS" starttime="20210324 11:38:32.010" endtime="20210324 11:38:32.012"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${account_balance_final}</arg>
<arg>${account_balance_actual}</arg>
</arguments>
<status status="PASS" starttime="20210324 11:38:32.013" endtime="20210324 11:38:32.014"></status>
</kw>
<status status="PASS" starttime="20210324 11:38:32.005" endtime="20210324 11:38:32.015"></status>
</kw>
<doc>Envio de PIX com sucesso para uma conta Iti, a partir de um Holder Business</doc>
<tags>
<tag>smoke_test</tag>
</tags>
<status status="PASS" starttime="20210324 11:38:18.285" endtime="20210324 11:38:32.017" critical="yes"></status>
</test>
<doc>Funcionalidade: Confirmar Chave de Endereçamento
Eu, como um Holder, portador de uma conta ativa em Banking
Desejo confirmar o pagamento de um envio de PIX</doc>
<status status="PASS" starttime="20210324 11:38:18.090" endtime="20210324 11:38:32.025"></status>
</suite>
<suite id="s1-s1-s3" name="Criar Pagamento PIX" source="C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\tests\pix-payments\envio\Criar Pagamento PIX.robot">
<test id="s1-s1-s3-t1" name="Cenário: Criar pagamento PIX de para holder individual utilizando dados completos da conta de destino">
<kw name="criar chave pix ativa" library="pix_dict_create_active_key_pix">
<arguments>
<arg>holder_type=individual</arg>
<arg>pix_type=email</arg>
</arguments>
<kw name="Random Number" library="FakerLibrary">
<doc>Returns a random number with 1 digit (default, when digits==None),
a random number with 0 to given number of digits, or a random number
with given number to given number of digits (when ``fix_len==True``).</doc>
<arguments>
<arg>digits=8</arg>
<arg>fix_len=True</arg>
</arguments>
<assign>
<var>${phone}</var>
</assign>
<msg timestamp="20210324 11:38:32.218" level="INFO">${phone} = 48132803</msg>
<status status="PASS" starttime="20210324 11:38:32.218" endtime="20210324 11:38:32.218"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>+55219${phone}</arg>
</arguments>
<assign>
<var>${phone_pix}</var>
</assign>
<msg timestamp="20210324 11:38:32.219" level="INFO">${phone_pix} = +5521948132803</msg>
<status status="PASS" starttime="20210324 11:38:32.219" endtime="20210324 11:38:32.219"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${phone_pix}</arg>
</arguments>
<msg timestamp="20210324 11:38:32.220" level="INFO">${phone_pix} = +5521948132803</msg>
<status status="PASS" starttime="20210324 11:38:32.219" endtime="20210324 11:38:32.220"></status>
</kw>
<kw name="Email" library="FakerLibrary">
<assign>
<var>${email_pix}</var>
</assign>
<msg timestamp="20210324 11:38:32.221" level="INFO">${email_pix} = da-rosaisis@caldeira.br</msg>
<status status="PASS" starttime="20210324 11:38:32.220" endtime="20210324 11:38:32.221"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${email_pix}</arg>
</arguments>
<msg timestamp="20210324 11:38:32.221" level="INFO">${email_pix} = da-rosaisis@caldeira.br</msg>
<status status="PASS" starttime="20210324 11:38:32.221" endtime="20210324 11:38:32.221"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${holder_type}' == 'business'</arg>
<arg>criar holder business ativo</arg>
<arg>ELSE IF</arg>
<arg>'${holder_type}' == 'individual'</arg>
<arg>criar holder individual ativo</arg>
</arguments>
<kw name="criar holder individual ativo" library="accreditation_create_holder_active">
<kw name="conectar accreditation" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accreditation</arg>
<arg>url=${accreditation_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210324 11:38:32.224" level="INFO">Creating Session using : alias=accreditation, url=https://banking-accreditation-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210324 11:38:32.223" endtime="20210324 11:38:32.224"></status>
</kw>
<status status="PASS" starttime="20210324 11:38:32.223" endtime="20210324 11:38:32.224"></status>
</kw>
<kw name="Cpf" library="FakerLibrary">
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210324 11:38:32.225" level="INFO">${national_registration} = 825.304.167-53</msg>
<status status="PASS" starttime="20210324 11:38:32.224" endtime="20210324 11:38:32.225"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${national_registration}</arg>
<arg>.</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210324 11:38:32.226" level="INFO">${national_registration} = 825304167-53</msg>
<status status="PASS" starttime="20210324 11:38:32.225" endtime="20210324 11:38:32.226"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${national_registration}</arg>
<arg>-</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210324 11:38:32.226" level="INFO">${national_registration} = 82530416753</msg>
<status status="PASS" starttime="20210324 11:38:32.226" endtime="20210324 11:38:32.226"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${national_registration}</arg>
</arguments>
<msg timestamp="20210324 11:38:32.227" level="INFO">${national_registration} = 82530416753</msg>
<status status="PASS" starttime="20210324 11:38:32.227" endtime="20210324 11:38:32.227"></status>
</kw>
<kw name="Rg" library="FakerLibrary">
<doc>Brazilian RG, return plain numbers.
Check:  https://www.ngmatematica.com/2014/02/como-determinar-o-digito-verificador-do.html</doc>
<assign>
<var>${identity_card}</var>
</assign>
<msg timestamp="20210324 11:38:32.229" level="INFO">${identity_card} = 612854073</msg>
<status status="PASS" starttime="20210324 11:38:32.228" endtime="20210324 11:38:32.229"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${identity_card}</arg>
</arguments>
<msg timestamp="20210324 11:38:32.230" level="INFO">${identity_card} = 612854073</msg>
<status status="PASS" starttime="20210324 11:38:32.229" endtime="20210324 11:38:32.230"></status>
</kw>
<kw name="criar holder individual" library="accreditation_post_holder_individual">
<arguments>
<arg>holder_type=individual</arg>
<arg>holder_name=${holder_name}</arg>
<arg>email=${email}</arg>
<arg>national_registration=${national_registration}</arg>
<arg>revenue=${revenue}</arg>
<arg>birthday=${birthday}</arg>
<arg>mothers_name=${mothers_name}</arg>
<arg>identity_card=${identity_card}</arg>
<arg>pep=false</arg>
<arg>cbo=${cbo}</arg>
</arguments>
<kw name="conectar accreditation" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accreditation</arg>
<arg>url=${accreditation_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210324 11:38:32.232" level="INFO">Creating Session using : alias=accreditation, url=https://banking-accreditation-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210324 11:38:32.232" endtime="20210324 11:38:32.233"></status>
</kw>
<status status="PASS" starttime="20210324 11:38:32.231" endtime="20210324 11:38:32.233"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_type}</arg>
</arguments>
<msg timestamp="20210324 11:38:32.233" level="INFO">${holder_type} = individual</msg>
<status status="PASS" starttime="20210324 11:38:32.233" endtime="20210324 11:38:32.234"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_name}</arg>
</arguments>
<msg timestamp="20210324 11:38:32.235" level="INFO">${holder_name} = Holder de teste</msg>
<status status="PASS" starttime="20210324 11:38:32.234" endtime="20210324 11:38:32.235"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210324 11:38:32.235" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210324 11:38:32.235" endtime="20210324 11:38:32.235"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "${holder_type}",</arg>
<arg>"name": "${holder_name}",</arg>
<arg>"email": "${email}",</arg>
<arg>"national_registration": "${national_registration}",</arg>
<arg>"revenue": ${revenue},</arg>
<arg>"birthday": "${birthday}",</arg>
<arg>"mothers_name": "${mothers_name}",</arg>
<arg>"identity_card": "${identity_card}",</arg>
<arg>"pep": false,</arg>
<arg>"cbo": ${cbo}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210324 11:38:32.236" level="INFO">${body} = { "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "82530416753", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder",...</msg>
<status status="PASS" starttime="20210324 11:38:32.235" endtime="20210324 11:38:32.236"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210324 11:38:32.237" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "82530416753", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder", "identity_card": "612854073", "pep": false, "cbo": 821450 } 
json=None</msg>
<msg timestamp="20210324 11:38:33.006" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210324 11:38:32.236" endtime="20210324 11:38:33.007"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210324 11:38:33.009" level="INFO">{'id': '23cd809e339c4af082c467eaa5f3c6af', 'name': 'Holder de teste', 'revenue': 5500.0, 'email': 'teste@teste.com.br', 'status': 'waiting_info_and_documents', 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'marketplace_name': 'Marketplace de Teste', 'created_at': '2021-03-24T11:38:32.610185', 'updated_at': '2021-03-24T11:38:32.610187', 'type': 'individual', 'national_registration': '82530416753', 'birthday': '1988-04-23', 'mothers_name': 'Mãe do Holder', 'identity_card': '612854073', 'pep': False, 'cbo': '821450', '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/23cd809e339c4af082c467eaa5f3c6af', 'type': 'GET'}, 'phones': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/23cd809e339c4af082c467eaa5f3c6af/phones', 'type': 'GET'}, 'addresses': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/23cd809e339c4af082c467eaa5f3c6af/addresses', 'type': 'GET'}, 'documents': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/23cd809e339c4af082c467eaa5f3c6af/documents', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210324 11:38:33.008" endtime="20210324 11:38:33.009"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210324 11:38:33.011" level="INFO">ff50ec844bdcdb3e</msg>
<status status="PASS" starttime="20210324 11:38:33.010" endtime="20210324 11:38:33.012"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${body}</arg>
</arguments>
<msg timestamp="20210324 11:38:33.013" level="INFO">{ "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "82530416753", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder", "identity_card": "612854073", "pep": false, "cbo": 821450 }</msg>
<status status="PASS" starttime="20210324 11:38:33.013" endtime="20210324 11:38:33.014"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210324 11:38:33.016" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210324 11:38:33.015" endtime="20210324 11:38:33.016"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${holder_external_key}</var>
</assign>
<msg timestamp="20210324 11:38:33.019" level="INFO">${holder_external_key} = 23cd809e339c4af082c467eaa5f3c6af</msg>
<status status="PASS" starttime="20210324 11:38:33.017" endtime="20210324 11:38:33.019"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_external_key}</arg>
</arguments>
<msg timestamp="20210324 11:38:33.021" level="INFO">${holder_external_key} = 23cd809e339c4af082c467eaa5f3c6af</msg>
<status status="PASS" starttime="20210324 11:38:33.020" endtime="20210324 11:38:33.021"></status>
</kw>
<status status="PASS" starttime="20210324 11:38:32.230" endtime="20210324 11:38:33.022"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_name}</arg>
</arguments>
<msg timestamp="20210324 11:38:33.024" level="INFO">${holder_name} = Holder de teste</msg>
<status status="PASS" starttime="20210324 11:38:33.023" endtime="20210324 11:38:33.024"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210324 11:38:33.026" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210324 11:38:33.025" endtime="20210324 11:38:33.027"></status>
</kw>
<kw name="criar holder phone" library="accreditation_post_holder_phone">
<arguments>
<arg>21</arg>
<arg>51</arg>
<arg>996221236</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210324 11:38:33.030" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210324 11:38:33.029" endtime="20210324 11:38:33.030"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"area_code": "${phone_area_code}",</arg>
<arg>"country_code": "${phone_country_code}",</arg>
<arg>"number": "${phone_number}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210324 11:38:33.033" level="INFO">${body} = { "area_code": "21", "country_code": "51", "number": "996221236" }</msg>
<status status="PASS" starttime="20210324 11:38:33.031" endtime="20210324 11:38:33.033"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/phones</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210324 11:38:33.035" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/23cd809e339c4af082c467eaa5f3c6af/phones, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "area_code": "21", "country_code": "51", "number": "996221236" } 
json=None</msg>
<msg timestamp="20210324 11:38:33.299" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210324 11:38:33.034" endtime="20210324 11:38:33.299"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210324 11:38:33.301" level="INFO">{'id': 'ff5e220ac64d480e953e868bc416e9dd', 'area_code': '21', 'country_code': '51', 'number': '996221236', 'main': True, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/23cd809e339c4af082c467eaa5f3c6af/phones/ff5e220ac64d480e953e868bc416e9dd', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/23cd809e339c4af082c467eaa5f3c6af', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210324 11:38:33.300" endtime="20210324 11:38:33.302"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210324 11:38:33.303" level="INFO">3d5d30ca050173ca</msg>
<status status="PASS" starttime="20210324 11:38:33.302" endtime="20210324 11:38:33.303"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210324 11:38:33.305" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210324 11:38:33.304" endtime="20210324 11:38:33.305"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${phone_external_key}</var>
</assign>
<msg timestamp="20210324 11:38:33.308" level="INFO">${phone_external_key} = ff5e220ac64d480e953e868bc416e9dd</msg>
<status status="PASS" starttime="20210324 11:38:33.306" endtime="20210324 11:38:33.308"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${phone_external_key}</arg>
</arguments>
<msg timestamp="20210324 11:38:33.310" level="INFO">${phone_external_key} = ff5e220ac64d480e953e868bc416e9dd</msg>
<status status="PASS" starttime="20210324 11:38:33.309" endtime="20210324 11:38:33.311"></status>
</kw>
<status status="PASS" starttime="20210324 11:38:33.028" endtime="20210324 11:38:33.313"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210324 11:38:33.315" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210324 11:38:33.313" endtime="20210324 11:38:33.316"></status>
</kw>
<kw name="criar holder address" library="accreditation_post_holder_address">
<arguments>
<arg>Rio de Janeiro</arg>
<arg>Rio de Janeiro</arg>
<arg>Brasil</arg>
<arg>Bairro de Testes</arg>
<arg>Rua de Testes</arg>
<arg>90</arg>
<arg>apto 200</arg>
<arg>21550987</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210324 11:38:33.320" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210324 11:38:33.319" endtime="20210324 11:38:33.320"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"city": "${city}",</arg>
<arg>"state": "${state}",</arg>
<arg>"country": "${country}",</arg>
<arg>"neighborhood": "${neighborhood}",</arg>
<arg>"street": "${street}",</arg>
<arg>"number": "${number}",</arg>
<arg>"complement": "${complement}",</arg>
<arg>"postal_code": "${postal_code}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210324 11:38:33.323" level="INFO">${body} = { "city": "Rio de Janeiro", "state": "Rio de Janeiro", "country": "Brasil", "neighborhood": "Bairro de Testes", "street": "Rua de Testes", "number": "90", "complement": "apto 200", "postal_code": "215...</msg>
<status status="PASS" starttime="20210324 11:38:33.321" endtime="20210324 11:38:33.323"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/addresses</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210324 11:38:33.326" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/23cd809e339c4af082c467eaa5f3c6af/addresses, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "city": "Rio de Janeiro", "state": "Rio de Janeiro", "country": "Brasil", "neighborhood": "Bairro de Testes", "street": "Rua de Testes", "number": "90", "complement": "apto 200", "postal_code": "21550987" } 
json=None</msg>
<msg timestamp="20210324 11:38:33.560" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210324 11:38:33.324" endtime="20210324 11:38:33.561"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210324 11:38:33.564" level="INFO">{'id': '35fd71dfc91e461ab93b35c071c0292b', 'street': 'Rua de Testes', 'number': '90', 'city': 'Rio de Janeiro', 'complement': 'apto 200', 'state': 'Rio de Janeiro', 'neighborhood': 'Bairro de Testes', 'postal_code': '21550987', 'country': 'Brasil', 'main': True, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/23cd809e339c4af082c467eaa5f3c6af/addresses/35fd71dfc91e461ab93b35c071c0292b', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/23cd809e339c4af082c467eaa5f3c6af', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210324 11:38:33.562" endtime="20210324 11:38:33.564"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210324 11:38:33.566" level="INFO">e6f8770eea564f9a</msg>
<status status="PASS" starttime="20210324 11:38:33.565" endtime="20210324 11:38:33.567"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210324 11:38:33.569" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210324 11:38:33.568" endtime="20210324 11:38:33.569"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${address_external_key}</var>
</assign>
<msg timestamp="20210324 11:38:33.573" level="INFO">${address_external_key} = 35fd71dfc91e461ab93b35c071c0292b</msg>
<status status="PASS" starttime="20210324 11:38:33.571" endtime="20210324 11:38:33.573"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${address_external_key}</arg>
</arguments>
<msg timestamp="20210324 11:38:33.575" level="INFO">${address_external_key} = 35fd71dfc91e461ab93b35c071c0292b</msg>
<status status="PASS" starttime="20210324 11:38:33.574" endtime="20210324 11:38:33.576"></status>
</kw>
<status status="PASS" starttime="20210324 11:38:33.317" endtime="20210324 11:38:33.576"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210324 11:38:33.578" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210324 11:38:33.577" endtime="20210324 11:38:33.579"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>SELFIE</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210324 11:38:33.582" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210324 11:38:33.581" endtime="20210324 11:38:33.582"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>C:\\Users\\vinicius.trindade\\banking_continuous_testing\\banking_continuous_testing\\apis\\accreditation\\documents\\holder_documents\\post.${/}..${/}..${/}..${/}..${/}..${/}images${/}accreditation${/}image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210324 11:38:33.585" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210324 11:38:33.590" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210324 11:38:33.583" endtime="20210324 11:38:33.590"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210324 11:38:33.593" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/23cd809e339c4af082c467eaa5f3c6af/documents?type=SELFIE, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210324 11:38:33.889" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210324 11:38:33.591" endtime="20210324 11:38:33.889"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210324 11:38:33.891" level="INFO">{'id': '018c7e48cfe5400ea202a56fc2880f06', 'document_type': 'selfie', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/23cd809e339c4af082c467eaa5f3c6af/documents/018c7e48cfe5400ea202a56fc2880f06', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/23cd809e339c4af082c467eaa5f3c6af', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/23cd809e339c4af082c467eaa5f3c6af/documents/018c7e48cfe5400ea202a56fc2880f06/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210324 11:38:33.890" endtime="20210324 11:38:33.891"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210324 11:38:33.893" level="INFO">9e13de0186820347</msg>
<status status="PASS" starttime="20210324 11:38:33.892" endtime="20210324 11:38:33.893"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210324 11:38:33.895" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210324 11:38:33.894" endtime="20210324 11:38:33.895"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210324 11:38:33.898" level="INFO">${document_external_key} = 018c7e48cfe5400ea202a56fc2880f06</msg>
<status status="PASS" starttime="20210324 11:38:33.896" endtime="20210324 11:38:33.898"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210324 11:38:33.900" level="INFO">${document_external_key} = 018c7e48cfe5400ea202a56fc2880f06</msg>
<status status="PASS" starttime="20210324 11:38:33.899" endtime="20210324 11:38:33.900"></status>
</kw>
<status status="PASS" starttime="20210324 11:38:33.579" endtime="20210324 11:38:33.901"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210324 11:38:33.903" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210324 11:38:33.902" endtime="20210324 11:38:33.903"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>RG_FRENTE</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210324 11:38:33.906" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210324 11:38:33.905" endtime="20210324 11:38:33.906"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>C:\\Users\\vinicius.trindade\\banking_continuous_testing\\banking_continuous_testing\\apis\\accreditation\\documents\\holder_documents\\post.${/}..${/}..${/}..${/}..${/}..${/}images${/}accreditation${/}image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210324 11:38:33.908" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210324 11:38:33.912" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210324 11:38:33.907" endtime="20210324 11:38:33.913"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210324 11:38:33.916" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/23cd809e339c4af082c467eaa5f3c6af/documents?type=RG_FRENTE, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210324 11:38:34.222" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210324 11:38:33.914" endtime="20210324 11:38:34.222"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210324 11:38:34.224" level="INFO">{'id': 'ed44bc0e82ca4cfa9a2f53bce24d15a9', 'document_type': 'rg_frente', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/23cd809e339c4af082c467eaa5f3c6af/documents/ed44bc0e82ca4cfa9a2f53bce24d15a9', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/23cd809e339c4af082c467eaa5f3c6af', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/23cd809e339c4af082c467eaa5f3c6af/documents/ed44bc0e82ca4cfa9a2f53bce24d15a9/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210324 11:38:34.223" endtime="20210324 11:38:34.225"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210324 11:38:34.227" level="INFO">7aa0e3e7e6517a31</msg>
<status status="PASS" starttime="20210324 11:38:34.226" endtime="20210324 11:38:34.227"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210324 11:38:34.230" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210324 11:38:34.229" endtime="20210324 11:38:34.230"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210324 11:38:34.233" level="INFO">${document_external_key} = ed44bc0e82ca4cfa9a2f53bce24d15a9</msg>
<status status="PASS" starttime="20210324 11:38:34.232" endtime="20210324 11:38:34.233"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210324 11:38:34.236" level="INFO">${document_external_key} = ed44bc0e82ca4cfa9a2f53bce24d15a9</msg>
<status status="PASS" starttime="20210324 11:38:34.234" endtime="20210324 11:38:34.236"></status>
</kw>
<status status="PASS" starttime="20210324 11:38:33.904" endtime="20210324 11:38:34.237"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210324 11:38:34.239" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210324 11:38:34.238" endtime="20210324 11:38:34.239"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>RG_VERSO</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210324 11:38:34.244" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210324 11:38:34.242" endtime="20210324 11:38:34.244"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>C:\\Users\\vinicius.trindade\\banking_continuous_testing\\banking_continuous_testing\\apis\\accreditation\\documents\\holder_documents\\post.${/}..${/}..${/}..${/}..${/}..${/}images${/}accreditation${/}image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210324 11:38:34.246" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210324 11:38:34.251" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210324 11:38:34.245" endtime="20210324 11:38:34.251"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210324 11:38:34.255" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/23cd809e339c4af082c467eaa5f3c6af/documents?type=RG_VERSO, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210324 11:38:34.514" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210324 11:38:34.252" endtime="20210324 11:38:34.514"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210324 11:38:34.516" level="INFO">{'id': 'f4cdc970cd57441abfed698fa91c570e', 'document_type': 'rg_verso', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/23cd809e339c4af082c467eaa5f3c6af/documents/f4cdc970cd57441abfed698fa91c570e', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/23cd809e339c4af082c467eaa5f3c6af', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/23cd809e339c4af082c467eaa5f3c6af/documents/f4cdc970cd57441abfed698fa91c570e/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210324 11:38:34.515" endtime="20210324 11:38:34.516"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210324 11:38:34.517" level="INFO">c2ac7376402120ab</msg>
<status status="PASS" starttime="20210324 11:38:34.516" endtime="20210324 11:38:34.517"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210324 11:38:34.518" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210324 11:38:34.517" endtime="20210324 11:38:34.518"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210324 11:38:34.520" level="INFO">${document_external_key} = f4cdc970cd57441abfed698fa91c570e</msg>
<status status="PASS" starttime="20210324 11:38:34.519" endtime="20210324 11:38:34.520"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210324 11:38:34.521" level="INFO">${document_external_key} = f4cdc970cd57441abfed698fa91c570e</msg>
<status status="PASS" starttime="20210324 11:38:34.521" endtime="20210324 11:38:34.521"></status>
</kw>
<status status="PASS" starttime="20210324 11:38:34.240" endtime="20210324 11:38:34.522"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210324 11:38:34.523" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210324 11:38:34.522" endtime="20210324 11:38:34.523"></status>
</kw>
<kw name="solicitar aprovação do holder" library="accreditation_request_approval">
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210324 11:38:34.525" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210324 11:38:34.524" endtime="20210324 11:38:34.525"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/approval</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210324 11:38:34.526" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/23cd809e339c4af082c467eaa5f3c6af/approval, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data=None 
json=None</msg>
<msg timestamp="20210324 11:38:34.806" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210324 11:38:34.525" endtime="20210324 11:38:34.806"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210324 11:38:34.808" level="INFO">{'message': 'Approval request accepted successfully. Processing analysis'}</msg>
<status status="PASS" starttime="20210324 11:38:34.807" endtime="20210324 11:38:34.808"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210324 11:38:34.809" level="INFO">7a70e286c71d048b</msg>
<status status="PASS" starttime="20210324 11:38:34.808" endtime="20210324 11:38:34.809"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210324 11:38:34.811" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210324 11:38:34.810" endtime="20210324 11:38:34.811"></status>
</kw>
<status status="PASS" starttime="20210324 11:38:34.523" endtime="20210324 11:38:34.812"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210324 11:38:34.813" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210324 11:38:34.812" endtime="20210324 11:38:34.813"></status>
</kw>
<kw name="recebendo notificação de aprovação" library="accreditation_risk_notification">
<kw name="Uuid 4" library="FakerLibrary">
<doc>Generates a random UUID4 string.
:param cast_to: Specify what type the UUID should be cast to. Default is `str`
:type cast_to: callable</doc>
<assign>
<var>${assessment_id}</var>
</assign>
<msg timestamp="20210324 11:38:34.816" level="INFO">${assessment_id} = 77e767ee-d84f-4c15-927f-23f5ec017af1</msg>
<status status="PASS" starttime="20210324 11:38:34.815" endtime="20210324 11:38:34.816"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>year</arg>
</arguments>
<assign>
<var>${year}</var>
</assign>
<msg timestamp="20210324 11:38:34.817" level="INFO">${year} = 2021</msg>
<status status="PASS" starttime="20210324 11:38:34.816" endtime="20210324 11:38:34.817"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>month</arg>
</arguments>
<assign>
<var>${month}</var>
</assign>
<msg timestamp="20210324 11:38:34.818" level="INFO">${month} = 03</msg>
<status status="PASS" starttime="20210324 11:38:34.818" endtime="20210324 11:38:34.819"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>day</arg>
</arguments>
<assign>
<var>${day}</var>
</assign>
<msg timestamp="20210324 11:38:34.822" level="INFO">${day} = 24</msg>
<status status="PASS" starttime="20210324 11:38:34.820" endtime="20210324 11:38:34.822"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210324 11:38:34.824" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210324 11:38:34.823" endtime="20210324 11:38:34.824"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "risk.assessment.result",</arg>
<arg>"resource": "business.holder",</arg>
<arg>"created_at": "${year}-${month}-${day} 15:28:56.747Z",</arg>
<arg>"marketplace_id": "${marketplace_external_key}",</arg>
<arg>"object": {</arg>
<arg>"result": "APPROVED",</arg>
<arg>"holder_id": "${holder_external_key}",</arg>
<arg>"applicant_id": "${application_external_key}",</arg>
<arg>"assessment_id": "${assessment_id}"</arg>
<arg>}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210324 11:38:34.827" level="INFO">${body} = { "type": "risk.assessment.result", "resource": "business.holder", "created_at": "2021-03-24 15:28:56.747Z", "marketplace_id": "f71a8951368a4cc085cf7875ff44e61c", "object": { "result": "APPROVED", "ho...</msg>
<status status="PASS" starttime="20210324 11:38:34.825" endtime="20210324 11:38:34.827"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/admin/internal_operation/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/registration/approval</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210324 11:38:34.830" level="INFO">POST Request using : uri=/admin/internal_operation/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/23cd809e339c4af082c467eaa5f3c6af/registration/approval, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "risk.assessment.result", "resource": "business.holder", "created_at": "2021-03-24 15:28:56.747Z", "marketplace_id": "f71a8951368a4cc085cf7875ff44e61c", "object": { "result": "APPROVED", "holder_id": "23cd809e339c4af082c467eaa5f3c6af", "applicant_id": "bcc25a6751c14b52af1340d40dba78c5", "assessment_id": "77e767ee-d84f-4c15-927f-23f5ec017af1" } } 
json=None</msg>
<msg timestamp="20210324 11:38:35.030" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210324 11:38:34.828" endtime="20210324 11:38:35.031"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210324 11:38:35.035" level="INFO">{'message': 'Holder approved successfully'}</msg>
<status status="PASS" starttime="20210324 11:38:35.032" endtime="20210324 11:38:35.035"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210324 11:38:35.037" level="INFO">1351115400ccd679</msg>
<status status="PASS" starttime="20210324 11:38:35.035" endtime="20210324 11:38:35.037"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210324 11:38:35.039" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210324 11:38:35.038" endtime="20210324 11:38:35.039"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210324 11:38:35.042" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210324 11:38:35.040" endtime="20210324 11:38:35.042"></status>
</kw>
<status status="PASS" starttime="20210324 11:38:34.814" endtime="20210324 11:38:35.042"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210324 11:38:35.045" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210324 11:38:35.043" endtime="20210324 11:38:35.045"></status>
</kw>
<kw name="buscar account por holder" library="accounts_get_accounts_by_holder">
<kw name="conectar accounts" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accounts</arg>
<arg>url=${account_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210324 11:38:35.050" level="INFO">Creating Session using : alias=accounts, url=https://banking-accounts-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210324 11:38:35.049" endtime="20210324 11:38:35.051"></status>
</kw>
<status status="PASS" starttime="20210324 11:38:35.047" endtime="20210324 11:38:35.052"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accounts</arg>
<arg>/marketplaces/${marketplace_external_key}/holders/${holder_external_key}/accounts</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210324 11:38:35.054" level="INFO">GET Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/holders/23cd809e339c4af082c467eaa5f3c6af/accounts, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210324 11:38:35.824" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210324 11:38:35.053" endtime="20210324 11:38:35.824"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210324 11:38:35.826" level="INFO">{'items': [{'id': 'a44e1ceedccc4ac6b6a46da0f4541922', 'holder': '23cd809e339c4af082c467eaa5f3c6af', 'balance': '0.00', 'currency': 'BRL', 'routing_number': '001', 'number': '779520798', 'status': 'active', 'metadata': {}, 'created_at': '2021-03-24T14:38:34.650124', 'updated_at': '2021-03-24T14:38:34.650124', 'primary': True, 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'uri': '/v2/marketplaces/f71a8951368a4cc085cf7875ff44e61c/accounts/a44e1ceedccc4ac6b6a46da0f4541922', 'resource': 'payment_account'}], 'has_more': False, 'limit': 100, 'total_pages': 1, 'page': 1, 'offset': 0, 'total': '1', 'query_count': '1'}</msg>
<status status="PASS" starttime="20210324 11:38:35.825" endtime="20210324 11:38:35.826"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210324 11:38:35.828" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210324 11:38:35.827" endtime="20210324 11:38:35.828"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["id"]}</arg>
</arguments>
<assign>
<var>${account_external_key}</var>
</assign>
<msg timestamp="20210324 11:38:35.831" level="INFO">${account_external_key} = a44e1ceedccc4ac6b6a46da0f4541922</msg>
<status status="PASS" starttime="20210324 11:38:35.829" endtime="20210324 11:38:35.831"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_external_key}</arg>
</arguments>
<msg timestamp="20210324 11:38:35.833" level="INFO">${account_external_key} = a44e1ceedccc4ac6b6a46da0f4541922</msg>
<status status="PASS" starttime="20210324 11:38:35.832" endtime="20210324 11:38:35.833"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["number"]}</arg>
</arguments>
<assign>
<var>${account_number}</var>
</assign>
<msg timestamp="20210324 11:38:35.836" level="INFO">${account_number} = 779520798</msg>
<status status="PASS" starttime="20210324 11:38:35.834" endtime="20210324 11:38:35.836"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_number}</arg>
</arguments>
<msg timestamp="20210324 11:38:35.838" level="INFO">${account_number} = 779520798</msg>
<status status="PASS" starttime="20210324 11:38:35.837" endtime="20210324 11:38:35.838"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["routing_number"]}</arg>
</arguments>
<assign>
<var>${account_routing_number}</var>
</assign>
<msg timestamp="20210324 11:38:35.841" level="INFO">${account_routing_number} = 001</msg>
<status status="PASS" starttime="20210324 11:38:35.839" endtime="20210324 11:38:35.841"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_routing_number}</arg>
</arguments>
<msg timestamp="20210324 11:38:35.843" level="INFO">${account_routing_number} = 001</msg>
<status status="PASS" starttime="20210324 11:38:35.842" endtime="20210324 11:38:35.843"></status>
</kw>
<status status="PASS" starttime="20210324 11:38:35.045" endtime="20210324 11:38:35.844"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210324 11:38:35.846" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210324 11:38:35.845" endtime="20210324 11:38:35.846"></status>
</kw>
<status status="PASS" starttime="20210324 11:38:32.222" endtime="20210324 11:38:35.846"></status>
</kw>
<status status="PASS" starttime="20210324 11:38:32.222" endtime="20210324 11:38:35.847"></status>
</kw>
<kw name="gerar saldo para account" library="account_generate_balance">
<arguments>
<arg>${account_external_key}</arg>
</arguments>
<kw name="Uuid 4" library="FakerLibrary">
<doc>Generates a random UUID4 string.
:param cast_to: Specify what type the UUID should be cast to. Default is `str`
:type cast_to: callable</doc>
<assign>
<var>${uuid}</var>
</assign>
<msg timestamp="20210324 11:38:35.850" level="INFO">${uuid} = d178b4e3-8167-4f55-98d9-d99efab9e34a</msg>
<status status="PASS" starttime="20210324 11:38:35.849" endtime="20210324 11:38:35.850"></status>
</kw>
<kw name="conectar accounts" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accounts</arg>
<arg>url=${account_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210324 11:38:35.853" level="INFO">Creating Session using : alias=accounts, url=https://banking-accounts-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210324 11:38:35.852" endtime="20210324 11:38:35.854"></status>
</kw>
<status status="PASS" starttime="20210324 11:38:35.851" endtime="20210324 11:38:35.855"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210324 11:38:35.856" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210324 11:38:35.855" endtime="20210324 11:38:35.856"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"operations": [</arg>
<arg>{</arg>
<arg>"amount": 9000000000000,</arg>
<arg>"authorization_code": "${uuid}",</arg>
<arg>"transaction_id": "${uuid}",</arg>
<arg>"id": "${uuid}",</arg>
<arg>"id_checking_account": "${account_external_key}",</arg>
<arg>"transfer_date": "2020-02-20T20:58:06.510Z",</arg>
<arg>"fee": 0,</arg>
<arg>"description": "Teste",</arg>
<arg>"object_type": "transfer",</arg>
<arg>"object_id": "${uuid}",</arg>
<arg>"dflag": "ACTIVE",</arg>
<arg>"created_at": "2019-10-14T20:58:06.510Z",</arg>
<arg>"type": "Transfer"</arg>
<arg>}</arg>
<arg>],</arg>
<arg>"reference_id": "Criando saldo na account"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210324 11:38:35.859" level="INFO">${body} = { "operations": [ { "amount": 9000000000000, "authorization_code": "d178b4e3-8167-4f55-98d9-d99efab9e34a", "transaction_id": "d178b4e3-8167-4f55-98d9-d99efab9e34a", "id": "d178b4e3-8167-4f55-98d9-d99e...</msg>
<status status="PASS" starttime="20210324 11:38:35.857" endtime="20210324 11:38:35.859"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accounts</arg>
<arg>/admin/internal_operation/authorization/${uuid}</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210324 11:38:35.862" level="INFO">POST Request using : uri=/admin/internal_operation/authorization/d178b4e3-8167-4f55-98d9-d99efab9e34a, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "operations": [ { "amount": 9000000000000, "authorization_code": "d178b4e3-8167-4f55-98d9-d99efab9e34a", "transaction_id": "d178b4e3-8167-4f55-98d9-d99efab9e34a", "id": "d178b4e3-8167-4f55-98d9-d99efab9e34a", "id_checking_account": "a44e1ceedccc4ac6b6a46da0f4541922", "transfer_date": "2020-02-20T20:58:06.510Z", "fee": 0, "description": "Teste", "object_type": "transfer", "object_id": "d178b4e3-8167-4f55-98d9-d99efab9e34a", "dflag": "ACTIVE", "created_at": "2019-10-14T20:58:06.510Z", "type": "Transfer" } ], "reference_id": "Criando saldo na account" } 
json=None</msg>
<msg timestamp="20210324 11:38:36.586" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210324 11:38:35.860" endtime="20210324 11:38:36.586"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.status_code}' == 200</arg>
<arg>Log</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210324 11:38:36.587" endtime="20210324 11:38:36.588"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.status_code}' == 200</arg>
<arg>Log</arg>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<status status="PASS" starttime="20210324 11:38:36.589" endtime="20210324 11:38:36.590"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.status_code}' == 200</arg>
<arg>Log</arg>
<arg>${response.status_code}</arg>
</arguments>
<status status="PASS" starttime="20210324 11:38:36.592" endtime="20210324 11:38:36.593"></status>
</kw>
<status status="PASS" starttime="20210324 11:38:35.847" endtime="20210324 11:38:36.593"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${pix_type}' == 'phone'</arg>
<arg>criar chave pix</arg>
<arg>${pix_type}</arg>
<arg>${phone_pix}</arg>
<arg>ELSE IF</arg>
<arg>'${pix_type}' == 'email'</arg>
<arg>criar chave pix</arg>
<arg>${pix_type}</arg>
<arg>${email_pix}</arg>
<arg>ELSE IF</arg>
<arg>'${pix_type}' == 'evp'</arg>
<arg>criar chave pix</arg>
<arg>${pix_type}</arg>
<arg>${EMPTY}</arg>
<arg>ELSE IF</arg>
<arg>'${pix_type}' == 'national_registration'</arg>
<arg>criar chave pix</arg>
<arg>${pix_type}</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw name="criar chave pix" library="pix_dict_create_entry">
<arguments>
<arg>${pix_type}</arg>
<arg>${email_pix}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210324 11:38:36.602" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210324 11:38:36.601" endtime="20210324 11:38:36.603"></status>
</kw>
<status status="PASS" starttime="20210324 11:38:36.600" endtime="20210324 11:38:36.603"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${type}</arg>
</arguments>
<msg timestamp="20210324 11:38:36.605" level="INFO">${type} = email</msg>
<status status="PASS" starttime="20210324 11:38:36.605" endtime="20210324 11:38:36.606"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210324 11:38:36.607" level="INFO">${value} = da-rosaisis@caldeira.br</msg>
<status status="PASS" starttime="20210324 11:38:36.606" endtime="20210324 11:38:36.609"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210324 11:38:36.610" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210324 11:38:36.609" endtime="20210324 11:38:36.610"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "${type}",</arg>
<arg>"value": "${value}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210324 11:38:36.613" level="INFO">${body} = { "type": "email", "value": "da-rosaisis@caldeira.br" }</msg>
<status status="PASS" starttime="20210324 11:38:36.611" endtime="20210324 11:38:36.613"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210324 11:38:36.616" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/23cd809e339c4af082c467eaa5f3c6af/accounts/a44e1ceedccc4ac6b6a46da0f4541922/entries, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "email", "value": "da-rosaisis@caldeira.br" } 
json=None</msg>
<msg timestamp="20210324 11:38:37.377" level="INFO">${response} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20210324 11:38:36.614" endtime="20210324 11:38:37.377"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210324 11:38:37.379" level="INFO">{'id': 'f9e17c19a49d45e6a08173a5038ea832', 'status': 'waiting_ownership_verification', 'created_at': '2021-03-24T11:38:37.013', 'updated_at': '2021-03-24T11:38:37.013', 'key': {'value': 'da-rosaisis@caldeira.br', 'type': 'email'}, 'account': {'id': 'a44e1ceedccc4ac6b6a46da0f4541922', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': '23cd809e339c4af082c467eaa5f3c6af', 'owner': {'name': 'Holder de teste', 'national_registration': '82530416753', 'type': 'individual'}, 'routing_number': '001', 'number': '779520798', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}, 'resource': 'pix.entry'}</msg>
<status status="PASS" starttime="20210324 11:38:37.378" endtime="20210324 11:38:37.380"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210324 11:38:37.382" level="INFO">8a41d7bb9b891e49</msg>
<status status="PASS" starttime="20210324 11:38:37.381" endtime="20210324 11:38:37.382"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210324 11:38:37.384" level="INFO">202</msg>
<status status="PASS" starttime="20210324 11:38:37.383" endtime="20210324 11:38:37.384"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210324 11:38:37.386" level="INFO">${response} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20210324 11:38:37.385" endtime="20210324 11:38:37.386"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${entry_external_key}</var>
</assign>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<status status="PASS" starttime="20210324 11:38:37.389" endtime="20210324 11:38:37.390"></status>
</kw>
<msg timestamp="20210324 11:38:37.390" level="INFO">${entry_external_key} = f9e17c19a49d45e6a08173a5038ea832</msg>
<status status="PASS" starttime="20210324 11:38:37.387" endtime="20210324 11:38:37.391"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${entry_external_key}</arg>
</arguments>
<msg timestamp="20210324 11:38:37.392" level="INFO">${entry_external_key} = f9e17c19a49d45e6a08173a5038ea832</msg>
<status status="PASS" starttime="20210324 11:38:37.391" endtime="20210324 11:38:37.393"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["key"]["value"]}</arg>
</arguments>
<assign>
<var>${entry_key_value}</var>
</assign>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["key"]["value"]}</arg>
</arguments>
<status status="PASS" starttime="20210324 11:38:37.395" endtime="20210324 11:38:37.397"></status>
</kw>
<msg timestamp="20210324 11:38:37.397" level="INFO">${entry_key_value} = da-rosaisis@caldeira.br</msg>
<status status="PASS" starttime="20210324 11:38:37.393" endtime="20210324 11:38:37.397"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${entry_key_value}</arg>
</arguments>
<msg timestamp="20210324 11:38:37.399" level="INFO">${entry_key_value} = da-rosaisis@caldeira.br</msg>
<status status="PASS" starttime="20210324 11:38:37.398" endtime="20210324 11:38:37.399"></status>
</kw>
<status status="PASS" starttime="20210324 11:38:36.597" endtime="20210324 11:38:37.400"></status>
</kw>
<status status="PASS" starttime="20210324 11:38:36.594" endtime="20210324 11:38:37.400"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${pix_type}' == 'phone'</arg>
<arg>buscar verification code</arg>
<arg>${holder_external_key}</arg>
<arg>${account_external_key}</arg>
<arg>${entry_external_key}</arg>
<arg>ELSE IF</arg>
<arg>'${pix_type}' == 'email'</arg>
<arg>buscar verification code</arg>
<arg>${holder_external_key}</arg>
<arg>${account_external_key}</arg>
<arg>${entry_external_key}</arg>
</arguments>
<kw name="buscar verification code" library="pix_dict_verification_code">
<arguments>
<arg>${holder_external_key}</arg>
<arg>${account_external_key}</arg>
<arg>${entry_external_key}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210324 11:38:37.407" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210324 11:38:37.406" endtime="20210324 11:38:37.408"></status>
</kw>
<status status="PASS" starttime="20210324 11:38:37.404" endtime="20210324 11:38:37.408"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/admin/internal_operation/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries/${entry_external_key}/code</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210324 11:38:37.410" level="INFO">GET Request using : uri=/admin/internal_operation/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/23cd809e339c4af082c467eaa5f3c6af/accounts/a44e1ceedccc4ac6b6a46da0f4541922/entries/f9e17c19a49d45e6a08173a5038ea832/code, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210324 11:38:38.137" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210324 11:38:37.409" endtime="20210324 11:38:38.137"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210324 11:38:38.139" level="INFO">{'code': '0224'}</msg>
<status status="PASS" starttime="20210324 11:38:38.138" endtime="20210324 11:38:38.140"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210324 11:38:38.142" level="INFO">1482741b24b51a88</msg>
<status status="PASS" starttime="20210324 11:38:38.140" endtime="20210324 11:38:38.142"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210324 11:38:38.144" level="INFO">200</msg>
<status status="PASS" starttime="20210324 11:38:38.143" endtime="20210324 11:38:38.144"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210324 11:38:38.146" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210324 11:38:38.145" endtime="20210324 11:38:38.147"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["code"]}</arg>
</arguments>
<assign>
<var>${verification_code}</var>
</assign>
<msg timestamp="20210324 11:38:38.150" level="INFO">${verification_code} = 0224</msg>
<status status="PASS" starttime="20210324 11:38:38.148" endtime="20210324 11:38:38.150"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${verification_code}</arg>
</arguments>
<msg timestamp="20210324 11:38:38.152" level="INFO">${verification_code} = 0224</msg>
<status status="PASS" starttime="20210324 11:38:38.151" endtime="20210324 11:38:38.152"></status>
</kw>
<status status="PASS" starttime="20210324 11:38:37.403" endtime="20210324 11:38:38.153"></status>
</kw>
<status status="PASS" starttime="20210324 11:38:37.401" endtime="20210324 11:38:38.153"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${pix_type}' == 'phone'</arg>
<arg>confirmar propriedade da chave pix</arg>
<arg>${verification_code}</arg>
<arg>${holder_external_key}</arg>
<arg>${account_external_key}</arg>
<arg>${entry_external_key}</arg>
<arg>ELSE IF</arg>
<arg>'${pix_type}' == 'email'</arg>
<arg>confirmar propriedade da chave pix</arg>
<arg>${verification_code}</arg>
<arg>${holder_external_key}</arg>
<arg>${account_external_key}</arg>
<arg>${entry_external_key}</arg>
</arguments>
<kw name="confirmar propriedade da chave pix" library="pix_dict_confirm_propriety">
<arguments>
<arg>${verification_code}</arg>
<arg>${holder_external_key}</arg>
<arg>${account_external_key}</arg>
<arg>${entry_external_key}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210324 11:38:38.161" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210324 11:38:38.160" endtime="20210324 11:38:38.163"></status>
</kw>
<status status="PASS" starttime="20210324 11:38:38.159" endtime="20210324 11:38:38.163"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210324 11:38:38.165" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210324 11:38:38.164" endtime="20210324 11:38:38.165"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"code": "${verification_code}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210324 11:38:38.167" level="INFO">${body} = { "code": "0224" }</msg>
<status status="PASS" starttime="20210324 11:38:38.166" endtime="20210324 11:38:38.167"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries/${entry_external_key}/ownership</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210324 11:38:38.170" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/23cd809e339c4af082c467eaa5f3c6af/accounts/a44e1ceedccc4ac6b6a46da0f4541922/entries/f9e17c19a49d45e6a08173a5038ea832/ownership, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "code": "0224" } 
json=None</msg>
<msg timestamp="20210324 11:38:40.088" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210324 11:38:38.168" endtime="20210324 11:38:40.088"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210324 11:38:40.090" level="INFO">{'id': 'f9e17c19a49d45e6a08173a5038ea832', 'status': 'active', 'created_at': '2021-03-24T11:38:37.013', 'updated_at': '2021-03-24T11:38:39.736', 'key': {'value': 'da-rosaisis@caldeira.br', 'type': 'email'}, 'account': {'id': 'a44e1ceedccc4ac6b6a46da0f4541922', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': '23cd809e339c4af082c467eaa5f3c6af', 'owner': {'name': 'Holder de teste', 'national_registration': '82530416753', 'type': 'individual'}, 'routing_number': '001', 'number': '779520798', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}, 'resource': 'pix.entry'}</msg>
<status status="PASS" starttime="20210324 11:38:40.089" endtime="20210324 11:38:40.090"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210324 11:38:40.092" level="INFO">b6063bc58ab2a15b</msg>
<status status="PASS" starttime="20210324 11:38:40.091" endtime="20210324 11:38:40.092"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210324 11:38:40.094" level="INFO">201</msg>
<status status="PASS" starttime="20210324 11:38:40.093" endtime="20210324 11:38:40.094"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210324 11:38:40.097" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210324 11:38:40.095" endtime="20210324 11:38:40.098"></status>
</kw>
<status status="PASS" starttime="20210324 11:38:38.156" endtime="20210324 11:38:40.098"></status>
</kw>
<status status="PASS" starttime="20210324 11:38:38.155" endtime="20210324 11:38:40.098"></status>
</kw>
<status status="PASS" starttime="20210324 11:38:32.217" endtime="20210324 11:38:40.098"></status>
</kw>
<kw name="criar pagamento pix com dados completos" library="pix_payments_create_pix_payment">
<arguments>
<arg>amount=${amount}</arg>
<arg>creditor_account_number=${creditor_account_number}</arg>
<arg>creditor_routing_number=${creditor_routing_number}</arg>
<arg>creditor_account_type=${creditor_account_type}</arg>
<arg>creditor_name=${creditor_name}</arg>
<arg>creditor_national_registration=${creditor_national_registration}</arg>
<arg>creditor_psp=${creditor_psp}</arg>
<arg>pix_description=${pix_description}</arg>
</arguments>
<kw name="conectar pix-payments" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-payments</arg>
<arg>url=${pix_payments_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210324 11:38:40.110" level="INFO">Creating Session using : alias=pix-payments, url=https://banking-pix-payments-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210324 11:38:40.108" endtime="20210324 11:38:40.111"></status>
</kw>
<status status="PASS" starttime="20210324 11:38:40.107" endtime="20210324 11:38:40.112"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210324 11:38:40.114" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210324 11:38:40.113" endtime="20210324 11:38:40.114"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"amount": ${amount},</arg>
<arg>"creditor": {</arg>
<arg>"account": {</arg>
<arg>"number": "${creditor_account_number}",</arg>
<arg>"routing_number": "${creditor_routing_number}",</arg>
<arg>"type": "${creditor_account_type}"</arg>
<arg>},</arg>
<arg>"name": "${creditor_name}",</arg>
<arg>"national_registration": "${creditor_national_registration}",</arg>
<arg>"psp": "${creditor_psp}"</arg>
<arg>},</arg>
<arg>"description": "${pix_description}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210324 11:38:40.118" level="INFO">${body} = { "amount": 100, "creditor": { "account": { "number": "0243882974", "routing_number": "0500", "type": "cacc" }, "name": "Massa iti PF NauNNMO", "national_registration": "42808422644", "psp": "17192451...</msg>
<status status="PASS" starttime="20210324 11:38:40.116" endtime="20210324 11:38:40.118"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-payments</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/pix/holders/${holder_external_key}/accounts/${account_external_key}/payments</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210324 11:38:40.121" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/pix/holders/23cd809e339c4af082c467eaa5f3c6af/accounts/a44e1ceedccc4ac6b6a46da0f4541922/payments, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "amount": 100, "creditor": { "account": { "number": "0243882974", "routing_number": "0500", "type": "cacc" }, "name": "Massa iti PF NauNNMO", "national_registration": "42808422644", "psp": "17192451" }, "description": "Envio de PIX" } 
json=None</msg>
<msg timestamp="20210324 11:38:40.874" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210324 11:38:40.119" endtime="20210324 11:38:40.874"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210324 11:38:40.876" level="INFO">{'id': '81aacee24bb64d89bb903b6c64d155f7', 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'status': 'pending', 'end_to_end_id': 'E194682422021032414386adf28965d8', 'message_id': 'M19468242b918dadd2236d1b28bd2e8d', 'amount': 100, 'created_at': '2021-03-24T11:38:40.491002', 'description': 'Envio de PIX', 'debtor': {'national_registration': '82530416753', 'name': 'Holder de teste', 'type': 'individual', 'holder_id': '23cd809e339c4af082c467eaa5f3c6af', 'account': {'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}, 'digital_account_id': 'a44e1ceedccc4ac6b6a46da0f4541922', 'number': '779520798', 'routing_number': '0001', 'type': 'cacc'}}, 'creditor': {'national_registration': '42808422644', 'name': 'Massa iti PF NauNNMO', 'type': 'individual', 'account': {'psp': {'code': '17192451'}, 'number': '0243882974', 'routing_number': '0500', 'type': 'cacc'}}, 'refunded_amount': 0}</msg>
<status status="PASS" starttime="20210324 11:38:40.875" endtime="20210324 11:38:40.877"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210324 11:38:40.879" level="INFO">31d1227defbc0e4f</msg>
<status status="PASS" starttime="20210324 11:38:40.878" endtime="20210324 11:38:40.879"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210324 11:38:40.881" level="INFO">201</msg>
<status status="PASS" starttime="20210324 11:38:40.880" endtime="20210324 11:38:40.881"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210324 11:38:40.883" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210324 11:38:40.882" endtime="20210324 11:38:40.884"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${payment_external_key}</var>
</assign>
<msg timestamp="20210324 11:38:40.886" level="INFO">${payment_external_key} = 81aacee24bb64d89bb903b6c64d155f7</msg>
<status status="PASS" starttime="20210324 11:38:40.885" endtime="20210324 11:38:40.887"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${payment_external_key}</arg>
</arguments>
<msg timestamp="20210324 11:38:40.889" level="INFO">${payment_external_key} = 81aacee24bb64d89bb903b6c64d155f7</msg>
<status status="PASS" starttime="20210324 11:38:40.888" endtime="20210324 11:38:40.889"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["end_to_end_id"]}</arg>
</arguments>
<assign>
<var>${end_to_end_id}</var>
</assign>
<msg timestamp="20210324 11:38:40.892" level="INFO">${end_to_end_id} = E194682422021032414386adf28965d8</msg>
<status status="PASS" starttime="20210324 11:38:40.890" endtime="20210324 11:38:40.892"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${end_to_end_id}</arg>
</arguments>
<msg timestamp="20210324 11:38:40.894" level="INFO">${end_to_end_id} = E194682422021032414386adf28965d8</msg>
<status status="PASS" starttime="20210324 11:38:40.893" endtime="20210324 11:38:40.894"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["message_id"]}</arg>
</arguments>
<assign>
<var>${message_id}</var>
</assign>
<msg timestamp="20210324 11:38:40.897" level="INFO">${message_id} = M19468242b918dadd2236d1b28bd2e8d</msg>
<status status="PASS" starttime="20210324 11:38:40.895" endtime="20210324 11:38:40.897"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${message_id}</arg>
</arguments>
<msg timestamp="20210324 11:38:40.899" level="INFO">${message_id} = M19468242b918dadd2236d1b28bd2e8d</msg>
<status status="PASS" starttime="20210324 11:38:40.898" endtime="20210324 11:38:40.899"></status>
</kw>
<status status="PASS" starttime="20210324 11:38:40.102" endtime="20210324 11:38:40.900"></status>
</kw>
<kw name="validar pagamento pix" library="asserts">
<arguments>
<arg>marketplace_external_key=${marketplace_external_key}</arg>
<arg>status_pix_payments=pending</arg>
<arg>amount=${amount}</arg>
<arg>pix_description=${pix_description}</arg>
<arg>debitor_national_registration=${national_registration}</arg>
<arg>debitor_name=${holder_name}</arg>
<arg>debitor_type=${holder_type}</arg>
<arg>debitor_holder_id=${holder_external_key}</arg>
<arg>debtor_account_psp_code=${debtor_account_psp_code}</arg>
<arg>debtor_account_psp_name=${debtor_account_psp_name}</arg>
<arg>debtor_digital_account=${account_external_key}</arg>
<arg>debtor_account_number=${account_number}</arg>
<arg>debtor_account_routing_number=${account_routing_number}</arg>
<arg>debtor_account_type=${debtor_account_type}</arg>
<arg>creditor_national_registration=${creditor_national_registration}</arg>
<arg>creditor_name=${creditor_name}</arg>
<arg>creditor_type=individual</arg>
<arg>creditor_account_psp_code=${creditor_psp}</arg>
<arg>creditor_account_number=${creditor_account_number}</arg>
<arg>creditor_account_routing_number=${creditor_routing_number}</arg>
<arg>creditor_account_type=${creditor_account_type}</arg>
<arg>refunded_amount=0</arg>
</arguments>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<arguments>
<arg>result_format=datetime</arg>
</arguments>
<assign>
<var>${date}</var>
</assign>
<msg timestamp="20210324 11:38:40.910" level="INFO">${date} = 2021-03-24 11:38:40.909672</msg>
<status status="PASS" starttime="20210324 11:38:40.909" endtime="20210324 11:38:40.911"></status>
</kw>
<kw name="Convert Date" library="DateTime">
<doc>Converts between supported `date formats`.</doc>
<arguments>
<arg>${date}</arg>
<arg>exclude_millis=yes</arg>
<arg>result_format=%Y-%m-%d</arg>
<arg>date_format=%d-%m-%Y</arg>
</arguments>
<assign>
<var>${date}</var>
</assign>
<msg timestamp="20210324 11:38:40.913" level="INFO">${date} = 2021-03-24</msg>
<status status="PASS" starttime="20210324 11:38:40.911" endtime="20210324 11:38:40.913"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["marketplace_id"]}</arg>
<arg>${marketplace_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210324 11:38:40.914" endtime="20210324 11:38:40.915"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["status"]}</arg>
<arg>${status_pix_payments}</arg>
</arguments>
<status status="PASS" starttime="20210324 11:38:40.916" endtime="20210324 11:38:40.918"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response.json()["end_to_end_id"]}</arg>
<arg>E19468242</arg>
</arguments>
<status status="PASS" starttime="20210324 11:38:40.919" endtime="20210324 11:38:40.920"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.json()["status"]}' == 'peding'</arg>
<arg>Should Contain</arg>
<arg>${response.json()["message_id"]}</arg>
<arg>M19468242</arg>
<arg>ELSE IF</arg>
<arg>'${response.json()["status"]}' == 'executed'</arg>
<arg>Should Contain</arg>
<arg>${response.json()["message_id"]}</arg>
<arg>M19468242</arg>
<arg>ELSE IF</arg>
<arg>'${response.json()["status"]}' == 'succeeded'</arg>
<arg>Should Contain</arg>
<arg>${response.json()["message_id"]}</arg>
<arg>M19468242</arg>
<arg>ELSE IF</arg>
<arg>'${response.json()["status"]}' == 'canceled'</arg>
<arg>Should Not Contain Any</arg>
<arg>${response.json()}</arg>
<arg>message_id</arg>
</arguments>
<status status="PASS" starttime="20210324 11:38:40.921" endtime="20210324 11:38:40.924"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.json()["amount"]}</arg>
<arg>${amount}</arg>
</arguments>
<msg timestamp="20210324 11:38:40.927" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210324 11:38:40.925" endtime="20210324 11:38:40.927"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["description"]}</arg>
<arg>${pix_description}</arg>
</arguments>
<status status="PASS" starttime="20210324 11:38:40.928" endtime="20210324 11:38:40.930"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["national_registration"]}</arg>
<arg>${debitor_national_registration}</arg>
</arguments>
<status status="PASS" starttime="20210324 11:38:40.931" endtime="20210324 11:38:40.932"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["name"]}</arg>
<arg>${debitor_name}</arg>
</arguments>
<status status="PASS" starttime="20210324 11:38:40.933" endtime="20210324 11:38:40.935"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["type"]}</arg>
<arg>${debitor_type}</arg>
</arguments>
<status status="PASS" starttime="20210324 11:38:40.936" endtime="20210324 11:38:40.937"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["holder_id"]}</arg>
<arg>${debitor_holder_id}</arg>
</arguments>
<status status="PASS" starttime="20210324 11:38:40.938" endtime="20210324 11:38:40.939"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["account"]["psp"]["code"]}</arg>
<arg>${debtor_account_psp_code}</arg>
</arguments>
<status status="PASS" starttime="20210324 11:38:40.940" endtime="20210324 11:38:40.942"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["account"]["psp"]["name"]}</arg>
<arg>${debtor_account_psp_name}</arg>
</arguments>
<status status="PASS" starttime="20210324 11:38:40.943" endtime="20210324 11:38:40.944"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["account"]["digital_account_id"]}</arg>
<arg>${debtor_digital_account}</arg>
</arguments>
<status status="PASS" starttime="20210324 11:38:40.945" endtime="20210324 11:38:40.947"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["account"]["number"]}</arg>
<arg>${account_number}</arg>
</arguments>
<status status="PASS" starttime="20210324 11:38:40.948" endtime="20210324 11:38:40.950"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["account"]["routing_number"]}</arg>
<arg>0${debtor_account_routing_number}</arg>
</arguments>
<status status="PASS" starttime="20210324 11:38:40.952" endtime="20210324 11:38:40.954"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["account"]["type"]}</arg>
<arg>${debtor_account_type}</arg>
</arguments>
<status status="PASS" starttime="20210324 11:38:40.955" endtime="20210324 11:38:40.957"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["creditor"]["national_registration"]}</arg>
<arg>${creditor_national_registration}</arg>
</arguments>
<status status="PASS" starttime="20210324 11:38:40.958" endtime="20210324 11:38:40.960"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["creditor"]["name"]}</arg>
<arg>${creditor_name}</arg>
</arguments>
<status status="PASS" starttime="20210324 11:38:40.961" endtime="20210324 11:38:40.963"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["creditor"]["type"]}</arg>
<arg>${creditor_type}</arg>
</arguments>
<status status="PASS" starttime="20210324 11:38:40.963" endtime="20210324 11:38:40.965"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["creditor"]["account"]["psp"]["code"]}</arg>
<arg>${creditor_account_psp_code}</arg>
</arguments>
<status status="PASS" starttime="20210324 11:38:40.966" endtime="20210324 11:38:40.967"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["creditor"]["account"]["number"]}</arg>
<arg>${creditor_account_number}</arg>
</arguments>
<status status="PASS" starttime="20210324 11:38:40.968" endtime="20210324 11:38:40.970"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["creditor"]["account"]["routing_number"]}</arg>
<arg>${creditor_account_routing_number}</arg>
</arguments>
<status status="PASS" starttime="20210324 11:38:40.971" endtime="20210324 11:38:40.972"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["creditor"]["account"]["type"]}</arg>
<arg>${creditor_account_type}</arg>
</arguments>
<status status="PASS" starttime="20210324 11:38:40.973" endtime="20210324 11:38:40.974"></status>
</kw>
<status status="PASS" starttime="20210324 11:38:40.903" endtime="20210324 11:38:40.974"></status>
</kw>
<doc>Envio de PIX com sucesso para uma conta Iti, a partir de um Holder Business</doc>
<tags>
<tag>smoke_test</tag>
</tags>
<status status="PASS" starttime="20210324 11:38:32.216" endtime="20210324 11:38:40.976" critical="yes"></status>
</test>
<doc>Funcionalidade: Criar Chave de Endereçamento
Eu, como um Holder, portador de uma conta ativa em Banking
Desejo criar uma pagamento PIX</doc>
<status status="PASS" starttime="20210324 11:38:32.039" endtime="20210324 11:38:40.982"></status>
</suite>
<status status="PASS" starttime="20210324 11:38:06.878" endtime="20210324 11:38:40.991"></status>
</suite>
<suite id="s1-s2" name="Recebimento" source="C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\tests\pix-payments\recebimento">
<suite id="s1-s2-s1" name="Receber Pagamento PIX" source="C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\tests\pix-payments\recebimento\Receber Pagamento PIX.robot">
<test id="s1-s2-s1-t1" name="Cenário: Receber pagamento PIX com end to end já recebido">
<kw name="criar chave pix ativa" library="pix_dict_create_active_key_pix">
<arguments>
<arg>individual</arg>
<arg>national_registration</arg>
</arguments>
<kw name="Random Number" library="FakerLibrary">
<doc>Returns a random number with 1 digit (default, when digits==None),
a random number with 0 to given number of digits, or a random number
with given number to given number of digits (when ``fix_len==True``).</doc>
<arguments>
<arg>digits=8</arg>
<arg>fix_len=True</arg>
</arguments>
<assign>
<var>${phone}</var>
</assign>
<msg timestamp="20210324 11:38:41.114" level="INFO">${phone} = 90529627</msg>
<status status="PASS" starttime="20210324 11:38:41.114" endtime="20210324 11:38:41.114"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>+55219${phone}</arg>
</arguments>
<assign>
<var>${phone_pix}</var>
</assign>
<msg timestamp="20210324 11:38:41.115" level="INFO">${phone_pix} = +5521990529627</msg>
<status status="PASS" starttime="20210324 11:38:41.114" endtime="20210324 11:38:41.115"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${phone_pix}</arg>
</arguments>
<msg timestamp="20210324 11:38:41.116" level="INFO">${phone_pix} = +5521990529627</msg>
<status status="PASS" starttime="20210324 11:38:41.115" endtime="20210324 11:38:41.116"></status>
</kw>
<kw name="Email" library="FakerLibrary">
<assign>
<var>${email_pix}</var>
</assign>
<msg timestamp="20210324 11:38:41.116" level="INFO">${email_pix} = zcavalcanti@vieira.org</msg>
<status status="PASS" starttime="20210324 11:38:41.116" endtime="20210324 11:38:41.116"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${email_pix}</arg>
</arguments>
<msg timestamp="20210324 11:38:41.117" level="INFO">${email_pix} = zcavalcanti@vieira.org</msg>
<status status="PASS" starttime="20210324 11:38:41.117" endtime="20210324 11:38:41.117"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${holder_type}' == 'business'</arg>
<arg>criar holder business ativo</arg>
<arg>ELSE IF</arg>
<arg>'${holder_type}' == 'individual'</arg>
<arg>criar holder individual ativo</arg>
</arguments>
<kw name="criar holder individual ativo" library="accreditation_create_holder_active">
<kw name="conectar accreditation" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accreditation</arg>
<arg>url=${accreditation_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210324 11:38:41.119" level="INFO">Creating Session using : alias=accreditation, url=https://banking-accreditation-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210324 11:38:41.119" endtime="20210324 11:38:41.120"></status>
</kw>
<status status="PASS" starttime="20210324 11:38:41.119" endtime="20210324 11:38:41.120"></status>
</kw>
<kw name="Cpf" library="FakerLibrary">
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210324 11:38:41.120" level="INFO">${national_registration} = 859.301.246-98</msg>
<status status="PASS" starttime="20210324 11:38:41.120" endtime="20210324 11:38:41.120"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${national_registration}</arg>
<arg>.</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210324 11:38:41.121" level="INFO">${national_registration} = 859301246-98</msg>
<status status="PASS" starttime="20210324 11:38:41.120" endtime="20210324 11:38:41.121"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${national_registration}</arg>
<arg>-</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210324 11:38:41.122" level="INFO">${national_registration} = 85930124698</msg>
<status status="PASS" starttime="20210324 11:38:41.122" endtime="20210324 11:38:41.122"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${national_registration}</arg>
</arguments>
<msg timestamp="20210324 11:38:41.123" level="INFO">${national_registration} = 85930124698</msg>
<status status="PASS" starttime="20210324 11:38:41.122" endtime="20210324 11:38:41.123"></status>
</kw>
<kw name="Rg" library="FakerLibrary">
<doc>Brazilian RG, return plain numbers.
Check:  https://www.ngmatematica.com/2014/02/como-determinar-o-digito-verificador-do.html</doc>
<assign>
<var>${identity_card}</var>
</assign>
<msg timestamp="20210324 11:38:41.123" level="INFO">${identity_card} = 143257869</msg>
<status status="PASS" starttime="20210324 11:38:41.123" endtime="20210324 11:38:41.124"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${identity_card}</arg>
</arguments>
<msg timestamp="20210324 11:38:41.124" level="INFO">${identity_card} = 143257869</msg>
<status status="PASS" starttime="20210324 11:38:41.124" endtime="20210324 11:38:41.124"></status>
</kw>
<kw name="criar holder individual" library="accreditation_post_holder_individual">
<arguments>
<arg>holder_type=individual</arg>
<arg>holder_name=${holder_name}</arg>
<arg>email=${email}</arg>
<arg>national_registration=${national_registration}</arg>
<arg>revenue=${revenue}</arg>
<arg>birthday=${birthday}</arg>
<arg>mothers_name=${mothers_name}</arg>
<arg>identity_card=${identity_card}</arg>
<arg>pep=false</arg>
<arg>cbo=${cbo}</arg>
</arguments>
<kw name="conectar accreditation" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accreditation</arg>
<arg>url=${accreditation_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210324 11:38:41.127" level="INFO">Creating Session using : alias=accreditation, url=https://banking-accreditation-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210324 11:38:41.126" endtime="20210324 11:38:41.127"></status>
</kw>
<status status="PASS" starttime="20210324 11:38:41.126" endtime="20210324 11:38:41.127"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_type}</arg>
</arguments>
<msg timestamp="20210324 11:38:41.128" level="INFO">${holder_type} = individual</msg>
<status status="PASS" starttime="20210324 11:38:41.128" endtime="20210324 11:38:41.128"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_name}</arg>
</arguments>
<msg timestamp="20210324 11:38:41.129" level="INFO">${holder_name} = Holder de teste</msg>
<status status="PASS" starttime="20210324 11:38:41.128" endtime="20210324 11:38:41.129"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210324 11:38:41.130" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210324 11:38:41.129" endtime="20210324 11:38:41.130"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "${holder_type}",</arg>
<arg>"name": "${holder_name}",</arg>
<arg>"email": "${email}",</arg>
<arg>"national_registration": "${national_registration}",</arg>
<arg>"revenue": ${revenue},</arg>
<arg>"birthday": "${birthday}",</arg>
<arg>"mothers_name": "${mothers_name}",</arg>
<arg>"identity_card": "${identity_card}",</arg>
<arg>"pep": false,</arg>
<arg>"cbo": ${cbo}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210324 11:38:41.131" level="INFO">${body} = { "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "85930124698", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder",...</msg>
<status status="PASS" starttime="20210324 11:38:41.130" endtime="20210324 11:38:41.131"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210324 11:38:41.132" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "85930124698", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder", "identity_card": "143257869", "pep": false, "cbo": 821450 } 
json=None</msg>
<msg timestamp="20210324 11:38:41.948" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210324 11:38:41.131" endtime="20210324 11:38:41.948"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210324 11:38:41.951" level="INFO">{'id': 'b9aed5cd8e2542fb89570cdda2d9e546', 'name': 'Holder de teste', 'revenue': 5500.0, 'email': 'teste@teste.com.br', 'status': 'waiting_info_and_documents', 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'marketplace_name': 'Marketplace de Teste', 'created_at': '2021-03-24T11:38:41.498144', 'updated_at': '2021-03-24T11:38:41.498145', 'type': 'individual', 'national_registration': '85930124698', 'birthday': '1988-04-23', 'mothers_name': 'Mãe do Holder', 'identity_card': '143257869', 'pep': False, 'cbo': '821450', '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/b9aed5cd8e2542fb89570cdda2d9e546', 'type': 'GET'}, 'phones': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/b9aed5cd8e2542fb89570cdda2d9e546/phones', 'type': 'GET'}, 'addresses': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/b9aed5cd8e2542fb89570cdda2d9e546/addresses', 'type': 'GET'}, 'documents': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/b9aed5cd8e2542fb89570cdda2d9e546/documents', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210324 11:38:41.950" endtime="20210324 11:38:41.951"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210324 11:38:41.953" level="INFO">2f823bc3c0018060</msg>
<status status="PASS" starttime="20210324 11:38:41.952" endtime="20210324 11:38:41.953"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${body}</arg>
</arguments>
<msg timestamp="20210324 11:38:41.955" level="INFO">{ "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "85930124698", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder", "identity_card": "143257869", "pep": false, "cbo": 821450 }</msg>
<status status="PASS" starttime="20210324 11:38:41.954" endtime="20210324 11:38:41.955"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210324 11:38:41.957" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210324 11:38:41.956" endtime="20210324 11:38:41.958"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${holder_external_key}</var>
</assign>
<msg timestamp="20210324 11:38:41.961" level="INFO">${holder_external_key} = b9aed5cd8e2542fb89570cdda2d9e546</msg>
<status status="PASS" starttime="20210324 11:38:41.959" endtime="20210324 11:38:41.961"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_external_key}</arg>
</arguments>
<msg timestamp="20210324 11:38:41.963" level="INFO">${holder_external_key} = b9aed5cd8e2542fb89570cdda2d9e546</msg>
<status status="PASS" starttime="20210324 11:38:41.962" endtime="20210324 11:38:41.964"></status>
</kw>
<status status="PASS" starttime="20210324 11:38:41.125" endtime="20210324 11:38:41.964"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_name}</arg>
</arguments>
<msg timestamp="20210324 11:38:41.966" level="INFO">${holder_name} = Holder de teste</msg>
<status status="PASS" starttime="20210324 11:38:41.965" endtime="20210324 11:38:41.966"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210324 11:38:41.969" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210324 11:38:41.967" endtime="20210324 11:38:41.969"></status>
</kw>
<kw name="criar holder phone" library="accreditation_post_holder_phone">
<arguments>
<arg>21</arg>
<arg>51</arg>
<arg>996221236</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210324 11:38:41.973" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210324 11:38:41.972" endtime="20210324 11:38:41.973"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"area_code": "${phone_area_code}",</arg>
<arg>"country_code": "${phone_country_code}",</arg>
<arg>"number": "${phone_number}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210324 11:38:41.975" level="INFO">${body} = { "area_code": "21", "country_code": "51", "number": "996221236" }</msg>
<status status="PASS" starttime="20210324 11:38:41.974" endtime="20210324 11:38:41.975"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/phones</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210324 11:38:41.978" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/b9aed5cd8e2542fb89570cdda2d9e546/phones, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "area_code": "21", "country_code": "51", "number": "996221236" } 
json=None</msg>
<msg timestamp="20210324 11:38:42.259" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210324 11:38:41.976" endtime="20210324 11:38:42.259"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210324 11:38:42.262" level="INFO">{'id': 'fa053a6e2b7647a391348f7cefd8b744', 'area_code': '21', 'country_code': '51', 'number': '996221236', 'main': True, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/b9aed5cd8e2542fb89570cdda2d9e546/phones/fa053a6e2b7647a391348f7cefd8b744', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/b9aed5cd8e2542fb89570cdda2d9e546', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210324 11:38:42.260" endtime="20210324 11:38:42.262"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210324 11:38:42.264" level="INFO">4963e1fb32838421</msg>
<status status="PASS" starttime="20210324 11:38:42.263" endtime="20210324 11:38:42.265"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210324 11:38:42.267" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210324 11:38:42.266" endtime="20210324 11:38:42.267"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${phone_external_key}</var>
</assign>
<msg timestamp="20210324 11:38:42.270" level="INFO">${phone_external_key} = fa053a6e2b7647a391348f7cefd8b744</msg>
<status status="PASS" starttime="20210324 11:38:42.268" endtime="20210324 11:38:42.270"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${phone_external_key}</arg>
</arguments>
<msg timestamp="20210324 11:38:42.272" level="INFO">${phone_external_key} = fa053a6e2b7647a391348f7cefd8b744</msg>
<status status="PASS" starttime="20210324 11:38:42.271" endtime="20210324 11:38:42.273"></status>
</kw>
<status status="PASS" starttime="20210324 11:38:41.970" endtime="20210324 11:38:42.273"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210324 11:38:42.275" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210324 11:38:42.274" endtime="20210324 11:38:42.276"></status>
</kw>
<kw name="criar holder address" library="accreditation_post_holder_address">
<arguments>
<arg>Rio de Janeiro</arg>
<arg>Rio de Janeiro</arg>
<arg>Brasil</arg>
<arg>Bairro de Testes</arg>
<arg>Rua de Testes</arg>
<arg>90</arg>
<arg>apto 200</arg>
<arg>21550987</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210324 11:38:42.279" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210324 11:38:42.278" endtime="20210324 11:38:42.280"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"city": "${city}",</arg>
<arg>"state": "${state}",</arg>
<arg>"country": "${country}",</arg>
<arg>"neighborhood": "${neighborhood}",</arg>
<arg>"street": "${street}",</arg>
<arg>"number": "${number}",</arg>
<arg>"complement": "${complement}",</arg>
<arg>"postal_code": "${postal_code}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210324 11:38:42.283" level="INFO">${body} = { "city": "Rio de Janeiro", "state": "Rio de Janeiro", "country": "Brasil", "neighborhood": "Bairro de Testes", "street": "Rua de Testes", "number": "90", "complement": "apto 200", "postal_code": "215...</msg>
<status status="PASS" starttime="20210324 11:38:42.280" endtime="20210324 11:38:42.283"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/addresses</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210324 11:38:42.286" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/b9aed5cd8e2542fb89570cdda2d9e546/addresses, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "city": "Rio de Janeiro", "state": "Rio de Janeiro", "country": "Brasil", "neighborhood": "Bairro de Testes", "street": "Rua de Testes", "number": "90", "complement": "apto 200", "postal_code": "21550987" } 
json=None</msg>
<msg timestamp="20210324 11:38:42.528" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210324 11:38:42.284" endtime="20210324 11:38:42.528"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210324 11:38:42.530" level="INFO">{'id': '30ea8f64143c4aaca21d8ba923553206', 'street': 'Rua de Testes', 'number': '90', 'city': 'Rio de Janeiro', 'complement': 'apto 200', 'state': 'Rio de Janeiro', 'neighborhood': 'Bairro de Testes', 'postal_code': '21550987', 'country': 'Brasil', 'main': True, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/b9aed5cd8e2542fb89570cdda2d9e546/addresses/30ea8f64143c4aaca21d8ba923553206', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/b9aed5cd8e2542fb89570cdda2d9e546', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210324 11:38:42.529" endtime="20210324 11:38:42.531"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210324 11:38:42.533" level="INFO">891be8db9f02f26a</msg>
<status status="PASS" starttime="20210324 11:38:42.531" endtime="20210324 11:38:42.533"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210324 11:38:42.535" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210324 11:38:42.534" endtime="20210324 11:38:42.535"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${address_external_key}</var>
</assign>
<msg timestamp="20210324 11:38:42.538" level="INFO">${address_external_key} = 30ea8f64143c4aaca21d8ba923553206</msg>
<status status="PASS" starttime="20210324 11:38:42.536" endtime="20210324 11:38:42.538"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${address_external_key}</arg>
</arguments>
<msg timestamp="20210324 11:38:42.540" level="INFO">${address_external_key} = 30ea8f64143c4aaca21d8ba923553206</msg>
<status status="PASS" starttime="20210324 11:38:42.539" endtime="20210324 11:38:42.541"></status>
</kw>
<status status="PASS" starttime="20210324 11:38:42.276" endtime="20210324 11:38:42.541"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210324 11:38:42.543" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210324 11:38:42.542" endtime="20210324 11:38:42.543"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>SELFIE</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210324 11:38:42.547" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210324 11:38:42.546" endtime="20210324 11:38:42.547"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>C:\\Users\\vinicius.trindade\\banking_continuous_testing\\banking_continuous_testing\\apis\\accreditation\\documents\\holder_documents\\post.${/}..${/}..${/}..${/}..${/}..${/}images${/}accreditation${/}image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210324 11:38:42.549" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210324 11:38:42.554" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210324 11:38:42.548" endtime="20210324 11:38:42.554"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210324 11:38:42.558" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/b9aed5cd8e2542fb89570cdda2d9e546/documents?type=SELFIE, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210324 11:38:42.830" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210324 11:38:42.555" endtime="20210324 11:38:42.830"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210324 11:38:42.832" level="INFO">{'id': 'f8ed72b97a7f4d459e0e8b0e9ebc08ad', 'document_type': 'selfie', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/b9aed5cd8e2542fb89570cdda2d9e546/documents/f8ed72b97a7f4d459e0e8b0e9ebc08ad', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/b9aed5cd8e2542fb89570cdda2d9e546', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/b9aed5cd8e2542fb89570cdda2d9e546/documents/f8ed72b97a7f4d459e0e8b0e9ebc08ad/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210324 11:38:42.831" endtime="20210324 11:38:42.833"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210324 11:38:42.835" level="INFO">a98494b2ef73f99e</msg>
<status status="PASS" starttime="20210324 11:38:42.834" endtime="20210324 11:38:42.836"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210324 11:38:42.837" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210324 11:38:42.836" endtime="20210324 11:38:42.837"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210324 11:38:42.840" level="INFO">${document_external_key} = f8ed72b97a7f4d459e0e8b0e9ebc08ad</msg>
<status status="PASS" starttime="20210324 11:38:42.838" endtime="20210324 11:38:42.841"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210324 11:38:42.843" level="INFO">${document_external_key} = f8ed72b97a7f4d459e0e8b0e9ebc08ad</msg>
<status status="PASS" starttime="20210324 11:38:42.841" endtime="20210324 11:38:42.843"></status>
</kw>
<status status="PASS" starttime="20210324 11:38:42.544" endtime="20210324 11:38:42.844"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210324 11:38:42.846" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210324 11:38:42.844" endtime="20210324 11:38:42.846"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>RG_FRENTE</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210324 11:38:42.849" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210324 11:38:42.848" endtime="20210324 11:38:42.850"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>C:\\Users\\vinicius.trindade\\banking_continuous_testing\\banking_continuous_testing\\apis\\accreditation\\documents\\holder_documents\\post.${/}..${/}..${/}..${/}..${/}..${/}images${/}accreditation${/}image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210324 11:38:42.852" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210324 11:38:42.856" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210324 11:38:42.850" endtime="20210324 11:38:42.857"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210324 11:38:42.860" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/b9aed5cd8e2542fb89570cdda2d9e546/documents?type=RG_FRENTE, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210324 11:38:43.234" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210324 11:38:42.858" endtime="20210324 11:38:43.234"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210324 11:38:43.236" level="INFO">{'id': '4ea7714c606b489aa26a5cb6f3e329dc', 'document_type': 'rg_frente', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/b9aed5cd8e2542fb89570cdda2d9e546/documents/4ea7714c606b489aa26a5cb6f3e329dc', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/b9aed5cd8e2542fb89570cdda2d9e546', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/b9aed5cd8e2542fb89570cdda2d9e546/documents/4ea7714c606b489aa26a5cb6f3e329dc/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210324 11:38:43.235" endtime="20210324 11:38:43.237"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210324 11:38:43.239" level="INFO">9a2d84dcca68e276</msg>
<status status="PASS" starttime="20210324 11:38:43.238" endtime="20210324 11:38:43.239"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210324 11:38:43.241" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210324 11:38:43.240" endtime="20210324 11:38:43.241"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210324 11:38:43.244" level="INFO">${document_external_key} = 4ea7714c606b489aa26a5cb6f3e329dc</msg>
<status status="PASS" starttime="20210324 11:38:43.242" endtime="20210324 11:38:43.245"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210324 11:38:43.247" level="INFO">${document_external_key} = 4ea7714c606b489aa26a5cb6f3e329dc</msg>
<status status="PASS" starttime="20210324 11:38:43.246" endtime="20210324 11:38:43.247"></status>
</kw>
<status status="PASS" starttime="20210324 11:38:42.847" endtime="20210324 11:38:43.248"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210324 11:38:43.250" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210324 11:38:43.249" endtime="20210324 11:38:43.250"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>RG_VERSO</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210324 11:38:43.254" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210324 11:38:43.253" endtime="20210324 11:38:43.254"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>C:\\Users\\vinicius.trindade\\banking_continuous_testing\\banking_continuous_testing\\apis\\accreditation\\documents\\holder_documents\\post.${/}..${/}..${/}..${/}..${/}..${/}images${/}accreditation${/}image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210324 11:38:43.257" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210324 11:38:43.262" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210324 11:38:43.255" endtime="20210324 11:38:43.262"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210324 11:38:43.267" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/b9aed5cd8e2542fb89570cdda2d9e546/documents?type=RG_VERSO, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210324 11:38:43.562" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210324 11:38:43.264" endtime="20210324 11:38:43.562"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210324 11:38:43.564" level="INFO">{'id': '5b2a57f5e1434462a78460dfe2f6045f', 'document_type': 'rg_verso', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/b9aed5cd8e2542fb89570cdda2d9e546/documents/5b2a57f5e1434462a78460dfe2f6045f', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/b9aed5cd8e2542fb89570cdda2d9e546', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/b9aed5cd8e2542fb89570cdda2d9e546/documents/5b2a57f5e1434462a78460dfe2f6045f/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210324 11:38:43.563" endtime="20210324 11:38:43.565"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210324 11:38:43.567" level="INFO">426ae22d8324694c</msg>
<status status="PASS" starttime="20210324 11:38:43.566" endtime="20210324 11:38:43.567"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210324 11:38:43.569" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210324 11:38:43.568" endtime="20210324 11:38:43.569"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210324 11:38:43.572" level="INFO">${document_external_key} = 5b2a57f5e1434462a78460dfe2f6045f</msg>
<status status="PASS" starttime="20210324 11:38:43.570" endtime="20210324 11:38:43.572"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210324 11:38:43.574" level="INFO">${document_external_key} = 5b2a57f5e1434462a78460dfe2f6045f</msg>
<status status="PASS" starttime="20210324 11:38:43.573" endtime="20210324 11:38:43.575"></status>
</kw>
<status status="PASS" starttime="20210324 11:38:43.251" endtime="20210324 11:38:43.575"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210324 11:38:43.577" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210324 11:38:43.576" endtime="20210324 11:38:43.577"></status>
</kw>
<kw name="solicitar aprovação do holder" library="accreditation_request_approval">
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210324 11:38:43.581" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210324 11:38:43.580" endtime="20210324 11:38:43.581"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/approval</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210324 11:38:43.583" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/b9aed5cd8e2542fb89570cdda2d9e546/approval, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data=None 
json=None</msg>
<msg timestamp="20210324 11:38:43.866" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210324 11:38:43.582" endtime="20210324 11:38:43.866"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210324 11:38:43.867" level="INFO">{'message': 'Approval request accepted successfully. Processing analysis'}</msg>
<status status="PASS" starttime="20210324 11:38:43.866" endtime="20210324 11:38:43.868"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210324 11:38:43.871" level="INFO">647129b7d7ad1cc5</msg>
<status status="PASS" starttime="20210324 11:38:43.869" endtime="20210324 11:38:43.871"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210324 11:38:43.873" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210324 11:38:43.872" endtime="20210324 11:38:43.873"></status>
</kw>
<status status="PASS" starttime="20210324 11:38:43.578" endtime="20210324 11:38:43.873"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210324 11:38:43.876" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210324 11:38:43.874" endtime="20210324 11:38:43.876"></status>
</kw>
<kw name="recebendo notificação de aprovação" library="accreditation_risk_notification">
<kw name="Uuid 4" library="FakerLibrary">
<doc>Generates a random UUID4 string.
:param cast_to: Specify what type the UUID should be cast to. Default is `str`
:type cast_to: callable</doc>
<assign>
<var>${assessment_id}</var>
</assign>
<msg timestamp="20210324 11:38:43.879" level="INFO">${assessment_id} = a8eb1a4f-afe9-47a8-af22-9b584981e3be</msg>
<status status="PASS" starttime="20210324 11:38:43.878" endtime="20210324 11:38:43.879"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>year</arg>
</arguments>
<assign>
<var>${year}</var>
</assign>
<msg timestamp="20210324 11:38:43.881" level="INFO">${year} = 2021</msg>
<status status="PASS" starttime="20210324 11:38:43.880" endtime="20210324 11:38:43.882"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>month</arg>
</arguments>
<assign>
<var>${month}</var>
</assign>
<msg timestamp="20210324 11:38:43.883" level="INFO">${month} = 03</msg>
<status status="PASS" starttime="20210324 11:38:43.883" endtime="20210324 11:38:43.884"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>day</arg>
</arguments>
<assign>
<var>${day}</var>
</assign>
<msg timestamp="20210324 11:38:43.886" level="INFO">${day} = 24</msg>
<status status="PASS" starttime="20210324 11:38:43.884" endtime="20210324 11:38:43.886"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210324 11:38:43.888" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210324 11:38:43.886" endtime="20210324 11:38:43.888"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "risk.assessment.result",</arg>
<arg>"resource": "business.holder",</arg>
<arg>"created_at": "${year}-${month}-${day} 15:28:56.747Z",</arg>
<arg>"marketplace_id": "${marketplace_external_key}",</arg>
<arg>"object": {</arg>
<arg>"result": "APPROVED",</arg>
<arg>"holder_id": "${holder_external_key}",</arg>
<arg>"applicant_id": "${application_external_key}",</arg>
<arg>"assessment_id": "${assessment_id}"</arg>
<arg>}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210324 11:38:43.891" level="INFO">${body} = { "type": "risk.assessment.result", "resource": "business.holder", "created_at": "2021-03-24 15:28:56.747Z", "marketplace_id": "f71a8951368a4cc085cf7875ff44e61c", "object": { "result": "APPROVED", "ho...</msg>
<status status="PASS" starttime="20210324 11:38:43.888" endtime="20210324 11:38:43.891"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/admin/internal_operation/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/registration/approval</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210324 11:38:43.893" level="INFO">POST Request using : uri=/admin/internal_operation/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/b9aed5cd8e2542fb89570cdda2d9e546/registration/approval, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "risk.assessment.result", "resource": "business.holder", "created_at": "2021-03-24 15:28:56.747Z", "marketplace_id": "f71a8951368a4cc085cf7875ff44e61c", "object": { "result": "APPROVED", "holder_id": "b9aed5cd8e2542fb89570cdda2d9e546", "applicant_id": "bcc25a6751c14b52af1340d40dba78c5", "assessment_id": "a8eb1a4f-afe9-47a8-af22-9b584981e3be" } } 
json=None</msg>
<msg timestamp="20210324 11:38:44.094" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210324 11:38:43.891" endtime="20210324 11:38:44.094"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210324 11:38:44.097" level="INFO">{'message': 'Holder approved successfully'}</msg>
<status status="PASS" starttime="20210324 11:38:44.095" endtime="20210324 11:38:44.097"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210324 11:38:44.099" level="INFO">eafd03413f3ce820</msg>
<status status="PASS" starttime="20210324 11:38:44.098" endtime="20210324 11:38:44.100"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210324 11:38:44.102" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210324 11:38:44.100" endtime="20210324 11:38:44.102"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210324 11:38:44.104" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210324 11:38:44.103" endtime="20210324 11:38:44.104"></status>
</kw>
<status status="PASS" starttime="20210324 11:38:43.877" endtime="20210324 11:38:44.105"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210324 11:38:44.107" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210324 11:38:44.106" endtime="20210324 11:38:44.107"></status>
</kw>
<kw name="buscar account por holder" library="accounts_get_accounts_by_holder">
<kw name="conectar accounts" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accounts</arg>
<arg>url=${account_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210324 11:38:44.112" level="INFO">Creating Session using : alias=accounts, url=https://banking-accounts-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210324 11:38:44.111" endtime="20210324 11:38:44.115"></status>
</kw>
<status status="PASS" starttime="20210324 11:38:44.110" endtime="20210324 11:38:44.115"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accounts</arg>
<arg>/marketplaces/${marketplace_external_key}/holders/${holder_external_key}/accounts</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210324 11:38:44.118" level="INFO">GET Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/holders/b9aed5cd8e2542fb89570cdda2d9e546/accounts, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210324 11:38:44.854" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210324 11:38:44.117" endtime="20210324 11:38:44.854"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210324 11:38:44.858" level="INFO">{'items': [{'id': '84188192eeb94ac58ad94637d9bef88f', 'holder': 'b9aed5cd8e2542fb89570cdda2d9e546', 'balance': '0.00', 'currency': 'BRL', 'routing_number': '001', 'number': '6962380854', 'status': 'active', 'metadata': {}, 'created_at': '2021-03-24T14:38:43.713003', 'updated_at': '2021-03-24T14:38:43.713003', 'primary': True, 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'uri': '/v2/marketplaces/f71a8951368a4cc085cf7875ff44e61c/accounts/84188192eeb94ac58ad94637d9bef88f', 'resource': 'payment_account'}], 'has_more': False, 'limit': 100, 'total_pages': 1, 'page': 1, 'offset': 0, 'total': '1', 'query_count': '1'}</msg>
<status status="PASS" starttime="20210324 11:38:44.855" endtime="20210324 11:38:44.858"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210324 11:38:44.860" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210324 11:38:44.859" endtime="20210324 11:38:44.860"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["id"]}</arg>
</arguments>
<assign>
<var>${account_external_key}</var>
</assign>
<msg timestamp="20210324 11:38:44.864" level="INFO">${account_external_key} = 84188192eeb94ac58ad94637d9bef88f</msg>
<status status="PASS" starttime="20210324 11:38:44.861" endtime="20210324 11:38:44.864"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_external_key}</arg>
</arguments>
<msg timestamp="20210324 11:38:44.866" level="INFO">${account_external_key} = 84188192eeb94ac58ad94637d9bef88f</msg>
<status status="PASS" starttime="20210324 11:38:44.865" endtime="20210324 11:38:44.867"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["number"]}</arg>
</arguments>
<assign>
<var>${account_number}</var>
</assign>
<msg timestamp="20210324 11:38:44.869" level="INFO">${account_number} = 6962380854</msg>
<status status="PASS" starttime="20210324 11:38:44.868" endtime="20210324 11:38:44.869"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_number}</arg>
</arguments>
<msg timestamp="20210324 11:38:44.872" level="INFO">${account_number} = 6962380854</msg>
<status status="PASS" starttime="20210324 11:38:44.871" endtime="20210324 11:38:44.872"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["routing_number"]}</arg>
</arguments>
<assign>
<var>${account_routing_number}</var>
</assign>
<msg timestamp="20210324 11:38:44.876" level="INFO">${account_routing_number} = 001</msg>
<status status="PASS" starttime="20210324 11:38:44.873" endtime="20210324 11:38:44.876"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_routing_number}</arg>
</arguments>
<msg timestamp="20210324 11:38:44.878" level="INFO">${account_routing_number} = 001</msg>
<status status="PASS" starttime="20210324 11:38:44.877" endtime="20210324 11:38:44.879"></status>
</kw>
<status status="PASS" starttime="20210324 11:38:44.108" endtime="20210324 11:38:44.879"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210324 11:38:44.885" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210324 11:38:44.882" endtime="20210324 11:38:44.885"></status>
</kw>
<status status="PASS" starttime="20210324 11:38:41.118" endtime="20210324 11:38:44.886"></status>
</kw>
<status status="PASS" starttime="20210324 11:38:41.117" endtime="20210324 11:38:44.886"></status>
</kw>
<kw name="gerar saldo para account" library="account_generate_balance">
<arguments>
<arg>${account_external_key}</arg>
</arguments>
<kw name="Uuid 4" library="FakerLibrary">
<doc>Generates a random UUID4 string.
:param cast_to: Specify what type the UUID should be cast to. Default is `str`
:type cast_to: callable</doc>
<assign>
<var>${uuid}</var>
</assign>
<msg timestamp="20210324 11:38:44.890" level="INFO">${uuid} = 1d31820a-7f0c-428a-bdb6-8995affb188d</msg>
<status status="PASS" starttime="20210324 11:38:44.889" endtime="20210324 11:38:44.891"></status>
</kw>
<kw name="conectar accounts" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accounts</arg>
<arg>url=${account_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210324 11:38:44.894" level="INFO">Creating Session using : alias=accounts, url=https://banking-accounts-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210324 11:38:44.892" endtime="20210324 11:38:44.896"></status>
</kw>
<status status="PASS" starttime="20210324 11:38:44.891" endtime="20210324 11:38:44.897"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210324 11:38:44.898" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210324 11:38:44.897" endtime="20210324 11:38:44.898"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"operations": [</arg>
<arg>{</arg>
<arg>"amount": 9000000000000,</arg>
<arg>"authorization_code": "${uuid}",</arg>
<arg>"transaction_id": "${uuid}",</arg>
<arg>"id": "${uuid}",</arg>
<arg>"id_checking_account": "${account_external_key}",</arg>
<arg>"transfer_date": "2020-02-20T20:58:06.510Z",</arg>
<arg>"fee": 0,</arg>
<arg>"description": "Teste",</arg>
<arg>"object_type": "transfer",</arg>
<arg>"object_id": "${uuid}",</arg>
<arg>"dflag": "ACTIVE",</arg>
<arg>"created_at": "2019-10-14T20:58:06.510Z",</arg>
<arg>"type": "Transfer"</arg>
<arg>}</arg>
<arg>],</arg>
<arg>"reference_id": "Criando saldo na account"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210324 11:38:44.902" level="INFO">${body} = { "operations": [ { "amount": 9000000000000, "authorization_code": "1d31820a-7f0c-428a-bdb6-8995affb188d", "transaction_id": "1d31820a-7f0c-428a-bdb6-8995affb188d", "id": "1d31820a-7f0c-428a-bdb6-8995...</msg>
<status status="PASS" starttime="20210324 11:38:44.899" endtime="20210324 11:38:44.902"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accounts</arg>
<arg>/admin/internal_operation/authorization/${uuid}</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210324 11:38:44.905" level="INFO">POST Request using : uri=/admin/internal_operation/authorization/1d31820a-7f0c-428a-bdb6-8995affb188d, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "operations": [ { "amount": 9000000000000, "authorization_code": "1d31820a-7f0c-428a-bdb6-8995affb188d", "transaction_id": "1d31820a-7f0c-428a-bdb6-8995affb188d", "id": "1d31820a-7f0c-428a-bdb6-8995affb188d", "id_checking_account": "84188192eeb94ac58ad94637d9bef88f", "transfer_date": "2020-02-20T20:58:06.510Z", "fee": 0, "description": "Teste", "object_type": "transfer", "object_id": "1d31820a-7f0c-428a-bdb6-8995affb188d", "dflag": "ACTIVE", "created_at": "2019-10-14T20:58:06.510Z", "type": "Transfer" } ], "reference_id": "Criando saldo na account" } 
json=None</msg>
<msg timestamp="20210324 11:38:45.630" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210324 11:38:44.903" endtime="20210324 11:38:45.631"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.status_code}' == 200</arg>
<arg>Log</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210324 11:38:45.632" endtime="20210324 11:38:45.633"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.status_code}' == 200</arg>
<arg>Log</arg>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<status status="PASS" starttime="20210324 11:38:45.634" endtime="20210324 11:38:45.636"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.status_code}' == 200</arg>
<arg>Log</arg>
<arg>${response.status_code}</arg>
</arguments>
<status status="PASS" starttime="20210324 11:38:45.637" endtime="20210324 11:38:45.638"></status>
</kw>
<status status="PASS" starttime="20210324 11:38:44.887" endtime="20210324 11:38:45.638"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${pix_type}' == 'phone'</arg>
<arg>criar chave pix</arg>
<arg>${pix_type}</arg>
<arg>${phone_pix}</arg>
<arg>ELSE IF</arg>
<arg>'${pix_type}' == 'email'</arg>
<arg>criar chave pix</arg>
<arg>${pix_type}</arg>
<arg>${email_pix}</arg>
<arg>ELSE IF</arg>
<arg>'${pix_type}' == 'evp'</arg>
<arg>criar chave pix</arg>
<arg>${pix_type}</arg>
<arg>${EMPTY}</arg>
<arg>ELSE IF</arg>
<arg>'${pix_type}' == 'national_registration'</arg>
<arg>criar chave pix</arg>
<arg>${pix_type}</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw name="criar chave pix" library="pix_dict_create_entry">
<arguments>
<arg>${pix_type}</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210324 11:38:45.647" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210324 11:38:45.646" endtime="20210324 11:38:45.650"></status>
</kw>
<status status="PASS" starttime="20210324 11:38:45.644" endtime="20210324 11:38:45.651"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${type}</arg>
</arguments>
<msg timestamp="20210324 11:38:45.653" level="INFO">${type} = national_registration</msg>
<status status="PASS" starttime="20210324 11:38:45.652" endtime="20210324 11:38:45.654"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210324 11:38:45.656" level="INFO">${value} = </msg>
<status status="PASS" starttime="20210324 11:38:45.655" endtime="20210324 11:38:45.657"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210324 11:38:45.659" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210324 11:38:45.658" endtime="20210324 11:38:45.660"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "${type}",</arg>
<arg>"value": "${value}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210324 11:38:45.663" level="INFO">${body} = { "type": "national_registration", "value": "" }</msg>
<status status="PASS" starttime="20210324 11:38:45.661" endtime="20210324 11:38:45.663"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210324 11:38:45.666" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/b9aed5cd8e2542fb89570cdda2d9e546/accounts/84188192eeb94ac58ad94637d9bef88f/entries, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "national_registration", "value": "" } 
json=None</msg>
<msg timestamp="20210324 11:38:47.357" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210324 11:38:45.664" endtime="20210324 11:38:47.357"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210324 11:38:47.360" level="INFO">{'id': '644f6ccd00c94a0183f3147610e42dcb', 'status': 'active', 'created_at': '2021-03-24T11:38:46.056', 'updated_at': '2021-03-24T11:38:46.056', 'key': {'value': '85930124698', 'type': 'national_registration'}, 'account': {'id': '84188192eeb94ac58ad94637d9bef88f', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': 'b9aed5cd8e2542fb89570cdda2d9e546', 'owner': {'name': 'Holder de teste', 'national_registration': '85930124698', 'type': 'individual'}, 'routing_number': '001', 'number': '6962380854', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}, 'resource': 'pix.entry'}</msg>
<status status="PASS" starttime="20210324 11:38:47.359" endtime="20210324 11:38:47.361"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210324 11:38:47.363" level="INFO">1abbf6fa6299a4ef</msg>
<status status="PASS" starttime="20210324 11:38:47.362" endtime="20210324 11:38:47.363"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210324 11:38:47.365" level="INFO">201</msg>
<status status="PASS" starttime="20210324 11:38:47.364" endtime="20210324 11:38:47.365"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210324 11:38:47.367" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210324 11:38:47.366" endtime="20210324 11:38:47.368"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${entry_external_key}</var>
</assign>
<msg timestamp="20210324 11:38:47.370" level="INFO">${entry_external_key} = 644f6ccd00c94a0183f3147610e42dcb</msg>
<status status="PASS" starttime="20210324 11:38:47.368" endtime="20210324 11:38:47.371"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${entry_external_key}</arg>
</arguments>
<msg timestamp="20210324 11:38:47.373" level="INFO">${entry_external_key} = 644f6ccd00c94a0183f3147610e42dcb</msg>
<status status="PASS" starttime="20210324 11:38:47.371" endtime="20210324 11:38:47.373"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["key"]["value"]}</arg>
</arguments>
<assign>
<var>${entry_key_value}</var>
</assign>
<msg timestamp="20210324 11:38:47.376" level="INFO">${entry_key_value} = 85930124698</msg>
<status status="PASS" starttime="20210324 11:38:47.374" endtime="20210324 11:38:47.376"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${entry_key_value}</arg>
</arguments>
<msg timestamp="20210324 11:38:47.378" level="INFO">${entry_key_value} = 85930124698</msg>
<status status="PASS" starttime="20210324 11:38:47.377" endtime="20210324 11:38:47.378"></status>
</kw>
<status status="PASS" starttime="20210324 11:38:45.642" endtime="20210324 11:38:47.379"></status>
</kw>
<status status="PASS" starttime="20210324 11:38:45.639" endtime="20210324 11:38:47.379"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${pix_type}' == 'phone'</arg>
<arg>buscar verification code</arg>
<arg>${holder_external_key}</arg>
<arg>${account_external_key}</arg>
<arg>${entry_external_key}</arg>
<arg>ELSE IF</arg>
<arg>'${pix_type}' == 'email'</arg>
<arg>buscar verification code</arg>
<arg>${holder_external_key}</arg>
<arg>${account_external_key}</arg>
<arg>${entry_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210324 11:38:47.380" endtime="20210324 11:38:47.382"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${pix_type}' == 'phone'</arg>
<arg>confirmar propriedade da chave pix</arg>
<arg>${verification_code}</arg>
<arg>${holder_external_key}</arg>
<arg>${account_external_key}</arg>
<arg>${entry_external_key}</arg>
<arg>ELSE IF</arg>
<arg>'${pix_type}' == 'email'</arg>
<arg>confirmar propriedade da chave pix</arg>
<arg>${verification_code}</arg>
<arg>${holder_external_key}</arg>
<arg>${account_external_key}</arg>
<arg>${entry_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210324 11:38:47.382" endtime="20210324 11:38:47.385"></status>
</kw>
<status status="PASS" starttime="20210324 11:38:41.113" endtime="20210324 11:38:47.385"></status>
</kw>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<arguments>
<arg>result_format=datetime</arg>
</arguments>
<assign>
<var>${date}</var>
</assign>
<msg timestamp="20210324 11:38:47.389" level="INFO">${date} = 2021-03-24 11:38:47.388323</msg>
<status status="PASS" starttime="20210324 11:38:47.387" endtime="20210324 11:38:47.389"></status>
</kw>
<kw name="Convert Date" library="DateTime">
<doc>Converts between supported `date formats`.</doc>
<arguments>
<arg>${date}</arg>
<arg>result_format=%Y%m%d%H%M</arg>
</arguments>
<assign>
<var>${datetime}</var>
</assign>
<msg timestamp="20210324 11:38:47.392" level="INFO">${datetime} = 202103241138</msg>
<status status="PASS" starttime="20210324 11:38:47.391" endtime="20210324 11:38:47.392"></status>
</kw>
<kw name="Random Number" library="FakerLibrary">
<doc>Returns a random number with 1 digit (default, when digits==None),
a random number with 0 to given number of digits, or a random number
with given number to given number of digits (when ``fix_len==True``).</doc>
<arguments>
<arg>digits=23</arg>
<arg>fix_len=True</arg>
</arguments>
<assign>
<var>${random_number_message_id}</var>
</assign>
<msg timestamp="20210324 11:38:47.397" level="INFO">${random_number_message_id} = 89538190325257322863558</msg>
<status status="PASS" starttime="20210324 11:38:47.395" endtime="20210324 11:38:47.397"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>M19468242${random_number_message_id}</arg>
</arguments>
<assign>
<var>${message_id}</var>
</assign>
<msg timestamp="20210324 11:38:47.401" level="INFO">${message_id} = M1946824289538190325257322863558</msg>
<status status="PASS" starttime="20210324 11:38:47.400" endtime="20210324 11:38:47.401"></status>
</kw>
<kw name="Random Number" library="FakerLibrary">
<doc>Returns a random number with 1 digit (default, when digits==None),
a random number with 0 to given number of digits, or a random number
with given number to given number of digits (when ``fix_len==True``).</doc>
<arguments>
<arg>digits=11</arg>
<arg>fix_len=True</arg>
</arguments>
<assign>
<var>${random_number_end_to_end_id}</var>
</assign>
<msg timestamp="20210324 11:38:47.406" level="INFO">${random_number_end_to_end_id} = 77328470795</msg>
<status status="PASS" starttime="20210324 11:38:47.404" endtime="20210324 11:38:47.406"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>E19468242${datetime}${random_number_end_to_end_id}</arg>
</arguments>
<assign>
<var>${end_to_end_id}</var>
</assign>
<msg timestamp="20210324 11:38:47.409" level="INFO">${end_to_end_id} = E1946824220210324113877328470795</msg>
<status status="PASS" starttime="20210324 11:38:47.408" endtime="20210324 11:38:47.409"></status>
</kw>
<kw name="receber pagamento pix admin" library="pix_admin_receive_payment">
<arguments>
<arg>end_to_end_id=${end_to_end_id}</arg>
<arg>message_id=${message_id}</arg>
<arg>account_number=${account_number}</arg>
<arg>psp_code=${psp_code}</arg>
<arg>account_rounting_number=${account_routing_number}</arg>
<arg>account_type=${account_type}</arg>
<arg>national_registration=${national_registration}</arg>
</arguments>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<arguments>
<arg>result_format=datetime</arg>
</arguments>
<assign>
<var>${date}</var>
</assign>
<msg timestamp="20210324 11:38:47.417" level="INFO">${date} = 2021-03-24 11:38:47.417318</msg>
<status status="PASS" starttime="20210324 11:38:47.416" endtime="20210324 11:38:47.418"></status>
</kw>
<kw name="Convert Date" library="DateTime">
<doc>Converts between supported `date formats`.</doc>
<arguments>
<arg>${date}</arg>
<arg>result_format=%Y-%m-%d</arg>
</arguments>
<assign>
<var>${datetime}</var>
</assign>
<msg timestamp="20210324 11:38:47.421" level="INFO">${datetime} = 2021-03-24</msg>
<status status="PASS" starttime="20210324 11:38:47.419" endtime="20210324 11:38:47.421"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${datetime}</arg>
</arguments>
<msg timestamp="20210324 11:38:47.423" level="INFO">2021-03-24</msg>
<status status="PASS" starttime="20210324 11:38:47.421" endtime="20210324 11:38:47.423"></status>
</kw>
<kw name="conectar pix-payments" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-payments</arg>
<arg>url=${pix_payments_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210324 11:38:47.427" level="INFO">Creating Session using : alias=pix-payments, url=https://banking-pix-payments-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210324 11:38:47.426" endtime="20210324 11:38:47.428"></status>
</kw>
<status status="PASS" starttime="20210324 11:38:47.424" endtime="20210324 11:38:47.429"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210324 11:38:47.432" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210324 11:38:47.430" endtime="20210324 11:38:47.432"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"acceptance_date_time": "${datetime}T15:55:43.269Z",</arg>
<arg>"amount": 5000000,</arg>
<arg>"end_to_end_id": "${end_to_end_id}",</arg>
<arg>"message_id": "${message_id}",</arg>
<arg>"receiver": {</arg>
<arg>"account_details": {</arg>
<arg>"number": "${account_number}",</arg>
<arg>"psp": "${psp_code}",</arg>
<arg>"routing_number": "${account_rounting_number}",</arg>
<arg>"type": "${account_type}"</arg>
<arg>},</arg>
<arg>"document": "${national_registration}"</arg>
<arg>},</arg>
<arg>"remittance_information": "Teste Crédito PIX",</arg>
<arg>"sender": {</arg>
<arg>"account_details": {</arg>
<arg>"number": "5601560",</arg>
<arg>"psp": "60746958",</arg>
<arg>"routing_number": "001",</arg>
<arg>"type": "cacc"</arg>
<arg>},</arg>
<arg>"document": "34772935177",</arg>
<arg>"identification": "Test Sender",</arg>
<arg>"name": "Carlos Drummont"</arg>
<arg>}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210324 11:38:47.435" level="INFO">${body} = { "acceptance_date_time": "2021-03-24T15:55:43.269Z", "amount": 5000000, "end_to_end_id": "E1946824220210324113877328470795", "message_id": "M1946824289538190325257322863558", "receiver": { "account_d...</msg>
<status status="PASS" starttime="20210324 11:38:47.433" endtime="20210324 11:38:47.436"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-payments</arg>
<arg>/admin/internal_operation/pix</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210324 11:38:47.439" level="INFO">POST Request using : uri=/admin/internal_operation/pix, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "acceptance_date_time": "2021-03-24T15:55:43.269Z", "amount": 5000000, "end_to_end_id": "E1946824220210324113877328470795", "message_id": "M1946824289538190325257322863558", "receiver": { "account_details": { "number": "6962380854", "psp": "19468242", "routing_number": "001", "type": "cacc" }, "document": "85930124698" }, "remittance_information": "Teste Crédito PIX", "sender": { "account_details": { "number": "5601560", "psp": "60746958", "routing_number": "001", "type": "cacc" }, "document": "34772935177", "identification": "Test Sender", "name": "Carlos Drummont" } } 
json=None</msg>
<msg timestamp="20210324 11:38:48.198" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210324 11:38:47.436" endtime="20210324 11:38:48.198"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210324 11:38:48.200" level="INFO">{'id': '301ddf678d364319b054261d0cbb0cd9', 'resource': 'pix_transaction'}</msg>
<status status="PASS" starttime="20210324 11:38:48.199" endtime="20210324 11:38:48.200"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210324 11:38:48.202" level="INFO">5faf5ccf18b46233</msg>
<status status="PASS" starttime="20210324 11:38:48.201" endtime="20210324 11:38:48.203"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210324 11:38:48.204" level="INFO">201</msg>
<status status="PASS" starttime="20210324 11:38:48.204" endtime="20210324 11:38:48.205"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210324 11:38:48.207" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210324 11:38:48.206" endtime="20210324 11:38:48.207"></status>
</kw>
<status status="PASS" starttime="20210324 11:38:47.412" endtime="20210324 11:38:48.208"></status>
</kw>
<kw name="criar chave pix ativa" library="pix_dict_create_active_key_pix">
<arguments>
<arg>individual</arg>
<arg>national_registration</arg>
</arguments>
<kw name="Random Number" library="FakerLibrary">
<doc>Returns a random number with 1 digit (default, when digits==None),
a random number with 0 to given number of digits, or a random number
with given number to given number of digits (when ``fix_len==True``).</doc>
<arguments>
<arg>digits=8</arg>
<arg>fix_len=True</arg>
</arguments>
<assign>
<var>${phone}</var>
</assign>
<msg timestamp="20210324 11:38:48.215" level="INFO">${phone} = 71861701</msg>
<status status="PASS" starttime="20210324 11:38:48.212" endtime="20210324 11:38:48.215"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>+55219${phone}</arg>
</arguments>
<assign>
<var>${phone_pix}</var>
</assign>
<msg timestamp="20210324 11:38:48.216" level="INFO">${phone_pix} = +5521971861701</msg>
<status status="PASS" starttime="20210324 11:38:48.215" endtime="20210324 11:38:48.216"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${phone_pix}</arg>
</arguments>
<msg timestamp="20210324 11:38:48.218" level="INFO">${phone_pix} = +5521971861701</msg>
<status status="PASS" starttime="20210324 11:38:48.217" endtime="20210324 11:38:48.219"></status>
</kw>
<kw name="Email" library="FakerLibrary">
<assign>
<var>${email_pix}</var>
</assign>
<msg timestamp="20210324 11:38:48.221" level="INFO">${email_pix} = gustavocosta@silveira.br</msg>
<status status="PASS" starttime="20210324 11:38:48.220" endtime="20210324 11:38:48.221"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${email_pix}</arg>
</arguments>
<msg timestamp="20210324 11:38:48.223" level="INFO">${email_pix} = gustavocosta@silveira.br</msg>
<status status="PASS" starttime="20210324 11:38:48.222" endtime="20210324 11:38:48.224"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${holder_type}' == 'business'</arg>
<arg>criar holder business ativo</arg>
<arg>ELSE IF</arg>
<arg>'${holder_type}' == 'individual'</arg>
<arg>criar holder individual ativo</arg>
</arguments>
<kw name="criar holder individual ativo" library="accreditation_create_holder_active">
<kw name="conectar accreditation" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accreditation</arg>
<arg>url=${accreditation_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210324 11:38:48.231" level="INFO">Creating Session using : alias=accreditation, url=https://banking-accreditation-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210324 11:38:48.230" endtime="20210324 11:38:48.232"></status>
</kw>
<status status="PASS" starttime="20210324 11:38:48.229" endtime="20210324 11:38:48.232"></status>
</kw>
<kw name="Cpf" library="FakerLibrary">
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210324 11:38:48.235" level="INFO">${national_registration} = 547.819.063-20</msg>
<status status="PASS" starttime="20210324 11:38:48.233" endtime="20210324 11:38:48.235"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${national_registration}</arg>
<arg>.</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210324 11:38:48.236" level="INFO">${national_registration} = 547819063-20</msg>
<status status="PASS" starttime="20210324 11:38:48.235" endtime="20210324 11:38:48.236"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${national_registration}</arg>
<arg>-</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210324 11:38:48.239" level="INFO">${national_registration} = 54781906320</msg>
<status status="PASS" starttime="20210324 11:38:48.237" endtime="20210324 11:38:48.239"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${national_registration}</arg>
</arguments>
<msg timestamp="20210324 11:38:48.241" level="INFO">${national_registration} = 54781906320</msg>
<status status="PASS" starttime="20210324 11:38:48.240" endtime="20210324 11:38:48.241"></status>
</kw>
<kw name="Rg" library="FakerLibrary">
<doc>Brazilian RG, return plain numbers.
Check:  https://www.ngmatematica.com/2014/02/como-determinar-o-digito-verificador-do.html</doc>
<assign>
<var>${identity_card}</var>
</assign>
<msg timestamp="20210324 11:38:48.243" level="INFO">${identity_card} = 825017634</msg>
<status status="PASS" starttime="20210324 11:38:48.242" endtime="20210324 11:38:48.244"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${identity_card}</arg>
</arguments>
<msg timestamp="20210324 11:38:48.247" level="INFO">${identity_card} = 825017634</msg>
<status status="PASS" starttime="20210324 11:38:48.244" endtime="20210324 11:38:48.247"></status>
</kw>
<kw name="criar holder individual" library="accreditation_post_holder_individual">
<arguments>
<arg>holder_type=individual</arg>
<arg>holder_name=${holder_name}</arg>
<arg>email=${email}</arg>
<arg>national_registration=${national_registration}</arg>
<arg>revenue=${revenue}</arg>
<arg>birthday=${birthday}</arg>
<arg>mothers_name=${mothers_name}</arg>
<arg>identity_card=${identity_card}</arg>
<arg>pep=false</arg>
<arg>cbo=${cbo}</arg>
</arguments>
<kw name="conectar accreditation" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accreditation</arg>
<arg>url=${accreditation_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210324 11:38:48.255" level="INFO">Creating Session using : alias=accreditation, url=https://banking-accreditation-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210324 11:38:48.253" endtime="20210324 11:38:48.256"></status>
</kw>
<status status="PASS" starttime="20210324 11:38:48.251" endtime="20210324 11:38:48.257"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_type}</arg>
</arguments>
<msg timestamp="20210324 11:38:48.259" level="INFO">${holder_type} = individual</msg>
<status status="PASS" starttime="20210324 11:38:48.258" endtime="20210324 11:38:48.259"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_name}</arg>
</arguments>
<msg timestamp="20210324 11:38:48.263" level="INFO">${holder_name} = Holder de teste</msg>
<status status="PASS" starttime="20210324 11:38:48.260" endtime="20210324 11:38:48.263"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210324 11:38:48.266" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210324 11:38:48.265" endtime="20210324 11:38:48.267"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "${holder_type}",</arg>
<arg>"name": "${holder_name}",</arg>
<arg>"email": "${email}",</arg>
<arg>"national_registration": "${national_registration}",</arg>
<arg>"revenue": ${revenue},</arg>
<arg>"birthday": "${birthday}",</arg>
<arg>"mothers_name": "${mothers_name}",</arg>
<arg>"identity_card": "${identity_card}",</arg>
<arg>"pep": false,</arg>
<arg>"cbo": ${cbo}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210324 11:38:48.272" level="INFO">${body} = { "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "54781906320", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder",...</msg>
<status status="PASS" starttime="20210324 11:38:48.268" endtime="20210324 11:38:48.272"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210324 11:38:48.275" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "54781906320", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder", "identity_card": "825017634", "pep": false, "cbo": 821450 } 
json=None</msg>
<msg timestamp="20210324 11:38:49.011" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210324 11:38:48.273" endtime="20210324 11:38:49.011"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210324 11:38:49.013" level="INFO">{'id': 'a2dffd9ca2f9489e8a54d72402d97f46', 'name': 'Holder de teste', 'revenue': 5500.0, 'email': 'teste@teste.com.br', 'status': 'waiting_info_and_documents', 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'marketplace_name': 'Marketplace de Teste', 'created_at': '2021-03-24T11:38:48.633799', 'updated_at': '2021-03-24T11:38:48.633801', 'type': 'individual', 'national_registration': '54781906320', 'birthday': '1988-04-23', 'mothers_name': 'Mãe do Holder', 'identity_card': '825017634', 'pep': False, 'cbo': '821450', '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/a2dffd9ca2f9489e8a54d72402d97f46', 'type': 'GET'}, 'phones': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/a2dffd9ca2f9489e8a54d72402d97f46/phones', 'type': 'GET'}, 'addresses': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/a2dffd9ca2f9489e8a54d72402d97f46/addresses', 'type': 'GET'}, 'documents': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/a2dffd9ca2f9489e8a54d72402d97f46/documents', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210324 11:38:49.012" endtime="20210324 11:38:49.014"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210324 11:38:49.016" level="INFO">d50b62ddd9d681e8</msg>
<status status="PASS" starttime="20210324 11:38:49.014" endtime="20210324 11:38:49.016"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${body}</arg>
</arguments>
<msg timestamp="20210324 11:38:49.017" level="INFO">{ "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "54781906320", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder", "identity_card": "825017634", "pep": false, "cbo": 821450 }</msg>
<status status="PASS" starttime="20210324 11:38:49.017" endtime="20210324 11:38:49.018"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210324 11:38:49.020" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210324 11:38:49.019" endtime="20210324 11:38:49.020"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${holder_external_key}</var>
</assign>
<msg timestamp="20210324 11:38:49.023" level="INFO">${holder_external_key} = a2dffd9ca2f9489e8a54d72402d97f46</msg>
<status status="PASS" starttime="20210324 11:38:49.022" endtime="20210324 11:38:49.023"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_external_key}</arg>
</arguments>
<msg timestamp="20210324 11:38:49.025" level="INFO">${holder_external_key} = a2dffd9ca2f9489e8a54d72402d97f46</msg>
<status status="PASS" starttime="20210324 11:38:49.024" endtime="20210324 11:38:49.025"></status>
</kw>
<status status="PASS" starttime="20210324 11:38:48.248" endtime="20210324 11:38:49.026"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_name}</arg>
</arguments>
<msg timestamp="20210324 11:38:49.028" level="INFO">${holder_name} = Holder de teste</msg>
<status status="PASS" starttime="20210324 11:38:49.027" endtime="20210324 11:38:49.028"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210324 11:38:49.030" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210324 11:38:49.029" endtime="20210324 11:38:49.030"></status>
</kw>
<kw name="criar holder phone" library="accreditation_post_holder_phone">
<arguments>
<arg>21</arg>
<arg>51</arg>
<arg>996221236</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210324 11:38:49.034" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210324 11:38:49.033" endtime="20210324 11:38:49.034"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"area_code": "${phone_area_code}",</arg>
<arg>"country_code": "${phone_country_code}",</arg>
<arg>"number": "${phone_number}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210324 11:38:49.037" level="INFO">${body} = { "area_code": "21", "country_code": "51", "number": "996221236" }</msg>
<status status="PASS" starttime="20210324 11:38:49.035" endtime="20210324 11:38:49.037"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/phones</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210324 11:38:49.040" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/a2dffd9ca2f9489e8a54d72402d97f46/phones, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "area_code": "21", "country_code": "51", "number": "996221236" } 
json=None</msg>
<msg timestamp="20210324 11:38:49.274" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210324 11:38:49.037" endtime="20210324 11:38:49.275"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210324 11:38:49.277" level="INFO">{'id': 'a8e36146e9f54c5fafbf9d4cc1a8c69a', 'area_code': '21', 'country_code': '51', 'number': '996221236', 'main': True, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/a2dffd9ca2f9489e8a54d72402d97f46/phones/a8e36146e9f54c5fafbf9d4cc1a8c69a', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/a2dffd9ca2f9489e8a54d72402d97f46', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210324 11:38:49.276" endtime="20210324 11:38:49.278"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210324 11:38:49.280" level="INFO">34233e39750a9690</msg>
<status status="PASS" starttime="20210324 11:38:49.278" endtime="20210324 11:38:49.280"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210324 11:38:49.282" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210324 11:38:49.281" endtime="20210324 11:38:49.283"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${phone_external_key}</var>
</assign>
<msg timestamp="20210324 11:38:49.285" level="INFO">${phone_external_key} = a8e36146e9f54c5fafbf9d4cc1a8c69a</msg>
<status status="PASS" starttime="20210324 11:38:49.283" endtime="20210324 11:38:49.286"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${phone_external_key}</arg>
</arguments>
<msg timestamp="20210324 11:38:49.288" level="INFO">${phone_external_key} = a8e36146e9f54c5fafbf9d4cc1a8c69a</msg>
<status status="PASS" starttime="20210324 11:38:49.287" endtime="20210324 11:38:49.288"></status>
</kw>
<status status="PASS" starttime="20210324 11:38:49.031" endtime="20210324 11:38:49.289"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210324 11:38:49.291" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210324 11:38:49.290" endtime="20210324 11:38:49.291"></status>
</kw>
<kw name="criar holder address" library="accreditation_post_holder_address">
<arguments>
<arg>Rio de Janeiro</arg>
<arg>Rio de Janeiro</arg>
<arg>Brasil</arg>
<arg>Bairro de Testes</arg>
<arg>Rua de Testes</arg>
<arg>90</arg>
<arg>apto 200</arg>
<arg>21550987</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210324 11:38:49.295" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210324 11:38:49.294" endtime="20210324 11:38:49.295"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"city": "${city}",</arg>
<arg>"state": "${state}",</arg>
<arg>"country": "${country}",</arg>
<arg>"neighborhood": "${neighborhood}",</arg>
<arg>"street": "${street}",</arg>
<arg>"number": "${number}",</arg>
<arg>"complement": "${complement}",</arg>
<arg>"postal_code": "${postal_code}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210324 11:38:49.299" level="INFO">${body} = { "city": "Rio de Janeiro", "state": "Rio de Janeiro", "country": "Brasil", "neighborhood": "Bairro de Testes", "street": "Rua de Testes", "number": "90", "complement": "apto 200", "postal_code": "215...</msg>
<status status="PASS" starttime="20210324 11:38:49.296" endtime="20210324 11:38:49.299"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/addresses</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210324 11:38:49.303" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/a2dffd9ca2f9489e8a54d72402d97f46/addresses, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "city": "Rio de Janeiro", "state": "Rio de Janeiro", "country": "Brasil", "neighborhood": "Bairro de Testes", "street": "Rua de Testes", "number": "90", "complement": "apto 200", "postal_code": "21550987" } 
json=None</msg>
<msg timestamp="20210324 11:38:49.530" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210324 11:38:49.300" endtime="20210324 11:38:49.531"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210324 11:38:49.533" level="INFO">{'id': '5c5e034f0dee443dbd969e25b80dbbd1', 'street': 'Rua de Testes', 'number': '90', 'city': 'Rio de Janeiro', 'complement': 'apto 200', 'state': 'Rio de Janeiro', 'neighborhood': 'Bairro de Testes', 'postal_code': '21550987', 'country': 'Brasil', 'main': True, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/a2dffd9ca2f9489e8a54d72402d97f46/addresses/5c5e034f0dee443dbd969e25b80dbbd1', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/a2dffd9ca2f9489e8a54d72402d97f46', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210324 11:38:49.532" endtime="20210324 11:38:49.533"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210324 11:38:49.535" level="INFO">ed7a4f60d62b45e2</msg>
<status status="PASS" starttime="20210324 11:38:49.534" endtime="20210324 11:38:49.536"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210324 11:38:49.538" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210324 11:38:49.537" endtime="20210324 11:38:49.538"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${address_external_key}</var>
</assign>
<msg timestamp="20210324 11:38:49.541" level="INFO">${address_external_key} = 5c5e034f0dee443dbd969e25b80dbbd1</msg>
<status status="PASS" starttime="20210324 11:38:49.539" endtime="20210324 11:38:49.541"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${address_external_key}</arg>
</arguments>
<msg timestamp="20210324 11:38:49.544" level="INFO">${address_external_key} = 5c5e034f0dee443dbd969e25b80dbbd1</msg>
<status status="PASS" starttime="20210324 11:38:49.542" endtime="20210324 11:38:49.544"></status>
</kw>
<status status="PASS" starttime="20210324 11:38:49.292" endtime="20210324 11:38:49.544"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210324 11:38:49.546" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210324 11:38:49.545" endtime="20210324 11:38:49.547"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>SELFIE</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210324 11:38:49.550" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210324 11:38:49.549" endtime="20210324 11:38:49.551"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>C:\\Users\\vinicius.trindade\\banking_continuous_testing\\banking_continuous_testing\\apis\\accreditation\\documents\\holder_documents\\post.${/}..${/}..${/}..${/}..${/}..${/}images${/}accreditation${/}image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210324 11:38:49.553" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210324 11:38:49.558" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210324 11:38:49.551" endtime="20210324 11:38:49.558"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210324 11:38:49.562" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/a2dffd9ca2f9489e8a54d72402d97f46/documents?type=SELFIE, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210324 11:38:49.906" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210324 11:38:49.559" endtime="20210324 11:38:49.907"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210324 11:38:49.909" level="INFO">{'id': '2afe57c337934cba9f07b96a13ae892c', 'document_type': 'selfie', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/a2dffd9ca2f9489e8a54d72402d97f46/documents/2afe57c337934cba9f07b96a13ae892c', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/a2dffd9ca2f9489e8a54d72402d97f46', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/a2dffd9ca2f9489e8a54d72402d97f46/documents/2afe57c337934cba9f07b96a13ae892c/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210324 11:38:49.908" endtime="20210324 11:38:49.910"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210324 11:38:49.912" level="INFO">728d1b7a5e0a01b6</msg>
<status status="PASS" starttime="20210324 11:38:49.911" endtime="20210324 11:38:49.912"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210324 11:38:49.914" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210324 11:38:49.913" endtime="20210324 11:38:49.915"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210324 11:38:49.918" level="INFO">${document_external_key} = 2afe57c337934cba9f07b96a13ae892c</msg>
<status status="PASS" starttime="20210324 11:38:49.916" endtime="20210324 11:38:49.918"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210324 11:38:49.920" level="INFO">${document_external_key} = 2afe57c337934cba9f07b96a13ae892c</msg>
<status status="PASS" starttime="20210324 11:38:49.919" endtime="20210324 11:38:49.920"></status>
</kw>
<status status="PASS" starttime="20210324 11:38:49.548" endtime="20210324 11:38:49.921"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210324 11:38:49.923" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210324 11:38:49.922" endtime="20210324 11:38:49.923"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>RG_FRENTE</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210324 11:38:49.927" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210324 11:38:49.926" endtime="20210324 11:38:49.927"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>C:\\Users\\vinicius.trindade\\banking_continuous_testing\\banking_continuous_testing\\apis\\accreditation\\documents\\holder_documents\\post.${/}..${/}..${/}..${/}..${/}..${/}images${/}accreditation${/}image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210324 11:38:49.930" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210324 11:38:49.935" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210324 11:38:49.928" endtime="20210324 11:38:49.935"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210324 11:38:49.939" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/a2dffd9ca2f9489e8a54d72402d97f46/documents?type=RG_FRENTE, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210324 11:38:50.340" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210324 11:38:49.936" endtime="20210324 11:38:50.341"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210324 11:38:50.344" level="INFO">{'id': '7a68552aa45f456e8d7743f9d1e7a7b0', 'document_type': 'rg_frente', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/a2dffd9ca2f9489e8a54d72402d97f46/documents/7a68552aa45f456e8d7743f9d1e7a7b0', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/a2dffd9ca2f9489e8a54d72402d97f46', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/a2dffd9ca2f9489e8a54d72402d97f46/documents/7a68552aa45f456e8d7743f9d1e7a7b0/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210324 11:38:50.342" endtime="20210324 11:38:50.344"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210324 11:38:50.346" level="INFO">439fbdc490a91ff9</msg>
<status status="PASS" starttime="20210324 11:38:50.344" endtime="20210324 11:38:50.346"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210324 11:38:50.348" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210324 11:38:50.347" endtime="20210324 11:38:50.349"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210324 11:38:50.351" level="INFO">${document_external_key} = 7a68552aa45f456e8d7743f9d1e7a7b0</msg>
<status status="PASS" starttime="20210324 11:38:50.350" endtime="20210324 11:38:50.352"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210324 11:38:50.354" level="INFO">${document_external_key} = 7a68552aa45f456e8d7743f9d1e7a7b0</msg>
<status status="PASS" starttime="20210324 11:38:50.353" endtime="20210324 11:38:50.354"></status>
</kw>
<status status="PASS" starttime="20210324 11:38:49.924" endtime="20210324 11:38:50.354"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210324 11:38:50.356" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210324 11:38:50.355" endtime="20210324 11:38:50.357"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>RG_VERSO</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210324 11:38:50.360" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210324 11:38:50.359" endtime="20210324 11:38:50.360"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>C:\\Users\\vinicius.trindade\\banking_continuous_testing\\banking_continuous_testing\\apis\\accreditation\\documents\\holder_documents\\post.${/}..${/}..${/}..${/}..${/}..${/}images${/}accreditation${/}image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210324 11:38:50.363" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210324 11:38:50.368" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210324 11:38:50.361" endtime="20210324 11:38:50.368"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210324 11:38:50.372" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/a2dffd9ca2f9489e8a54d72402d97f46/documents?type=RG_VERSO, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210324 11:38:50.700" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210324 11:38:50.369" endtime="20210324 11:38:50.700"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210324 11:38:50.703" level="INFO">{'id': 'a046fc4975ed41e59ecca29564db7064', 'document_type': 'rg_verso', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/a2dffd9ca2f9489e8a54d72402d97f46/documents/a046fc4975ed41e59ecca29564db7064', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/a2dffd9ca2f9489e8a54d72402d97f46', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/a2dffd9ca2f9489e8a54d72402d97f46/documents/a046fc4975ed41e59ecca29564db7064/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210324 11:38:50.701" endtime="20210324 11:38:50.703"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210324 11:38:50.705" level="INFO">cf3e1ec0844d4094</msg>
<status status="PASS" starttime="20210324 11:38:50.704" endtime="20210324 11:38:50.706"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210324 11:38:50.708" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210324 11:38:50.706" endtime="20210324 11:38:50.708"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210324 11:38:50.711" level="INFO">${document_external_key} = a046fc4975ed41e59ecca29564db7064</msg>
<status status="PASS" starttime="20210324 11:38:50.709" endtime="20210324 11:38:50.711"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210324 11:38:50.714" level="INFO">${document_external_key} = a046fc4975ed41e59ecca29564db7064</msg>
<status status="PASS" starttime="20210324 11:38:50.713" endtime="20210324 11:38:50.714"></status>
</kw>
<status status="PASS" starttime="20210324 11:38:50.357" endtime="20210324 11:38:50.715"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210324 11:38:50.717" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210324 11:38:50.716" endtime="20210324 11:38:50.717"></status>
</kw>
<kw name="solicitar aprovação do holder" library="accreditation_request_approval">
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210324 11:38:50.721" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210324 11:38:50.719" endtime="20210324 11:38:50.721"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/approval</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210324 11:38:50.723" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/a2dffd9ca2f9489e8a54d72402d97f46/approval, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data=None 
json=None</msg>
<msg timestamp="20210324 11:38:51.009" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210324 11:38:50.722" endtime="20210324 11:38:51.010"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210324 11:38:51.012" level="INFO">{'message': 'Approval request accepted successfully. Processing analysis'}</msg>
<status status="PASS" starttime="20210324 11:38:51.011" endtime="20210324 11:38:51.012"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210324 11:38:51.015" level="INFO">6de9d2f5ce956324</msg>
<status status="PASS" starttime="20210324 11:38:51.013" endtime="20210324 11:38:51.015"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210324 11:38:51.017" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210324 11:38:51.016" endtime="20210324 11:38:51.017"></status>
</kw>
<status status="PASS" starttime="20210324 11:38:50.718" endtime="20210324 11:38:51.018"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210324 11:38:51.020" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210324 11:38:51.019" endtime="20210324 11:38:51.020"></status>
</kw>
<kw name="recebendo notificação de aprovação" library="accreditation_risk_notification">
<kw name="Uuid 4" library="FakerLibrary">
<doc>Generates a random UUID4 string.
:param cast_to: Specify what type the UUID should be cast to. Default is `str`
:type cast_to: callable</doc>
<assign>
<var>${assessment_id}</var>
</assign>
<msg timestamp="20210324 11:38:51.024" level="INFO">${assessment_id} = 624512f1-e6fd-4a68-a97e-c943d369a090</msg>
<status status="PASS" starttime="20210324 11:38:51.023" endtime="20210324 11:38:51.024"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>year</arg>
</arguments>
<assign>
<var>${year}</var>
</assign>
<msg timestamp="20210324 11:38:51.026" level="INFO">${year} = 2021</msg>
<status status="PASS" starttime="20210324 11:38:51.025" endtime="20210324 11:38:51.026"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>month</arg>
</arguments>
<assign>
<var>${month}</var>
</assign>
<msg timestamp="20210324 11:38:51.028" level="INFO">${month} = 03</msg>
<status status="PASS" starttime="20210324 11:38:51.027" endtime="20210324 11:38:51.028"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>day</arg>
</arguments>
<assign>
<var>${day}</var>
</assign>
<msg timestamp="20210324 11:38:51.031" level="INFO">${day} = 24</msg>
<status status="PASS" starttime="20210324 11:38:51.029" endtime="20210324 11:38:51.031"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210324 11:38:51.033" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210324 11:38:51.032" endtime="20210324 11:38:51.033"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "risk.assessment.result",</arg>
<arg>"resource": "business.holder",</arg>
<arg>"created_at": "${year}-${month}-${day} 15:28:56.747Z",</arg>
<arg>"marketplace_id": "${marketplace_external_key}",</arg>
<arg>"object": {</arg>
<arg>"result": "APPROVED",</arg>
<arg>"holder_id": "${holder_external_key}",</arg>
<arg>"applicant_id": "${application_external_key}",</arg>
<arg>"assessment_id": "${assessment_id}"</arg>
<arg>}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210324 11:38:51.036" level="INFO">${body} = { "type": "risk.assessment.result", "resource": "business.holder", "created_at": "2021-03-24 15:28:56.747Z", "marketplace_id": "f71a8951368a4cc085cf7875ff44e61c", "object": { "result": "APPROVED", "ho...</msg>
<status status="PASS" starttime="20210324 11:38:51.034" endtime="20210324 11:38:51.036"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/admin/internal_operation/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/registration/approval</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210324 11:38:51.039" level="INFO">POST Request using : uri=/admin/internal_operation/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/a2dffd9ca2f9489e8a54d72402d97f46/registration/approval, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "risk.assessment.result", "resource": "business.holder", "created_at": "2021-03-24 15:28:56.747Z", "marketplace_id": "f71a8951368a4cc085cf7875ff44e61c", "object": { "result": "APPROVED", "holder_id": "a2dffd9ca2f9489e8a54d72402d97f46", "applicant_id": "bcc25a6751c14b52af1340d40dba78c5", "assessment_id": "624512f1-e6fd-4a68-a97e-c943d369a090" } } 
json=None</msg>
<msg timestamp="20210324 11:38:51.250" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210324 11:38:51.037" endtime="20210324 11:38:51.251"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210324 11:38:51.253" level="INFO">{'message': 'Holder approved successfully'}</msg>
<status status="PASS" starttime="20210324 11:38:51.252" endtime="20210324 11:38:51.254"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210324 11:38:51.256" level="INFO">1bdf49589087ab86</msg>
<status status="PASS" starttime="20210324 11:38:51.254" endtime="20210324 11:38:51.256"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210324 11:38:51.258" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210324 11:38:51.257" endtime="20210324 11:38:51.258"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210324 11:38:51.260" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210324 11:38:51.259" endtime="20210324 11:38:51.261"></status>
</kw>
<status status="PASS" starttime="20210324 11:38:51.021" endtime="20210324 11:38:51.261"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210324 11:38:51.263" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210324 11:38:51.262" endtime="20210324 11:38:51.264"></status>
</kw>
<kw name="buscar account por holder" library="accounts_get_accounts_by_holder">
<kw name="conectar accounts" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accounts</arg>
<arg>url=${account_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210324 11:38:51.269" level="INFO">Creating Session using : alias=accounts, url=https://banking-accounts-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210324 11:38:51.268" endtime="20210324 11:38:51.271"></status>
</kw>
<status status="PASS" starttime="20210324 11:38:51.266" endtime="20210324 11:38:51.271"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accounts</arg>
<arg>/marketplaces/${marketplace_external_key}/holders/${holder_external_key}/accounts</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210324 11:38:51.274" level="INFO">GET Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/holders/a2dffd9ca2f9489e8a54d72402d97f46/accounts, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210324 11:38:52.007" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210324 11:38:51.272" endtime="20210324 11:38:52.007"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210324 11:38:52.010" level="INFO">{'items': [{'id': '0049d15b5f514af09e7afd07ce01899c', 'holder': 'a2dffd9ca2f9489e8a54d72402d97f46', 'balance': '0.00', 'currency': 'BRL', 'routing_number': '001', 'number': '1694277514', 'status': 'active', 'metadata': {}, 'created_at': '2021-03-24T14:38:50.86708', 'updated_at': '2021-03-24T14:38:50.86708', 'primary': True, 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'uri': '/v2/marketplaces/f71a8951368a4cc085cf7875ff44e61c/accounts/0049d15b5f514af09e7afd07ce01899c', 'resource': 'payment_account'}], 'has_more': False, 'limit': 100, 'total_pages': 1, 'page': 1, 'offset': 0, 'total': '1', 'query_count': '1'}</msg>
<status status="PASS" starttime="20210324 11:38:52.008" endtime="20210324 11:38:52.010"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210324 11:38:52.012" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210324 11:38:52.011" endtime="20210324 11:38:52.013"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["id"]}</arg>
</arguments>
<assign>
<var>${account_external_key}</var>
</assign>
<msg timestamp="20210324 11:38:52.016" level="INFO">${account_external_key} = 0049d15b5f514af09e7afd07ce01899c</msg>
<status status="PASS" starttime="20210324 11:38:52.014" endtime="20210324 11:38:52.016"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_external_key}</arg>
</arguments>
<msg timestamp="20210324 11:38:52.018" level="INFO">${account_external_key} = 0049d15b5f514af09e7afd07ce01899c</msg>
<status status="PASS" starttime="20210324 11:38:52.017" endtime="20210324 11:38:52.018"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["number"]}</arg>
</arguments>
<assign>
<var>${account_number}</var>
</assign>
<msg timestamp="20210324 11:38:52.021" level="INFO">${account_number} = 1694277514</msg>
<status status="PASS" starttime="20210324 11:38:52.019" endtime="20210324 11:38:52.021"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_number}</arg>
</arguments>
<msg timestamp="20210324 11:38:52.023" level="INFO">${account_number} = 1694277514</msg>
<status status="PASS" starttime="20210324 11:38:52.022" endtime="20210324 11:38:52.023"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["routing_number"]}</arg>
</arguments>
<assign>
<var>${account_routing_number}</var>
</assign>
<msg timestamp="20210324 11:38:52.026" level="INFO">${account_routing_number} = 001</msg>
<status status="PASS" starttime="20210324 11:38:52.024" endtime="20210324 11:38:52.026"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_routing_number}</arg>
</arguments>
<msg timestamp="20210324 11:38:52.029" level="INFO">${account_routing_number} = 001</msg>
<status status="PASS" starttime="20210324 11:38:52.027" endtime="20210324 11:38:52.029"></status>
</kw>
<status status="PASS" starttime="20210324 11:38:51.265" endtime="20210324 11:38:52.029"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210324 11:38:52.031" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210324 11:38:52.030" endtime="20210324 11:38:52.032"></status>
</kw>
<status status="PASS" starttime="20210324 11:38:48.227" endtime="20210324 11:38:52.032"></status>
</kw>
<status status="PASS" starttime="20210324 11:38:48.225" endtime="20210324 11:38:52.032"></status>
</kw>
<kw name="gerar saldo para account" library="account_generate_balance">
<arguments>
<arg>${account_external_key}</arg>
</arguments>
<kw name="Uuid 4" library="FakerLibrary">
<doc>Generates a random UUID4 string.
:param cast_to: Specify what type the UUID should be cast to. Default is `str`
:type cast_to: callable</doc>
<assign>
<var>${uuid}</var>
</assign>
<msg timestamp="20210324 11:38:52.035" level="INFO">${uuid} = 481218fd-2bf7-488a-99cb-625dc17b0cac</msg>
<status status="PASS" starttime="20210324 11:38:52.035" endtime="20210324 11:38:52.035"></status>
</kw>
<kw name="conectar accounts" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accounts</arg>
<arg>url=${account_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210324 11:38:52.038" level="INFO">Creating Session using : alias=accounts, url=https://banking-accounts-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210324 11:38:52.037" endtime="20210324 11:38:52.039"></status>
</kw>
<status status="PASS" starttime="20210324 11:38:52.036" endtime="20210324 11:38:52.040"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210324 11:38:52.041" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210324 11:38:52.040" endtime="20210324 11:38:52.042"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"operations": [</arg>
<arg>{</arg>
<arg>"amount": 9000000000000,</arg>
<arg>"authorization_code": "${uuid}",</arg>
<arg>"transaction_id": "${uuid}",</arg>
<arg>"id": "${uuid}",</arg>
<arg>"id_checking_account": "${account_external_key}",</arg>
<arg>"transfer_date": "2020-02-20T20:58:06.510Z",</arg>
<arg>"fee": 0,</arg>
<arg>"description": "Teste",</arg>
<arg>"object_type": "transfer",</arg>
<arg>"object_id": "${uuid}",</arg>
<arg>"dflag": "ACTIVE",</arg>
<arg>"created_at": "2019-10-14T20:58:06.510Z",</arg>
<arg>"type": "Transfer"</arg>
<arg>}</arg>
<arg>],</arg>
<arg>"reference_id": "Criando saldo na account"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210324 11:38:52.044" level="INFO">${body} = { "operations": [ { "amount": 9000000000000, "authorization_code": "481218fd-2bf7-488a-99cb-625dc17b0cac", "transaction_id": "481218fd-2bf7-488a-99cb-625dc17b0cac", "id": "481218fd-2bf7-488a-99cb-625d...</msg>
<status status="PASS" starttime="20210324 11:38:52.042" endtime="20210324 11:38:52.044"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accounts</arg>
<arg>/admin/internal_operation/authorization/${uuid}</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210324 11:38:52.047" level="INFO">POST Request using : uri=/admin/internal_operation/authorization/481218fd-2bf7-488a-99cb-625dc17b0cac, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "operations": [ { "amount": 9000000000000, "authorization_code": "481218fd-2bf7-488a-99cb-625dc17b0cac", "transaction_id": "481218fd-2bf7-488a-99cb-625dc17b0cac", "id": "481218fd-2bf7-488a-99cb-625dc17b0cac", "id_checking_account": "0049d15b5f514af09e7afd07ce01899c", "transfer_date": "2020-02-20T20:58:06.510Z", "fee": 0, "description": "Teste", "object_type": "transfer", "object_id": "481218fd-2bf7-488a-99cb-625dc17b0cac", "dflag": "ACTIVE", "created_at": "2019-10-14T20:58:06.510Z", "type": "Transfer" } ], "reference_id": "Criando saldo na account" } 
json=None</msg>
<msg timestamp="20210324 11:38:52.766" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210324 11:38:52.045" endtime="20210324 11:38:52.767"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.status_code}' == 200</arg>
<arg>Log</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210324 11:38:52.768" endtime="20210324 11:38:52.769"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.status_code}' == 200</arg>
<arg>Log</arg>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<status status="PASS" starttime="20210324 11:38:52.770" endtime="20210324 11:38:52.772"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.status_code}' == 200</arg>
<arg>Log</arg>
<arg>${response.status_code}</arg>
</arguments>
<status status="PASS" starttime="20210324 11:38:52.773" endtime="20210324 11:38:52.774"></status>
</kw>
<status status="PASS" starttime="20210324 11:38:52.033" endtime="20210324 11:38:52.775"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${pix_type}' == 'phone'</arg>
<arg>criar chave pix</arg>
<arg>${pix_type}</arg>
<arg>${phone_pix}</arg>
<arg>ELSE IF</arg>
<arg>'${pix_type}' == 'email'</arg>
<arg>criar chave pix</arg>
<arg>${pix_type}</arg>
<arg>${email_pix}</arg>
<arg>ELSE IF</arg>
<arg>'${pix_type}' == 'evp'</arg>
<arg>criar chave pix</arg>
<arg>${pix_type}</arg>
<arg>${EMPTY}</arg>
<arg>ELSE IF</arg>
<arg>'${pix_type}' == 'national_registration'</arg>
<arg>criar chave pix</arg>
<arg>${pix_type}</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw name="criar chave pix" library="pix_dict_create_entry">
<arguments>
<arg>${pix_type}</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210324 11:38:52.783" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210324 11:38:52.782" endtime="20210324 11:38:52.785"></status>
</kw>
<status status="PASS" starttime="20210324 11:38:52.780" endtime="20210324 11:38:52.786"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${type}</arg>
</arguments>
<msg timestamp="20210324 11:38:52.787" level="INFO">${type} = national_registration</msg>
<status status="PASS" starttime="20210324 11:38:52.786" endtime="20210324 11:38:52.788"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210324 11:38:52.790" level="INFO">${value} = </msg>
<status status="PASS" starttime="20210324 11:38:52.789" endtime="20210324 11:38:52.790"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210324 11:38:52.792" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210324 11:38:52.791" endtime="20210324 11:38:52.792"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "${type}",</arg>
<arg>"value": "${value}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210324 11:38:52.794" level="INFO">${body} = { "type": "national_registration", "value": "" }</msg>
<status status="PASS" starttime="20210324 11:38:52.793" endtime="20210324 11:38:52.794"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210324 11:38:52.797" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/a2dffd9ca2f9489e8a54d72402d97f46/accounts/0049d15b5f514af09e7afd07ce01899c/entries, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "national_registration", "value": "" } 
json=None</msg>
<msg timestamp="20210324 11:38:54.593" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210324 11:38:52.795" endtime="20210324 11:38:54.593"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210324 11:38:54.595" level="INFO">{'id': '77a10b42f5d348ad91f24e69b9d2de18', 'status': 'active', 'created_at': '2021-03-24T11:38:53.197', 'updated_at': '2021-03-24T11:38:53.197', 'key': {'value': '54781906320', 'type': 'national_registration'}, 'account': {'id': '0049d15b5f514af09e7afd07ce01899c', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': 'a2dffd9ca2f9489e8a54d72402d97f46', 'owner': {'name': 'Holder de teste', 'national_registration': '54781906320', 'type': 'individual'}, 'routing_number': '001', 'number': '1694277514', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}, 'resource': 'pix.entry'}</msg>
<status status="PASS" starttime="20210324 11:38:54.594" endtime="20210324 11:38:54.596"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210324 11:38:54.598" level="INFO">e840cb30f5a6059a</msg>
<status status="PASS" starttime="20210324 11:38:54.597" endtime="20210324 11:38:54.598"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210324 11:38:54.601" level="INFO">201</msg>
<status status="PASS" starttime="20210324 11:38:54.600" endtime="20210324 11:38:54.601"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210324 11:38:54.603" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210324 11:38:54.602" endtime="20210324 11:38:54.604"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${entry_external_key}</var>
</assign>
<msg timestamp="20210324 11:38:54.607" level="INFO">${entry_external_key} = 77a10b42f5d348ad91f24e69b9d2de18</msg>
<status status="PASS" starttime="20210324 11:38:54.605" endtime="20210324 11:38:54.607"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${entry_external_key}</arg>
</arguments>
<msg timestamp="20210324 11:38:54.609" level="INFO">${entry_external_key} = 77a10b42f5d348ad91f24e69b9d2de18</msg>
<status status="PASS" starttime="20210324 11:38:54.608" endtime="20210324 11:38:54.610"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["key"]["value"]}</arg>
</arguments>
<assign>
<var>${entry_key_value}</var>
</assign>
<msg timestamp="20210324 11:38:54.613" level="INFO">${entry_key_value} = 54781906320</msg>
<status status="PASS" starttime="20210324 11:38:54.611" endtime="20210324 11:38:54.613"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${entry_key_value}</arg>
</arguments>
<msg timestamp="20210324 11:38:54.615" level="INFO">${entry_key_value} = 54781906320</msg>
<status status="PASS" starttime="20210324 11:38:54.614" endtime="20210324 11:38:54.615"></status>
</kw>
<status status="PASS" starttime="20210324 11:38:52.779" endtime="20210324 11:38:54.616"></status>
</kw>
<status status="PASS" starttime="20210324 11:38:52.776" endtime="20210324 11:38:54.616"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${pix_type}' == 'phone'</arg>
<arg>buscar verification code</arg>
<arg>${holder_external_key}</arg>
<arg>${account_external_key}</arg>
<arg>${entry_external_key}</arg>
<arg>ELSE IF</arg>
<arg>'${pix_type}' == 'email'</arg>
<arg>buscar verification code</arg>
<arg>${holder_external_key}</arg>
<arg>${account_external_key}</arg>
<arg>${entry_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210324 11:38:54.618" endtime="20210324 11:38:54.619"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${pix_type}' == 'phone'</arg>
<arg>confirmar propriedade da chave pix</arg>
<arg>${verification_code}</arg>
<arg>${holder_external_key}</arg>
<arg>${account_external_key}</arg>
<arg>${entry_external_key}</arg>
<arg>ELSE IF</arg>
<arg>'${pix_type}' == 'email'</arg>
<arg>confirmar propriedade da chave pix</arg>
<arg>${verification_code}</arg>
<arg>${holder_external_key}</arg>
<arg>${account_external_key}</arg>
<arg>${entry_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210324 11:38:54.620" endtime="20210324 11:38:54.621"></status>
</kw>
<status status="PASS" starttime="20210324 11:38:48.211" endtime="20210324 11:38:54.622"></status>
</kw>
<kw name="receber pagamento pix admin" library="pix_admin_receive_payment">
<arguments>
<arg>end_to_end_id=${end_to_end_id}</arg>
<arg>message_id=${message_id}</arg>
<arg>account_number=${account_number}</arg>
<arg>psp_code=${psp_code}</arg>
<arg>account_rounting_number=${account_routing_number}</arg>
<arg>account_type=${account_type}</arg>
<arg>national_registration=${national_registration}</arg>
</arguments>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<arguments>
<arg>result_format=datetime</arg>
</arguments>
<assign>
<var>${date}</var>
</assign>
<msg timestamp="20210324 11:38:54.634" level="INFO">${date} = 2021-03-24 11:38:54.633618</msg>
<status status="PASS" starttime="20210324 11:38:54.633" endtime="20210324 11:38:54.634"></status>
</kw>
<kw name="Convert Date" library="DateTime">
<doc>Converts between supported `date formats`.</doc>
<arguments>
<arg>${date}</arg>
<arg>result_format=%Y-%m-%d</arg>
</arguments>
<assign>
<var>${datetime}</var>
</assign>
<msg timestamp="20210324 11:38:54.636" level="INFO">${datetime} = 2021-03-24</msg>
<status status="PASS" starttime="20210324 11:38:54.636" endtime="20210324 11:38:54.636"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${datetime}</arg>
</arguments>
<msg timestamp="20210324 11:38:54.638" level="INFO">2021-03-24</msg>
<status status="PASS" starttime="20210324 11:38:54.638" endtime="20210324 11:38:54.638"></status>
</kw>
<kw name="conectar pix-payments" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-payments</arg>
<arg>url=${pix_payments_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210324 11:38:54.642" level="INFO">Creating Session using : alias=pix-payments, url=https://banking-pix-payments-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210324 11:38:54.641" endtime="20210324 11:38:54.644"></status>
</kw>
<status status="PASS" starttime="20210324 11:38:54.639" endtime="20210324 11:38:54.645"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210324 11:38:54.647" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210324 11:38:54.646" endtime="20210324 11:38:54.649"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"acceptance_date_time": "${datetime}T15:55:43.269Z",</arg>
<arg>"amount": 5000000,</arg>
<arg>"end_to_end_id": "${end_to_end_id}",</arg>
<arg>"message_id": "${message_id}",</arg>
<arg>"receiver": {</arg>
<arg>"account_details": {</arg>
<arg>"number": "${account_number}",</arg>
<arg>"psp": "${psp_code}",</arg>
<arg>"routing_number": "${account_rounting_number}",</arg>
<arg>"type": "${account_type}"</arg>
<arg>},</arg>
<arg>"document": "${national_registration}"</arg>
<arg>},</arg>
<arg>"remittance_information": "Teste Crédito PIX",</arg>
<arg>"sender": {</arg>
<arg>"account_details": {</arg>
<arg>"number": "5601560",</arg>
<arg>"psp": "60746958",</arg>
<arg>"routing_number": "001",</arg>
<arg>"type": "cacc"</arg>
<arg>},</arg>
<arg>"document": "34772935177",</arg>
<arg>"identification": "Test Sender",</arg>
<arg>"name": "Carlos Drummont"</arg>
<arg>}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210324 11:38:54.653" level="INFO">${body} = { "acceptance_date_time": "2021-03-24T15:55:43.269Z", "amount": 5000000, "end_to_end_id": "E1946824220210324113877328470795", "message_id": "M1946824289538190325257322863558", "receiver": { "account_d...</msg>
<status status="PASS" starttime="20210324 11:38:54.649" endtime="20210324 11:38:54.654"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-payments</arg>
<arg>/admin/internal_operation/pix</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210324 11:38:54.657" level="INFO">POST Request using : uri=/admin/internal_operation/pix, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "acceptance_date_time": "2021-03-24T15:55:43.269Z", "amount": 5000000, "end_to_end_id": "E1946824220210324113877328470795", "message_id": "M1946824289538190325257322863558", "receiver": { "account_details": { "number": "1694277514", "psp": "19468242", "routing_number": "001", "type": "cacc" }, "document": "54781906320" }, "remittance_information": "Teste Crédito PIX", "sender": { "account_details": { "number": "5601560", "psp": "60746958", "routing_number": "001", "type": "cacc" }, "document": "34772935177", "identification": "Test Sender", "name": "Carlos Drummont" } } 
json=None</msg>
<msg timestamp="20210324 11:38:55.441" level="INFO">${response} = &lt;Response [409]&gt;</msg>
<status status="PASS" starttime="20210324 11:38:54.654" endtime="20210324 11:38:55.441"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210324 11:38:55.443" level="INFO">{'code': 4001, 'status': 'conflict', 'type': 'precondition_failed', 'message': 'Duplicated endToEndId', 'category': 'business', 'status_code': 409}</msg>
<status status="PASS" starttime="20210324 11:38:55.442" endtime="20210324 11:38:55.444"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210324 11:38:55.446" level="INFO">d49e015b264cab2d</msg>
<status status="PASS" starttime="20210324 11:38:55.445" endtime="20210324 11:38:55.449"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210324 11:38:55.451" level="INFO">409</msg>
<status status="PASS" starttime="20210324 11:38:55.450" endtime="20210324 11:38:55.451"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210324 11:38:55.453" level="INFO">${response} = &lt;Response [409]&gt;</msg>
<status status="PASS" starttime="20210324 11:38:55.452" endtime="20210324 11:38:55.453"></status>
</kw>
<status status="PASS" starttime="20210324 11:38:54.627" endtime="20210324 11:38:55.454"></status>
</kw>
<kw name="validar conflict" library="conflict">
<arguments>
<arg>message=Duplicated endToEndId</arg>
<arg>message_code=4001</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando response precondition failed</arg>
</arguments>
<msg timestamp="20210324 11:38:55.459" level="INFO">Validando response precondition failed</msg>
<status status="PASS" starttime="20210324 11:38:55.458" endtime="20210324 11:38:55.459"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>409</arg>
</arguments>
<msg timestamp="20210324 11:38:55.461" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210324 11:38:55.460" endtime="20210324 11:38:55.462"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["status"]}</arg>
<arg>conflict</arg>
</arguments>
<status status="PASS" starttime="20210324 11:38:55.463" endtime="20210324 11:38:55.464"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["category"]}</arg>
<arg>business</arg>
</arguments>
<status status="PASS" starttime="20210324 11:38:55.465" endtime="20210324 11:38:55.466"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.json()["code"]}</arg>
<arg>${message_code}</arg>
</arguments>
<msg timestamp="20210324 11:38:55.468" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210324 11:38:55.467" endtime="20210324 11:38:55.469"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.json()["status_code"]}</arg>
<arg>409</arg>
</arguments>
<msg timestamp="20210324 11:38:55.471" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210324 11:38:55.470" endtime="20210324 11:38:55.471"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["message"]}</arg>
<arg>${message}</arg>
</arguments>
<status status="PASS" starttime="20210324 11:38:55.472" endtime="20210324 11:38:55.474"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["type"]}</arg>
<arg>precondition_failed</arg>
</arguments>
<status status="PASS" starttime="20210324 11:38:55.475" endtime="20210324 11:38:55.476"></status>
</kw>
<status status="PASS" starttime="20210324 11:38:55.456" endtime="20210324 11:38:55.477"></status>
</kw>
<doc>Não permitir o recebimento de PIX com o mesmo End to End</doc>
<tags>
<tag>smoke_test</tag>
</tags>
<status status="PASS" starttime="20210324 11:38:41.112" endtime="20210324 11:38:55.478" critical="yes"></status>
</test>
<doc>Funcionalidade: Recebimento de PIX
Eu, como um Holder, portador de uma conta ativa em Banking
Desejo receber um pagamento PIX</doc>
<status status="PASS" starttime="20210324 11:38:41.006" endtime="20210324 11:38:55.486"></status>
</suite>
<status status="PASS" starttime="20210324 11:38:41.002" endtime="20210324 11:38:55.501"></status>
</suite>
<status status="PASS" starttime="20210324 11:38:06.820" endtime="20210324 11:38:55.521"></status>
</suite>
<statistics>
<total>
<stat pass="4" fail="0">Critical Tests</stat>
<stat pass="4" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="4" fail="0">smoke_test</stat>
</tag>
<suite>
<stat pass="4" fail="0" id="s1" name="Pix-Payments">Pix-Payments</stat>
<stat pass="3" fail="0" id="s1-s1" name="Envio">Pix-Payments.Envio</stat>
<stat pass="1" fail="0" id="s1-s1-s1" name="Cancelar Pagamento PIX">Pix-Payments.Envio.Cancelar Pagamento PIX</stat>
<stat pass="1" fail="0" id="s1-s1-s2" name="Confirmar Pagamento PIX">Pix-Payments.Envio.Confirmar Pagamento PIX</stat>
<stat pass="1" fail="0" id="s1-s1-s3" name="Criar Pagamento PIX">Pix-Payments.Envio.Criar Pagamento PIX</stat>
<stat pass="1" fail="0" id="s1-s2" name="Recebimento">Pix-Payments.Recebimento</stat>
<stat pass="1" fail="0" id="s1-s2-s1" name="Receber Pagamento PIX">Pix-Payments.Recebimento.Receber Pagamento PIX</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>

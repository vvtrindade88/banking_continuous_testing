<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.8.1 on win32)" generated="20210322 17:42:09.046" rpa="false">
<suite id="s1" name="Pix-Payments" source="C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\tests\pix-payments">
<suite id="s1-s1" name="Envio" source="C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\tests\pix-payments\envio">
<suite id="s1-s1-s1" name="Criar Pagamento PIX" source="C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\tests\pix-payments\envio\Criar Pagamento PIX.robot">
<test id="s1-s1-s1-t1" name="CenÃ¡rio: Criar pagamento PIX de para holder business utilizando dados completos da conta de destino">
<kw name="criar chave pix ativa" library="pix_dict_create_active_key_pix">
<arguments>
<arg>holder_type=business</arg>
<arg>pix_type=email</arg>
</arguments>
<kw name="Random Number" library="FakerLibrary">
<doc>Returns a random number with 1 digit (default, when digits==None),
a random number with 0 to given number of digits, or a random number
with given number to given number of digits (when ``fix_len==True``).</doc>
<arguments>
<arg>digits=8</arg>
<arg>fix_len=True</arg>
</arguments>
<assign>
<var>${phone}</var>
</assign>
<msg timestamp="20210322 17:42:09.874" level="INFO">${phone} = 20432861</msg>
<status status="PASS" starttime="20210322 17:42:09.873" endtime="20210322 17:42:09.874"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>+55219${phone}</arg>
</arguments>
<assign>
<var>${phone_pix}</var>
</assign>
<msg timestamp="20210322 17:42:09.874" level="INFO">${phone_pix} = +5521920432861</msg>
<status status="PASS" starttime="20210322 17:42:09.874" endtime="20210322 17:42:09.874"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${phone_pix}</arg>
</arguments>
<msg timestamp="20210322 17:42:09.875" level="INFO">${phone_pix} = +5521920432861</msg>
<status status="PASS" starttime="20210322 17:42:09.875" endtime="20210322 17:42:09.875"></status>
</kw>
<kw name="Email" library="FakerLibrary">
<assign>
<var>${email_pix}</var>
</assign>
<msg timestamp="20210322 17:42:09.877" level="INFO">${email_pix} = maria-eduarda96@hotmail.com</msg>
<status status="PASS" starttime="20210322 17:42:09.876" endtime="20210322 17:42:09.877"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${email_pix}</arg>
</arguments>
<msg timestamp="20210322 17:42:09.878" level="INFO">${email_pix} = maria-eduarda96@hotmail.com</msg>
<status status="PASS" starttime="20210322 17:42:09.877" endtime="20210322 17:42:09.878"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${holder_type}' == 'business'</arg>
<arg>criar holder business ativo</arg>
<arg>ELSE IF</arg>
<arg>'${holder_type}' == 'individual'</arg>
<arg>criar holder individual ativo</arg>
</arguments>
<kw name="criar holder business ativo" library="accreditation_create_holder_active">
<kw name="conectar accreditation" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accreditation</arg>
<arg>url=${accreditation_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 17:42:09.880" level="INFO">Creating Session using : alias=accreditation, url=https://banking-accreditation-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 17:42:09.880" endtime="20210322 17:42:09.881"></status>
</kw>
<status status="PASS" starttime="20210322 17:42:09.879" endtime="20210322 17:42:09.881"></status>
</kw>
<kw name="Cnpj" library="FakerLibrary">
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 17:42:09.882" level="INFO">${national_registration} = 42.683.175/0001-90</msg>
<status status="PASS" starttime="20210322 17:42:09.881" endtime="20210322 17:42:09.882"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${national_registration}</arg>
<arg>.</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 17:42:09.883" level="INFO">${national_registration} = 42683175/0001-90</msg>
<status status="PASS" starttime="20210322 17:42:09.883" endtime="20210322 17:42:09.883"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${national_registration}</arg>
<arg>-</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 17:42:09.884" level="INFO">${national_registration} = 42683175/000190</msg>
<status status="PASS" starttime="20210322 17:42:09.884" endtime="20210322 17:42:09.884"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${national_registration}</arg>
<arg>/</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 17:42:09.887" level="INFO">${national_registration} = 42683175000190</msg>
<status status="PASS" starttime="20210322 17:42:09.884" endtime="20210322 17:42:09.887"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${national_registration}</arg>
</arguments>
<msg timestamp="20210322 17:42:09.889" level="INFO">${national_registration} = 42683175000190</msg>
<status status="PASS" starttime="20210322 17:42:09.888" endtime="20210322 17:42:09.889"></status>
</kw>
<kw name="Rg" library="FakerLibrary">
<doc>Brazilian RG, return plain numbers.
Check:  https://www.ngmatematica.com/2014/02/como-determinar-o-digito-verificador-do.html</doc>
<assign>
<var>${identity_card}</var>
</assign>
<msg timestamp="20210322 17:42:09.889" level="INFO">${identity_card} = 502431866</msg>
<status status="PASS" starttime="20210322 17:42:09.889" endtime="20210322 17:42:09.889"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${identity_card}</arg>
</arguments>
<msg timestamp="20210322 17:42:09.890" level="INFO">${identity_card} = 502431866</msg>
<status status="PASS" starttime="20210322 17:42:09.890" endtime="20210322 17:42:09.890"></status>
</kw>
<kw name="criar holder business" library="accreditation_post_holder_business">
<arguments>
<arg>holder_type=business</arg>
<arg>holder_name=${holder_name}</arg>
<arg>email_business=${email_business}</arg>
<arg>national_registration=${national_registration}</arg>
<arg>revenue_business=${revenue_business}</arg>
<arg>cnae=${cnae}</arg>
<arg>legal_name=${legal_name}</arg>
<arg>establishment_format=mei</arg>
<arg>establishment_date=${establishment_date}</arg>
</arguments>
<kw name="conectar accreditation" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accreditation</arg>
<arg>url=${accreditation_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 17:42:09.892" level="INFO">Creating Session using : alias=accreditation, url=https://banking-accreditation-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 17:42:09.892" endtime="20210322 17:42:09.893"></status>
</kw>
<status status="PASS" starttime="20210322 17:42:09.891" endtime="20210322 17:42:09.893"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_type}</arg>
</arguments>
<msg timestamp="20210322 17:42:09.894" level="INFO">${holder_type} = business</msg>
<status status="PASS" starttime="20210322 17:42:09.893" endtime="20210322 17:42:09.894"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_name}</arg>
</arguments>
<msg timestamp="20210322 17:42:09.894" level="INFO">${holder_name} = Holder de teste</msg>
<status status="PASS" starttime="20210322 17:42:09.894" endtime="20210322 17:42:09.894"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${legal_name}</arg>
</arguments>
<msg timestamp="20210322 17:42:09.895" level="INFO">${legal_name} = Nome Legal da Empresa</msg>
<status status="PASS" starttime="20210322 17:42:09.895" endtime="20210322 17:42:09.895"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:42:09.907" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 17:42:09.895" endtime="20210322 17:42:09.907"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "${holder_type}",</arg>
<arg>"name": "${holder_name}",</arg>
<arg>"email": "${email_business}",</arg>
<arg>"national_registration": "${national_registration}",</arg>
<arg>"revenue": ${revenue_business},</arg>
<arg>"cnae": "${cnae}",</arg>
<arg>"legal_name": "${legal_name}",</arg>
<arg>"establishment": {</arg>
<arg>"format":"${establishment_format}",</arg>
<arg>"date":"${establishment_date}"</arg>
<arg>}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 17:42:09.909" level="INFO">${body} = { "type": "business", "name": "Holder de teste", "email": "contato@teste.com.br", "national_registration": "42683175000190", "revenue": 1005500.00, "cnae": "0111301", "legal_name": "Nome Legal da Empr...</msg>
<status status="PASS" starttime="20210322 17:42:09.908" endtime="20210322 17:42:09.909"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:42:09.910" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "business", "name": "Holder de teste", "email": "contato@teste.com.br", "national_registration": "42683175000190", "revenue": 1005500.00, "cnae": "0111301", "legal_name": "Nome Legal da Empresa", "establishment": { "format":"mei", "date":"2012-04-25" } } 
json=None</msg>
<msg timestamp="20210322 17:42:10.613" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:42:09.909" endtime="20210322 17:42:10.613"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:42:10.616" level="INFO">{'id': '0d3edd69ab064855ac2e56117c3f4d02', 'name': 'Holder de teste', 'revenue': 1005500.0, 'email': 'contato@teste.com.br', 'status': 'waiting_info_and_documents', 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'marketplace_name': 'Marketplace de Teste', 'created_at': '2021-03-22T17:42:11.753604', 'updated_at': '2021-03-22T17:42:11.753605', 'type': 'business', 'national_registration': '42683175000190', 'legal_name': 'Nome Legal da Empresa', 'establishment': {'format': 'mei', 'date': '2012-04-25'}, 'cnae': '0111301', '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/0d3edd69ab064855ac2e56117c3f4d02', 'type': 'GET'}, 'phones': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/0d3edd69ab064855ac2e56117c3f4d02/phones', 'type': 'GET'}, 'addresses': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/0d3edd69ab064855ac2e56117c3f4d02/addresses', 'type': 'GET'}, 'documents': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/0d3edd69ab064855ac2e56117c3f4d02/documents', 'type': 'GET'}, 'partners': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/0d3edd69ab064855ac2e56117c3f4d02/partners', 'type': 'GET'}, 'associates': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/0d3edd69ab064855ac2e56117c3f4d02/associates', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 17:42:10.614" endtime="20210322 17:42:10.616"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:42:10.618" level="INFO">32f1ac59d84a751c</msg>
<status status="PASS" starttime="20210322 17:42:10.617" endtime="20210322 17:42:10.618"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${body}</arg>
</arguments>
<msg timestamp="20210322 17:42:10.620" level="INFO">{ "type": "business", "name": "Holder de teste", "email": "contato@teste.com.br", "national_registration": "42683175000190", "revenue": 1005500.00, "cnae": "0111301", "legal_name": "Nome Legal da Empresa", "establishment": { "format":"mei", "date":"2012-04-25" } }</msg>
<status status="PASS" starttime="20210322 17:42:10.619" endtime="20210322 17:42:10.620"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:42:10.623" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:42:10.621" endtime="20210322 17:42:10.623"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${holder_external_key}</var>
</assign>
<msg timestamp="20210322 17:42:10.626" level="INFO">${holder_external_key} = 0d3edd69ab064855ac2e56117c3f4d02</msg>
<status status="PASS" starttime="20210322 17:42:10.624" endtime="20210322 17:42:10.626"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_external_key}</arg>
</arguments>
<msg timestamp="20210322 17:42:10.628" level="INFO">${holder_external_key} = 0d3edd69ab064855ac2e56117c3f4d02</msg>
<status status="PASS" starttime="20210322 17:42:10.627" endtime="20210322 17:42:10.628"></status>
</kw>
<status status="PASS" starttime="20210322 17:42:09.890" endtime="20210322 17:42:10.628"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 17:42:10.630" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:42:10.629" endtime="20210322 17:42:10.630"></status>
</kw>
<kw name="criar holder phone" library="accreditation_post_holder_phone">
<arguments>
<arg>21</arg>
<arg>51</arg>
<arg>996221236</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:42:10.632" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 17:42:10.632" endtime="20210322 17:42:10.632"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"area_code": "${phone_area_code}",</arg>
<arg>"country_code": "${phone_country_code}",</arg>
<arg>"number": "${phone_number}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 17:42:10.633" level="INFO">${body} = { "area_code": "21", "country_code": "51", "number": "996221236" }</msg>
<status status="PASS" starttime="20210322 17:42:10.632" endtime="20210322 17:42:10.633"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/phones</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:42:10.634" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/0d3edd69ab064855ac2e56117c3f4d02/phones, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "area_code": "21", "country_code": "51", "number": "996221236" } 
json=None</msg>
<msg timestamp="20210322 17:42:10.913" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:42:10.633" endtime="20210322 17:42:10.914"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:42:10.916" level="INFO">{'id': '3c0a0c54d6ba452cac7c1eda4890461b', 'area_code': '21', 'country_code': '51', 'number': '996221236', 'main': True, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/0d3edd69ab064855ac2e56117c3f4d02/phones/3c0a0c54d6ba452cac7c1eda4890461b', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/0d3edd69ab064855ac2e56117c3f4d02', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 17:42:10.915" endtime="20210322 17:42:10.916"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:42:10.918" level="INFO">230c2fa6eb3745be</msg>
<status status="PASS" starttime="20210322 17:42:10.917" endtime="20210322 17:42:10.919"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:42:10.921" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:42:10.920" endtime="20210322 17:42:10.921"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${phone_external_key}</var>
</assign>
<msg timestamp="20210322 17:42:10.924" level="INFO">${phone_external_key} = 3c0a0c54d6ba452cac7c1eda4890461b</msg>
<status status="PASS" starttime="20210322 17:42:10.922" endtime="20210322 17:42:10.924"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${phone_external_key}</arg>
</arguments>
<msg timestamp="20210322 17:42:10.926" level="INFO">${phone_external_key} = 3c0a0c54d6ba452cac7c1eda4890461b</msg>
<status status="PASS" starttime="20210322 17:42:10.925" endtime="20210322 17:42:10.926"></status>
</kw>
<status status="PASS" starttime="20210322 17:42:10.631" endtime="20210322 17:42:10.927"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 17:42:10.928" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:42:10.927" endtime="20210322 17:42:10.929"></status>
</kw>
<kw name="criar holder address" library="accreditation_post_holder_address">
<arguments>
<arg>Rio de Janeiro</arg>
<arg>Rio de Janeiro</arg>
<arg>Brasil</arg>
<arg>Bairro de Testes</arg>
<arg>Rua de Testes</arg>
<arg>90</arg>
<arg>apto 200</arg>
<arg>21550987</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:42:10.931" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 17:42:10.930" endtime="20210322 17:42:10.931"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"city": "${city}",</arg>
<arg>"state": "${state}",</arg>
<arg>"country": "${country}",</arg>
<arg>"neighborhood": "${neighborhood}",</arg>
<arg>"street": "${street}",</arg>
<arg>"number": "${number}",</arg>
<arg>"complement": "${complement}",</arg>
<arg>"postal_code": "${postal_code}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 17:42:10.933" level="INFO">${body} = { "city": "Rio de Janeiro", "state": "Rio de Janeiro", "country": "Brasil", "neighborhood": "Bairro de Testes", "street": "Rua de Testes", "number": "90", "complement": "apto 200", "postal_code": "215...</msg>
<status status="PASS" starttime="20210322 17:42:10.932" endtime="20210322 17:42:10.933"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/addresses</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:42:10.935" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/0d3edd69ab064855ac2e56117c3f4d02/addresses, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "city": "Rio de Janeiro", "state": "Rio de Janeiro", "country": "Brasil", "neighborhood": "Bairro de Testes", "street": "Rua de Testes", "number": "90", "complement": "apto 200", "postal_code": "21550987" } 
json=None</msg>
<msg timestamp="20210322 17:42:11.149" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:42:10.934" endtime="20210322 17:42:11.150"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:42:11.152" level="INFO">{'id': '1bd2698f3bde4d1ba35b2f110bf8ab8b', 'street': 'Rua de Testes', 'number': '90', 'city': 'Rio de Janeiro', 'complement': 'apto 200', 'state': 'Rio de Janeiro', 'neighborhood': 'Bairro de Testes', 'postal_code': '21550987', 'country': 'Brasil', 'main': True, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/0d3edd69ab064855ac2e56117c3f4d02/addresses/1bd2698f3bde4d1ba35b2f110bf8ab8b', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/0d3edd69ab064855ac2e56117c3f4d02', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 17:42:11.151" endtime="20210322 17:42:11.152"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:42:11.154" level="INFO">4ea5b3fb07d3ed18</msg>
<status status="PASS" starttime="20210322 17:42:11.153" endtime="20210322 17:42:11.154"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:42:11.157" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:42:11.155" endtime="20210322 17:42:11.157"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${address_external_key}</var>
</assign>
<msg timestamp="20210322 17:42:11.160" level="INFO">${address_external_key} = 1bd2698f3bde4d1ba35b2f110bf8ab8b</msg>
<status status="PASS" starttime="20210322 17:42:11.158" endtime="20210322 17:42:11.160"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${address_external_key}</arg>
</arguments>
<msg timestamp="20210322 17:42:11.163" level="INFO">${address_external_key} = 1bd2698f3bde4d1ba35b2f110bf8ab8b</msg>
<status status="PASS" starttime="20210322 17:42:11.161" endtime="20210322 17:42:11.163"></status>
</kw>
<status status="PASS" starttime="20210322 17:42:10.929" endtime="20210322 17:42:11.163"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 17:42:11.165" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:42:11.164" endtime="20210322 17:42:11.165"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>CCMEI</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:42:11.168" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 17:42:11.167" endtime="20210322 17:42:11.168"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 17:42:11.169" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 17:42:11.173" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 17:42:11.168" endtime="20210322 17:42:11.173"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:42:11.175" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/0d3edd69ab064855ac2e56117c3f4d02/documents?type=CCMEI, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 17:42:11.494" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:42:11.173" endtime="20210322 17:42:11.495"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:42:11.496" level="INFO">{'id': '0b5a14c11195438dbedc9e95b286ee76', 'document_type': 'ccmei', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/0d3edd69ab064855ac2e56117c3f4d02/documents/0b5a14c11195438dbedc9e95b286ee76', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/0d3edd69ab064855ac2e56117c3f4d02', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/0d3edd69ab064855ac2e56117c3f4d02/documents/0b5a14c11195438dbedc9e95b286ee76/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 17:42:11.495" endtime="20210322 17:42:11.496"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:42:11.498" level="INFO">10b76a58fca67b5e</msg>
<status status="PASS" starttime="20210322 17:42:11.497" endtime="20210322 17:42:11.498"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:42:11.500" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:42:11.499" endtime="20210322 17:42:11.500"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 17:42:11.501" level="INFO">${document_external_key} = 0b5a14c11195438dbedc9e95b286ee76</msg>
<status status="PASS" starttime="20210322 17:42:11.501" endtime="20210322 17:42:11.501"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 17:42:11.503" level="INFO">${document_external_key} = 0b5a14c11195438dbedc9e95b286ee76</msg>
<status status="PASS" starttime="20210322 17:42:11.502" endtime="20210322 17:42:11.503"></status>
</kw>
<status status="PASS" starttime="20210322 17:42:11.166" endtime="20210322 17:42:11.503"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 17:42:11.504" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:42:11.504" endtime="20210322 17:42:11.504"></status>
</kw>
<kw name="Cpf" library="FakerLibrary">
<assign>
<var>${partner_individual_national_registration}</var>
</assign>
<msg timestamp="20210322 17:42:11.505" level="INFO">${partner_individual_national_registration} = 034.792.518-97</msg>
<status status="PASS" starttime="20210322 17:42:11.504" endtime="20210322 17:42:11.505"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${partner_individual_national_registration}</arg>
<arg>.</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${partner_individual_national_registration}</var>
</assign>
<msg timestamp="20210322 17:42:11.506" level="INFO">${partner_individual_national_registration} = 034792518-97</msg>
<status status="PASS" starttime="20210322 17:42:11.505" endtime="20210322 17:42:11.506"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${partner_individual_national_registration}</arg>
<arg>-</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${partner_individual_national_registration}</var>
</assign>
<msg timestamp="20210322 17:42:11.507" level="INFO">${partner_individual_national_registration} = 03479251897</msg>
<status status="PASS" starttime="20210322 17:42:11.506" endtime="20210322 17:42:11.507"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${partner_individual_national_registration}</arg>
</arguments>
<msg timestamp="20210322 17:42:11.507" level="INFO">${partner_individual_national_registration} = 03479251897</msg>
<status status="PASS" starttime="20210322 17:42:11.507" endtime="20210322 17:42:11.508"></status>
</kw>
<kw name="Rg" library="FakerLibrary">
<doc>Brazilian RG, return plain numbers.
Check:  https://www.ngmatematica.com/2014/02/como-determinar-o-digito-verificador-do.html</doc>
<assign>
<var>${partner_individual_identity_card}</var>
</assign>
<msg timestamp="20210322 17:42:11.508" level="INFO">${partner_individual_identity_card} = 07425831X</msg>
<status status="PASS" starttime="20210322 17:42:11.508" endtime="20210322 17:42:11.508"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${partner_individual_identity_card}</arg>
</arguments>
<msg timestamp="20210322 17:42:11.509" level="INFO">${partner_individual_identity_card} = 07425831X</msg>
<status status="PASS" starttime="20210322 17:42:11.509" endtime="20210322 17:42:11.509"></status>
</kw>
<kw name="criar partner individual" library="accreditation_post_partner_individual">
<arguments>
<arg>partner_individual_type=individual</arg>
<arg>partner_individual_name=${partner_individual_name}</arg>
<arg>partner_individual_email=${partner_individual_email}</arg>
<arg>partner_individual_national_registration=${partner_individual_national_registration}</arg>
<arg>partner_individual_revenue=${partner_individual_revenue}</arg>
<arg>partner_individual_birthday=${partner_individual_birthday}</arg>
<arg>partner_individual_mothers_name=${partner_individual_mothers_name}</arg>
<arg>partner_individual_identity_card=${partner_individual_identity_card}</arg>
<arg>partner_individual_pep=false</arg>
<arg>partner_individual_percentage=100</arg>
<arg>partner_individual_adm=true</arg>
<arg>partner_individual_cbo=${partner_individual_cbo}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:42:11.511" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 17:42:11.510" endtime="20210322 17:42:11.511"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "${partner_individual_type}",</arg>
<arg>"name": "${partner_individual_name}",</arg>
<arg>"email": "${partner_individual_email}",</arg>
<arg>"national_registration": "${partner_individual_national_registration}",</arg>
<arg>"revenue": ${partner_individual_revenue},</arg>
<arg>"birthday": "${partner_individual_birthday}",</arg>
<arg>"mothers_name": "${partner_individual_mothers_name}",</arg>
<arg>"identity_card": "${partner_individual_identity_card}",</arg>
<arg>"pep": false,</arg>
<arg>"percentage": ${partner_individual_percentage},</arg>
<arg>"adm": ${partner_individual_adm},</arg>
<arg>"cbo": ${partner_individual_cbo}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 17:42:11.512" level="INFO">${body} = { "type": "individual", "name": "Individual Partner de teste", "email": "teste@teste.com.br", "national_registration": "03479251897", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "MÃ£e...</msg>
<status status="PASS" starttime="20210322 17:42:11.511" endtime="20210322 17:42:11.512"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/partners</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:42:11.513" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/0d3edd69ab064855ac2e56117c3f4d02/partners, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "individual", "name": "Individual Partner de teste", "email": "teste@teste.com.br", "national_registration": "03479251897", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "MÃ£e do Individual Partner", "identity_card": "07425831X", "pep": false, "percentage": 100, "adm": true, "cbo": 821450 } 
json=None</msg>
<msg timestamp="20210322 17:42:11.742" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:42:11.512" endtime="20210322 17:42:11.743"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:42:11.746" level="INFO">{'id': 'cfd6c3e975e54328b634350904f9df75', 'name': 'Individual Partner de teste', 'revenue': 5500.0, 'email': 'teste@teste.com.br', 'created_at': '2021-03-22T17:42:12.87791', 'updated_at': '2021-03-22T17:42:12.877912', 'main': True, 'adm': True, 'percentage': 100.0, 'type': 'individual', 'national_registration': '03479251897', 'birthday': '1988-04-23', 'mothers_name': 'MÃ£e do Individual Partner', 'identity_card': '07425831X', 'pep': False, 'cbo': '821450', '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/0d3edd69ab064855ac2e56117c3f4d02/partners/cfd6c3e975e54328b634350904f9df75', 'type': 'GET'}, 'phones': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/0d3edd69ab064855ac2e56117c3f4d02/partners/cfd6c3e975e54328b634350904f9df75/phones', 'type': 'GET'}, 'addresses': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/0d3edd69ab064855ac2e56117c3f4d02/partners/cfd6c3e975e54328b634350904f9df75/addresses', 'type': 'GET'}, 'documents': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/0d3edd69ab064855ac2e56117c3f4d02/partners/cfd6c3e975e54328b634350904f9df75/documents', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/0d3edd69ab064855ac2e56117c3f4d02', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 17:42:11.745" endtime="20210322 17:42:11.746"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:42:11.749" level="INFO">1c2e3088009b4aee</msg>
<status status="PASS" starttime="20210322 17:42:11.747" endtime="20210322 17:42:11.749"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:42:11.750" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:42:11.750" endtime="20210322 17:42:11.751"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${partner_external_key}</var>
</assign>
<msg timestamp="20210322 17:42:11.753" level="INFO">${partner_external_key} = cfd6c3e975e54328b634350904f9df75</msg>
<status status="PASS" starttime="20210322 17:42:11.751" endtime="20210322 17:42:11.753"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${partner_external_key}</arg>
</arguments>
<msg timestamp="20210322 17:42:11.754" level="INFO">${partner_external_key} = cfd6c3e975e54328b634350904f9df75</msg>
<status status="PASS" starttime="20210322 17:42:11.754" endtime="20210322 17:42:11.755"></status>
</kw>
<status status="PASS" starttime="20210322 17:42:11.509" endtime="20210322 17:42:11.755"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 17:42:11.756" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:42:11.755" endtime="20210322 17:42:11.756"></status>
</kw>
<kw name="criar partner phone" library="accreditation_post_partner_phone">
<arguments>
<arg>21</arg>
<arg>51</arg>
<arg>996554785</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:42:11.758" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 17:42:11.757" endtime="20210322 17:42:11.758"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"area_code": "${phone_area_code}",</arg>
<arg>"country_code": "${phone_country_code}",</arg>
<arg>"number": "${phone_number}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 17:42:11.759" level="INFO">${body} = { "area_code": "21", "country_code": "51", "number": "996554785" }</msg>
<status status="PASS" starttime="20210322 17:42:11.758" endtime="20210322 17:42:11.759"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/partners/${partner_external_key}/phones/</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:42:11.760" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/0d3edd69ab064855ac2e56117c3f4d02/partners/cfd6c3e975e54328b634350904f9df75/phones/, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "area_code": "21", "country_code": "51", "number": "996554785" } 
json=None</msg>
<msg timestamp="20210322 17:42:11.986" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:42:11.759" endtime="20210322 17:42:11.986"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:42:11.987" level="INFO">{'id': '5ab2c1407c084e82aa9080596b1ad0c5', 'area_code': '21', 'country_code': '51', 'number': '996554785', 'main': True, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/0d3edd69ab064855ac2e56117c3f4d02/partners/cfd6c3e975e54328b634350904f9df75/phones/5ab2c1407c084e82aa9080596b1ad0c5', 'type': 'GET'}, 'partner': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/0d3edd69ab064855ac2e56117c3f4d02/partners/cfd6c3e975e54328b634350904f9df75', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/0d3edd69ab064855ac2e56117c3f4d02', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 17:42:11.986" endtime="20210322 17:42:11.987"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:42:11.987" level="INFO">89b80de043c713e3</msg>
<status status="PASS" starttime="20210322 17:42:11.987" endtime="20210322 17:42:11.988"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:42:11.989" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:42:11.988" endtime="20210322 17:42:11.989"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${holder_external_key}</var>
</assign>
<msg timestamp="20210322 17:42:11.990" level="INFO">${holder_external_key} = 5ab2c1407c084e82aa9080596b1ad0c5</msg>
<status status="PASS" starttime="20210322 17:42:11.989" endtime="20210322 17:42:11.990"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${phone_external_key}</arg>
</arguments>
<msg timestamp="20210322 17:42:11.991" level="INFO">${phone_external_key} = 3c0a0c54d6ba452cac7c1eda4890461b</msg>
<status status="PASS" starttime="20210322 17:42:11.990" endtime="20210322 17:42:11.991"></status>
</kw>
<status status="PASS" starttime="20210322 17:42:11.756" endtime="20210322 17:42:11.991"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 17:42:11.991" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:42:11.991" endtime="20210322 17:42:11.992"></status>
</kw>
<kw name="criar partner address" library="accreditation_post_partner_address">
<arguments>
<arg>Rio de Janeiro</arg>
<arg>Rio de Janeiro</arg>
<arg>Brasil</arg>
<arg>Bairro de Testes</arg>
<arg>Rua de Testes</arg>
<arg>61</arg>
<arg>apto 201</arg>
<arg>21550478</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:42:11.993" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 17:42:11.993" endtime="20210322 17:42:11.993"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"city": "${city}",</arg>
<arg>"state": "${state}",</arg>
<arg>"country": "${country}",</arg>
<arg>"neighborhood": "${neighborhood}",</arg>
<arg>"street": "${street}",</arg>
<arg>"number": "${number}",</arg>
<arg>"complement": "${complement}",</arg>
<arg>"postal_code": "${postal_code}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 17:42:11.994" level="INFO">${body} = { "city": "Rio de Janeiro", "state": "Rio de Janeiro", "country": "Brasil", "neighborhood": "Bairro de Testes", "street": "Rua de Testes", "number": "61", "complement": "apto 201", "postal_code": "215...</msg>
<status status="PASS" starttime="20210322 17:42:11.993" endtime="20210322 17:42:11.994"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/partners/${partner_external_key}/addresses</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:42:11.995" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/0d3edd69ab064855ac2e56117c3f4d02/partners/cfd6c3e975e54328b634350904f9df75/addresses, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "city": "Rio de Janeiro", "state": "Rio de Janeiro", "country": "Brasil", "neighborhood": "Bairro de Testes", "street": "Rua de Testes", "number": "61", "complement": "apto 201", "postal_code": "21550478" } 
json=None</msg>
<msg timestamp="20210322 17:42:12.220" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:42:11.994" endtime="20210322 17:42:12.220"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:42:12.222" level="INFO">{'id': 'c0e29975a2ec45779a6cba52e2d6e9aa', 'street': 'Rua de Testes', 'number': '61', 'city': 'Rio de Janeiro', 'complement': 'apto 201', 'state': 'Rio de Janeiro', 'neighborhood': 'Bairro de Testes', 'postal_code': '21550478', 'country': 'Brasil', 'main': True, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/0d3edd69ab064855ac2e56117c3f4d02/partners/cfd6c3e975e54328b634350904f9df75/addresses/c0e29975a2ec45779a6cba52e2d6e9aa', 'type': 'GET'}, 'partner': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/0d3edd69ab064855ac2e56117c3f4d02/partners/cfd6c3e975e54328b634350904f9df75', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/0d3edd69ab064855ac2e56117c3f4d02', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 17:42:12.221" endtime="20210322 17:42:12.223"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:42:12.224" level="INFO">80f4d2ce1b4235d6</msg>
<status status="PASS" starttime="20210322 17:42:12.223" endtime="20210322 17:42:12.225"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:42:12.227" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:42:12.226" endtime="20210322 17:42:12.227"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${address_external_key}</var>
</assign>
<msg timestamp="20210322 17:42:12.230" level="INFO">${address_external_key} = c0e29975a2ec45779a6cba52e2d6e9aa</msg>
<status status="PASS" starttime="20210322 17:42:12.228" endtime="20210322 17:42:12.230"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${address_external_key}</arg>
</arguments>
<msg timestamp="20210322 17:42:12.233" level="INFO">${address_external_key} = c0e29975a2ec45779a6cba52e2d6e9aa</msg>
<status status="PASS" starttime="20210322 17:42:12.231" endtime="20210322 17:42:12.233"></status>
</kw>
<status status="PASS" starttime="20210322 17:42:11.992" endtime="20210322 17:42:12.234"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 17:42:12.235" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:42:12.234" endtime="20210322 17:42:12.235"></status>
</kw>
<kw name="criar partner document" library="accreditation_post_partner_document">
<arguments>
<arg>SELFIE</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:42:12.238" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 17:42:12.237" endtime="20210322 17:42:12.238"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 17:42:12.239" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 17:42:12.241" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 17:42:12.238" endtime="20210322 17:42:12.241"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/partners/${partner_externaL_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:42:12.243" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/0d3edd69ab064855ac2e56117c3f4d02/partners/cfd6c3e975e54328b634350904f9df75/documents?type=SELFIE, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 17:42:12.558" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:42:12.242" endtime="20210322 17:42:12.558"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:42:12.560" level="INFO">{'id': 'c2de991d9cd2407ca76e125933a1d747', 'document_type': 'selfie', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/0d3edd69ab064855ac2e56117c3f4d02/partners/cfd6c3e975e54328b634350904f9df75/documents/c2de991d9cd2407ca76e125933a1d747', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/0d3edd69ab064855ac2e56117c3f4d02', 'type': 'GET'}, 'partner': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/0d3edd69ab064855ac2e56117c3f4d02/partners/cfd6c3e975e54328b634350904f9df75', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/0d3edd69ab064855ac2e56117c3f4d02/partners/cfd6c3e975e54328b634350904f9df75/documents/c2de991d9cd2407ca76e125933a1d747/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 17:42:12.559" endtime="20210322 17:42:12.560"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:42:12.562" level="INFO">d9c9d056c36f97ea</msg>
<status status="PASS" starttime="20210322 17:42:12.561" endtime="20210322 17:42:12.562"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:42:12.564" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:42:12.562" endtime="20210322 17:42:12.564"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 17:42:12.567" level="INFO">${document_external_key} = c2de991d9cd2407ca76e125933a1d747</msg>
<status status="PASS" starttime="20210322 17:42:12.564" endtime="20210322 17:42:12.567"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 17:42:12.568" level="INFO">${document_external_key} = c2de991d9cd2407ca76e125933a1d747</msg>
<status status="PASS" starttime="20210322 17:42:12.567" endtime="20210322 17:42:12.568"></status>
</kw>
<status status="PASS" starttime="20210322 17:42:12.236" endtime="20210322 17:42:12.569"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 17:42:12.570" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:42:12.569" endtime="20210322 17:42:12.570"></status>
</kw>
<kw name="criar partner document" library="accreditation_post_partner_document">
<arguments>
<arg>RG_FRENTE</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:42:12.572" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 17:42:12.572" endtime="20210322 17:42:12.572"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 17:42:12.573" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 17:42:12.576" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 17:42:12.573" endtime="20210322 17:42:12.576"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/partners/${partner_externaL_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:42:12.578" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/0d3edd69ab064855ac2e56117c3f4d02/partners/cfd6c3e975e54328b634350904f9df75/documents?type=RG_FRENTE, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 17:42:12.873" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:42:12.577" endtime="20210322 17:42:12.874"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:42:12.876" level="INFO">{'id': '2be68c0a77c644d1b1cd1a1ffb2c1a6f', 'document_type': 'rg_frente', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/0d3edd69ab064855ac2e56117c3f4d02/partners/cfd6c3e975e54328b634350904f9df75/documents/2be68c0a77c644d1b1cd1a1ffb2c1a6f', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/0d3edd69ab064855ac2e56117c3f4d02', 'type': 'GET'}, 'partner': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/0d3edd69ab064855ac2e56117c3f4d02/partners/cfd6c3e975e54328b634350904f9df75', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/0d3edd69ab064855ac2e56117c3f4d02/partners/cfd6c3e975e54328b634350904f9df75/documents/2be68c0a77c644d1b1cd1a1ffb2c1a6f/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 17:42:12.874" endtime="20210322 17:42:12.877"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:42:12.879" level="INFO">a0a4c8cd67584ce3</msg>
<status status="PASS" starttime="20210322 17:42:12.877" endtime="20210322 17:42:12.879"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:42:12.881" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:42:12.880" endtime="20210322 17:42:12.881"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 17:42:12.885" level="INFO">${document_external_key} = 2be68c0a77c644d1b1cd1a1ffb2c1a6f</msg>
<status status="PASS" starttime="20210322 17:42:12.882" endtime="20210322 17:42:12.885"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 17:42:12.887" level="INFO">${document_external_key} = 2be68c0a77c644d1b1cd1a1ffb2c1a6f</msg>
<status status="PASS" starttime="20210322 17:42:12.886" endtime="20210322 17:42:12.887"></status>
</kw>
<status status="PASS" starttime="20210322 17:42:12.570" endtime="20210322 17:42:12.887"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 17:42:12.889" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:42:12.888" endtime="20210322 17:42:12.889"></status>
</kw>
<kw name="criar partner document" library="accreditation_post_partner_document">
<arguments>
<arg>RG_VERSO</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:42:12.891" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 17:42:12.891" endtime="20210322 17:42:12.891"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 17:42:12.892" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 17:42:12.895" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 17:42:12.892" endtime="20210322 17:42:12.895"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/partners/${partner_externaL_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:42:12.897" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/0d3edd69ab064855ac2e56117c3f4d02/partners/cfd6c3e975e54328b634350904f9df75/documents?type=RG_VERSO, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 17:42:13.157" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:42:12.896" endtime="20210322 17:42:13.157"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:42:13.159" level="INFO">{'id': '5fcb50c42f164c859aeb2b199c9a1cdb', 'document_type': 'rg_verso', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/0d3edd69ab064855ac2e56117c3f4d02/partners/cfd6c3e975e54328b634350904f9df75/documents/5fcb50c42f164c859aeb2b199c9a1cdb', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/0d3edd69ab064855ac2e56117c3f4d02', 'type': 'GET'}, 'partner': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/0d3edd69ab064855ac2e56117c3f4d02/partners/cfd6c3e975e54328b634350904f9df75', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/0d3edd69ab064855ac2e56117c3f4d02/partners/cfd6c3e975e54328b634350904f9df75/documents/5fcb50c42f164c859aeb2b199c9a1cdb/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 17:42:13.158" endtime="20210322 17:42:13.160"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:42:13.162" level="INFO">3619838b3ce48435</msg>
<status status="PASS" starttime="20210322 17:42:13.161" endtime="20210322 17:42:13.162"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:42:13.164" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:42:13.163" endtime="20210322 17:42:13.165"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 17:42:13.168" level="INFO">${document_external_key} = 5fcb50c42f164c859aeb2b199c9a1cdb</msg>
<status status="PASS" starttime="20210322 17:42:13.166" endtime="20210322 17:42:13.168"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 17:42:13.170" level="INFO">${document_external_key} = 5fcb50c42f164c859aeb2b199c9a1cdb</msg>
<status status="PASS" starttime="20210322 17:42:13.168" endtime="20210322 17:42:13.170"></status>
</kw>
<status status="PASS" starttime="20210322 17:42:12.889" endtime="20210322 17:42:13.170"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 17:42:13.171" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:42:13.170" endtime="20210322 17:42:13.171"></status>
</kw>
<kw name="solicitar aprovaÃ§Ã£o do holder" library="accreditation_request_approval">
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:42:13.174" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 17:42:13.173" endtime="20210322 17:42:13.174"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/approval</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:42:13.175" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/0d3edd69ab064855ac2e56117c3f4d02/approval, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data=None 
json=None</msg>
<msg timestamp="20210322 17:42:13.534" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 17:42:13.174" endtime="20210322 17:42:13.535"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:42:13.537" level="INFO">{'message': 'Approval request accepted successfully. Processing analysis'}</msg>
<status status="PASS" starttime="20210322 17:42:13.535" endtime="20210322 17:42:13.537"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:42:13.539" level="INFO">268ddb6017b21871</msg>
<status status="PASS" starttime="20210322 17:42:13.537" endtime="20210322 17:42:13.539"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:42:13.541" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 17:42:13.539" endtime="20210322 17:42:13.541"></status>
</kw>
<status status="PASS" starttime="20210322 17:42:13.172" endtime="20210322 17:42:13.541"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 17:42:13.543" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:42:13.541" endtime="20210322 17:42:13.543"></status>
</kw>
<kw name="recebendo notificaÃ§Ã£o de aprovaÃ§Ã£o" library="accreditation_risk_notification">
<kw name="Uuid 4" library="FakerLibrary">
<doc>Generates a random UUID4 string.
:param cast_to: Specify what type the UUID should be cast to. Default is `str`
:type cast_to: callable</doc>
<assign>
<var>${assessment_id}</var>
</assign>
<msg timestamp="20210322 17:42:13.545" level="INFO">${assessment_id} = 31fec755-014d-44f6-ad99-867c1697ca24</msg>
<status status="PASS" starttime="20210322 17:42:13.544" endtime="20210322 17:42:13.545"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>year</arg>
</arguments>
<assign>
<var>${year}</var>
</assign>
<msg timestamp="20210322 17:42:13.546" level="INFO">${year} = 2021</msg>
<status status="PASS" starttime="20210322 17:42:13.545" endtime="20210322 17:42:13.546"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>month</arg>
</arguments>
<assign>
<var>${month}</var>
</assign>
<msg timestamp="20210322 17:42:13.547" level="INFO">${month} = 03</msg>
<status status="PASS" starttime="20210322 17:42:13.546" endtime="20210322 17:42:13.547"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>day</arg>
</arguments>
<assign>
<var>${day}</var>
</assign>
<msg timestamp="20210322 17:42:13.547" level="INFO">${day} = 22</msg>
<status status="PASS" starttime="20210322 17:42:13.547" endtime="20210322 17:42:13.548"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:42:13.549" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 17:42:13.548" endtime="20210322 17:42:13.549"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "risk.assessment.result",</arg>
<arg>"resource": "business.holder",</arg>
<arg>"created_at": "${year}-${month}-${day} 15:28:56.747Z",</arg>
<arg>"marketplace_id": "${marketplace_external_key}",</arg>
<arg>"object": {</arg>
<arg>"result": "APPROVED",</arg>
<arg>"holder_id": "${holder_external_key}",</arg>
<arg>"applicant_id": "${application_external_key}",</arg>
<arg>"assessment_id": "${assessment_id}"</arg>
<arg>}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 17:42:13.550" level="INFO">${body} = { "type": "risk.assessment.result", "resource": "business.holder", "created_at": "2021-03-22 15:28:56.747Z", "marketplace_id": "f71a8951368a4cc085cf7875ff44e61c", "object": { "result": "APPROVED", "ho...</msg>
<status status="PASS" starttime="20210322 17:42:13.549" endtime="20210322 17:42:13.550"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/admin/internal_operation/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/registration/approval</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:42:13.551" level="INFO">POST Request using : uri=/admin/internal_operation/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/0d3edd69ab064855ac2e56117c3f4d02/registration/approval, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "risk.assessment.result", "resource": "business.holder", "created_at": "2021-03-22 15:28:56.747Z", "marketplace_id": "f71a8951368a4cc085cf7875ff44e61c", "object": { "result": "APPROVED", "holder_id": "0d3edd69ab064855ac2e56117c3f4d02", "applicant_id": "bcc25a6751c14b52af1340d40dba78c5", "assessment_id": "31fec755-014d-44f6-ad99-867c1697ca24" } } 
json=None</msg>
<msg timestamp="20210322 17:42:13.749" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 17:42:13.550" endtime="20210322 17:42:13.749"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:42:13.752" level="INFO">{'message': 'Holder approved successfully'}</msg>
<status status="PASS" starttime="20210322 17:42:13.750" endtime="20210322 17:42:13.752"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:42:13.754" level="INFO">6ef2f0a0213ae874</msg>
<status status="PASS" starttime="20210322 17:42:13.753" endtime="20210322 17:42:13.754"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:42:13.756" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 17:42:13.755" endtime="20210322 17:42:13.757"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 17:42:13.759" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:42:13.757" endtime="20210322 17:42:13.759"></status>
</kw>
<status status="PASS" starttime="20210322 17:42:13.543" endtime="20210322 17:42:13.759"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 17:42:13.762" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:42:13.760" endtime="20210322 17:42:13.762"></status>
</kw>
<kw name="buscar account por holder" library="accounts_get_accounts_by_holder">
<kw name="conectar accounts" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accounts</arg>
<arg>url=${account_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 17:42:13.765" level="INFO">Creating Session using : alias=accounts, url=https://banking-accounts-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 17:42:13.765" endtime="20210322 17:42:13.766"></status>
</kw>
<status status="PASS" starttime="20210322 17:42:13.764" endtime="20210322 17:42:13.767"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accounts</arg>
<arg>/marketplaces/${marketplace_external_key}/holders/${holder_external_key}/accounts</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:42:13.768" level="INFO">GET Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/holders/0d3edd69ab064855ac2e56117c3f4d02/accounts, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 17:42:14.414" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 17:42:13.767" endtime="20210322 17:42:14.414"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:42:14.416" level="INFO">{'items': [{'id': 'd1177c5163dc4680bb63291bfb2dce65', 'holder': '0d3edd69ab064855ac2e56117c3f4d02', 'balance': '0.00', 'currency': 'BRL', 'routing_number': '001', 'number': '467505114', 'status': 'active', 'metadata': {}, 'created_at': '2021-03-22T20:42:14.927893', 'updated_at': '2021-03-22T20:42:14.927893', 'primary': True, 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'uri': '/v2/marketplaces/f71a8951368a4cc085cf7875ff44e61c/accounts/d1177c5163dc4680bb63291bfb2dce65', 'resource': 'payment_account'}], 'has_more': False, 'limit': 100, 'total_pages': 1, 'page': 1, 'offset': 0, 'total': '1', 'query_count': '1'}</msg>
<status status="PASS" starttime="20210322 17:42:14.415" endtime="20210322 17:42:14.417"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:42:14.419" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 17:42:14.418" endtime="20210322 17:42:14.419"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["id"]}</arg>
</arguments>
<assign>
<var>${account_external_key}</var>
</assign>
<msg timestamp="20210322 17:42:14.421" level="INFO">${account_external_key} = d1177c5163dc4680bb63291bfb2dce65</msg>
<status status="PASS" starttime="20210322 17:42:14.419" endtime="20210322 17:42:14.421"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_external_key}</arg>
</arguments>
<msg timestamp="20210322 17:42:14.422" level="INFO">${account_external_key} = d1177c5163dc4680bb63291bfb2dce65</msg>
<status status="PASS" starttime="20210322 17:42:14.421" endtime="20210322 17:42:14.424"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["number"]}</arg>
</arguments>
<assign>
<var>${account_number}</var>
</assign>
<msg timestamp="20210322 17:42:14.425" level="INFO">${account_number} = 467505114</msg>
<status status="PASS" starttime="20210322 17:42:14.424" endtime="20210322 17:42:14.426"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_number}</arg>
</arguments>
<msg timestamp="20210322 17:42:14.427" level="INFO">${account_number} = 467505114</msg>
<status status="PASS" starttime="20210322 17:42:14.427" endtime="20210322 17:42:14.427"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["routing_number"]}</arg>
</arguments>
<assign>
<var>${account_routing_number}</var>
</assign>
<msg timestamp="20210322 17:42:14.430" level="INFO">${account_routing_number} = 001</msg>
<status status="PASS" starttime="20210322 17:42:14.428" endtime="20210322 17:42:14.430"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_routing_number}</arg>
</arguments>
<msg timestamp="20210322 17:42:14.432" level="INFO">${account_routing_number} = 001</msg>
<status status="PASS" starttime="20210322 17:42:14.431" endtime="20210322 17:42:14.432"></status>
</kw>
<status status="PASS" starttime="20210322 17:42:13.763" endtime="20210322 17:42:14.432"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 17:42:14.434" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:42:14.433" endtime="20210322 17:42:14.434"></status>
</kw>
<status status="PASS" starttime="20210322 17:42:09.879" endtime="20210322 17:42:14.434"></status>
</kw>
<status status="PASS" starttime="20210322 17:42:09.878" endtime="20210322 17:42:14.435"></status>
</kw>
<kw name="gerar saldo para account" library="account_generate_balance">
<arguments>
<arg>${account_external_key}</arg>
</arguments>
<kw name="conectar accounts" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accounts</arg>
<arg>url=${account_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 17:42:14.437" level="INFO">Creating Session using : alias=accounts, url=https://banking-accounts-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 17:42:14.436" endtime="20210322 17:42:14.438"></status>
</kw>
<status status="PASS" starttime="20210322 17:42:14.436" endtime="20210322 17:42:14.438"></status>
</kw>
<kw name="Uuid 4" library="FakerLibrary">
<doc>Generates a random UUID4 string.
:param cast_to: Specify what type the UUID should be cast to. Default is `str`
:type cast_to: callable</doc>
<assign>
<var>${uuid}</var>
</assign>
<msg timestamp="20210322 17:42:14.439" level="INFO">${uuid} = c0405a6f-1a7b-4cb2-b3a9-941d955366f2</msg>
<status status="PASS" starttime="20210322 17:42:14.438" endtime="20210322 17:42:14.439"></status>
</kw>
<kw name="conectar accounts" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accounts</arg>
<arg>url=${account_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 17:42:14.440" level="INFO">Creating Session using : alias=accounts, url=https://banking-accounts-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 17:42:14.439" endtime="20210322 17:42:14.440"></status>
</kw>
<status status="PASS" starttime="20210322 17:42:14.439" endtime="20210322 17:42:14.441"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:42:14.441" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 17:42:14.441" endtime="20210322 17:42:14.441"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"operations": [</arg>
<arg>{</arg>
<arg>"amount": 9000000000000,</arg>
<arg>"authorization_code": "${uuid}",</arg>
<arg>"transaction_id": "${uuid}",</arg>
<arg>"id": "${uuid}",</arg>
<arg>"id_checking_account": "${account_external_key}",</arg>
<arg>"transfer_date": "2020-02-20T20:58:06.510Z",</arg>
<arg>"fee": 0,</arg>
<arg>"description": "Teste",</arg>
<arg>"object_type": "transfer",</arg>
<arg>"object_id": "${uuid}",</arg>
<arg>"dflag": "ACTIVE",</arg>
<arg>"created_at": "2019-10-14T20:58:06.510Z",</arg>
<arg>"type": "Transfer"</arg>
<arg>}</arg>
<arg>],</arg>
<arg>"reference_id": "Criando saldo na account"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 17:42:14.443" level="INFO">${body} = { "operations": [ { "amount": 9000000000000, "authorization_code": "c0405a6f-1a7b-4cb2-b3a9-941d955366f2", "transaction_id": "c0405a6f-1a7b-4cb2-b3a9-941d955366f2", "id": "c0405a6f-1a7b-4cb2-b3a9-941d...</msg>
<status status="PASS" starttime="20210322 17:42:14.442" endtime="20210322 17:42:14.443"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accounts</arg>
<arg>/admin/internal_operation/authorization/${uuid}</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:42:14.443" level="INFO">POST Request using : uri=/admin/internal_operation/authorization/c0405a6f-1a7b-4cb2-b3a9-941d955366f2, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "operations": [ { "amount": 9000000000000, "authorization_code": "c0405a6f-1a7b-4cb2-b3a9-941d955366f2", "transaction_id": "c0405a6f-1a7b-4cb2-b3a9-941d955366f2", "id": "c0405a6f-1a7b-4cb2-b3a9-941d955366f2", "id_checking_account": "d1177c5163dc4680bb63291bfb2dce65", "transfer_date": "2020-02-20T20:58:06.510Z", "fee": 0, "description": "Teste", "object_type": "transfer", "object_id": "c0405a6f-1a7b-4cb2-b3a9-941d955366f2", "dflag": "ACTIVE", "created_at": "2019-10-14T20:58:06.510Z", "type": "Transfer" } ], "reference_id": "Criando saldo na account" } 
json=None</msg>
<msg timestamp="20210322 17:42:15.090" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 17:42:14.443" endtime="20210322 17:42:15.090"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.status_code}' == 200</arg>
<arg>Log</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:42:15.091" endtime="20210322 17:42:15.092"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.status_code}' == 200</arg>
<arg>Log</arg>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:42:15.093" endtime="20210322 17:42:15.094"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.status_code}' == 200</arg>
<arg>Log</arg>
<arg>${response.status_code}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:42:15.095" endtime="20210322 17:42:15.096"></status>
</kw>
<status status="PASS" starttime="20210322 17:42:14.435" endtime="20210322 17:42:15.096"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${pix_type}' == 'phone'</arg>
<arg>criar chave pix</arg>
<arg>${pix_type}</arg>
<arg>${phone_pix}</arg>
<arg>ELSE IF</arg>
<arg>'${pix_type}' == 'email'</arg>
<arg>criar chave pix</arg>
<arg>${pix_type}</arg>
<arg>${email_pix}</arg>
<arg>ELSE IF</arg>
<arg>'${pix_type}' == 'evp'</arg>
<arg>criar chave pix</arg>
<arg>${pix_type}</arg>
<arg>${EMPTY}</arg>
<arg>ELSE IF</arg>
<arg>'${pix_type}' == 'national_registration'</arg>
<arg>criar chave pix</arg>
<arg>${pix_type}</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw name="criar chave pix" library="pix_dict_create_entry">
<arguments>
<arg>${pix_type}</arg>
<arg>${email_pix}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 17:42:15.102" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 17:42:15.101" endtime="20210322 17:42:15.102"></status>
</kw>
<status status="PASS" starttime="20210322 17:42:15.100" endtime="20210322 17:42:15.103"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${type}</arg>
</arguments>
<msg timestamp="20210322 17:42:15.104" level="INFO">${type} = email</msg>
<status status="PASS" starttime="20210322 17:42:15.104" endtime="20210322 17:42:15.105"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210322 17:42:15.106" level="INFO">${value} = maria-eduarda96@hotmail.com</msg>
<status status="PASS" starttime="20210322 17:42:15.105" endtime="20210322 17:42:15.106"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:42:15.107" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 17:42:15.107" endtime="20210322 17:42:15.107"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "${type}",</arg>
<arg>"value": "${value}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 17:42:15.108" level="INFO">${body} = { "type": "email", "value": "maria-eduarda96@hotmail.com" }</msg>
<status status="PASS" starttime="20210322 17:42:15.108" endtime="20210322 17:42:15.109"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:42:15.110" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/0d3edd69ab064855ac2e56117c3f4d02/accounts/d1177c5163dc4680bb63291bfb2dce65/entries, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "email", "value": "maria-eduarda96@hotmail.com" } 
json=None</msg>
<msg timestamp="20210322 17:42:15.807" level="INFO">${response} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20210322 17:42:15.109" endtime="20210322 17:42:15.807"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:42:15.810" level="INFO">{'id': 'ca149649ab124995b78f3da4eaae880d', 'status': 'waiting_ownership_verification', 'created_at': '2021-03-22T05:42:16.996', 'updated_at': '2021-03-22T05:42:16.996', 'key': {'value': 'maria-eduarda96@hotmail.com', 'type': 'email'}, 'account': {'id': 'd1177c5163dc4680bb63291bfb2dce65', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': '0d3edd69ab064855ac2e56117c3f4d02', 'owner': {'name': 'Nome Legal da Empresa', 'national_registration': '42683175000190', 'type': 'business'}, 'routing_number': '001', 'number': '467505114', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}, 'resource': 'pix.entry'}</msg>
<status status="PASS" starttime="20210322 17:42:15.808" endtime="20210322 17:42:15.811"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:42:15.813" level="INFO">c089b98c878bb26f</msg>
<status status="PASS" starttime="20210322 17:42:15.812" endtime="20210322 17:42:15.814"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 17:42:15.816" level="INFO">202</msg>
<status status="PASS" starttime="20210322 17:42:15.815" endtime="20210322 17:42:15.816"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:42:15.819" level="INFO">${response} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20210322 17:42:15.817" endtime="20210322 17:42:15.819"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${entry_external_key}</var>
</assign>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:42:15.821" endtime="20210322 17:42:15.823"></status>
</kw>
<msg timestamp="20210322 17:42:15.823" level="INFO">${entry_external_key} = ca149649ab124995b78f3da4eaae880d</msg>
<status status="PASS" starttime="20210322 17:42:15.820" endtime="20210322 17:42:15.823"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${entry_external_key}</arg>
</arguments>
<msg timestamp="20210322 17:42:15.824" level="INFO">${entry_external_key} = ca149649ab124995b78f3da4eaae880d</msg>
<status status="PASS" starttime="20210322 17:42:15.824" endtime="20210322 17:42:15.825"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["key"]["value"]}</arg>
</arguments>
<assign>
<var>${entry_key_value}</var>
</assign>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["key"]["value"]}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:42:15.827" endtime="20210322 17:42:15.828"></status>
</kw>
<msg timestamp="20210322 17:42:15.828" level="INFO">${entry_key_value} = maria-eduarda96@hotmail.com</msg>
<status status="PASS" starttime="20210322 17:42:15.825" endtime="20210322 17:42:15.828"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${entry_key_value}</arg>
</arguments>
<msg timestamp="20210322 17:42:15.829" level="INFO">${entry_key_value} = maria-eduarda96@hotmail.com</msg>
<status status="PASS" starttime="20210322 17:42:15.828" endtime="20210322 17:42:15.829"></status>
</kw>
<status status="PASS" starttime="20210322 17:42:15.098" endtime="20210322 17:42:15.829"></status>
</kw>
<status status="PASS" starttime="20210322 17:42:15.097" endtime="20210322 17:42:15.829"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${pix_type}' == 'phone'</arg>
<arg>buscar verification code</arg>
<arg>${holder_external_key}</arg>
<arg>${account_external_key}</arg>
<arg>${entry_external_key}</arg>
<arg>ELSE IF</arg>
<arg>'${pix_type}' == 'email'</arg>
<arg>buscar verification code</arg>
<arg>${holder_external_key}</arg>
<arg>${account_external_key}</arg>
<arg>${entry_external_key}</arg>
</arguments>
<kw name="buscar verification code" library="pix_dict_verification_code">
<arguments>
<arg>${holder_external_key}</arg>
<arg>${account_external_key}</arg>
<arg>${entry_external_key}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 17:42:15.832" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 17:42:15.832" endtime="20210322 17:42:15.833"></status>
</kw>
<status status="PASS" starttime="20210322 17:42:15.831" endtime="20210322 17:42:15.833"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/admin/internal_operation/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries/${entry_external_key}/code</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:42:15.835" level="INFO">GET Request using : uri=/admin/internal_operation/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/0d3edd69ab064855ac2e56117c3f4d02/accounts/d1177c5163dc4680bb63291bfb2dce65/entries/ca149649ab124995b78f3da4eaae880d/code, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 17:42:16.499" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 17:42:15.834" endtime="20210322 17:42:16.500"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:42:16.502" level="INFO">{'code': '3788'}</msg>
<status status="PASS" starttime="20210322 17:42:16.501" endtime="20210322 17:42:16.503"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:42:16.505" level="INFO">6968b95893c8d252</msg>
<status status="PASS" starttime="20210322 17:42:16.504" endtime="20210322 17:42:16.505"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 17:42:16.506" level="INFO">200</msg>
<status status="PASS" starttime="20210322 17:42:16.505" endtime="20210322 17:42:16.507"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:42:16.508" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 17:42:16.507" endtime="20210322 17:42:16.508"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["code"]}</arg>
</arguments>
<assign>
<var>${verification_code}</var>
</assign>
<msg timestamp="20210322 17:42:16.510" level="INFO">${verification_code} = 3788</msg>
<status status="PASS" starttime="20210322 17:42:16.509" endtime="20210322 17:42:16.510"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${verification_code}</arg>
</arguments>
<msg timestamp="20210322 17:42:16.512" level="INFO">${verification_code} = 3788</msg>
<status status="PASS" starttime="20210322 17:42:16.511" endtime="20210322 17:42:16.512"></status>
</kw>
<status status="PASS" starttime="20210322 17:42:15.830" endtime="20210322 17:42:16.512"></status>
</kw>
<status status="PASS" starttime="20210322 17:42:15.830" endtime="20210322 17:42:16.513"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${pix_type}' == 'phone'</arg>
<arg>confirmar propriedade da chave pix</arg>
<arg>${verification_code}</arg>
<arg>${holder_external_key}</arg>
<arg>${account_external_key}</arg>
<arg>${entry_external_key}</arg>
<arg>ELSE IF</arg>
<arg>'${pix_type}' == 'email'</arg>
<arg>confirmar propriedade da chave pix</arg>
<arg>${verification_code}</arg>
<arg>${holder_external_key}</arg>
<arg>${account_external_key}</arg>
<arg>${entry_external_key}</arg>
</arguments>
<kw name="confirmar propriedade da chave pix" library="pix_dict_confirm_propriety">
<arguments>
<arg>${verification_code}</arg>
<arg>${holder_external_key}</arg>
<arg>${account_external_key}</arg>
<arg>${entry_external_key}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 17:42:16.519" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 17:42:16.518" endtime="20210322 17:42:16.520"></status>
</kw>
<status status="PASS" starttime="20210322 17:42:16.516" endtime="20210322 17:42:16.520"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:42:16.521" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 17:42:16.521" endtime="20210322 17:42:16.521"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"code": "${verification_code}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 17:42:16.522" level="INFO">${body} = { "code": "3788" }</msg>
<status status="PASS" starttime="20210322 17:42:16.522" endtime="20210322 17:42:16.522"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries/${entry_external_key}/ownership</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:42:16.523" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/0d3edd69ab064855ac2e56117c3f4d02/accounts/d1177c5163dc4680bb63291bfb2dce65/entries/ca149649ab124995b78f3da4eaae880d/ownership, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "code": "3788" } 
json=None</msg>
<msg timestamp="20210322 17:42:18.196" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:42:16.522" endtime="20210322 17:42:18.197"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:42:18.198" level="INFO">{'id': 'ca149649ab124995b78f3da4eaae880d', 'status': 'active', 'created_at': '2021-03-22T05:42:16.996', 'updated_at': '2021-03-22T05:42:19.412', 'key': {'value': 'maria-eduarda96@hotmail.com', 'type': 'email'}, 'account': {'id': 'd1177c5163dc4680bb63291bfb2dce65', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': '0d3edd69ab064855ac2e56117c3f4d02', 'owner': {'name': 'Nome Legal da Empresa', 'national_registration': '42683175000190', 'type': 'business'}, 'routing_number': '001', 'number': '467505114', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}, 'resource': 'pix.entry'}</msg>
<status status="PASS" starttime="20210322 17:42:18.197" endtime="20210322 17:42:18.198"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:42:18.200" level="INFO">66bddc8c436c4ba7</msg>
<status status="PASS" starttime="20210322 17:42:18.199" endtime="20210322 17:42:18.200"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 17:42:18.201" level="INFO">201</msg>
<status status="PASS" starttime="20210322 17:42:18.200" endtime="20210322 17:42:18.201"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:42:18.202" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:42:18.202" endtime="20210322 17:42:18.203"></status>
</kw>
<status status="PASS" starttime="20210322 17:42:16.515" endtime="20210322 17:42:18.203"></status>
</kw>
<status status="PASS" starttime="20210322 17:42:16.514" endtime="20210322 17:42:18.203"></status>
</kw>
<status status="PASS" starttime="20210322 17:42:09.872" endtime="20210322 17:42:18.203"></status>
</kw>
<kw name="criar pagamento pix com dados completos" library="pix_payments_create_pix_payment">
<arguments>
<arg>amount=${amount}</arg>
<arg>creditor_account_number=${creditor_account_number}</arg>
<arg>creditor_routing_number=${creditor_routing_number}</arg>
<arg>creditor_account_type=${creditor_account_type}</arg>
<arg>creditor_name=${creditor_name}</arg>
<arg>creditor_national_registration=${creditor_national_registration}</arg>
<arg>creditor_psp=${creditor_psp}</arg>
<arg>pix_description=${pix_description}</arg>
</arguments>
<kw name="conectar pix-payments" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-payments</arg>
<arg>url=${pix_payments_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 17:42:18.207" level="INFO">Creating Session using : alias=pix-payments, url=https://banking-pix-payments-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 17:42:18.207" endtime="20210322 17:42:18.208"></status>
</kw>
<status status="PASS" starttime="20210322 17:42:18.206" endtime="20210322 17:42:18.208"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:42:18.209" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 17:42:18.209" endtime="20210322 17:42:18.209"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"amount": ${amount},</arg>
<arg>"creditor": {</arg>
<arg>"account": {</arg>
<arg>"number": "${creditor_account_number}",</arg>
<arg>"routing_number": "${creditor_routing_number}",</arg>
<arg>"type": "${creditor_account_type}"</arg>
<arg>},</arg>
<arg>"name": "${creditor_name}",</arg>
<arg>"national_registration": "${creditor_national_registration}",</arg>
<arg>"psp": "${creditor_psp}"</arg>
<arg>},</arg>
<arg>"description": "${pix_description}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 17:42:18.211" level="INFO">${body} = { "amount": 100, "creditor": { "account": { "number": "0243882974", "routing_number": "0500", "type": "cacc" }, "name": "Massa iti PF NauNNMO", "national_registration": "42808422644", "psp": "17192451...</msg>
<status status="PASS" starttime="20210322 17:42:18.210" endtime="20210322 17:42:18.211"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-payments</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/pix/holders/${holder_external_key}/accounts/${account_external_key}/payments</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:42:18.212" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/pix/holders/0d3edd69ab064855ac2e56117c3f4d02/accounts/d1177c5163dc4680bb63291bfb2dce65/payments, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "amount": 100, "creditor": { "account": { "number": "0243882974", "routing_number": "0500", "type": "cacc" }, "name": "Massa iti PF NauNNMO", "national_registration": "42808422644", "psp": "17192451" }, "description": "Envio de PIX" } 
json=None</msg>
<msg timestamp="20210322 17:42:18.905" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:42:18.211" endtime="20210322 17:42:18.905"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:42:18.907" level="INFO">{'id': 'f610eda928d947fe9ff44d572d02fd09', 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'status': 'pending', 'end_to_end_id': 'E1946824220210322204285eecbf584a', 'message_id': 'M19468242859457c9b30035b4455644d', 'amount': 100, 'created_at': '2021-03-22T17:42:20.060349', 'description': 'Envio de PIX', 'debtor': {'national_registration': '42683175000190', 'name': 'Holder de teste', 'type': 'individual', 'holder_id': '0d3edd69ab064855ac2e56117c3f4d02', 'account': {'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}, 'digital_account_id': 'd1177c5163dc4680bb63291bfb2dce65', 'number': '467505114', 'routing_number': '0001', 'type': 'cacc'}}, 'creditor': {'national_registration': '42808422644', 'name': 'Massa iti PF NauNNMO', 'type': 'individual', 'account': {'psp': {'code': '17192451'}, 'number': '0243882974', 'routing_number': '0500', 'type': 'cacc'}}, 'refunded_amount': 0}</msg>
<status status="PASS" starttime="20210322 17:42:18.906" endtime="20210322 17:42:18.908"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:42:18.909" level="INFO">c7e427e0fe2b69f1</msg>
<status status="PASS" starttime="20210322 17:42:18.908" endtime="20210322 17:42:18.910"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 17:42:18.911" level="INFO">201</msg>
<status status="PASS" starttime="20210322 17:42:18.910" endtime="20210322 17:42:18.912"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:42:18.913" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:42:18.912" endtime="20210322 17:42:18.914"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${payment_external_key}</var>
</assign>
<msg timestamp="20210322 17:42:18.916" level="INFO">${payment_external_key} = f610eda928d947fe9ff44d572d02fd09</msg>
<status status="PASS" starttime="20210322 17:42:18.914" endtime="20210322 17:42:18.916"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${payment_external_key}</arg>
</arguments>
<msg timestamp="20210322 17:42:18.917" level="INFO">${payment_external_key} = f610eda928d947fe9ff44d572d02fd09</msg>
<status status="PASS" starttime="20210322 17:42:18.917" endtime="20210322 17:42:18.918"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["end_to_end_id"]}</arg>
</arguments>
<assign>
<var>${end_to_end_id}</var>
</assign>
<msg timestamp="20210322 17:42:18.919" level="INFO">${end_to_end_id} = E1946824220210322204285eecbf584a</msg>
<status status="PASS" starttime="20210322 17:42:18.918" endtime="20210322 17:42:18.919"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${end_to_end_id}</arg>
</arguments>
<msg timestamp="20210322 17:42:18.921" level="INFO">${end_to_end_id} = E1946824220210322204285eecbf584a</msg>
<status status="PASS" starttime="20210322 17:42:18.920" endtime="20210322 17:42:18.921"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["message_id"]}</arg>
</arguments>
<assign>
<var>${message_id}</var>
</assign>
<msg timestamp="20210322 17:42:18.923" level="INFO">${message_id} = M19468242859457c9b30035b4455644d</msg>
<status status="PASS" starttime="20210322 17:42:18.921" endtime="20210322 17:42:18.923"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${message_id}</arg>
</arguments>
<msg timestamp="20210322 17:42:18.924" level="INFO">${message_id} = M19468242859457c9b30035b4455644d</msg>
<status status="PASS" starttime="20210322 17:42:18.924" endtime="20210322 17:42:18.925"></status>
</kw>
<status status="PASS" starttime="20210322 17:42:18.204" endtime="20210322 17:42:18.925"></status>
</kw>
<kw name="validar pagamento pix" library="asserts">
<arguments>
<arg>marketplace_external_key=${marketplace_external_key}</arg>
<arg>status_pix_payments=pending</arg>
<arg>amount=${amount}</arg>
<arg>pix_description=${pix_description}</arg>
<arg>debitor_national_registration=${national_registration}</arg>
<arg>debitor_name=${holder_name}</arg>
<arg>debitor_type=${holder_type}</arg>
<arg>debitor_holder_id=${holder_external_key}</arg>
<arg>debtor_account_psp_code=${debtor_account_psp_code}</arg>
<arg>debtor_account_psp_name=${debtor_account_psp_name}</arg>
<arg>debtor_digital_account=${account_external_key}</arg>
<arg>debtor_account_number=${account_number}</arg>
<arg>debtor_account_routing_number=${account_routing_number}</arg>
<arg>debtor_account_type=${debtor_account_type}</arg>
<arg>creditor_national_registration=${creditor_national_registration}</arg>
<arg>creditor_name=${creditor_name}</arg>
<arg>creditor_type=individual</arg>
<arg>creditor_account_psp_code=${creditor_psp}</arg>
<arg>creditor_account_number=${creditor_account_number}</arg>
<arg>creditor_account_routing_number=${creditor_routing_number}</arg>
<arg>creditor_account_type=${creditor_account_type}</arg>
<arg>refunded_amount=0</arg>
</arguments>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<arguments>
<arg>result_format=datetime</arg>
</arguments>
<assign>
<var>${date}</var>
</assign>
<msg timestamp="20210322 17:42:18.928" level="INFO">${date} = 2021-03-22 17:42:18.928025</msg>
<status status="PASS" starttime="20210322 17:42:18.927" endtime="20210322 17:42:18.928"></status>
</kw>
<kw name="Convert Date" library="DateTime">
<doc>Converts between supported `date formats`.</doc>
<arguments>
<arg>${date}</arg>
<arg>exclude_millis=yes</arg>
<arg>result_format=%Y-%m-%d</arg>
<arg>date_format=%d-%m-%Y</arg>
</arguments>
<assign>
<var>${date}</var>
</assign>
<msg timestamp="20210322 17:42:18.929" level="INFO">${date} = 2021-03-22</msg>
<status status="PASS" starttime="20210322 17:42:18.928" endtime="20210322 17:42:18.929"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["marketplace_id"]}</arg>
<arg>${marketplace_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:42:18.929" endtime="20210322 17:42:18.930"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["status"]}</arg>
<arg>${status_pix_payments}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:42:18.930" endtime="20210322 17:42:18.931"></status>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${response.json()["end_to_end_id"]}</arg>
</arguments>
<msg timestamp="20210322 17:42:18.932" level="INFO">Length is 32</msg>
<status status="PASS" starttime="20210322 17:42:18.931" endtime="20210322 17:42:18.932"></status>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${response.json()["message_id"]}</arg>
</arguments>
<msg timestamp="20210322 17:42:18.933" level="INFO">Length is 32</msg>
<status status="PASS" starttime="20210322 17:42:18.932" endtime="20210322 17:42:18.933"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.json()["amount"]}</arg>
<arg>${amount}</arg>
</arguments>
<msg timestamp="20210322 17:42:18.934" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:42:18.933" endtime="20210322 17:42:18.934"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["description"]}</arg>
<arg>${pix_description}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:42:18.934" endtime="20210322 17:42:18.935"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["national_registration"]}</arg>
<arg>${debitor_national_registration}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:42:18.935" endtime="20210322 17:42:18.936"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["name"]}</arg>
<arg>${debitor_name}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:42:18.936" endtime="20210322 17:42:18.937"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["type"]}</arg>
<arg>${debitor_type}</arg>
</arguments>
<msg timestamp="20210322 17:42:18.938" level="FAIL">individual != business</msg>
<status status="FAIL" starttime="20210322 17:42:18.937" endtime="20210322 17:42:18.938"></status>
</kw>
<status status="FAIL" starttime="20210322 17:42:18.925" endtime="20210322 17:42:18.938"></status>
</kw>
<doc>Envio de PIX com sucesso para uma conta Iti, a partir de um Holder Individual</doc>
<tags>
<tag>smoke_test</tag>
</tags>
<status status="FAIL" starttime="20210322 17:42:09.872" endtime="20210322 17:42:18.938" critical="yes">individual != business</status>
</test>
<test id="s1-s1-s1-t2" name="CenÃ¡rio: Criar pagamento PIX de para holder individual utilizando dados completos da conta de destino">
<kw name="criar chave pix ativa" library="pix_dict_create_active_key_pix">
<arguments>
<arg>holder_type=individual</arg>
<arg>pix_type=email</arg>
</arguments>
<kw name="Random Number" library="FakerLibrary">
<doc>Returns a random number with 1 digit (default, when digits==None),
a random number with 0 to given number of digits, or a random number
with given number to given number of digits (when ``fix_len==True``).</doc>
<arguments>
<arg>digits=8</arg>
<arg>fix_len=True</arg>
</arguments>
<assign>
<var>${phone}</var>
</assign>
<msg timestamp="20210322 17:42:19.343" level="INFO">${phone} = 40329819</msg>
<status status="PASS" starttime="20210322 17:42:19.342" endtime="20210322 17:42:19.343"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>+55219${phone}</arg>
</arguments>
<assign>
<var>${phone_pix}</var>
</assign>
<msg timestamp="20210322 17:42:19.344" level="INFO">${phone_pix} = +5521940329819</msg>
<status status="PASS" starttime="20210322 17:42:19.344" endtime="20210322 17:42:19.344"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${phone_pix}</arg>
</arguments>
<msg timestamp="20210322 17:42:19.346" level="INFO">${phone_pix} = +5521940329819</msg>
<status status="PASS" starttime="20210322 17:42:19.345" endtime="20210322 17:42:19.346"></status>
</kw>
<kw name="Email" library="FakerLibrary">
<assign>
<var>${email_pix}</var>
</assign>
<msg timestamp="20210322 17:42:19.348" level="INFO">${email_pix} = gda-rocha@pires.net</msg>
<status status="PASS" starttime="20210322 17:42:19.347" endtime="20210322 17:42:19.348"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${email_pix}</arg>
</arguments>
<msg timestamp="20210322 17:42:19.349" level="INFO">${email_pix} = gda-rocha@pires.net</msg>
<status status="PASS" starttime="20210322 17:42:19.348" endtime="20210322 17:42:19.349"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${holder_type}' == 'business'</arg>
<arg>criar holder business ativo</arg>
<arg>ELSE IF</arg>
<arg>'${holder_type}' == 'individual'</arg>
<arg>criar holder individual ativo</arg>
</arguments>
<kw name="criar holder individual ativo" library="accreditation_create_holder_active">
<kw name="conectar accreditation" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accreditation</arg>
<arg>url=${accreditation_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 17:42:19.352" level="INFO">Creating Session using : alias=accreditation, url=https://banking-accreditation-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 17:42:19.352" endtime="20210322 17:42:19.353"></status>
</kw>
<status status="PASS" starttime="20210322 17:42:19.351" endtime="20210322 17:42:19.353"></status>
</kw>
<kw name="Cpf" library="FakerLibrary">
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 17:42:19.354" level="INFO">${national_registration} = 156.039.847-75</msg>
<status status="PASS" starttime="20210322 17:42:19.353" endtime="20210322 17:42:19.354"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${national_registration}</arg>
<arg>.</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 17:42:19.355" level="INFO">${national_registration} = 156039847-75</msg>
<status status="PASS" starttime="20210322 17:42:19.354" endtime="20210322 17:42:19.355"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${national_registration}</arg>
<arg>-</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 17:42:19.356" level="INFO">${national_registration} = 15603984775</msg>
<status status="PASS" starttime="20210322 17:42:19.355" endtime="20210322 17:42:19.356"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${national_registration}</arg>
</arguments>
<msg timestamp="20210322 17:42:19.357" level="INFO">${national_registration} = 15603984775</msg>
<status status="PASS" starttime="20210322 17:42:19.356" endtime="20210322 17:42:19.357"></status>
</kw>
<kw name="Rg" library="FakerLibrary">
<doc>Brazilian RG, return plain numbers.
Check:  https://www.ngmatematica.com/2014/02/como-determinar-o-digito-verificador-do.html</doc>
<assign>
<var>${identity_card}</var>
</assign>
<msg timestamp="20210322 17:42:19.359" level="INFO">${identity_card} = 148032564</msg>
<status status="PASS" starttime="20210322 17:42:19.357" endtime="20210322 17:42:19.359"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${identity_card}</arg>
</arguments>
<msg timestamp="20210322 17:42:19.359" level="INFO">${identity_card} = 148032564</msg>
<status status="PASS" starttime="20210322 17:42:19.359" endtime="20210322 17:42:19.359"></status>
</kw>
<kw name="criar holder individual" library="accreditation_post_holder_individual">
<arguments>
<arg>holder_type=individual</arg>
<arg>holder_name=${holder_name}</arg>
<arg>email=${email}</arg>
<arg>national_registration=${national_registration}</arg>
<arg>revenue=${revenue}</arg>
<arg>birthday=${birthday}</arg>
<arg>mothers_name=${mothers_name}</arg>
<arg>identity_card=${identity_card}</arg>
<arg>pep=false</arg>
<arg>cbo=${cbo}</arg>
</arguments>
<kw name="conectar accreditation" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accreditation</arg>
<arg>url=${accreditation_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 17:42:19.361" level="INFO">Creating Session using : alias=accreditation, url=https://banking-accreditation-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 17:42:19.361" endtime="20210322 17:42:19.362"></status>
</kw>
<status status="PASS" starttime="20210322 17:42:19.361" endtime="20210322 17:42:19.362"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_type}</arg>
</arguments>
<msg timestamp="20210322 17:42:19.363" level="INFO">${holder_type} = individual</msg>
<status status="PASS" starttime="20210322 17:42:19.362" endtime="20210322 17:42:19.363"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_name}</arg>
</arguments>
<msg timestamp="20210322 17:42:19.363" level="INFO">${holder_name} = Holder de teste</msg>
<status status="PASS" starttime="20210322 17:42:19.363" endtime="20210322 17:42:19.364"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:42:19.364" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 17:42:19.364" endtime="20210322 17:42:19.364"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "${holder_type}",</arg>
<arg>"name": "${holder_name}",</arg>
<arg>"email": "${email}",</arg>
<arg>"national_registration": "${national_registration}",</arg>
<arg>"revenue": ${revenue},</arg>
<arg>"birthday": "${birthday}",</arg>
<arg>"mothers_name": "${mothers_name}",</arg>
<arg>"identity_card": "${identity_card}",</arg>
<arg>"pep": false,</arg>
<arg>"cbo": ${cbo}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 17:42:19.365" level="INFO">${body} = { "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "15603984775", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "MÃ£e do Holder",...</msg>
<status status="PASS" starttime="20210322 17:42:19.365" endtime="20210322 17:42:19.365"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:42:19.366" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "15603984775", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "MÃ£e do Holder", "identity_card": "148032564", "pep": false, "cbo": 821450 } 
json=None</msg>
<msg timestamp="20210322 17:42:20.085" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:42:19.366" endtime="20210322 17:42:20.085"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:42:20.088" level="INFO">{'id': '44227ec1a3b145648bc56f1c8f341020', 'name': 'Holder de teste', 'revenue': 5500.0, 'email': 'teste@teste.com.br', 'status': 'waiting_info_and_documents', 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'marketplace_name': 'Marketplace de Teste', 'created_at': '2021-03-22T17:42:21.239666', 'updated_at': '2021-03-22T17:42:21.239667', 'type': 'individual', 'national_registration': '15603984775', 'birthday': '1988-04-23', 'mothers_name': 'MÃ£e do Holder', 'identity_card': '148032564', 'pep': False, 'cbo': '821450', '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/44227ec1a3b145648bc56f1c8f341020', 'type': 'GET'}, 'phones': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/44227ec1a3b145648bc56f1c8f341020/phones', 'type': 'GET'}, 'addresses': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/44227ec1a3b145648bc56f1c8f341020/addresses', 'type': 'GET'}, 'documents': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/44227ec1a3b145648bc56f1c8f341020/documents', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 17:42:20.087" endtime="20210322 17:42:20.088"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:42:20.090" level="INFO">8f982fb72db7fdbe</msg>
<status status="PASS" starttime="20210322 17:42:20.089" endtime="20210322 17:42:20.090"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${body}</arg>
</arguments>
<msg timestamp="20210322 17:42:20.092" level="INFO">{ "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "15603984775", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "MÃ£e do Holder", "identity_card": "148032564", "pep": false, "cbo": 821450 }</msg>
<status status="PASS" starttime="20210322 17:42:20.091" endtime="20210322 17:42:20.093"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:42:20.094" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:42:20.093" endtime="20210322 17:42:20.094"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${holder_external_key}</var>
</assign>
<msg timestamp="20210322 17:42:20.096" level="INFO">${holder_external_key} = 44227ec1a3b145648bc56f1c8f341020</msg>
<status status="PASS" starttime="20210322 17:42:20.095" endtime="20210322 17:42:20.096"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_external_key}</arg>
</arguments>
<msg timestamp="20210322 17:42:20.097" level="INFO">${holder_external_key} = 44227ec1a3b145648bc56f1c8f341020</msg>
<status status="PASS" starttime="20210322 17:42:20.096" endtime="20210322 17:42:20.097"></status>
</kw>
<status status="PASS" starttime="20210322 17:42:19.359" endtime="20210322 17:42:20.097"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_name}</arg>
</arguments>
<msg timestamp="20210322 17:42:20.098" level="INFO">${holder_name} = Holder de teste</msg>
<status status="PASS" starttime="20210322 17:42:20.098" endtime="20210322 17:42:20.098"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 17:42:20.099" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:42:20.099" endtime="20210322 17:42:20.099"></status>
</kw>
<kw name="criar holder phone" library="accreditation_post_holder_phone">
<arguments>
<arg>21</arg>
<arg>51</arg>
<arg>996221236</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:42:20.102" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 17:42:20.100" endtime="20210322 17:42:20.102"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"area_code": "${phone_area_code}",</arg>
<arg>"country_code": "${phone_country_code}",</arg>
<arg>"number": "${phone_number}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 17:42:20.102" level="INFO">${body} = { "area_code": "21", "country_code": "51", "number": "996221236" }</msg>
<status status="PASS" starttime="20210322 17:42:20.102" endtime="20210322 17:42:20.102"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/phones</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:42:20.103" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/44227ec1a3b145648bc56f1c8f341020/phones, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "area_code": "21", "country_code": "51", "number": "996221236" } 
json=None</msg>
<msg timestamp="20210322 17:42:20.375" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:42:20.102" endtime="20210322 17:42:20.375"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:42:20.377" level="INFO">{'id': 'd12a6dc68d594f36a035e33f3dfae68f', 'area_code': '21', 'country_code': '51', 'number': '996221236', 'main': True, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/44227ec1a3b145648bc56f1c8f341020/phones/d12a6dc68d594f36a035e33f3dfae68f', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/44227ec1a3b145648bc56f1c8f341020', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 17:42:20.376" endtime="20210322 17:42:20.377"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:42:20.379" level="INFO">e0994b49d97406a9</msg>
<status status="PASS" starttime="20210322 17:42:20.379" endtime="20210322 17:42:20.379"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:42:20.381" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:42:20.380" endtime="20210322 17:42:20.381"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${phone_external_key}</var>
</assign>
<msg timestamp="20210322 17:42:20.384" level="INFO">${phone_external_key} = d12a6dc68d594f36a035e33f3dfae68f</msg>
<status status="PASS" starttime="20210322 17:42:20.382" endtime="20210322 17:42:20.384"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${phone_external_key}</arg>
</arguments>
<msg timestamp="20210322 17:42:20.386" level="INFO">${phone_external_key} = d12a6dc68d594f36a035e33f3dfae68f</msg>
<status status="PASS" starttime="20210322 17:42:20.385" endtime="20210322 17:42:20.386"></status>
</kw>
<status status="PASS" starttime="20210322 17:42:20.100" endtime="20210322 17:42:20.386"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 17:42:20.387" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:42:20.387" endtime="20210322 17:42:20.388"></status>
</kw>
<kw name="criar holder address" library="accreditation_post_holder_address">
<arguments>
<arg>Rio de Janeiro</arg>
<arg>Rio de Janeiro</arg>
<arg>Brasil</arg>
<arg>Bairro de Testes</arg>
<arg>Rua de Testes</arg>
<arg>90</arg>
<arg>apto 200</arg>
<arg>21550987</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:42:20.390" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 17:42:20.390" endtime="20210322 17:42:20.390"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"city": "${city}",</arg>
<arg>"state": "${state}",</arg>
<arg>"country": "${country}",</arg>
<arg>"neighborhood": "${neighborhood}",</arg>
<arg>"street": "${street}",</arg>
<arg>"number": "${number}",</arg>
<arg>"complement": "${complement}",</arg>
<arg>"postal_code": "${postal_code}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 17:42:20.392" level="INFO">${body} = { "city": "Rio de Janeiro", "state": "Rio de Janeiro", "country": "Brasil", "neighborhood": "Bairro de Testes", "street": "Rua de Testes", "number": "90", "complement": "apto 200", "postal_code": "215...</msg>
<status status="PASS" starttime="20210322 17:42:20.391" endtime="20210322 17:42:20.392"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/addresses</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:42:20.394" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/44227ec1a3b145648bc56f1c8f341020/addresses, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "city": "Rio de Janeiro", "state": "Rio de Janeiro", "country": "Brasil", "neighborhood": "Bairro de Testes", "street": "Rua de Testes", "number": "90", "complement": "apto 200", "postal_code": "21550987" } 
json=None</msg>
<msg timestamp="20210322 17:42:20.621" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:42:20.393" endtime="20210322 17:42:20.622"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:42:20.625" level="INFO">{'id': 'e18b169e8abc4480adb7772af3bd161f', 'street': 'Rua de Testes', 'number': '90', 'city': 'Rio de Janeiro', 'complement': 'apto 200', 'state': 'Rio de Janeiro', 'neighborhood': 'Bairro de Testes', 'postal_code': '21550987', 'country': 'Brasil', 'main': True, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/44227ec1a3b145648bc56f1c8f341020/addresses/e18b169e8abc4480adb7772af3bd161f', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/44227ec1a3b145648bc56f1c8f341020', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 17:42:20.623" endtime="20210322 17:42:20.625"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:42:20.626" level="INFO">75095dd2479c1ba7</msg>
<status status="PASS" starttime="20210322 17:42:20.625" endtime="20210322 17:42:20.627"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:42:20.629" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:42:20.628" endtime="20210322 17:42:20.629"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${address_external_key}</var>
</assign>
<msg timestamp="20210322 17:42:20.632" level="INFO">${address_external_key} = e18b169e8abc4480adb7772af3bd161f</msg>
<status status="PASS" starttime="20210322 17:42:20.630" endtime="20210322 17:42:20.632"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${address_external_key}</arg>
</arguments>
<msg timestamp="20210322 17:42:20.633" level="INFO">${address_external_key} = e18b169e8abc4480adb7772af3bd161f</msg>
<status status="PASS" starttime="20210322 17:42:20.632" endtime="20210322 17:42:20.633"></status>
</kw>
<status status="PASS" starttime="20210322 17:42:20.388" endtime="20210322 17:42:20.634"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 17:42:20.635" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:42:20.634" endtime="20210322 17:42:20.635"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>SELFIE</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:42:20.637" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 17:42:20.637" endtime="20210322 17:42:20.637"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 17:42:20.638" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 17:42:20.640" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 17:42:20.638" endtime="20210322 17:42:20.640"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:42:20.642" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/44227ec1a3b145648bc56f1c8f341020/documents?type=SELFIE, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 17:42:20.915" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:42:20.641" endtime="20210322 17:42:20.916"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:42:20.918" level="INFO">{'id': 'ba70eec1ffba40c5b7bb2c2a0a74e24c', 'document_type': 'selfie', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/44227ec1a3b145648bc56f1c8f341020/documents/ba70eec1ffba40c5b7bb2c2a0a74e24c', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/44227ec1a3b145648bc56f1c8f341020', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/44227ec1a3b145648bc56f1c8f341020/documents/ba70eec1ffba40c5b7bb2c2a0a74e24c/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 17:42:20.917" endtime="20210322 17:42:20.919"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:42:20.922" level="INFO">e31e6a95ad46ef8b</msg>
<status status="PASS" starttime="20210322 17:42:20.920" endtime="20210322 17:42:20.922"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:42:20.924" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:42:20.923" endtime="20210322 17:42:20.925"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 17:42:20.927" level="INFO">${document_external_key} = ba70eec1ffba40c5b7bb2c2a0a74e24c</msg>
<status status="PASS" starttime="20210322 17:42:20.925" endtime="20210322 17:42:20.927"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 17:42:20.928" level="INFO">${document_external_key} = ba70eec1ffba40c5b7bb2c2a0a74e24c</msg>
<status status="PASS" starttime="20210322 17:42:20.928" endtime="20210322 17:42:20.928"></status>
</kw>
<status status="PASS" starttime="20210322 17:42:20.636" endtime="20210322 17:42:20.928"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 17:42:20.931" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:42:20.930" endtime="20210322 17:42:20.931"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>RG_FRENTE</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:42:20.933" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 17:42:20.933" endtime="20210322 17:42:20.934"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 17:42:20.934" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 17:42:20.937" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 17:42:20.934" endtime="20210322 17:42:20.937"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:42:20.938" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/44227ec1a3b145648bc56f1c8f341020/documents?type=RG_FRENTE, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 17:42:21.268" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:42:20.937" endtime="20210322 17:42:21.268"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:42:21.271" level="INFO">{'id': '628690ec9cf647a4b906bf1e218ccd65', 'document_type': 'rg_frente', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/44227ec1a3b145648bc56f1c8f341020/documents/628690ec9cf647a4b906bf1e218ccd65', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/44227ec1a3b145648bc56f1c8f341020', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/44227ec1a3b145648bc56f1c8f341020/documents/628690ec9cf647a4b906bf1e218ccd65/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 17:42:21.269" endtime="20210322 17:42:21.271"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:42:21.273" level="INFO">1a785f17405b30b6</msg>
<status status="PASS" starttime="20210322 17:42:21.272" endtime="20210322 17:42:21.274"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:42:21.276" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:42:21.275" endtime="20210322 17:42:21.278"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 17:42:21.281" level="INFO">${document_external_key} = 628690ec9cf647a4b906bf1e218ccd65</msg>
<status status="PASS" starttime="20210322 17:42:21.279" endtime="20210322 17:42:21.281"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 17:42:21.282" level="INFO">${document_external_key} = 628690ec9cf647a4b906bf1e218ccd65</msg>
<status status="PASS" starttime="20210322 17:42:21.282" endtime="20210322 17:42:21.283"></status>
</kw>
<status status="PASS" starttime="20210322 17:42:20.931" endtime="20210322 17:42:21.283"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 17:42:21.284" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:42:21.283" endtime="20210322 17:42:21.284"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>RG_VERSO</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:42:21.287" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 17:42:21.286" endtime="20210322 17:42:21.287"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 17:42:21.288" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 17:42:21.289" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 17:42:21.287" endtime="20210322 17:42:21.289"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:42:21.291" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/44227ec1a3b145648bc56f1c8f341020/documents?type=RG_VERSO, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 17:42:21.585" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:42:21.290" endtime="20210322 17:42:21.585"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:42:21.586" level="INFO">{'id': '14fdf0ee8c0e41b6a63c076d32bb3c3a', 'document_type': 'rg_verso', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/44227ec1a3b145648bc56f1c8f341020/documents/14fdf0ee8c0e41b6a63c076d32bb3c3a', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/44227ec1a3b145648bc56f1c8f341020', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/44227ec1a3b145648bc56f1c8f341020/documents/14fdf0ee8c0e41b6a63c076d32bb3c3a/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 17:42:21.585" endtime="20210322 17:42:21.586"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:42:21.587" level="INFO">98029ac7897819e2</msg>
<status status="PASS" starttime="20210322 17:42:21.587" endtime="20210322 17:42:21.587"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:42:21.587" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:42:21.587" endtime="20210322 17:42:21.587"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 17:42:21.588" level="INFO">${document_external_key} = 14fdf0ee8c0e41b6a63c076d32bb3c3a</msg>
<status status="PASS" starttime="20210322 17:42:21.588" endtime="20210322 17:42:21.588"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 17:42:21.589" level="INFO">${document_external_key} = 14fdf0ee8c0e41b6a63c076d32bb3c3a</msg>
<status status="PASS" starttime="20210322 17:42:21.589" endtime="20210322 17:42:21.589"></status>
</kw>
<status status="PASS" starttime="20210322 17:42:21.285" endtime="20210322 17:42:21.589"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 17:42:21.590" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:42:21.590" endtime="20210322 17:42:21.591"></status>
</kw>
<kw name="solicitar aprovaÃ§Ã£o do holder" library="accreditation_request_approval">
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:42:21.591" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 17:42:21.591" endtime="20210322 17:42:21.591"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/approval</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:42:21.592" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/44227ec1a3b145648bc56f1c8f341020/approval, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data=None 
json=None</msg>
<msg timestamp="20210322 17:42:21.883" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 17:42:21.592" endtime="20210322 17:42:21.883"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:42:21.886" level="INFO">{'message': 'Approval request accepted successfully. Processing analysis'}</msg>
<status status="PASS" starttime="20210322 17:42:21.884" endtime="20210322 17:42:21.886"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:42:21.889" level="INFO">377c10d70665bf3d</msg>
<status status="PASS" starttime="20210322 17:42:21.887" endtime="20210322 17:42:21.890"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:42:21.893" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 17:42:21.891" endtime="20210322 17:42:21.893"></status>
</kw>
<status status="PASS" starttime="20210322 17:42:21.591" endtime="20210322 17:42:21.893"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 17:42:21.895" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:42:21.894" endtime="20210322 17:42:21.895"></status>
</kw>
<kw name="recebendo notificaÃ§Ã£o de aprovaÃ§Ã£o" library="accreditation_risk_notification">
<kw name="Uuid 4" library="FakerLibrary">
<doc>Generates a random UUID4 string.
:param cast_to: Specify what type the UUID should be cast to. Default is `str`
:type cast_to: callable</doc>
<assign>
<var>${assessment_id}</var>
</assign>
<msg timestamp="20210322 17:42:21.897" level="INFO">${assessment_id} = 48878c64-9499-4de2-b576-3760cec0ec45</msg>
<status status="PASS" starttime="20210322 17:42:21.896" endtime="20210322 17:42:21.897"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>year</arg>
</arguments>
<assign>
<var>${year}</var>
</assign>
<msg timestamp="20210322 17:42:21.898" level="INFO">${year} = 2021</msg>
<status status="PASS" starttime="20210322 17:42:21.898" endtime="20210322 17:42:21.898"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>month</arg>
</arguments>
<assign>
<var>${month}</var>
</assign>
<msg timestamp="20210322 17:42:21.899" level="INFO">${month} = 03</msg>
<status status="PASS" starttime="20210322 17:42:21.899" endtime="20210322 17:42:21.899"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>day</arg>
</arguments>
<assign>
<var>${day}</var>
</assign>
<msg timestamp="20210322 17:42:21.900" level="INFO">${day} = 22</msg>
<status status="PASS" starttime="20210322 17:42:21.900" endtime="20210322 17:42:21.900"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:42:21.901" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 17:42:21.901" endtime="20210322 17:42:21.901"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "risk.assessment.result",</arg>
<arg>"resource": "business.holder",</arg>
<arg>"created_at": "${year}-${month}-${day} 15:28:56.747Z",</arg>
<arg>"marketplace_id": "${marketplace_external_key}",</arg>
<arg>"object": {</arg>
<arg>"result": "APPROVED",</arg>
<arg>"holder_id": "${holder_external_key}",</arg>
<arg>"applicant_id": "${application_external_key}",</arg>
<arg>"assessment_id": "${assessment_id}"</arg>
<arg>}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 17:42:21.903" level="INFO">${body} = { "type": "risk.assessment.result", "resource": "business.holder", "created_at": "2021-03-22 15:28:56.747Z", "marketplace_id": "f71a8951368a4cc085cf7875ff44e61c", "object": { "result": "APPROVED", "ho...</msg>
<status status="PASS" starttime="20210322 17:42:21.902" endtime="20210322 17:42:21.903"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/admin/internal_operation/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/registration/approval</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:42:21.905" level="INFO">POST Request using : uri=/admin/internal_operation/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/44227ec1a3b145648bc56f1c8f341020/registration/approval, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "risk.assessment.result", "resource": "business.holder", "created_at": "2021-03-22 15:28:56.747Z", "marketplace_id": "f71a8951368a4cc085cf7875ff44e61c", "object": { "result": "APPROVED", "holder_id": "44227ec1a3b145648bc56f1c8f341020", "applicant_id": "bcc25a6751c14b52af1340d40dba78c5", "assessment_id": "48878c64-9499-4de2-b576-3760cec0ec45" } } 
json=None</msg>
<msg timestamp="20210322 17:42:22.122" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 17:42:21.904" endtime="20210322 17:42:22.122"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:42:22.124" level="INFO">{'message': 'Holder approved successfully'}</msg>
<status status="PASS" starttime="20210322 17:42:22.123" endtime="20210322 17:42:22.124"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:42:22.126" level="INFO">a44ed84ad2bfd300</msg>
<status status="PASS" starttime="20210322 17:42:22.125" endtime="20210322 17:42:22.127"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:42:22.127" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 17:42:22.127" endtime="20210322 17:42:22.128"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 17:42:22.129" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:42:22.128" endtime="20210322 17:42:22.129"></status>
</kw>
<status status="PASS" starttime="20210322 17:42:21.895" endtime="20210322 17:42:22.129"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 17:42:22.131" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:42:22.130" endtime="20210322 17:42:22.131"></status>
</kw>
<kw name="buscar account por holder" library="accounts_get_accounts_by_holder">
<kw name="conectar accounts" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accounts</arg>
<arg>url=${account_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 17:42:22.133" level="INFO">Creating Session using : alias=accounts, url=https://banking-accounts-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 17:42:22.133" endtime="20210322 17:42:22.134"></status>
</kw>
<status status="PASS" starttime="20210322 17:42:22.132" endtime="20210322 17:42:22.134"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accounts</arg>
<arg>/marketplaces/${marketplace_external_key}/holders/${holder_external_key}/accounts</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:42:22.135" level="INFO">GET Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/holders/44227ec1a3b145648bc56f1c8f341020/accounts, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 17:42:22.788" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 17:42:22.135" endtime="20210322 17:42:22.789"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:42:22.791" level="INFO">{'items': [{'id': '507519cfcdf641429ab8ec9e113f1cbd', 'holder': '44227ec1a3b145648bc56f1c8f341020', 'balance': '0.00', 'currency': 'BRL', 'routing_number': '001', 'number': '7682159541', 'status': 'active', 'metadata': {}, 'created_at': '2021-03-22T20:42:23.295643', 'updated_at': '2021-03-22T20:42:23.295643', 'primary': True, 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'uri': '/v2/marketplaces/f71a8951368a4cc085cf7875ff44e61c/accounts/507519cfcdf641429ab8ec9e113f1cbd', 'resource': 'payment_account'}], 'has_more': False, 'limit': 100, 'total_pages': 1, 'page': 1, 'offset': 0, 'total': '1', 'query_count': '1'}</msg>
<status status="PASS" starttime="20210322 17:42:22.789" endtime="20210322 17:42:22.791"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:42:22.792" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 17:42:22.792" endtime="20210322 17:42:22.793"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["id"]}</arg>
</arguments>
<assign>
<var>${account_external_key}</var>
</assign>
<msg timestamp="20210322 17:42:22.794" level="INFO">${account_external_key} = 507519cfcdf641429ab8ec9e113f1cbd</msg>
<status status="PASS" starttime="20210322 17:42:22.793" endtime="20210322 17:42:22.795"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_external_key}</arg>
</arguments>
<msg timestamp="20210322 17:42:22.796" level="INFO">${account_external_key} = 507519cfcdf641429ab8ec9e113f1cbd</msg>
<status status="PASS" starttime="20210322 17:42:22.795" endtime="20210322 17:42:22.796"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["number"]}</arg>
</arguments>
<assign>
<var>${account_number}</var>
</assign>
<msg timestamp="20210322 17:42:22.797" level="INFO">${account_number} = 7682159541</msg>
<status status="PASS" starttime="20210322 17:42:22.796" endtime="20210322 17:42:22.798"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_number}</arg>
</arguments>
<msg timestamp="20210322 17:42:22.799" level="INFO">${account_number} = 7682159541</msg>
<status status="PASS" starttime="20210322 17:42:22.798" endtime="20210322 17:42:22.799"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["routing_number"]}</arg>
</arguments>
<assign>
<var>${account_routing_number}</var>
</assign>
<msg timestamp="20210322 17:42:22.800" level="INFO">${account_routing_number} = 001</msg>
<status status="PASS" starttime="20210322 17:42:22.799" endtime="20210322 17:42:22.800"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_routing_number}</arg>
</arguments>
<msg timestamp="20210322 17:42:22.801" level="INFO">${account_routing_number} = 001</msg>
<status status="PASS" starttime="20210322 17:42:22.800" endtime="20210322 17:42:22.801"></status>
</kw>
<status status="PASS" starttime="20210322 17:42:22.131" endtime="20210322 17:42:22.801"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 17:42:22.802" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:42:22.802" endtime="20210322 17:42:22.802"></status>
</kw>
<status status="PASS" starttime="20210322 17:42:19.350" endtime="20210322 17:42:22.803"></status>
</kw>
<status status="PASS" starttime="20210322 17:42:19.350" endtime="20210322 17:42:22.803"></status>
</kw>
<kw name="gerar saldo para account" library="account_generate_balance">
<arguments>
<arg>${account_external_key}</arg>
</arguments>
<kw name="conectar accounts" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accounts</arg>
<arg>url=${account_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 17:42:22.805" level="INFO">Creating Session using : alias=accounts, url=https://banking-accounts-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 17:42:22.804" endtime="20210322 17:42:22.805"></status>
</kw>
<status status="PASS" starttime="20210322 17:42:22.804" endtime="20210322 17:42:22.805"></status>
</kw>
<kw name="Uuid 4" library="FakerLibrary">
<doc>Generates a random UUID4 string.
:param cast_to: Specify what type the UUID should be cast to. Default is `str`
:type cast_to: callable</doc>
<assign>
<var>${uuid}</var>
</assign>
<msg timestamp="20210322 17:42:22.806" level="INFO">${uuid} = 4975212a-0d82-4eca-b576-dcd2cc997eef</msg>
<status status="PASS" starttime="20210322 17:42:22.806" endtime="20210322 17:42:22.806"></status>
</kw>
<kw name="conectar accounts" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accounts</arg>
<arg>url=${account_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 17:42:22.807" level="INFO">Creating Session using : alias=accounts, url=https://banking-accounts-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 17:42:22.807" endtime="20210322 17:42:22.807"></status>
</kw>
<status status="PASS" starttime="20210322 17:42:22.806" endtime="20210322 17:42:22.807"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:42:22.808" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 17:42:22.808" endtime="20210322 17:42:22.808"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"operations": [</arg>
<arg>{</arg>
<arg>"amount": 9000000000000,</arg>
<arg>"authorization_code": "${uuid}",</arg>
<arg>"transaction_id": "${uuid}",</arg>
<arg>"id": "${uuid}",</arg>
<arg>"id_checking_account": "${account_external_key}",</arg>
<arg>"transfer_date": "2020-02-20T20:58:06.510Z",</arg>
<arg>"fee": 0,</arg>
<arg>"description": "Teste",</arg>
<arg>"object_type": "transfer",</arg>
<arg>"object_id": "${uuid}",</arg>
<arg>"dflag": "ACTIVE",</arg>
<arg>"created_at": "2019-10-14T20:58:06.510Z",</arg>
<arg>"type": "Transfer"</arg>
<arg>}</arg>
<arg>],</arg>
<arg>"reference_id": "Criando saldo na account"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 17:42:22.809" level="INFO">${body} = { "operations": [ { "amount": 9000000000000, "authorization_code": "4975212a-0d82-4eca-b576-dcd2cc997eef", "transaction_id": "4975212a-0d82-4eca-b576-dcd2cc997eef", "id": "4975212a-0d82-4eca-b576-dcd2...</msg>
<status status="PASS" starttime="20210322 17:42:22.808" endtime="20210322 17:42:22.809"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accounts</arg>
<arg>/admin/internal_operation/authorization/${uuid}</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:42:22.810" level="INFO">POST Request using : uri=/admin/internal_operation/authorization/4975212a-0d82-4eca-b576-dcd2cc997eef, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "operations": [ { "amount": 9000000000000, "authorization_code": "4975212a-0d82-4eca-b576-dcd2cc997eef", "transaction_id": "4975212a-0d82-4eca-b576-dcd2cc997eef", "id": "4975212a-0d82-4eca-b576-dcd2cc997eef", "id_checking_account": "507519cfcdf641429ab8ec9e113f1cbd", "transfer_date": "2020-02-20T20:58:06.510Z", "fee": 0, "description": "Teste", "object_type": "transfer", "object_id": "4975212a-0d82-4eca-b576-dcd2cc997eef", "dflag": "ACTIVE", "created_at": "2019-10-14T20:58:06.510Z", "type": "Transfer" } ], "reference_id": "Criando saldo na account" } 
json=None</msg>
<msg timestamp="20210322 17:42:23.467" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 17:42:22.809" endtime="20210322 17:42:23.467"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.status_code}' == 200</arg>
<arg>Log</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:42:23.469" endtime="20210322 17:42:23.470"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.status_code}' == 200</arg>
<arg>Log</arg>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:42:23.471" endtime="20210322 17:42:23.472"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.status_code}' == 200</arg>
<arg>Log</arg>
<arg>${response.status_code}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:42:23.472" endtime="20210322 17:42:23.473"></status>
</kw>
<status status="PASS" starttime="20210322 17:42:22.803" endtime="20210322 17:42:23.474"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${pix_type}' == 'phone'</arg>
<arg>criar chave pix</arg>
<arg>${pix_type}</arg>
<arg>${phone_pix}</arg>
<arg>ELSE IF</arg>
<arg>'${pix_type}' == 'email'</arg>
<arg>criar chave pix</arg>
<arg>${pix_type}</arg>
<arg>${email_pix}</arg>
<arg>ELSE IF</arg>
<arg>'${pix_type}' == 'evp'</arg>
<arg>criar chave pix</arg>
<arg>${pix_type}</arg>
<arg>${EMPTY}</arg>
<arg>ELSE IF</arg>
<arg>'${pix_type}' == 'national_registration'</arg>
<arg>criar chave pix</arg>
<arg>${pix_type}</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw name="criar chave pix" library="pix_dict_create_entry">
<arguments>
<arg>${pix_type}</arg>
<arg>${email_pix}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 17:42:23.478" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 17:42:23.478" endtime="20210322 17:42:23.479"></status>
</kw>
<status status="PASS" starttime="20210322 17:42:23.477" endtime="20210322 17:42:23.479"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${type}</arg>
</arguments>
<msg timestamp="20210322 17:42:23.480" level="INFO">${type} = email</msg>
<status status="PASS" starttime="20210322 17:42:23.480" endtime="20210322 17:42:23.480"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210322 17:42:23.481" level="INFO">${value} = gda-rocha@pires.net</msg>
<status status="PASS" starttime="20210322 17:42:23.481" endtime="20210322 17:42:23.481"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:42:23.482" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 17:42:23.482" endtime="20210322 17:42:23.482"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "${type}",</arg>
<arg>"value": "${value}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 17:42:23.483" level="INFO">${body} = { "type": "email", "value": "gda-rocha@pires.net" }</msg>
<status status="PASS" starttime="20210322 17:42:23.483" endtime="20210322 17:42:23.483"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:42:23.484" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/44227ec1a3b145648bc56f1c8f341020/accounts/507519cfcdf641429ab8ec9e113f1cbd/entries, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "email", "value": "gda-rocha@pires.net" } 
json=None</msg>
<msg timestamp="20210322 17:42:24.168" level="INFO">${response} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20210322 17:42:23.484" endtime="20210322 17:42:24.169"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:42:24.171" level="INFO">{'id': '368e9c8417914291befa739345bab94c', 'status': 'waiting_ownership_verification', 'created_at': '2021-03-22T05:42:25.366', 'updated_at': '2021-03-22T05:42:25.366', 'key': {'value': 'gda-rocha@pires.net', 'type': 'email'}, 'account': {'id': '507519cfcdf641429ab8ec9e113f1cbd', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': '44227ec1a3b145648bc56f1c8f341020', 'owner': {'name': 'Holder de teste', 'national_registration': '15603984775', 'type': 'individual'}, 'routing_number': '001', 'number': '7682159541', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}, 'resource': 'pix.entry'}</msg>
<status status="PASS" starttime="20210322 17:42:24.170" endtime="20210322 17:42:24.172"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:42:24.174" level="INFO">fc2a5d78eeb38f07</msg>
<status status="PASS" starttime="20210322 17:42:24.173" endtime="20210322 17:42:24.175"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 17:42:24.177" level="INFO">202</msg>
<status status="PASS" starttime="20210322 17:42:24.175" endtime="20210322 17:42:24.177"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:42:24.179" level="INFO">${response} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20210322 17:42:24.178" endtime="20210322 17:42:24.179"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${entry_external_key}</var>
</assign>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:42:24.182" endtime="20210322 17:42:24.183"></status>
</kw>
<msg timestamp="20210322 17:42:24.183" level="INFO">${entry_external_key} = 368e9c8417914291befa739345bab94c</msg>
<status status="PASS" starttime="20210322 17:42:24.180" endtime="20210322 17:42:24.184"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${entry_external_key}</arg>
</arguments>
<msg timestamp="20210322 17:42:24.185" level="INFO">${entry_external_key} = 368e9c8417914291befa739345bab94c</msg>
<status status="PASS" starttime="20210322 17:42:24.184" endtime="20210322 17:42:24.185"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["key"]["value"]}</arg>
</arguments>
<assign>
<var>${entry_key_value}</var>
</assign>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["key"]["value"]}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:42:24.187" endtime="20210322 17:42:24.188"></status>
</kw>
<msg timestamp="20210322 17:42:24.189" level="INFO">${entry_key_value} = gda-rocha@pires.net</msg>
<status status="PASS" starttime="20210322 17:42:24.186" endtime="20210322 17:42:24.189"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${entry_key_value}</arg>
</arguments>
<msg timestamp="20210322 17:42:24.190" level="INFO">${entry_key_value} = gda-rocha@pires.net</msg>
<status status="PASS" starttime="20210322 17:42:24.189" endtime="20210322 17:42:24.190"></status>
</kw>
<status status="PASS" starttime="20210322 17:42:23.476" endtime="20210322 17:42:24.191"></status>
</kw>
<status status="PASS" starttime="20210322 17:42:23.474" endtime="20210322 17:42:24.191"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${pix_type}' == 'phone'</arg>
<arg>buscar verification code</arg>
<arg>${holder_external_key}</arg>
<arg>${account_external_key}</arg>
<arg>${entry_external_key}</arg>
<arg>ELSE IF</arg>
<arg>'${pix_type}' == 'email'</arg>
<arg>buscar verification code</arg>
<arg>${holder_external_key}</arg>
<arg>${account_external_key}</arg>
<arg>${entry_external_key}</arg>
</arguments>
<kw name="buscar verification code" library="pix_dict_verification_code">
<arguments>
<arg>${holder_external_key}</arg>
<arg>${account_external_key}</arg>
<arg>${entry_external_key}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 17:42:24.195" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 17:42:24.194" endtime="20210322 17:42:24.195"></status>
</kw>
<status status="PASS" starttime="20210322 17:42:24.193" endtime="20210322 17:42:24.195"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/admin/internal_operation/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries/${entry_external_key}/code</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:42:24.197" level="INFO">GET Request using : uri=/admin/internal_operation/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/44227ec1a3b145648bc56f1c8f341020/accounts/507519cfcdf641429ab8ec9e113f1cbd/entries/368e9c8417914291befa739345bab94c/code, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 17:42:24.829" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 17:42:24.196" endtime="20210322 17:42:24.829"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:42:24.832" level="INFO">{'code': '1725'}</msg>
<status status="PASS" starttime="20210322 17:42:24.830" endtime="20210322 17:42:24.832"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:42:24.835" level="INFO">739a1cf86485372e</msg>
<status status="PASS" starttime="20210322 17:42:24.833" endtime="20210322 17:42:24.836"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 17:42:24.837" level="INFO">200</msg>
<status status="PASS" starttime="20210322 17:42:24.837" endtime="20210322 17:42:24.837"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:42:24.840" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 17:42:24.838" endtime="20210322 17:42:24.840"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["code"]}</arg>
</arguments>
<assign>
<var>${verification_code}</var>
</assign>
<msg timestamp="20210322 17:42:24.842" level="INFO">${verification_code} = 1725</msg>
<status status="PASS" starttime="20210322 17:42:24.840" endtime="20210322 17:42:24.842"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${verification_code}</arg>
</arguments>
<msg timestamp="20210322 17:42:24.842" level="INFO">${verification_code} = 1725</msg>
<status status="PASS" starttime="20210322 17:42:24.842" endtime="20210322 17:42:24.842"></status>
</kw>
<status status="PASS" starttime="20210322 17:42:24.192" endtime="20210322 17:42:24.843"></status>
</kw>
<status status="PASS" starttime="20210322 17:42:24.191" endtime="20210322 17:42:24.843"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${pix_type}' == 'phone'</arg>
<arg>confirmar propriedade da chave pix</arg>
<arg>${verification_code}</arg>
<arg>${holder_external_key}</arg>
<arg>${account_external_key}</arg>
<arg>${entry_external_key}</arg>
<arg>ELSE IF</arg>
<arg>'${pix_type}' == 'email'</arg>
<arg>confirmar propriedade da chave pix</arg>
<arg>${verification_code}</arg>
<arg>${holder_external_key}</arg>
<arg>${account_external_key}</arg>
<arg>${entry_external_key}</arg>
</arguments>
<kw name="confirmar propriedade da chave pix" library="pix_dict_confirm_propriety">
<arguments>
<arg>${verification_code}</arg>
<arg>${holder_external_key}</arg>
<arg>${account_external_key}</arg>
<arg>${entry_external_key}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 17:42:24.847" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 17:42:24.847" endtime="20210322 17:42:24.849"></status>
</kw>
<status status="PASS" starttime="20210322 17:42:24.846" endtime="20210322 17:42:24.850"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:42:24.850" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 17:42:24.850" endtime="20210322 17:42:24.850"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"code": "${verification_code}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 17:42:24.851" level="INFO">${body} = { "code": "1725" }</msg>
<status status="PASS" starttime="20210322 17:42:24.850" endtime="20210322 17:42:24.851"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries/${entry_external_key}/ownership</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:42:24.852" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/44227ec1a3b145648bc56f1c8f341020/accounts/507519cfcdf641429ab8ec9e113f1cbd/entries/368e9c8417914291befa739345bab94c/ownership, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "code": "1725" } 
json=None</msg>
<msg timestamp="20210322 17:42:26.495" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:42:24.851" endtime="20210322 17:42:26.495"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:42:26.498" level="INFO">{'id': '368e9c8417914291befa739345bab94c', 'status': 'active', 'created_at': '2021-03-22T05:42:25.366', 'updated_at': '2021-03-22T05:42:27.705', 'key': {'value': 'gda-rocha@pires.net', 'type': 'email'}, 'account': {'id': '507519cfcdf641429ab8ec9e113f1cbd', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': '44227ec1a3b145648bc56f1c8f341020', 'owner': {'name': 'Holder de teste', 'national_registration': '15603984775', 'type': 'individual'}, 'routing_number': '001', 'number': '7682159541', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}, 'resource': 'pix.entry'}</msg>
<status status="PASS" starttime="20210322 17:42:26.496" endtime="20210322 17:42:26.498"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:42:26.500" level="INFO">683a06282b162288</msg>
<status status="PASS" starttime="20210322 17:42:26.499" endtime="20210322 17:42:26.500"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 17:42:26.503" level="INFO">201</msg>
<status status="PASS" starttime="20210322 17:42:26.502" endtime="20210322 17:42:26.503"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:42:26.506" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:42:26.505" endtime="20210322 17:42:26.506"></status>
</kw>
<status status="PASS" starttime="20210322 17:42:24.845" endtime="20210322 17:42:26.506"></status>
</kw>
<status status="PASS" starttime="20210322 17:42:24.843" endtime="20210322 17:42:26.506"></status>
</kw>
<status status="PASS" starttime="20210322 17:42:19.341" endtime="20210322 17:42:26.507"></status>
</kw>
<kw name="criar pagamento pix com dados completos" library="pix_payments_create_pix_payment">
<arguments>
<arg>amount=${amount}</arg>
<arg>creditor_account_number=${creditor_account_number}</arg>
<arg>creditor_routing_number=${creditor_routing_number}</arg>
<arg>creditor_account_type=${creditor_account_type}</arg>
<arg>creditor_name=${creditor_name}</arg>
<arg>creditor_national_registration=${creditor_national_registration}</arg>
<arg>creditor_psp=${creditor_psp}</arg>
<arg>pix_description=${pix_description}</arg>
</arguments>
<kw name="conectar pix-payments" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-payments</arg>
<arg>url=${pix_payments_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 17:42:26.512" level="INFO">Creating Session using : alias=pix-payments, url=https://banking-pix-payments-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 17:42:26.511" endtime="20210322 17:42:26.512"></status>
</kw>
<status status="PASS" starttime="20210322 17:42:26.510" endtime="20210322 17:42:26.512"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 17:42:26.513" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 17:42:26.513" endtime="20210322 17:42:26.513"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"amount": ${amount},</arg>
<arg>"creditor": {</arg>
<arg>"account": {</arg>
<arg>"number": "${creditor_account_number}",</arg>
<arg>"routing_number": "${creditor_routing_number}",</arg>
<arg>"type": "${creditor_account_type}"</arg>
<arg>},</arg>
<arg>"name": "${creditor_name}",</arg>
<arg>"national_registration": "${creditor_national_registration}",</arg>
<arg>"psp": "${creditor_psp}"</arg>
<arg>},</arg>
<arg>"description": "${pix_description}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 17:42:26.515" level="INFO">${body} = { "amount": 100, "creditor": { "account": { "number": "0243882974", "routing_number": "0500", "type": "cacc" }, "name": "Massa iti PF NauNNMO", "national_registration": "42808422644", "psp": "17192451...</msg>
<status status="PASS" starttime="20210322 17:42:26.514" endtime="20210322 17:42:26.515"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-payments</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/pix/holders/${holder_external_key}/accounts/${account_external_key}/payments</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 17:42:26.517" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/pix/holders/44227ec1a3b145648bc56f1c8f341020/accounts/507519cfcdf641429ab8ec9e113f1cbd/payments, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "amount": 100, "creditor": { "account": { "number": "0243882974", "routing_number": "0500", "type": "cacc" }, "name": "Massa iti PF NauNNMO", "national_registration": "42808422644", "psp": "17192451" }, "description": "Envio de PIX" } 
json=None</msg>
<msg timestamp="20210322 17:42:27.181" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:42:26.515" endtime="20210322 17:42:27.181"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 17:42:27.183" level="INFO">{'id': 'b41f89b126e84d58b27bcbe6d529b63e', 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'status': 'pending', 'end_to_end_id': 'E19468242202103222042b15fbaaf9dd', 'message_id': 'M19468242df6f0265dd4bf2f354f02b3', 'amount': 100, 'created_at': '2021-03-22T17:42:28.365144', 'description': 'Envio de PIX', 'debtor': {'national_registration': '15603984775', 'name': 'Holder de teste', 'type': 'individual', 'holder_id': '44227ec1a3b145648bc56f1c8f341020', 'account': {'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}, 'digital_account_id': '507519cfcdf641429ab8ec9e113f1cbd', 'number': '7682159541', 'routing_number': '0001', 'type': 'cacc'}}, 'creditor': {'national_registration': '42808422644', 'name': 'Massa iti PF NauNNMO', 'type': 'individual', 'account': {'psp': {'code': '17192451'}, 'number': '0243882974', 'routing_number': '0500', 'type': 'cacc'}}, 'refunded_amount': 0}</msg>
<status status="PASS" starttime="20210322 17:42:27.182" endtime="20210322 17:42:27.183"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 17:42:27.186" level="INFO">f723535b31d4fbff</msg>
<status status="PASS" starttime="20210322 17:42:27.185" endtime="20210322 17:42:27.186"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 17:42:27.188" level="INFO">201</msg>
<status status="PASS" starttime="20210322 17:42:27.187" endtime="20210322 17:42:27.188"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 17:42:27.189" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 17:42:27.189" endtime="20210322 17:42:27.190"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${payment_external_key}</var>
</assign>
<msg timestamp="20210322 17:42:27.192" level="INFO">${payment_external_key} = b41f89b126e84d58b27bcbe6d529b63e</msg>
<status status="PASS" starttime="20210322 17:42:27.190" endtime="20210322 17:42:27.192"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${payment_external_key}</arg>
</arguments>
<msg timestamp="20210322 17:42:27.193" level="INFO">${payment_external_key} = b41f89b126e84d58b27bcbe6d529b63e</msg>
<status status="PASS" starttime="20210322 17:42:27.193" endtime="20210322 17:42:27.193"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["end_to_end_id"]}</arg>
</arguments>
<assign>
<var>${end_to_end_id}</var>
</assign>
<msg timestamp="20210322 17:42:27.195" level="INFO">${end_to_end_id} = E19468242202103222042b15fbaaf9dd</msg>
<status status="PASS" starttime="20210322 17:42:27.194" endtime="20210322 17:42:27.195"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${end_to_end_id}</arg>
</arguments>
<msg timestamp="20210322 17:42:27.196" level="INFO">${end_to_end_id} = E19468242202103222042b15fbaaf9dd</msg>
<status status="PASS" starttime="20210322 17:42:27.196" endtime="20210322 17:42:27.196"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["message_id"]}</arg>
</arguments>
<assign>
<var>${message_id}</var>
</assign>
<msg timestamp="20210322 17:42:27.198" level="INFO">${message_id} = M19468242df6f0265dd4bf2f354f02b3</msg>
<status status="PASS" starttime="20210322 17:42:27.197" endtime="20210322 17:42:27.198"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${message_id}</arg>
</arguments>
<msg timestamp="20210322 17:42:27.199" level="INFO">${message_id} = M19468242df6f0265dd4bf2f354f02b3</msg>
<status status="PASS" starttime="20210322 17:42:27.198" endtime="20210322 17:42:27.199"></status>
</kw>
<status status="PASS" starttime="20210322 17:42:26.507" endtime="20210322 17:42:27.199"></status>
</kw>
<kw name="validar pagamento pix" library="asserts">
<arguments>
<arg>marketplace_external_key=${marketplace_external_key}</arg>
<arg>status_pix_payments=pending</arg>
<arg>amount=${amount}</arg>
<arg>pix_description=${pix_description}</arg>
<arg>debitor_national_registration=${national_registration}</arg>
<arg>debitor_name=${holder_name}</arg>
<arg>debitor_type=${holder_type}</arg>
<arg>debitor_holder_id=${holder_external_key}</arg>
<arg>debtor_account_psp_code=${debtor_account_psp_code}</arg>
<arg>debtor_account_psp_name=${debtor_account_psp_name}</arg>
<arg>debtor_digital_account=${account_external_key}</arg>
<arg>debtor_account_number=${account_number}</arg>
<arg>debtor_account_routing_number=${account_routing_number}</arg>
<arg>debtor_account_type=${debtor_account_type}</arg>
<arg>creditor_national_registration=${creditor_national_registration}</arg>
<arg>creditor_name=${creditor_name}</arg>
<arg>creditor_type=individual</arg>
<arg>creditor_account_psp_code=${creditor_psp}</arg>
<arg>creditor_account_number=${creditor_account_number}</arg>
<arg>creditor_account_routing_number=${creditor_routing_number}</arg>
<arg>creditor_account_type=${creditor_account_type}</arg>
<arg>refunded_amount=0</arg>
</arguments>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<arguments>
<arg>result_format=datetime</arg>
</arguments>
<assign>
<var>${date}</var>
</assign>
<msg timestamp="20210322 17:42:27.203" level="INFO">${date} = 2021-03-22 17:42:27.203256</msg>
<status status="PASS" starttime="20210322 17:42:27.203" endtime="20210322 17:42:27.203"></status>
</kw>
<kw name="Convert Date" library="DateTime">
<doc>Converts between supported `date formats`.</doc>
<arguments>
<arg>${date}</arg>
<arg>exclude_millis=yes</arg>
<arg>result_format=%Y-%m-%d</arg>
<arg>date_format=%d-%m-%Y</arg>
</arguments>
<assign>
<var>${date}</var>
</assign>
<msg timestamp="20210322 17:42:27.204" level="INFO">${date} = 2021-03-22</msg>
<status status="PASS" starttime="20210322 17:42:27.204" endtime="20210322 17:42:27.204"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["marketplace_id"]}</arg>
<arg>${marketplace_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:42:27.205" endtime="20210322 17:42:27.205"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["status"]}</arg>
<arg>${status_pix_payments}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:42:27.206" endtime="20210322 17:42:27.207"></status>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${response.json()["end_to_end_id"]}</arg>
</arguments>
<msg timestamp="20210322 17:42:27.208" level="INFO">Length is 32</msg>
<status status="PASS" starttime="20210322 17:42:27.207" endtime="20210322 17:42:27.208"></status>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${response.json()["message_id"]}</arg>
</arguments>
<msg timestamp="20210322 17:42:27.209" level="INFO">Length is 32</msg>
<status status="PASS" starttime="20210322 17:42:27.208" endtime="20210322 17:42:27.209"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.json()["amount"]}</arg>
<arg>${amount}</arg>
</arguments>
<msg timestamp="20210322 17:42:27.210" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 17:42:27.209" endtime="20210322 17:42:27.210"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["description"]}</arg>
<arg>${pix_description}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:42:27.210" endtime="20210322 17:42:27.211"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["national_registration"]}</arg>
<arg>${debitor_national_registration}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:42:27.212" endtime="20210322 17:42:27.212"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["name"]}</arg>
<arg>${debitor_name}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:42:27.212" endtime="20210322 17:42:27.213"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["type"]}</arg>
<arg>${debitor_type}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:42:27.213" endtime="20210322 17:42:27.214"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["holder_id"]}</arg>
<arg>${debitor_holder_id}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:42:27.214" endtime="20210322 17:42:27.215"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["account"]["psp"]["code"]}</arg>
<arg>${debtor_account_psp_code}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:42:27.215" endtime="20210322 17:42:27.216"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["account"]["psp"]["name"]}</arg>
<arg>${debtor_account_psp_name}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:42:27.216" endtime="20210322 17:42:27.217"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["account"]["digital_account_id"]}</arg>
<arg>${debtor_digital_account}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:42:27.217" endtime="20210322 17:42:27.218"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["account"]["number"]}</arg>
<arg>${account_number}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:42:27.218" endtime="20210322 17:42:27.219"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["account"]["routing_number"]}</arg>
<arg>0${debtor_account_routing_number}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:42:27.219" endtime="20210322 17:42:27.220"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["account"]["type"]}</arg>
<arg>${debtor_account_type}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:42:27.220" endtime="20210322 17:42:27.221"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["creditor"]["national_registration"]}</arg>
<arg>${creditor_national_registration}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:42:27.221" endtime="20210322 17:42:27.222"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["creditor"]["name"]}</arg>
<arg>${creditor_name}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:42:27.222" endtime="20210322 17:42:27.223"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["creditor"]["type"]}</arg>
<arg>${creditor_type}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:42:27.223" endtime="20210322 17:42:27.223"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["creditor"]["account"]["psp"]["code"]}</arg>
<arg>${creditor_account_psp_code}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:42:27.224" endtime="20210322 17:42:27.224"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["creditor"]["account"]["number"]}</arg>
<arg>${creditor_account_number}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:42:27.225" endtime="20210322 17:42:27.225"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["creditor"]["account"]["routing_number"]}</arg>
<arg>${creditor_account_routing_number}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:42:27.226" endtime="20210322 17:42:27.226"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["creditor"]["account"]["type"]}</arg>
<arg>${creditor_account_type}</arg>
</arguments>
<status status="PASS" starttime="20210322 17:42:27.227" endtime="20210322 17:42:27.227"></status>
</kw>
<status status="PASS" starttime="20210322 17:42:27.200" endtime="20210322 17:42:27.227"></status>
</kw>
<doc>Envio de PIX com sucesso para uma conta Iti, a partir de um Holder Business</doc>
<tags>
<tag>smoke_test</tag>
</tags>
<status status="PASS" starttime="20210322 17:42:19.338" endtime="20210322 17:42:27.228" critical="yes"></status>
</test>
<doc>Funcionalidade: Criar Chave de EndereÃ§amento
Eu, como um Holder, portador de uma conta ativa em Banking
Desejo criar uma pagamento PIX</doc>
<status status="FAIL" starttime="20210322 17:42:09.210" endtime="20210322 17:42:27.228"></status>
</suite>
<status status="FAIL" starttime="20210322 17:42:09.208" endtime="20210322 17:42:27.656"></status>
</suite>
<status status="FAIL" starttime="20210322 17:42:09.174" endtime="20210322 17:42:28.082"></status>
</suite>
<statistics>
<total>
<stat pass="1" fail="1">Critical Tests</stat>
<stat pass="1" fail="1">All Tests</stat>
</total>
<tag>
<stat pass="1" fail="1">smoke_test</stat>
</tag>
<suite>
<stat pass="1" fail="1" id="s1" name="Pix-Payments">Pix-Payments</stat>
<stat pass="1" fail="1" id="s1-s1" name="Envio">Pix-Payments.Envio</stat>
<stat pass="1" fail="1" id="s1-s1-s1" name="Criar Pagamento PIX">Pix-Payments.Envio.Criar Pagamento PIX</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>

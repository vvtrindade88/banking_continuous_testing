<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.8.1 on win32)" generated="20210322 03:16:24.330" rpa="false">
<suite id="s1" name="Pix-Payments" source="C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\tests\pix-payments">
<suite id="s1-s1" name="Envio" source="C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\tests\pix-payments\envio">
<suite id="s1-s1-s1" name="Confirmar Pagamento PIX" source="C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\tests\pix-payments\envio\Confirmar Pagamento PIX.robot">
<test id="s1-s1-s1-t1" name="CenÃ¡rio: Criar pagamento PIX de para holder business utilizando dados completos da conta de destino">
<kw name="criar chave pix ativa" library="pix_dict_create_active_key_pix">
<arguments>
<arg>holder_type=business</arg>
<arg>pix_type=email</arg>
</arguments>
<kw name="Random Number" library="FakerLibrary">
<doc>Returns a random number with 1 digit (default, when digits==None),
a random number with 0 to given number of digits, or a random number
with given number to given number of digits (when ``fix_len==True``).</doc>
<arguments>
<arg>digits=8</arg>
<arg>fix_len=True</arg>
</arguments>
<assign>
<var>${phone}</var>
</assign>
<msg timestamp="20210322 03:16:25.054" level="INFO">${phone} = 75221338</msg>
<status status="PASS" starttime="20210322 03:16:25.053" endtime="20210322 03:16:25.054"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>+55219${phone}</arg>
</arguments>
<assign>
<var>${phone_pix}</var>
</assign>
<msg timestamp="20210322 03:16:25.055" level="INFO">${phone_pix} = +5521975221338</msg>
<status status="PASS" starttime="20210322 03:16:25.054" endtime="20210322 03:16:25.055"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${phone_pix}</arg>
</arguments>
<msg timestamp="20210322 03:16:25.055" level="INFO">${phone_pix} = +5521975221338</msg>
<status status="PASS" starttime="20210322 03:16:25.055" endtime="20210322 03:16:25.055"></status>
</kw>
<kw name="Email" library="FakerLibrary">
<assign>
<var>${email_pix}</var>
</assign>
<msg timestamp="20210322 03:16:25.056" level="INFO">${email_pix} = lucas80@da.br</msg>
<status status="PASS" starttime="20210322 03:16:25.056" endtime="20210322 03:16:25.056"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${email_pix}</arg>
</arguments>
<msg timestamp="20210322 03:16:25.057" level="INFO">${email_pix} = lucas80@da.br</msg>
<status status="PASS" starttime="20210322 03:16:25.056" endtime="20210322 03:16:25.057"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${holder_type}' == 'business'</arg>
<arg>criar holder business ativo</arg>
<arg>ELSE IF</arg>
<arg>'${holder_type}' == 'individual'</arg>
<arg>criar holder individual ativo</arg>
</arguments>
<kw name="criar holder business ativo" library="accreditation_create_holder_active">
<kw name="conectar accreditation" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accreditation</arg>
<arg>url=${accreditation_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 03:16:25.059" level="INFO">Creating Session using : alias=accreditation, url=https://banking-accreditation-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 03:16:25.058" endtime="20210322 03:16:25.059"></status>
</kw>
<status status="PASS" starttime="20210322 03:16:25.058" endtime="20210322 03:16:25.059"></status>
</kw>
<kw name="Cnpj" library="FakerLibrary">
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 03:16:25.060" level="INFO">${national_registration} = 07.135.849/0001-11</msg>
<status status="PASS" starttime="20210322 03:16:25.060" endtime="20210322 03:16:25.060"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${national_registration}</arg>
<arg>.</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 03:16:25.061" level="INFO">${national_registration} = 07135849/0001-11</msg>
<status status="PASS" starttime="20210322 03:16:25.060" endtime="20210322 03:16:25.061"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${national_registration}</arg>
<arg>-</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 03:16:25.061" level="INFO">${national_registration} = 07135849/000111</msg>
<status status="PASS" starttime="20210322 03:16:25.061" endtime="20210322 03:16:25.061"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${national_registration}</arg>
<arg>/</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 03:16:25.062" level="INFO">${national_registration} = 07135849000111</msg>
<status status="PASS" starttime="20210322 03:16:25.062" endtime="20210322 03:16:25.062"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${national_registration}</arg>
</arguments>
<msg timestamp="20210322 03:16:25.062" level="INFO">${national_registration} = 07135849000111</msg>
<status status="PASS" starttime="20210322 03:16:25.062" endtime="20210322 03:16:25.063"></status>
</kw>
<kw name="Rg" library="FakerLibrary">
<doc>Brazilian RG, return plain numbers.
Check:  https://www.ngmatematica.com/2014/02/como-determinar-o-digito-verificador-do.html</doc>
<assign>
<var>${identity_card}</var>
</assign>
<msg timestamp="20210322 03:16:25.063" level="INFO">${identity_card} = 312865740</msg>
<status status="PASS" starttime="20210322 03:16:25.063" endtime="20210322 03:16:25.063"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${identity_card}</arg>
</arguments>
<msg timestamp="20210322 03:16:25.064" level="INFO">${identity_card} = 312865740</msg>
<status status="PASS" starttime="20210322 03:16:25.063" endtime="20210322 03:16:25.064"></status>
</kw>
<kw name="criar holder business" library="accreditation_post_holder_business">
<arguments>
<arg>holder_type=business</arg>
<arg>holder_name=${holder_name}</arg>
<arg>email_business=${email_business}</arg>
<arg>national_registration=${national_registration}</arg>
<arg>revenue_business=${revenue_business}</arg>
<arg>cnae=${cnae}</arg>
<arg>legal_name=${legal_name}</arg>
<arg>establishment_format=mei</arg>
<arg>establishment_date=${establishment_date}</arg>
</arguments>
<kw name="conectar accreditation" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accreditation</arg>
<arg>url=${accreditation_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 03:16:25.066" level="INFO">Creating Session using : alias=accreditation, url=https://banking-accreditation-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 03:16:25.065" endtime="20210322 03:16:25.067"></status>
</kw>
<status status="PASS" starttime="20210322 03:16:25.065" endtime="20210322 03:16:25.067"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_type}</arg>
</arguments>
<msg timestamp="20210322 03:16:25.067" level="INFO">${holder_type} = business</msg>
<status status="PASS" starttime="20210322 03:16:25.067" endtime="20210322 03:16:25.067"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_name}</arg>
</arguments>
<msg timestamp="20210322 03:16:25.068" level="INFO">${holder_name} = Holder de teste</msg>
<status status="PASS" starttime="20210322 03:16:25.068" endtime="20210322 03:16:25.068"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${legal_name}</arg>
</arguments>
<msg timestamp="20210322 03:16:25.069" level="INFO">${legal_name} = Nome Legal da Empresa</msg>
<status status="PASS" starttime="20210322 03:16:25.068" endtime="20210322 03:16:25.069"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:16:25.069" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 03:16:25.069" endtime="20210322 03:16:25.069"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "${holder_type}",</arg>
<arg>"name": "${holder_name}",</arg>
<arg>"email": "${email_business}",</arg>
<arg>"national_registration": "${national_registration}",</arg>
<arg>"revenue": ${revenue_business},</arg>
<arg>"cnae": "${cnae}",</arg>
<arg>"legal_name": "${legal_name}",</arg>
<arg>"establishment": {</arg>
<arg>"format":"${establishment_format}",</arg>
<arg>"date":"${establishment_date}"</arg>
<arg>}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 03:16:25.070" level="INFO">${body} = { "type": "business", "name": "Holder de teste", "email": "contato@teste.com.br", "national_registration": "07135849000111", "revenue": 1005500.00, "cnae": "0111301", "legal_name": "Nome Legal da Empr...</msg>
<status status="PASS" starttime="20210322 03:16:25.070" endtime="20210322 03:16:25.070"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:16:25.071" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "business", "name": "Holder de teste", "email": "contato@teste.com.br", "national_registration": "07135849000111", "revenue": 1005500.00, "cnae": "0111301", "legal_name": "Nome Legal da Empresa", "establishment": { "format":"mei", "date":"2012-04-25" } } 
json=None</msg>
<msg timestamp="20210322 03:16:25.799" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:16:25.071" endtime="20210322 03:16:25.799"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:16:25.802" level="INFO">{'id': '2f7f1d5f5d4a472baf4edde40321b2ba', 'name': 'Holder de teste', 'revenue': 1005500.0, 'email': 'contato@teste.com.br', 'status': 'waiting_info_and_documents', 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'marketplace_name': 'Marketplace de Teste', 'created_at': '2021-03-22T03:16:26.591396', 'updated_at': '2021-03-22T03:16:26.591398', 'type': 'business', 'national_registration': '07135849000111', 'legal_name': 'Nome Legal da Empresa', 'establishment': {'format': 'mei', 'date': '2012-04-25'}, 'cnae': '0111301', '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/2f7f1d5f5d4a472baf4edde40321b2ba', 'type': 'GET'}, 'phones': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/2f7f1d5f5d4a472baf4edde40321b2ba/phones', 'type': 'GET'}, 'addresses': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/2f7f1d5f5d4a472baf4edde40321b2ba/addresses', 'type': 'GET'}, 'documents': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/2f7f1d5f5d4a472baf4edde40321b2ba/documents', 'type': 'GET'}, 'partners': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/2f7f1d5f5d4a472baf4edde40321b2ba/partners', 'type': 'GET'}, 'associates': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/2f7f1d5f5d4a472baf4edde40321b2ba/associates', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 03:16:25.800" endtime="20210322 03:16:25.802"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:16:25.804" level="INFO">8cd8b99fbdfcbe74</msg>
<status status="PASS" starttime="20210322 03:16:25.803" endtime="20210322 03:16:25.804"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${body}</arg>
</arguments>
<msg timestamp="20210322 03:16:25.806" level="INFO">{ "type": "business", "name": "Holder de teste", "email": "contato@teste.com.br", "national_registration": "07135849000111", "revenue": 1005500.00, "cnae": "0111301", "legal_name": "Nome Legal da Empresa", "establishment": { "format":"mei", "date":"2012-04-25" } }</msg>
<status status="PASS" starttime="20210322 03:16:25.805" endtime="20210322 03:16:25.806"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:16:25.808" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:16:25.807" endtime="20210322 03:16:25.808"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${holder_external_key}</var>
</assign>
<msg timestamp="20210322 03:16:25.810" level="INFO">${holder_external_key} = 2f7f1d5f5d4a472baf4edde40321b2ba</msg>
<status status="PASS" starttime="20210322 03:16:25.809" endtime="20210322 03:16:25.811"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_external_key}</arg>
</arguments>
<msg timestamp="20210322 03:16:25.812" level="INFO">${holder_external_key} = 2f7f1d5f5d4a472baf4edde40321b2ba</msg>
<status status="PASS" starttime="20210322 03:16:25.811" endtime="20210322 03:16:25.813"></status>
</kw>
<status status="PASS" starttime="20210322 03:16:25.064" endtime="20210322 03:16:25.813"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 03:16:25.815" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:16:25.814" endtime="20210322 03:16:25.815"></status>
</kw>
<kw name="criar holder phone" library="accreditation_post_holder_phone">
<arguments>
<arg>21</arg>
<arg>51</arg>
<arg>996221236</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:16:25.817" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 03:16:25.816" endtime="20210322 03:16:25.817"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"area_code": "${phone_area_code}",</arg>
<arg>"country_code": "${phone_country_code}",</arg>
<arg>"number": "${phone_number}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 03:16:25.818" level="INFO">${body} = { "area_code": "21", "country_code": "51", "number": "996221236" }</msg>
<status status="PASS" starttime="20210322 03:16:25.818" endtime="20210322 03:16:25.819"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/phones</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:16:25.820" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/2f7f1d5f5d4a472baf4edde40321b2ba/phones, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "area_code": "21", "country_code": "51", "number": "996221236" } 
json=None</msg>
<msg timestamp="20210322 03:16:26.093" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:16:25.819" endtime="20210322 03:16:26.093"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:16:26.096" level="INFO">{'id': '858607f94e534f028d1298a1476cc8af', 'area_code': '21', 'country_code': '51', 'number': '996221236', 'main': True, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/2f7f1d5f5d4a472baf4edde40321b2ba/phones/858607f94e534f028d1298a1476cc8af', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/2f7f1d5f5d4a472baf4edde40321b2ba', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 03:16:26.094" endtime="20210322 03:16:26.096"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:16:26.099" level="INFO">be1b02f2d7b26b37</msg>
<status status="PASS" starttime="20210322 03:16:26.097" endtime="20210322 03:16:26.100"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:16:26.101" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:16:26.101" endtime="20210322 03:16:26.102"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${phone_external_key}</var>
</assign>
<msg timestamp="20210322 03:16:26.104" level="INFO">${phone_external_key} = 858607f94e534f028d1298a1476cc8af</msg>
<status status="PASS" starttime="20210322 03:16:26.103" endtime="20210322 03:16:26.104"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${phone_external_key}</arg>
</arguments>
<msg timestamp="20210322 03:16:26.106" level="INFO">${phone_external_key} = 858607f94e534f028d1298a1476cc8af</msg>
<status status="PASS" starttime="20210322 03:16:26.105" endtime="20210322 03:16:26.106"></status>
</kw>
<status status="PASS" starttime="20210322 03:16:25.815" endtime="20210322 03:16:26.106"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 03:16:26.107" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:16:26.106" endtime="20210322 03:16:26.107"></status>
</kw>
<kw name="criar holder address" library="accreditation_post_holder_address">
<arguments>
<arg>Rio de Janeiro</arg>
<arg>Rio de Janeiro</arg>
<arg>Brasil</arg>
<arg>Bairro de Testes</arg>
<arg>Rua de Testes</arg>
<arg>90</arg>
<arg>apto 200</arg>
<arg>21550987</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:16:26.109" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 03:16:26.109" endtime="20210322 03:16:26.109"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"city": "${city}",</arg>
<arg>"state": "${state}",</arg>
<arg>"country": "${country}",</arg>
<arg>"neighborhood": "${neighborhood}",</arg>
<arg>"street": "${street}",</arg>
<arg>"number": "${number}",</arg>
<arg>"complement": "${complement}",</arg>
<arg>"postal_code": "${postal_code}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 03:16:26.111" level="INFO">${body} = { "city": "Rio de Janeiro", "state": "Rio de Janeiro", "country": "Brasil", "neighborhood": "Bairro de Testes", "street": "Rua de Testes", "number": "90", "complement": "apto 200", "postal_code": "215...</msg>
<status status="PASS" starttime="20210322 03:16:26.109" endtime="20210322 03:16:26.111"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/addresses</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:16:26.112" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/2f7f1d5f5d4a472baf4edde40321b2ba/addresses, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "city": "Rio de Janeiro", "state": "Rio de Janeiro", "country": "Brasil", "neighborhood": "Bairro de Testes", "street": "Rua de Testes", "number": "90", "complement": "apto 200", "postal_code": "21550987" } 
json=None</msg>
<msg timestamp="20210322 03:16:26.337" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:16:26.111" endtime="20210322 03:16:26.337"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:16:26.340" level="INFO">{'id': 'e86e72c348a34e73ad16ca51a059910d', 'street': 'Rua de Testes', 'number': '90', 'city': 'Rio de Janeiro', 'complement': 'apto 200', 'state': 'Rio de Janeiro', 'neighborhood': 'Bairro de Testes', 'postal_code': '21550987', 'country': 'Brasil', 'main': True, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/2f7f1d5f5d4a472baf4edde40321b2ba/addresses/e86e72c348a34e73ad16ca51a059910d', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/2f7f1d5f5d4a472baf4edde40321b2ba', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 03:16:26.338" endtime="20210322 03:16:26.340"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:16:26.342" level="INFO">1f6b28349fd6fc59</msg>
<status status="PASS" starttime="20210322 03:16:26.341" endtime="20210322 03:16:26.343"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:16:26.345" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:16:26.344" endtime="20210322 03:16:26.346"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${address_external_key}</var>
</assign>
<msg timestamp="20210322 03:16:26.347" level="INFO">${address_external_key} = e86e72c348a34e73ad16ca51a059910d</msg>
<status status="PASS" starttime="20210322 03:16:26.346" endtime="20210322 03:16:26.348"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${address_external_key}</arg>
</arguments>
<msg timestamp="20210322 03:16:26.349" level="INFO">${address_external_key} = e86e72c348a34e73ad16ca51a059910d</msg>
<status status="PASS" starttime="20210322 03:16:26.348" endtime="20210322 03:16:26.349"></status>
</kw>
<status status="PASS" starttime="20210322 03:16:26.108" endtime="20210322 03:16:26.349"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 03:16:26.351" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:16:26.350" endtime="20210322 03:16:26.351"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>CCMEI</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:16:26.353" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 03:16:26.352" endtime="20210322 03:16:26.353"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 03:16:26.354" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 03:16:26.356" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 03:16:26.353" endtime="20210322 03:16:26.357"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:16:26.357" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/2f7f1d5f5d4a472baf4edde40321b2ba/documents?type=CCMEI, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 03:16:26.670" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:16:26.357" endtime="20210322 03:16:26.671"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:16:26.672" level="INFO">{'id': '96044e815adc4ccf98e8e294c70e7b70', 'document_type': 'ccmei', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/2f7f1d5f5d4a472baf4edde40321b2ba/documents/96044e815adc4ccf98e8e294c70e7b70', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/2f7f1d5f5d4a472baf4edde40321b2ba', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/2f7f1d5f5d4a472baf4edde40321b2ba/documents/96044e815adc4ccf98e8e294c70e7b70/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 03:16:26.671" endtime="20210322 03:16:26.672"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:16:26.674" level="INFO">c1a1e914d376b156</msg>
<status status="PASS" starttime="20210322 03:16:26.673" endtime="20210322 03:16:26.674"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:16:26.676" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:16:26.675" endtime="20210322 03:16:26.676"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 03:16:26.678" level="INFO">${document_external_key} = 96044e815adc4ccf98e8e294c70e7b70</msg>
<status status="PASS" starttime="20210322 03:16:26.677" endtime="20210322 03:16:26.678"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 03:16:26.680" level="INFO">${document_external_key} = 96044e815adc4ccf98e8e294c70e7b70</msg>
<status status="PASS" starttime="20210322 03:16:26.679" endtime="20210322 03:16:26.680"></status>
</kw>
<status status="PASS" starttime="20210322 03:16:26.351" endtime="20210322 03:16:26.680"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 03:16:26.681" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:16:26.681" endtime="20210322 03:16:26.682"></status>
</kw>
<kw name="Cpf" library="FakerLibrary">
<assign>
<var>${partner_individual_national_registration}</var>
</assign>
<msg timestamp="20210322 03:16:26.682" level="INFO">${partner_individual_national_registration} = 240.761.538-71</msg>
<status status="PASS" starttime="20210322 03:16:26.682" endtime="20210322 03:16:26.683"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${partner_individual_national_registration}</arg>
<arg>.</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${partner_individual_national_registration}</var>
</assign>
<msg timestamp="20210322 03:16:26.684" level="INFO">${partner_individual_national_registration} = 240761538-71</msg>
<status status="PASS" starttime="20210322 03:16:26.683" endtime="20210322 03:16:26.684"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${partner_individual_national_registration}</arg>
<arg>-</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${partner_individual_national_registration}</var>
</assign>
<msg timestamp="20210322 03:16:26.685" level="INFO">${partner_individual_national_registration} = 24076153871</msg>
<status status="PASS" starttime="20210322 03:16:26.684" endtime="20210322 03:16:26.685"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${partner_individual_national_registration}</arg>
</arguments>
<msg timestamp="20210322 03:16:26.686" level="INFO">${partner_individual_national_registration} = 24076153871</msg>
<status status="PASS" starttime="20210322 03:16:26.685" endtime="20210322 03:16:26.686"></status>
</kw>
<kw name="Rg" library="FakerLibrary">
<doc>Brazilian RG, return plain numbers.
Check:  https://www.ngmatematica.com/2014/02/como-determinar-o-digito-verificador-do.html</doc>
<assign>
<var>${partner_individual_identity_card}</var>
</assign>
<msg timestamp="20210322 03:16:26.686" level="INFO">${partner_individual_identity_card} = 265847011</msg>
<status status="PASS" starttime="20210322 03:16:26.686" endtime="20210322 03:16:26.686"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${partner_individual_identity_card}</arg>
</arguments>
<msg timestamp="20210322 03:16:26.687" level="INFO">${partner_individual_identity_card} = 265847011</msg>
<status status="PASS" starttime="20210322 03:16:26.687" endtime="20210322 03:16:26.687"></status>
</kw>
<kw name="criar partner individual" library="accreditation_post_partner_individual">
<arguments>
<arg>partner_individual_type=individual</arg>
<arg>partner_individual_name=${partner_individual_name}</arg>
<arg>partner_individual_email=${partner_individual_email}</arg>
<arg>partner_individual_national_registration=${partner_individual_national_registration}</arg>
<arg>partner_individual_revenue=${partner_individual_revenue}</arg>
<arg>partner_individual_birthday=${partner_individual_birthday}</arg>
<arg>partner_individual_mothers_name=${partner_individual_mothers_name}</arg>
<arg>partner_individual_identity_card=${partner_individual_identity_card}</arg>
<arg>partner_individual_pep=false</arg>
<arg>partner_individual_percentage=100</arg>
<arg>partner_individual_adm=true</arg>
<arg>partner_individual_cbo=${partner_individual_cbo}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:16:26.689" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 03:16:26.689" endtime="20210322 03:16:26.690"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "${partner_individual_type}",</arg>
<arg>"name": "${partner_individual_name}",</arg>
<arg>"email": "${partner_individual_email}",</arg>
<arg>"national_registration": "${partner_individual_national_registration}",</arg>
<arg>"revenue": ${partner_individual_revenue},</arg>
<arg>"birthday": "${partner_individual_birthday}",</arg>
<arg>"mothers_name": "${partner_individual_mothers_name}",</arg>
<arg>"identity_card": "${partner_individual_identity_card}",</arg>
<arg>"pep": false,</arg>
<arg>"percentage": ${partner_individual_percentage},</arg>
<arg>"adm": ${partner_individual_adm},</arg>
<arg>"cbo": ${partner_individual_cbo}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 03:16:26.691" level="INFO">${body} = { "type": "individual", "name": "Individual Partner de teste", "email": "teste@teste.com.br", "national_registration": "24076153871", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "MÃ£e...</msg>
<status status="PASS" starttime="20210322 03:16:26.690" endtime="20210322 03:16:26.691"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/partners</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:16:26.692" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/2f7f1d5f5d4a472baf4edde40321b2ba/partners, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "individual", "name": "Individual Partner de teste", "email": "teste@teste.com.br", "national_registration": "24076153871", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "MÃ£e do Individual Partner", "identity_card": "265847011", "pep": false, "percentage": 100, "adm": true, "cbo": 821450 } 
json=None</msg>
<msg timestamp="20210322 03:16:26.927" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:16:26.691" endtime="20210322 03:16:26.928"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:16:26.932" level="INFO">{'id': '06e703123813472787bf6470f90be28b', 'name': 'Individual Partner de teste', 'revenue': 5500.0, 'email': 'teste@teste.com.br', 'created_at': '2021-03-22T03:16:27.7235', 'updated_at': '2021-03-22T03:16:27.723502', 'main': True, 'adm': True, 'percentage': 100.0, 'type': 'individual', 'national_registration': '24076153871', 'birthday': '1988-04-23', 'mothers_name': 'MÃ£e do Individual Partner', 'identity_card': '265847011', 'pep': False, 'cbo': '821450', '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/2f7f1d5f5d4a472baf4edde40321b2ba/partners/06e703123813472787bf6470f90be28b', 'type': 'GET'}, 'phones': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/2f7f1d5f5d4a472baf4edde40321b2ba/partners/06e703123813472787bf6470f90be28b/phones', 'type': 'GET'}, 'addresses': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/2f7f1d5f5d4a472baf4edde40321b2ba/partners/06e703123813472787bf6470f90be28b/addresses', 'type': 'GET'}, 'documents': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/2f7f1d5f5d4a472baf4edde40321b2ba/partners/06e703123813472787bf6470f90be28b/documents', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/2f7f1d5f5d4a472baf4edde40321b2ba', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 03:16:26.929" endtime="20210322 03:16:26.932"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:16:26.934" level="INFO">0a3f3bdfd90c0155</msg>
<status status="PASS" starttime="20210322 03:16:26.933" endtime="20210322 03:16:26.935"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:16:26.936" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:16:26.935" endtime="20210322 03:16:26.936"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${partner_external_key}</var>
</assign>
<msg timestamp="20210322 03:16:26.939" level="INFO">${partner_external_key} = 06e703123813472787bf6470f90be28b</msg>
<status status="PASS" starttime="20210322 03:16:26.937" endtime="20210322 03:16:26.939"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${partner_external_key}</arg>
</arguments>
<msg timestamp="20210322 03:16:26.941" level="INFO">${partner_external_key} = 06e703123813472787bf6470f90be28b</msg>
<status status="PASS" starttime="20210322 03:16:26.940" endtime="20210322 03:16:26.941"></status>
</kw>
<status status="PASS" starttime="20210322 03:16:26.688" endtime="20210322 03:16:26.941"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 03:16:26.943" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:16:26.942" endtime="20210322 03:16:26.943"></status>
</kw>
<kw name="criar partner phone" library="accreditation_post_partner_phone">
<arguments>
<arg>21</arg>
<arg>51</arg>
<arg>996554785</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:16:26.945" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 03:16:26.944" endtime="20210322 03:16:26.945"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"area_code": "${phone_area_code}",</arg>
<arg>"country_code": "${phone_country_code}",</arg>
<arg>"number": "${phone_number}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 03:16:26.946" level="INFO">${body} = { "area_code": "21", "country_code": "51", "number": "996554785" }</msg>
<status status="PASS" starttime="20210322 03:16:26.945" endtime="20210322 03:16:26.946"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/partners/${partner_external_key}/phones/</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:16:26.948" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/2f7f1d5f5d4a472baf4edde40321b2ba/partners/06e703123813472787bf6470f90be28b/phones/, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "area_code": "21", "country_code": "51", "number": "996554785" } 
json=None</msg>
<msg timestamp="20210322 03:16:27.166" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:16:26.947" endtime="20210322 03:16:27.166"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:16:27.166" level="INFO">{'id': '52d0b6e26e1342e6842c8caff7bbfd61', 'area_code': '21', 'country_code': '51', 'number': '996554785', 'main': True, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/2f7f1d5f5d4a472baf4edde40321b2ba/partners/06e703123813472787bf6470f90be28b/phones/52d0b6e26e1342e6842c8caff7bbfd61', 'type': 'GET'}, 'partner': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/2f7f1d5f5d4a472baf4edde40321b2ba/partners/06e703123813472787bf6470f90be28b', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/2f7f1d5f5d4a472baf4edde40321b2ba', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 03:16:27.166" endtime="20210322 03:16:27.166"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:16:27.167" level="INFO">dc8e8e531c17cc5e</msg>
<status status="PASS" starttime="20210322 03:16:27.167" endtime="20210322 03:16:27.167"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:16:27.169" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:16:27.168" endtime="20210322 03:16:27.169"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${holder_external_key}</var>
</assign>
<msg timestamp="20210322 03:16:27.170" level="INFO">${holder_external_key} = 52d0b6e26e1342e6842c8caff7bbfd61</msg>
<status status="PASS" starttime="20210322 03:16:27.169" endtime="20210322 03:16:27.170"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${phone_external_key}</arg>
</arguments>
<msg timestamp="20210322 03:16:27.171" level="INFO">${phone_external_key} = 858607f94e534f028d1298a1476cc8af</msg>
<status status="PASS" starttime="20210322 03:16:27.171" endtime="20210322 03:16:27.172"></status>
</kw>
<status status="PASS" starttime="20210322 03:16:26.943" endtime="20210322 03:16:27.173"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 03:16:27.173" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:16:27.173" endtime="20210322 03:16:27.173"></status>
</kw>
<kw name="criar partner address" library="accreditation_post_partner_address">
<arguments>
<arg>Rio de Janeiro</arg>
<arg>Rio de Janeiro</arg>
<arg>Brasil</arg>
<arg>Bairro de Testes</arg>
<arg>Rua de Testes</arg>
<arg>61</arg>
<arg>apto 201</arg>
<arg>21550478</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:16:27.175" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 03:16:27.174" endtime="20210322 03:16:27.175"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"city": "${city}",</arg>
<arg>"state": "${state}",</arg>
<arg>"country": "${country}",</arg>
<arg>"neighborhood": "${neighborhood}",</arg>
<arg>"street": "${street}",</arg>
<arg>"number": "${number}",</arg>
<arg>"complement": "${complement}",</arg>
<arg>"postal_code": "${postal_code}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 03:16:27.176" level="INFO">${body} = { "city": "Rio de Janeiro", "state": "Rio de Janeiro", "country": "Brasil", "neighborhood": "Bairro de Testes", "street": "Rua de Testes", "number": "61", "complement": "apto 201", "postal_code": "215...</msg>
<status status="PASS" starttime="20210322 03:16:27.175" endtime="20210322 03:16:27.176"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/partners/${partner_external_key}/addresses</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:16:27.178" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/2f7f1d5f5d4a472baf4edde40321b2ba/partners/06e703123813472787bf6470f90be28b/addresses, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "city": "Rio de Janeiro", "state": "Rio de Janeiro", "country": "Brasil", "neighborhood": "Bairro de Testes", "street": "Rua de Testes", "number": "61", "complement": "apto 201", "postal_code": "21550478" } 
json=None</msg>
<msg timestamp="20210322 03:16:27.407" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:16:27.177" endtime="20210322 03:16:27.408"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:16:27.410" level="INFO">{'id': '09359298d8094b98b2e464ef4cd9ba6f', 'street': 'Rua de Testes', 'number': '61', 'city': 'Rio de Janeiro', 'complement': 'apto 201', 'state': 'Rio de Janeiro', 'neighborhood': 'Bairro de Testes', 'postal_code': '21550478', 'country': 'Brasil', 'main': True, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/2f7f1d5f5d4a472baf4edde40321b2ba/partners/06e703123813472787bf6470f90be28b/addresses/09359298d8094b98b2e464ef4cd9ba6f', 'type': 'GET'}, 'partner': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/2f7f1d5f5d4a472baf4edde40321b2ba/partners/06e703123813472787bf6470f90be28b', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/2f7f1d5f5d4a472baf4edde40321b2ba', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 03:16:27.409" endtime="20210322 03:16:27.411"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:16:27.413" level="INFO">974dfae81875a79e</msg>
<status status="PASS" starttime="20210322 03:16:27.412" endtime="20210322 03:16:27.413"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:16:27.414" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:16:27.413" endtime="20210322 03:16:27.414"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${address_external_key}</var>
</assign>
<msg timestamp="20210322 03:16:27.416" level="INFO">${address_external_key} = 09359298d8094b98b2e464ef4cd9ba6f</msg>
<status status="PASS" starttime="20210322 03:16:27.415" endtime="20210322 03:16:27.416"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${address_external_key}</arg>
</arguments>
<msg timestamp="20210322 03:16:27.417" level="INFO">${address_external_key} = 09359298d8094b98b2e464ef4cd9ba6f</msg>
<status status="PASS" starttime="20210322 03:16:27.417" endtime="20210322 03:16:27.417"></status>
</kw>
<status status="PASS" starttime="20210322 03:16:27.173" endtime="20210322 03:16:27.418"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 03:16:27.419" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:16:27.418" endtime="20210322 03:16:27.419"></status>
</kw>
<kw name="criar partner document" library="accreditation_post_partner_document">
<arguments>
<arg>SELFIE</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:16:27.421" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 03:16:27.420" endtime="20210322 03:16:27.421"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 03:16:27.422" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 03:16:27.424" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 03:16:27.421" endtime="20210322 03:16:27.424"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/partners/${partner_externaL_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:16:27.426" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/2f7f1d5f5d4a472baf4edde40321b2ba/partners/06e703123813472787bf6470f90be28b/documents?type=SELFIE, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 03:16:27.709" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:16:27.425" endtime="20210322 03:16:27.709"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:16:27.711" level="INFO">{'id': '2cc6349943db40a28b412a25bbfb9f07', 'document_type': 'selfie', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/2f7f1d5f5d4a472baf4edde40321b2ba/partners/06e703123813472787bf6470f90be28b/documents/2cc6349943db40a28b412a25bbfb9f07', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/2f7f1d5f5d4a472baf4edde40321b2ba', 'type': 'GET'}, 'partner': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/2f7f1d5f5d4a472baf4edde40321b2ba/partners/06e703123813472787bf6470f90be28b', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/2f7f1d5f5d4a472baf4edde40321b2ba/partners/06e703123813472787bf6470f90be28b/documents/2cc6349943db40a28b412a25bbfb9f07/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 03:16:27.710" endtime="20210322 03:16:27.712"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:16:27.714" level="INFO">abdd447da47cab26</msg>
<status status="PASS" starttime="20210322 03:16:27.713" endtime="20210322 03:16:27.714"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:16:27.716" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:16:27.715" endtime="20210322 03:16:27.716"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 03:16:27.718" level="INFO">${document_external_key} = 2cc6349943db40a28b412a25bbfb9f07</msg>
<status status="PASS" starttime="20210322 03:16:27.716" endtime="20210322 03:16:27.718"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 03:16:27.719" level="INFO">${document_external_key} = 2cc6349943db40a28b412a25bbfb9f07</msg>
<status status="PASS" starttime="20210322 03:16:27.719" endtime="20210322 03:16:27.719"></status>
</kw>
<status status="PASS" starttime="20210322 03:16:27.419" endtime="20210322 03:16:27.720"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 03:16:27.721" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:16:27.721" endtime="20210322 03:16:27.721"></status>
</kw>
<kw name="criar partner document" library="accreditation_post_partner_document">
<arguments>
<arg>RG_FRENTE</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:16:27.724" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 03:16:27.724" endtime="20210322 03:16:27.724"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 03:16:27.725" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 03:16:27.727" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 03:16:27.725" endtime="20210322 03:16:27.727"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/partners/${partner_externaL_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:16:27.728" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/2f7f1d5f5d4a472baf4edde40321b2ba/partners/06e703123813472787bf6470f90be28b/documents?type=RG_FRENTE, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 03:16:28.041" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:16:27.728" endtime="20210322 03:16:28.041"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:16:28.044" level="INFO">{'id': '912fd7443ee84ca08d8cfc4b779393de', 'document_type': 'rg_frente', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/2f7f1d5f5d4a472baf4edde40321b2ba/partners/06e703123813472787bf6470f90be28b/documents/912fd7443ee84ca08d8cfc4b779393de', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/2f7f1d5f5d4a472baf4edde40321b2ba', 'type': 'GET'}, 'partner': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/2f7f1d5f5d4a472baf4edde40321b2ba/partners/06e703123813472787bf6470f90be28b', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/2f7f1d5f5d4a472baf4edde40321b2ba/partners/06e703123813472787bf6470f90be28b/documents/912fd7443ee84ca08d8cfc4b779393de/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 03:16:28.042" endtime="20210322 03:16:28.044"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:16:28.046" level="INFO">719801e59eb3df72</msg>
<status status="PASS" starttime="20210322 03:16:28.045" endtime="20210322 03:16:28.047"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:16:28.049" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:16:28.048" endtime="20210322 03:16:28.049"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 03:16:28.051" level="INFO">${document_external_key} = 912fd7443ee84ca08d8cfc4b779393de</msg>
<status status="PASS" starttime="20210322 03:16:28.050" endtime="20210322 03:16:28.051"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 03:16:28.053" level="INFO">${document_external_key} = 912fd7443ee84ca08d8cfc4b779393de</msg>
<status status="PASS" starttime="20210322 03:16:28.052" endtime="20210322 03:16:28.053"></status>
</kw>
<status status="PASS" starttime="20210322 03:16:27.723" endtime="20210322 03:16:28.053"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 03:16:28.055" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:16:28.054" endtime="20210322 03:16:28.055"></status>
</kw>
<kw name="criar partner document" library="accreditation_post_partner_document">
<arguments>
<arg>RG_VERSO</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:16:28.057" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 03:16:28.056" endtime="20210322 03:16:28.057"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 03:16:28.058" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 03:16:28.061" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 03:16:28.058" endtime="20210322 03:16:28.061"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/partners/${partner_externaL_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:16:28.063" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/2f7f1d5f5d4a472baf4edde40321b2ba/partners/06e703123813472787bf6470f90be28b/documents?type=RG_VERSO, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 03:16:28.347" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:16:28.062" endtime="20210322 03:16:28.347"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:16:28.350" level="INFO">{'id': 'd541ba386fab4140b6627abfaa5c0f39', 'document_type': 'rg_verso', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/2f7f1d5f5d4a472baf4edde40321b2ba/partners/06e703123813472787bf6470f90be28b/documents/d541ba386fab4140b6627abfaa5c0f39', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/2f7f1d5f5d4a472baf4edde40321b2ba', 'type': 'GET'}, 'partner': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/2f7f1d5f5d4a472baf4edde40321b2ba/partners/06e703123813472787bf6470f90be28b', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/2f7f1d5f5d4a472baf4edde40321b2ba/partners/06e703123813472787bf6470f90be28b/documents/d541ba386fab4140b6627abfaa5c0f39/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 03:16:28.348" endtime="20210322 03:16:28.350"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:16:28.353" level="INFO">228392a76961bf99</msg>
<status status="PASS" starttime="20210322 03:16:28.351" endtime="20210322 03:16:28.353"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:16:28.355" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:16:28.354" endtime="20210322 03:16:28.355"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 03:16:28.358" level="INFO">${document_external_key} = d541ba386fab4140b6627abfaa5c0f39</msg>
<status status="PASS" starttime="20210322 03:16:28.356" endtime="20210322 03:16:28.359"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 03:16:28.360" level="INFO">${document_external_key} = d541ba386fab4140b6627abfaa5c0f39</msg>
<status status="PASS" starttime="20210322 03:16:28.359" endtime="20210322 03:16:28.360"></status>
</kw>
<status status="PASS" starttime="20210322 03:16:28.055" endtime="20210322 03:16:28.361"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 03:16:28.362" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:16:28.362" endtime="20210322 03:16:28.363"></status>
</kw>
<kw name="solicitar aprovaÃ§Ã£o do holder" library="accreditation_request_approval">
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:16:28.365" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 03:16:28.364" endtime="20210322 03:16:28.365"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/approval</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:16:28.367" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/2f7f1d5f5d4a472baf4edde40321b2ba/approval, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data=None 
json=None</msg>
<msg timestamp="20210322 03:16:28.675" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:16:28.366" endtime="20210322 03:16:28.675"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:16:28.676" level="INFO">{'message': 'Approval request accepted successfully. Processing analysis'}</msg>
<status status="PASS" starttime="20210322 03:16:28.675" endtime="20210322 03:16:28.676"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:16:28.678" level="INFO">4c1ef0ed887ea888</msg>
<status status="PASS" starttime="20210322 03:16:28.677" endtime="20210322 03:16:28.678"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:16:28.679" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:16:28.678" endtime="20210322 03:16:28.679"></status>
</kw>
<status status="PASS" starttime="20210322 03:16:28.363" endtime="20210322 03:16:28.679"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 03:16:28.680" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:16:28.680" endtime="20210322 03:16:28.680"></status>
</kw>
<kw name="recebendo notificaÃ§Ã£o de aprovaÃ§Ã£o" library="accreditation_risk_notification">
<kw name="Uuid 4" library="FakerLibrary">
<doc>Generates a random UUID4 string.
:param cast_to: Specify what type the UUID should be cast to. Default is `str`
:type cast_to: callable</doc>
<assign>
<var>${assessment_id}</var>
</assign>
<msg timestamp="20210322 03:16:28.682" level="INFO">${assessment_id} = 3052aa58-0adf-4763-92bb-49bc214fd9e3</msg>
<status status="PASS" starttime="20210322 03:16:28.681" endtime="20210322 03:16:28.682"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>year</arg>
</arguments>
<assign>
<var>${year}</var>
</assign>
<msg timestamp="20210322 03:16:28.683" level="INFO">${year} = 2021</msg>
<status status="PASS" starttime="20210322 03:16:28.682" endtime="20210322 03:16:28.683"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>month</arg>
</arguments>
<assign>
<var>${month}</var>
</assign>
<msg timestamp="20210322 03:16:28.684" level="INFO">${month} = 03</msg>
<status status="PASS" starttime="20210322 03:16:28.683" endtime="20210322 03:16:28.684"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>day</arg>
</arguments>
<assign>
<var>${day}</var>
</assign>
<msg timestamp="20210322 03:16:28.684" level="INFO">${day} = 22</msg>
<status status="PASS" starttime="20210322 03:16:28.684" endtime="20210322 03:16:28.684"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:16:28.685" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 03:16:28.685" endtime="20210322 03:16:28.685"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "risk.assessment.result",</arg>
<arg>"resource": "business.holder",</arg>
<arg>"created_at": "${year}-${month}-${day} 15:28:56.747Z",</arg>
<arg>"marketplace_id": "${marketplace_external_key}",</arg>
<arg>"object": {</arg>
<arg>"result": "APPROVED",</arg>
<arg>"holder_id": "${holder_external_key}",</arg>
<arg>"applicant_id": "${application_external_key}",</arg>
<arg>"assessment_id": "${assessment_id}"</arg>
<arg>}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 03:16:28.687" level="INFO">${body} = { "type": "risk.assessment.result", "resource": "business.holder", "created_at": "2021-03-22 15:28:56.747Z", "marketplace_id": "f71a8951368a4cc085cf7875ff44e61c", "object": { "result": "APPROVED", "ho...</msg>
<status status="PASS" starttime="20210322 03:16:28.686" endtime="20210322 03:16:28.687"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/admin/internal_operation/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/registration/approval</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:16:28.688" level="INFO">POST Request using : uri=/admin/internal_operation/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/2f7f1d5f5d4a472baf4edde40321b2ba/registration/approval, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "risk.assessment.result", "resource": "business.holder", "created_at": "2021-03-22 15:28:56.747Z", "marketplace_id": "f71a8951368a4cc085cf7875ff44e61c", "object": { "result": "APPROVED", "holder_id": "2f7f1d5f5d4a472baf4edde40321b2ba", "applicant_id": "bcc25a6751c14b52af1340d40dba78c5", "assessment_id": "3052aa58-0adf-4763-92bb-49bc214fd9e3" } } 
json=None</msg>
<msg timestamp="20210322 03:16:28.894" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:16:28.688" endtime="20210322 03:16:28.894"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:16:28.896" level="INFO">{'message': 'Holder approved successfully'}</msg>
<status status="PASS" starttime="20210322 03:16:28.895" endtime="20210322 03:16:28.896"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:16:28.898" level="INFO">57b0ebc8a1983d8f</msg>
<status status="PASS" starttime="20210322 03:16:28.897" endtime="20210322 03:16:28.898"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:16:28.899" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:16:28.898" endtime="20210322 03:16:28.899"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 03:16:28.900" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:16:28.900" endtime="20210322 03:16:28.900"></status>
</kw>
<status status="PASS" starttime="20210322 03:16:28.681" endtime="20210322 03:16:28.901"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 03:16:28.901" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:16:28.901" endtime="20210322 03:16:28.902"></status>
</kw>
<kw name="buscar account por holder" library="accounts_get_accounts_by_holder">
<kw name="conectar accounts" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accounts</arg>
<arg>url=${account_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 03:16:28.904" level="INFO">Creating Session using : alias=accounts, url=https://banking-accounts-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 03:16:28.903" endtime="20210322 03:16:28.904"></status>
</kw>
<status status="PASS" starttime="20210322 03:16:28.903" endtime="20210322 03:16:28.904"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accounts</arg>
<arg>/marketplaces/${marketplace_external_key}/holders/${holder_external_key}/accounts</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:16:28.906" level="INFO">GET Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/holders/2f7f1d5f5d4a472baf4edde40321b2ba/accounts, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 03:16:29.535" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:16:28.905" endtime="20210322 03:16:29.535"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:16:29.537" level="INFO">{'items': [{'id': 'a7361b4ad206432ca2157288f0bb1509', 'holder': '2f7f1d5f5d4a472baf4edde40321b2ba', 'balance': '0.00', 'currency': 'BRL', 'routing_number': '001', 'number': '5232165765', 'status': 'active', 'metadata': {}, 'created_at': '2021-03-22T06:16:29.739697', 'updated_at': '2021-03-22T06:16:29.739697', 'primary': True, 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'uri': '/v2/marketplaces/f71a8951368a4cc085cf7875ff44e61c/accounts/a7361b4ad206432ca2157288f0bb1509', 'resource': 'payment_account'}], 'has_more': False, 'limit': 100, 'total_pages': 1, 'page': 1, 'offset': 0, 'total': '1', 'query_count': '1'}</msg>
<status status="PASS" starttime="20210322 03:16:29.536" endtime="20210322 03:16:29.537"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:16:29.538" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:16:29.538" endtime="20210322 03:16:29.538"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["id"]}</arg>
</arguments>
<assign>
<var>${account_external_key}</var>
</assign>
<msg timestamp="20210322 03:16:29.540" level="INFO">${account_external_key} = a7361b4ad206432ca2157288f0bb1509</msg>
<status status="PASS" starttime="20210322 03:16:29.539" endtime="20210322 03:16:29.541"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_external_key}</arg>
</arguments>
<msg timestamp="20210322 03:16:29.542" level="INFO">${account_external_key} = a7361b4ad206432ca2157288f0bb1509</msg>
<status status="PASS" starttime="20210322 03:16:29.541" endtime="20210322 03:16:29.542"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["number"]}</arg>
</arguments>
<assign>
<var>${account_number}</var>
</assign>
<msg timestamp="20210322 03:16:29.544" level="INFO">${account_number} = 5232165765</msg>
<status status="PASS" starttime="20210322 03:16:29.543" endtime="20210322 03:16:29.544"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_number}</arg>
</arguments>
<msg timestamp="20210322 03:16:29.546" level="INFO">${account_number} = 5232165765</msg>
<status status="PASS" starttime="20210322 03:16:29.544" endtime="20210322 03:16:29.546"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["routing_number"]}</arg>
</arguments>
<assign>
<var>${account_routing_number}</var>
</assign>
<msg timestamp="20210322 03:16:29.548" level="INFO">${account_routing_number} = 001</msg>
<status status="PASS" starttime="20210322 03:16:29.547" endtime="20210322 03:16:29.549"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_routing_number}</arg>
</arguments>
<msg timestamp="20210322 03:16:29.550" level="INFO">${account_routing_number} = 001</msg>
<status status="PASS" starttime="20210322 03:16:29.549" endtime="20210322 03:16:29.550"></status>
</kw>
<status status="PASS" starttime="20210322 03:16:28.902" endtime="20210322 03:16:29.550"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 03:16:29.550" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:16:29.550" endtime="20210322 03:16:29.550"></status>
</kw>
<status status="PASS" starttime="20210322 03:16:25.058" endtime="20210322 03:16:29.551"></status>
</kw>
<status status="PASS" starttime="20210322 03:16:25.057" endtime="20210322 03:16:29.551"></status>
</kw>
<kw name="gerar saldo para account" library="account_generate_balance">
<arguments>
<arg>${account_external_key}</arg>
</arguments>
<kw name="conectar accounts" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accounts</arg>
<arg>url=${account_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 03:16:29.553" level="INFO">Creating Session using : alias=accounts, url=https://banking-accounts-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 03:16:29.553" endtime="20210322 03:16:29.554"></status>
</kw>
<status status="PASS" starttime="20210322 03:16:29.552" endtime="20210322 03:16:29.554"></status>
</kw>
<kw name="Uuid 4" library="FakerLibrary">
<doc>Generates a random UUID4 string.
:param cast_to: Specify what type the UUID should be cast to. Default is `str`
:type cast_to: callable</doc>
<assign>
<var>${uuid}</var>
</assign>
<msg timestamp="20210322 03:16:29.555" level="INFO">${uuid} = 4eca51c9-affb-4823-8200-d6658301a475</msg>
<status status="PASS" starttime="20210322 03:16:29.554" endtime="20210322 03:16:29.555"></status>
</kw>
<kw name="conectar accounts" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accounts</arg>
<arg>url=${account_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 03:16:29.556" level="INFO">Creating Session using : alias=accounts, url=https://banking-accounts-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 03:16:29.556" endtime="20210322 03:16:29.557"></status>
</kw>
<status status="PASS" starttime="20210322 03:16:29.555" endtime="20210322 03:16:29.557"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:16:29.558" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 03:16:29.557" endtime="20210322 03:16:29.558"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"operations": [</arg>
<arg>{</arg>
<arg>"amount": 9000000000000,</arg>
<arg>"authorization_code": "${uuid}",</arg>
<arg>"transaction_id": "${uuid}",</arg>
<arg>"id": "${uuid}",</arg>
<arg>"id_checking_account": "${account_external_key}",</arg>
<arg>"transfer_date": "2020-02-20T20:58:06.510Z",</arg>
<arg>"fee": 0,</arg>
<arg>"description": "Teste",</arg>
<arg>"object_type": "transfer",</arg>
<arg>"object_id": "${uuid}",</arg>
<arg>"dflag": "ACTIVE",</arg>
<arg>"created_at": "2019-10-14T20:58:06.510Z",</arg>
<arg>"type": "Transfer"</arg>
<arg>}</arg>
<arg>],</arg>
<arg>"reference_id": "Criando saldo na account"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 03:16:29.559" level="INFO">${body} = { "operations": [ { "amount": 9000000000000, "authorization_code": "4eca51c9-affb-4823-8200-d6658301a475", "transaction_id": "4eca51c9-affb-4823-8200-d6658301a475", "id": "4eca51c9-affb-4823-8200-d665...</msg>
<status status="PASS" starttime="20210322 03:16:29.559" endtime="20210322 03:16:29.559"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accounts</arg>
<arg>/admin/internal_operation/authorization/${uuid}</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:16:29.561" level="INFO">POST Request using : uri=/admin/internal_operation/authorization/4eca51c9-affb-4823-8200-d6658301a475, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "operations": [ { "amount": 9000000000000, "authorization_code": "4eca51c9-affb-4823-8200-d6658301a475", "transaction_id": "4eca51c9-affb-4823-8200-d6658301a475", "id": "4eca51c9-affb-4823-8200-d6658301a475", "id_checking_account": "a7361b4ad206432ca2157288f0bb1509", "transfer_date": "2020-02-20T20:58:06.510Z", "fee": 0, "description": "Teste", "object_type": "transfer", "object_id": "4eca51c9-affb-4823-8200-d6658301a475", "dflag": "ACTIVE", "created_at": "2019-10-14T20:58:06.510Z", "type": "Transfer" } ], "reference_id": "Criando saldo na account" } 
json=None</msg>
<msg timestamp="20210322 03:16:30.198" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:16:29.559" endtime="20210322 03:16:30.198"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.status_code}' == 200</arg>
<arg>Log</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:16:30.199" endtime="20210322 03:16:30.200"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.status_code}' == 200</arg>
<arg>Log</arg>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:16:30.200" endtime="20210322 03:16:30.201"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.status_code}' == 200</arg>
<arg>Log</arg>
<arg>${response.status_code}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:16:30.201" endtime="20210322 03:16:30.202"></status>
</kw>
<status status="PASS" starttime="20210322 03:16:29.551" endtime="20210322 03:16:30.202"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${pix_type}' == 'phone'</arg>
<arg>criar chave pix</arg>
<arg>${pix_type}</arg>
<arg>${phone_pix}</arg>
<arg>ELSE IF</arg>
<arg>'${pix_type}' == 'email'</arg>
<arg>criar chave pix</arg>
<arg>${pix_type}</arg>
<arg>${email_pix}</arg>
<arg>ELSE IF</arg>
<arg>'${pix_type}' == 'evp'</arg>
<arg>criar chave pix</arg>
<arg>${pix_type}</arg>
<arg>${EMPTY}</arg>
<arg>ELSE IF</arg>
<arg>'${pix_type}' == 'national_registration'</arg>
<arg>criar chave pix</arg>
<arg>${pix_type}</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw name="criar chave pix" library="pix_dict_create_entry">
<arguments>
<arg>${pix_type}</arg>
<arg>${email_pix}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 03:16:30.206" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 03:16:30.205" endtime="20210322 03:16:30.206"></status>
</kw>
<status status="PASS" starttime="20210322 03:16:30.205" endtime="20210322 03:16:30.206"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${type}</arg>
</arguments>
<msg timestamp="20210322 03:16:30.207" level="INFO">${type} = email</msg>
<status status="PASS" starttime="20210322 03:16:30.207" endtime="20210322 03:16:30.207"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210322 03:16:30.209" level="INFO">${value} = lucas80@da.br</msg>
<status status="PASS" starttime="20210322 03:16:30.208" endtime="20210322 03:16:30.209"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:16:30.209" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 03:16:30.209" endtime="20210322 03:16:30.209"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "${type}",</arg>
<arg>"value": "${value}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 03:16:30.211" level="INFO">${body} = { "type": "email", "value": "lucas80@da.br" }</msg>
<status status="PASS" starttime="20210322 03:16:30.209" endtime="20210322 03:16:30.211"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:16:30.212" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/2f7f1d5f5d4a472baf4edde40321b2ba/accounts/a7361b4ad206432ca2157288f0bb1509/entries, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "email", "value": "lucas80@da.br" } 
json=None</msg>
<msg timestamp="20210322 03:16:30.892" level="INFO">${response} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20210322 03:16:30.211" endtime="20210322 03:16:30.892"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:16:30.896" level="INFO">{'id': '25be3b351f8c41018a472391e13e0f3c', 'status': 'waiting_ownership_verification', 'created_at': '2021-03-22T03:16:31.751', 'updated_at': '2021-03-22T03:16:31.751', 'key': {'value': 'lucas80@da.br', 'type': 'email'}, 'account': {'id': 'a7361b4ad206432ca2157288f0bb1509', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': '2f7f1d5f5d4a472baf4edde40321b2ba', 'owner': {'name': 'Nome Legal da Empresa', 'national_registration': '07135849000111', 'type': 'business'}, 'routing_number': '001', 'number': '5232165765', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}, 'resource': 'pix.entry'}</msg>
<status status="PASS" starttime="20210322 03:16:30.893" endtime="20210322 03:16:30.897"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:16:30.900" level="INFO">5ff5f9651c706f17</msg>
<status status="PASS" starttime="20210322 03:16:30.898" endtime="20210322 03:16:30.900"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 03:16:30.903" level="INFO">202</msg>
<status status="PASS" starttime="20210322 03:16:30.901" endtime="20210322 03:16:30.903"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:16:30.904" level="INFO">${response} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20210322 03:16:30.903" endtime="20210322 03:16:30.904"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${entry_external_key}</var>
</assign>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:16:30.906" endtime="20210322 03:16:30.907"></status>
</kw>
<msg timestamp="20210322 03:16:30.907" level="INFO">${entry_external_key} = 25be3b351f8c41018a472391e13e0f3c</msg>
<status status="PASS" starttime="20210322 03:16:30.904" endtime="20210322 03:16:30.907"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${entry_external_key}</arg>
</arguments>
<msg timestamp="20210322 03:16:30.908" level="INFO">${entry_external_key} = 25be3b351f8c41018a472391e13e0f3c</msg>
<status status="PASS" starttime="20210322 03:16:30.907" endtime="20210322 03:16:30.908"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["key"]["value"]}</arg>
</arguments>
<assign>
<var>${entry_key_value}</var>
</assign>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["key"]["value"]}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:16:30.909" endtime="20210322 03:16:30.910"></status>
</kw>
<msg timestamp="20210322 03:16:30.910" level="INFO">${entry_key_value} = lucas80@da.br</msg>
<status status="PASS" starttime="20210322 03:16:30.908" endtime="20210322 03:16:30.910"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${entry_key_value}</arg>
</arguments>
<msg timestamp="20210322 03:16:30.911" level="INFO">${entry_key_value} = lucas80@da.br</msg>
<status status="PASS" starttime="20210322 03:16:30.911" endtime="20210322 03:16:30.911"></status>
</kw>
<status status="PASS" starttime="20210322 03:16:30.204" endtime="20210322 03:16:30.911"></status>
</kw>
<status status="PASS" starttime="20210322 03:16:30.203" endtime="20210322 03:16:30.912"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${pix_type}' == 'phone'</arg>
<arg>buscar verification code</arg>
<arg>${holder_external_key}</arg>
<arg>${account_external_key}</arg>
<arg>${entry_external_key}</arg>
<arg>ELSE IF</arg>
<arg>'${pix_type}' == 'email'</arg>
<arg>buscar verification code</arg>
<arg>${holder_external_key}</arg>
<arg>${account_external_key}</arg>
<arg>${entry_external_key}</arg>
</arguments>
<kw name="buscar verification code" library="pix_dict_verification_code">
<arguments>
<arg>${holder_external_key}</arg>
<arg>${account_external_key}</arg>
<arg>${entry_external_key}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 03:16:30.914" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 03:16:30.914" endtime="20210322 03:16:30.915"></status>
</kw>
<status status="PASS" starttime="20210322 03:16:30.914" endtime="20210322 03:16:30.915"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/admin/internal_operation/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries/${entry_external_key}/code</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:16:30.915" level="INFO">GET Request using : uri=/admin/internal_operation/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/2f7f1d5f5d4a472baf4edde40321b2ba/accounts/a7361b4ad206432ca2157288f0bb1509/entries/25be3b351f8c41018a472391e13e0f3c/code, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 03:16:31.550" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:16:30.915" endtime="20210322 03:16:31.550"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:16:31.553" level="INFO">{'code': '1405'}</msg>
<status status="PASS" starttime="20210322 03:16:31.551" endtime="20210322 03:16:31.553"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:16:31.555" level="INFO">3a7abe91467281fb</msg>
<status status="PASS" starttime="20210322 03:16:31.554" endtime="20210322 03:16:31.556"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 03:16:31.557" level="INFO">200</msg>
<status status="PASS" starttime="20210322 03:16:31.556" endtime="20210322 03:16:31.558"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:16:31.559" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:16:31.558" endtime="20210322 03:16:31.559"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["code"]}</arg>
</arguments>
<assign>
<var>${verification_code}</var>
</assign>
<msg timestamp="20210322 03:16:31.563" level="INFO">${verification_code} = 1405</msg>
<status status="PASS" starttime="20210322 03:16:31.561" endtime="20210322 03:16:31.563"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${verification_code}</arg>
</arguments>
<msg timestamp="20210322 03:16:31.564" level="INFO">${verification_code} = 1405</msg>
<status status="PASS" starttime="20210322 03:16:31.563" endtime="20210322 03:16:31.564"></status>
</kw>
<status status="PASS" starttime="20210322 03:16:30.913" endtime="20210322 03:16:31.565"></status>
</kw>
<status status="PASS" starttime="20210322 03:16:30.912" endtime="20210322 03:16:31.566"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${pix_type}' == 'phone'</arg>
<arg>confirmar propriedade da chave pix</arg>
<arg>${verification_code}</arg>
<arg>${holder_external_key}</arg>
<arg>${account_external_key}</arg>
<arg>${entry_external_key}</arg>
<arg>ELSE IF</arg>
<arg>'${pix_type}' == 'email'</arg>
<arg>confirmar propriedade da chave pix</arg>
<arg>${verification_code}</arg>
<arg>${holder_external_key}</arg>
<arg>${account_external_key}</arg>
<arg>${entry_external_key}</arg>
</arguments>
<kw name="confirmar propriedade da chave pix" library="pix_dict_confirm_propriety">
<arguments>
<arg>${verification_code}</arg>
<arg>${holder_external_key}</arg>
<arg>${account_external_key}</arg>
<arg>${entry_external_key}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 03:16:31.570" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 03:16:31.569" endtime="20210322 03:16:31.571"></status>
</kw>
<status status="PASS" starttime="20210322 03:16:31.569" endtime="20210322 03:16:31.571"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:16:31.572" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 03:16:31.571" endtime="20210322 03:16:31.572"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"code": "${verification_code}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 03:16:31.573" level="INFO">${body} = { "code": "1405" }</msg>
<status status="PASS" starttime="20210322 03:16:31.572" endtime="20210322 03:16:31.573"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries/${entry_external_key}/ownership</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:16:31.574" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/2f7f1d5f5d4a472baf4edde40321b2ba/accounts/a7361b4ad206432ca2157288f0bb1509/entries/25be3b351f8c41018a472391e13e0f3c/ownership, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "code": "1405" } 
json=None</msg>
<msg timestamp="20210322 03:16:33.940" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:16:31.573" endtime="20210322 03:16:33.941"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:16:33.943" level="INFO">{'id': '25be3b351f8c41018a472391e13e0f3c', 'status': 'active', 'created_at': '2021-03-22T03:16:31.751', 'updated_at': '2021-03-22T03:16:34.816', 'key': {'value': 'lucas80@da.br', 'type': 'email'}, 'account': {'id': 'a7361b4ad206432ca2157288f0bb1509', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': '2f7f1d5f5d4a472baf4edde40321b2ba', 'owner': {'name': 'Nome Legal da Empresa', 'national_registration': '07135849000111', 'type': 'business'}, 'routing_number': '001', 'number': '5232165765', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}, 'resource': 'pix.entry'}</msg>
<status status="PASS" starttime="20210322 03:16:33.942" endtime="20210322 03:16:33.943"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:16:33.946" level="INFO">967cb5f2df2d1a1c</msg>
<status status="PASS" starttime="20210322 03:16:33.944" endtime="20210322 03:16:33.946"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 03:16:33.948" level="INFO">201</msg>
<status status="PASS" starttime="20210322 03:16:33.947" endtime="20210322 03:16:33.948"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:16:33.950" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:16:33.949" endtime="20210322 03:16:33.951"></status>
</kw>
<status status="PASS" starttime="20210322 03:16:31.567" endtime="20210322 03:16:33.951"></status>
</kw>
<status status="PASS" starttime="20210322 03:16:31.566" endtime="20210322 03:16:33.951"></status>
</kw>
<kw name="validar ativaÃ§Ã£o da chave de endereÃ§amento" library="asserts">
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["status"]}</arg>
<arg>active</arg>
</arguments>
<status status="PASS" starttime="20210322 03:16:33.953" endtime="20210322 03:16:33.954"></status>
</kw>
<status status="PASS" starttime="20210322 03:16:33.952" endtime="20210322 03:16:33.954"></status>
</kw>
<status status="PASS" starttime="20210322 03:16:25.053" endtime="20210322 03:16:33.954"></status>
</kw>
<kw name="criar pagamento pix com dados completos" library="pix_payments_create_pix_payment">
<arguments>
<arg>amount=${amount}</arg>
<arg>creditor_account_number=${creditor_account_number}</arg>
<arg>creditor_routing_number=${creditor_routing_number}</arg>
<arg>creditor_account_type=${creditor_account_type}</arg>
<arg>creditor_name=${creditor_name}</arg>
<arg>creditor_national_registration=${creditor_national_registration}</arg>
<arg>creditor_psp=${creditor_psp}</arg>
<arg>pix_description=${pix_description}</arg>
</arguments>
<kw name="conectar pix-payments" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-payments</arg>
<arg>url=${pix_payments_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 03:16:33.959" level="INFO">Creating Session using : alias=pix-payments, url=https://banking-pix-payments-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 03:16:33.958" endtime="20210322 03:16:33.959"></status>
</kw>
<status status="PASS" starttime="20210322 03:16:33.957" endtime="20210322 03:16:33.960"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:16:33.961" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 03:16:33.960" endtime="20210322 03:16:33.961"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"amount": ${amount},</arg>
<arg>"creditor": {</arg>
<arg>"account": {</arg>
<arg>"number": "${creditor_account_number}",</arg>
<arg>"routing_number": "${creditor_routing_number}",</arg>
<arg>"type": "${creditor_account_type}"</arg>
<arg>},</arg>
<arg>"name": "${creditor_name}",</arg>
<arg>"national_registration": "${creditor_national_registration}",</arg>
<arg>"psp": "${creditor_psp}"</arg>
<arg>},</arg>
<arg>"description": "${pix_description}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 03:16:33.963" level="INFO">${body} = { "amount": 100, "creditor": { "account": { "number": "0243882974", "routing_number": "0500", "type": "cacc" }, "name": "Massa iti PF NauNNMO", "national_registration": "42808422644", "psp": "17192451...</msg>
<status status="PASS" starttime="20210322 03:16:33.962" endtime="20210322 03:16:33.963"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-payments</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/pix/holders/${holder_external_key}/accounts/${account_external_key}/payments</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:16:33.964" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/pix/holders/2f7f1d5f5d4a472baf4edde40321b2ba/accounts/a7361b4ad206432ca2157288f0bb1509/payments, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "amount": 100, "creditor": { "account": { "number": "0243882974", "routing_number": "0500", "type": "cacc" }, "name": "Massa iti PF NauNNMO", "national_registration": "42808422644", "psp": "17192451" }, "description": "Envio de PIX" } 
json=None</msg>
<msg timestamp="20210322 03:16:34.626" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:16:33.963" endtime="20210322 03:16:34.626"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:16:34.629" level="INFO">{'id': 'b3ce97fc5de4467dbb8dd7b519a5c699', 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'status': 'pending', 'end_to_end_id': 'E19468242202103220616626dc957063', 'message_id': 'M1946824248870bab2e9e307303129dd', 'amount': 100, 'created_at': '2021-03-22T03:16:35.460141', 'description': 'Envio de PIX', 'debtor': {'national_registration': '07135849000111', 'name': 'Holder de teste', 'type': 'individual', 'holder_id': '2f7f1d5f5d4a472baf4edde40321b2ba', 'account': {'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}, 'digital_account_id': 'a7361b4ad206432ca2157288f0bb1509', 'number': '5232165765', 'routing_number': '0001', 'type': 'cacc'}}, 'creditor': {'national_registration': '42808422644', 'name': 'Massa iti PF NauNNMO', 'type': 'individual', 'account': {'psp': {'code': '17192451'}, 'number': '0243882974', 'routing_number': '0500', 'type': 'cacc'}}, 'refunded_amount': 0}</msg>
<status status="PASS" starttime="20210322 03:16:34.627" endtime="20210322 03:16:34.629"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:16:34.631" level="INFO">5dc177f56e51ca48</msg>
<status status="PASS" starttime="20210322 03:16:34.630" endtime="20210322 03:16:34.632"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 03:16:34.634" level="INFO">201</msg>
<status status="PASS" starttime="20210322 03:16:34.633" endtime="20210322 03:16:34.634"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:16:34.636" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:16:34.635" endtime="20210322 03:16:34.636"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${payment_external_key}</var>
</assign>
<msg timestamp="20210322 03:16:34.640" level="INFO">${payment_external_key} = b3ce97fc5de4467dbb8dd7b519a5c699</msg>
<status status="PASS" starttime="20210322 03:16:34.637" endtime="20210322 03:16:34.640"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${payment_external_key}</arg>
</arguments>
<msg timestamp="20210322 03:16:34.641" level="INFO">${payment_external_key} = b3ce97fc5de4467dbb8dd7b519a5c699</msg>
<status status="PASS" starttime="20210322 03:16:34.641" endtime="20210322 03:16:34.642"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["end_to_end_id"]}</arg>
</arguments>
<assign>
<var>${end_to_end_id}</var>
</assign>
<msg timestamp="20210322 03:16:34.643" level="INFO">${end_to_end_id} = E19468242202103220616626dc957063</msg>
<status status="PASS" starttime="20210322 03:16:34.642" endtime="20210322 03:16:34.644"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${end_to_end_id}</arg>
</arguments>
<msg timestamp="20210322 03:16:34.645" level="INFO">${end_to_end_id} = E19468242202103220616626dc957063</msg>
<status status="PASS" starttime="20210322 03:16:34.644" endtime="20210322 03:16:34.645"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["message_id"]}</arg>
</arguments>
<assign>
<var>${message_id}</var>
</assign>
<msg timestamp="20210322 03:16:34.647" level="INFO">${message_id} = M1946824248870bab2e9e307303129dd</msg>
<status status="PASS" starttime="20210322 03:16:34.646" endtime="20210322 03:16:34.647"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${message_id}</arg>
</arguments>
<msg timestamp="20210322 03:16:34.648" level="INFO">${message_id} = M1946824248870bab2e9e307303129dd</msg>
<status status="PASS" starttime="20210322 03:16:34.647" endtime="20210322 03:16:34.648"></status>
</kw>
<status status="PASS" starttime="20210322 03:16:33.955" endtime="20210322 03:16:34.648"></status>
</kw>
<kw name="validar pagamento pix" library="asserts">
<arguments>
<arg>marketplace_external_key=${marketplace_external_key}</arg>
<arg>status_pix_payments=pending</arg>
<arg>amount=${amount}</arg>
<arg>pix_description=${pix_description}</arg>
<arg>debitor_national_registration=${national_registration}</arg>
<arg>debitor_name=${holder_name}</arg>
<arg>debitor_type=${holder_type}</arg>
<arg>debitor_holder_id=${holder_external_key}</arg>
<arg>debtor_account_psp_code=${debtor_account_psp_code}</arg>
<arg>debtor_account_psp_name=${debtor_account_psp_name}</arg>
<arg>debtor_digital_account=${account_external_key}</arg>
<arg>debtor_account_number=${account_number}</arg>
<arg>debtor_account_routing_number=${account_routing_number}</arg>
<arg>debtor_account_type=${debtor_account_type}</arg>
<arg>creditor_national_registration=${creditor_national_registration}</arg>
<arg>creditor_name=${creditor_name}</arg>
<arg>creditor_type=individual</arg>
<arg>creditor_account_psp_code=${creditor_psp}</arg>
<arg>creditor_account_number=${creditor_account_number}</arg>
<arg>creditor_account_routing_number=${creditor_routing_number}</arg>
<arg>creditor_account_type=${creditor_account_type}</arg>
<arg>refunded_amount=0</arg>
</arguments>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<arguments>
<arg>result_format=datetime</arg>
</arguments>
<assign>
<var>${date}</var>
</assign>
<msg timestamp="20210322 03:16:34.651" level="INFO">${date} = 2021-03-22 03:16:34.650634</msg>
<status status="PASS" starttime="20210322 03:16:34.651" endtime="20210322 03:16:34.651"></status>
</kw>
<kw name="Convert Date" library="DateTime">
<doc>Converts between supported `date formats`.</doc>
<arguments>
<arg>${date}</arg>
<arg>exclude_millis=yes</arg>
<arg>result_format=%Y-%m-%d</arg>
<arg>date_format=%d-%m-%Y</arg>
</arguments>
<assign>
<var>${date}</var>
</assign>
<msg timestamp="20210322 03:16:34.653" level="INFO">${date} = 2021-03-22</msg>
<status status="PASS" starttime="20210322 03:16:34.652" endtime="20210322 03:16:34.653"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["marketplace_id"]}</arg>
<arg>${marketplace_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:16:34.653" endtime="20210322 03:16:34.654"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["status"]}</arg>
<arg>${status_pix_payments}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:16:34.654" endtime="20210322 03:16:34.655"></status>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${response.json()["end_to_end_id"]}</arg>
</arguments>
<msg timestamp="20210322 03:16:34.656" level="INFO">Length is 32</msg>
<status status="PASS" starttime="20210322 03:16:34.656" endtime="20210322 03:16:34.656"></status>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${response.json()["message_id"]}</arg>
</arguments>
<msg timestamp="20210322 03:16:34.657" level="INFO">Length is 32</msg>
<status status="PASS" starttime="20210322 03:16:34.656" endtime="20210322 03:16:34.657"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.json()["amount"]}</arg>
<arg>${amount}</arg>
</arguments>
<msg timestamp="20210322 03:16:34.658" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:16:34.657" endtime="20210322 03:16:34.658"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["description"]}</arg>
<arg>${pix_description}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:16:34.658" endtime="20210322 03:16:34.659"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["national_registration"]}</arg>
<arg>${debitor_national_registration}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:16:34.659" endtime="20210322 03:16:34.660"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["name"]}</arg>
<arg>${debitor_name}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:16:34.660" endtime="20210322 03:16:34.661"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["type"]}</arg>
<arg>${debitor_type}</arg>
</arguments>
<msg timestamp="20210322 03:16:34.662" level="FAIL">individual != business</msg>
<status status="FAIL" starttime="20210322 03:16:34.661" endtime="20210322 03:16:34.662"></status>
</kw>
<status status="FAIL" starttime="20210322 03:16:34.648" endtime="20210322 03:16:34.663"></status>
</kw>
<doc>Envio de PIX com sucesso para uma conta Iti, a partir de um Holder Individual</doc>
<status status="FAIL" starttime="20210322 03:16:25.052" endtime="20210322 03:16:34.663" critical="yes">individual != business</status>
</test>
<test id="s1-s1-s1-t2" name="CenÃ¡rio: Criar pagamento PIX de para holder individual utilizando dados completos da conta de destino">
<kw name="criar chave pix ativa" library="pix_dict_create_active_key_pix">
<arguments>
<arg>holder_type=individual</arg>
<arg>pix_type=email</arg>
</arguments>
<kw name="Random Number" library="FakerLibrary">
<doc>Returns a random number with 1 digit (default, when digits==None),
a random number with 0 to given number of digits, or a random number
with given number to given number of digits (when ``fix_len==True``).</doc>
<arguments>
<arg>digits=8</arg>
<arg>fix_len=True</arg>
</arguments>
<assign>
<var>${phone}</var>
</assign>
<msg timestamp="20210322 03:16:34.665" level="INFO">${phone} = 41891923</msg>
<status status="PASS" starttime="20210322 03:16:34.664" endtime="20210322 03:16:34.665"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>+55219${phone}</arg>
</arguments>
<assign>
<var>${phone_pix}</var>
</assign>
<msg timestamp="20210322 03:16:34.665" level="INFO">${phone_pix} = +5521941891923</msg>
<status status="PASS" starttime="20210322 03:16:34.665" endtime="20210322 03:16:34.665"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${phone_pix}</arg>
</arguments>
<msg timestamp="20210322 03:16:34.666" level="INFO">${phone_pix} = +5521941891923</msg>
<status status="PASS" starttime="20210322 03:16:34.666" endtime="20210322 03:16:34.666"></status>
</kw>
<kw name="Email" library="FakerLibrary">
<assign>
<var>${email_pix}</var>
</assign>
<msg timestamp="20210322 03:16:34.667" level="INFO">${email_pix} = oliveiralorenzo@caldeira.org</msg>
<status status="PASS" starttime="20210322 03:16:34.666" endtime="20210322 03:16:34.667"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${email_pix}</arg>
</arguments>
<msg timestamp="20210322 03:16:34.668" level="INFO">${email_pix} = oliveiralorenzo@caldeira.org</msg>
<status status="PASS" starttime="20210322 03:16:34.668" endtime="20210322 03:16:34.668"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${holder_type}' == 'business'</arg>
<arg>criar holder business ativo</arg>
<arg>ELSE IF</arg>
<arg>'${holder_type}' == 'individual'</arg>
<arg>criar holder individual ativo</arg>
</arguments>
<kw name="criar holder individual ativo" library="accreditation_create_holder_active">
<kw name="conectar accreditation" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accreditation</arg>
<arg>url=${accreditation_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 03:16:34.671" level="INFO">Creating Session using : alias=accreditation, url=https://banking-accreditation-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 03:16:34.671" endtime="20210322 03:16:34.671"></status>
</kw>
<status status="PASS" starttime="20210322 03:16:34.669" endtime="20210322 03:16:34.671"></status>
</kw>
<kw name="Cpf" library="FakerLibrary">
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 03:16:34.671" level="INFO">${national_registration} = 329.846.071-04</msg>
<status status="PASS" starttime="20210322 03:16:34.671" endtime="20210322 03:16:34.671"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${national_registration}</arg>
<arg>.</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 03:16:34.672" level="INFO">${national_registration} = 329846071-04</msg>
<status status="PASS" starttime="20210322 03:16:34.672" endtime="20210322 03:16:34.672"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${national_registration}</arg>
<arg>-</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 03:16:34.673" level="INFO">${national_registration} = 32984607104</msg>
<status status="PASS" starttime="20210322 03:16:34.672" endtime="20210322 03:16:34.673"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${national_registration}</arg>
</arguments>
<msg timestamp="20210322 03:16:34.673" level="INFO">${national_registration} = 32984607104</msg>
<status status="PASS" starttime="20210322 03:16:34.673" endtime="20210322 03:16:34.674"></status>
</kw>
<kw name="Rg" library="FakerLibrary">
<doc>Brazilian RG, return plain numbers.
Check:  https://www.ngmatematica.com/2014/02/como-determinar-o-digito-verificador-do.html</doc>
<assign>
<var>${identity_card}</var>
</assign>
<msg timestamp="20210322 03:16:34.674" level="INFO">${identity_card} = 46017583X</msg>
<status status="PASS" starttime="20210322 03:16:34.674" endtime="20210322 03:16:34.674"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${identity_card}</arg>
</arguments>
<msg timestamp="20210322 03:16:34.675" level="INFO">${identity_card} = 46017583X</msg>
<status status="PASS" starttime="20210322 03:16:34.674" endtime="20210322 03:16:34.675"></status>
</kw>
<kw name="criar holder individual" library="accreditation_post_holder_individual">
<arguments>
<arg>holder_type=individual</arg>
<arg>holder_name=${holder_name}</arg>
<arg>email=${email}</arg>
<arg>national_registration=${national_registration}</arg>
<arg>revenue=${revenue}</arg>
<arg>birthday=${birthday}</arg>
<arg>mothers_name=${mothers_name}</arg>
<arg>identity_card=${identity_card}</arg>
<arg>pep=false</arg>
<arg>cbo=${cbo}</arg>
</arguments>
<kw name="conectar accreditation" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accreditation</arg>
<arg>url=${accreditation_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 03:16:34.678" level="INFO">Creating Session using : alias=accreditation, url=https://banking-accreditation-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 03:16:34.677" endtime="20210322 03:16:34.678"></status>
</kw>
<status status="PASS" starttime="20210322 03:16:34.676" endtime="20210322 03:16:34.678"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_type}</arg>
</arguments>
<msg timestamp="20210322 03:16:34.679" level="INFO">${holder_type} = individual</msg>
<status status="PASS" starttime="20210322 03:16:34.679" endtime="20210322 03:16:34.679"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_name}</arg>
</arguments>
<msg timestamp="20210322 03:16:34.680" level="INFO">${holder_name} = Holder de teste</msg>
<status status="PASS" starttime="20210322 03:16:34.679" endtime="20210322 03:16:34.681"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:16:34.681" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 03:16:34.681" endtime="20210322 03:16:34.681"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "${holder_type}",</arg>
<arg>"name": "${holder_name}",</arg>
<arg>"email": "${email}",</arg>
<arg>"national_registration": "${national_registration}",</arg>
<arg>"revenue": ${revenue},</arg>
<arg>"birthday": "${birthday}",</arg>
<arg>"mothers_name": "${mothers_name}",</arg>
<arg>"identity_card": "${identity_card}",</arg>
<arg>"pep": false,</arg>
<arg>"cbo": ${cbo}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 03:16:34.682" level="INFO">${body} = { "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "32984607104", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "MÃ£e do Holder",...</msg>
<status status="PASS" starttime="20210322 03:16:34.682" endtime="20210322 03:16:34.682"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:16:34.683" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "32984607104", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "MÃ£e do Holder", "identity_card": "46017583X", "pep": false, "cbo": 821450 } 
json=None</msg>
<msg timestamp="20210322 03:16:35.377" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:16:34.682" endtime="20210322 03:16:35.378"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:16:35.380" level="INFO">{'id': '5caa3cf897624433b0941e70e5e497a2', 'name': 'Holder de teste', 'revenue': 5500.0, 'email': 'teste@teste.com.br', 'status': 'waiting_info_and_documents', 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'marketplace_name': 'Marketplace de Teste', 'created_at': '2021-03-22T03:16:36.204224', 'updated_at': '2021-03-22T03:16:36.204226', 'type': 'individual', 'national_registration': '32984607104', 'birthday': '1988-04-23', 'mothers_name': 'MÃ£e do Holder', 'identity_card': '46017583X', 'pep': False, 'cbo': '821450', '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/5caa3cf897624433b0941e70e5e497a2', 'type': 'GET'}, 'phones': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/5caa3cf897624433b0941e70e5e497a2/phones', 'type': 'GET'}, 'addresses': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/5caa3cf897624433b0941e70e5e497a2/addresses', 'type': 'GET'}, 'documents': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/5caa3cf897624433b0941e70e5e497a2/documents', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 03:16:35.379" endtime="20210322 03:16:35.381"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:16:35.383" level="INFO">2ffae2fb23d5baa1</msg>
<status status="PASS" starttime="20210322 03:16:35.382" endtime="20210322 03:16:35.383"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${body}</arg>
</arguments>
<msg timestamp="20210322 03:16:35.386" level="INFO">{ "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "32984607104", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "MÃ£e do Holder", "identity_card": "46017583X", "pep": false, "cbo": 821450 }</msg>
<status status="PASS" starttime="20210322 03:16:35.384" endtime="20210322 03:16:35.386"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:16:35.388" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:16:35.387" endtime="20210322 03:16:35.388"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${holder_external_key}</var>
</assign>
<msg timestamp="20210322 03:16:35.391" level="INFO">${holder_external_key} = 5caa3cf897624433b0941e70e5e497a2</msg>
<status status="PASS" starttime="20210322 03:16:35.389" endtime="20210322 03:16:35.391"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_external_key}</arg>
</arguments>
<msg timestamp="20210322 03:16:35.393" level="INFO">${holder_external_key} = 5caa3cf897624433b0941e70e5e497a2</msg>
<status status="PASS" starttime="20210322 03:16:35.392" endtime="20210322 03:16:35.393"></status>
</kw>
<status status="PASS" starttime="20210322 03:16:34.675" endtime="20210322 03:16:35.393"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_name}</arg>
</arguments>
<msg timestamp="20210322 03:16:35.395" level="INFO">${holder_name} = Holder de teste</msg>
<status status="PASS" starttime="20210322 03:16:35.394" endtime="20210322 03:16:35.395"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 03:16:35.396" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:16:35.395" endtime="20210322 03:16:35.396"></status>
</kw>
<kw name="criar holder phone" library="accreditation_post_holder_phone">
<arguments>
<arg>21</arg>
<arg>51</arg>
<arg>996221236</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:16:35.398" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 03:16:35.398" endtime="20210322 03:16:35.398"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"area_code": "${phone_area_code}",</arg>
<arg>"country_code": "${phone_country_code}",</arg>
<arg>"number": "${phone_number}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 03:16:35.399" level="INFO">${body} = { "area_code": "21", "country_code": "51", "number": "996221236" }</msg>
<status status="PASS" starttime="20210322 03:16:35.399" endtime="20210322 03:16:35.399"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/phones</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:16:35.401" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/5caa3cf897624433b0941e70e5e497a2/phones, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "area_code": "21", "country_code": "51", "number": "996221236" } 
json=None</msg>
<msg timestamp="20210322 03:16:35.650" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:16:35.400" endtime="20210322 03:16:35.650"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:16:35.652" level="INFO">{'id': '5416bc60a40248b7a55c21dab491b74d', 'area_code': '21', 'country_code': '51', 'number': '996221236', 'main': True, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/5caa3cf897624433b0941e70e5e497a2/phones/5416bc60a40248b7a55c21dab491b74d', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/5caa3cf897624433b0941e70e5e497a2', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 03:16:35.651" endtime="20210322 03:16:35.653"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:16:35.655" level="INFO">64f0fe8fdb47283e</msg>
<status status="PASS" starttime="20210322 03:16:35.653" endtime="20210322 03:16:35.655"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:16:35.657" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:16:35.656" endtime="20210322 03:16:35.657"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${phone_external_key}</var>
</assign>
<msg timestamp="20210322 03:16:35.660" level="INFO">${phone_external_key} = 5416bc60a40248b7a55c21dab491b74d</msg>
<status status="PASS" starttime="20210322 03:16:35.658" endtime="20210322 03:16:35.660"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${phone_external_key}</arg>
</arguments>
<msg timestamp="20210322 03:16:35.662" level="INFO">${phone_external_key} = 5416bc60a40248b7a55c21dab491b74d</msg>
<status status="PASS" starttime="20210322 03:16:35.661" endtime="20210322 03:16:35.663"></status>
</kw>
<status status="PASS" starttime="20210322 03:16:35.397" endtime="20210322 03:16:35.663"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 03:16:35.665" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:16:35.664" endtime="20210322 03:16:35.666"></status>
</kw>
<kw name="criar holder address" library="accreditation_post_holder_address">
<arguments>
<arg>Rio de Janeiro</arg>
<arg>Rio de Janeiro</arg>
<arg>Brasil</arg>
<arg>Bairro de Testes</arg>
<arg>Rua de Testes</arg>
<arg>90</arg>
<arg>apto 200</arg>
<arg>21550987</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:16:35.669" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 03:16:35.669" endtime="20210322 03:16:35.669"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"city": "${city}",</arg>
<arg>"state": "${state}",</arg>
<arg>"country": "${country}",</arg>
<arg>"neighborhood": "${neighborhood}",</arg>
<arg>"street": "${street}",</arg>
<arg>"number": "${number}",</arg>
<arg>"complement": "${complement}",</arg>
<arg>"postal_code": "${postal_code}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 03:16:35.671" level="INFO">${body} = { "city": "Rio de Janeiro", "state": "Rio de Janeiro", "country": "Brasil", "neighborhood": "Bairro de Testes", "street": "Rua de Testes", "number": "90", "complement": "apto 200", "postal_code": "215...</msg>
<status status="PASS" starttime="20210322 03:16:35.670" endtime="20210322 03:16:35.672"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/addresses</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:16:35.673" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/5caa3cf897624433b0941e70e5e497a2/addresses, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "city": "Rio de Janeiro", "state": "Rio de Janeiro", "country": "Brasil", "neighborhood": "Bairro de Testes", "street": "Rua de Testes", "number": "90", "complement": "apto 200", "postal_code": "21550987" } 
json=None</msg>
<msg timestamp="20210322 03:16:35.895" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:16:35.672" endtime="20210322 03:16:35.895"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:16:35.898" level="INFO">{'id': 'a3ddfc0ee761445c81da7892462a8f9e', 'street': 'Rua de Testes', 'number': '90', 'city': 'Rio de Janeiro', 'complement': 'apto 200', 'state': 'Rio de Janeiro', 'neighborhood': 'Bairro de Testes', 'postal_code': '21550987', 'country': 'Brasil', 'main': True, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/5caa3cf897624433b0941e70e5e497a2/addresses/a3ddfc0ee761445c81da7892462a8f9e', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/5caa3cf897624433b0941e70e5e497a2', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 03:16:35.896" endtime="20210322 03:16:35.898"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:16:35.900" level="INFO">a9e2b1e174dd51e9</msg>
<status status="PASS" starttime="20210322 03:16:35.899" endtime="20210322 03:16:35.901"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:16:35.903" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:16:35.902" endtime="20210322 03:16:35.903"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${address_external_key}</var>
</assign>
<msg timestamp="20210322 03:16:35.905" level="INFO">${address_external_key} = a3ddfc0ee761445c81da7892462a8f9e</msg>
<status status="PASS" starttime="20210322 03:16:35.904" endtime="20210322 03:16:35.906"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${address_external_key}</arg>
</arguments>
<msg timestamp="20210322 03:16:35.907" level="INFO">${address_external_key} = a3ddfc0ee761445c81da7892462a8f9e</msg>
<status status="PASS" starttime="20210322 03:16:35.906" endtime="20210322 03:16:35.907"></status>
</kw>
<status status="PASS" starttime="20210322 03:16:35.666" endtime="20210322 03:16:35.907"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 03:16:35.908" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:16:35.908" endtime="20210322 03:16:35.909"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>SELFIE</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:16:35.911" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 03:16:35.910" endtime="20210322 03:16:35.911"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 03:16:35.912" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 03:16:35.914" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 03:16:35.911" endtime="20210322 03:16:35.915"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:16:35.916" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/5caa3cf897624433b0941e70e5e497a2/documents?type=SELFIE, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 03:16:36.217" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:16:35.915" endtime="20210322 03:16:36.217"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:16:36.218" level="INFO">{'id': '464f07b9b5f8430c94fb392dc2077fe3', 'document_type': 'selfie', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/5caa3cf897624433b0941e70e5e497a2/documents/464f07b9b5f8430c94fb392dc2077fe3', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/5caa3cf897624433b0941e70e5e497a2', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/5caa3cf897624433b0941e70e5e497a2/documents/464f07b9b5f8430c94fb392dc2077fe3/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 03:16:36.217" endtime="20210322 03:16:36.218"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:16:36.219" level="INFO">350d14c78869e696</msg>
<status status="PASS" starttime="20210322 03:16:36.218" endtime="20210322 03:16:36.219"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:16:36.220" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:16:36.219" endtime="20210322 03:16:36.220"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 03:16:36.221" level="INFO">${document_external_key} = 464f07b9b5f8430c94fb392dc2077fe3</msg>
<status status="PASS" starttime="20210322 03:16:36.220" endtime="20210322 03:16:36.221"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 03:16:36.222" level="INFO">${document_external_key} = 464f07b9b5f8430c94fb392dc2077fe3</msg>
<status status="PASS" starttime="20210322 03:16:36.221" endtime="20210322 03:16:36.222"></status>
</kw>
<status status="PASS" starttime="20210322 03:16:35.909" endtime="20210322 03:16:36.222"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 03:16:36.223" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:16:36.223" endtime="20210322 03:16:36.223"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>RG_FRENTE</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:16:36.225" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 03:16:36.224" endtime="20210322 03:16:36.225"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 03:16:36.225" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 03:16:36.227" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 03:16:36.225" endtime="20210322 03:16:36.227"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:16:36.229" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/5caa3cf897624433b0941e70e5e497a2/documents?type=RG_FRENTE, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 03:16:36.515" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:16:36.228" endtime="20210322 03:16:36.516"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:16:36.518" level="INFO">{'id': 'a2142460c76a40ec998638b2debddebe', 'document_type': 'rg_frente', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/5caa3cf897624433b0941e70e5e497a2/documents/a2142460c76a40ec998638b2debddebe', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/5caa3cf897624433b0941e70e5e497a2', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/5caa3cf897624433b0941e70e5e497a2/documents/a2142460c76a40ec998638b2debddebe/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 03:16:36.517" endtime="20210322 03:16:36.518"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:16:36.521" level="INFO">084b9f95de68c139</msg>
<status status="PASS" starttime="20210322 03:16:36.519" endtime="20210322 03:16:36.521"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:16:36.523" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:16:36.522" endtime="20210322 03:16:36.523"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 03:16:36.526" level="INFO">${document_external_key} = a2142460c76a40ec998638b2debddebe</msg>
<status status="PASS" starttime="20210322 03:16:36.524" endtime="20210322 03:16:36.527"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 03:16:36.529" level="INFO">${document_external_key} = a2142460c76a40ec998638b2debddebe</msg>
<status status="PASS" starttime="20210322 03:16:36.527" endtime="20210322 03:16:36.529"></status>
</kw>
<status status="PASS" starttime="20210322 03:16:36.224" endtime="20210322 03:16:36.529"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 03:16:36.531" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:16:36.530" endtime="20210322 03:16:36.532"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>RG_VERSO</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:16:36.534" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 03:16:36.533" endtime="20210322 03:16:36.534"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 03:16:36.535" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 03:16:36.538" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 03:16:36.534" endtime="20210322 03:16:36.538"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:16:36.540" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/5caa3cf897624433b0941e70e5e497a2/documents?type=RG_VERSO, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 03:16:36.800" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:16:36.539" endtime="20210322 03:16:36.801"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:16:36.803" level="INFO">{'id': '6979f4bab82044c7a0a3f033547ce455', 'document_type': 'rg_verso', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/5caa3cf897624433b0941e70e5e497a2/documents/6979f4bab82044c7a0a3f033547ce455', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/5caa3cf897624433b0941e70e5e497a2', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/5caa3cf897624433b0941e70e5e497a2/documents/6979f4bab82044c7a0a3f033547ce455/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 03:16:36.802" endtime="20210322 03:16:36.805"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:16:36.806" level="INFO">4c4ede97433d3b1a</msg>
<status status="PASS" starttime="20210322 03:16:36.805" endtime="20210322 03:16:36.806"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:16:36.808" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:16:36.808" endtime="20210322 03:16:36.808"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 03:16:36.810" level="INFO">${document_external_key} = 6979f4bab82044c7a0a3f033547ce455</msg>
<status status="PASS" starttime="20210322 03:16:36.810" endtime="20210322 03:16:36.810"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 03:16:36.812" level="INFO">${document_external_key} = 6979f4bab82044c7a0a3f033547ce455</msg>
<status status="PASS" starttime="20210322 03:16:36.811" endtime="20210322 03:16:36.812"></status>
</kw>
<status status="PASS" starttime="20210322 03:16:36.532" endtime="20210322 03:16:36.812"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 03:16:36.813" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:16:36.813" endtime="20210322 03:16:36.813"></status>
</kw>
<kw name="solicitar aprovaÃ§Ã£o do holder" library="accreditation_request_approval">
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:16:36.815" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 03:16:36.815" endtime="20210322 03:16:36.815"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/approval</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:16:36.816" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/5caa3cf897624433b0941e70e5e497a2/approval, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data=None 
json=None</msg>
<msg timestamp="20210322 03:16:37.084" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:16:36.816" endtime="20210322 03:16:37.084"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:16:37.087" level="INFO">{'message': 'Approval request accepted successfully. Processing analysis'}</msg>
<status status="PASS" starttime="20210322 03:16:37.085" endtime="20210322 03:16:37.087"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:16:37.090" level="INFO">3d4f69bfaf5e05c0</msg>
<status status="PASS" starttime="20210322 03:16:37.088" endtime="20210322 03:16:37.090"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:16:37.092" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:16:37.091" endtime="20210322 03:16:37.092"></status>
</kw>
<status status="PASS" starttime="20210322 03:16:36.814" endtime="20210322 03:16:37.093"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 03:16:37.095" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:16:37.094" endtime="20210322 03:16:37.095"></status>
</kw>
<kw name="recebendo notificaÃ§Ã£o de aprovaÃ§Ã£o" library="accreditation_risk_notification">
<kw name="Uuid 4" library="FakerLibrary">
<doc>Generates a random UUID4 string.
:param cast_to: Specify what type the UUID should be cast to. Default is `str`
:type cast_to: callable</doc>
<assign>
<var>${assessment_id}</var>
</assign>
<msg timestamp="20210322 03:16:37.097" level="INFO">${assessment_id} = 5202ef29-0502-4062-a013-bd3f4c1e2b86</msg>
<status status="PASS" starttime="20210322 03:16:37.096" endtime="20210322 03:16:37.097"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>year</arg>
</arguments>
<assign>
<var>${year}</var>
</assign>
<msg timestamp="20210322 03:16:37.098" level="INFO">${year} = 2021</msg>
<status status="PASS" starttime="20210322 03:16:37.098" endtime="20210322 03:16:37.098"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>month</arg>
</arguments>
<assign>
<var>${month}</var>
</assign>
<msg timestamp="20210322 03:16:37.099" level="INFO">${month} = 03</msg>
<status status="PASS" starttime="20210322 03:16:37.099" endtime="20210322 03:16:37.099"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>day</arg>
</arguments>
<assign>
<var>${day}</var>
</assign>
<msg timestamp="20210322 03:16:37.101" level="INFO">${day} = 22</msg>
<status status="PASS" starttime="20210322 03:16:37.100" endtime="20210322 03:16:37.101"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:16:37.102" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 03:16:37.101" endtime="20210322 03:16:37.102"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "risk.assessment.result",</arg>
<arg>"resource": "business.holder",</arg>
<arg>"created_at": "${year}-${month}-${day} 15:28:56.747Z",</arg>
<arg>"marketplace_id": "${marketplace_external_key}",</arg>
<arg>"object": {</arg>
<arg>"result": "APPROVED",</arg>
<arg>"holder_id": "${holder_external_key}",</arg>
<arg>"applicant_id": "${application_external_key}",</arg>
<arg>"assessment_id": "${assessment_id}"</arg>
<arg>}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 03:16:37.104" level="INFO">${body} = { "type": "risk.assessment.result", "resource": "business.holder", "created_at": "2021-03-22 15:28:56.747Z", "marketplace_id": "f71a8951368a4cc085cf7875ff44e61c", "object": { "result": "APPROVED", "ho...</msg>
<status status="PASS" starttime="20210322 03:16:37.103" endtime="20210322 03:16:37.104"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/admin/internal_operation/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/registration/approval</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:16:37.105" level="INFO">POST Request using : uri=/admin/internal_operation/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/5caa3cf897624433b0941e70e5e497a2/registration/approval, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "risk.assessment.result", "resource": "business.holder", "created_at": "2021-03-22 15:28:56.747Z", "marketplace_id": "f71a8951368a4cc085cf7875ff44e61c", "object": { "result": "APPROVED", "holder_id": "5caa3cf897624433b0941e70e5e497a2", "applicant_id": "bcc25a6751c14b52af1340d40dba78c5", "assessment_id": "5202ef29-0502-4062-a013-bd3f4c1e2b86" } } 
json=None</msg>
<msg timestamp="20210322 03:16:37.319" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:16:37.104" endtime="20210322 03:16:37.319"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:16:37.321" level="INFO">{'message': 'Holder approved successfully'}</msg>
<status status="PASS" starttime="20210322 03:16:37.320" endtime="20210322 03:16:37.321"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:16:37.323" level="INFO">10d313882178d1c9</msg>
<status status="PASS" starttime="20210322 03:16:37.322" endtime="20210322 03:16:37.324"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:16:37.326" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:16:37.325" endtime="20210322 03:16:37.326"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 03:16:37.328" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:16:37.327" endtime="20210322 03:16:37.328"></status>
</kw>
<status status="PASS" starttime="20210322 03:16:37.095" endtime="20210322 03:16:37.329"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 03:16:37.331" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:16:37.330" endtime="20210322 03:16:37.331"></status>
</kw>
<kw name="buscar account por holder" library="accounts_get_accounts_by_holder">
<kw name="conectar accounts" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accounts</arg>
<arg>url=${account_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 03:16:37.334" level="INFO">Creating Session using : alias=accounts, url=https://banking-accounts-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 03:16:37.334" endtime="20210322 03:16:37.335"></status>
</kw>
<status status="PASS" starttime="20210322 03:16:37.333" endtime="20210322 03:16:37.335"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accounts</arg>
<arg>/marketplaces/${marketplace_external_key}/holders/${holder_external_key}/accounts</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:16:37.337" level="INFO">GET Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/holders/5caa3cf897624433b0941e70e5e497a2/accounts, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 03:16:37.952" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:16:37.336" endtime="20210322 03:16:37.953"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:16:37.956" level="INFO">{'items': [{'id': '62aec15c61e544ccbae3154ed53bbc71', 'holder': '5caa3cf897624433b0941e70e5e497a2', 'balance': '0.00', 'currency': 'BRL', 'routing_number': '001', 'number': '8895136796', 'status': 'active', 'metadata': {}, 'created_at': '2021-03-22T06:16:38.158586', 'updated_at': '2021-03-22T06:16:38.158586', 'primary': True, 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'uri': '/v2/marketplaces/f71a8951368a4cc085cf7875ff44e61c/accounts/62aec15c61e544ccbae3154ed53bbc71', 'resource': 'payment_account'}], 'has_more': False, 'limit': 100, 'total_pages': 1, 'page': 1, 'offset': 0, 'total': '1', 'query_count': '1'}</msg>
<status status="PASS" starttime="20210322 03:16:37.953" endtime="20210322 03:16:37.956"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:16:37.957" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:16:37.956" endtime="20210322 03:16:37.957"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["id"]}</arg>
</arguments>
<assign>
<var>${account_external_key}</var>
</assign>
<msg timestamp="20210322 03:16:37.960" level="INFO">${account_external_key} = 62aec15c61e544ccbae3154ed53bbc71</msg>
<status status="PASS" starttime="20210322 03:16:37.958" endtime="20210322 03:16:37.960"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_external_key}</arg>
</arguments>
<msg timestamp="20210322 03:16:37.962" level="INFO">${account_external_key} = 62aec15c61e544ccbae3154ed53bbc71</msg>
<status status="PASS" starttime="20210322 03:16:37.961" endtime="20210322 03:16:37.963"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["number"]}</arg>
</arguments>
<assign>
<var>${account_number}</var>
</assign>
<msg timestamp="20210322 03:16:37.965" level="INFO">${account_number} = 8895136796</msg>
<status status="PASS" starttime="20210322 03:16:37.964" endtime="20210322 03:16:37.965"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_number}</arg>
</arguments>
<msg timestamp="20210322 03:16:37.966" level="INFO">${account_number} = 8895136796</msg>
<status status="PASS" starttime="20210322 03:16:37.965" endtime="20210322 03:16:37.966"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["routing_number"]}</arg>
</arguments>
<assign>
<var>${account_routing_number}</var>
</assign>
<msg timestamp="20210322 03:16:37.968" level="INFO">${account_routing_number} = 001</msg>
<status status="PASS" starttime="20210322 03:16:37.967" endtime="20210322 03:16:37.968"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_routing_number}</arg>
</arguments>
<msg timestamp="20210322 03:16:37.969" level="INFO">${account_routing_number} = 001</msg>
<status status="PASS" starttime="20210322 03:16:37.968" endtime="20210322 03:16:37.969"></status>
</kw>
<status status="PASS" starttime="20210322 03:16:37.332" endtime="20210322 03:16:37.969"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 03:16:37.970" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:16:37.970" endtime="20210322 03:16:37.970"></status>
</kw>
<status status="PASS" starttime="20210322 03:16:34.669" endtime="20210322 03:16:37.971"></status>
</kw>
<status status="PASS" starttime="20210322 03:16:34.668" endtime="20210322 03:16:37.971"></status>
</kw>
<kw name="gerar saldo para account" library="account_generate_balance">
<arguments>
<arg>${account_external_key}</arg>
</arguments>
<kw name="conectar accounts" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accounts</arg>
<arg>url=${account_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 03:16:37.974" level="INFO">Creating Session using : alias=accounts, url=https://banking-accounts-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 03:16:37.973" endtime="20210322 03:16:37.974"></status>
</kw>
<status status="PASS" starttime="20210322 03:16:37.972" endtime="20210322 03:16:37.974"></status>
</kw>
<kw name="Uuid 4" library="FakerLibrary">
<doc>Generates a random UUID4 string.
:param cast_to: Specify what type the UUID should be cast to. Default is `str`
:type cast_to: callable</doc>
<assign>
<var>${uuid}</var>
</assign>
<msg timestamp="20210322 03:16:37.975" level="INFO">${uuid} = d4f81fbd-7f54-477e-8ddb-f4293bfc884c</msg>
<status status="PASS" starttime="20210322 03:16:37.975" endtime="20210322 03:16:37.975"></status>
</kw>
<kw name="conectar accounts" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accounts</arg>
<arg>url=${account_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 03:16:37.977" level="INFO">Creating Session using : alias=accounts, url=https://banking-accounts-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 03:16:37.976" endtime="20210322 03:16:37.978"></status>
</kw>
<status status="PASS" starttime="20210322 03:16:37.976" endtime="20210322 03:16:37.978"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:16:37.978" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 03:16:37.978" endtime="20210322 03:16:37.979"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"operations": [</arg>
<arg>{</arg>
<arg>"amount": 9000000000000,</arg>
<arg>"authorization_code": "${uuid}",</arg>
<arg>"transaction_id": "${uuid}",</arg>
<arg>"id": "${uuid}",</arg>
<arg>"id_checking_account": "${account_external_key}",</arg>
<arg>"transfer_date": "2020-02-20T20:58:06.510Z",</arg>
<arg>"fee": 0,</arg>
<arg>"description": "Teste",</arg>
<arg>"object_type": "transfer",</arg>
<arg>"object_id": "${uuid}",</arg>
<arg>"dflag": "ACTIVE",</arg>
<arg>"created_at": "2019-10-14T20:58:06.510Z",</arg>
<arg>"type": "Transfer"</arg>
<arg>}</arg>
<arg>],</arg>
<arg>"reference_id": "Criando saldo na account"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 03:16:37.980" level="INFO">${body} = { "operations": [ { "amount": 9000000000000, "authorization_code": "d4f81fbd-7f54-477e-8ddb-f4293bfc884c", "transaction_id": "d4f81fbd-7f54-477e-8ddb-f4293bfc884c", "id": "d4f81fbd-7f54-477e-8ddb-f429...</msg>
<status status="PASS" starttime="20210322 03:16:37.979" endtime="20210322 03:16:37.980"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accounts</arg>
<arg>/admin/internal_operation/authorization/${uuid}</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:16:37.981" level="INFO">POST Request using : uri=/admin/internal_operation/authorization/d4f81fbd-7f54-477e-8ddb-f4293bfc884c, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "operations": [ { "amount": 9000000000000, "authorization_code": "d4f81fbd-7f54-477e-8ddb-f4293bfc884c", "transaction_id": "d4f81fbd-7f54-477e-8ddb-f4293bfc884c", "id": "d4f81fbd-7f54-477e-8ddb-f4293bfc884c", "id_checking_account": "62aec15c61e544ccbae3154ed53bbc71", "transfer_date": "2020-02-20T20:58:06.510Z", "fee": 0, "description": "Teste", "object_type": "transfer", "object_id": "d4f81fbd-7f54-477e-8ddb-f4293bfc884c", "dflag": "ACTIVE", "created_at": "2019-10-14T20:58:06.510Z", "type": "Transfer" } ], "reference_id": "Criando saldo na account" } 
json=None</msg>
<msg timestamp="20210322 03:16:38.662" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:16:37.980" endtime="20210322 03:16:38.662"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.status_code}' == 200</arg>
<arg>Log</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:16:38.664" endtime="20210322 03:16:38.665"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.status_code}' == 200</arg>
<arg>Log</arg>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:16:38.666" endtime="20210322 03:16:38.667"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.status_code}' == 200</arg>
<arg>Log</arg>
<arg>${response.status_code}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:16:38.668" endtime="20210322 03:16:38.669"></status>
</kw>
<status status="PASS" starttime="20210322 03:16:37.971" endtime="20210322 03:16:38.669"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${pix_type}' == 'phone'</arg>
<arg>criar chave pix</arg>
<arg>${pix_type}</arg>
<arg>${phone_pix}</arg>
<arg>ELSE IF</arg>
<arg>'${pix_type}' == 'email'</arg>
<arg>criar chave pix</arg>
<arg>${pix_type}</arg>
<arg>${email_pix}</arg>
<arg>ELSE IF</arg>
<arg>'${pix_type}' == 'evp'</arg>
<arg>criar chave pix</arg>
<arg>${pix_type}</arg>
<arg>${EMPTY}</arg>
<arg>ELSE IF</arg>
<arg>'${pix_type}' == 'national_registration'</arg>
<arg>criar chave pix</arg>
<arg>${pix_type}</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw name="criar chave pix" library="pix_dict_create_entry">
<arguments>
<arg>${pix_type}</arg>
<arg>${email_pix}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 03:16:38.674" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 03:16:38.673" endtime="20210322 03:16:38.674"></status>
</kw>
<status status="PASS" starttime="20210322 03:16:38.672" endtime="20210322 03:16:38.674"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${type}</arg>
</arguments>
<msg timestamp="20210322 03:16:38.676" level="INFO">${type} = email</msg>
<status status="PASS" starttime="20210322 03:16:38.676" endtime="20210322 03:16:38.676"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210322 03:16:38.677" level="INFO">${value} = oliveiralorenzo@caldeira.org</msg>
<status status="PASS" starttime="20210322 03:16:38.677" endtime="20210322 03:16:38.677"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:16:38.678" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 03:16:38.678" endtime="20210322 03:16:38.678"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "${type}",</arg>
<arg>"value": "${value}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 03:16:38.680" level="INFO">${body} = { "type": "email", "value": "oliveiralorenzo@caldeira.org" }</msg>
<status status="PASS" starttime="20210322 03:16:38.679" endtime="20210322 03:16:38.680"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:16:38.680" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/5caa3cf897624433b0941e70e5e497a2/accounts/62aec15c61e544ccbae3154ed53bbc71/entries, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "email", "value": "oliveiralorenzo@caldeira.org" } 
json=None</msg>
<msg timestamp="20210322 03:16:39.353" level="INFO">${response} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20210322 03:16:38.680" endtime="20210322 03:16:39.353"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:16:39.355" level="INFO">{'id': 'd5a3f98e88f246cf93c0674a8b637cd0', 'status': 'waiting_ownership_verification', 'created_at': '2021-03-22T03:16:40.210', 'updated_at': '2021-03-22T03:16:40.210', 'key': {'value': 'oliveiralorenzo@caldeira.org', 'type': 'email'}, 'account': {'id': '62aec15c61e544ccbae3154ed53bbc71', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': '5caa3cf897624433b0941e70e5e497a2', 'owner': {'name': 'Holder de teste', 'national_registration': '32984607104', 'type': 'individual'}, 'routing_number': '001', 'number': '8895136796', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}, 'resource': 'pix.entry'}</msg>
<status status="PASS" starttime="20210322 03:16:39.354" endtime="20210322 03:16:39.355"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:16:39.357" level="INFO">c58ce43fd58a327e</msg>
<status status="PASS" starttime="20210322 03:16:39.356" endtime="20210322 03:16:39.358"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 03:16:39.360" level="INFO">202</msg>
<status status="PASS" starttime="20210322 03:16:39.359" endtime="20210322 03:16:39.360"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:16:39.362" level="INFO">${response} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20210322 03:16:39.361" endtime="20210322 03:16:39.362"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${entry_external_key}</var>
</assign>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:16:39.365" endtime="20210322 03:16:39.366"></status>
</kw>
<msg timestamp="20210322 03:16:39.366" level="INFO">${entry_external_key} = d5a3f98e88f246cf93c0674a8b637cd0</msg>
<status status="PASS" starttime="20210322 03:16:39.363" endtime="20210322 03:16:39.366"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${entry_external_key}</arg>
</arguments>
<msg timestamp="20210322 03:16:39.367" level="INFO">${entry_external_key} = d5a3f98e88f246cf93c0674a8b637cd0</msg>
<status status="PASS" starttime="20210322 03:16:39.367" endtime="20210322 03:16:39.368"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["key"]["value"]}</arg>
</arguments>
<assign>
<var>${entry_key_value}</var>
</assign>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["key"]["value"]}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:16:39.369" endtime="20210322 03:16:39.370"></status>
</kw>
<msg timestamp="20210322 03:16:39.371" level="INFO">${entry_key_value} = oliveiralorenzo@caldeira.org</msg>
<status status="PASS" starttime="20210322 03:16:39.368" endtime="20210322 03:16:39.371"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${entry_key_value}</arg>
</arguments>
<msg timestamp="20210322 03:16:39.372" level="INFO">${entry_key_value} = oliveiralorenzo@caldeira.org</msg>
<status status="PASS" starttime="20210322 03:16:39.371" endtime="20210322 03:16:39.372"></status>
</kw>
<status status="PASS" starttime="20210322 03:16:38.671" endtime="20210322 03:16:39.372"></status>
</kw>
<status status="PASS" starttime="20210322 03:16:38.669" endtime="20210322 03:16:39.373"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${pix_type}' == 'phone'</arg>
<arg>buscar verification code</arg>
<arg>${holder_external_key}</arg>
<arg>${account_external_key}</arg>
<arg>${entry_external_key}</arg>
<arg>ELSE IF</arg>
<arg>'${pix_type}' == 'email'</arg>
<arg>buscar verification code</arg>
<arg>${holder_external_key}</arg>
<arg>${account_external_key}</arg>
<arg>${entry_external_key}</arg>
</arguments>
<kw name="buscar verification code" library="pix_dict_verification_code">
<arguments>
<arg>${holder_external_key}</arg>
<arg>${account_external_key}</arg>
<arg>${entry_external_key}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 03:16:39.376" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 03:16:39.376" endtime="20210322 03:16:39.377"></status>
</kw>
<status status="PASS" starttime="20210322 03:16:39.375" endtime="20210322 03:16:39.377"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/admin/internal_operation/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries/${entry_external_key}/code</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:16:39.378" level="INFO">GET Request using : uri=/admin/internal_operation/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/5caa3cf897624433b0941e70e5e497a2/accounts/62aec15c61e544ccbae3154ed53bbc71/entries/d5a3f98e88f246cf93c0674a8b637cd0/code, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 03:16:40.044" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:16:39.377" endtime="20210322 03:16:40.044"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:16:40.046" level="INFO">{'code': '2546'}</msg>
<status status="PASS" starttime="20210322 03:16:40.045" endtime="20210322 03:16:40.046"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:16:40.048" level="INFO">f7315139829e8f48</msg>
<status status="PASS" starttime="20210322 03:16:40.047" endtime="20210322 03:16:40.049"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 03:16:40.050" level="INFO">200</msg>
<status status="PASS" starttime="20210322 03:16:40.049" endtime="20210322 03:16:40.051"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:16:40.053" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:16:40.052" endtime="20210322 03:16:40.053"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["code"]}</arg>
</arguments>
<assign>
<var>${verification_code}</var>
</assign>
<msg timestamp="20210322 03:16:40.056" level="INFO">${verification_code} = 2546</msg>
<status status="PASS" starttime="20210322 03:16:40.054" endtime="20210322 03:16:40.056"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${verification_code}</arg>
</arguments>
<msg timestamp="20210322 03:16:40.058" level="INFO">${verification_code} = 2546</msg>
<status status="PASS" starttime="20210322 03:16:40.057" endtime="20210322 03:16:40.058"></status>
</kw>
<status status="PASS" starttime="20210322 03:16:39.374" endtime="20210322 03:16:40.058"></status>
</kw>
<status status="PASS" starttime="20210322 03:16:39.373" endtime="20210322 03:16:40.059"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${pix_type}' == 'phone'</arg>
<arg>confirmar propriedade da chave pix</arg>
<arg>${verification_code}</arg>
<arg>${holder_external_key}</arg>
<arg>${account_external_key}</arg>
<arg>${entry_external_key}</arg>
<arg>ELSE IF</arg>
<arg>'${pix_type}' == 'email'</arg>
<arg>confirmar propriedade da chave pix</arg>
<arg>${verification_code}</arg>
<arg>${holder_external_key}</arg>
<arg>${account_external_key}</arg>
<arg>${entry_external_key}</arg>
</arguments>
<kw name="confirmar propriedade da chave pix" library="pix_dict_confirm_propriety">
<arguments>
<arg>${verification_code}</arg>
<arg>${holder_external_key}</arg>
<arg>${account_external_key}</arg>
<arg>${entry_external_key}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 03:16:40.064" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 03:16:40.063" endtime="20210322 03:16:40.065"></status>
</kw>
<status status="PASS" starttime="20210322 03:16:40.062" endtime="20210322 03:16:40.065"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:16:40.067" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 03:16:40.066" endtime="20210322 03:16:40.067"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"code": "${verification_code}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 03:16:40.068" level="INFO">${body} = { "code": "2546" }</msg>
<status status="PASS" starttime="20210322 03:16:40.067" endtime="20210322 03:16:40.068"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries/${entry_external_key}/ownership</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:16:40.069" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/5caa3cf897624433b0941e70e5e497a2/accounts/62aec15c61e544ccbae3154ed53bbc71/entries/d5a3f98e88f246cf93c0674a8b637cd0/ownership, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "code": "2546" } 
json=None</msg>
<msg timestamp="20210322 03:16:41.803" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:16:40.068" endtime="20210322 03:16:41.803"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:16:41.805" level="INFO">{'id': 'd5a3f98e88f246cf93c0674a8b637cd0', 'status': 'active', 'created_at': '2021-03-22T03:16:40.210', 'updated_at': '2021-03-22T03:16:42.676', 'key': {'value': 'oliveiralorenzo@caldeira.org', 'type': 'email'}, 'account': {'id': '62aec15c61e544ccbae3154ed53bbc71', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': '5caa3cf897624433b0941e70e5e497a2', 'owner': {'name': 'Holder de teste', 'national_registration': '32984607104', 'type': 'individual'}, 'routing_number': '001', 'number': '8895136796', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}, 'resource': 'pix.entry'}</msg>
<status status="PASS" starttime="20210322 03:16:41.804" endtime="20210322 03:16:41.805"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:16:41.807" level="INFO">bdc4b0647f25dbac</msg>
<status status="PASS" starttime="20210322 03:16:41.806" endtime="20210322 03:16:41.808"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 03:16:41.810" level="INFO">201</msg>
<status status="PASS" starttime="20210322 03:16:41.809" endtime="20210322 03:16:41.810"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:16:41.812" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:16:41.811" endtime="20210322 03:16:41.812"></status>
</kw>
<status status="PASS" starttime="20210322 03:16:40.061" endtime="20210322 03:16:41.813"></status>
</kw>
<status status="PASS" starttime="20210322 03:16:40.059" endtime="20210322 03:16:41.813"></status>
</kw>
<kw name="validar ativaÃ§Ã£o da chave de endereÃ§amento" library="asserts">
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["status"]}</arg>
<arg>active</arg>
</arguments>
<status status="PASS" starttime="20210322 03:16:41.814" endtime="20210322 03:16:41.815"></status>
</kw>
<status status="PASS" starttime="20210322 03:16:41.813" endtime="20210322 03:16:41.815"></status>
</kw>
<status status="PASS" starttime="20210322 03:16:34.664" endtime="20210322 03:16:41.816"></status>
</kw>
<kw name="criar pagamento pix com dados completos" library="pix_payments_create_pix_payment">
<arguments>
<arg>amount=${amount}</arg>
<arg>creditor_account_number=${creditor_account_number}</arg>
<arg>creditor_routing_number=${creditor_routing_number}</arg>
<arg>creditor_account_type=${creditor_account_type}</arg>
<arg>creditor_name=${creditor_name}</arg>
<arg>creditor_national_registration=${creditor_national_registration}</arg>
<arg>creditor_psp=${creditor_psp}</arg>
<arg>pix_description=${pix_description}</arg>
</arguments>
<kw name="conectar pix-payments" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-payments</arg>
<arg>url=${pix_payments_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 03:16:41.820" level="INFO">Creating Session using : alias=pix-payments, url=https://banking-pix-payments-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 03:16:41.819" endtime="20210322 03:16:41.821"></status>
</kw>
<status status="PASS" starttime="20210322 03:16:41.818" endtime="20210322 03:16:41.821"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:16:41.822" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 03:16:41.821" endtime="20210322 03:16:41.822"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"amount": ${amount},</arg>
<arg>"creditor": {</arg>
<arg>"account": {</arg>
<arg>"number": "${creditor_account_number}",</arg>
<arg>"routing_number": "${creditor_routing_number}",</arg>
<arg>"type": "${creditor_account_type}"</arg>
<arg>},</arg>
<arg>"name": "${creditor_name}",</arg>
<arg>"national_registration": "${creditor_national_registration}",</arg>
<arg>"psp": "${creditor_psp}"</arg>
<arg>},</arg>
<arg>"description": "${pix_description}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 03:16:41.824" level="INFO">${body} = { "amount": 100, "creditor": { "account": { "number": "0243882974", "routing_number": "0500", "type": "cacc" }, "name": "Massa iti PF NauNNMO", "national_registration": "42808422644", "psp": "17192451...</msg>
<status status="PASS" starttime="20210322 03:16:41.822" endtime="20210322 03:16:41.824"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-payments</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/pix/holders/${holder_external_key}/accounts/${account_external_key}/payments</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:16:41.825" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/pix/holders/5caa3cf897624433b0941e70e5e497a2/accounts/62aec15c61e544ccbae3154ed53bbc71/payments, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "amount": 100, "creditor": { "account": { "number": "0243882974", "routing_number": "0500", "type": "cacc" }, "name": "Massa iti PF NauNNMO", "national_registration": "42808422644", "psp": "17192451" }, "description": "Envio de PIX" } 
json=None</msg>
<msg timestamp="20210322 03:16:42.497" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:16:41.824" endtime="20210322 03:16:42.497"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:16:42.498" level="INFO">{'id': '2f5063d755eb49cfaa32be977ff5c3a9', 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'status': 'pending', 'end_to_end_id': 'E194682422021032206164d14496d7da', 'message_id': 'M19468242b12296d11b1cd2836b6a0c7', 'amount': 100, 'created_at': '2021-03-22T03:16:43.342897', 'description': 'Envio de PIX', 'debtor': {'national_registration': '32984607104', 'name': 'Holder de teste', 'type': 'individual', 'holder_id': '5caa3cf897624433b0941e70e5e497a2', 'account': {'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}, 'digital_account_id': '62aec15c61e544ccbae3154ed53bbc71', 'number': '8895136796', 'routing_number': '0001', 'type': 'cacc'}}, 'creditor': {'national_registration': '42808422644', 'name': 'Massa iti PF NauNNMO', 'type': 'individual', 'account': {'psp': {'code': '17192451'}, 'number': '0243882974', 'routing_number': '0500', 'type': 'cacc'}}, 'refunded_amount': 0}</msg>
<status status="PASS" starttime="20210322 03:16:42.497" endtime="20210322 03:16:42.498"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:16:42.499" level="INFO">0f066f04cefb5e31</msg>
<status status="PASS" starttime="20210322 03:16:42.498" endtime="20210322 03:16:42.499"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 03:16:42.499" level="INFO">201</msg>
<status status="PASS" starttime="20210322 03:16:42.499" endtime="20210322 03:16:42.500"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:16:42.500" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:16:42.500" endtime="20210322 03:16:42.500"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${payment_external_key}</var>
</assign>
<msg timestamp="20210322 03:16:42.501" level="INFO">${payment_external_key} = 2f5063d755eb49cfaa32be977ff5c3a9</msg>
<status status="PASS" starttime="20210322 03:16:42.500" endtime="20210322 03:16:42.501"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${payment_external_key}</arg>
</arguments>
<msg timestamp="20210322 03:16:42.501" level="INFO">${payment_external_key} = 2f5063d755eb49cfaa32be977ff5c3a9</msg>
<status status="PASS" starttime="20210322 03:16:42.501" endtime="20210322 03:16:42.501"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["end_to_end_id"]}</arg>
</arguments>
<assign>
<var>${end_to_end_id}</var>
</assign>
<msg timestamp="20210322 03:16:42.502" level="INFO">${end_to_end_id} = E194682422021032206164d14496d7da</msg>
<status status="PASS" starttime="20210322 03:16:42.502" endtime="20210322 03:16:42.502"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${end_to_end_id}</arg>
</arguments>
<msg timestamp="20210322 03:16:42.503" level="INFO">${end_to_end_id} = E194682422021032206164d14496d7da</msg>
<status status="PASS" starttime="20210322 03:16:42.502" endtime="20210322 03:16:42.503"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["message_id"]}</arg>
</arguments>
<assign>
<var>${message_id}</var>
</assign>
<msg timestamp="20210322 03:16:42.503" level="INFO">${message_id} = M19468242b12296d11b1cd2836b6a0c7</msg>
<status status="PASS" starttime="20210322 03:16:42.503" endtime="20210322 03:16:42.503"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${message_id}</arg>
</arguments>
<msg timestamp="20210322 03:16:42.504" level="INFO">${message_id} = M19468242b12296d11b1cd2836b6a0c7</msg>
<status status="PASS" starttime="20210322 03:16:42.504" endtime="20210322 03:16:42.504"></status>
</kw>
<status status="PASS" starttime="20210322 03:16:41.816" endtime="20210322 03:16:42.504"></status>
</kw>
<kw name="validar pagamento pix" library="asserts">
<arguments>
<arg>marketplace_external_key=${marketplace_external_key}</arg>
<arg>status_pix_payments=pending</arg>
<arg>amount=${amount}</arg>
<arg>pix_description=${pix_description}</arg>
<arg>debitor_national_registration=${national_registration}</arg>
<arg>debitor_name=${holder_name}</arg>
<arg>debitor_type=${holder_type}</arg>
<arg>debitor_holder_id=${holder_external_key}</arg>
<arg>debtor_account_psp_code=${debtor_account_psp_code}</arg>
<arg>debtor_account_psp_name=${debtor_account_psp_name}</arg>
<arg>debtor_digital_account=${account_external_key}</arg>
<arg>debtor_account_number=${account_number}</arg>
<arg>debtor_account_routing_number=${account_routing_number}</arg>
<arg>debtor_account_type=${debtor_account_type}</arg>
<arg>creditor_national_registration=${creditor_national_registration}</arg>
<arg>creditor_name=${creditor_name}</arg>
<arg>creditor_type=individual</arg>
<arg>creditor_account_psp_code=${creditor_psp}</arg>
<arg>creditor_account_number=${creditor_account_number}</arg>
<arg>creditor_account_routing_number=${creditor_routing_number}</arg>
<arg>creditor_account_type=${creditor_account_type}</arg>
<arg>refunded_amount=0</arg>
</arguments>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<arguments>
<arg>result_format=datetime</arg>
</arguments>
<assign>
<var>${date}</var>
</assign>
<msg timestamp="20210322 03:16:42.507" level="INFO">${date} = 2021-03-22 03:16:42.506432</msg>
<status status="PASS" starttime="20210322 03:16:42.506" endtime="20210322 03:16:42.507"></status>
</kw>
<kw name="Convert Date" library="DateTime">
<doc>Converts between supported `date formats`.</doc>
<arguments>
<arg>${date}</arg>
<arg>exclude_millis=yes</arg>
<arg>result_format=%Y-%m-%d</arg>
<arg>date_format=%d-%m-%Y</arg>
</arguments>
<assign>
<var>${date}</var>
</assign>
<msg timestamp="20210322 03:16:42.507" level="INFO">${date} = 2021-03-22</msg>
<status status="PASS" starttime="20210322 03:16:42.507" endtime="20210322 03:16:42.507"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["marketplace_id"]}</arg>
<arg>${marketplace_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:16:42.508" endtime="20210322 03:16:42.508"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["status"]}</arg>
<arg>${status_pix_payments}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:16:42.508" endtime="20210322 03:16:42.509"></status>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${response.json()["end_to_end_id"]}</arg>
</arguments>
<msg timestamp="20210322 03:16:42.509" level="INFO">Length is 32</msg>
<status status="PASS" starttime="20210322 03:16:42.509" endtime="20210322 03:16:42.509"></status>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${response.json()["message_id"]}</arg>
</arguments>
<msg timestamp="20210322 03:16:42.511" level="INFO">Length is 32</msg>
<status status="PASS" starttime="20210322 03:16:42.510" endtime="20210322 03:16:42.511"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.json()["amount"]}</arg>
<arg>${amount}</arg>
</arguments>
<msg timestamp="20210322 03:16:42.511" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:16:42.511" endtime="20210322 03:16:42.511"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["description"]}</arg>
<arg>${pix_description}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:16:42.511" endtime="20210322 03:16:42.512"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["national_registration"]}</arg>
<arg>${debitor_national_registration}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:16:42.512" endtime="20210322 03:16:42.512"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["name"]}</arg>
<arg>${debitor_name}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:16:42.513" endtime="20210322 03:16:42.513"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["type"]}</arg>
<arg>${debitor_type}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:16:42.513" endtime="20210322 03:16:42.514"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["holder_id"]}</arg>
<arg>${debitor_holder_id}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:16:42.514" endtime="20210322 03:16:42.514"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["account"]["psp"]["code"]}</arg>
<arg>${debtor_account_psp_code}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:16:42.514" endtime="20210322 03:16:42.516"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["account"]["psp"]["name"]}</arg>
<arg>${debtor_account_psp_name}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:16:42.516" endtime="20210322 03:16:42.516"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["account"]["digital_account_id"]}</arg>
<arg>${debtor_digital_account}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:16:42.516" endtime="20210322 03:16:42.516"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["account"]["number"]}</arg>
<arg>${account_number}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:16:42.516" endtime="20210322 03:16:42.517"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["account"]["routing_number"]}</arg>
<arg>0${debtor_account_routing_number}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:16:42.517" endtime="20210322 03:16:42.517"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["account"]["type"]}</arg>
<arg>${debtor_account_type}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:16:42.517" endtime="20210322 03:16:42.518"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["creditor"]["national_registration"]}</arg>
<arg>${creditor_national_registration}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:16:42.518" endtime="20210322 03:16:42.518"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["creditor"]["name"]}</arg>
<arg>${creditor_name}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:16:42.519" endtime="20210322 03:16:42.519"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["creditor"]["type"]}</arg>
<arg>${creditor_type}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:16:42.519" endtime="20210322 03:16:42.519"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["creditor"]["account"]["psp"]["code"]}</arg>
<arg>${creditor_account_psp_code}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:16:42.520" endtime="20210322 03:16:42.520"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["creditor"]["account"]["number"]}</arg>
<arg>${creditor_account_number}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:16:42.520" endtime="20210322 03:16:42.521"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["creditor"]["account"]["routing_number"]}</arg>
<arg>${creditor_account_routing_number}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:16:42.521" endtime="20210322 03:16:42.521"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["creditor"]["account"]["type"]}</arg>
<arg>${creditor_account_type}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:16:42.521" endtime="20210322 03:16:42.522"></status>
</kw>
<status status="PASS" starttime="20210322 03:16:42.504" endtime="20210322 03:16:42.522"></status>
</kw>
<kw name="confirmar pagamento pix" library="pix_payments_confirm_pix_payment">
<arguments>
<arg>holder_external_key=${holder_external_key}</arg>
<arg>account_external_key=${account_external_key}</arg>
<arg>payment_external_key=${payment_external_key}</arg>
</arguments>
<kw name="conectar pix-payments" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-payments</arg>
<arg>url=${pix_payments_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 03:16:42.523" level="INFO">Creating Session using : alias=pix-payments, url=https://banking-pix-payments-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 03:16:42.523" endtime="20210322 03:16:42.523"></status>
</kw>
<status status="PASS" starttime="20210322 03:16:42.522" endtime="20210322 03:16:42.523"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:16:42.524" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 03:16:42.523" endtime="20210322 03:16:42.524"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-payments</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/pix/holders/${holder_external_key}/accounts/${account_external_key}/payments/${payment_external_key}/confirm</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:16:42.524" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/pix/holders/5caa3cf897624433b0941e70e5e497a2/accounts/62aec15c61e544ccbae3154ed53bbc71/payments/2f5063d755eb49cfaa32be977ff5c3a9/confirm, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data=None 
json=None</msg>
<msg timestamp="20210322 03:16:44.179" level="INFO">${response} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20210322 03:16:42.524" endtime="20210322 03:16:44.179"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:16:44.181" level="INFO">{'id': '2f5063d755eb49cfaa32be977ff5c3a9', 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'status': 'executed', 'end_to_end_id': 'E194682422021032206164d14496d7da', 'message_id': 'M19468242b12296d11b1cd2836b6a0c7', 'amount': 100, 'description': 'Envio de PIX', 'debtor': {'national_registration': '32984607104', 'name': 'Holder de teste', 'type': 'individual', 'holder_id': '5caa3cf897624433b0941e70e5e497a2', 'account': {'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}, 'digital_account_id': '62aec15c61e544ccbae3154ed53bbc71', 'number': '8895136796', 'routing_number': '0001', 'type': 'cacc'}}, 'creditor': {'national_registration': '42808422644', 'name': 'Massa iti PF NauNNMO', 'type': 'individual', 'account': {'psp': {'code': '17192451'}, 'number': '0243882974', 'routing_number': '0500', 'type': 'cacc'}}, 'resource': 'pix_transaction'}</msg>
<status status="PASS" starttime="20210322 03:16:44.179" endtime="20210322 03:16:44.181"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:16:44.183" level="INFO">cdc2d0cf4b32dba9</msg>
<status status="PASS" starttime="20210322 03:16:44.182" endtime="20210322 03:16:44.183"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 03:16:44.184" level="INFO">202</msg>
<status status="PASS" starttime="20210322 03:16:44.184" endtime="20210322 03:16:44.185"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:16:44.186" level="INFO">${response} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20210322 03:16:44.185" endtime="20210322 03:16:44.186"></status>
</kw>
<status status="PASS" starttime="20210322 03:16:42.522" endtime="20210322 03:16:44.187"></status>
</kw>
<kw name="validar pagamento pix" library="asserts">
<arguments>
<arg>marketplace_external_key=${marketplace_external_key}</arg>
<arg>status_pix_payments=executed</arg>
<arg>amount=${amount}</arg>
<arg>pix_description=${pix_description}</arg>
<arg>debitor_national_registration=${national_registration}</arg>
<arg>debitor_name=${holder_name}</arg>
<arg>debitor_type=${holder_type}</arg>
<arg>debitor_holder_id=${holder_external_key}</arg>
<arg>debtor_account_psp_code=${debtor_account_psp_code}</arg>
<arg>debtor_account_psp_name=${debtor_account_psp_name}</arg>
<arg>debtor_digital_account=${account_external_key}</arg>
<arg>debtor_account_number=${account_number}</arg>
<arg>debtor_account_routing_number=${account_routing_number}</arg>
<arg>debtor_account_type=${debtor_account_type}</arg>
<arg>creditor_national_registration=${creditor_national_registration}</arg>
<arg>creditor_name=${creditor_name}</arg>
<arg>creditor_type=individual</arg>
<arg>creditor_account_psp_code=${creditor_psp}</arg>
<arg>creditor_account_number=${creditor_account_number}</arg>
<arg>creditor_account_routing_number=${creditor_routing_number}</arg>
<arg>creditor_account_type=${creditor_account_type}</arg>
<arg>refunded_amount=0</arg>
</arguments>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<arguments>
<arg>result_format=datetime</arg>
</arguments>
<assign>
<var>${date}</var>
</assign>
<msg timestamp="20210322 03:16:44.193" level="INFO">${date} = 2021-03-22 03:16:44.191701</msg>
<status status="PASS" starttime="20210322 03:16:44.192" endtime="20210322 03:16:44.193"></status>
</kw>
<kw name="Convert Date" library="DateTime">
<doc>Converts between supported `date formats`.</doc>
<arguments>
<arg>${date}</arg>
<arg>exclude_millis=yes</arg>
<arg>result_format=%Y-%m-%d</arg>
<arg>date_format=%d-%m-%Y</arg>
</arguments>
<assign>
<var>${date}</var>
</assign>
<msg timestamp="20210322 03:16:44.194" level="INFO">${date} = 2021-03-22</msg>
<status status="PASS" starttime="20210322 03:16:44.193" endtime="20210322 03:16:44.194"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["marketplace_id"]}</arg>
<arg>${marketplace_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:16:44.195" endtime="20210322 03:16:44.196"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["status"]}</arg>
<arg>${status_pix_payments}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:16:44.196" endtime="20210322 03:16:44.196"></status>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${response.json()["end_to_end_id"]}</arg>
</arguments>
<msg timestamp="20210322 03:16:44.198" level="INFO">Length is 32</msg>
<status status="PASS" starttime="20210322 03:16:44.198" endtime="20210322 03:16:44.199"></status>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${response.json()["message_id"]}</arg>
</arguments>
<msg timestamp="20210322 03:16:44.200" level="INFO">Length is 32</msg>
<status status="PASS" starttime="20210322 03:16:44.199" endtime="20210322 03:16:44.200"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.json()["amount"]}</arg>
<arg>${amount}</arg>
</arguments>
<msg timestamp="20210322 03:16:44.201" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:16:44.200" endtime="20210322 03:16:44.201"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["description"]}</arg>
<arg>${pix_description}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:16:44.202" endtime="20210322 03:16:44.202"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["national_registration"]}</arg>
<arg>${debitor_national_registration}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:16:44.203" endtime="20210322 03:16:44.204"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["name"]}</arg>
<arg>${debitor_name}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:16:44.204" endtime="20210322 03:16:44.205"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["type"]}</arg>
<arg>${debitor_type}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:16:44.205" endtime="20210322 03:16:44.206"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["holder_id"]}</arg>
<arg>${debitor_holder_id}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:16:44.206" endtime="20210322 03:16:44.207"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["account"]["psp"]["code"]}</arg>
<arg>${debtor_account_psp_code}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:16:44.207" endtime="20210322 03:16:44.208"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["account"]["psp"]["name"]}</arg>
<arg>${debtor_account_psp_name}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:16:44.209" endtime="20210322 03:16:44.209"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["account"]["digital_account_id"]}</arg>
<arg>${debtor_digital_account}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:16:44.210" endtime="20210322 03:16:44.211"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["account"]["number"]}</arg>
<arg>${account_number}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:16:44.211" endtime="20210322 03:16:44.212"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["account"]["routing_number"]}</arg>
<arg>0${debtor_account_routing_number}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:16:44.212" endtime="20210322 03:16:44.213"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["account"]["type"]}</arg>
<arg>${debtor_account_type}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:16:44.213" endtime="20210322 03:16:44.214"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["creditor"]["national_registration"]}</arg>
<arg>${creditor_national_registration}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:16:44.214" endtime="20210322 03:16:44.215"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["creditor"]["name"]}</arg>
<arg>${creditor_name}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:16:44.215" endtime="20210322 03:16:44.216"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["creditor"]["type"]}</arg>
<arg>${creditor_type}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:16:44.217" endtime="20210322 03:16:44.217"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["creditor"]["account"]["psp"]["code"]}</arg>
<arg>${creditor_account_psp_code}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:16:44.218" endtime="20210322 03:16:44.218"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["creditor"]["account"]["number"]}</arg>
<arg>${creditor_account_number}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:16:44.219" endtime="20210322 03:16:44.219"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["creditor"]["account"]["routing_number"]}</arg>
<arg>${creditor_account_routing_number}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:16:44.220" endtime="20210322 03:16:44.221"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["creditor"]["account"]["type"]}</arg>
<arg>${creditor_account_type}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:16:44.221" endtime="20210322 03:16:44.222"></status>
</kw>
<status status="PASS" starttime="20210322 03:16:44.187" endtime="20210322 03:16:44.222"></status>
</kw>
<kw name="${index} IN RANGE [ 20 ]" type="for">
<kw name="${index} = 0" type="foritem">
<kw name="buscar pagamento pix" library="pix_payments_get_pix_payment">
<arguments>
<arg>holder_external_key=${holder_external_key}</arg>
<arg>account_external_key=${account_external_key}</arg>
<arg>entry_external_key=${entry_external_key}</arg>
<arg>payment_external_key=${payment_external_key}</arg>
</arguments>
<kw name="conectar pix-payments" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-payments</arg>
<arg>url=${pix_payments_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 03:16:44.224" level="INFO">Creating Session using : alias=pix-payments, url=https://banking-pix-payments-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 03:16:44.224" endtime="20210322 03:16:44.225"></status>
</kw>
<status status="PASS" starttime="20210322 03:16:44.223" endtime="20210322 03:16:44.225"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-payments</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/pix/holders/${holder_external_key}/accounts/${account_external_key}/payments/${payment_external_key}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:16:44.226" level="INFO">GET Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/pix/holders/5caa3cf897624433b0941e70e5e497a2/accounts/62aec15c61e544ccbae3154ed53bbc71/payments/2f5063d755eb49cfaa32be977ff5c3a9, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 03:16:44.862" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:16:44.225" endtime="20210322 03:16:44.862"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:16:44.862" level="INFO">{'id': '2f5063d755eb49cfaa32be977ff5c3a9', 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'status': 'executed', 'end_to_end_id': 'E194682422021032206164d14496d7da', 'message_id': 'M19468242b12296d11b1cd2836b6a0c7', 'amount': 100, 'created_at': '2021-03-22T03:16:43.342897', 'description': 'Envio de PIX', 'debtor': {'national_registration': '32984607104', 'name': 'Holder de teste', 'type': 'individual', 'holder_id': '5caa3cf897624433b0941e70e5e497a2', 'account': {'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}, 'digital_account_id': '62aec15c61e544ccbae3154ed53bbc71', 'number': '8895136796', 'routing_number': '0001', 'type': 'cacc'}}, 'creditor': {'national_registration': '42808422644', 'name': 'Massa iti PF NauNNMO', 'type': 'individual', 'account': {'psp': {'code': '17192451'}, 'number': '0243882974', 'routing_number': '0500', 'type': 'cacc'}}, 'refunded_amount': 0}</msg>
<status status="PASS" starttime="20210322 03:16:44.862" endtime="20210322 03:16:44.862"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:16:44.863" level="INFO">9d0fd9012586f430</msg>
<status status="PASS" starttime="20210322 03:16:44.863" endtime="20210322 03:16:44.863"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 03:16:44.863" level="INFO">200</msg>
<status status="PASS" starttime="20210322 03:16:44.863" endtime="20210322 03:16:44.863"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:16:44.864" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:16:44.863" endtime="20210322 03:16:44.864"></status>
</kw>
<status status="PASS" starttime="20210322 03:16:44.222" endtime="20210322 03:16:44.864"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${response.json()["status"]}' == 'succeeded'</arg>
</arguments>
<status status="PASS" starttime="20210322 03:16:44.864" endtime="20210322 03:16:44.864"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10</arg>
</arguments>
<msg timestamp="20210322 03:16:54.867" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20210322 03:16:44.865" endtime="20210322 03:16:54.869"></status>
</kw>
<status status="PASS" starttime="20210322 03:16:44.222" endtime="20210322 03:16:54.870"></status>
</kw>
<kw name="${index} = 1" type="foritem">
<kw name="buscar pagamento pix" library="pix_payments_get_pix_payment">
<arguments>
<arg>holder_external_key=${holder_external_key}</arg>
<arg>account_external_key=${account_external_key}</arg>
<arg>entry_external_key=${entry_external_key}</arg>
<arg>payment_external_key=${payment_external_key}</arg>
</arguments>
<kw name="conectar pix-payments" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-payments</arg>
<arg>url=${pix_payments_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 03:16:54.878" level="INFO">Creating Session using : alias=pix-payments, url=https://banking-pix-payments-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 03:16:54.877" endtime="20210322 03:16:54.880"></status>
</kw>
<status status="PASS" starttime="20210322 03:16:54.875" endtime="20210322 03:16:54.880"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-payments</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/pix/holders/${holder_external_key}/accounts/${account_external_key}/payments/${payment_external_key}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:16:54.883" level="INFO">GET Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/pix/holders/5caa3cf897624433b0941e70e5e497a2/accounts/62aec15c61e544ccbae3154ed53bbc71/payments/2f5063d755eb49cfaa32be977ff5c3a9, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 03:16:55.537" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:16:54.881" endtime="20210322 03:16:55.537"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:16:55.539" level="INFO">{'id': '2f5063d755eb49cfaa32be977ff5c3a9', 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'status': 'succeeded', 'end_to_end_id': 'E194682422021032206164d14496d7da', 'message_id': 'M19468242b12296d11b1cd2836b6a0c7', 'amount': 100, 'created_at': '2021-03-22T03:16:43.342897', 'description': 'Envio de PIX', 'debtor': {'national_registration': '32984607104', 'name': 'Holder de teste', 'type': 'individual', 'holder_id': '5caa3cf897624433b0941e70e5e497a2', 'account': {'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}, 'digital_account_id': '62aec15c61e544ccbae3154ed53bbc71', 'number': '8895136796', 'routing_number': '0001', 'type': 'cacc'}}, 'creditor': {'national_registration': '42808422644', 'name': 'Massa iti PF NauNNMO', 'type': 'individual', 'account': {'psp': {'code': '17192451'}, 'number': '0243882974', 'routing_number': '0500', 'type': 'cacc'}}, 'refunded_amount': 0}</msg>
<status status="PASS" starttime="20210322 03:16:55.538" endtime="20210322 03:16:55.540"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:16:55.542" level="INFO">242002c80a8b98d6</msg>
<status status="PASS" starttime="20210322 03:16:55.540" endtime="20210322 03:16:55.542"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 03:16:55.544" level="INFO">200</msg>
<status status="PASS" starttime="20210322 03:16:55.543" endtime="20210322 03:16:55.544"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:16:55.546" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:16:55.545" endtime="20210322 03:16:55.546"></status>
</kw>
<status status="PASS" starttime="20210322 03:16:54.871" endtime="20210322 03:16:55.547"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${response.json()["status"]}' == 'succeeded'</arg>
</arguments>
<msg timestamp="20210322 03:16:55.549" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20210322 03:16:55.548" endtime="20210322 03:16:55.549"></status>
</kw>
<status status="PASS" starttime="20210322 03:16:54.870" endtime="20210322 03:16:55.550"></status>
</kw>
<status status="PASS" starttime="20210322 03:16:44.222" endtime="20210322 03:16:55.550"></status>
</kw>
<kw name="validar pagamento pix" library="asserts">
<arguments>
<arg>marketplace_external_key=${marketplace_external_key}</arg>
<arg>status_pix_payments=succeeded</arg>
<arg>amount=${amount}</arg>
<arg>pix_description=${pix_description}</arg>
<arg>debitor_national_registration=${national_registration}</arg>
<arg>debitor_name=${holder_name}</arg>
<arg>debitor_type=${holder_type}</arg>
<arg>debitor_holder_id=${holder_external_key}</arg>
<arg>debtor_account_psp_code=${debtor_account_psp_code}</arg>
<arg>debtor_account_psp_name=${debtor_account_psp_name}</arg>
<arg>debtor_digital_account=${account_external_key}</arg>
<arg>debtor_account_number=${account_number}</arg>
<arg>debtor_account_routing_number=${account_routing_number}</arg>
<arg>debtor_account_type=${debtor_account_type}</arg>
<arg>creditor_national_registration=${creditor_national_registration}</arg>
<arg>creditor_name=${creditor_name}</arg>
<arg>creditor_type=individual</arg>
<arg>creditor_account_psp_code=${creditor_psp}</arg>
<arg>creditor_account_number=${creditor_account_number}</arg>
<arg>creditor_account_routing_number=${creditor_routing_number}</arg>
<arg>creditor_account_type=${creditor_account_type}</arg>
<arg>refunded_amount=0</arg>
</arguments>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<arguments>
<arg>result_format=datetime</arg>
</arguments>
<assign>
<var>${date}</var>
</assign>
<msg timestamp="20210322 03:16:55.555" level="INFO">${date} = 2021-03-22 03:16:55.555341</msg>
<status status="PASS" starttime="20210322 03:16:55.554" endtime="20210322 03:16:55.555"></status>
</kw>
<kw name="Convert Date" library="DateTime">
<doc>Converts between supported `date formats`.</doc>
<arguments>
<arg>${date}</arg>
<arg>exclude_millis=yes</arg>
<arg>result_format=%Y-%m-%d</arg>
<arg>date_format=%d-%m-%Y</arg>
</arguments>
<assign>
<var>${date}</var>
</assign>
<msg timestamp="20210322 03:16:55.557" level="INFO">${date} = 2021-03-22</msg>
<status status="PASS" starttime="20210322 03:16:55.555" endtime="20210322 03:16:55.557"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["marketplace_id"]}</arg>
<arg>${marketplace_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:16:55.557" endtime="20210322 03:16:55.558"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["status"]}</arg>
<arg>${status_pix_payments}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:16:55.558" endtime="20210322 03:16:55.559"></status>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${response.json()["end_to_end_id"]}</arg>
</arguments>
<msg timestamp="20210322 03:16:55.560" level="INFO">Length is 32</msg>
<status status="PASS" starttime="20210322 03:16:55.560" endtime="20210322 03:16:55.561"></status>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${response.json()["message_id"]}</arg>
</arguments>
<msg timestamp="20210322 03:16:55.562" level="INFO">Length is 32</msg>
<status status="PASS" starttime="20210322 03:16:55.561" endtime="20210322 03:16:55.562"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.json()["amount"]}</arg>
<arg>${amount}</arg>
</arguments>
<msg timestamp="20210322 03:16:55.563" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:16:55.562" endtime="20210322 03:16:55.563"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["description"]}</arg>
<arg>${pix_description}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:16:55.563" endtime="20210322 03:16:55.564"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["national_registration"]}</arg>
<arg>${debitor_national_registration}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:16:55.564" endtime="20210322 03:16:55.565"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["name"]}</arg>
<arg>${debitor_name}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:16:55.565" endtime="20210322 03:16:55.567"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["type"]}</arg>
<arg>${debitor_type}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:16:55.567" endtime="20210322 03:16:55.568"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["holder_id"]}</arg>
<arg>${debitor_holder_id}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:16:55.568" endtime="20210322 03:16:55.569"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["account"]["psp"]["code"]}</arg>
<arg>${debtor_account_psp_code}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:16:55.569" endtime="20210322 03:16:55.570"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["account"]["psp"]["name"]}</arg>
<arg>${debtor_account_psp_name}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:16:55.570" endtime="20210322 03:16:55.571"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["account"]["digital_account_id"]}</arg>
<arg>${debtor_digital_account}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:16:55.571" endtime="20210322 03:16:55.571"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["account"]["number"]}</arg>
<arg>${account_number}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:16:55.572" endtime="20210322 03:16:55.572"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["account"]["routing_number"]}</arg>
<arg>0${debtor_account_routing_number}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:16:55.573" endtime="20210322 03:16:55.573"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["account"]["type"]}</arg>
<arg>${debtor_account_type}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:16:55.574" endtime="20210322 03:16:55.574"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["creditor"]["national_registration"]}</arg>
<arg>${creditor_national_registration}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:16:55.575" endtime="20210322 03:16:55.575"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["creditor"]["name"]}</arg>
<arg>${creditor_name}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:16:55.577" endtime="20210322 03:16:55.577"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["creditor"]["type"]}</arg>
<arg>${creditor_type}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:16:55.577" endtime="20210322 03:16:55.577"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["creditor"]["account"]["psp"]["code"]}</arg>
<arg>${creditor_account_psp_code}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:16:55.578" endtime="20210322 03:16:55.578"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["creditor"]["account"]["number"]}</arg>
<arg>${creditor_account_number}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:16:55.579" endtime="20210322 03:16:55.579"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["creditor"]["account"]["routing_number"]}</arg>
<arg>${creditor_account_routing_number}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:16:55.580" endtime="20210322 03:16:55.581"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["creditor"]["account"]["type"]}</arg>
<arg>${creditor_account_type}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:16:55.581" endtime="20210322 03:16:55.581"></status>
</kw>
<status status="PASS" starttime="20210322 03:16:55.550" endtime="20210322 03:16:55.581"></status>
</kw>
<doc>Envio de PIX com sucesso para uma conta Iti, a partir de um Holder Business</doc>
<status status="PASS" starttime="20210322 03:16:34.663" endtime="20210322 03:16:55.581" critical="yes"></status>
</test>
<doc>Funcionalidade: Confirmar Chave de EndereÃ§amento
Eu, como um Holder, portador de uma conta ativa em Banking
Desejo confirmar o pagamento de um envio de PIX</doc>
<status status="FAIL" starttime="20210322 03:16:24.373" endtime="20210322 03:16:55.583"></status>
</suite>
<suite id="s1-s1-s2" name="Criar Pagamento PIX" source="C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\tests\pix-payments\envio\Criar Pagamento PIX.robot">
<test id="s1-s1-s2-t1" name="CenÃ¡rio: Criar pagamento PIX de para holder business utilizando dados completos da conta de destino">
<kw name="criar chave pix ativa" library="pix_dict_create_active_key_pix">
<arguments>
<arg>holder_type=business</arg>
<arg>pix_type=email</arg>
</arguments>
<kw name="Random Number" library="FakerLibrary">
<doc>Returns a random number with 1 digit (default, when digits==None),
a random number with 0 to given number of digits, or a random number
with given number to given number of digits (when ``fix_len==True``).</doc>
<arguments>
<arg>digits=8</arg>
<arg>fix_len=True</arg>
</arguments>
<assign>
<var>${phone}</var>
</assign>
<msg timestamp="20210322 03:16:55.669" level="INFO">${phone} = 67077650</msg>
<status status="PASS" starttime="20210322 03:16:55.669" endtime="20210322 03:16:55.669"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>+55219${phone}</arg>
</arguments>
<assign>
<var>${phone_pix}</var>
</assign>
<msg timestamp="20210322 03:16:55.670" level="INFO">${phone_pix} = +5521967077650</msg>
<status status="PASS" starttime="20210322 03:16:55.670" endtime="20210322 03:16:55.670"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${phone_pix}</arg>
</arguments>
<msg timestamp="20210322 03:16:55.671" level="INFO">${phone_pix} = +5521967077650</msg>
<status status="PASS" starttime="20210322 03:16:55.670" endtime="20210322 03:16:55.672"></status>
</kw>
<kw name="Email" library="FakerLibrary">
<assign>
<var>${email_pix}</var>
</assign>
<msg timestamp="20210322 03:16:55.672" level="INFO">${email_pix} = silvaana-luiza@ig.com.br</msg>
<status status="PASS" starttime="20210322 03:16:55.672" endtime="20210322 03:16:55.672"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${email_pix}</arg>
</arguments>
<msg timestamp="20210322 03:16:55.672" level="INFO">${email_pix} = silvaana-luiza@ig.com.br</msg>
<status status="PASS" starttime="20210322 03:16:55.672" endtime="20210322 03:16:55.672"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${holder_type}' == 'business'</arg>
<arg>criar holder business ativo</arg>
<arg>ELSE IF</arg>
<arg>'${holder_type}' == 'individual'</arg>
<arg>criar holder individual ativo</arg>
</arguments>
<kw name="criar holder business ativo" library="accreditation_create_holder_active">
<kw name="conectar accreditation" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accreditation</arg>
<arg>url=${accreditation_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 03:16:55.674" level="INFO">Creating Session using : alias=accreditation, url=https://banking-accreditation-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 03:16:55.674" endtime="20210322 03:16:55.675"></status>
</kw>
<status status="PASS" starttime="20210322 03:16:55.674" endtime="20210322 03:16:55.675"></status>
</kw>
<kw name="Cnpj" library="FakerLibrary">
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 03:16:55.675" level="INFO">${national_registration} = 71.380.564/0001-45</msg>
<status status="PASS" starttime="20210322 03:16:55.675" endtime="20210322 03:16:55.676"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${national_registration}</arg>
<arg>.</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 03:16:55.676" level="INFO">${national_registration} = 71380564/0001-45</msg>
<status status="PASS" starttime="20210322 03:16:55.676" endtime="20210322 03:16:55.676"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${national_registration}</arg>
<arg>-</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 03:16:55.678" level="INFO">${national_registration} = 71380564/000145</msg>
<status status="PASS" starttime="20210322 03:16:55.676" endtime="20210322 03:16:55.678"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${national_registration}</arg>
<arg>/</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 03:16:55.678" level="INFO">${national_registration} = 71380564000145</msg>
<status status="PASS" starttime="20210322 03:16:55.678" endtime="20210322 03:16:55.678"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${national_registration}</arg>
</arguments>
<msg timestamp="20210322 03:16:55.678" level="INFO">${national_registration} = 71380564000145</msg>
<status status="PASS" starttime="20210322 03:16:55.678" endtime="20210322 03:16:55.678"></status>
</kw>
<kw name="Rg" library="FakerLibrary">
<doc>Brazilian RG, return plain numbers.
Check:  https://www.ngmatematica.com/2014/02/como-determinar-o-digito-verificador-do.html</doc>
<assign>
<var>${identity_card}</var>
</assign>
<msg timestamp="20210322 03:16:55.679" level="INFO">${identity_card} = 134652800</msg>
<status status="PASS" starttime="20210322 03:16:55.679" endtime="20210322 03:16:55.679"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${identity_card}</arg>
</arguments>
<msg timestamp="20210322 03:16:55.680" level="INFO">${identity_card} = 134652800</msg>
<status status="PASS" starttime="20210322 03:16:55.679" endtime="20210322 03:16:55.680"></status>
</kw>
<kw name="criar holder business" library="accreditation_post_holder_business">
<arguments>
<arg>holder_type=business</arg>
<arg>holder_name=${holder_name}</arg>
<arg>email_business=${email_business}</arg>
<arg>national_registration=${national_registration}</arg>
<arg>revenue_business=${revenue_business}</arg>
<arg>cnae=${cnae}</arg>
<arg>legal_name=${legal_name}</arg>
<arg>establishment_format=mei</arg>
<arg>establishment_date=${establishment_date}</arg>
</arguments>
<kw name="conectar accreditation" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accreditation</arg>
<arg>url=${accreditation_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 03:16:55.682" level="INFO">Creating Session using : alias=accreditation, url=https://banking-accreditation-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 03:16:55.681" endtime="20210322 03:16:55.682"></status>
</kw>
<status status="PASS" starttime="20210322 03:16:55.681" endtime="20210322 03:16:55.682"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_type}</arg>
</arguments>
<msg timestamp="20210322 03:16:55.683" level="INFO">${holder_type} = business</msg>
<status status="PASS" starttime="20210322 03:16:55.683" endtime="20210322 03:16:55.683"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_name}</arg>
</arguments>
<msg timestamp="20210322 03:16:55.684" level="INFO">${holder_name} = Holder de teste</msg>
<status status="PASS" starttime="20210322 03:16:55.683" endtime="20210322 03:16:55.684"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${legal_name}</arg>
</arguments>
<msg timestamp="20210322 03:16:55.684" level="INFO">${legal_name} = Nome Legal da Empresa</msg>
<status status="PASS" starttime="20210322 03:16:55.684" endtime="20210322 03:16:55.685"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:16:55.685" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 03:16:55.685" endtime="20210322 03:16:55.685"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "${holder_type}",</arg>
<arg>"name": "${holder_name}",</arg>
<arg>"email": "${email_business}",</arg>
<arg>"national_registration": "${national_registration}",</arg>
<arg>"revenue": ${revenue_business},</arg>
<arg>"cnae": "${cnae}",</arg>
<arg>"legal_name": "${legal_name}",</arg>
<arg>"establishment": {</arg>
<arg>"format":"${establishment_format}",</arg>
<arg>"date":"${establishment_date}"</arg>
<arg>}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 03:16:55.686" level="INFO">${body} = { "type": "business", "name": "Holder de teste", "email": "contato@teste.com.br", "national_registration": "71380564000145", "revenue": 1005500.00, "cnae": "0111301", "legal_name": "Nome Legal da Empr...</msg>
<status status="PASS" starttime="20210322 03:16:55.685" endtime="20210322 03:16:55.686"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:16:55.687" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "business", "name": "Holder de teste", "email": "contato@teste.com.br", "national_registration": "71380564000145", "revenue": 1005500.00, "cnae": "0111301", "legal_name": "Nome Legal da Empresa", "establishment": { "format":"mei", "date":"2012-04-25" } } 
json=None</msg>
<msg timestamp="20210322 03:16:56.403" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:16:55.686" endtime="20210322 03:16:56.403"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:16:56.406" level="INFO">{'id': 'ff1142b6342243dcaad2b88710865868', 'name': 'Holder de teste', 'revenue': 1005500.0, 'email': 'contato@teste.com.br', 'status': 'waiting_info_and_documents', 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'marketplace_name': 'Marketplace de Teste', 'created_at': '2021-03-22T03:16:57.205994', 'updated_at': '2021-03-22T03:16:57.205997', 'type': 'business', 'national_registration': '71380564000145', 'legal_name': 'Nome Legal da Empresa', 'establishment': {'format': 'mei', 'date': '2012-04-25'}, 'cnae': '0111301', '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/ff1142b6342243dcaad2b88710865868', 'type': 'GET'}, 'phones': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/ff1142b6342243dcaad2b88710865868/phones', 'type': 'GET'}, 'addresses': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/ff1142b6342243dcaad2b88710865868/addresses', 'type': 'GET'}, 'documents': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/ff1142b6342243dcaad2b88710865868/documents', 'type': 'GET'}, 'partners': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/ff1142b6342243dcaad2b88710865868/partners', 'type': 'GET'}, 'associates': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/ff1142b6342243dcaad2b88710865868/associates', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 03:16:56.404" endtime="20210322 03:16:56.406"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:16:56.408" level="INFO">3dad68ceb1e72c31</msg>
<status status="PASS" starttime="20210322 03:16:56.407" endtime="20210322 03:16:56.408"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${body}</arg>
</arguments>
<msg timestamp="20210322 03:16:56.410" level="INFO">{ "type": "business", "name": "Holder de teste", "email": "contato@teste.com.br", "national_registration": "71380564000145", "revenue": 1005500.00, "cnae": "0111301", "legal_name": "Nome Legal da Empresa", "establishment": { "format":"mei", "date":"2012-04-25" } }</msg>
<status status="PASS" starttime="20210322 03:16:56.410" endtime="20210322 03:16:56.411"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:16:56.413" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:16:56.411" endtime="20210322 03:16:56.413"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${holder_external_key}</var>
</assign>
<msg timestamp="20210322 03:16:56.415" level="INFO">${holder_external_key} = ff1142b6342243dcaad2b88710865868</msg>
<status status="PASS" starttime="20210322 03:16:56.414" endtime="20210322 03:16:56.415"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_external_key}</arg>
</arguments>
<msg timestamp="20210322 03:16:56.416" level="INFO">${holder_external_key} = ff1142b6342243dcaad2b88710865868</msg>
<status status="PASS" starttime="20210322 03:16:56.415" endtime="20210322 03:16:56.416"></status>
</kw>
<status status="PASS" starttime="20210322 03:16:55.681" endtime="20210322 03:16:56.416"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 03:16:56.417" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:16:56.417" endtime="20210322 03:16:56.418"></status>
</kw>
<kw name="criar holder phone" library="accreditation_post_holder_phone">
<arguments>
<arg>21</arg>
<arg>51</arg>
<arg>996221236</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:16:56.419" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 03:16:56.419" endtime="20210322 03:16:56.419"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"area_code": "${phone_area_code}",</arg>
<arg>"country_code": "${phone_country_code}",</arg>
<arg>"number": "${phone_number}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 03:16:56.421" level="INFO">${body} = { "area_code": "21", "country_code": "51", "number": "996221236" }</msg>
<status status="PASS" starttime="20210322 03:16:56.420" endtime="20210322 03:16:56.421"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/phones</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:16:56.422" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/ff1142b6342243dcaad2b88710865868/phones, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "area_code": "21", "country_code": "51", "number": "996221236" } 
json=None</msg>
<msg timestamp="20210322 03:16:56.667" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:16:56.422" endtime="20210322 03:16:56.667"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:16:56.670" level="INFO">{'id': 'ef1a78fa04614d7186e7e2a126c94add', 'area_code': '21', 'country_code': '51', 'number': '996221236', 'main': True, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/ff1142b6342243dcaad2b88710865868/phones/ef1a78fa04614d7186e7e2a126c94add', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/ff1142b6342243dcaad2b88710865868', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 03:16:56.668" endtime="20210322 03:16:56.671"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:16:56.673" level="INFO">aeba60269eeef838</msg>
<status status="PASS" starttime="20210322 03:16:56.672" endtime="20210322 03:16:56.673"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:16:56.675" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:16:56.674" endtime="20210322 03:16:56.675"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${phone_external_key}</var>
</assign>
<msg timestamp="20210322 03:16:56.677" level="INFO">${phone_external_key} = ef1a78fa04614d7186e7e2a126c94add</msg>
<status status="PASS" starttime="20210322 03:16:56.675" endtime="20210322 03:16:56.677"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${phone_external_key}</arg>
</arguments>
<msg timestamp="20210322 03:16:56.678" level="INFO">${phone_external_key} = ef1a78fa04614d7186e7e2a126c94add</msg>
<status status="PASS" starttime="20210322 03:16:56.677" endtime="20210322 03:16:56.678"></status>
</kw>
<status status="PASS" starttime="20210322 03:16:56.418" endtime="20210322 03:16:56.679"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 03:16:56.680" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:16:56.679" endtime="20210322 03:16:56.680"></status>
</kw>
<kw name="criar holder address" library="accreditation_post_holder_address">
<arguments>
<arg>Rio de Janeiro</arg>
<arg>Rio de Janeiro</arg>
<arg>Brasil</arg>
<arg>Bairro de Testes</arg>
<arg>Rua de Testes</arg>
<arg>90</arg>
<arg>apto 200</arg>
<arg>21550987</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:16:56.682" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 03:16:56.681" endtime="20210322 03:16:56.682"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"city": "${city}",</arg>
<arg>"state": "${state}",</arg>
<arg>"country": "${country}",</arg>
<arg>"neighborhood": "${neighborhood}",</arg>
<arg>"street": "${street}",</arg>
<arg>"number": "${number}",</arg>
<arg>"complement": "${complement}",</arg>
<arg>"postal_code": "${postal_code}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 03:16:56.683" level="INFO">${body} = { "city": "Rio de Janeiro", "state": "Rio de Janeiro", "country": "Brasil", "neighborhood": "Bairro de Testes", "street": "Rua de Testes", "number": "90", "complement": "apto 200", "postal_code": "215...</msg>
<status status="PASS" starttime="20210322 03:16:56.682" endtime="20210322 03:16:56.683"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/addresses</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:16:56.685" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/ff1142b6342243dcaad2b88710865868/addresses, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "city": "Rio de Janeiro", "state": "Rio de Janeiro", "country": "Brasil", "neighborhood": "Bairro de Testes", "street": "Rua de Testes", "number": "90", "complement": "apto 200", "postal_code": "21550987" } 
json=None</msg>
<msg timestamp="20210322 03:16:56.898" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:16:56.684" endtime="20210322 03:16:56.898"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:16:56.900" level="INFO">{'id': '9b4add5e39fd4a5c89aae0fb571640c6', 'street': 'Rua de Testes', 'number': '90', 'city': 'Rio de Janeiro', 'complement': 'apto 200', 'state': 'Rio de Janeiro', 'neighborhood': 'Bairro de Testes', 'postal_code': '21550987', 'country': 'Brasil', 'main': True, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/ff1142b6342243dcaad2b88710865868/addresses/9b4add5e39fd4a5c89aae0fb571640c6', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/ff1142b6342243dcaad2b88710865868', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 03:16:56.899" endtime="20210322 03:16:56.901"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:16:56.902" level="INFO">5057602970bdbff6</msg>
<status status="PASS" starttime="20210322 03:16:56.901" endtime="20210322 03:16:56.902"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:16:56.904" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:16:56.903" endtime="20210322 03:16:56.904"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${address_external_key}</var>
</assign>
<msg timestamp="20210322 03:16:56.906" level="INFO">${address_external_key} = 9b4add5e39fd4a5c89aae0fb571640c6</msg>
<status status="PASS" starttime="20210322 03:16:56.905" endtime="20210322 03:16:56.906"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${address_external_key}</arg>
</arguments>
<msg timestamp="20210322 03:16:56.907" level="INFO">${address_external_key} = 9b4add5e39fd4a5c89aae0fb571640c6</msg>
<status status="PASS" starttime="20210322 03:16:56.906" endtime="20210322 03:16:56.907"></status>
</kw>
<status status="PASS" starttime="20210322 03:16:56.680" endtime="20210322 03:16:56.908"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 03:16:56.909" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:16:56.908" endtime="20210322 03:16:56.909"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>CCMEI</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:16:56.911" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 03:16:56.911" endtime="20210322 03:16:56.911"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 03:16:56.912" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 03:16:56.914" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 03:16:56.912" endtime="20210322 03:16:56.914"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:16:56.916" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/ff1142b6342243dcaad2b88710865868/documents?type=CCMEI, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 03:16:57.243" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:16:56.915" endtime="20210322 03:16:57.244"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:16:57.245" level="INFO">{'id': 'd4e3bc0a92354bc5aa153ff41b4896cf', 'document_type': 'ccmei', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/ff1142b6342243dcaad2b88710865868/documents/d4e3bc0a92354bc5aa153ff41b4896cf', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/ff1142b6342243dcaad2b88710865868', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/ff1142b6342243dcaad2b88710865868/documents/d4e3bc0a92354bc5aa153ff41b4896cf/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 03:16:57.244" endtime="20210322 03:16:57.247"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:16:57.249" level="INFO">fcbb6cb79a047f42</msg>
<status status="PASS" starttime="20210322 03:16:57.248" endtime="20210322 03:16:57.249"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:16:57.251" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:16:57.250" endtime="20210322 03:16:57.251"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 03:16:57.254" level="INFO">${document_external_key} = d4e3bc0a92354bc5aa153ff41b4896cf</msg>
<status status="PASS" starttime="20210322 03:16:57.252" endtime="20210322 03:16:57.254"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 03:16:57.256" level="INFO">${document_external_key} = d4e3bc0a92354bc5aa153ff41b4896cf</msg>
<status status="PASS" starttime="20210322 03:16:57.255" endtime="20210322 03:16:57.257"></status>
</kw>
<status status="PASS" starttime="20210322 03:16:56.910" endtime="20210322 03:16:57.257"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 03:16:57.259" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:16:57.258" endtime="20210322 03:16:57.259"></status>
</kw>
<kw name="Cpf" library="FakerLibrary">
<assign>
<var>${partner_individual_national_registration}</var>
</assign>
<msg timestamp="20210322 03:16:57.261" level="INFO">${partner_individual_national_registration} = 837.659.042-10</msg>
<status status="PASS" starttime="20210322 03:16:57.260" endtime="20210322 03:16:57.261"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${partner_individual_national_registration}</arg>
<arg>.</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${partner_individual_national_registration}</var>
</assign>
<msg timestamp="20210322 03:16:57.262" level="INFO">${partner_individual_national_registration} = 837659042-10</msg>
<status status="PASS" starttime="20210322 03:16:57.261" endtime="20210322 03:16:57.262"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${partner_individual_national_registration}</arg>
<arg>-</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${partner_individual_national_registration}</var>
</assign>
<msg timestamp="20210322 03:16:57.263" level="INFO">${partner_individual_national_registration} = 83765904210</msg>
<status status="PASS" starttime="20210322 03:16:57.263" endtime="20210322 03:16:57.264"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${partner_individual_national_registration}</arg>
</arguments>
<msg timestamp="20210322 03:16:57.265" level="INFO">${partner_individual_national_registration} = 83765904210</msg>
<status status="PASS" starttime="20210322 03:16:57.264" endtime="20210322 03:16:57.265"></status>
</kw>
<kw name="Rg" library="FakerLibrary">
<doc>Brazilian RG, return plain numbers.
Check:  https://www.ngmatematica.com/2014/02/como-determinar-o-digito-verificador-do.html</doc>
<assign>
<var>${partner_individual_identity_card}</var>
</assign>
<msg timestamp="20210322 03:16:57.266" level="INFO">${partner_individual_identity_card} = 346510879</msg>
<status status="PASS" starttime="20210322 03:16:57.265" endtime="20210322 03:16:57.266"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${partner_individual_identity_card}</arg>
</arguments>
<msg timestamp="20210322 03:16:57.267" level="INFO">${partner_individual_identity_card} = 346510879</msg>
<status status="PASS" starttime="20210322 03:16:57.266" endtime="20210322 03:16:57.267"></status>
</kw>
<kw name="criar partner individual" library="accreditation_post_partner_individual">
<arguments>
<arg>partner_individual_type=individual</arg>
<arg>partner_individual_name=${partner_individual_name}</arg>
<arg>partner_individual_email=${partner_individual_email}</arg>
<arg>partner_individual_national_registration=${partner_individual_national_registration}</arg>
<arg>partner_individual_revenue=${partner_individual_revenue}</arg>
<arg>partner_individual_birthday=${partner_individual_birthday}</arg>
<arg>partner_individual_mothers_name=${partner_individual_mothers_name}</arg>
<arg>partner_individual_identity_card=${partner_individual_identity_card}</arg>
<arg>partner_individual_pep=false</arg>
<arg>partner_individual_percentage=100</arg>
<arg>partner_individual_adm=true</arg>
<arg>partner_individual_cbo=${partner_individual_cbo}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:16:57.270" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 03:16:57.269" endtime="20210322 03:16:57.270"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "${partner_individual_type}",</arg>
<arg>"name": "${partner_individual_name}",</arg>
<arg>"email": "${partner_individual_email}",</arg>
<arg>"national_registration": "${partner_individual_national_registration}",</arg>
<arg>"revenue": ${partner_individual_revenue},</arg>
<arg>"birthday": "${partner_individual_birthday}",</arg>
<arg>"mothers_name": "${partner_individual_mothers_name}",</arg>
<arg>"identity_card": "${partner_individual_identity_card}",</arg>
<arg>"pep": false,</arg>
<arg>"percentage": ${partner_individual_percentage},</arg>
<arg>"adm": ${partner_individual_adm},</arg>
<arg>"cbo": ${partner_individual_cbo}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 03:16:57.272" level="INFO">${body} = { "type": "individual", "name": "Individual Partner de teste", "email": "teste@teste.com.br", "national_registration": "83765904210", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "MÃ£e...</msg>
<status status="PASS" starttime="20210322 03:16:57.270" endtime="20210322 03:16:57.272"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/partners</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:16:57.274" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/ff1142b6342243dcaad2b88710865868/partners, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "individual", "name": "Individual Partner de teste", "email": "teste@teste.com.br", "national_registration": "83765904210", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "MÃ£e do Individual Partner", "identity_card": "346510879", "pep": false, "percentage": 100, "adm": true, "cbo": 821450 } 
json=None</msg>
<msg timestamp="20210322 03:16:57.509" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:16:57.272" endtime="20210322 03:16:57.509"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:16:57.510" level="INFO">{'id': '939ab154cdb9480eb84b35ccaaee696c', 'name': 'Individual Partner de teste', 'revenue': 5500.0, 'email': 'teste@teste.com.br', 'created_at': '2021-03-22T03:16:58.306221', 'updated_at': '2021-03-22T03:16:58.306222', 'main': True, 'adm': True, 'percentage': 100.0, 'type': 'individual', 'national_registration': '83765904210', 'birthday': '1988-04-23', 'mothers_name': 'MÃ£e do Individual Partner', 'identity_card': '346510879', 'pep': False, 'cbo': '821450', '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/ff1142b6342243dcaad2b88710865868/partners/939ab154cdb9480eb84b35ccaaee696c', 'type': 'GET'}, 'phones': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/ff1142b6342243dcaad2b88710865868/partners/939ab154cdb9480eb84b35ccaaee696c/phones', 'type': 'GET'}, 'addresses': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/ff1142b6342243dcaad2b88710865868/partners/939ab154cdb9480eb84b35ccaaee696c/addresses', 'type': 'GET'}, 'documents': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/ff1142b6342243dcaad2b88710865868/partners/939ab154cdb9480eb84b35ccaaee696c/documents', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/ff1142b6342243dcaad2b88710865868', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 03:16:57.509" endtime="20210322 03:16:57.510"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:16:57.511" level="INFO">493d401a89a633e0</msg>
<status status="PASS" starttime="20210322 03:16:57.510" endtime="20210322 03:16:57.511"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:16:57.511" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:16:57.511" endtime="20210322 03:16:57.511"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${partner_external_key}</var>
</assign>
<msg timestamp="20210322 03:16:57.512" level="INFO">${partner_external_key} = 939ab154cdb9480eb84b35ccaaee696c</msg>
<status status="PASS" starttime="20210322 03:16:57.512" endtime="20210322 03:16:57.512"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${partner_external_key}</arg>
</arguments>
<msg timestamp="20210322 03:16:57.513" level="INFO">${partner_external_key} = 939ab154cdb9480eb84b35ccaaee696c</msg>
<status status="PASS" starttime="20210322 03:16:57.513" endtime="20210322 03:16:57.513"></status>
</kw>
<status status="PASS" starttime="20210322 03:16:57.267" endtime="20210322 03:16:57.513"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 03:16:57.514" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:16:57.514" endtime="20210322 03:16:57.514"></status>
</kw>
<kw name="criar partner phone" library="accreditation_post_partner_phone">
<arguments>
<arg>21</arg>
<arg>51</arg>
<arg>996554785</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:16:57.515" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 03:16:57.515" endtime="20210322 03:16:57.515"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"area_code": "${phone_area_code}",</arg>
<arg>"country_code": "${phone_country_code}",</arg>
<arg>"number": "${phone_number}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 03:16:57.516" level="INFO">${body} = { "area_code": "21", "country_code": "51", "number": "996554785" }</msg>
<status status="PASS" starttime="20210322 03:16:57.516" endtime="20210322 03:16:57.516"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/partners/${partner_external_key}/phones/</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:16:57.517" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/ff1142b6342243dcaad2b88710865868/partners/939ab154cdb9480eb84b35ccaaee696c/phones/, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "area_code": "21", "country_code": "51", "number": "996554785" } 
json=None</msg>
<msg timestamp="20210322 03:16:57.756" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:16:57.517" endtime="20210322 03:16:57.757"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:16:57.760" level="INFO">{'id': 'afff5c46846d4eabbcf286b62449b470', 'area_code': '21', 'country_code': '51', 'number': '996554785', 'main': True, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/ff1142b6342243dcaad2b88710865868/partners/939ab154cdb9480eb84b35ccaaee696c/phones/afff5c46846d4eabbcf286b62449b470', 'type': 'GET'}, 'partner': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/ff1142b6342243dcaad2b88710865868/partners/939ab154cdb9480eb84b35ccaaee696c', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/ff1142b6342243dcaad2b88710865868', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 03:16:57.758" endtime="20210322 03:16:57.760"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:16:57.761" level="INFO">fdfbf197568c86e9</msg>
<status status="PASS" starttime="20210322 03:16:57.761" endtime="20210322 03:16:57.761"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:16:57.764" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:16:57.762" endtime="20210322 03:16:57.764"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${holder_external_key}</var>
</assign>
<msg timestamp="20210322 03:16:57.765" level="INFO">${holder_external_key} = afff5c46846d4eabbcf286b62449b470</msg>
<status status="PASS" starttime="20210322 03:16:57.764" endtime="20210322 03:16:57.765"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${phone_external_key}</arg>
</arguments>
<msg timestamp="20210322 03:16:57.766" level="INFO">${phone_external_key} = ef1a78fa04614d7186e7e2a126c94add</msg>
<status status="PASS" starttime="20210322 03:16:57.765" endtime="20210322 03:16:57.766"></status>
</kw>
<status status="PASS" starttime="20210322 03:16:57.514" endtime="20210322 03:16:57.766"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 03:16:57.767" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:16:57.766" endtime="20210322 03:16:57.767"></status>
</kw>
<kw name="criar partner address" library="accreditation_post_partner_address">
<arguments>
<arg>Rio de Janeiro</arg>
<arg>Rio de Janeiro</arg>
<arg>Brasil</arg>
<arg>Bairro de Testes</arg>
<arg>Rua de Testes</arg>
<arg>61</arg>
<arg>apto 201</arg>
<arg>21550478</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:16:57.770" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 03:16:57.769" endtime="20210322 03:16:57.770"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"city": "${city}",</arg>
<arg>"state": "${state}",</arg>
<arg>"country": "${country}",</arg>
<arg>"neighborhood": "${neighborhood}",</arg>
<arg>"street": "${street}",</arg>
<arg>"number": "${number}",</arg>
<arg>"complement": "${complement}",</arg>
<arg>"postal_code": "${postal_code}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 03:16:57.771" level="INFO">${body} = { "city": "Rio de Janeiro", "state": "Rio de Janeiro", "country": "Brasil", "neighborhood": "Bairro de Testes", "street": "Rua de Testes", "number": "61", "complement": "apto 201", "postal_code": "215...</msg>
<status status="PASS" starttime="20210322 03:16:57.770" endtime="20210322 03:16:57.771"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/partners/${partner_external_key}/addresses</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:16:57.773" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/ff1142b6342243dcaad2b88710865868/partners/939ab154cdb9480eb84b35ccaaee696c/addresses, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "city": "Rio de Janeiro", "state": "Rio de Janeiro", "country": "Brasil", "neighborhood": "Bairro de Testes", "street": "Rua de Testes", "number": "61", "complement": "apto 201", "postal_code": "21550478" } 
json=None</msg>
<msg timestamp="20210322 03:16:58.049" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:16:57.772" endtime="20210322 03:16:58.050"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:16:58.052" level="INFO">{'id': 'e93b6277418c497caff0641e2e311a47', 'street': 'Rua de Testes', 'number': '61', 'city': 'Rio de Janeiro', 'complement': 'apto 201', 'state': 'Rio de Janeiro', 'neighborhood': 'Bairro de Testes', 'postal_code': '21550478', 'country': 'Brasil', 'main': True, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/ff1142b6342243dcaad2b88710865868/partners/939ab154cdb9480eb84b35ccaaee696c/addresses/e93b6277418c497caff0641e2e311a47', 'type': 'GET'}, 'partner': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/ff1142b6342243dcaad2b88710865868/partners/939ab154cdb9480eb84b35ccaaee696c', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/ff1142b6342243dcaad2b88710865868', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 03:16:58.051" endtime="20210322 03:16:58.052"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:16:58.054" level="INFO">139293c9b5163ebc</msg>
<status status="PASS" starttime="20210322 03:16:58.053" endtime="20210322 03:16:58.055"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:16:58.056" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:16:58.055" endtime="20210322 03:16:58.056"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${address_external_key}</var>
</assign>
<msg timestamp="20210322 03:16:58.058" level="INFO">${address_external_key} = e93b6277418c497caff0641e2e311a47</msg>
<status status="PASS" starttime="20210322 03:16:58.057" endtime="20210322 03:16:58.058"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${address_external_key}</arg>
</arguments>
<msg timestamp="20210322 03:16:58.060" level="INFO">${address_external_key} = e93b6277418c497caff0641e2e311a47</msg>
<status status="PASS" starttime="20210322 03:16:58.059" endtime="20210322 03:16:58.060"></status>
</kw>
<status status="PASS" starttime="20210322 03:16:57.767" endtime="20210322 03:16:58.060"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 03:16:58.061" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:16:58.060" endtime="20210322 03:16:58.061"></status>
</kw>
<kw name="criar partner document" library="accreditation_post_partner_document">
<arguments>
<arg>SELFIE</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:16:58.063" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 03:16:58.062" endtime="20210322 03:16:58.063"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 03:16:58.064" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 03:16:58.066" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 03:16:58.063" endtime="20210322 03:16:58.066"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/partners/${partner_externaL_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:16:58.068" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/ff1142b6342243dcaad2b88710865868/partners/939ab154cdb9480eb84b35ccaaee696c/documents?type=SELFIE, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 03:16:58.346" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:16:58.066" endtime="20210322 03:16:58.346"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:16:58.349" level="INFO">{'id': 'cd5de4dac7a24d0c901ed23b61777119', 'document_type': 'selfie', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/ff1142b6342243dcaad2b88710865868/partners/939ab154cdb9480eb84b35ccaaee696c/documents/cd5de4dac7a24d0c901ed23b61777119', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/ff1142b6342243dcaad2b88710865868', 'type': 'GET'}, 'partner': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/ff1142b6342243dcaad2b88710865868/partners/939ab154cdb9480eb84b35ccaaee696c', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/ff1142b6342243dcaad2b88710865868/partners/939ab154cdb9480eb84b35ccaaee696c/documents/cd5de4dac7a24d0c901ed23b61777119/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 03:16:58.347" endtime="20210322 03:16:58.350"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:16:58.351" level="INFO">1cb1f4e02b5aa70b</msg>
<status status="PASS" starttime="20210322 03:16:58.350" endtime="20210322 03:16:58.352"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:16:58.353" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:16:58.353" endtime="20210322 03:16:58.354"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 03:16:58.355" level="INFO">${document_external_key} = cd5de4dac7a24d0c901ed23b61777119</msg>
<status status="PASS" starttime="20210322 03:16:58.354" endtime="20210322 03:16:58.356"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 03:16:58.357" level="INFO">${document_external_key} = cd5de4dac7a24d0c901ed23b61777119</msg>
<status status="PASS" starttime="20210322 03:16:58.356" endtime="20210322 03:16:58.357"></status>
</kw>
<status status="PASS" starttime="20210322 03:16:58.062" endtime="20210322 03:16:58.357"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 03:16:58.358" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:16:58.358" endtime="20210322 03:16:58.359"></status>
</kw>
<kw name="criar partner document" library="accreditation_post_partner_document">
<arguments>
<arg>RG_FRENTE</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:16:58.360" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 03:16:58.360" endtime="20210322 03:16:58.360"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 03:16:58.361" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 03:16:58.363" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 03:16:58.361" endtime="20210322 03:16:58.363"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/partners/${partner_externaL_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:16:58.365" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/ff1142b6342243dcaad2b88710865868/partners/939ab154cdb9480eb84b35ccaaee696c/documents?type=RG_FRENTE, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 03:16:58.670" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:16:58.364" endtime="20210322 03:16:58.670"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:16:58.672" level="INFO">{'id': '6f07130404d6483c9f6eb808f79e9aa1', 'document_type': 'rg_frente', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/ff1142b6342243dcaad2b88710865868/partners/939ab154cdb9480eb84b35ccaaee696c/documents/6f07130404d6483c9f6eb808f79e9aa1', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/ff1142b6342243dcaad2b88710865868', 'type': 'GET'}, 'partner': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/ff1142b6342243dcaad2b88710865868/partners/939ab154cdb9480eb84b35ccaaee696c', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/ff1142b6342243dcaad2b88710865868/partners/939ab154cdb9480eb84b35ccaaee696c/documents/6f07130404d6483c9f6eb808f79e9aa1/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 03:16:58.671" endtime="20210322 03:16:58.673"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:16:58.675" level="INFO">02117dbc22adcd2d</msg>
<status status="PASS" starttime="20210322 03:16:58.674" endtime="20210322 03:16:58.675"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:16:58.677" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:16:58.677" endtime="20210322 03:16:58.678"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 03:16:58.680" level="INFO">${document_external_key} = 6f07130404d6483c9f6eb808f79e9aa1</msg>
<status status="PASS" starttime="20210322 03:16:58.678" endtime="20210322 03:16:58.680"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 03:16:58.682" level="INFO">${document_external_key} = 6f07130404d6483c9f6eb808f79e9aa1</msg>
<status status="PASS" starttime="20210322 03:16:58.681" endtime="20210322 03:16:58.683"></status>
</kw>
<status status="PASS" starttime="20210322 03:16:58.359" endtime="20210322 03:16:58.684"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 03:16:58.685" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:16:58.684" endtime="20210322 03:16:58.685"></status>
</kw>
<kw name="criar partner document" library="accreditation_post_partner_document">
<arguments>
<arg>RG_VERSO</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:16:58.689" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 03:16:58.688" endtime="20210322 03:16:58.689"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 03:16:58.690" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 03:16:58.693" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 03:16:58.690" endtime="20210322 03:16:58.693"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/partners/${partner_externaL_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:16:58.695" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/ff1142b6342243dcaad2b88710865868/partners/939ab154cdb9480eb84b35ccaaee696c/documents?type=RG_VERSO, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 03:16:58.951" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:16:58.694" endtime="20210322 03:16:58.951"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:16:58.951" level="INFO">{'id': '206ca177070f47449ac2c82817a15feb', 'document_type': 'rg_verso', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/ff1142b6342243dcaad2b88710865868/partners/939ab154cdb9480eb84b35ccaaee696c/documents/206ca177070f47449ac2c82817a15feb', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/ff1142b6342243dcaad2b88710865868', 'type': 'GET'}, 'partner': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/ff1142b6342243dcaad2b88710865868/partners/939ab154cdb9480eb84b35ccaaee696c', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/ff1142b6342243dcaad2b88710865868/partners/939ab154cdb9480eb84b35ccaaee696c/documents/206ca177070f47449ac2c82817a15feb/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 03:16:58.951" endtime="20210322 03:16:58.951"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:16:58.952" level="INFO">73c9600d2b0e09d3</msg>
<status status="PASS" starttime="20210322 03:16:58.952" endtime="20210322 03:16:58.952"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:16:58.952" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:16:58.952" endtime="20210322 03:16:58.952"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 03:16:58.953" level="INFO">${document_external_key} = 206ca177070f47449ac2c82817a15feb</msg>
<status status="PASS" starttime="20210322 03:16:58.953" endtime="20210322 03:16:58.953"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 03:16:58.953" level="INFO">${document_external_key} = 206ca177070f47449ac2c82817a15feb</msg>
<status status="PASS" starttime="20210322 03:16:58.953" endtime="20210322 03:16:58.953"></status>
</kw>
<status status="PASS" starttime="20210322 03:16:58.686" endtime="20210322 03:16:58.953"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 03:16:58.954" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:16:58.954" endtime="20210322 03:16:58.954"></status>
</kw>
<kw name="solicitar aprovaÃ§Ã£o do holder" library="accreditation_request_approval">
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:16:58.955" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 03:16:58.955" endtime="20210322 03:16:58.955"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/approval</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:16:58.955" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/ff1142b6342243dcaad2b88710865868/approval, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data=None 
json=None</msg>
<msg timestamp="20210322 03:16:59.256" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:16:58.955" endtime="20210322 03:16:59.256"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:16:59.257" level="INFO">{'message': 'Approval request accepted successfully. Processing analysis'}</msg>
<status status="PASS" starttime="20210322 03:16:59.257" endtime="20210322 03:16:59.257"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:16:59.258" level="INFO">23462ce7dda56baa</msg>
<status status="PASS" starttime="20210322 03:16:59.257" endtime="20210322 03:16:59.258"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:16:59.259" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:16:59.258" endtime="20210322 03:16:59.259"></status>
</kw>
<status status="PASS" starttime="20210322 03:16:58.954" endtime="20210322 03:16:59.259"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 03:16:59.259" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:16:59.259" endtime="20210322 03:16:59.260"></status>
</kw>
<kw name="recebendo notificaÃ§Ã£o de aprovaÃ§Ã£o" library="accreditation_risk_notification">
<kw name="Uuid 4" library="FakerLibrary">
<doc>Generates a random UUID4 string.
:param cast_to: Specify what type the UUID should be cast to. Default is `str`
:type cast_to: callable</doc>
<assign>
<var>${assessment_id}</var>
</assign>
<msg timestamp="20210322 03:16:59.261" level="INFO">${assessment_id} = 1496eb3d-01bc-418f-9ed8-8b8b96281bc8</msg>
<status status="PASS" starttime="20210322 03:16:59.260" endtime="20210322 03:16:59.261"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>year</arg>
</arguments>
<assign>
<var>${year}</var>
</assign>
<msg timestamp="20210322 03:16:59.261" level="INFO">${year} = 2021</msg>
<status status="PASS" starttime="20210322 03:16:59.261" endtime="20210322 03:16:59.261"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>month</arg>
</arguments>
<assign>
<var>${month}</var>
</assign>
<msg timestamp="20210322 03:16:59.262" level="INFO">${month} = 03</msg>
<status status="PASS" starttime="20210322 03:16:59.262" endtime="20210322 03:16:59.262"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>day</arg>
</arguments>
<assign>
<var>${day}</var>
</assign>
<msg timestamp="20210322 03:16:59.263" level="INFO">${day} = 22</msg>
<status status="PASS" starttime="20210322 03:16:59.262" endtime="20210322 03:16:59.263"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:16:59.263" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 03:16:59.263" endtime="20210322 03:16:59.263"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "risk.assessment.result",</arg>
<arg>"resource": "business.holder",</arg>
<arg>"created_at": "${year}-${month}-${day} 15:28:56.747Z",</arg>
<arg>"marketplace_id": "${marketplace_external_key}",</arg>
<arg>"object": {</arg>
<arg>"result": "APPROVED",</arg>
<arg>"holder_id": "${holder_external_key}",</arg>
<arg>"applicant_id": "${application_external_key}",</arg>
<arg>"assessment_id": "${assessment_id}"</arg>
<arg>}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 03:16:59.264" level="INFO">${body} = { "type": "risk.assessment.result", "resource": "business.holder", "created_at": "2021-03-22 15:28:56.747Z", "marketplace_id": "f71a8951368a4cc085cf7875ff44e61c", "object": { "result": "APPROVED", "ho...</msg>
<status status="PASS" starttime="20210322 03:16:59.263" endtime="20210322 03:16:59.264"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/admin/internal_operation/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/registration/approval</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:16:59.265" level="INFO">POST Request using : uri=/admin/internal_operation/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/ff1142b6342243dcaad2b88710865868/registration/approval, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "risk.assessment.result", "resource": "business.holder", "created_at": "2021-03-22 15:28:56.747Z", "marketplace_id": "f71a8951368a4cc085cf7875ff44e61c", "object": { "result": "APPROVED", "holder_id": "ff1142b6342243dcaad2b88710865868", "applicant_id": "bcc25a6751c14b52af1340d40dba78c5", "assessment_id": "1496eb3d-01bc-418f-9ed8-8b8b96281bc8" } } 
json=None</msg>
<msg timestamp="20210322 03:16:59.462" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:16:59.264" endtime="20210322 03:16:59.462"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:16:59.462" level="INFO">{'message': 'Holder approved successfully'}</msg>
<status status="PASS" starttime="20210322 03:16:59.462" endtime="20210322 03:16:59.462"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:16:59.463" level="INFO">29f0159ab994d748</msg>
<status status="PASS" starttime="20210322 03:16:59.463" endtime="20210322 03:16:59.463"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:16:59.463" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:16:59.463" endtime="20210322 03:16:59.463"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 03:16:59.464" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:16:59.464" endtime="20210322 03:16:59.464"></status>
</kw>
<status status="PASS" starttime="20210322 03:16:59.260" endtime="20210322 03:16:59.464"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 03:16:59.465" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:16:59.464" endtime="20210322 03:16:59.465"></status>
</kw>
<kw name="buscar account por holder" library="accounts_get_accounts_by_holder">
<kw name="conectar accounts" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accounts</arg>
<arg>url=${account_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 03:16:59.466" level="INFO">Creating Session using : alias=accounts, url=https://banking-accounts-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 03:16:59.466" endtime="20210322 03:16:59.467"></status>
</kw>
<status status="PASS" starttime="20210322 03:16:59.466" endtime="20210322 03:16:59.467"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accounts</arg>
<arg>/marketplaces/${marketplace_external_key}/holders/${holder_external_key}/accounts</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:16:59.467" level="INFO">GET Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/holders/ff1142b6342243dcaad2b88710865868/accounts, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 03:17:00.072" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:16:59.467" endtime="20210322 03:17:00.072"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:17:00.074" level="INFO">{'items': [{'id': 'dba509f2f4524df1a7c8b396ff997e99', 'holder': 'ff1142b6342243dcaad2b88710865868', 'balance': '0.00', 'currency': 'BRL', 'routing_number': '001', 'number': '222035400', 'status': 'active', 'metadata': {}, 'created_at': '2021-03-22T06:17:00.310766', 'updated_at': '2021-03-22T06:17:00.310766', 'primary': True, 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'uri': '/v2/marketplaces/f71a8951368a4cc085cf7875ff44e61c/accounts/dba509f2f4524df1a7c8b396ff997e99', 'resource': 'payment_account'}], 'has_more': False, 'limit': 100, 'total_pages': 1, 'page': 1, 'offset': 0, 'total': '1', 'query_count': '1'}</msg>
<status status="PASS" starttime="20210322 03:17:00.073" endtime="20210322 03:17:00.074"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:17:00.076" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:17:00.075" endtime="20210322 03:17:00.076"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["id"]}</arg>
</arguments>
<assign>
<var>${account_external_key}</var>
</assign>
<msg timestamp="20210322 03:17:00.078" level="INFO">${account_external_key} = dba509f2f4524df1a7c8b396ff997e99</msg>
<status status="PASS" starttime="20210322 03:17:00.076" endtime="20210322 03:17:00.078"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_external_key}</arg>
</arguments>
<msg timestamp="20210322 03:17:00.079" level="INFO">${account_external_key} = dba509f2f4524df1a7c8b396ff997e99</msg>
<status status="PASS" starttime="20210322 03:17:00.078" endtime="20210322 03:17:00.079"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["number"]}</arg>
</arguments>
<assign>
<var>${account_number}</var>
</assign>
<msg timestamp="20210322 03:17:00.081" level="INFO">${account_number} = 222035400</msg>
<status status="PASS" starttime="20210322 03:17:00.080" endtime="20210322 03:17:00.081"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_number}</arg>
</arguments>
<msg timestamp="20210322 03:17:00.082" level="INFO">${account_number} = 222035400</msg>
<status status="PASS" starttime="20210322 03:17:00.082" endtime="20210322 03:17:00.082"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["routing_number"]}</arg>
</arguments>
<assign>
<var>${account_routing_number}</var>
</assign>
<msg timestamp="20210322 03:17:00.084" level="INFO">${account_routing_number} = 001</msg>
<status status="PASS" starttime="20210322 03:17:00.083" endtime="20210322 03:17:00.084"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_routing_number}</arg>
</arguments>
<msg timestamp="20210322 03:17:00.085" level="INFO">${account_routing_number} = 001</msg>
<status status="PASS" starttime="20210322 03:17:00.084" endtime="20210322 03:17:00.085"></status>
</kw>
<status status="PASS" starttime="20210322 03:16:59.465" endtime="20210322 03:17:00.085"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 03:17:00.086" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:17:00.086" endtime="20210322 03:17:00.087"></status>
</kw>
<status status="PASS" starttime="20210322 03:16:55.673" endtime="20210322 03:17:00.087"></status>
</kw>
<status status="PASS" starttime="20210322 03:16:55.672" endtime="20210322 03:17:00.087"></status>
</kw>
<kw name="gerar saldo para account" library="account_generate_balance">
<arguments>
<arg>${account_external_key}</arg>
</arguments>
<kw name="conectar accounts" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accounts</arg>
<arg>url=${account_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 03:17:00.089" level="INFO">Creating Session using : alias=accounts, url=https://banking-accounts-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 03:17:00.088" endtime="20210322 03:17:00.089"></status>
</kw>
<status status="PASS" starttime="20210322 03:17:00.088" endtime="20210322 03:17:00.089"></status>
</kw>
<kw name="Uuid 4" library="FakerLibrary">
<doc>Generates a random UUID4 string.
:param cast_to: Specify what type the UUID should be cast to. Default is `str`
:type cast_to: callable</doc>
<assign>
<var>${uuid}</var>
</assign>
<msg timestamp="20210322 03:17:00.090" level="INFO">${uuid} = 86e216dd-657a-4165-97ee-6d11da799bf5</msg>
<status status="PASS" starttime="20210322 03:17:00.090" endtime="20210322 03:17:00.090"></status>
</kw>
<kw name="conectar accounts" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accounts</arg>
<arg>url=${account_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 03:17:00.091" level="INFO">Creating Session using : alias=accounts, url=https://banking-accounts-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 03:17:00.091" endtime="20210322 03:17:00.092"></status>
</kw>
<status status="PASS" starttime="20210322 03:17:00.090" endtime="20210322 03:17:00.092"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:17:00.092" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 03:17:00.092" endtime="20210322 03:17:00.092"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"operations": [</arg>
<arg>{</arg>
<arg>"amount": 9000000000000,</arg>
<arg>"authorization_code": "${uuid}",</arg>
<arg>"transaction_id": "${uuid}",</arg>
<arg>"id": "${uuid}",</arg>
<arg>"id_checking_account": "${account_external_key}",</arg>
<arg>"transfer_date": "2020-02-20T20:58:06.510Z",</arg>
<arg>"fee": 0,</arg>
<arg>"description": "Teste",</arg>
<arg>"object_type": "transfer",</arg>
<arg>"object_id": "${uuid}",</arg>
<arg>"dflag": "ACTIVE",</arg>
<arg>"created_at": "2019-10-14T20:58:06.510Z",</arg>
<arg>"type": "Transfer"</arg>
<arg>}</arg>
<arg>],</arg>
<arg>"reference_id": "Criando saldo na account"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 03:17:00.093" level="INFO">${body} = { "operations": [ { "amount": 9000000000000, "authorization_code": "86e216dd-657a-4165-97ee-6d11da799bf5", "transaction_id": "86e216dd-657a-4165-97ee-6d11da799bf5", "id": "86e216dd-657a-4165-97ee-6d11...</msg>
<status status="PASS" starttime="20210322 03:17:00.093" endtime="20210322 03:17:00.093"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accounts</arg>
<arg>/admin/internal_operation/authorization/${uuid}</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:17:00.094" level="INFO">POST Request using : uri=/admin/internal_operation/authorization/86e216dd-657a-4165-97ee-6d11da799bf5, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "operations": [ { "amount": 9000000000000, "authorization_code": "86e216dd-657a-4165-97ee-6d11da799bf5", "transaction_id": "86e216dd-657a-4165-97ee-6d11da799bf5", "id": "86e216dd-657a-4165-97ee-6d11da799bf5", "id_checking_account": "dba509f2f4524df1a7c8b396ff997e99", "transfer_date": "2020-02-20T20:58:06.510Z", "fee": 0, "description": "Teste", "object_type": "transfer", "object_id": "86e216dd-657a-4165-97ee-6d11da799bf5", "dflag": "ACTIVE", "created_at": "2019-10-14T20:58:06.510Z", "type": "Transfer" } ], "reference_id": "Criando saldo na account" } 
json=None</msg>
<msg timestamp="20210322 03:17:00.729" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:17:00.094" endtime="20210322 03:17:00.729"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.status_code}' == 200</arg>
<arg>Log</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:17:00.730" endtime="20210322 03:17:00.732"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.status_code}' == 200</arg>
<arg>Log</arg>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:17:00.733" endtime="20210322 03:17:00.734"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.status_code}' == 200</arg>
<arg>Log</arg>
<arg>${response.status_code}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:17:00.735" endtime="20210322 03:17:00.736"></status>
</kw>
<status status="PASS" starttime="20210322 03:17:00.087" endtime="20210322 03:17:00.737"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${pix_type}' == 'phone'</arg>
<arg>criar chave pix</arg>
<arg>${pix_type}</arg>
<arg>${phone_pix}</arg>
<arg>ELSE IF</arg>
<arg>'${pix_type}' == 'email'</arg>
<arg>criar chave pix</arg>
<arg>${pix_type}</arg>
<arg>${email_pix}</arg>
<arg>ELSE IF</arg>
<arg>'${pix_type}' == 'evp'</arg>
<arg>criar chave pix</arg>
<arg>${pix_type}</arg>
<arg>${EMPTY}</arg>
<arg>ELSE IF</arg>
<arg>'${pix_type}' == 'national_registration'</arg>
<arg>criar chave pix</arg>
<arg>${pix_type}</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw name="criar chave pix" library="pix_dict_create_entry">
<arguments>
<arg>${pix_type}</arg>
<arg>${email_pix}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 03:17:00.743" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 03:17:00.742" endtime="20210322 03:17:00.744"></status>
</kw>
<status status="PASS" starttime="20210322 03:17:00.742" endtime="20210322 03:17:00.744"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${type}</arg>
</arguments>
<msg timestamp="20210322 03:17:00.746" level="INFO">${type} = email</msg>
<status status="PASS" starttime="20210322 03:17:00.745" endtime="20210322 03:17:00.746"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210322 03:17:00.747" level="INFO">${value} = silvaana-luiza@ig.com.br</msg>
<status status="PASS" starttime="20210322 03:17:00.746" endtime="20210322 03:17:00.747"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:17:00.748" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 03:17:00.748" endtime="20210322 03:17:00.749"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "${type}",</arg>
<arg>"value": "${value}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 03:17:00.750" level="INFO">${body} = { "type": "email", "value": "silvaana-luiza@ig.com.br" }</msg>
<status status="PASS" starttime="20210322 03:17:00.749" endtime="20210322 03:17:00.750"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:17:00.751" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/ff1142b6342243dcaad2b88710865868/accounts/dba509f2f4524df1a7c8b396ff997e99/entries, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "email", "value": "silvaana-luiza@ig.com.br" } 
json=None</msg>
<msg timestamp="20210322 03:17:01.398" level="INFO">${response} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20210322 03:17:00.750" endtime="20210322 03:17:01.398"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:17:01.401" level="INFO">{'id': '081e2a293fb24f6ca870e42d92bb5b7f', 'status': 'waiting_ownership_verification', 'created_at': '2021-03-22T03:17:02.261', 'updated_at': '2021-03-22T03:17:02.261', 'key': {'value': 'silvaana-luiza@ig.com.br', 'type': 'email'}, 'account': {'id': 'dba509f2f4524df1a7c8b396ff997e99', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': 'ff1142b6342243dcaad2b88710865868', 'owner': {'name': 'Nome Legal da Empresa', 'national_registration': '71380564000145', 'type': 'business'}, 'routing_number': '001', 'number': '222035400', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}, 'resource': 'pix.entry'}</msg>
<status status="PASS" starttime="20210322 03:17:01.399" endtime="20210322 03:17:01.401"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:17:01.403" level="INFO">8b804e0138e0315b</msg>
<status status="PASS" starttime="20210322 03:17:01.402" endtime="20210322 03:17:01.403"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 03:17:01.405" level="INFO">202</msg>
<status status="PASS" starttime="20210322 03:17:01.404" endtime="20210322 03:17:01.405"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:17:01.407" level="INFO">${response} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20210322 03:17:01.406" endtime="20210322 03:17:01.407"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${entry_external_key}</var>
</assign>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:17:01.409" endtime="20210322 03:17:01.410"></status>
</kw>
<msg timestamp="20210322 03:17:01.410" level="INFO">${entry_external_key} = 081e2a293fb24f6ca870e42d92bb5b7f</msg>
<status status="PASS" starttime="20210322 03:17:01.408" endtime="20210322 03:17:01.410"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${entry_external_key}</arg>
</arguments>
<msg timestamp="20210322 03:17:01.412" level="INFO">${entry_external_key} = 081e2a293fb24f6ca870e42d92bb5b7f</msg>
<status status="PASS" starttime="20210322 03:17:01.411" endtime="20210322 03:17:01.412"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["key"]["value"]}</arg>
</arguments>
<assign>
<var>${entry_key_value}</var>
</assign>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["key"]["value"]}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:17:01.414" endtime="20210322 03:17:01.415"></status>
</kw>
<msg timestamp="20210322 03:17:01.415" level="INFO">${entry_key_value} = silvaana-luiza@ig.com.br</msg>
<status status="PASS" starttime="20210322 03:17:01.412" endtime="20210322 03:17:01.415"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${entry_key_value}</arg>
</arguments>
<msg timestamp="20210322 03:17:01.416" level="INFO">${entry_key_value} = silvaana-luiza@ig.com.br</msg>
<status status="PASS" starttime="20210322 03:17:01.415" endtime="20210322 03:17:01.416"></status>
</kw>
<status status="PASS" starttime="20210322 03:17:00.740" endtime="20210322 03:17:01.417"></status>
</kw>
<status status="PASS" starttime="20210322 03:17:00.737" endtime="20210322 03:17:01.417"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${pix_type}' == 'phone'</arg>
<arg>buscar verification code</arg>
<arg>${holder_external_key}</arg>
<arg>${account_external_key}</arg>
<arg>${entry_external_key}</arg>
<arg>ELSE IF</arg>
<arg>'${pix_type}' == 'email'</arg>
<arg>buscar verification code</arg>
<arg>${holder_external_key}</arg>
<arg>${account_external_key}</arg>
<arg>${entry_external_key}</arg>
</arguments>
<kw name="buscar verification code" library="pix_dict_verification_code">
<arguments>
<arg>${holder_external_key}</arg>
<arg>${account_external_key}</arg>
<arg>${entry_external_key}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 03:17:01.420" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 03:17:01.420" endtime="20210322 03:17:01.421"></status>
</kw>
<status status="PASS" starttime="20210322 03:17:01.419" endtime="20210322 03:17:01.421"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/admin/internal_operation/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries/${entry_external_key}/code</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:17:01.422" level="INFO">GET Request using : uri=/admin/internal_operation/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/ff1142b6342243dcaad2b88710865868/accounts/dba509f2f4524df1a7c8b396ff997e99/entries/081e2a293fb24f6ca870e42d92bb5b7f/code, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 03:17:02.036" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:17:01.421" endtime="20210322 03:17:02.036"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:17:02.038" level="INFO">{'code': '1525'}</msg>
<status status="PASS" starttime="20210322 03:17:02.037" endtime="20210322 03:17:02.038"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:17:02.040" level="INFO">9b6b1b2baed45ede</msg>
<status status="PASS" starttime="20210322 03:17:02.039" endtime="20210322 03:17:02.041"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 03:17:02.043" level="INFO">200</msg>
<status status="PASS" starttime="20210322 03:17:02.041" endtime="20210322 03:17:02.043"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:17:02.045" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:17:02.044" endtime="20210322 03:17:02.045"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["code"]}</arg>
</arguments>
<assign>
<var>${verification_code}</var>
</assign>
<msg timestamp="20210322 03:17:02.048" level="INFO">${verification_code} = 1525</msg>
<status status="PASS" starttime="20210322 03:17:02.046" endtime="20210322 03:17:02.048"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${verification_code}</arg>
</arguments>
<msg timestamp="20210322 03:17:02.051" level="INFO">${verification_code} = 1525</msg>
<status status="PASS" starttime="20210322 03:17:02.049" endtime="20210322 03:17:02.051"></status>
</kw>
<status status="PASS" starttime="20210322 03:17:01.418" endtime="20210322 03:17:02.051"></status>
</kw>
<status status="PASS" starttime="20210322 03:17:01.417" endtime="20210322 03:17:02.051"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${pix_type}' == 'phone'</arg>
<arg>confirmar propriedade da chave pix</arg>
<arg>${verification_code}</arg>
<arg>${holder_external_key}</arg>
<arg>${account_external_key}</arg>
<arg>${entry_external_key}</arg>
<arg>ELSE IF</arg>
<arg>'${pix_type}' == 'email'</arg>
<arg>confirmar propriedade da chave pix</arg>
<arg>${verification_code}</arg>
<arg>${holder_external_key}</arg>
<arg>${account_external_key}</arg>
<arg>${entry_external_key}</arg>
</arguments>
<kw name="confirmar propriedade da chave pix" library="pix_dict_confirm_propriety">
<arguments>
<arg>${verification_code}</arg>
<arg>${holder_external_key}</arg>
<arg>${account_external_key}</arg>
<arg>${entry_external_key}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 03:17:02.056" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 03:17:02.055" endtime="20210322 03:17:02.057"></status>
</kw>
<status status="PASS" starttime="20210322 03:17:02.055" endtime="20210322 03:17:02.057"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:17:02.058" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 03:17:02.058" endtime="20210322 03:17:02.058"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"code": "${verification_code}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 03:17:02.060" level="INFO">${body} = { "code": "1525" }</msg>
<status status="PASS" starttime="20210322 03:17:02.059" endtime="20210322 03:17:02.060"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries/${entry_external_key}/ownership</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:17:02.061" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/ff1142b6342243dcaad2b88710865868/accounts/dba509f2f4524df1a7c8b396ff997e99/entries/081e2a293fb24f6ca870e42d92bb5b7f/ownership, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "code": "1525" } 
json=None</msg>
<msg timestamp="20210322 03:17:03.584" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:17:02.060" endtime="20210322 03:17:03.585"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:17:03.588" level="INFO">{'id': '081e2a293fb24f6ca870e42d92bb5b7f', 'status': 'active', 'created_at': '2021-03-22T03:17:02.261', 'updated_at': '2021-03-22T03:17:04.462', 'key': {'value': 'silvaana-luiza@ig.com.br', 'type': 'email'}, 'account': {'id': 'dba509f2f4524df1a7c8b396ff997e99', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': 'ff1142b6342243dcaad2b88710865868', 'owner': {'name': 'Nome Legal da Empresa', 'national_registration': '71380564000145', 'type': 'business'}, 'routing_number': '001', 'number': '222035400', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}, 'resource': 'pix.entry'}</msg>
<status status="PASS" starttime="20210322 03:17:03.586" endtime="20210322 03:17:03.588"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:17:03.590" level="INFO">610583c7f751a822</msg>
<status status="PASS" starttime="20210322 03:17:03.589" endtime="20210322 03:17:03.590"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 03:17:03.592" level="INFO">201</msg>
<status status="PASS" starttime="20210322 03:17:03.591" endtime="20210322 03:17:03.593"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:17:03.594" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:17:03.593" endtime="20210322 03:17:03.594"></status>
</kw>
<status status="PASS" starttime="20210322 03:17:02.053" endtime="20210322 03:17:03.595"></status>
</kw>
<status status="PASS" starttime="20210322 03:17:02.052" endtime="20210322 03:17:03.595"></status>
</kw>
<kw name="validar ativaÃ§Ã£o da chave de endereÃ§amento" library="asserts">
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["status"]}</arg>
<arg>active</arg>
</arguments>
<status status="PASS" starttime="20210322 03:17:03.596" endtime="20210322 03:17:03.597"></status>
</kw>
<status status="PASS" starttime="20210322 03:17:03.595" endtime="20210322 03:17:03.597"></status>
</kw>
<status status="PASS" starttime="20210322 03:16:55.669" endtime="20210322 03:17:03.598"></status>
</kw>
<kw name="criar pagamento pix com dados completos" library="pix_payments_create_pix_payment">
<arguments>
<arg>amount=${amount}</arg>
<arg>creditor_account_number=${creditor_account_number}</arg>
<arg>creditor_routing_number=${creditor_routing_number}</arg>
<arg>creditor_account_type=${creditor_account_type}</arg>
<arg>creditor_name=${creditor_name}</arg>
<arg>creditor_national_registration=${creditor_national_registration}</arg>
<arg>creditor_psp=${creditor_psp}</arg>
<arg>pix_description=${pix_description}</arg>
</arguments>
<kw name="conectar pix-payments" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-payments</arg>
<arg>url=${pix_payments_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 03:17:03.601" level="INFO">Creating Session using : alias=pix-payments, url=https://banking-pix-payments-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 03:17:03.601" endtime="20210322 03:17:03.602"></status>
</kw>
<status status="PASS" starttime="20210322 03:17:03.600" endtime="20210322 03:17:03.602"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:17:03.603" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 03:17:03.602" endtime="20210322 03:17:03.603"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"amount": ${amount},</arg>
<arg>"creditor": {</arg>
<arg>"account": {</arg>
<arg>"number": "${creditor_account_number}",</arg>
<arg>"routing_number": "${creditor_routing_number}",</arg>
<arg>"type": "${creditor_account_type}"</arg>
<arg>},</arg>
<arg>"name": "${creditor_name}",</arg>
<arg>"national_registration": "${creditor_national_registration}",</arg>
<arg>"psp": "${creditor_psp}"</arg>
<arg>},</arg>
<arg>"description": "${pix_description}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 03:17:03.604" level="INFO">${body} = { "amount": 100, "creditor": { "account": { "number": "0243882974", "routing_number": "0500", "type": "cacc" }, "name": "Massa iti PF NauNNMO", "national_registration": "42808422644", "psp": "17192451...</msg>
<status status="PASS" starttime="20210322 03:17:03.603" endtime="20210322 03:17:03.604"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-payments</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/pix/holders/${holder_external_key}/accounts/${account_external_key}/payments</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:17:03.606" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/pix/holders/ff1142b6342243dcaad2b88710865868/accounts/dba509f2f4524df1a7c8b396ff997e99/payments, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "amount": 100, "creditor": { "account": { "number": "0243882974", "routing_number": "0500", "type": "cacc" }, "name": "Massa iti PF NauNNMO", "national_registration": "42808422644", "psp": "17192451" }, "description": "Envio de PIX" } 
json=None</msg>
<msg timestamp="20210322 03:17:04.263" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:17:03.605" endtime="20210322 03:17:04.263"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:17:04.265" level="INFO">{'id': 'eafb04c70afa4eecbe15c86f6cc77bbf', 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'status': 'pending', 'end_to_end_id': 'E19468242202103220617e9980084a9e', 'message_id': 'M19468242b0a80383f44342122284440', 'amount': 100, 'created_at': '2021-03-22T03:17:05.105176', 'description': 'Envio de PIX', 'debtor': {'national_registration': '71380564000145', 'name': 'Holder de teste', 'type': 'individual', 'holder_id': 'ff1142b6342243dcaad2b88710865868', 'account': {'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}, 'digital_account_id': 'dba509f2f4524df1a7c8b396ff997e99', 'number': '222035400', 'routing_number': '0001', 'type': 'cacc'}}, 'creditor': {'national_registration': '42808422644', 'name': 'Massa iti PF NauNNMO', 'type': 'individual', 'account': {'psp': {'code': '17192451'}, 'number': '0243882974', 'routing_number': '0500', 'type': 'cacc'}}, 'refunded_amount': 0}</msg>
<status status="PASS" starttime="20210322 03:17:04.264" endtime="20210322 03:17:04.266"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:17:04.268" level="INFO">74e7b70830a40789</msg>
<status status="PASS" starttime="20210322 03:17:04.267" endtime="20210322 03:17:04.268"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 03:17:04.270" level="INFO">201</msg>
<status status="PASS" starttime="20210322 03:17:04.269" endtime="20210322 03:17:04.270"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:17:04.272" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:17:04.271" endtime="20210322 03:17:04.272"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${payment_external_key}</var>
</assign>
<msg timestamp="20210322 03:17:04.275" level="INFO">${payment_external_key} = eafb04c70afa4eecbe15c86f6cc77bbf</msg>
<status status="PASS" starttime="20210322 03:17:04.273" endtime="20210322 03:17:04.275"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${payment_external_key}</arg>
</arguments>
<msg timestamp="20210322 03:17:04.277" level="INFO">${payment_external_key} = eafb04c70afa4eecbe15c86f6cc77bbf</msg>
<status status="PASS" starttime="20210322 03:17:04.276" endtime="20210322 03:17:04.278"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["end_to_end_id"]}</arg>
</arguments>
<assign>
<var>${end_to_end_id}</var>
</assign>
<msg timestamp="20210322 03:17:04.279" level="INFO">${end_to_end_id} = E19468242202103220617e9980084a9e</msg>
<status status="PASS" starttime="20210322 03:17:04.278" endtime="20210322 03:17:04.279"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${end_to_end_id}</arg>
</arguments>
<msg timestamp="20210322 03:17:04.280" level="INFO">${end_to_end_id} = E19468242202103220617e9980084a9e</msg>
<status status="PASS" starttime="20210322 03:17:04.279" endtime="20210322 03:17:04.280"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["message_id"]}</arg>
</arguments>
<assign>
<var>${message_id}</var>
</assign>
<msg timestamp="20210322 03:17:04.282" level="INFO">${message_id} = M19468242b0a80383f44342122284440</msg>
<status status="PASS" starttime="20210322 03:17:04.281" endtime="20210322 03:17:04.282"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${message_id}</arg>
</arguments>
<msg timestamp="20210322 03:17:04.283" level="INFO">${message_id} = M19468242b0a80383f44342122284440</msg>
<status status="PASS" starttime="20210322 03:17:04.282" endtime="20210322 03:17:04.283"></status>
</kw>
<status status="PASS" starttime="20210322 03:17:03.598" endtime="20210322 03:17:04.283"></status>
</kw>
<kw name="validar pagamento pix" library="asserts">
<arguments>
<arg>marketplace_external_key=${marketplace_external_key}</arg>
<arg>status_pix_payments=pending</arg>
<arg>amount=${amount}</arg>
<arg>pix_description=${pix_description}</arg>
<arg>debitor_national_registration=${national_registration}</arg>
<arg>debitor_name=${holder_name}</arg>
<arg>debitor_type=${holder_type}</arg>
<arg>debitor_holder_id=${holder_external_key}</arg>
<arg>debtor_account_psp_code=${debtor_account_psp_code}</arg>
<arg>debtor_account_psp_name=${debtor_account_psp_name}</arg>
<arg>debtor_digital_account=${account_external_key}</arg>
<arg>debtor_account_number=${account_number}</arg>
<arg>debtor_account_routing_number=${account_routing_number}</arg>
<arg>debtor_account_type=${debtor_account_type}</arg>
<arg>creditor_national_registration=${creditor_national_registration}</arg>
<arg>creditor_name=${creditor_name}</arg>
<arg>creditor_type=individual</arg>
<arg>creditor_account_psp_code=${creditor_psp}</arg>
<arg>creditor_account_number=${creditor_account_number}</arg>
<arg>creditor_account_routing_number=${creditor_routing_number}</arg>
<arg>creditor_account_type=${creditor_account_type}</arg>
<arg>refunded_amount=0</arg>
</arguments>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<arguments>
<arg>result_format=datetime</arg>
</arguments>
<assign>
<var>${date}</var>
</assign>
<msg timestamp="20210322 03:17:04.286" level="INFO">${date} = 2021-03-22 03:17:04.286154</msg>
<status status="PASS" starttime="20210322 03:17:04.286" endtime="20210322 03:17:04.287"></status>
</kw>
<kw name="Convert Date" library="DateTime">
<doc>Converts between supported `date formats`.</doc>
<arguments>
<arg>${date}</arg>
<arg>exclude_millis=yes</arg>
<arg>result_format=%Y-%m-%d</arg>
<arg>date_format=%d-%m-%Y</arg>
</arguments>
<assign>
<var>${date}</var>
</assign>
<msg timestamp="20210322 03:17:04.287" level="INFO">${date} = 2021-03-22</msg>
<status status="PASS" starttime="20210322 03:17:04.287" endtime="20210322 03:17:04.287"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["marketplace_id"]}</arg>
<arg>${marketplace_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:17:04.288" endtime="20210322 03:17:04.288"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["status"]}</arg>
<arg>${status_pix_payments}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:17:04.289" endtime="20210322 03:17:04.289"></status>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${response.json()["end_to_end_id"]}</arg>
</arguments>
<msg timestamp="20210322 03:17:04.290" level="INFO">Length is 32</msg>
<status status="PASS" starttime="20210322 03:17:04.290" endtime="20210322 03:17:04.290"></status>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${response.json()["message_id"]}</arg>
</arguments>
<msg timestamp="20210322 03:17:04.291" level="INFO">Length is 32</msg>
<status status="PASS" starttime="20210322 03:17:04.290" endtime="20210322 03:17:04.291"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.json()["amount"]}</arg>
<arg>${amount}</arg>
</arguments>
<msg timestamp="20210322 03:17:04.292" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:17:04.291" endtime="20210322 03:17:04.292"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["description"]}</arg>
<arg>${pix_description}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:17:04.292" endtime="20210322 03:17:04.293"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["national_registration"]}</arg>
<arg>${debitor_national_registration}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:17:04.293" endtime="20210322 03:17:04.294"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["name"]}</arg>
<arg>${debitor_name}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:17:04.294" endtime="20210322 03:17:04.295"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["type"]}</arg>
<arg>${debitor_type}</arg>
</arguments>
<msg timestamp="20210322 03:17:04.295" level="FAIL">individual != business</msg>
<status status="FAIL" starttime="20210322 03:17:04.295" endtime="20210322 03:17:04.296"></status>
</kw>
<status status="FAIL" starttime="20210322 03:17:04.283" endtime="20210322 03:17:04.296"></status>
</kw>
<doc>Envio de PIX com sucesso para uma conta Iti, a partir de um Holder Individual</doc>
<status status="FAIL" starttime="20210322 03:16:55.667" endtime="20210322 03:17:04.296" critical="yes">individual != business</status>
</test>
<test id="s1-s1-s2-t2" name="CenÃ¡rio: Criar pagamento PIX de para holder individual utilizando dados completos da conta de destino">
<kw name="criar chave pix ativa" library="pix_dict_create_active_key_pix">
<arguments>
<arg>holder_type=individual</arg>
<arg>pix_type=email</arg>
</arguments>
<kw name="Random Number" library="FakerLibrary">
<doc>Returns a random number with 1 digit (default, when digits==None),
a random number with 0 to given number of digits, or a random number
with given number to given number of digits (when ``fix_len==True``).</doc>
<arguments>
<arg>digits=8</arg>
<arg>fix_len=True</arg>
</arguments>
<assign>
<var>${phone}</var>
</assign>
<msg timestamp="20210322 03:17:04.298" level="INFO">${phone} = 65478259</msg>
<status status="PASS" starttime="20210322 03:17:04.298" endtime="20210322 03:17:04.298"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>+55219${phone}</arg>
</arguments>
<assign>
<var>${phone_pix}</var>
</assign>
<msg timestamp="20210322 03:17:04.299" level="INFO">${phone_pix} = +5521965478259</msg>
<status status="PASS" starttime="20210322 03:17:04.298" endtime="20210322 03:17:04.299"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${phone_pix}</arg>
</arguments>
<msg timestamp="20210322 03:17:04.300" level="INFO">${phone_pix} = +5521965478259</msg>
<status status="PASS" starttime="20210322 03:17:04.299" endtime="20210322 03:17:04.300"></status>
</kw>
<kw name="Email" library="FakerLibrary">
<assign>
<var>${email_pix}</var>
</assign>
<msg timestamp="20210322 03:17:04.301" level="INFO">${email_pix} = vsales@ribeiro.com</msg>
<status status="PASS" starttime="20210322 03:17:04.300" endtime="20210322 03:17:04.301"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${email_pix}</arg>
</arguments>
<msg timestamp="20210322 03:17:04.302" level="INFO">${email_pix} = vsales@ribeiro.com</msg>
<status status="PASS" starttime="20210322 03:17:04.301" endtime="20210322 03:17:04.302"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${holder_type}' == 'business'</arg>
<arg>criar holder business ativo</arg>
<arg>ELSE IF</arg>
<arg>'${holder_type}' == 'individual'</arg>
<arg>criar holder individual ativo</arg>
</arguments>
<kw name="criar holder individual ativo" library="accreditation_create_holder_active">
<kw name="conectar accreditation" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accreditation</arg>
<arg>url=${accreditation_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 03:17:04.303" level="INFO">Creating Session using : alias=accreditation, url=https://banking-accreditation-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 03:17:04.303" endtime="20210322 03:17:04.304"></status>
</kw>
<status status="PASS" starttime="20210322 03:17:04.303" endtime="20210322 03:17:04.304"></status>
</kw>
<kw name="Cpf" library="FakerLibrary">
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 03:17:04.305" level="INFO">${national_registration} = 169.480.572-76</msg>
<status status="PASS" starttime="20210322 03:17:04.304" endtime="20210322 03:17:04.305"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${national_registration}</arg>
<arg>.</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 03:17:04.305" level="INFO">${national_registration} = 169480572-76</msg>
<status status="PASS" starttime="20210322 03:17:04.305" endtime="20210322 03:17:04.305"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${national_registration}</arg>
<arg>-</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 03:17:04.306" level="INFO">${national_registration} = 16948057276</msg>
<status status="PASS" starttime="20210322 03:17:04.306" endtime="20210322 03:17:04.306"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${national_registration}</arg>
</arguments>
<msg timestamp="20210322 03:17:04.307" level="INFO">${national_registration} = 16948057276</msg>
<status status="PASS" starttime="20210322 03:17:04.306" endtime="20210322 03:17:04.307"></status>
</kw>
<kw name="Rg" library="FakerLibrary">
<doc>Brazilian RG, return plain numbers.
Check:  https://www.ngmatematica.com/2014/02/como-determinar-o-digito-verificador-do.html</doc>
<assign>
<var>${identity_card}</var>
</assign>
<msg timestamp="20210322 03:17:04.307" level="INFO">${identity_card} = 460312856</msg>
<status status="PASS" starttime="20210322 03:17:04.307" endtime="20210322 03:17:04.307"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${identity_card}</arg>
</arguments>
<msg timestamp="20210322 03:17:04.308" level="INFO">${identity_card} = 460312856</msg>
<status status="PASS" starttime="20210322 03:17:04.308" endtime="20210322 03:17:04.308"></status>
</kw>
<kw name="criar holder individual" library="accreditation_post_holder_individual">
<arguments>
<arg>holder_type=individual</arg>
<arg>holder_name=${holder_name}</arg>
<arg>email=${email}</arg>
<arg>national_registration=${national_registration}</arg>
<arg>revenue=${revenue}</arg>
<arg>birthday=${birthday}</arg>
<arg>mothers_name=${mothers_name}</arg>
<arg>identity_card=${identity_card}</arg>
<arg>pep=false</arg>
<arg>cbo=${cbo}</arg>
</arguments>
<kw name="conectar accreditation" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accreditation</arg>
<arg>url=${accreditation_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 03:17:04.310" level="INFO">Creating Session using : alias=accreditation, url=https://banking-accreditation-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 03:17:04.310" endtime="20210322 03:17:04.311"></status>
</kw>
<status status="PASS" starttime="20210322 03:17:04.309" endtime="20210322 03:17:04.311"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_type}</arg>
</arguments>
<msg timestamp="20210322 03:17:04.312" level="INFO">${holder_type} = individual</msg>
<status status="PASS" starttime="20210322 03:17:04.311" endtime="20210322 03:17:04.312"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_name}</arg>
</arguments>
<msg timestamp="20210322 03:17:04.312" level="INFO">${holder_name} = Holder de teste</msg>
<status status="PASS" starttime="20210322 03:17:04.312" endtime="20210322 03:17:04.312"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:17:04.313" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 03:17:04.313" endtime="20210322 03:17:04.313"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "${holder_type}",</arg>
<arg>"name": "${holder_name}",</arg>
<arg>"email": "${email}",</arg>
<arg>"national_registration": "${national_registration}",</arg>
<arg>"revenue": ${revenue},</arg>
<arg>"birthday": "${birthday}",</arg>
<arg>"mothers_name": "${mothers_name}",</arg>
<arg>"identity_card": "${identity_card}",</arg>
<arg>"pep": false,</arg>
<arg>"cbo": ${cbo}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 03:17:04.314" level="INFO">${body} = { "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "16948057276", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "MÃ£e do Holder",...</msg>
<status status="PASS" starttime="20210322 03:17:04.313" endtime="20210322 03:17:04.314"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:17:04.315" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "16948057276", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "MÃ£e do Holder", "identity_card": "460312856", "pep": false, "cbo": 821450 } 
json=None</msg>
<msg timestamp="20210322 03:17:04.942" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:17:04.315" endtime="20210322 03:17:04.942"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:17:04.944" level="INFO">{'id': 'ccaefe9bc55b453b87ac0fe86b9c574a', 'name': 'Holder de teste', 'revenue': 5500.0, 'email': 'teste@teste.com.br', 'status': 'waiting_info_and_documents', 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'marketplace_name': 'Marketplace de Teste', 'created_at': '2021-03-22T03:17:05.782519', 'updated_at': '2021-03-22T03:17:05.782521', 'type': 'individual', 'national_registration': '16948057276', 'birthday': '1988-04-23', 'mothers_name': 'MÃ£e do Holder', 'identity_card': '460312856', 'pep': False, 'cbo': '821450', '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/ccaefe9bc55b453b87ac0fe86b9c574a', 'type': 'GET'}, 'phones': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/ccaefe9bc55b453b87ac0fe86b9c574a/phones', 'type': 'GET'}, 'addresses': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/ccaefe9bc55b453b87ac0fe86b9c574a/addresses', 'type': 'GET'}, 'documents': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/ccaefe9bc55b453b87ac0fe86b9c574a/documents', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 03:17:04.943" endtime="20210322 03:17:04.945"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:17:04.947" level="INFO">cdc2b0f7fb851311</msg>
<status status="PASS" starttime="20210322 03:17:04.947" endtime="20210322 03:17:04.947"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${body}</arg>
</arguments>
<msg timestamp="20210322 03:17:04.950" level="INFO">{ "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "16948057276", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "MÃ£e do Holder", "identity_card": "460312856", "pep": false, "cbo": 821450 }</msg>
<status status="PASS" starttime="20210322 03:17:04.949" endtime="20210322 03:17:04.950"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:17:04.952" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:17:04.951" endtime="20210322 03:17:04.952"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${holder_external_key}</var>
</assign>
<msg timestamp="20210322 03:17:04.953" level="INFO">${holder_external_key} = ccaefe9bc55b453b87ac0fe86b9c574a</msg>
<status status="PASS" starttime="20210322 03:17:04.952" endtime="20210322 03:17:04.953"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_external_key}</arg>
</arguments>
<msg timestamp="20210322 03:17:04.954" level="INFO">${holder_external_key} = ccaefe9bc55b453b87ac0fe86b9c574a</msg>
<status status="PASS" starttime="20210322 03:17:04.954" endtime="20210322 03:17:04.954"></status>
</kw>
<status status="PASS" starttime="20210322 03:17:04.308" endtime="20210322 03:17:04.955"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_name}</arg>
</arguments>
<msg timestamp="20210322 03:17:04.956" level="INFO">${holder_name} = Holder de teste</msg>
<status status="PASS" starttime="20210322 03:17:04.955" endtime="20210322 03:17:04.956"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 03:17:04.957" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:17:04.957" endtime="20210322 03:17:04.957"></status>
</kw>
<kw name="criar holder phone" library="accreditation_post_holder_phone">
<arguments>
<arg>21</arg>
<arg>51</arg>
<arg>996221236</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:17:04.959" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 03:17:04.958" endtime="20210322 03:17:04.959"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"area_code": "${phone_area_code}",</arg>
<arg>"country_code": "${phone_country_code}",</arg>
<arg>"number": "${phone_number}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 03:17:04.960" level="INFO">${body} = { "area_code": "21", "country_code": "51", "number": "996221236" }</msg>
<status status="PASS" starttime="20210322 03:17:04.959" endtime="20210322 03:17:04.960"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/phones</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:17:04.961" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/ccaefe9bc55b453b87ac0fe86b9c574a/phones, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "area_code": "21", "country_code": "51", "number": "996221236" } 
json=None</msg>
<msg timestamp="20210322 03:17:05.270" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:17:04.960" endtime="20210322 03:17:05.271"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:17:05.273" level="INFO">{'id': '327675a8e668472892b1e5ce13d91d47', 'area_code': '21', 'country_code': '51', 'number': '996221236', 'main': True, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/ccaefe9bc55b453b87ac0fe86b9c574a/phones/327675a8e668472892b1e5ce13d91d47', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/ccaefe9bc55b453b87ac0fe86b9c574a', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 03:17:05.271" endtime="20210322 03:17:05.273"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:17:05.275" level="INFO">4b647932ae4607ac</msg>
<status status="PASS" starttime="20210322 03:17:05.274" endtime="20210322 03:17:05.275"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:17:05.278" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:17:05.276" endtime="20210322 03:17:05.278"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${phone_external_key}</var>
</assign>
<msg timestamp="20210322 03:17:05.281" level="INFO">${phone_external_key} = 327675a8e668472892b1e5ce13d91d47</msg>
<status status="PASS" starttime="20210322 03:17:05.279" endtime="20210322 03:17:05.281"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${phone_external_key}</arg>
</arguments>
<msg timestamp="20210322 03:17:05.283" level="INFO">${phone_external_key} = 327675a8e668472892b1e5ce13d91d47</msg>
<status status="PASS" starttime="20210322 03:17:05.282" endtime="20210322 03:17:05.283"></status>
</kw>
<status status="PASS" starttime="20210322 03:17:04.958" endtime="20210322 03:17:05.283"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 03:17:05.285" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:17:05.284" endtime="20210322 03:17:05.285"></status>
</kw>
<kw name="criar holder address" library="accreditation_post_holder_address">
<arguments>
<arg>Rio de Janeiro</arg>
<arg>Rio de Janeiro</arg>
<arg>Brasil</arg>
<arg>Bairro de Testes</arg>
<arg>Rua de Testes</arg>
<arg>90</arg>
<arg>apto 200</arg>
<arg>21550987</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:17:05.287" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 03:17:05.287" endtime="20210322 03:17:05.287"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"city": "${city}",</arg>
<arg>"state": "${state}",</arg>
<arg>"country": "${country}",</arg>
<arg>"neighborhood": "${neighborhood}",</arg>
<arg>"street": "${street}",</arg>
<arg>"number": "${number}",</arg>
<arg>"complement": "${complement}",</arg>
<arg>"postal_code": "${postal_code}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 03:17:05.289" level="INFO">${body} = { "city": "Rio de Janeiro", "state": "Rio de Janeiro", "country": "Brasil", "neighborhood": "Bairro de Testes", "street": "Rua de Testes", "number": "90", "complement": "apto 200", "postal_code": "215...</msg>
<status status="PASS" starttime="20210322 03:17:05.288" endtime="20210322 03:17:05.289"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/addresses</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:17:05.291" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/ccaefe9bc55b453b87ac0fe86b9c574a/addresses, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "city": "Rio de Janeiro", "state": "Rio de Janeiro", "country": "Brasil", "neighborhood": "Bairro de Testes", "street": "Rua de Testes", "number": "90", "complement": "apto 200", "postal_code": "21550987" } 
json=None</msg>
<msg timestamp="20210322 03:17:05.507" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:17:05.290" endtime="20210322 03:17:05.507"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:17:05.509" level="INFO">{'id': '01fcf39d725c4c72a04d90c626ff5a8d', 'street': 'Rua de Testes', 'number': '90', 'city': 'Rio de Janeiro', 'complement': 'apto 200', 'state': 'Rio de Janeiro', 'neighborhood': 'Bairro de Testes', 'postal_code': '21550987', 'country': 'Brasil', 'main': True, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/ccaefe9bc55b453b87ac0fe86b9c574a/addresses/01fcf39d725c4c72a04d90c626ff5a8d', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/ccaefe9bc55b453b87ac0fe86b9c574a', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 03:17:05.508" endtime="20210322 03:17:05.510"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:17:05.512" level="INFO">ae5345342ecae875</msg>
<status status="PASS" starttime="20210322 03:17:05.510" endtime="20210322 03:17:05.512"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:17:05.515" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:17:05.513" endtime="20210322 03:17:05.515"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${address_external_key}</var>
</assign>
<msg timestamp="20210322 03:17:05.518" level="INFO">${address_external_key} = 01fcf39d725c4c72a04d90c626ff5a8d</msg>
<status status="PASS" starttime="20210322 03:17:05.515" endtime="20210322 03:17:05.518"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${address_external_key}</arg>
</arguments>
<msg timestamp="20210322 03:17:05.518" level="INFO">${address_external_key} = 01fcf39d725c4c72a04d90c626ff5a8d</msg>
<status status="PASS" starttime="20210322 03:17:05.518" endtime="20210322 03:17:05.519"></status>
</kw>
<status status="PASS" starttime="20210322 03:17:05.285" endtime="20210322 03:17:05.519"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 03:17:05.520" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:17:05.520" endtime="20210322 03:17:05.520"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>SELFIE</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:17:05.523" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 03:17:05.523" endtime="20210322 03:17:05.523"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 03:17:05.525" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 03:17:05.527" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 03:17:05.525" endtime="20210322 03:17:05.527"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:17:05.529" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/ccaefe9bc55b453b87ac0fe86b9c574a/documents?type=SELFIE, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 03:17:05.807" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:17:05.528" endtime="20210322 03:17:05.807"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:17:05.810" level="INFO">{'id': '418f27f085924923a90607f368a75de0', 'document_type': 'selfie', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/ccaefe9bc55b453b87ac0fe86b9c574a/documents/418f27f085924923a90607f368a75de0', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/ccaefe9bc55b453b87ac0fe86b9c574a', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/ccaefe9bc55b453b87ac0fe86b9c574a/documents/418f27f085924923a90607f368a75de0/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 03:17:05.809" endtime="20210322 03:17:05.810"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:17:05.812" level="INFO">748d96cd8bd5ecd3</msg>
<status status="PASS" starttime="20210322 03:17:05.811" endtime="20210322 03:17:05.812"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:17:05.814" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:17:05.813" endtime="20210322 03:17:05.815"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 03:17:05.818" level="INFO">${document_external_key} = 418f27f085924923a90607f368a75de0</msg>
<status status="PASS" starttime="20210322 03:17:05.815" endtime="20210322 03:17:05.818"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 03:17:05.821" level="INFO">${document_external_key} = 418f27f085924923a90607f368a75de0</msg>
<status status="PASS" starttime="20210322 03:17:05.819" endtime="20210322 03:17:05.821"></status>
</kw>
<status status="PASS" starttime="20210322 03:17:05.521" endtime="20210322 03:17:05.821"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 03:17:05.822" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:17:05.821" endtime="20210322 03:17:05.823"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>RG_FRENTE</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:17:05.825" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 03:17:05.824" endtime="20210322 03:17:05.825"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 03:17:05.826" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 03:17:05.829" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 03:17:05.826" endtime="20210322 03:17:05.829"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:17:05.830" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/ccaefe9bc55b453b87ac0fe86b9c574a/documents?type=RG_FRENTE, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 03:17:06.116" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:17:05.829" endtime="20210322 03:17:06.117"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:17:06.118" level="INFO">{'id': '9e1a1cf0a40849b19c654f5f862d27b4', 'document_type': 'rg_frente', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/ccaefe9bc55b453b87ac0fe86b9c574a/documents/9e1a1cf0a40849b19c654f5f862d27b4', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/ccaefe9bc55b453b87ac0fe86b9c574a', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/ccaefe9bc55b453b87ac0fe86b9c574a/documents/9e1a1cf0a40849b19c654f5f862d27b4/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 03:17:06.118" endtime="20210322 03:17:06.119"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:17:06.120" level="INFO">eabd9edc767d2b0a</msg>
<status status="PASS" starttime="20210322 03:17:06.119" endtime="20210322 03:17:06.120"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:17:06.121" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:17:06.121" endtime="20210322 03:17:06.122"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 03:17:06.123" level="INFO">${document_external_key} = 9e1a1cf0a40849b19c654f5f862d27b4</msg>
<status status="PASS" starttime="20210322 03:17:06.122" endtime="20210322 03:17:06.124"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 03:17:06.125" level="INFO">${document_external_key} = 9e1a1cf0a40849b19c654f5f862d27b4</msg>
<status status="PASS" starttime="20210322 03:17:06.124" endtime="20210322 03:17:06.125"></status>
</kw>
<status status="PASS" starttime="20210322 03:17:05.823" endtime="20210322 03:17:06.125"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 03:17:06.127" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:17:06.126" endtime="20210322 03:17:06.127"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>RG_VERSO</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:17:06.128" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 03:17:06.128" endtime="20210322 03:17:06.128"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 03:17:06.129" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 03:17:06.132" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 03:17:06.129" endtime="20210322 03:17:06.132"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:17:06.133" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/ccaefe9bc55b453b87ac0fe86b9c574a/documents?type=RG_VERSO, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 03:17:06.443" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:17:06.132" endtime="20210322 03:17:06.443"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:17:06.443" level="INFO">{'id': 'a96f6a5fe1434830a57d21de7f8f1457', 'document_type': 'rg_verso', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/ccaefe9bc55b453b87ac0fe86b9c574a/documents/a96f6a5fe1434830a57d21de7f8f1457', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/ccaefe9bc55b453b87ac0fe86b9c574a', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/ccaefe9bc55b453b87ac0fe86b9c574a/documents/a96f6a5fe1434830a57d21de7f8f1457/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 03:17:06.443" endtime="20210322 03:17:06.443"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:17:06.444" level="INFO">5695b93db4901ba4</msg>
<status status="PASS" starttime="20210322 03:17:06.443" endtime="20210322 03:17:06.445"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:17:06.445" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:17:06.445" endtime="20210322 03:17:06.445"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 03:17:06.446" level="INFO">${document_external_key} = a96f6a5fe1434830a57d21de7f8f1457</msg>
<status status="PASS" starttime="20210322 03:17:06.445" endtime="20210322 03:17:06.446"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 03:17:06.446" level="INFO">${document_external_key} = a96f6a5fe1434830a57d21de7f8f1457</msg>
<status status="PASS" starttime="20210322 03:17:06.446" endtime="20210322 03:17:06.446"></status>
</kw>
<status status="PASS" starttime="20210322 03:17:06.127" endtime="20210322 03:17:06.446"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 03:17:06.447" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:17:06.446" endtime="20210322 03:17:06.447"></status>
</kw>
<kw name="solicitar aprovaÃ§Ã£o do holder" library="accreditation_request_approval">
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:17:06.448" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 03:17:06.447" endtime="20210322 03:17:06.448"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/approval</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:17:06.448" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/ccaefe9bc55b453b87ac0fe86b9c574a/approval, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data=None 
json=None</msg>
<msg timestamp="20210322 03:17:06.723" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:17:06.448" endtime="20210322 03:17:06.723"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:17:06.725" level="INFO">{'message': 'Approval request accepted successfully. Processing analysis'}</msg>
<status status="PASS" starttime="20210322 03:17:06.724" endtime="20210322 03:17:06.726"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:17:06.727" level="INFO">db79d756191d6f82</msg>
<status status="PASS" starttime="20210322 03:17:06.726" endtime="20210322 03:17:06.728"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:17:06.730" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:17:06.729" endtime="20210322 03:17:06.730"></status>
</kw>
<status status="PASS" starttime="20210322 03:17:06.447" endtime="20210322 03:17:06.731"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 03:17:06.733" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:17:06.732" endtime="20210322 03:17:06.733"></status>
</kw>
<kw name="recebendo notificaÃ§Ã£o de aprovaÃ§Ã£o" library="accreditation_risk_notification">
<kw name="Uuid 4" library="FakerLibrary">
<doc>Generates a random UUID4 string.
:param cast_to: Specify what type the UUID should be cast to. Default is `str`
:type cast_to: callable</doc>
<assign>
<var>${assessment_id}</var>
</assign>
<msg timestamp="20210322 03:17:06.736" level="INFO">${assessment_id} = f46ba1a6-b439-40b0-85c2-17c66b636ce9</msg>
<status status="PASS" starttime="20210322 03:17:06.735" endtime="20210322 03:17:06.736"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>year</arg>
</arguments>
<assign>
<var>${year}</var>
</assign>
<msg timestamp="20210322 03:17:06.737" level="INFO">${year} = 2021</msg>
<status status="PASS" starttime="20210322 03:17:06.737" endtime="20210322 03:17:06.738"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>month</arg>
</arguments>
<assign>
<var>${month}</var>
</assign>
<msg timestamp="20210322 03:17:06.739" level="INFO">${month} = 03</msg>
<status status="PASS" starttime="20210322 03:17:06.738" endtime="20210322 03:17:06.739"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>day</arg>
</arguments>
<assign>
<var>${day}</var>
</assign>
<msg timestamp="20210322 03:17:06.740" level="INFO">${day} = 22</msg>
<status status="PASS" starttime="20210322 03:17:06.739" endtime="20210322 03:17:06.740"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:17:06.741" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 03:17:06.741" endtime="20210322 03:17:06.741"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "risk.assessment.result",</arg>
<arg>"resource": "business.holder",</arg>
<arg>"created_at": "${year}-${month}-${day} 15:28:56.747Z",</arg>
<arg>"marketplace_id": "${marketplace_external_key}",</arg>
<arg>"object": {</arg>
<arg>"result": "APPROVED",</arg>
<arg>"holder_id": "${holder_external_key}",</arg>
<arg>"applicant_id": "${application_external_key}",</arg>
<arg>"assessment_id": "${assessment_id}"</arg>
<arg>}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 03:17:06.743" level="INFO">${body} = { "type": "risk.assessment.result", "resource": "business.holder", "created_at": "2021-03-22 15:28:56.747Z", "marketplace_id": "f71a8951368a4cc085cf7875ff44e61c", "object": { "result": "APPROVED", "ho...</msg>
<status status="PASS" starttime="20210322 03:17:06.742" endtime="20210322 03:17:06.743"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/admin/internal_operation/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/registration/approval</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:17:06.745" level="INFO">POST Request using : uri=/admin/internal_operation/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/ccaefe9bc55b453b87ac0fe86b9c574a/registration/approval, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "risk.assessment.result", "resource": "business.holder", "created_at": "2021-03-22 15:28:56.747Z", "marketplace_id": "f71a8951368a4cc085cf7875ff44e61c", "object": { "result": "APPROVED", "holder_id": "ccaefe9bc55b453b87ac0fe86b9c574a", "applicant_id": "bcc25a6751c14b52af1340d40dba78c5", "assessment_id": "f46ba1a6-b439-40b0-85c2-17c66b636ce9" } } 
json=None</msg>
<msg timestamp="20210322 03:17:06.950" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:17:06.744" endtime="20210322 03:17:06.950"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:17:06.953" level="INFO">{'message': 'Holder approved successfully'}</msg>
<status status="PASS" starttime="20210322 03:17:06.951" endtime="20210322 03:17:06.953"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:17:06.955" level="INFO">abb0861d96c9bf90</msg>
<status status="PASS" starttime="20210322 03:17:06.954" endtime="20210322 03:17:06.956"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:17:06.958" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:17:06.957" endtime="20210322 03:17:06.958"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 03:17:06.960" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:17:06.959" endtime="20210322 03:17:06.960"></status>
</kw>
<status status="PASS" starttime="20210322 03:17:06.734" endtime="20210322 03:17:06.961"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 03:17:06.964" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:17:06.962" endtime="20210322 03:17:06.964"></status>
</kw>
<kw name="buscar account por holder" library="accounts_get_accounts_by_holder">
<kw name="conectar accounts" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accounts</arg>
<arg>url=${account_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 03:17:06.968" level="INFO">Creating Session using : alias=accounts, url=https://banking-accounts-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 03:17:06.966" endtime="20210322 03:17:06.968"></status>
</kw>
<status status="PASS" starttime="20210322 03:17:06.966" endtime="20210322 03:17:06.969"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accounts</arg>
<arg>/marketplaces/${marketplace_external_key}/holders/${holder_external_key}/accounts</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:17:06.970" level="INFO">GET Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/holders/ccaefe9bc55b453b87ac0fe86b9c574a/accounts, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 03:17:07.602" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:17:06.969" endtime="20210322 03:17:07.603"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:17:07.606" level="INFO">{'items': [{'id': '5c8ab6ddd1b04fcaa626c03cee1c0e47', 'holder': 'ccaefe9bc55b453b87ac0fe86b9c574a', 'balance': '0.00', 'currency': 'BRL', 'routing_number': '001', 'number': '4093626381', 'status': 'active', 'metadata': {}, 'created_at': '2021-03-22T06:17:07.78746', 'updated_at': '2021-03-22T06:17:07.78746', 'primary': True, 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'uri': '/v2/marketplaces/f71a8951368a4cc085cf7875ff44e61c/accounts/5c8ab6ddd1b04fcaa626c03cee1c0e47', 'resource': 'payment_account'}], 'has_more': False, 'limit': 100, 'total_pages': 1, 'page': 1, 'offset': 0, 'total': '1', 'query_count': '1'}</msg>
<status status="PASS" starttime="20210322 03:17:07.604" endtime="20210322 03:17:07.607"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:17:07.609" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:17:07.608" endtime="20210322 03:17:07.609"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["id"]}</arg>
</arguments>
<assign>
<var>${account_external_key}</var>
</assign>
<msg timestamp="20210322 03:17:07.611" level="INFO">${account_external_key} = 5c8ab6ddd1b04fcaa626c03cee1c0e47</msg>
<status status="PASS" starttime="20210322 03:17:07.610" endtime="20210322 03:17:07.611"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_external_key}</arg>
</arguments>
<msg timestamp="20210322 03:17:07.612" level="INFO">${account_external_key} = 5c8ab6ddd1b04fcaa626c03cee1c0e47</msg>
<status status="PASS" starttime="20210322 03:17:07.612" endtime="20210322 03:17:07.613"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["number"]}</arg>
</arguments>
<assign>
<var>${account_number}</var>
</assign>
<msg timestamp="20210322 03:17:07.614" level="INFO">${account_number} = 4093626381</msg>
<status status="PASS" starttime="20210322 03:17:07.613" endtime="20210322 03:17:07.614"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_number}</arg>
</arguments>
<msg timestamp="20210322 03:17:07.615" level="INFO">${account_number} = 4093626381</msg>
<status status="PASS" starttime="20210322 03:17:07.615" endtime="20210322 03:17:07.615"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["routing_number"]}</arg>
</arguments>
<assign>
<var>${account_routing_number}</var>
</assign>
<msg timestamp="20210322 03:17:07.617" level="INFO">${account_routing_number} = 001</msg>
<status status="PASS" starttime="20210322 03:17:07.616" endtime="20210322 03:17:07.617"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_routing_number}</arg>
</arguments>
<msg timestamp="20210322 03:17:07.618" level="INFO">${account_routing_number} = 001</msg>
<status status="PASS" starttime="20210322 03:17:07.617" endtime="20210322 03:17:07.618"></status>
</kw>
<status status="PASS" starttime="20210322 03:17:06.965" endtime="20210322 03:17:07.618"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 03:17:07.619" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:17:07.619" endtime="20210322 03:17:07.619"></status>
</kw>
<status status="PASS" starttime="20210322 03:17:04.302" endtime="20210322 03:17:07.619"></status>
</kw>
<status status="PASS" starttime="20210322 03:17:04.302" endtime="20210322 03:17:07.619"></status>
</kw>
<kw name="gerar saldo para account" library="account_generate_balance">
<arguments>
<arg>${account_external_key}</arg>
</arguments>
<kw name="conectar accounts" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accounts</arg>
<arg>url=${account_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 03:17:07.621" level="INFO">Creating Session using : alias=accounts, url=https://banking-accounts-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 03:17:07.621" endtime="20210322 03:17:07.622"></status>
</kw>
<status status="PASS" starttime="20210322 03:17:07.620" endtime="20210322 03:17:07.622"></status>
</kw>
<kw name="Uuid 4" library="FakerLibrary">
<doc>Generates a random UUID4 string.
:param cast_to: Specify what type the UUID should be cast to. Default is `str`
:type cast_to: callable</doc>
<assign>
<var>${uuid}</var>
</assign>
<msg timestamp="20210322 03:17:07.622" level="INFO">${uuid} = dec18f1b-02a9-4f3f-a371-b729ee85ec7d</msg>
<status status="PASS" starttime="20210322 03:17:07.622" endtime="20210322 03:17:07.622"></status>
</kw>
<kw name="conectar accounts" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accounts</arg>
<arg>url=${account_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 03:17:07.624" level="INFO">Creating Session using : alias=accounts, url=https://banking-accounts-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 03:17:07.623" endtime="20210322 03:17:07.624"></status>
</kw>
<status status="PASS" starttime="20210322 03:17:07.623" endtime="20210322 03:17:07.624"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:17:07.625" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 03:17:07.625" endtime="20210322 03:17:07.625"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"operations": [</arg>
<arg>{</arg>
<arg>"amount": 9000000000000,</arg>
<arg>"authorization_code": "${uuid}",</arg>
<arg>"transaction_id": "${uuid}",</arg>
<arg>"id": "${uuid}",</arg>
<arg>"id_checking_account": "${account_external_key}",</arg>
<arg>"transfer_date": "2020-02-20T20:58:06.510Z",</arg>
<arg>"fee": 0,</arg>
<arg>"description": "Teste",</arg>
<arg>"object_type": "transfer",</arg>
<arg>"object_id": "${uuid}",</arg>
<arg>"dflag": "ACTIVE",</arg>
<arg>"created_at": "2019-10-14T20:58:06.510Z",</arg>
<arg>"type": "Transfer"</arg>
<arg>}</arg>
<arg>],</arg>
<arg>"reference_id": "Criando saldo na account"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 03:17:07.626" level="INFO">${body} = { "operations": [ { "amount": 9000000000000, "authorization_code": "dec18f1b-02a9-4f3f-a371-b729ee85ec7d", "transaction_id": "dec18f1b-02a9-4f3f-a371-b729ee85ec7d", "id": "dec18f1b-02a9-4f3f-a371-b729...</msg>
<status status="PASS" starttime="20210322 03:17:07.625" endtime="20210322 03:17:07.626"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accounts</arg>
<arg>/admin/internal_operation/authorization/${uuid}</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:17:07.627" level="INFO">POST Request using : uri=/admin/internal_operation/authorization/dec18f1b-02a9-4f3f-a371-b729ee85ec7d, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "operations": [ { "amount": 9000000000000, "authorization_code": "dec18f1b-02a9-4f3f-a371-b729ee85ec7d", "transaction_id": "dec18f1b-02a9-4f3f-a371-b729ee85ec7d", "id": "dec18f1b-02a9-4f3f-a371-b729ee85ec7d", "id_checking_account": "5c8ab6ddd1b04fcaa626c03cee1c0e47", "transfer_date": "2020-02-20T20:58:06.510Z", "fee": 0, "description": "Teste", "object_type": "transfer", "object_id": "dec18f1b-02a9-4f3f-a371-b729ee85ec7d", "dflag": "ACTIVE", "created_at": "2019-10-14T20:58:06.510Z", "type": "Transfer" } ], "reference_id": "Criando saldo na account" } 
json=None</msg>
<msg timestamp="20210322 03:17:08.257" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:17:07.626" endtime="20210322 03:17:08.257"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.status_code}' == 200</arg>
<arg>Log</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:17:08.258" endtime="20210322 03:17:08.260"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.status_code}' == 200</arg>
<arg>Log</arg>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:17:08.261" endtime="20210322 03:17:08.262"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.status_code}' == 200</arg>
<arg>Log</arg>
<arg>${response.status_code}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:17:08.263" endtime="20210322 03:17:08.264"></status>
</kw>
<status status="PASS" starttime="20210322 03:17:07.620" endtime="20210322 03:17:08.265"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${pix_type}' == 'phone'</arg>
<arg>criar chave pix</arg>
<arg>${pix_type}</arg>
<arg>${phone_pix}</arg>
<arg>ELSE IF</arg>
<arg>'${pix_type}' == 'email'</arg>
<arg>criar chave pix</arg>
<arg>${pix_type}</arg>
<arg>${email_pix}</arg>
<arg>ELSE IF</arg>
<arg>'${pix_type}' == 'evp'</arg>
<arg>criar chave pix</arg>
<arg>${pix_type}</arg>
<arg>${EMPTY}</arg>
<arg>ELSE IF</arg>
<arg>'${pix_type}' == 'national_registration'</arg>
<arg>criar chave pix</arg>
<arg>${pix_type}</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw name="criar chave pix" library="pix_dict_create_entry">
<arguments>
<arg>${pix_type}</arg>
<arg>${email_pix}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 03:17:08.270" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 03:17:08.269" endtime="20210322 03:17:08.271"></status>
</kw>
<status status="PASS" starttime="20210322 03:17:08.268" endtime="20210322 03:17:08.271"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${type}</arg>
</arguments>
<msg timestamp="20210322 03:17:08.272" level="INFO">${type} = email</msg>
<status status="PASS" starttime="20210322 03:17:08.272" endtime="20210322 03:17:08.272"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210322 03:17:08.273" level="INFO">${value} = vsales@ribeiro.com</msg>
<status status="PASS" starttime="20210322 03:17:08.273" endtime="20210322 03:17:08.273"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:17:08.274" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 03:17:08.274" endtime="20210322 03:17:08.274"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "${type}",</arg>
<arg>"value": "${value}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 03:17:08.275" level="INFO">${body} = { "type": "email", "value": "vsales@ribeiro.com" }</msg>
<status status="PASS" starttime="20210322 03:17:08.275" endtime="20210322 03:17:08.275"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:17:08.277" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/ccaefe9bc55b453b87ac0fe86b9c574a/accounts/5c8ab6ddd1b04fcaa626c03cee1c0e47/entries, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "email", "value": "vsales@ribeiro.com" } 
json=None</msg>
<msg timestamp="20210322 03:17:08.958" level="INFO">${response} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20210322 03:17:08.276" endtime="20210322 03:17:08.959"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:17:08.961" level="INFO">{'id': '3e8dcd4085ac40b39e53d96d4d895df8', 'status': 'waiting_ownership_verification', 'created_at': '2021-03-22T03:17:09.817', 'updated_at': '2021-03-22T03:17:09.817', 'key': {'value': 'vsales@ribeiro.com', 'type': 'email'}, 'account': {'id': '5c8ab6ddd1b04fcaa626c03cee1c0e47', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': 'ccaefe9bc55b453b87ac0fe86b9c574a', 'owner': {'name': 'Holder de teste', 'national_registration': '16948057276', 'type': 'individual'}, 'routing_number': '001', 'number': '4093626381', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}, 'resource': 'pix.entry'}</msg>
<status status="PASS" starttime="20210322 03:17:08.960" endtime="20210322 03:17:08.961"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:17:08.963" level="INFO">daf4512352c739b6</msg>
<status status="PASS" starttime="20210322 03:17:08.962" endtime="20210322 03:17:08.964"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 03:17:08.965" level="INFO">202</msg>
<status status="PASS" starttime="20210322 03:17:08.964" endtime="20210322 03:17:08.966"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:17:08.968" level="INFO">${response} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20210322 03:17:08.967" endtime="20210322 03:17:08.968"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${entry_external_key}</var>
</assign>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:17:08.971" endtime="20210322 03:17:08.972"></status>
</kw>
<msg timestamp="20210322 03:17:08.972" level="INFO">${entry_external_key} = 3e8dcd4085ac40b39e53d96d4d895df8</msg>
<status status="PASS" starttime="20210322 03:17:08.969" endtime="20210322 03:17:08.972"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${entry_external_key}</arg>
</arguments>
<msg timestamp="20210322 03:17:08.974" level="INFO">${entry_external_key} = 3e8dcd4085ac40b39e53d96d4d895df8</msg>
<status status="PASS" starttime="20210322 03:17:08.973" endtime="20210322 03:17:08.974"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["key"]["value"]}</arg>
</arguments>
<assign>
<var>${entry_key_value}</var>
</assign>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["key"]["value"]}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:17:08.976" endtime="20210322 03:17:08.978"></status>
</kw>
<msg timestamp="20210322 03:17:08.978" level="INFO">${entry_key_value} = vsales@ribeiro.com</msg>
<status status="PASS" starttime="20210322 03:17:08.975" endtime="20210322 03:17:08.978"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${entry_key_value}</arg>
</arguments>
<msg timestamp="20210322 03:17:08.979" level="INFO">${entry_key_value} = vsales@ribeiro.com</msg>
<status status="PASS" starttime="20210322 03:17:08.978" endtime="20210322 03:17:08.979"></status>
</kw>
<status status="PASS" starttime="20210322 03:17:08.267" endtime="20210322 03:17:08.980"></status>
</kw>
<status status="PASS" starttime="20210322 03:17:08.265" endtime="20210322 03:17:08.980"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${pix_type}' == 'phone'</arg>
<arg>buscar verification code</arg>
<arg>${holder_external_key}</arg>
<arg>${account_external_key}</arg>
<arg>${entry_external_key}</arg>
<arg>ELSE IF</arg>
<arg>'${pix_type}' == 'email'</arg>
<arg>buscar verification code</arg>
<arg>${holder_external_key}</arg>
<arg>${account_external_key}</arg>
<arg>${entry_external_key}</arg>
</arguments>
<kw name="buscar verification code" library="pix_dict_verification_code">
<arguments>
<arg>${holder_external_key}</arg>
<arg>${account_external_key}</arg>
<arg>${entry_external_key}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 03:17:08.984" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 03:17:08.983" endtime="20210322 03:17:08.984"></status>
</kw>
<status status="PASS" starttime="20210322 03:17:08.982" endtime="20210322 03:17:08.985"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/admin/internal_operation/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries/${entry_external_key}/code</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:17:08.985" level="INFO">GET Request using : uri=/admin/internal_operation/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/ccaefe9bc55b453b87ac0fe86b9c574a/accounts/5c8ab6ddd1b04fcaa626c03cee1c0e47/entries/3e8dcd4085ac40b39e53d96d4d895df8/code, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 03:17:09.613" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:17:08.985" endtime="20210322 03:17:09.613"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:17:09.615" level="INFO">{'code': '4584'}</msg>
<status status="PASS" starttime="20210322 03:17:09.614" endtime="20210322 03:17:09.616"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:17:09.617" level="INFO">949cb9301c02cb31</msg>
<status status="PASS" starttime="20210322 03:17:09.616" endtime="20210322 03:17:09.618"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 03:17:09.619" level="INFO">200</msg>
<status status="PASS" starttime="20210322 03:17:09.619" endtime="20210322 03:17:09.620"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:17:09.622" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 03:17:09.621" endtime="20210322 03:17:09.622"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["code"]}</arg>
</arguments>
<assign>
<var>${verification_code}</var>
</assign>
<msg timestamp="20210322 03:17:09.625" level="INFO">${verification_code} = 4584</msg>
<status status="PASS" starttime="20210322 03:17:09.623" endtime="20210322 03:17:09.625"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${verification_code}</arg>
</arguments>
<msg timestamp="20210322 03:17:09.627" level="INFO">${verification_code} = 4584</msg>
<status status="PASS" starttime="20210322 03:17:09.626" endtime="20210322 03:17:09.627"></status>
</kw>
<status status="PASS" starttime="20210322 03:17:08.982" endtime="20210322 03:17:09.627"></status>
</kw>
<status status="PASS" starttime="20210322 03:17:08.980" endtime="20210322 03:17:09.627"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${pix_type}' == 'phone'</arg>
<arg>confirmar propriedade da chave pix</arg>
<arg>${verification_code}</arg>
<arg>${holder_external_key}</arg>
<arg>${account_external_key}</arg>
<arg>${entry_external_key}</arg>
<arg>ELSE IF</arg>
<arg>'${pix_type}' == 'email'</arg>
<arg>confirmar propriedade da chave pix</arg>
<arg>${verification_code}</arg>
<arg>${holder_external_key}</arg>
<arg>${account_external_key}</arg>
<arg>${entry_external_key}</arg>
</arguments>
<kw name="confirmar propriedade da chave pix" library="pix_dict_confirm_propriety">
<arguments>
<arg>${verification_code}</arg>
<arg>${holder_external_key}</arg>
<arg>${account_external_key}</arg>
<arg>${entry_external_key}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 03:17:09.632" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 03:17:09.631" endtime="20210322 03:17:09.633"></status>
</kw>
<status status="PASS" starttime="20210322 03:17:09.631" endtime="20210322 03:17:09.633"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:17:09.634" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 03:17:09.634" endtime="20210322 03:17:09.634"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"code": "${verification_code}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 03:17:09.635" level="INFO">${body} = { "code": "4584" }</msg>
<status status="PASS" starttime="20210322 03:17:09.635" endtime="20210322 03:17:09.635"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries/${entry_external_key}/ownership</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:17:09.637" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/ccaefe9bc55b453b87ac0fe86b9c574a/accounts/5c8ab6ddd1b04fcaa626c03cee1c0e47/entries/3e8dcd4085ac40b39e53d96d4d895df8/ownership, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "code": "4584" } 
json=None</msg>
<msg timestamp="20210322 03:17:11.101" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:17:09.636" endtime="20210322 03:17:11.101"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:17:11.102" level="INFO">{'id': '3e8dcd4085ac40b39e53d96d4d895df8', 'status': 'active', 'created_at': '2021-03-22T03:17:09.817', 'updated_at': '2021-03-22T03:17:11.980', 'key': {'value': 'vsales@ribeiro.com', 'type': 'email'}, 'account': {'id': '5c8ab6ddd1b04fcaa626c03cee1c0e47', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': 'ccaefe9bc55b453b87ac0fe86b9c574a', 'owner': {'name': 'Holder de teste', 'national_registration': '16948057276', 'type': 'individual'}, 'routing_number': '001', 'number': '4093626381', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}, 'resource': 'pix.entry'}</msg>
<status status="PASS" starttime="20210322 03:17:11.102" endtime="20210322 03:17:11.102"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:17:11.103" level="INFO">82ef66d2c9d5a325</msg>
<status status="PASS" starttime="20210322 03:17:11.103" endtime="20210322 03:17:11.103"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 03:17:11.104" level="INFO">201</msg>
<status status="PASS" starttime="20210322 03:17:11.104" endtime="20210322 03:17:11.104"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:17:11.105" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:17:11.105" endtime="20210322 03:17:11.105"></status>
</kw>
<status status="PASS" starttime="20210322 03:17:09.629" endtime="20210322 03:17:11.105"></status>
</kw>
<status status="PASS" starttime="20210322 03:17:09.628" endtime="20210322 03:17:11.105"></status>
</kw>
<kw name="validar ativaÃ§Ã£o da chave de endereÃ§amento" library="asserts">
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["status"]}</arg>
<arg>active</arg>
</arguments>
<status status="PASS" starttime="20210322 03:17:11.106" endtime="20210322 03:17:11.107"></status>
</kw>
<status status="PASS" starttime="20210322 03:17:11.106" endtime="20210322 03:17:11.107"></status>
</kw>
<status status="PASS" starttime="20210322 03:17:04.297" endtime="20210322 03:17:11.107"></status>
</kw>
<kw name="criar pagamento pix com dados completos" library="pix_payments_create_pix_payment">
<arguments>
<arg>amount=${amount}</arg>
<arg>creditor_account_number=${creditor_account_number}</arg>
<arg>creditor_routing_number=${creditor_routing_number}</arg>
<arg>creditor_account_type=${creditor_account_type}</arg>
<arg>creditor_name=${creditor_name}</arg>
<arg>creditor_national_registration=${creditor_national_registration}</arg>
<arg>creditor_psp=${creditor_psp}</arg>
<arg>pix_description=${pix_description}</arg>
</arguments>
<kw name="conectar pix-payments" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-payments</arg>
<arg>url=${pix_payments_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 03:17:11.109" level="INFO">Creating Session using : alias=pix-payments, url=https://banking-pix-payments-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 03:17:11.109" endtime="20210322 03:17:11.110"></status>
</kw>
<status status="PASS" starttime="20210322 03:17:11.108" endtime="20210322 03:17:11.110"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 03:17:11.110" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 03:17:11.110" endtime="20210322 03:17:11.110"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"amount": ${amount},</arg>
<arg>"creditor": {</arg>
<arg>"account": {</arg>
<arg>"number": "${creditor_account_number}",</arg>
<arg>"routing_number": "${creditor_routing_number}",</arg>
<arg>"type": "${creditor_account_type}"</arg>
<arg>},</arg>
<arg>"name": "${creditor_name}",</arg>
<arg>"national_registration": "${creditor_national_registration}",</arg>
<arg>"psp": "${creditor_psp}"</arg>
<arg>},</arg>
<arg>"description": "${pix_description}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 03:17:11.112" level="INFO">${body} = { "amount": 100, "creditor": { "account": { "number": "0243882974", "routing_number": "0500", "type": "cacc" }, "name": "Massa iti PF NauNNMO", "national_registration": "42808422644", "psp": "17192451...</msg>
<status status="PASS" starttime="20210322 03:17:11.111" endtime="20210322 03:17:11.112"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-payments</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/pix/holders/${holder_external_key}/accounts/${account_external_key}/payments</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 03:17:11.112" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/pix/holders/ccaefe9bc55b453b87ac0fe86b9c574a/accounts/5c8ab6ddd1b04fcaa626c03cee1c0e47/payments, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "amount": 100, "creditor": { "account": { "number": "0243882974", "routing_number": "0500", "type": "cacc" }, "name": "Massa iti PF NauNNMO", "national_registration": "42808422644", "psp": "17192451" }, "description": "Envio de PIX" } 
json=None</msg>
<msg timestamp="20210322 03:17:11.767" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:17:11.112" endtime="20210322 03:17:11.767"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 03:17:11.770" level="INFO">{'id': '727b66c04b48414f82f2119e7b1c8413', 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'status': 'pending', 'end_to_end_id': 'E1946824220210322061768d43243ea8', 'message_id': 'M1946824245d15515942120544846622', 'amount': 100, 'created_at': '2021-03-22T03:17:12.577542', 'description': 'Envio de PIX', 'debtor': {'national_registration': '16948057276', 'name': 'Holder de teste', 'type': 'individual', 'holder_id': 'ccaefe9bc55b453b87ac0fe86b9c574a', 'account': {'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}, 'digital_account_id': '5c8ab6ddd1b04fcaa626c03cee1c0e47', 'number': '4093626381', 'routing_number': '0001', 'type': 'cacc'}}, 'creditor': {'national_registration': '42808422644', 'name': 'Massa iti PF NauNNMO', 'type': 'individual', 'account': {'psp': {'code': '17192451'}, 'number': '0243882974', 'routing_number': '0500', 'type': 'cacc'}}, 'refunded_amount': 0}</msg>
<status status="PASS" starttime="20210322 03:17:11.768" endtime="20210322 03:17:11.770"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 03:17:11.772" level="INFO">f26b0e00f3028f9c</msg>
<status status="PASS" starttime="20210322 03:17:11.771" endtime="20210322 03:17:11.772"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 03:17:11.774" level="INFO">201</msg>
<status status="PASS" starttime="20210322 03:17:11.773" endtime="20210322 03:17:11.774"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 03:17:11.775" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 03:17:11.775" endtime="20210322 03:17:11.776"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${payment_external_key}</var>
</assign>
<msg timestamp="20210322 03:17:11.778" level="INFO">${payment_external_key} = 727b66c04b48414f82f2119e7b1c8413</msg>
<status status="PASS" starttime="20210322 03:17:11.776" endtime="20210322 03:17:11.778"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${payment_external_key}</arg>
</arguments>
<msg timestamp="20210322 03:17:11.779" level="INFO">${payment_external_key} = 727b66c04b48414f82f2119e7b1c8413</msg>
<status status="PASS" starttime="20210322 03:17:11.778" endtime="20210322 03:17:11.779"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["end_to_end_id"]}</arg>
</arguments>
<assign>
<var>${end_to_end_id}</var>
</assign>
<msg timestamp="20210322 03:17:11.781" level="INFO">${end_to_end_id} = E1946824220210322061768d43243ea8</msg>
<status status="PASS" starttime="20210322 03:17:11.780" endtime="20210322 03:17:11.781"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${end_to_end_id}</arg>
</arguments>
<msg timestamp="20210322 03:17:11.782" level="INFO">${end_to_end_id} = E1946824220210322061768d43243ea8</msg>
<status status="PASS" starttime="20210322 03:17:11.781" endtime="20210322 03:17:11.782"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["message_id"]}</arg>
</arguments>
<assign>
<var>${message_id}</var>
</assign>
<msg timestamp="20210322 03:17:11.786" level="INFO">${message_id} = M1946824245d15515942120544846622</msg>
<status status="PASS" starttime="20210322 03:17:11.785" endtime="20210322 03:17:11.786"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${message_id}</arg>
</arguments>
<msg timestamp="20210322 03:17:11.787" level="INFO">${message_id} = M1946824245d15515942120544846622</msg>
<status status="PASS" starttime="20210322 03:17:11.786" endtime="20210322 03:17:11.787"></status>
</kw>
<status status="PASS" starttime="20210322 03:17:11.107" endtime="20210322 03:17:11.787"></status>
</kw>
<kw name="validar pagamento pix" library="asserts">
<arguments>
<arg>marketplace_external_key=${marketplace_external_key}</arg>
<arg>status_pix_payments=pending</arg>
<arg>amount=${amount}</arg>
<arg>pix_description=${pix_description}</arg>
<arg>debitor_national_registration=${national_registration}</arg>
<arg>debitor_name=${holder_name}</arg>
<arg>debitor_type=${holder_type}</arg>
<arg>debitor_holder_id=${holder_external_key}</arg>
<arg>debtor_account_psp_code=${debtor_account_psp_code}</arg>
<arg>debtor_account_psp_name=${debtor_account_psp_name}</arg>
<arg>debtor_digital_account=${account_external_key}</arg>
<arg>debtor_account_number=${account_number}</arg>
<arg>debtor_account_routing_number=${account_routing_number}</arg>
<arg>debtor_account_type=${debtor_account_type}</arg>
<arg>creditor_national_registration=${creditor_national_registration}</arg>
<arg>creditor_name=${creditor_name}</arg>
<arg>creditor_type=individual</arg>
<arg>creditor_account_psp_code=${creditor_psp}</arg>
<arg>creditor_account_number=${creditor_account_number}</arg>
<arg>creditor_account_routing_number=${creditor_routing_number}</arg>
<arg>creditor_account_type=${creditor_account_type}</arg>
<arg>refunded_amount=0</arg>
</arguments>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<arguments>
<arg>result_format=datetime</arg>
</arguments>
<assign>
<var>${date}</var>
</assign>
<msg timestamp="20210322 03:17:11.792" level="INFO">${date} = 2021-03-22 03:17:11.791924</msg>
<status status="PASS" starttime="20210322 03:17:11.791" endtime="20210322 03:17:11.792"></status>
</kw>
<kw name="Convert Date" library="DateTime">
<doc>Converts between supported `date formats`.</doc>
<arguments>
<arg>${date}</arg>
<arg>exclude_millis=yes</arg>
<arg>result_format=%Y-%m-%d</arg>
<arg>date_format=%d-%m-%Y</arg>
</arguments>
<assign>
<var>${date}</var>
</assign>
<msg timestamp="20210322 03:17:11.793" level="INFO">${date} = 2021-03-22</msg>
<status status="PASS" starttime="20210322 03:17:11.792" endtime="20210322 03:17:11.793"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["marketplace_id"]}</arg>
<arg>${marketplace_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:17:11.793" endtime="20210322 03:17:11.794"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["status"]}</arg>
<arg>${status_pix_payments}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:17:11.794" endtime="20210322 03:17:11.795"></status>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${response.json()["end_to_end_id"]}</arg>
</arguments>
<msg timestamp="20210322 03:17:11.796" level="INFO">Length is 32</msg>
<status status="PASS" starttime="20210322 03:17:11.795" endtime="20210322 03:17:11.796"></status>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${response.json()["message_id"]}</arg>
</arguments>
<msg timestamp="20210322 03:17:11.797" level="INFO">Length is 32</msg>
<status status="PASS" starttime="20210322 03:17:11.796" endtime="20210322 03:17:11.797"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.json()["amount"]}</arg>
<arg>${amount}</arg>
</arguments>
<msg timestamp="20210322 03:17:11.798" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 03:17:11.797" endtime="20210322 03:17:11.798"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["description"]}</arg>
<arg>${pix_description}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:17:11.798" endtime="20210322 03:17:11.798"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["national_registration"]}</arg>
<arg>${debitor_national_registration}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:17:11.799" endtime="20210322 03:17:11.799"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["name"]}</arg>
<arg>${debitor_name}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:17:11.799" endtime="20210322 03:17:11.800"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["type"]}</arg>
<arg>${debitor_type}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:17:11.800" endtime="20210322 03:17:11.801"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["holder_id"]}</arg>
<arg>${debitor_holder_id}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:17:11.801" endtime="20210322 03:17:11.802"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["account"]["psp"]["code"]}</arg>
<arg>${debtor_account_psp_code}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:17:11.804" endtime="20210322 03:17:11.804"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["account"]["psp"]["name"]}</arg>
<arg>${debtor_account_psp_name}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:17:11.804" endtime="20210322 03:17:11.804"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["account"]["digital_account_id"]}</arg>
<arg>${debtor_digital_account}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:17:11.805" endtime="20210322 03:17:11.805"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["account"]["number"]}</arg>
<arg>${account_number}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:17:11.805" endtime="20210322 03:17:11.806"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["account"]["routing_number"]}</arg>
<arg>0${debtor_account_routing_number}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:17:11.806" endtime="20210322 03:17:11.807"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["account"]["type"]}</arg>
<arg>${debtor_account_type}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:17:11.807" endtime="20210322 03:17:11.808"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["creditor"]["national_registration"]}</arg>
<arg>${creditor_national_registration}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:17:11.808" endtime="20210322 03:17:11.808"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["creditor"]["name"]}</arg>
<arg>${creditor_name}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:17:11.809" endtime="20210322 03:17:11.809"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["creditor"]["type"]}</arg>
<arg>${creditor_type}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:17:11.809" endtime="20210322 03:17:11.809"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["creditor"]["account"]["psp"]["code"]}</arg>
<arg>${creditor_account_psp_code}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:17:11.810" endtime="20210322 03:17:11.810"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["creditor"]["account"]["number"]}</arg>
<arg>${creditor_account_number}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:17:11.810" endtime="20210322 03:17:11.811"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["creditor"]["account"]["routing_number"]}</arg>
<arg>${creditor_account_routing_number}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:17:11.811" endtime="20210322 03:17:11.811"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["creditor"]["account"]["type"]}</arg>
<arg>${creditor_account_type}</arg>
</arguments>
<status status="PASS" starttime="20210322 03:17:11.812" endtime="20210322 03:17:11.812"></status>
</kw>
<status status="PASS" starttime="20210322 03:17:11.789" endtime="20210322 03:17:11.812"></status>
</kw>
<doc>Envio de PIX com sucesso para uma conta Iti, a partir de um Holder Business</doc>
<status status="PASS" starttime="20210322 03:17:04.296" endtime="20210322 03:17:11.813" critical="yes"></status>
</test>
<doc>Funcionalidade: Criar Chave de EndereÃ§amento
Eu, como um Holder, portador de uma conta ativa em Banking
Desejo criar uma pagamento PIX</doc>
<status status="FAIL" starttime="20210322 03:16:55.585" endtime="20210322 03:17:11.813"></status>
</suite>
<status status="FAIL" starttime="20210322 03:16:24.372" endtime="20210322 03:17:11.816"></status>
</suite>
<status status="FAIL" starttime="20210322 03:16:24.337" endtime="20210322 03:17:11.818"></status>
</suite>
<statistics>
<total>
<stat pass="2" fail="2">Critical Tests</stat>
<stat pass="2" fail="2">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="2" fail="2" id="s1" name="Pix-Payments">Pix-Payments</stat>
<stat pass="2" fail="2" id="s1-s1" name="Envio">Pix-Payments.Envio</stat>
<stat pass="1" fail="1" id="s1-s1-s1" name="Confirmar Pagamento PIX">Pix-Payments.Envio.Confirmar Pagamento PIX</stat>
<stat pass="1" fail="1" id="s1-s1-s2" name="Criar Pagamento PIX">Pix-Payments.Envio.Criar Pagamento PIX</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>

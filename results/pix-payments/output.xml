<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.8.1 on win32)" generated="20210323 19:03:36.910" rpa="false">
<suite id="s1" name="Receber Pagamento PIX" source="C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\tests\pix-payments\recebimento\Receber Pagamento PIX.robot">
<test id="s1-t1" name="Cenário: Receber pagamento PIX com end to end já recebido">
<kw name="criar chave pix ativa" library="pix_dict_create_active_key_pix">
<arguments>
<arg>individual</arg>
<arg>national_registration</arg>
</arguments>
<kw name="Random Number" library="FakerLibrary">
<doc>Returns a random number with 1 digit (default, when digits==None),
a random number with 0 to given number of digits, or a random number
with given number to given number of digits (when ``fix_len==True``).</doc>
<arguments>
<arg>digits=8</arg>
<arg>fix_len=True</arg>
</arguments>
<assign>
<var>${phone}</var>
</assign>
<msg timestamp="20210323 19:03:37.467" level="INFO">${phone} = 44575148</msg>
<status status="PASS" starttime="20210323 19:03:37.467" endtime="20210323 19:03:37.467"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>+55219${phone}</arg>
</arguments>
<assign>
<var>${phone_pix}</var>
</assign>
<msg timestamp="20210323 19:03:37.468" level="INFO">${phone_pix} = +5521944575148</msg>
<status status="PASS" starttime="20210323 19:03:37.468" endtime="20210323 19:03:37.468"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${phone_pix}</arg>
</arguments>
<msg timestamp="20210323 19:03:37.469" level="INFO">${phone_pix} = +5521944575148</msg>
<status status="PASS" starttime="20210323 19:03:37.468" endtime="20210323 19:03:37.469"></status>
</kw>
<kw name="Email" library="FakerLibrary">
<assign>
<var>${email_pix}</var>
</assign>
<msg timestamp="20210323 19:03:37.469" level="INFO">${email_pix} = da-rosamarina@yahoo.com.br</msg>
<status status="PASS" starttime="20210323 19:03:37.469" endtime="20210323 19:03:37.469"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${email_pix}</arg>
</arguments>
<msg timestamp="20210323 19:03:37.469" level="INFO">${email_pix} = da-rosamarina@yahoo.com.br</msg>
<status status="PASS" starttime="20210323 19:03:37.469" endtime="20210323 19:03:37.469"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${holder_type}' == 'business'</arg>
<arg>criar holder business ativo</arg>
<arg>ELSE IF</arg>
<arg>'${holder_type}' == 'individual'</arg>
<arg>criar holder individual ativo</arg>
</arguments>
<kw name="criar holder individual ativo" library="accreditation_create_holder_active">
<kw name="conectar accreditation" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accreditation</arg>
<arg>url=${accreditation_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210323 19:03:37.471" level="INFO">Creating Session using : alias=accreditation, url=https://banking-accreditation-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210323 19:03:37.470" endtime="20210323 19:03:37.472"></status>
</kw>
<status status="PASS" starttime="20210323 19:03:37.470" endtime="20210323 19:03:37.472"></status>
</kw>
<kw name="Cpf" library="FakerLibrary">
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210323 19:03:37.472" level="INFO">${national_registration} = 869.574.132-09</msg>
<status status="PASS" starttime="20210323 19:03:37.472" endtime="20210323 19:03:37.472"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${national_registration}</arg>
<arg>.</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210323 19:03:37.472" level="INFO">${national_registration} = 869574132-09</msg>
<status status="PASS" starttime="20210323 19:03:37.472" endtime="20210323 19:03:37.472"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${national_registration}</arg>
<arg>-</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210323 19:03:37.472" level="INFO">${national_registration} = 86957413209</msg>
<status status="PASS" starttime="20210323 19:03:37.472" endtime="20210323 19:03:37.472"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${national_registration}</arg>
</arguments>
<msg timestamp="20210323 19:03:37.473" level="INFO">${national_registration} = 86957413209</msg>
<status status="PASS" starttime="20210323 19:03:37.472" endtime="20210323 19:03:37.473"></status>
</kw>
<kw name="Rg" library="FakerLibrary">
<doc>Brazilian RG, return plain numbers.
Check:  https://www.ngmatematica.com/2014/02/como-determinar-o-digito-verificador-do.html</doc>
<assign>
<var>${identity_card}</var>
</assign>
<msg timestamp="20210323 19:03:37.482" level="INFO">${identity_card} = 15027483X</msg>
<status status="PASS" starttime="20210323 19:03:37.473" endtime="20210323 19:03:37.482"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${identity_card}</arg>
</arguments>
<msg timestamp="20210323 19:03:37.483" level="INFO">${identity_card} = 15027483X</msg>
<status status="PASS" starttime="20210323 19:03:37.483" endtime="20210323 19:03:37.483"></status>
</kw>
<kw name="criar holder individual" library="accreditation_post_holder_individual">
<arguments>
<arg>holder_type=individual</arg>
<arg>holder_name=${holder_name}</arg>
<arg>email=${email}</arg>
<arg>national_registration=${national_registration}</arg>
<arg>revenue=${revenue}</arg>
<arg>birthday=${birthday}</arg>
<arg>mothers_name=${mothers_name}</arg>
<arg>identity_card=${identity_card}</arg>
<arg>pep=false</arg>
<arg>cbo=${cbo}</arg>
</arguments>
<kw name="conectar accreditation" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accreditation</arg>
<arg>url=${accreditation_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210323 19:03:37.485" level="INFO">Creating Session using : alias=accreditation, url=https://banking-accreditation-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210323 19:03:37.485" endtime="20210323 19:03:37.486"></status>
</kw>
<status status="PASS" starttime="20210323 19:03:37.484" endtime="20210323 19:03:37.486"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_type}</arg>
</arguments>
<msg timestamp="20210323 19:03:37.486" level="INFO">${holder_type} = individual</msg>
<status status="PASS" starttime="20210323 19:03:37.486" endtime="20210323 19:03:37.486"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_name}</arg>
</arguments>
<msg timestamp="20210323 19:03:37.487" level="INFO">${holder_name} = Holder de teste</msg>
<status status="PASS" starttime="20210323 19:03:37.486" endtime="20210323 19:03:37.487"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210323 19:03:37.488" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210323 19:03:37.488" endtime="20210323 19:03:37.488"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "${holder_type}",</arg>
<arg>"name": "${holder_name}",</arg>
<arg>"email": "${email}",</arg>
<arg>"national_registration": "${national_registration}",</arg>
<arg>"revenue": ${revenue},</arg>
<arg>"birthday": "${birthday}",</arg>
<arg>"mothers_name": "${mothers_name}",</arg>
<arg>"identity_card": "${identity_card}",</arg>
<arg>"pep": false,</arg>
<arg>"cbo": ${cbo}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210323 19:03:37.489" level="INFO">${body} = { "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "86957413209", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder",...</msg>
<status status="PASS" starttime="20210323 19:03:37.488" endtime="20210323 19:03:37.489"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210323 19:03:37.489" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "86957413209", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder", "identity_card": "15027483X", "pep": false, "cbo": 821450 } 
json=None</msg>
<msg timestamp="20210323 19:03:38.229" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210323 19:03:37.489" endtime="20210323 19:03:38.229"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210323 19:03:38.230" level="INFO">{'id': '84c47eb937ae4c86a196733f240b924b', 'name': 'Holder de teste', 'revenue': 5500.0, 'email': 'teste@teste.com.br', 'status': 'waiting_info_and_documents', 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'marketplace_name': 'Marketplace de Teste', 'created_at': '2021-03-23T19:03:38.364386', 'updated_at': '2021-03-23T19:03:38.364388', 'type': 'individual', 'national_registration': '86957413209', 'birthday': '1988-04-23', 'mothers_name': 'Mãe do Holder', 'identity_card': '15027483X', 'pep': False, 'cbo': '821450', '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/84c47eb937ae4c86a196733f240b924b', 'type': 'GET'}, 'phones': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/84c47eb937ae4c86a196733f240b924b/phones', 'type': 'GET'}, 'addresses': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/84c47eb937ae4c86a196733f240b924b/addresses', 'type': 'GET'}, 'documents': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/84c47eb937ae4c86a196733f240b924b/documents', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210323 19:03:38.229" endtime="20210323 19:03:38.232"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210323 19:03:38.232" level="INFO">20f49e5d24392c1a</msg>
<status status="PASS" starttime="20210323 19:03:38.232" endtime="20210323 19:03:38.232"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${body}</arg>
</arguments>
<msg timestamp="20210323 19:03:38.232" level="INFO">{ "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "86957413209", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder", "identity_card": "15027483X", "pep": false, "cbo": 821450 }</msg>
<status status="PASS" starttime="20210323 19:03:38.232" endtime="20210323 19:03:38.232"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210323 19:03:38.233" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210323 19:03:38.233" endtime="20210323 19:03:38.233"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${holder_external_key}</var>
</assign>
<msg timestamp="20210323 19:03:38.234" level="INFO">${holder_external_key} = 84c47eb937ae4c86a196733f240b924b</msg>
<status status="PASS" starttime="20210323 19:03:38.233" endtime="20210323 19:03:38.234"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_external_key}</arg>
</arguments>
<msg timestamp="20210323 19:03:38.234" level="INFO">${holder_external_key} = 84c47eb937ae4c86a196733f240b924b</msg>
<status status="PASS" starttime="20210323 19:03:38.234" endtime="20210323 19:03:38.234"></status>
</kw>
<status status="PASS" starttime="20210323 19:03:37.483" endtime="20210323 19:03:38.234"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_name}</arg>
</arguments>
<msg timestamp="20210323 19:03:38.235" level="INFO">${holder_name} = Holder de teste</msg>
<status status="PASS" starttime="20210323 19:03:38.235" endtime="20210323 19:03:38.235"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210323 19:03:38.235" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210323 19:03:38.235" endtime="20210323 19:03:38.235"></status>
</kw>
<kw name="criar holder phone" library="accreditation_post_holder_phone">
<arguments>
<arg>21</arg>
<arg>51</arg>
<arg>996221236</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210323 19:03:38.236" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210323 19:03:38.236" endtime="20210323 19:03:38.236"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"area_code": "${phone_area_code}",</arg>
<arg>"country_code": "${phone_country_code}",</arg>
<arg>"number": "${phone_number}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210323 19:03:38.236" level="INFO">${body} = { "area_code": "21", "country_code": "51", "number": "996221236" }</msg>
<status status="PASS" starttime="20210323 19:03:38.236" endtime="20210323 19:03:38.237"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/phones</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210323 19:03:38.237" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/84c47eb937ae4c86a196733f240b924b/phones, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "area_code": "21", "country_code": "51", "number": "996221236" } 
json=None</msg>
<msg timestamp="20210323 19:03:38.524" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210323 19:03:38.237" endtime="20210323 19:03:38.525"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210323 19:03:38.525" level="INFO">{'id': 'f553d58dc505490fb9fe690d5977e85c', 'area_code': '21', 'country_code': '51', 'number': '996221236', 'main': True, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/84c47eb937ae4c86a196733f240b924b/phones/f553d58dc505490fb9fe690d5977e85c', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/84c47eb937ae4c86a196733f240b924b', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210323 19:03:38.525" endtime="20210323 19:03:38.525"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210323 19:03:38.525" level="INFO">a4b116556bf3a285</msg>
<status status="PASS" starttime="20210323 19:03:38.525" endtime="20210323 19:03:38.526"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210323 19:03:38.526" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210323 19:03:38.526" endtime="20210323 19:03:38.526"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${phone_external_key}</var>
</assign>
<msg timestamp="20210323 19:03:38.526" level="INFO">${phone_external_key} = f553d58dc505490fb9fe690d5977e85c</msg>
<status status="PASS" starttime="20210323 19:03:38.526" endtime="20210323 19:03:38.526"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${phone_external_key}</arg>
</arguments>
<msg timestamp="20210323 19:03:38.527" level="INFO">${phone_external_key} = f553d58dc505490fb9fe690d5977e85c</msg>
<status status="PASS" starttime="20210323 19:03:38.527" endtime="20210323 19:03:38.527"></status>
</kw>
<status status="PASS" starttime="20210323 19:03:38.235" endtime="20210323 19:03:38.527"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210323 19:03:38.527" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210323 19:03:38.527" endtime="20210323 19:03:38.527"></status>
</kw>
<kw name="criar holder address" library="accreditation_post_holder_address">
<arguments>
<arg>Rio de Janeiro</arg>
<arg>Rio de Janeiro</arg>
<arg>Brasil</arg>
<arg>Bairro de Testes</arg>
<arg>Rua de Testes</arg>
<arg>90</arg>
<arg>apto 200</arg>
<arg>21550987</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210323 19:03:38.528" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210323 19:03:38.528" endtime="20210323 19:03:38.528"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"city": "${city}",</arg>
<arg>"state": "${state}",</arg>
<arg>"country": "${country}",</arg>
<arg>"neighborhood": "${neighborhood}",</arg>
<arg>"street": "${street}",</arg>
<arg>"number": "${number}",</arg>
<arg>"complement": "${complement}",</arg>
<arg>"postal_code": "${postal_code}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210323 19:03:38.529" level="INFO">${body} = { "city": "Rio de Janeiro", "state": "Rio de Janeiro", "country": "Brasil", "neighborhood": "Bairro de Testes", "street": "Rua de Testes", "number": "90", "complement": "apto 200", "postal_code": "215...</msg>
<status status="PASS" starttime="20210323 19:03:38.528" endtime="20210323 19:03:38.529"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/addresses</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210323 19:03:38.529" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/84c47eb937ae4c86a196733f240b924b/addresses, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "city": "Rio de Janeiro", "state": "Rio de Janeiro", "country": "Brasil", "neighborhood": "Bairro de Testes", "street": "Rua de Testes", "number": "90", "complement": "apto 200", "postal_code": "21550987" } 
json=None</msg>
<msg timestamp="20210323 19:03:38.770" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210323 19:03:38.529" endtime="20210323 19:03:38.770"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210323 19:03:38.771" level="INFO">{'id': 'dacde6196d25401e93782feb6212e10a', 'street': 'Rua de Testes', 'number': '90', 'city': 'Rio de Janeiro', 'complement': 'apto 200', 'state': 'Rio de Janeiro', 'neighborhood': 'Bairro de Testes', 'postal_code': '21550987', 'country': 'Brasil', 'main': True, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/84c47eb937ae4c86a196733f240b924b/addresses/dacde6196d25401e93782feb6212e10a', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/84c47eb937ae4c86a196733f240b924b', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210323 19:03:38.771" endtime="20210323 19:03:38.771"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210323 19:03:38.771" level="INFO">5408f9bb8c991de0</msg>
<status status="PASS" starttime="20210323 19:03:38.771" endtime="20210323 19:03:38.771"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210323 19:03:38.773" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210323 19:03:38.773" endtime="20210323 19:03:38.773"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${address_external_key}</var>
</assign>
<msg timestamp="20210323 19:03:38.773" level="INFO">${address_external_key} = dacde6196d25401e93782feb6212e10a</msg>
<status status="PASS" starttime="20210323 19:03:38.773" endtime="20210323 19:03:38.773"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${address_external_key}</arg>
</arguments>
<msg timestamp="20210323 19:03:38.773" level="INFO">${address_external_key} = dacde6196d25401e93782feb6212e10a</msg>
<status status="PASS" starttime="20210323 19:03:38.773" endtime="20210323 19:03:38.773"></status>
</kw>
<status status="PASS" starttime="20210323 19:03:38.528" endtime="20210323 19:03:38.773"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210323 19:03:38.773" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210323 19:03:38.773" endtime="20210323 19:03:38.773"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>SELFIE</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210323 19:03:38.775" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210323 19:03:38.775" endtime="20210323 19:03:38.775"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>${EXECDIR}./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210323 19:03:38.775" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210323 19:03:38.775" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210323 19:03:38.775" endtime="20210323 19:03:38.776"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210323 19:03:38.776" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/84c47eb937ae4c86a196733f240b924b/documents?type=SELFIE, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210323 19:03:39.074" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210323 19:03:38.776" endtime="20210323 19:03:39.074"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210323 19:03:39.075" level="INFO">{'id': 'cad02b57ea2c4f1fb6f1f20a40743ab0', 'document_type': 'selfie', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/84c47eb937ae4c86a196733f240b924b/documents/cad02b57ea2c4f1fb6f1f20a40743ab0', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/84c47eb937ae4c86a196733f240b924b', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/84c47eb937ae4c86a196733f240b924b/documents/cad02b57ea2c4f1fb6f1f20a40743ab0/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210323 19:03:39.075" endtime="20210323 19:03:39.075"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210323 19:03:39.075" level="INFO">bf9dd81ddd6a2249</msg>
<status status="PASS" starttime="20210323 19:03:39.075" endtime="20210323 19:03:39.075"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210323 19:03:39.076" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210323 19:03:39.076" endtime="20210323 19:03:39.076"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210323 19:03:39.076" level="INFO">${document_external_key} = cad02b57ea2c4f1fb6f1f20a40743ab0</msg>
<status status="PASS" starttime="20210323 19:03:39.076" endtime="20210323 19:03:39.076"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210323 19:03:39.076" level="INFO">${document_external_key} = cad02b57ea2c4f1fb6f1f20a40743ab0</msg>
<status status="PASS" starttime="20210323 19:03:39.076" endtime="20210323 19:03:39.076"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${EXECDIR}./../../images/accreditation/image.jpg</arg>
</arguments>
<status status="PASS" starttime="20210323 19:03:39.076" endtime="20210323 19:03:39.077"></status>
</kw>
<status status="PASS" starttime="20210323 19:03:38.773" endtime="20210323 19:03:39.077"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210323 19:03:39.077" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210323 19:03:39.077" endtime="20210323 19:03:39.077"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>RG_FRENTE</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210323 19:03:39.079" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210323 19:03:39.079" endtime="20210323 19:03:39.079"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>${EXECDIR}./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210323 19:03:39.079" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210323 19:03:39.080" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210323 19:03:39.079" endtime="20210323 19:03:39.080"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210323 19:03:39.081" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/84c47eb937ae4c86a196733f240b924b/documents?type=RG_FRENTE, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210323 19:03:39.406" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210323 19:03:39.080" endtime="20210323 19:03:39.406"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210323 19:03:39.407" level="INFO">{'id': '93c705cc5ab44d48a0b579b47f8254be', 'document_type': 'rg_frente', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/84c47eb937ae4c86a196733f240b924b/documents/93c705cc5ab44d48a0b579b47f8254be', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/84c47eb937ae4c86a196733f240b924b', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/84c47eb937ae4c86a196733f240b924b/documents/93c705cc5ab44d48a0b579b47f8254be/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210323 19:03:39.406" endtime="20210323 19:03:39.407"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210323 19:03:39.407" level="INFO">6502b4aff14e3ba7</msg>
<status status="PASS" starttime="20210323 19:03:39.407" endtime="20210323 19:03:39.407"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210323 19:03:39.408" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210323 19:03:39.408" endtime="20210323 19:03:39.408"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210323 19:03:39.409" level="INFO">${document_external_key} = 93c705cc5ab44d48a0b579b47f8254be</msg>
<status status="PASS" starttime="20210323 19:03:39.408" endtime="20210323 19:03:39.409"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210323 19:03:39.409" level="INFO">${document_external_key} = 93c705cc5ab44d48a0b579b47f8254be</msg>
<status status="PASS" starttime="20210323 19:03:39.409" endtime="20210323 19:03:39.409"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${EXECDIR}./../../images/accreditation/image.jpg</arg>
</arguments>
<status status="PASS" starttime="20210323 19:03:39.410" endtime="20210323 19:03:39.410"></status>
</kw>
<status status="PASS" starttime="20210323 19:03:39.077" endtime="20210323 19:03:39.410"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210323 19:03:39.411" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210323 19:03:39.411" endtime="20210323 19:03:39.411"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>RG_VERSO</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210323 19:03:39.412" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210323 19:03:39.412" endtime="20210323 19:03:39.412"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>${EXECDIR}./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210323 19:03:39.413" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210323 19:03:39.414" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210323 19:03:39.412" endtime="20210323 19:03:39.414"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210323 19:03:39.415" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/84c47eb937ae4c86a196733f240b924b/documents?type=RG_VERSO, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210323 19:03:39.674" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210323 19:03:39.414" endtime="20210323 19:03:39.674"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210323 19:03:39.675" level="INFO">{'id': '6772c85546264c67befce066b831bdb2', 'document_type': 'rg_verso', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/84c47eb937ae4c86a196733f240b924b/documents/6772c85546264c67befce066b831bdb2', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/84c47eb937ae4c86a196733f240b924b', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/84c47eb937ae4c86a196733f240b924b/documents/6772c85546264c67befce066b831bdb2/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210323 19:03:39.675" endtime="20210323 19:03:39.676"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210323 19:03:39.676" level="INFO">dcf0098e3394df51</msg>
<status status="PASS" starttime="20210323 19:03:39.676" endtime="20210323 19:03:39.676"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210323 19:03:39.676" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210323 19:03:39.676" endtime="20210323 19:03:39.677"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210323 19:03:39.677" level="INFO">${document_external_key} = 6772c85546264c67befce066b831bdb2</msg>
<status status="PASS" starttime="20210323 19:03:39.677" endtime="20210323 19:03:39.677"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210323 19:03:39.677" level="INFO">${document_external_key} = 6772c85546264c67befce066b831bdb2</msg>
<status status="PASS" starttime="20210323 19:03:39.677" endtime="20210323 19:03:39.678"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${EXECDIR}./../../images/accreditation/image.jpg</arg>
</arguments>
<status status="PASS" starttime="20210323 19:03:39.678" endtime="20210323 19:03:39.678"></status>
</kw>
<status status="PASS" starttime="20210323 19:03:39.411" endtime="20210323 19:03:39.678"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210323 19:03:39.679" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210323 19:03:39.679" endtime="20210323 19:03:39.679"></status>
</kw>
<kw name="solicitar aprovação do holder" library="accreditation_request_approval">
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210323 19:03:39.680" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210323 19:03:39.680" endtime="20210323 19:03:39.680"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/approval</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210323 19:03:39.681" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/84c47eb937ae4c86a196733f240b924b/approval, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data=None 
json=None</msg>
<msg timestamp="20210323 19:03:40.018" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210323 19:03:39.680" endtime="20210323 19:03:40.018"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210323 19:03:40.018" level="INFO">{'message': 'Approval request accepted successfully. Processing analysis'}</msg>
<status status="PASS" starttime="20210323 19:03:40.018" endtime="20210323 19:03:40.018"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210323 19:03:40.018" level="INFO">9846a34d83f9a271</msg>
<status status="PASS" starttime="20210323 19:03:40.018" endtime="20210323 19:03:40.018"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210323 19:03:40.018" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210323 19:03:40.018" endtime="20210323 19:03:40.019"></status>
</kw>
<status status="PASS" starttime="20210323 19:03:39.679" endtime="20210323 19:03:40.019"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210323 19:03:40.019" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210323 19:03:40.019" endtime="20210323 19:03:40.019"></status>
</kw>
<kw name="recebendo notificação de aprovação" library="accreditation_risk_notification">
<kw name="Uuid 4" library="FakerLibrary">
<doc>Generates a random UUID4 string.
:param cast_to: Specify what type the UUID should be cast to. Default is `str`
:type cast_to: callable</doc>
<assign>
<var>${assessment_id}</var>
</assign>
<msg timestamp="20210323 19:03:40.020" level="INFO">${assessment_id} = ef827b30-02d3-4e9a-b89f-9cac65d06e47</msg>
<status status="PASS" starttime="20210323 19:03:40.019" endtime="20210323 19:03:40.020"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>year</arg>
</arguments>
<assign>
<var>${year}</var>
</assign>
<msg timestamp="20210323 19:03:40.020" level="INFO">${year} = 2021</msg>
<status status="PASS" starttime="20210323 19:03:40.020" endtime="20210323 19:03:40.020"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>month</arg>
</arguments>
<assign>
<var>${month}</var>
</assign>
<msg timestamp="20210323 19:03:40.020" level="INFO">${month} = 03</msg>
<status status="PASS" starttime="20210323 19:03:40.020" endtime="20210323 19:03:40.021"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>day</arg>
</arguments>
<assign>
<var>${day}</var>
</assign>
<msg timestamp="20210323 19:03:40.021" level="INFO">${day} = 23</msg>
<status status="PASS" starttime="20210323 19:03:40.021" endtime="20210323 19:03:40.021"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210323 19:03:40.021" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210323 19:03:40.021" endtime="20210323 19:03:40.021"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "risk.assessment.result",</arg>
<arg>"resource": "business.holder",</arg>
<arg>"created_at": "${year}-${month}-${day} 15:28:56.747Z",</arg>
<arg>"marketplace_id": "${marketplace_external_key}",</arg>
<arg>"object": {</arg>
<arg>"result": "APPROVED",</arg>
<arg>"holder_id": "${holder_external_key}",</arg>
<arg>"applicant_id": "${application_external_key}",</arg>
<arg>"assessment_id": "${assessment_id}"</arg>
<arg>}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210323 19:03:40.022" level="INFO">${body} = { "type": "risk.assessment.result", "resource": "business.holder", "created_at": "2021-03-23 15:28:56.747Z", "marketplace_id": "f71a8951368a4cc085cf7875ff44e61c", "object": { "result": "APPROVED", "ho...</msg>
<status status="PASS" starttime="20210323 19:03:40.021" endtime="20210323 19:03:40.022"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/admin/internal_operation/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/registration/approval</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210323 19:03:40.022" level="INFO">POST Request using : uri=/admin/internal_operation/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/84c47eb937ae4c86a196733f240b924b/registration/approval, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "risk.assessment.result", "resource": "business.holder", "created_at": "2021-03-23 15:28:56.747Z", "marketplace_id": "f71a8951368a4cc085cf7875ff44e61c", "object": { "result": "APPROVED", "holder_id": "84c47eb937ae4c86a196733f240b924b", "applicant_id": "bcc25a6751c14b52af1340d40dba78c5", "assessment_id": "ef827b30-02d3-4e9a-b89f-9cac65d06e47" } } 
json=None</msg>
<msg timestamp="20210323 19:03:40.258" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210323 19:03:40.022" endtime="20210323 19:03:40.258"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210323 19:03:40.258" level="INFO">{'message': 'Holder approved successfully'}</msg>
<status status="PASS" starttime="20210323 19:03:40.258" endtime="20210323 19:03:40.258"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210323 19:03:40.259" level="INFO">c95293954f32029e</msg>
<status status="PASS" starttime="20210323 19:03:40.258" endtime="20210323 19:03:40.259"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210323 19:03:40.259" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210323 19:03:40.259" endtime="20210323 19:03:40.259"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210323 19:03:40.259" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210323 19:03:40.259" endtime="20210323 19:03:40.260"></status>
</kw>
<status status="PASS" starttime="20210323 19:03:40.019" endtime="20210323 19:03:40.260"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210323 19:03:40.260" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210323 19:03:40.260" endtime="20210323 19:03:40.260"></status>
</kw>
<kw name="buscar account por holder" library="accounts_get_accounts_by_holder">
<kw name="conectar accounts" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accounts</arg>
<arg>url=${account_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210323 19:03:40.261" level="INFO">Creating Session using : alias=accounts, url=https://banking-accounts-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210323 19:03:40.261" endtime="20210323 19:03:40.261"></status>
</kw>
<status status="PASS" starttime="20210323 19:03:40.260" endtime="20210323 19:03:40.261"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accounts</arg>
<arg>/marketplaces/${marketplace_external_key}/holders/${holder_external_key}/accounts</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210323 19:03:40.262" level="INFO">GET Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/holders/84c47eb937ae4c86a196733f240b924b/accounts, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210323 19:03:40.850" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210323 19:03:40.261" endtime="20210323 19:03:40.850"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210323 19:03:40.851" level="INFO">{'items': [{'id': '36e44aceb85f4a388d46b06330273a71', 'holder': '84c47eb937ae4c86a196733f240b924b', 'balance': '0.00', 'currency': 'BRL', 'routing_number': '001', 'number': '6875155740', 'status': 'active', 'metadata': {}, 'created_at': '2021-03-23T22:03:40.416295', 'updated_at': '2021-03-23T22:03:40.416295', 'primary': True, 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'uri': '/v2/marketplaces/f71a8951368a4cc085cf7875ff44e61c/accounts/36e44aceb85f4a388d46b06330273a71', 'resource': 'payment_account'}], 'has_more': False, 'limit': 100, 'total_pages': 1, 'page': 1, 'offset': 0, 'total': '1', 'query_count': '1'}</msg>
<status status="PASS" starttime="20210323 19:03:40.851" endtime="20210323 19:03:40.851"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210323 19:03:40.851" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210323 19:03:40.851" endtime="20210323 19:03:40.851"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["id"]}</arg>
</arguments>
<assign>
<var>${account_external_key}</var>
</assign>
<msg timestamp="20210323 19:03:40.852" level="INFO">${account_external_key} = 36e44aceb85f4a388d46b06330273a71</msg>
<status status="PASS" starttime="20210323 19:03:40.852" endtime="20210323 19:03:40.852"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_external_key}</arg>
</arguments>
<msg timestamp="20210323 19:03:40.852" level="INFO">${account_external_key} = 36e44aceb85f4a388d46b06330273a71</msg>
<status status="PASS" starttime="20210323 19:03:40.852" endtime="20210323 19:03:40.852"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["number"]}</arg>
</arguments>
<assign>
<var>${account_number}</var>
</assign>
<msg timestamp="20210323 19:03:40.853" level="INFO">${account_number} = 6875155740</msg>
<status status="PASS" starttime="20210323 19:03:40.853" endtime="20210323 19:03:40.853"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_number}</arg>
</arguments>
<msg timestamp="20210323 19:03:40.853" level="INFO">${account_number} = 6875155740</msg>
<status status="PASS" starttime="20210323 19:03:40.853" endtime="20210323 19:03:40.854"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["routing_number"]}</arg>
</arguments>
<assign>
<var>${account_routing_number}</var>
</assign>
<msg timestamp="20210323 19:03:40.854" level="INFO">${account_routing_number} = 001</msg>
<status status="PASS" starttime="20210323 19:03:40.854" endtime="20210323 19:03:40.854"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_routing_number}</arg>
</arguments>
<msg timestamp="20210323 19:03:40.855" level="INFO">${account_routing_number} = 001</msg>
<status status="PASS" starttime="20210323 19:03:40.854" endtime="20210323 19:03:40.855"></status>
</kw>
<status status="PASS" starttime="20210323 19:03:40.260" endtime="20210323 19:03:40.855"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210323 19:03:40.855" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210323 19:03:40.855" endtime="20210323 19:03:40.855"></status>
</kw>
<status status="PASS" starttime="20210323 19:03:37.470" endtime="20210323 19:03:40.855"></status>
</kw>
<status status="PASS" starttime="20210323 19:03:37.470" endtime="20210323 19:03:40.855"></status>
</kw>
<kw name="gerar saldo para account" library="account_generate_balance">
<arguments>
<arg>${account_external_key}</arg>
</arguments>
<kw name="Uuid 4" library="FakerLibrary">
<doc>Generates a random UUID4 string.
:param cast_to: Specify what type the UUID should be cast to. Default is `str`
:type cast_to: callable</doc>
<assign>
<var>${uuid}</var>
</assign>
<msg timestamp="20210323 19:03:40.856" level="INFO">${uuid} = bb92d86b-1080-4c9f-820d-f0fb33f0d078</msg>
<status status="PASS" starttime="20210323 19:03:40.856" endtime="20210323 19:03:40.856"></status>
</kw>
<kw name="conectar accounts" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accounts</arg>
<arg>url=${account_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210323 19:03:40.856" level="INFO">Creating Session using : alias=accounts, url=https://banking-accounts-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210323 19:03:40.856" endtime="20210323 19:03:40.857"></status>
</kw>
<status status="PASS" starttime="20210323 19:03:40.856" endtime="20210323 19:03:40.857"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210323 19:03:40.857" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210323 19:03:40.857" endtime="20210323 19:03:40.857"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"operations": [</arg>
<arg>{</arg>
<arg>"amount": 9000000000000,</arg>
<arg>"authorization_code": "${uuid}",</arg>
<arg>"transaction_id": "${uuid}",</arg>
<arg>"id": "${uuid}",</arg>
<arg>"id_checking_account": "${account_external_key}",</arg>
<arg>"transfer_date": "2020-02-20T20:58:06.510Z",</arg>
<arg>"fee": 0,</arg>
<arg>"description": "Teste",</arg>
<arg>"object_type": "transfer",</arg>
<arg>"object_id": "${uuid}",</arg>
<arg>"dflag": "ACTIVE",</arg>
<arg>"created_at": "2019-10-14T20:58:06.510Z",</arg>
<arg>"type": "Transfer"</arg>
<arg>}</arg>
<arg>],</arg>
<arg>"reference_id": "Criando saldo na account"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210323 19:03:40.858" level="INFO">${body} = { "operations": [ { "amount": 9000000000000, "authorization_code": "bb92d86b-1080-4c9f-820d-f0fb33f0d078", "transaction_id": "bb92d86b-1080-4c9f-820d-f0fb33f0d078", "id": "bb92d86b-1080-4c9f-820d-f0fb...</msg>
<status status="PASS" starttime="20210323 19:03:40.857" endtime="20210323 19:03:40.858"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accounts</arg>
<arg>/admin/internal_operation/authorization/${uuid}</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210323 19:03:40.858" level="INFO">POST Request using : uri=/admin/internal_operation/authorization/bb92d86b-1080-4c9f-820d-f0fb33f0d078, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "operations": [ { "amount": 9000000000000, "authorization_code": "bb92d86b-1080-4c9f-820d-f0fb33f0d078", "transaction_id": "bb92d86b-1080-4c9f-820d-f0fb33f0d078", "id": "bb92d86b-1080-4c9f-820d-f0fb33f0d078", "id_checking_account": "36e44aceb85f4a388d46b06330273a71", "transfer_date": "2020-02-20T20:58:06.510Z", "fee": 0, "description": "Teste", "object_type": "transfer", "object_id": "bb92d86b-1080-4c9f-820d-f0fb33f0d078", "dflag": "ACTIVE", "created_at": "2019-10-14T20:58:06.510Z", "type": "Transfer" } ], "reference_id": "Criando saldo na account" } 
json=None</msg>
<msg timestamp="20210323 19:03:41.511" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210323 19:03:40.858" endtime="20210323 19:03:41.511"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.status_code}' == 200</arg>
<arg>Log</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210323 19:03:41.511" endtime="20210323 19:03:41.511"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.status_code}' == 200</arg>
<arg>Log</arg>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<status status="PASS" starttime="20210323 19:03:41.512" endtime="20210323 19:03:41.512"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.status_code}' == 200</arg>
<arg>Log</arg>
<arg>${response.status_code}</arg>
</arguments>
<status status="PASS" starttime="20210323 19:03:41.512" endtime="20210323 19:03:41.513"></status>
</kw>
<status status="PASS" starttime="20210323 19:03:40.855" endtime="20210323 19:03:41.513"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${pix_type}' == 'phone'</arg>
<arg>criar chave pix</arg>
<arg>${pix_type}</arg>
<arg>${phone_pix}</arg>
<arg>ELSE IF</arg>
<arg>'${pix_type}' == 'email'</arg>
<arg>criar chave pix</arg>
<arg>${pix_type}</arg>
<arg>${email_pix}</arg>
<arg>ELSE IF</arg>
<arg>'${pix_type}' == 'evp'</arg>
<arg>criar chave pix</arg>
<arg>${pix_type}</arg>
<arg>${EMPTY}</arg>
<arg>ELSE IF</arg>
<arg>'${pix_type}' == 'national_registration'</arg>
<arg>criar chave pix</arg>
<arg>${pix_type}</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw name="criar chave pix" library="pix_dict_create_entry">
<arguments>
<arg>${pix_type}</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210323 19:03:41.515" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210323 19:03:41.514" endtime="20210323 19:03:41.515"></status>
</kw>
<status status="PASS" starttime="20210323 19:03:41.514" endtime="20210323 19:03:41.515"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${type}</arg>
</arguments>
<msg timestamp="20210323 19:03:41.515" level="INFO">${type} = national_registration</msg>
<status status="PASS" starttime="20210323 19:03:41.515" endtime="20210323 19:03:41.515"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210323 19:03:41.516" level="INFO">${value} = </msg>
<status status="PASS" starttime="20210323 19:03:41.516" endtime="20210323 19:03:41.516"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210323 19:03:41.516" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210323 19:03:41.516" endtime="20210323 19:03:41.516"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "${type}",</arg>
<arg>"value": "${value}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210323 19:03:41.517" level="INFO">${body} = { "type": "national_registration", "value": "" }</msg>
<status status="PASS" starttime="20210323 19:03:41.517" endtime="20210323 19:03:41.517"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210323 19:03:41.518" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/84c47eb937ae4c86a196733f240b924b/accounts/36e44aceb85f4a388d46b06330273a71/entries, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "national_registration", "value": "" } 
json=None</msg>
<msg timestamp="20210323 19:03:43.125" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210323 19:03:41.517" endtime="20210323 19:03:43.125"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210323 19:03:43.126" level="INFO">{'id': 'b8093bb38217425a9e59bd17a4a91ff8', 'status': 'active', 'created_at': '2021-03-23T07:03:42.380', 'updated_at': '2021-03-23T07:03:42.380', 'key': {'value': '86957413209', 'type': 'national_registration'}, 'account': {'id': '36e44aceb85f4a388d46b06330273a71', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': '84c47eb937ae4c86a196733f240b924b', 'owner': {'name': 'Holder de teste', 'national_registration': '86957413209', 'type': 'individual'}, 'routing_number': '001', 'number': '6875155740', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}, 'resource': 'pix.entry'}</msg>
<status status="PASS" starttime="20210323 19:03:43.126" endtime="20210323 19:03:43.126"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210323 19:03:43.127" level="INFO">7c5efec020c7352f</msg>
<status status="PASS" starttime="20210323 19:03:43.127" endtime="20210323 19:03:43.127"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210323 19:03:43.128" level="INFO">201</msg>
<status status="PASS" starttime="20210323 19:03:43.127" endtime="20210323 19:03:43.128"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210323 19:03:43.128" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210323 19:03:43.128" endtime="20210323 19:03:43.129"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${entry_external_key}</var>
</assign>
<msg timestamp="20210323 19:03:43.129" level="INFO">${entry_external_key} = b8093bb38217425a9e59bd17a4a91ff8</msg>
<status status="PASS" starttime="20210323 19:03:43.129" endtime="20210323 19:03:43.129"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${entry_external_key}</arg>
</arguments>
<msg timestamp="20210323 19:03:43.130" level="INFO">${entry_external_key} = b8093bb38217425a9e59bd17a4a91ff8</msg>
<status status="PASS" starttime="20210323 19:03:43.130" endtime="20210323 19:03:43.130"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["key"]["value"]}</arg>
</arguments>
<assign>
<var>${entry_key_value}</var>
</assign>
<msg timestamp="20210323 19:03:43.131" level="INFO">${entry_key_value} = 86957413209</msg>
<status status="PASS" starttime="20210323 19:03:43.130" endtime="20210323 19:03:43.131"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${entry_key_value}</arg>
</arguments>
<msg timestamp="20210323 19:03:43.131" level="INFO">${entry_key_value} = 86957413209</msg>
<status status="PASS" starttime="20210323 19:03:43.131" endtime="20210323 19:03:43.131"></status>
</kw>
<status status="PASS" starttime="20210323 19:03:41.514" endtime="20210323 19:03:43.131"></status>
</kw>
<status status="PASS" starttime="20210323 19:03:41.513" endtime="20210323 19:03:43.131"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${pix_type}' == 'phone'</arg>
<arg>buscar verification code</arg>
<arg>${holder_external_key}</arg>
<arg>${account_external_key}</arg>
<arg>${entry_external_key}</arg>
<arg>ELSE IF</arg>
<arg>'${pix_type}' == 'email'</arg>
<arg>buscar verification code</arg>
<arg>${holder_external_key}</arg>
<arg>${account_external_key}</arg>
<arg>${entry_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210323 19:03:43.132" endtime="20210323 19:03:43.132"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${pix_type}' == 'phone'</arg>
<arg>confirmar propriedade da chave pix</arg>
<arg>${verification_code}</arg>
<arg>${holder_external_key}</arg>
<arg>${account_external_key}</arg>
<arg>${entry_external_key}</arg>
<arg>ELSE IF</arg>
<arg>'${pix_type}' == 'email'</arg>
<arg>confirmar propriedade da chave pix</arg>
<arg>${verification_code}</arg>
<arg>${holder_external_key}</arg>
<arg>${account_external_key}</arg>
<arg>${entry_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210323 19:03:43.132" endtime="20210323 19:03:43.132"></status>
</kw>
<status status="PASS" starttime="20210323 19:03:37.467" endtime="20210323 19:03:43.133"></status>
</kw>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<arguments>
<arg>result_format=datetime</arg>
</arguments>
<assign>
<var>${date}</var>
</assign>
<msg timestamp="20210323 19:03:43.134" level="INFO">${date} = 2021-03-23 19:03:43.133773</msg>
<status status="PASS" starttime="20210323 19:03:43.133" endtime="20210323 19:03:43.134"></status>
</kw>
<kw name="Convert Date" library="DateTime">
<doc>Converts between supported `date formats`.</doc>
<arguments>
<arg>${date}</arg>
<arg>result_format=%Y%m%d%H%M</arg>
</arguments>
<assign>
<var>${datetime}</var>
</assign>
<msg timestamp="20210323 19:03:43.135" level="INFO">${datetime} = 202103231903</msg>
<status status="PASS" starttime="20210323 19:03:43.134" endtime="20210323 19:03:43.135"></status>
</kw>
<kw name="Random Number" library="FakerLibrary">
<doc>Returns a random number with 1 digit (default, when digits==None),
a random number with 0 to given number of digits, or a random number
with given number to given number of digits (when ``fix_len==True``).</doc>
<arguments>
<arg>digits=23</arg>
<arg>fix_len=True</arg>
</arguments>
<assign>
<var>${random_number_message_id}</var>
</assign>
<msg timestamp="20210323 19:03:43.136" level="INFO">${random_number_message_id} = 63429096475505405923971</msg>
<status status="PASS" starttime="20210323 19:03:43.135" endtime="20210323 19:03:43.136"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>M19468242${random_number_message_id}</arg>
</arguments>
<assign>
<var>${message_id}</var>
</assign>
<msg timestamp="20210323 19:03:43.136" level="INFO">${message_id} = M1946824263429096475505405923971</msg>
<status status="PASS" starttime="20210323 19:03:43.136" endtime="20210323 19:03:43.136"></status>
</kw>
<kw name="Random Number" library="FakerLibrary">
<doc>Returns a random number with 1 digit (default, when digits==None),
a random number with 0 to given number of digits, or a random number
with given number to given number of digits (when ``fix_len==True``).</doc>
<arguments>
<arg>digits=11</arg>
<arg>fix_len=True</arg>
</arguments>
<assign>
<var>${random_number_end_to_end_id}</var>
</assign>
<msg timestamp="20210323 19:03:43.137" level="INFO">${random_number_end_to_end_id} = 10931622893</msg>
<status status="PASS" starttime="20210323 19:03:43.137" endtime="20210323 19:03:43.137"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>E19468242${datetime}${random_number_end_to_end_id}</arg>
</arguments>
<assign>
<var>${end_to_end_id}</var>
</assign>
<msg timestamp="20210323 19:03:43.138" level="INFO">${end_to_end_id} = E1946824220210323190310931622893</msg>
<status status="PASS" starttime="20210323 19:03:43.138" endtime="20210323 19:03:43.138"></status>
</kw>
<kw name="receber pagamento pix admin" library="pix_admin_receive_payment">
<arguments>
<arg>end_to_end_id=${end_to_end_id}</arg>
<arg>message_id=${message_id}</arg>
<arg>account_number=${account_number}</arg>
<arg>psp_code=${psp_code}</arg>
<arg>account_rounting_number=${account_routing_number}</arg>
<arg>account_type=${account_type}</arg>
<arg>national_registration=${national_registration}</arg>
</arguments>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<arguments>
<arg>result_format=datetime</arg>
</arguments>
<assign>
<var>${date}</var>
</assign>
<msg timestamp="20210323 19:03:43.139" level="INFO">${date} = 2021-03-23 19:03:43.138814</msg>
<status status="PASS" starttime="20210323 19:03:43.139" endtime="20210323 19:03:43.139"></status>
</kw>
<kw name="Convert Date" library="DateTime">
<doc>Converts between supported `date formats`.</doc>
<arguments>
<arg>${date}</arg>
<arg>result_format=%Y-%m-%d</arg>
</arguments>
<assign>
<var>${datetime}</var>
</assign>
<msg timestamp="20210323 19:03:43.139" level="INFO">${datetime} = 2021-03-23</msg>
<status status="PASS" starttime="20210323 19:03:43.139" endtime="20210323 19:03:43.139"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${datetime}</arg>
</arguments>
<msg timestamp="20210323 19:03:43.140" level="INFO">2021-03-23</msg>
<status status="PASS" starttime="20210323 19:03:43.140" endtime="20210323 19:03:43.140"></status>
</kw>
<kw name="conectar pix-payments" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-payments</arg>
<arg>url=${pix_payments_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210323 19:03:43.140" level="INFO">Creating Session using : alias=pix-payments, url=https://banking-pix-payments-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210323 19:03:43.140" endtime="20210323 19:03:43.141"></status>
</kw>
<status status="PASS" starttime="20210323 19:03:43.140" endtime="20210323 19:03:43.141"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210323 19:03:43.141" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210323 19:03:43.141" endtime="20210323 19:03:43.141"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"acceptance_date_time": "${datetime}T15:55:43.269Z",</arg>
<arg>"amount": 5000000,</arg>
<arg>"end_to_end_id": "${end_to_end_id}",</arg>
<arg>"message_id": "${message_id}",</arg>
<arg>"receiver": {</arg>
<arg>"account_details": {</arg>
<arg>"number": "${account_number}",</arg>
<arg>"psp": "${psp_code}",</arg>
<arg>"routing_number": "${account_rounting_number}",</arg>
<arg>"type": "${account_type}"</arg>
<arg>},</arg>
<arg>"document": "${national_registration}"</arg>
<arg>},</arg>
<arg>"remittance_information": "Teste Crédito PIX",</arg>
<arg>"sender": {</arg>
<arg>"account_details": {</arg>
<arg>"number": "5601560",</arg>
<arg>"psp": "60746958",</arg>
<arg>"routing_number": "001",</arg>
<arg>"type": "cacc"</arg>
<arg>},</arg>
<arg>"document": "34772935177",</arg>
<arg>"identification": "Test Sender",</arg>
<arg>"name": "Carlos Drummont"</arg>
<arg>}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210323 19:03:43.142" level="INFO">${body} = { "acceptance_date_time": "2021-03-23T15:55:43.269Z", "amount": 5000000, "end_to_end_id": "E1946824220210323190310931622893", "message_id": "M1946824263429096475505405923971", "receiver": { "account_d...</msg>
<status status="PASS" starttime="20210323 19:03:43.141" endtime="20210323 19:03:43.142"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-payments</arg>
<arg>/admin/internal_operation/pix</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210323 19:03:43.142" level="INFO">POST Request using : uri=/admin/internal_operation/pix, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "acceptance_date_time": "2021-03-23T15:55:43.269Z", "amount": 5000000, "end_to_end_id": "E1946824220210323190310931622893", "message_id": "M1946824263429096475505405923971", "receiver": { "account_details": { "number": "6875155740", "psp": "19468242", "routing_number": "001", "type": "cacc" }, "document": "86957413209" }, "remittance_information": "Teste Crédito PIX", "sender": { "account_details": { "number": "5601560", "psp": "60746958", "routing_number": "001", "type": "cacc" }, "document": "34772935177", "identification": "Test Sender", "name": "Carlos Drummont" } } 
json=None</msg>
<msg timestamp="20210323 19:03:43.826" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210323 19:03:43.142" endtime="20210323 19:03:43.826"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210323 19:03:43.827" level="INFO">{'id': '85a106c1dc584e4490a21702d6b45477', 'resource': 'pix_transaction'}</msg>
<status status="PASS" starttime="20210323 19:03:43.827" endtime="20210323 19:03:43.827"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210323 19:03:43.828" level="INFO">358eb1c67b6123f3</msg>
<status status="PASS" starttime="20210323 19:03:43.828" endtime="20210323 19:03:43.828"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210323 19:03:43.829" level="INFO">201</msg>
<status status="PASS" starttime="20210323 19:03:43.828" endtime="20210323 19:03:43.829"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210323 19:03:43.829" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210323 19:03:43.829" endtime="20210323 19:03:43.830"></status>
</kw>
<status status="PASS" starttime="20210323 19:03:43.138" endtime="20210323 19:03:43.830"></status>
</kw>
<kw name="criar chave pix ativa" library="pix_dict_create_active_key_pix">
<arguments>
<arg>individual</arg>
<arg>national_registration</arg>
</arguments>
<kw name="Random Number" library="FakerLibrary">
<doc>Returns a random number with 1 digit (default, when digits==None),
a random number with 0 to given number of digits, or a random number
with given number to given number of digits (when ``fix_len==True``).</doc>
<arguments>
<arg>digits=8</arg>
<arg>fix_len=True</arg>
</arguments>
<assign>
<var>${phone}</var>
</assign>
<msg timestamp="20210323 19:03:43.832" level="INFO">${phone} = 39239974</msg>
<status status="PASS" starttime="20210323 19:03:43.831" endtime="20210323 19:03:43.832"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>+55219${phone}</arg>
</arguments>
<assign>
<var>${phone_pix}</var>
</assign>
<msg timestamp="20210323 19:03:43.832" level="INFO">${phone_pix} = +5521939239974</msg>
<status status="PASS" starttime="20210323 19:03:43.832" endtime="20210323 19:03:43.832"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${phone_pix}</arg>
</arguments>
<msg timestamp="20210323 19:03:43.832" level="INFO">${phone_pix} = +5521939239974</msg>
<status status="PASS" starttime="20210323 19:03:43.832" endtime="20210323 19:03:43.832"></status>
</kw>
<kw name="Email" library="FakerLibrary">
<assign>
<var>${email_pix}</var>
</assign>
<msg timestamp="20210323 19:03:43.833" level="INFO">${email_pix} = isabella89@sales.br</msg>
<status status="PASS" starttime="20210323 19:03:43.833" endtime="20210323 19:03:43.833"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${email_pix}</arg>
</arguments>
<msg timestamp="20210323 19:03:43.834" level="INFO">${email_pix} = isabella89@sales.br</msg>
<status status="PASS" starttime="20210323 19:03:43.833" endtime="20210323 19:03:43.834"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${holder_type}' == 'business'</arg>
<arg>criar holder business ativo</arg>
<arg>ELSE IF</arg>
<arg>'${holder_type}' == 'individual'</arg>
<arg>criar holder individual ativo</arg>
</arguments>
<kw name="criar holder individual ativo" library="accreditation_create_holder_active">
<kw name="conectar accreditation" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accreditation</arg>
<arg>url=${accreditation_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210323 19:03:43.836" level="INFO">Creating Session using : alias=accreditation, url=https://banking-accreditation-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210323 19:03:43.836" endtime="20210323 19:03:43.836"></status>
</kw>
<status status="PASS" starttime="20210323 19:03:43.835" endtime="20210323 19:03:43.836"></status>
</kw>
<kw name="Cpf" library="FakerLibrary">
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210323 19:03:43.836" level="INFO">${national_registration} = 902.846.135-33</msg>
<status status="PASS" starttime="20210323 19:03:43.836" endtime="20210323 19:03:43.836"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${national_registration}</arg>
<arg>.</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210323 19:03:43.837" level="INFO">${national_registration} = 902846135-33</msg>
<status status="PASS" starttime="20210323 19:03:43.837" endtime="20210323 19:03:43.837"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${national_registration}</arg>
<arg>-</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210323 19:03:43.837" level="INFO">${national_registration} = 90284613533</msg>
<status status="PASS" starttime="20210323 19:03:43.837" endtime="20210323 19:03:43.837"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${national_registration}</arg>
</arguments>
<msg timestamp="20210323 19:03:43.838" level="INFO">${national_registration} = 90284613533</msg>
<status status="PASS" starttime="20210323 19:03:43.838" endtime="20210323 19:03:43.838"></status>
</kw>
<kw name="Rg" library="FakerLibrary">
<doc>Brazilian RG, return plain numbers.
Check:  https://www.ngmatematica.com/2014/02/como-determinar-o-digito-verificador-do.html</doc>
<assign>
<var>${identity_card}</var>
</assign>
<msg timestamp="20210323 19:03:43.838" level="INFO">${identity_card} = 172386056</msg>
<status status="PASS" starttime="20210323 19:03:43.838" endtime="20210323 19:03:43.838"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${identity_card}</arg>
</arguments>
<msg timestamp="20210323 19:03:43.839" level="INFO">${identity_card} = 172386056</msg>
<status status="PASS" starttime="20210323 19:03:43.839" endtime="20210323 19:03:43.839"></status>
</kw>
<kw name="criar holder individual" library="accreditation_post_holder_individual">
<arguments>
<arg>holder_type=individual</arg>
<arg>holder_name=${holder_name}</arg>
<arg>email=${email}</arg>
<arg>national_registration=${national_registration}</arg>
<arg>revenue=${revenue}</arg>
<arg>birthday=${birthday}</arg>
<arg>mothers_name=${mothers_name}</arg>
<arg>identity_card=${identity_card}</arg>
<arg>pep=false</arg>
<arg>cbo=${cbo}</arg>
</arguments>
<kw name="conectar accreditation" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accreditation</arg>
<arg>url=${accreditation_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210323 19:03:43.840" level="INFO">Creating Session using : alias=accreditation, url=https://banking-accreditation-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210323 19:03:43.840" endtime="20210323 19:03:43.841"></status>
</kw>
<status status="PASS" starttime="20210323 19:03:43.840" endtime="20210323 19:03:43.841"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_type}</arg>
</arguments>
<msg timestamp="20210323 19:03:43.841" level="INFO">${holder_type} = individual</msg>
<status status="PASS" starttime="20210323 19:03:43.841" endtime="20210323 19:03:43.841"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_name}</arg>
</arguments>
<msg timestamp="20210323 19:03:43.842" level="INFO">${holder_name} = Holder de teste</msg>
<status status="PASS" starttime="20210323 19:03:43.841" endtime="20210323 19:03:43.842"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210323 19:03:43.842" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210323 19:03:43.842" endtime="20210323 19:03:43.842"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "${holder_type}",</arg>
<arg>"name": "${holder_name}",</arg>
<arg>"email": "${email}",</arg>
<arg>"national_registration": "${national_registration}",</arg>
<arg>"revenue": ${revenue},</arg>
<arg>"birthday": "${birthday}",</arg>
<arg>"mothers_name": "${mothers_name}",</arg>
<arg>"identity_card": "${identity_card}",</arg>
<arg>"pep": false,</arg>
<arg>"cbo": ${cbo}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210323 19:03:43.843" level="INFO">${body} = { "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "90284613533", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder",...</msg>
<status status="PASS" starttime="20210323 19:03:43.842" endtime="20210323 19:03:43.843"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210323 19:03:43.843" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "90284613533", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder", "identity_card": "172386056", "pep": false, "cbo": 821450 } 
json=None</msg>
<msg timestamp="20210323 19:03:44.560" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210323 19:03:43.843" endtime="20210323 19:03:44.560"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210323 19:03:44.562" level="INFO">{'id': '803a335cfd7247f789ee6915d0b9dbf9', 'name': 'Holder de teste', 'revenue': 5500.0, 'email': 'teste@teste.com.br', 'status': 'waiting_info_and_documents', 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'marketplace_name': 'Marketplace de Teste', 'created_at': '2021-03-23T19:03:44.678816', 'updated_at': '2021-03-23T19:03:44.678818', 'type': 'individual', 'national_registration': '90284613533', 'birthday': '1988-04-23', 'mothers_name': 'Mãe do Holder', 'identity_card': '172386056', 'pep': False, 'cbo': '821450', '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/803a335cfd7247f789ee6915d0b9dbf9', 'type': 'GET'}, 'phones': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/803a335cfd7247f789ee6915d0b9dbf9/phones', 'type': 'GET'}, 'addresses': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/803a335cfd7247f789ee6915d0b9dbf9/addresses', 'type': 'GET'}, 'documents': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/803a335cfd7247f789ee6915d0b9dbf9/documents', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210323 19:03:44.561" endtime="20210323 19:03:44.563"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210323 19:03:44.565" level="INFO">75c80faf88179abc</msg>
<status status="PASS" starttime="20210323 19:03:44.564" endtime="20210323 19:03:44.565"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${body}</arg>
</arguments>
<msg timestamp="20210323 19:03:44.567" level="INFO">{ "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "90284613533", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder", "identity_card": "172386056", "pep": false, "cbo": 821450 }</msg>
<status status="PASS" starttime="20210323 19:03:44.566" endtime="20210323 19:03:44.567"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210323 19:03:44.568" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210323 19:03:44.567" endtime="20210323 19:03:44.568"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${holder_external_key}</var>
</assign>
<msg timestamp="20210323 19:03:44.570" level="INFO">${holder_external_key} = 803a335cfd7247f789ee6915d0b9dbf9</msg>
<status status="PASS" starttime="20210323 19:03:44.569" endtime="20210323 19:03:44.570"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_external_key}</arg>
</arguments>
<msg timestamp="20210323 19:03:44.572" level="INFO">${holder_external_key} = 803a335cfd7247f789ee6915d0b9dbf9</msg>
<status status="PASS" starttime="20210323 19:03:44.570" endtime="20210323 19:03:44.572"></status>
</kw>
<status status="PASS" starttime="20210323 19:03:43.839" endtime="20210323 19:03:44.572"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_name}</arg>
</arguments>
<msg timestamp="20210323 19:03:44.573" level="INFO">${holder_name} = Holder de teste</msg>
<status status="PASS" starttime="20210323 19:03:44.572" endtime="20210323 19:03:44.573"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210323 19:03:44.574" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210323 19:03:44.573" endtime="20210323 19:03:44.574"></status>
</kw>
<kw name="criar holder phone" library="accreditation_post_holder_phone">
<arguments>
<arg>21</arg>
<arg>51</arg>
<arg>996221236</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210323 19:03:44.576" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210323 19:03:44.576" endtime="20210323 19:03:44.576"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"area_code": "${phone_area_code}",</arg>
<arg>"country_code": "${phone_country_code}",</arg>
<arg>"number": "${phone_number}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210323 19:03:44.577" level="INFO">${body} = { "area_code": "21", "country_code": "51", "number": "996221236" }</msg>
<status status="PASS" starttime="20210323 19:03:44.577" endtime="20210323 19:03:44.577"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/phones</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210323 19:03:44.578" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/803a335cfd7247f789ee6915d0b9dbf9/phones, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "area_code": "21", "country_code": "51", "number": "996221236" } 
json=None</msg>
<msg timestamp="20210323 19:03:44.814" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210323 19:03:44.578" endtime="20210323 19:03:44.814"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210323 19:03:44.814" level="INFO">{'id': 'b5749550814a4757bc225914e3a4fa8a', 'area_code': '21', 'country_code': '51', 'number': '996221236', 'main': True, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/803a335cfd7247f789ee6915d0b9dbf9/phones/b5749550814a4757bc225914e3a4fa8a', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/803a335cfd7247f789ee6915d0b9dbf9', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210323 19:03:44.814" endtime="20210323 19:03:44.815"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210323 19:03:44.815" level="INFO">f88643971768979d</msg>
<status status="PASS" starttime="20210323 19:03:44.815" endtime="20210323 19:03:44.815"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210323 19:03:44.816" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210323 19:03:44.815" endtime="20210323 19:03:44.816"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${phone_external_key}</var>
</assign>
<msg timestamp="20210323 19:03:44.816" level="INFO">${phone_external_key} = b5749550814a4757bc225914e3a4fa8a</msg>
<status status="PASS" starttime="20210323 19:03:44.816" endtime="20210323 19:03:44.816"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${phone_external_key}</arg>
</arguments>
<msg timestamp="20210323 19:03:44.817" level="INFO">${phone_external_key} = b5749550814a4757bc225914e3a4fa8a</msg>
<status status="PASS" starttime="20210323 19:03:44.817" endtime="20210323 19:03:44.817"></status>
</kw>
<status status="PASS" starttime="20210323 19:03:44.575" endtime="20210323 19:03:44.817"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210323 19:03:44.818" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210323 19:03:44.817" endtime="20210323 19:03:44.818"></status>
</kw>
<kw name="criar holder address" library="accreditation_post_holder_address">
<arguments>
<arg>Rio de Janeiro</arg>
<arg>Rio de Janeiro</arg>
<arg>Brasil</arg>
<arg>Bairro de Testes</arg>
<arg>Rua de Testes</arg>
<arg>90</arg>
<arg>apto 200</arg>
<arg>21550987</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210323 19:03:44.819" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210323 19:03:44.818" endtime="20210323 19:03:44.819"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"city": "${city}",</arg>
<arg>"state": "${state}",</arg>
<arg>"country": "${country}",</arg>
<arg>"neighborhood": "${neighborhood}",</arg>
<arg>"street": "${street}",</arg>
<arg>"number": "${number}",</arg>
<arg>"complement": "${complement}",</arg>
<arg>"postal_code": "${postal_code}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210323 19:03:44.819" level="INFO">${body} = { "city": "Rio de Janeiro", "state": "Rio de Janeiro", "country": "Brasil", "neighborhood": "Bairro de Testes", "street": "Rua de Testes", "number": "90", "complement": "apto 200", "postal_code": "215...</msg>
<status status="PASS" starttime="20210323 19:03:44.819" endtime="20210323 19:03:44.819"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/addresses</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210323 19:03:44.820" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/803a335cfd7247f789ee6915d0b9dbf9/addresses, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "city": "Rio de Janeiro", "state": "Rio de Janeiro", "country": "Brasil", "neighborhood": "Bairro de Testes", "street": "Rua de Testes", "number": "90", "complement": "apto 200", "postal_code": "21550987" } 
json=None</msg>
<msg timestamp="20210323 19:03:45.085" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210323 19:03:44.820" endtime="20210323 19:03:45.085"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210323 19:03:45.086" level="INFO">{'id': '6a4d0cac9b384b959f6c031146833673', 'street': 'Rua de Testes', 'number': '90', 'city': 'Rio de Janeiro', 'complement': 'apto 200', 'state': 'Rio de Janeiro', 'neighborhood': 'Bairro de Testes', 'postal_code': '21550987', 'country': 'Brasil', 'main': True, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/803a335cfd7247f789ee6915d0b9dbf9/addresses/6a4d0cac9b384b959f6c031146833673', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/803a335cfd7247f789ee6915d0b9dbf9', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210323 19:03:45.085" endtime="20210323 19:03:45.086"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210323 19:03:45.086" level="INFO">3544956b05164f77</msg>
<status status="PASS" starttime="20210323 19:03:45.086" endtime="20210323 19:03:45.086"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210323 19:03:45.087" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210323 19:03:45.087" endtime="20210323 19:03:45.087"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${address_external_key}</var>
</assign>
<msg timestamp="20210323 19:03:45.088" level="INFO">${address_external_key} = 6a4d0cac9b384b959f6c031146833673</msg>
<status status="PASS" starttime="20210323 19:03:45.087" endtime="20210323 19:03:45.088"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${address_external_key}</arg>
</arguments>
<msg timestamp="20210323 19:03:45.088" level="INFO">${address_external_key} = 6a4d0cac9b384b959f6c031146833673</msg>
<status status="PASS" starttime="20210323 19:03:45.088" endtime="20210323 19:03:45.088"></status>
</kw>
<status status="PASS" starttime="20210323 19:03:44.818" endtime="20210323 19:03:45.088"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210323 19:03:45.089" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210323 19:03:45.089" endtime="20210323 19:03:45.089"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>SELFIE</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210323 19:03:45.090" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210323 19:03:45.090" endtime="20210323 19:03:45.090"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>${EXECDIR}./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210323 19:03:45.090" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210323 19:03:45.091" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210323 19:03:45.090" endtime="20210323 19:03:45.091"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210323 19:03:45.092" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/803a335cfd7247f789ee6915d0b9dbf9/documents?type=SELFIE, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210323 19:03:45.363" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210323 19:03:45.092" endtime="20210323 19:03:45.363"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210323 19:03:45.365" level="INFO">{'id': '9818bf9eff3844188486133515683cab', 'document_type': 'selfie', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/803a335cfd7247f789ee6915d0b9dbf9/documents/9818bf9eff3844188486133515683cab', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/803a335cfd7247f789ee6915d0b9dbf9', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/803a335cfd7247f789ee6915d0b9dbf9/documents/9818bf9eff3844188486133515683cab/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210323 19:03:45.364" endtime="20210323 19:03:45.365"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210323 19:03:45.367" level="INFO">bb73c6c740f856b4</msg>
<status status="PASS" starttime="20210323 19:03:45.367" endtime="20210323 19:03:45.367"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210323 19:03:45.369" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210323 19:03:45.368" endtime="20210323 19:03:45.369"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210323 19:03:45.371" level="INFO">${document_external_key} = 9818bf9eff3844188486133515683cab</msg>
<status status="PASS" starttime="20210323 19:03:45.370" endtime="20210323 19:03:45.371"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210323 19:03:45.372" level="INFO">${document_external_key} = 9818bf9eff3844188486133515683cab</msg>
<status status="PASS" starttime="20210323 19:03:45.371" endtime="20210323 19:03:45.372"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${EXECDIR}./../../images/accreditation/image.jpg</arg>
</arguments>
<status status="PASS" starttime="20210323 19:03:45.372" endtime="20210323 19:03:45.373"></status>
</kw>
<status status="PASS" starttime="20210323 19:03:45.089" endtime="20210323 19:03:45.373"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210323 19:03:45.373" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210323 19:03:45.373" endtime="20210323 19:03:45.373"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>RG_FRENTE</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210323 19:03:45.374" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210323 19:03:45.374" endtime="20210323 19:03:45.374"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>${EXECDIR}./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210323 19:03:45.374" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210323 19:03:45.375" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210323 19:03:45.374" endtime="20210323 19:03:45.375"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210323 19:03:45.376" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/803a335cfd7247f789ee6915d0b9dbf9/documents?type=RG_FRENTE, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210323 19:03:45.652" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210323 19:03:45.375" endtime="20210323 19:03:45.653"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210323 19:03:45.654" level="INFO">{'id': 'f5b13b02293444bb92462fef94598cb2', 'document_type': 'rg_frente', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/803a335cfd7247f789ee6915d0b9dbf9/documents/f5b13b02293444bb92462fef94598cb2', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/803a335cfd7247f789ee6915d0b9dbf9', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/803a335cfd7247f789ee6915d0b9dbf9/documents/f5b13b02293444bb92462fef94598cb2/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210323 19:03:45.653" endtime="20210323 19:03:45.654"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210323 19:03:45.655" level="INFO">7d679fc7b547cf9a</msg>
<status status="PASS" starttime="20210323 19:03:45.655" endtime="20210323 19:03:45.655"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210323 19:03:45.655" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210323 19:03:45.655" endtime="20210323 19:03:45.655"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210323 19:03:45.656" level="INFO">${document_external_key} = f5b13b02293444bb92462fef94598cb2</msg>
<status status="PASS" starttime="20210323 19:03:45.656" endtime="20210323 19:03:45.656"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210323 19:03:45.657" level="INFO">${document_external_key} = f5b13b02293444bb92462fef94598cb2</msg>
<status status="PASS" starttime="20210323 19:03:45.656" endtime="20210323 19:03:45.657"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${EXECDIR}./../../images/accreditation/image.jpg</arg>
</arguments>
<status status="PASS" starttime="20210323 19:03:45.657" endtime="20210323 19:03:45.657"></status>
</kw>
<status status="PASS" starttime="20210323 19:03:45.373" endtime="20210323 19:03:45.658"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210323 19:03:45.658" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210323 19:03:45.658" endtime="20210323 19:03:45.658"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>RG_VERSO</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210323 19:03:45.659" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210323 19:03:45.659" endtime="20210323 19:03:45.659"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>${EXECDIR}./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210323 19:03:45.659" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210323 19:03:45.660" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210323 19:03:45.659" endtime="20210323 19:03:45.660"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210323 19:03:45.661" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/803a335cfd7247f789ee6915d0b9dbf9/documents?type=RG_VERSO, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210323 19:03:45.976" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210323 19:03:45.661" endtime="20210323 19:03:45.976"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210323 19:03:45.977" level="INFO">{'id': '5d8e683838a947458f1233f06f87bb94', 'document_type': 'rg_verso', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/803a335cfd7247f789ee6915d0b9dbf9/documents/5d8e683838a947458f1233f06f87bb94', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/803a335cfd7247f789ee6915d0b9dbf9', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/803a335cfd7247f789ee6915d0b9dbf9/documents/5d8e683838a947458f1233f06f87bb94/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210323 19:03:45.976" endtime="20210323 19:03:45.977"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210323 19:03:45.977" level="INFO">9bfb627c84eb95ec</msg>
<status status="PASS" starttime="20210323 19:03:45.977" endtime="20210323 19:03:45.977"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210323 19:03:45.978" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210323 19:03:45.978" endtime="20210323 19:03:45.978"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210323 19:03:45.979" level="INFO">${document_external_key} = 5d8e683838a947458f1233f06f87bb94</msg>
<status status="PASS" starttime="20210323 19:03:45.978" endtime="20210323 19:03:45.979"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210323 19:03:45.979" level="INFO">${document_external_key} = 5d8e683838a947458f1233f06f87bb94</msg>
<status status="PASS" starttime="20210323 19:03:45.979" endtime="20210323 19:03:45.979"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${EXECDIR}./../../images/accreditation/image.jpg</arg>
</arguments>
<status status="PASS" starttime="20210323 19:03:45.980" endtime="20210323 19:03:45.981"></status>
</kw>
<status status="PASS" starttime="20210323 19:03:45.658" endtime="20210323 19:03:45.981"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210323 19:03:45.981" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210323 19:03:45.981" endtime="20210323 19:03:45.982"></status>
</kw>
<kw name="solicitar aprovação do holder" library="accreditation_request_approval">
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210323 19:03:45.982" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210323 19:03:45.982" endtime="20210323 19:03:45.983"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/approval</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210323 19:03:45.983" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/803a335cfd7247f789ee6915d0b9dbf9/approval, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data=None 
json=None</msg>
<msg timestamp="20210323 19:03:46.273" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210323 19:03:45.983" endtime="20210323 19:03:46.273"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210323 19:03:46.275" level="INFO">{'message': 'Approval request accepted successfully. Processing analysis'}</msg>
<status status="PASS" starttime="20210323 19:03:46.274" endtime="20210323 19:03:46.275"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210323 19:03:46.276" level="INFO">079bda76e292a2a0</msg>
<status status="PASS" starttime="20210323 19:03:46.275" endtime="20210323 19:03:46.276"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210323 19:03:46.277" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210323 19:03:46.276" endtime="20210323 19:03:46.277"></status>
</kw>
<status status="PASS" starttime="20210323 19:03:45.982" endtime="20210323 19:03:46.278"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210323 19:03:46.278" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210323 19:03:46.278" endtime="20210323 19:03:46.279"></status>
</kw>
<kw name="recebendo notificação de aprovação" library="accreditation_risk_notification">
<kw name="Uuid 4" library="FakerLibrary">
<doc>Generates a random UUID4 string.
:param cast_to: Specify what type the UUID should be cast to. Default is `str`
:type cast_to: callable</doc>
<assign>
<var>${assessment_id}</var>
</assign>
<msg timestamp="20210323 19:03:46.280" level="INFO">${assessment_id} = b0b02671-69ce-4e21-bc8c-0ef926249b00</msg>
<status status="PASS" starttime="20210323 19:03:46.280" endtime="20210323 19:03:46.280"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>year</arg>
</arguments>
<assign>
<var>${year}</var>
</assign>
<msg timestamp="20210323 19:03:46.281" level="INFO">${year} = 2021</msg>
<status status="PASS" starttime="20210323 19:03:46.281" endtime="20210323 19:03:46.281"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>month</arg>
</arguments>
<assign>
<var>${month}</var>
</assign>
<msg timestamp="20210323 19:03:46.281" level="INFO">${month} = 03</msg>
<status status="PASS" starttime="20210323 19:03:46.281" endtime="20210323 19:03:46.281"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>day</arg>
</arguments>
<assign>
<var>${day}</var>
</assign>
<msg timestamp="20210323 19:03:46.282" level="INFO">${day} = 23</msg>
<status status="PASS" starttime="20210323 19:03:46.282" endtime="20210323 19:03:46.282"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210323 19:03:46.283" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210323 19:03:46.282" endtime="20210323 19:03:46.283"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "risk.assessment.result",</arg>
<arg>"resource": "business.holder",</arg>
<arg>"created_at": "${year}-${month}-${day} 15:28:56.747Z",</arg>
<arg>"marketplace_id": "${marketplace_external_key}",</arg>
<arg>"object": {</arg>
<arg>"result": "APPROVED",</arg>
<arg>"holder_id": "${holder_external_key}",</arg>
<arg>"applicant_id": "${application_external_key}",</arg>
<arg>"assessment_id": "${assessment_id}"</arg>
<arg>}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210323 19:03:46.284" level="INFO">${body} = { "type": "risk.assessment.result", "resource": "business.holder", "created_at": "2021-03-23 15:28:56.747Z", "marketplace_id": "f71a8951368a4cc085cf7875ff44e61c", "object": { "result": "APPROVED", "ho...</msg>
<status status="PASS" starttime="20210323 19:03:46.283" endtime="20210323 19:03:46.284"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/admin/internal_operation/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/registration/approval</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210323 19:03:46.285" level="INFO">POST Request using : uri=/admin/internal_operation/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/803a335cfd7247f789ee6915d0b9dbf9/registration/approval, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "risk.assessment.result", "resource": "business.holder", "created_at": "2021-03-23 15:28:56.747Z", "marketplace_id": "f71a8951368a4cc085cf7875ff44e61c", "object": { "result": "APPROVED", "holder_id": "803a335cfd7247f789ee6915d0b9dbf9", "applicant_id": "bcc25a6751c14b52af1340d40dba78c5", "assessment_id": "b0b02671-69ce-4e21-bc8c-0ef926249b00" } } 
json=None</msg>
<msg timestamp="20210323 19:03:46.484" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210323 19:03:46.284" endtime="20210323 19:03:46.484"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210323 19:03:46.485" level="INFO">{'message': 'Holder approved successfully'}</msg>
<status status="PASS" starttime="20210323 19:03:46.484" endtime="20210323 19:03:46.485"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210323 19:03:46.486" level="INFO">4a439b2572903cc4</msg>
<status status="PASS" starttime="20210323 19:03:46.485" endtime="20210323 19:03:46.486"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210323 19:03:46.488" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210323 19:03:46.487" endtime="20210323 19:03:46.488"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210323 19:03:46.489" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210323 19:03:46.488" endtime="20210323 19:03:46.489"></status>
</kw>
<status status="PASS" starttime="20210323 19:03:46.279" endtime="20210323 19:03:46.489"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210323 19:03:46.490" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210323 19:03:46.489" endtime="20210323 19:03:46.490"></status>
</kw>
<kw name="buscar account por holder" library="accounts_get_accounts_by_holder">
<kw name="conectar accounts" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accounts</arg>
<arg>url=${account_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210323 19:03:46.492" level="INFO">Creating Session using : alias=accounts, url=https://banking-accounts-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210323 19:03:46.491" endtime="20210323 19:03:46.493"></status>
</kw>
<status status="PASS" starttime="20210323 19:03:46.491" endtime="20210323 19:03:46.493"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accounts</arg>
<arg>/marketplaces/${marketplace_external_key}/holders/${holder_external_key}/accounts</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210323 19:03:46.494" level="INFO">GET Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/holders/803a335cfd7247f789ee6915d0b9dbf9/accounts, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210323 19:03:47.122" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210323 19:03:46.493" endtime="20210323 19:03:47.122"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210323 19:03:47.123" level="INFO">{'items': [{'id': '1c96d1d0c751421081cc3267d5c90b05', 'holder': '803a335cfd7247f789ee6915d0b9dbf9', 'balance': '0.00', 'currency': 'BRL', 'routing_number': '001', 'number': '2633500090', 'status': 'active', 'metadata': {}, 'created_at': '2021-03-23T22:03:46.654451', 'updated_at': '2021-03-23T22:03:46.654451', 'primary': True, 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'uri': '/v2/marketplaces/f71a8951368a4cc085cf7875ff44e61c/accounts/1c96d1d0c751421081cc3267d5c90b05', 'resource': 'payment_account'}], 'has_more': False, 'limit': 100, 'total_pages': 1, 'page': 1, 'offset': 0, 'total': '1', 'query_count': '1'}</msg>
<status status="PASS" starttime="20210323 19:03:47.123" endtime="20210323 19:03:47.123"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210323 19:03:47.124" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210323 19:03:47.123" endtime="20210323 19:03:47.124"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["id"]}</arg>
</arguments>
<assign>
<var>${account_external_key}</var>
</assign>
<msg timestamp="20210323 19:03:47.125" level="INFO">${account_external_key} = 1c96d1d0c751421081cc3267d5c90b05</msg>
<status status="PASS" starttime="20210323 19:03:47.124" endtime="20210323 19:03:47.125"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_external_key}</arg>
</arguments>
<msg timestamp="20210323 19:03:47.125" level="INFO">${account_external_key} = 1c96d1d0c751421081cc3267d5c90b05</msg>
<status status="PASS" starttime="20210323 19:03:47.125" endtime="20210323 19:03:47.125"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["number"]}</arg>
</arguments>
<assign>
<var>${account_number}</var>
</assign>
<msg timestamp="20210323 19:03:47.126" level="INFO">${account_number} = 2633500090</msg>
<status status="PASS" starttime="20210323 19:03:47.125" endtime="20210323 19:03:47.126"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_number}</arg>
</arguments>
<msg timestamp="20210323 19:03:47.126" level="INFO">${account_number} = 2633500090</msg>
<status status="PASS" starttime="20210323 19:03:47.126" endtime="20210323 19:03:47.126"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["routing_number"]}</arg>
</arguments>
<assign>
<var>${account_routing_number}</var>
</assign>
<msg timestamp="20210323 19:03:47.127" level="INFO">${account_routing_number} = 001</msg>
<status status="PASS" starttime="20210323 19:03:47.127" endtime="20210323 19:03:47.127"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_routing_number}</arg>
</arguments>
<msg timestamp="20210323 19:03:47.128" level="INFO">${account_routing_number} = 001</msg>
<status status="PASS" starttime="20210323 19:03:47.127" endtime="20210323 19:03:47.128"></status>
</kw>
<status status="PASS" starttime="20210323 19:03:46.490" endtime="20210323 19:03:47.128"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210323 19:03:47.128" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210323 19:03:47.128" endtime="20210323 19:03:47.129"></status>
</kw>
<status status="PASS" starttime="20210323 19:03:43.835" endtime="20210323 19:03:47.129"></status>
</kw>
<status status="PASS" starttime="20210323 19:03:43.834" endtime="20210323 19:03:47.129"></status>
</kw>
<kw name="gerar saldo para account" library="account_generate_balance">
<arguments>
<arg>${account_external_key}</arg>
</arguments>
<kw name="Uuid 4" library="FakerLibrary">
<doc>Generates a random UUID4 string.
:param cast_to: Specify what type the UUID should be cast to. Default is `str`
:type cast_to: callable</doc>
<assign>
<var>${uuid}</var>
</assign>
<msg timestamp="20210323 19:03:47.130" level="INFO">${uuid} = a1a731ce-0973-4065-8dee-24f9128bbb31</msg>
<status status="PASS" starttime="20210323 19:03:47.129" endtime="20210323 19:03:47.130"></status>
</kw>
<kw name="conectar accounts" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accounts</arg>
<arg>url=${account_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210323 19:03:47.130" level="INFO">Creating Session using : alias=accounts, url=https://banking-accounts-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210323 19:03:47.130" endtime="20210323 19:03:47.131"></status>
</kw>
<status status="PASS" starttime="20210323 19:03:47.130" endtime="20210323 19:03:47.131"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210323 19:03:47.131" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210323 19:03:47.131" endtime="20210323 19:03:47.131"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"operations": [</arg>
<arg>{</arg>
<arg>"amount": 9000000000000,</arg>
<arg>"authorization_code": "${uuid}",</arg>
<arg>"transaction_id": "${uuid}",</arg>
<arg>"id": "${uuid}",</arg>
<arg>"id_checking_account": "${account_external_key}",</arg>
<arg>"transfer_date": "2020-02-20T20:58:06.510Z",</arg>
<arg>"fee": 0,</arg>
<arg>"description": "Teste",</arg>
<arg>"object_type": "transfer",</arg>
<arg>"object_id": "${uuid}",</arg>
<arg>"dflag": "ACTIVE",</arg>
<arg>"created_at": "2019-10-14T20:58:06.510Z",</arg>
<arg>"type": "Transfer"</arg>
<arg>}</arg>
<arg>],</arg>
<arg>"reference_id": "Criando saldo na account"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210323 19:03:47.132" level="INFO">${body} = { "operations": [ { "amount": 9000000000000, "authorization_code": "a1a731ce-0973-4065-8dee-24f9128bbb31", "transaction_id": "a1a731ce-0973-4065-8dee-24f9128bbb31", "id": "a1a731ce-0973-4065-8dee-24f9...</msg>
<status status="PASS" starttime="20210323 19:03:47.131" endtime="20210323 19:03:47.132"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accounts</arg>
<arg>/admin/internal_operation/authorization/${uuid}</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210323 19:03:47.133" level="INFO">POST Request using : uri=/admin/internal_operation/authorization/a1a731ce-0973-4065-8dee-24f9128bbb31, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "operations": [ { "amount": 9000000000000, "authorization_code": "a1a731ce-0973-4065-8dee-24f9128bbb31", "transaction_id": "a1a731ce-0973-4065-8dee-24f9128bbb31", "id": "a1a731ce-0973-4065-8dee-24f9128bbb31", "id_checking_account": "1c96d1d0c751421081cc3267d5c90b05", "transfer_date": "2020-02-20T20:58:06.510Z", "fee": 0, "description": "Teste", "object_type": "transfer", "object_id": "a1a731ce-0973-4065-8dee-24f9128bbb31", "dflag": "ACTIVE", "created_at": "2019-10-14T20:58:06.510Z", "type": "Transfer" } ], "reference_id": "Criando saldo na account" } 
json=None</msg>
<msg timestamp="20210323 19:03:47.764" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210323 19:03:47.132" endtime="20210323 19:03:47.764"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.status_code}' == 200</arg>
<arg>Log</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210323 19:03:47.764" endtime="20210323 19:03:47.765"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.status_code}' == 200</arg>
<arg>Log</arg>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<status status="PASS" starttime="20210323 19:03:47.765" endtime="20210323 19:03:47.765"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.status_code}' == 200</arg>
<arg>Log</arg>
<arg>${response.status_code}</arg>
</arguments>
<status status="PASS" starttime="20210323 19:03:47.766" endtime="20210323 19:03:47.766"></status>
</kw>
<status status="PASS" starttime="20210323 19:03:47.129" endtime="20210323 19:03:47.766"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${pix_type}' == 'phone'</arg>
<arg>criar chave pix</arg>
<arg>${pix_type}</arg>
<arg>${phone_pix}</arg>
<arg>ELSE IF</arg>
<arg>'${pix_type}' == 'email'</arg>
<arg>criar chave pix</arg>
<arg>${pix_type}</arg>
<arg>${email_pix}</arg>
<arg>ELSE IF</arg>
<arg>'${pix_type}' == 'evp'</arg>
<arg>criar chave pix</arg>
<arg>${pix_type}</arg>
<arg>${EMPTY}</arg>
<arg>ELSE IF</arg>
<arg>'${pix_type}' == 'national_registration'</arg>
<arg>criar chave pix</arg>
<arg>${pix_type}</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw name="criar chave pix" library="pix_dict_create_entry">
<arguments>
<arg>${pix_type}</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210323 19:03:47.768" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210323 19:03:47.768" endtime="20210323 19:03:47.769"></status>
</kw>
<status status="PASS" starttime="20210323 19:03:47.768" endtime="20210323 19:03:47.769"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${type}</arg>
</arguments>
<msg timestamp="20210323 19:03:47.770" level="INFO">${type} = national_registration</msg>
<status status="PASS" starttime="20210323 19:03:47.770" endtime="20210323 19:03:47.770"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210323 19:03:47.770" level="INFO">${value} = </msg>
<status status="PASS" starttime="20210323 19:03:47.770" endtime="20210323 19:03:47.770"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210323 19:03:47.771" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210323 19:03:47.771" endtime="20210323 19:03:47.771"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "${type}",</arg>
<arg>"value": "${value}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210323 19:03:47.771" level="INFO">${body} = { "type": "national_registration", "value": "" }</msg>
<status status="PASS" starttime="20210323 19:03:47.771" endtime="20210323 19:03:47.771"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210323 19:03:47.772" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/803a335cfd7247f789ee6915d0b9dbf9/accounts/1c96d1d0c751421081cc3267d5c90b05/entries, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "national_registration", "value": "" } 
json=None</msg>
<msg timestamp="20210323 19:03:49.520" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210323 19:03:47.771" endtime="20210323 19:03:49.520"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210323 19:03:49.521" level="INFO">{'id': '590a4ae44c57493cbd65dbfb174c78c5', 'status': 'active', 'created_at': '2021-03-23T07:03:48.628', 'updated_at': '2021-03-23T07:03:48.628', 'key': {'value': '90284613533', 'type': 'national_registration'}, 'account': {'id': '1c96d1d0c751421081cc3267d5c90b05', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': '803a335cfd7247f789ee6915d0b9dbf9', 'owner': {'name': 'Holder de teste', 'national_registration': '90284613533', 'type': 'individual'}, 'routing_number': '001', 'number': '2633500090', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}, 'resource': 'pix.entry'}</msg>
<status status="PASS" starttime="20210323 19:03:49.521" endtime="20210323 19:03:49.521"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210323 19:03:49.522" level="INFO">6850f47807339f67</msg>
<status status="PASS" starttime="20210323 19:03:49.521" endtime="20210323 19:03:49.522"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210323 19:03:49.522" level="INFO">201</msg>
<status status="PASS" starttime="20210323 19:03:49.522" endtime="20210323 19:03:49.522"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210323 19:03:49.523" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210323 19:03:49.522" endtime="20210323 19:03:49.523"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${entry_external_key}</var>
</assign>
<msg timestamp="20210323 19:03:49.523" level="INFO">${entry_external_key} = 590a4ae44c57493cbd65dbfb174c78c5</msg>
<status status="PASS" starttime="20210323 19:03:49.523" endtime="20210323 19:03:49.523"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${entry_external_key}</arg>
</arguments>
<msg timestamp="20210323 19:03:49.524" level="INFO">${entry_external_key} = 590a4ae44c57493cbd65dbfb174c78c5</msg>
<status status="PASS" starttime="20210323 19:03:49.524" endtime="20210323 19:03:49.524"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["key"]["value"]}</arg>
</arguments>
<assign>
<var>${entry_key_value}</var>
</assign>
<msg timestamp="20210323 19:03:49.525" level="INFO">${entry_key_value} = 90284613533</msg>
<status status="PASS" starttime="20210323 19:03:49.524" endtime="20210323 19:03:49.525"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${entry_key_value}</arg>
</arguments>
<msg timestamp="20210323 19:03:49.525" level="INFO">${entry_key_value} = 90284613533</msg>
<status status="PASS" starttime="20210323 19:03:49.525" endtime="20210323 19:03:49.525"></status>
</kw>
<status status="PASS" starttime="20210323 19:03:47.767" endtime="20210323 19:03:49.525"></status>
</kw>
<status status="PASS" starttime="20210323 19:03:47.766" endtime="20210323 19:03:49.525"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${pix_type}' == 'phone'</arg>
<arg>buscar verification code</arg>
<arg>${holder_external_key}</arg>
<arg>${account_external_key}</arg>
<arg>${entry_external_key}</arg>
<arg>ELSE IF</arg>
<arg>'${pix_type}' == 'email'</arg>
<arg>buscar verification code</arg>
<arg>${holder_external_key}</arg>
<arg>${account_external_key}</arg>
<arg>${entry_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210323 19:03:49.525" endtime="20210323 19:03:49.526"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${pix_type}' == 'phone'</arg>
<arg>confirmar propriedade da chave pix</arg>
<arg>${verification_code}</arg>
<arg>${holder_external_key}</arg>
<arg>${account_external_key}</arg>
<arg>${entry_external_key}</arg>
<arg>ELSE IF</arg>
<arg>'${pix_type}' == 'email'</arg>
<arg>confirmar propriedade da chave pix</arg>
<arg>${verification_code}</arg>
<arg>${holder_external_key}</arg>
<arg>${account_external_key}</arg>
<arg>${entry_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210323 19:03:49.526" endtime="20210323 19:03:49.526"></status>
</kw>
<status status="PASS" starttime="20210323 19:03:43.830" endtime="20210323 19:03:49.526"></status>
</kw>
<kw name="receber pagamento pix admin" library="pix_admin_receive_payment">
<arguments>
<arg>end_to_end_id=${end_to_end_id}</arg>
<arg>message_id=${message_id}</arg>
<arg>account_number=${account_number}</arg>
<arg>psp_code=${psp_code}</arg>
<arg>account_rounting_number=${account_routing_number}</arg>
<arg>account_type=${account_type}</arg>
<arg>national_registration=${national_registration}</arg>
</arguments>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<arguments>
<arg>result_format=datetime</arg>
</arguments>
<assign>
<var>${date}</var>
</assign>
<msg timestamp="20210323 19:03:49.529" level="INFO">${date} = 2021-03-23 19:03:49.528661</msg>
<status status="PASS" starttime="20210323 19:03:49.529" endtime="20210323 19:03:49.529"></status>
</kw>
<kw name="Convert Date" library="DateTime">
<doc>Converts between supported `date formats`.</doc>
<arguments>
<arg>${date}</arg>
<arg>result_format=%Y-%m-%d</arg>
</arguments>
<assign>
<var>${datetime}</var>
</assign>
<msg timestamp="20210323 19:03:49.529" level="INFO">${datetime} = 2021-03-23</msg>
<status status="PASS" starttime="20210323 19:03:49.529" endtime="20210323 19:03:49.530"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${datetime}</arg>
</arguments>
<msg timestamp="20210323 19:03:49.530" level="INFO">2021-03-23</msg>
<status status="PASS" starttime="20210323 19:03:49.530" endtime="20210323 19:03:49.530"></status>
</kw>
<kw name="conectar pix-payments" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-payments</arg>
<arg>url=${pix_payments_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210323 19:03:49.530" level="INFO">Creating Session using : alias=pix-payments, url=https://banking-pix-payments-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210323 19:03:49.530" endtime="20210323 19:03:49.531"></status>
</kw>
<status status="PASS" starttime="20210323 19:03:49.530" endtime="20210323 19:03:49.531"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210323 19:03:49.531" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210323 19:03:49.531" endtime="20210323 19:03:49.531"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"acceptance_date_time": "${datetime}T15:55:43.269Z",</arg>
<arg>"amount": 5000000,</arg>
<arg>"end_to_end_id": "${end_to_end_id}",</arg>
<arg>"message_id": "${message_id}",</arg>
<arg>"receiver": {</arg>
<arg>"account_details": {</arg>
<arg>"number": "${account_number}",</arg>
<arg>"psp": "${psp_code}",</arg>
<arg>"routing_number": "${account_rounting_number}",</arg>
<arg>"type": "${account_type}"</arg>
<arg>},</arg>
<arg>"document": "${national_registration}"</arg>
<arg>},</arg>
<arg>"remittance_information": "Teste Crédito PIX",</arg>
<arg>"sender": {</arg>
<arg>"account_details": {</arg>
<arg>"number": "5601560",</arg>
<arg>"psp": "60746958",</arg>
<arg>"routing_number": "001",</arg>
<arg>"type": "cacc"</arg>
<arg>},</arg>
<arg>"document": "34772935177",</arg>
<arg>"identification": "Test Sender",</arg>
<arg>"name": "Carlos Drummont"</arg>
<arg>}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210323 19:03:49.532" level="INFO">${body} = { "acceptance_date_time": "2021-03-23T15:55:43.269Z", "amount": 5000000, "end_to_end_id": "E1946824220210323190310931622893", "message_id": "M1946824263429096475505405923971", "receiver": { "account_d...</msg>
<status status="PASS" starttime="20210323 19:03:49.531" endtime="20210323 19:03:49.532"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-payments</arg>
<arg>/admin/internal_operation/pix</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210323 19:03:49.533" level="INFO">POST Request using : uri=/admin/internal_operation/pix, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "acceptance_date_time": "2021-03-23T15:55:43.269Z", "amount": 5000000, "end_to_end_id": "E1946824220210323190310931622893", "message_id": "M1946824263429096475505405923971", "receiver": { "account_details": { "number": "2633500090", "psp": "19468242", "routing_number": "001", "type": "cacc" }, "document": "90284613533" }, "remittance_information": "Teste Crédito PIX", "sender": { "account_details": { "number": "5601560", "psp": "60746958", "routing_number": "001", "type": "cacc" }, "document": "34772935177", "identification": "Test Sender", "name": "Carlos Drummont" } } 
json=None</msg>
<msg timestamp="20210323 19:03:50.265" level="INFO">${response} = &lt;Response [409]&gt;</msg>
<status status="PASS" starttime="20210323 19:03:49.532" endtime="20210323 19:03:50.265"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210323 19:03:50.266" level="INFO">{'code': 4001, 'status': 'conflict', 'type': 'precondition_failed', 'message': 'Duplicated endToEndId', 'category': 'business', 'status_code': 409}</msg>
<status status="PASS" starttime="20210323 19:03:50.265" endtime="20210323 19:03:50.266"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210323 19:03:50.266" level="INFO">c7f36243ea481242</msg>
<status status="PASS" starttime="20210323 19:03:50.266" endtime="20210323 19:03:50.266"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210323 19:03:50.267" level="INFO">409</msg>
<status status="PASS" starttime="20210323 19:03:50.267" endtime="20210323 19:03:50.267"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210323 19:03:50.267" level="INFO">${response} = &lt;Response [409]&gt;</msg>
<status status="PASS" starttime="20210323 19:03:50.267" endtime="20210323 19:03:50.267"></status>
</kw>
<status status="PASS" starttime="20210323 19:03:49.528" endtime="20210323 19:03:50.267"></status>
</kw>
<kw name="validar conflict" library="conflict">
<arguments>
<arg>message=Duplicated endToEndId</arg>
<arg>message_code=4001</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando response precondition failed</arg>
</arguments>
<msg timestamp="20210323 19:03:50.271" level="INFO">Validando response precondition failed</msg>
<status status="PASS" starttime="20210323 19:03:50.269" endtime="20210323 19:03:50.271"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>409</arg>
</arguments>
<msg timestamp="20210323 19:03:50.271" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210323 19:03:50.271" endtime="20210323 19:03:50.271"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["status"]}</arg>
<arg>conflict</arg>
</arguments>
<status status="PASS" starttime="20210323 19:03:50.271" endtime="20210323 19:03:50.272"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["category"]}</arg>
<arg>business</arg>
</arguments>
<status status="PASS" starttime="20210323 19:03:50.272" endtime="20210323 19:03:50.272"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.json()["code"]}</arg>
<arg>${message_code}</arg>
</arguments>
<msg timestamp="20210323 19:03:50.272" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210323 19:03:50.272" endtime="20210323 19:03:50.273"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.json()["status_code"]}</arg>
<arg>409</arg>
</arguments>
<msg timestamp="20210323 19:03:50.273" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210323 19:03:50.273" endtime="20210323 19:03:50.273"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["message"]}</arg>
<arg>${message}</arg>
</arguments>
<status status="PASS" starttime="20210323 19:03:50.273" endtime="20210323 19:03:50.273"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["type"]}</arg>
<arg>precondition_failed</arg>
</arguments>
<status status="PASS" starttime="20210323 19:03:50.274" endtime="20210323 19:03:50.274"></status>
</kw>
<status status="PASS" starttime="20210323 19:03:50.268" endtime="20210323 19:03:50.274"></status>
</kw>
<doc>Não permitir o recebimento de PIX com o mesmo End to End</doc>
<tags>
<tag>smoke_test</tag>
</tags>
<status status="PASS" starttime="20210323 19:03:37.466" endtime="20210323 19:03:50.275" critical="yes"></status>
</test>
<doc>Funcionalidade: Recebimento de PIX
Eu, como um Holder, portador de uma conta ativa em Banking
Desejo receber um pagamento PIX</doc>
<status status="PASS" starttime="20210323 19:03:36.911" endtime="20210323 19:03:50.277"></status>
</suite>
<statistics>
<total>
<stat pass="1" fail="0">Critical Tests</stat>
<stat pass="1" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="1" fail="0">smoke_test</stat>
</tag>
<suite>
<stat pass="1" fail="0" id="s1" name="Receber Pagamento PIX">Receber Pagamento PIX</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
